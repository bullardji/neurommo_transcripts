Kind: captions
Language: en
okay we are
live my desktop is tearing itself apart
live my desktop is tearing itself apart
but uh I think the mic is far enough
but uh I think the mic is far enough
away from it that you're not hearing
away from it that you're not hearing
this
this
mess we'll have to fix that
mess we'll have to fix that
anyways
anyways
welcome we have some cool stuff today
welcome we have some cool stuff today
some very cool stuff I've been working
some very cool stuff I've been working
on for quite a
on for quite a
while so this is
while so this is
now
now
available on X as well as just published
available on X as well as just published
on
YouTube it gives me ABS on my own video
YouTube it gives me ABS on my own video
because I have premium on a different
because I have premium on a different
account nice job YouTube okay I already
account nice job YouTube okay I already
bought it uh
bought it uh
so this is fun this took
forever but this is going to be a really
forever but this is going to be a really
great reference for people for a long
great reference for people for a long
time to
time to
come so I'm sure I'll be chatting about
come so I'm sure I'll be chatting about
this for the rest of the stream but
this for the rest of the stream but
that's not the goal for the time
that's not the goal for the time
being um
being um
first what we're going to do I'm going
first what we're going to do I'm going
to go grab my laptop because I just
to go grab my laptop because I just
realized I forgot to syn a little bit of
realized I forgot to syn a little bit of
code and then we're going to do some
code and then we're going to do some
real cool devb
real cool devb
today I'm finally free from
editing welcome YouTube folks
welcome got to sync up a little bit of
code and then we will show the dev
local is actually it might already be
local is actually it might already be
committed
uh it looks like it
uh it looks like it
is yeah it looks like I already did this
is yeah it looks like I already did this
I thought I'd
I thought I'd
forgotten
forgotten
okay oops that's no
good so what we're going to do
good so what we're going to do
today I did some fun stuff over the
today I did some fun stuff over the
weekend and I'm happy to show I'm I'm
weekend and I'm happy to show I'm I'm
looking forward to showing it off now
looking forward to showing it off now
the the thing is it doesn't run yet but
the the thing is it doesn't run yet but
uh it's still going to be
uh it's still going to be
cool and we'll see if we can get it to
cool and we'll see if we can get it to
run today but we have a couple other
run today but we have a couple other
experiments to look
at
oops
oops
okay Puffer
yes perfect so if you all
recall this is the MOBA that we've been
recall this is the MOBA that we've been
developing
developing
right and let me pull up the the latest
right and let me pull up the the latest
graphic of it as well since we're not
graphic of it as well since we're not
going to have it building for a
going to have it building for a
while so this is what we've been
while so this is what we've been
developing right we've got this MOBA
developing right we've got this MOBA
environment it's really cool
environment it's really cool
it's got a lot of the main features of
it's got a lot of the main features of
DOTA and it runs really really fast for
DOTA and it runs really really fast for
reinforcement learning
reinforcement learning
right and I've been developing this in
right and I've been developing this in
scon and this weekend I got really sick
scon and this weekend I got really sick
of editing videos and not being able to
of editing videos and not being able to
write a bunch of code uh so
write a bunch of code uh so
now this
now this
exists 1300 linish of uh of C that just
exists 1300 linish of uh of C that just
didn't exist before
didn't exist before
this
this
weekend and this actually compiles we
weekend and this actually compiles we
have a bunch of runtime stuff I'm sure
have a bunch of runtime stuff I'm sure
to fix and a ton of other little things
to fix and a ton of other little things
but I got most of the way to just
but I got most of the way to just
porting this whole thing to C in like
porting this whole thing to C in like
one all day session on uh on
Saturday so that's pretty cool now I
Saturday so that's pretty cool now I
think before we do
think before we do
this let me see so before we do
this let me see so before we do
this I think there are a few other small
this I think there are a few other small
things we need to account for
things we need to account for
right yeah there definitely some other
right yeah there definitely some other
things to account for
things to account for
first so we'll start on that um I'm also
first so we'll start on that um I'm also
today going to be
today going to be
monitoring let me put this on the side
monitoring let me put this on the side
just so I get this all set up now I'm
just so I get this all set up now I'm
going to be monitoring the Twitter on
going to be monitoring the Twitter on
the side because Twitter dramatically
the side because Twitter dramatically
boosts stuff when you actually reply to
boosts stuff when you actually reply to
comments
comments
and uh this video Took a ton of work so
and uh this video Took a ton of work so
I'm hoping it does
well I'm just going to leave this up on
well I'm just going to leave this up on
the side
the side
Monitor and uh in case you haven't seen
Monitor and uh in case you haven't seen
it in your
it in your
notifications for you know after today
notifications for you know after today
or whatever the new video is live and uh
or whatever the new video is live and uh
if you've been looking for a way to get
if you've been looking for a way to get
into reinforcement learning and really
into reinforcement learning and really
just want like a good lay of the land
just want like a good lay of the land
and really to hear like my thoughts on
and really to hear like my thoughts on
where the whole field is going I've done
where the whole field is going I've done
this in bits and pieces over the streams
this in bits and pieces over the streams
but uh I did this like all in one place
but uh I did this like all in one place
and like a nice highly produced piece of
and like a nice highly produced piece of
content so that now
content so that now
exists and let's just do
exists and let's just do
this
perfect uh first thing I want to do is
perfect uh first thing I want to do is
check wand
check wand
be because we have some experiments to
be because we have some experiments to
check on
and the goal is going to be first to
and the goal is going to be first to
load up the the plan for today is going
load up the the plan for today is going
to be to load up the best policies
to be to load up the best policies
trained in the older environment in the
trained in the older environment in the
scon 1 see how they look and then
scon 1 see how they look and then
attempt to finish porting stuff to
attempt to finish porting stuff to
see and yeah that'll be a good
time I'm also realizing that I can't see
time I'm also realizing that I can't see
my chat from here
I usually have my chat
up oh yeah I I just have it scrolled
up oh yeah I I just have it scrolled
weird yeah we're
good so you can see here with
good so you can see here with
carbs we have a few different
carbs we have a few different
sweeps uh so the first of these is this
sweeps uh so the first of these is this
is contributed by kyung can follow him
is contributed by kyung can follow him
on Twitter as well he's done some really
on Twitter as well he's done some really
awesome work
awesome work
oh my
oh my
gosh
gosh
[Music]
[Music]
H well
[ __ ] I didn't even expect that to be
[ __ ] I didn't even expect that to be
possible what the how long are these
possible what the how long are these
runs though wait how long are these
runs though wait how long are these
runs process
time okay 80 minutes is a lot
and can we get agent
and can we get agent
steps oh okay so this is training but to
steps oh okay so this is training but to
be fair this is training for Less frames
be fair this is training for Less frames
fewer frames than the original like dqn
fewer frames than the original like dqn
and stuff and it's still
good wait can you even get a can you
good wait can you even get a can you
even get 497 what's the max score on
even get 497 what's the max score on
breakout I don't freaking know this
breakout I don't freaking know this
crazy
let's check the parito fronts and stuff
let's check the parito fronts and stuff
I mean that's like actually
insane let me send this to
insane let me send this to
Kung I want to tell him he did a great
job Kung just like that's a huge
job Kung just like that's a huge
contribution to our RL stack holy I'll
contribution to our RL stack holy I'll
tell you what this is about in a second
tell you what this is about in a second
but we're going to have a lot lots of
but we're going to have a lot lots of
really cool things uh
really cool things uh
today actually let's give him a public
today actually let's give him a public
shout
out actually we're going to do in this
there we
there we
go so amazing amazing work by Kung uh I
go so amazing amazing work by Kung uh I
would post this on Twitter but I'm going
would post this on Twitter but I'm going
to give my you know my main thing a
to give my you know my main thing a
little bit of
time see how this
time see how this
goes and then this
goes and then this
one oh yeah so this one I think I
one oh yeah so this one I think I
mentioned this before but um we solved
mentioned this before but um we solved
at least one of the GPU Drive
at least one of the GPU Drive
scenes full solved it their Baseline
scenes full solved it their Baseline
took 2 hours before now ours solves it
took 2 hours before now ours solves it
in less than 30
in less than 30
seconds so great things from puffer and
seconds so great things from puffer and
this is before the carbs bug fix so
this is before the carbs bug fix so
probably it'll be even better than
probably it'll be even better than
this right the other thing I wanted to
this right the other thing I wanted to
do is I want to get the Pito front
right so this should
right so this should
be process time
wait this is still really good isn't
it
it
350 in 635 seconds so that's still
350 in 635 seconds so that's still
really good and then you have to train
really good and then you have to train
for quite a bit longer if you want to
for quite a bit longer if you want to
get out to here so I mean this is still
get out to here so I mean this is still
fast right like this is still a nice
fast right like this is still a nice
this is a nice Paro
front and this we'll let this keep
front and this we'll let this keep
running cuz who knows maybe this does
running cuz who knows maybe this does
even better but this is what we wanted
even better but this is what we wanted
out of carbs that it would keep running
out of carbs that it would keep running
longer and longer experiments it wasn't
longer and longer experiments it wasn't
working before after kyung's bug fix
working before after kyung's bug fix
this seems to work as intended so
this seems to work as intended so
absolutely great work to
him now let's see from here there were a
him now let's see from here there were a
couple other ones I wanted
couple other ones I wanted
right two weeks
ago where was my
ago where was my
um my new MOBA ELO
um my new MOBA ELO
sweep the Space
sweep the Space
Invaders has it actually been two weeks
Invaders has it actually been two weeks
since I did this sweep have I've been
since I did this sweep have I've been
slacking that
much this is it
right yeah this is the right one so
right yeah this is the right one so
they're not getting rewarded for just
they're not getting rewarded for just
rushing the enemy base now
rushing the enemy base now
uh and we have still this nice sweep and
uh and we have still this nice sweep and
by the way this is without the carbs
by the way this is without the carbs
fixed so even without the carbs fixed we
fixed so even without the carbs fixed we
have this very nice ELO overtime graph
have this very nice ELO overtime graph
and uh we just get to like grab one of
and uh we just get to like grab one of
these
right let me see how the graphs
right let me see how the graphs
look hero
kills carry this is actually very well
kills carry this is actually very well
balanced if you look at it it's a little
balanced if you look at it it's a little
wonky how many kills the tank has but I
wonky how many kills the tank has but I
guess the tank is really good when you
guess the tank is really good when you
learn to play it it's probably farming
learn to play it it's probably farming
really
really
well
well
healing okay the healing is actually
healing okay the healing is actually
well balanced now so the tank has more
well balanced now so the tank has more
healing than the support but the support
healing than the support but the support
is team healing whereas the tank is only
is team healing whereas the tank is only
able to self heal so this looks good to
able to self heal so this looks good to
me damage
dealt okay so the tank is like
dealt okay so the tank is like
ridiculous I think it's mostly doing
ridiculous I think it's mostly doing
like farming or
like farming or
something but the rest of this looks
something but the rest of this looks
roughly balanced I
roughly balanced I
think at least I can't tell looking at
think at least I can't tell looking at
it that it's definitely not balanced and
it that it's definitely not balanced and
did the tank actually tank yes it did
did the tank actually tank yes it did
you can see it's absorbed more than
you can see it's absorbed more than
double of damage which is what it's
double of damage which is what it's
supposed to
supposed to
do and healing received you can see the
do and healing received you can see the
other characters have gotten a nice
other characters have gotten a nice
chunk of healing from the support
environment
environment
level levels are all nicely balanced um
level levels are all nicely balanced um
wait are these the same
wait are these the same
graph I can't tell no these aren't the
graph I can't tell no these aren't the
same graph right not exactly you can see
same graph right not exactly you can see
that this one's a little narrower this
that this one's a little narrower this
one's a little wider so okay these are
one's a little wider so okay these are
correct I thought I was logging stats in
correct I thought I was logging stats in
correctly welcome YouTube
folks and that's all the stats we have
folks and that's all the stats we have
uh I guess we have usage let's just
uh I guess we have usage let's just
check if any of the skills changed
check if any of the skills changed
substantially so support uses
substantially so support uses
Q uses its
e carry doesn't use its q but that's
e carry doesn't use its q but that's
like a utility skill that I think is
bugged okay all these get some usage at
bugged okay all these get some usage at
least some reasonable amount of usage
least some reasonable amount of usage
maybe some get overused or
whatever first Q tank does W support
whatever first Q tank does W support
yeah some of them are really overused
yeah some of them are really overused
only one skill is dead though like only
only one skill is dead though like only
one skill is just not used meaning it's
one skill is just not used meaning it's
like not useful at all so that's pretty
like not useful at all so that's pretty
good uh ooh radiant is ridiculously over
good uh ooh radiant is ridiculously over
powered somehow I don't know why dire
powered somehow I don't know why dire
doesn't win that's
weird Towers taken levels gained yeah
weird Towers taken levels gained yeah
this looks good
this looks good
uh
uh
levels look at this reward for XP
levels look at this reward for XP
towards the end I think that this means
towards the end I think that this means
that they're learning to
that they're learning to
farm
farm
maybe the towers taken is not going up
maybe the towers taken is not going up
as much so maybe they're like over
as much so maybe they're like over
farming or
farming or
something but again these are the cool
something but again these are the cool
thing about the way I have this set up
thing about the way I have this set up
is it's based on Elo so like if you're
is it's based on Elo so like if you're
just farming right you get really high
just farming right you get really high
reward for farming um but then you lose
reward for farming um but then you lose
the game because you're not actually
the game because you're not actually
defending stuff so that gets accounted
defending stuff so that gets accounted
for by our training but yeah this reward
for by our training but yeah this reward
curve is really cool and in fact you
curve is really cool and in fact you
know I think with kung's carbs
fix I think with kung's carbs fix this
fix I think with kung's carbs fix this
is going to do real
is going to do real
well reward for death so they keep dying
well reward for death so they keep dying
more often that's not necessarily bad on
more often that's not necessarily bad on
its
its
own yeah reward board has just spiked up
own yeah reward board has just spiked up
like crazy and it's all because of this
like crazy and it's all because of this
XP pretty much they are still doing
XP pretty much they are still doing
towers and now this is what I'm afraid
towers and now this is what I'm afraid
of here is oh yeah
so the value function goes nuts I've
so the value function goes nuts I've
noticed this a lot with carbs we'll
noticed this a lot with carbs we'll
see what this turns into
but entropy is not fully crashed or
but entropy is not fully crashed or
anything
anything
so hopefully this is a
so hopefully this is a
reasonable
reasonable
policy a couple of these losses are a
policy a couple of these losses are a
little
sketchy all right let's go grab a few
sketchy all right let's go grab a few
things
here do incorporate ELO into the reward
here do incorporate ELO into the reward
so it's Incorporated at a higher level
so it's Incorporated at a higher level
than the reward um it gets assessed
than the reward um it gets assessed
after the game versus all of the
after the game versus all of the
experiments from this like massive sweep
experiments from this like massive sweep
so it gets it samples some number of
so it gets it samples some number of
opponents from like the whole pool and
opponents from like the whole pool and
that's used to evaluate ELO and then we
that's used to evaluate ELO and then we
take the policies that have the highest
take the policies that have the highest
ELO so basically cuz the agents are
ELO so basically cuz the agents are
allowed to set their own reward or the
allowed to set their own reward or the
hyper parameter sweep is allowed to set
hyper parameter sweep is allowed to set
the reward function um you can't just go
the reward function um you can't just go
by what has higher reward because you
by what has higher reward because you
know you can just set reward higher but
know you can just set reward higher but
ELO is objective right ELO is higher ELO
ELO is objective right ELO is higher ELO
means you're winning more games versus
means you're winning more games versus
the opponent components so that's
nice now I have to fix a couple small
nice now I have to fix a couple small
things I enjoy and find it affected to
things I enjoy and find it affected to
develop with C develop and see this
develop with C develop and see this
medium psychiatrist
medium psychiatrist
case this is there's also a hobby
case this is there's also a hobby
language approach to see I
language approach to see I
mean you can look at here's the thing
mean you can look at here's the thing
I'm actually very practical about stuff
I'm actually very practical about stuff
this is it in scon it has to be in
this is it in scon it has to be in
either scon or C right it has to be fast
either scon or C right it has to be fast
it has to run at c-speed so there is the
it has to run at c-speed so there is the
scon oops this is not even the original
scon oops this is not even the original
code uh I'll have to go find the
code uh I'll have to go find the
original code but basically I can't make
original code but basically I can't make
this point now correctly but basically I
this point now correctly but basically I
ported it from scon to C and it didn't
ported it from scon to C and it didn't
even get any longer or any more
even get any longer or any more
complicated so like I can just write
complicated so like I can just write
stuff in C and it's not even hard
right welcome Williams
so it's at the very end of The Sweep
so it's at the very end of The Sweep
that you pick the highest ELO or does
that you pick the highest ELO or does
ELO get optimized I'll show
ELO get optimized I'll show
you so the way that this works and by
you so the way that this works and by
the way these sweeps are about to get
the way these sweeps are about to get
way better cuz Kung just fixed a bug so
way better cuz Kung just fixed a bug so
they're about to hypers scale um but if
they're about to hypers scale um but if
I can find the
sweep this is actually really really
sweep this is actually really really
cool
cool
where's the darn
where's the darn
sweep ah okay
sweep ah okay
so carbs is the hyper parameter tuning
so carbs is the hyper parameter tuning
algorithm right and carbs suggests new
algorithm right and carbs suggests new
hyperparameters for the next experiment
hyperparameters for the next experiment
based on the success metric which is Elo
based on the success metric which is Elo
so basically if you set something that
so basically if you set something that
gets high reward but it doesn't win
gets high reward but it doesn't win
versus the other policies it gets set
versus the other policies it gets set
low down here and then carbs will say
low down here and then carbs will say
that's a bad run those were bad hyper
that's a bad run those were bad hyper
parameters so in a sense you're doing
parameters so in a sense you're doing
this second layer like this higher order
this second layer like this higher order
optimization thing where the reward
optimization thing where the reward
function components and Hyper parameters
function components and Hyper parameters
are based on what gets better ELO and
are based on what gets better ELO and
every time you get uh every time you
every time you get uh every time you
finish a single experiment you run uh
finish a single experiment you run uh
games versus I think it's like eight
games versus I think it's like eight
randomly sampled policies or something
randomly sampled policies or something
from the past in order to compute ELO
from the past in order to compute ELO
probably we could make that approach a
probably we could make that approach a
bit better it should probably be like
bit better it should probably be like
the eight best performing policies or
the eight best performing policies or
something like that but it's pretty good
something like that but it's pretty good
for now
yeah so that's the uh that's the case
yeah so that's the uh that's the case
there now I realized I think I screwed
there now I realized I think I screwed
up and I actually deleted some code by
up and I actually deleted some code by
mistake so I'm going to have to go get
mistake so I'm going to have to go get
that off of the uh the previous Dev
that off of the uh the previous Dev
commit or something
wait do I have this here
Coba oh I have it right here so 1644
Coba oh I have it right here so 1644
lines and I ported this to about the
lines and I ported this to about the
same amount of native
same amount of native
C
C
oops yo so is the MOBA even faster in
oops yo so is the MOBA even faster in
pure C or is it for web it's purely for
pure C or is it for web it's purely for
web there's literally no performance
web there's literally no performance
reason to do any of this stuff and see
reason to do any of this stuff and see
which is why I try to tell contributors
which is why I try to tell contributors
like you don't have to write and see
like you don't have to write and see
unless you want to for puffer lib
unless you want to for puffer lib
contribution scon is fine scyon is
contribution scon is fine scyon is
basically just procedural python it's
basically just procedural python it's
really easy now if you know after you've
really easy now if you know after you've
done that for a bit like I have you want
done that for a bit like I have you want
to just go to see so you can run it on
to just go to see so you can run it on
the web that's cool but that's not
required so that's this that is the
required so that's this that is the
story here why is my video autop playing
story here why is my video autop playing
in the background oh because
cool it's Auto playing in the background
cool it's Auto playing in the background
because people are retweeting it which
because people are retweeting it which
is a good
thing so now what we want to do is we
thing so now what we want to do is we
want to go grab the best run from this
want to go grab the best run from this
sweep let me just make sure my computer
sweep let me just make sure my computer
is not like getting completely hammered
is not like getting completely hammered
here
here
I think there's something screw with the
I think there's something screw with the
fans let me just make sure that it's not
fans let me just make sure that it's not
getting totally hammered by
uh yeah we're at 60 fahrenheit that's
uh yeah we're at 60 fahrenheit that's
totally fine I'll just not do any local
totally fine I'll just not do any local
training today and we'll be
good so sweep
good so sweep
carbs it's this
carbs it's this
one we go grab this experiment right
right
right
there and then we grab the
hypers and apparently this is supposed
hypers and apparently this is supposed
to be very good uh this zero is
to be very good uh this zero is
hardcoded so we didn't allow it to do
hardcoded so we didn't allow it to do
reward for
distance definitely want web dopus I
distance definitely want web dopus I
will help you with that Nathan I will
will help you with that Nathan I will
straight up help you with that
straight up help you with that
so you have to make sure if we're
so you have to make sure if we're
putting it on the web you have to make
putting it on the web you have to make
sure the assets are like a big enough
sure the assets are like a big enough
difference that I don't get sued though
difference that I don't get sued though
because technically there's a company to
sue now that said uh game mechanics are
sue now that said uh game mechanics are
not protected by law you can have
not protected by law you can have
something that has identical game
something that has identical game
mechanics and different artwork and
mechanics and different artwork and
stuff uh game mechanics are not uh
stuff uh game mechanics are not uh
copyrightable or trade Mark like you
copyrightable or trade Mark like you
can't patent or Protect by any means
can't patent or Protect by any means
game mechanics
didn't know that yeah I'll replace
didn't know that yeah I'll replace
character with a cute
character with a cute
sphere where's uh where is South CX or
sphere where's uh where is South CX or
you know our artist friend maybe he can
you know our artist friend maybe he can
uh maybe you can use
uh maybe you can use
the uh the characters he's been making
the uh the characters he's been making
for the Moa in it what do you think
for the Moa in it what do you think
about
that we now have volunteer artist who
that we now have volunteer artist who
makes awesome stuff it turns out
makes awesome stuff it turns out
so I don't know how that you know that's
so I don't know how that you know that's
possible but surprisingly this is the
possible but surprisingly this is the
second time this has happened where
second time this has happened where
we've had people volunteer art and it's
we've had people volunteer art and it's
really cool it's really
really cool it's really
cool cuz that is something I absolutely
cool cuz that is something I absolutely
do not have any any idea how to do
myself actually when he's around one of
myself actually when he's around one of
these times I got to show him I have
these times I got to show him I have
like one digital painting that I did for
like one digital painting that I did for
the cover of like a thing that I wrote
the cover of like a thing that I wrote
It's God awful I he'll get a kick out of
It's God awful I he'll get a kick out of
it I tried getting clean AI
it I tried getting clean AI
Sprites that didn't yeah no it's AI is
Sprites that didn't yeah no it's AI is
just garbage at producing it makes cool
just garbage at producing it makes cool
stuff but it never makes what you want
a little apple with an
a little apple with an
arrow you can't do that either because
arrow you can't do that either because
that's what it is in uh in creatures
that's what it is in uh in creatures
mode right doofus has creatures mode and
mode right doofus has creatures mode and
that's what they do there
make it a green you can't just recolor
make it a green you can't just recolor
it now artwork actually is substantially
it now artwork actually is substantially
protected right as programmers we get no
protected right as programmers we get no
protection for anything but like the
protection for anything but like the
artwork is you got to be visually
distinct total time steps is
this and value function
clip and value function is
clip and value function is
here it actually found very similar
here it actually found very similar
hyper parameters in many ways to
hyper parameters in many ways to
um what we had before very
um what we had before very
similar a little different though
similar a little different though
different enough
yeah uh and now we have to run this on
yeah uh and now we have to run this on
box one
right and we also have to figure out
right and we also have to figure out
because I have like weird stuff going
on see
on see
MOA
MOA
wait Moa
MOA I am somewhat
MOA I am somewhat
confused how I did
this uh I'll check that in a second but
this uh I'll check that in a second but
for now I think I can just
for now I think I can just
add in
MOA Hy
I saw the update as well that you made
I saw the update as well that you made
to the uh the game it looks really good
to the uh the game it looks really good
I'm actually I'm curious how did you do
I'm actually I'm curious how did you do
the path checks because this is going to
the path checks because this is going to
sound really stupid but I actually don't
sound really stupid but I actually don't
know off the top of my head how you
know off the top of my head how you
would do those path checks and I
would do those path checks and I
remember that I tried to make some
remember that I tried to make some
project like this when I was brand new
project like this when I was brand new
to programming and the path checks
to programming and the path checks
totally screwed me over because I tried
totally screwed me over because I tried
to do ray tracing like a [ __ ]
God if anybody saw the stuff that I
God if anybody saw the stuff that I
deved like when I was early on in
uh jeez
you be like if this idiot can do it then
you be like if this idiot can do it then
so can
I I wrote some real bad
code
uh all right
uh all right
cool box is idle
I could have sworn that we messed with
I could have sworn that we messed with
the python file I might have forgotten
the python file I might have forgotten
to commit
that it needs to be
discreet I'll have to look at the code
discreet I'll have to look at the code
for that I actually don't know how
for that I actually don't know how
you're doing it and um I think that like
you're doing it and um I think that like
pretty much the only thing that I can
pretty much the only thing that I can
think of that would be hard in that game
think of that would be hard in that game
to do fast is going to be like the uh
to do fast is going to be like the uh
the range
the range
checks wait just saw the breakout carbs
checks wait just saw the breakout carbs
weren't your runs like that before no
weren't your runs like that before no
man you shredded it you absolutely
man you shredded it you absolutely
shredded it are you kidding me
450 you did a great freaking job
450 you did a great freaking job
let me see if I find the
original it wasn't
original it wasn't
450 and it wasn't running stuff for 120
450 and it wasn't running stuff for 120
mil the current demo
mil the current demo
code what do you mean the current demo
code maybe you
code maybe you
[Music]
[Music]
ran for mobile I'm
ran for mobile I'm
confused K what are you what are you
confused K what are you what are you
saying here my brain not
working what's this
working what's this
one is the mobile where's
breakout two hours two
breakout two hours two
hours or
hours or
maybe that you put random seating
hold let me just find the run because it
hold let me just find the run because it
definitely yours was definitely way
better I didn't tweet it yet Kung
better I didn't tweet it yet Kung
because I just launched the video and
because I just launched the video and
I'm giving that one some time on its own
I'm giving that one some time on its own
but you can either tweet it if you want
but you can either tweet it if you want
to tweet it tweet it tomorrow or
to tweet it tweet it tomorrow or
whatever so I can do it like you know
whatever so I can do it like you know
retweet it then I'm giving my uh the
retweet it then I'm giving my uh the
video some Spotlight at the moment since
video some Spotlight at the moment since
that took an insane amount of
that took an insane amount of
time okay I actually can't find this
time okay I actually can't find this
sweep right now I know it's somewhere is
sweep right now I know it's somewhere is
it this
one yeah here it
is yeah look I only got to 393 you got
is yeah look I only got to 393 you got
all the way up to
450 and yours did longer
runs and this is 500 full experiments as
runs and this is 500 full experiments as
well yours is only 380 something
well yours is only 380 something
experiments right now and yours is
experiments right now and yours is
already better at like 450 and yours
already better at like 450 and yours
does much longer runs so I think you
does much longer runs so I think you
just
just
win so good job okay Nathan I need to
win so good job okay Nathan I need to
compare different implementations lines
compare different implementations lines
of sight and movement sexs are tricky
of sight and movement sexs are tricky
steps are pricky to Tre compute that I
steps are pricky to Tre compute that I
can't speak line of sight and movement
can't speak line of sight and movement
checks are tricky to pre-compute since
checks are tricky to pre-compute since
opponents move could not comp
opponents move could not comp
pre-compute all pairs
pre-compute all pairs
Al go quite simple yeah that's what I
Al go quite simple yeah that's what I
was thinking Nathan you can't
was thinking Nathan you can't
pre-compute um because of dynamic
obstacles yeah so we'll have to look at
obstacles yeah so we'll have to look at
at something for that for
sure okay I only posted this thing uh I
sure okay I only posted this thing uh I
posted this thing not that long ago and
posted this thing not that long ago and
it's at it's getting some decent
it's at it's getting some decent
engagement we'll see how well does I
engagement we'll see how well does I
hope this video does well man it took so
hope this video does well man it took so
much time it took so so much time and I
much time it took so so much time and I
hate editing too I really hate
hate editing too I really hate
editing the one thing I'm a little
editing the one thing I'm a little
concerned about is the pacing of it it
concerned about is the pacing of it it
doesn't like start with something to get
doesn't like start with something to get
you super excited like it starts off
you super excited like it starts off
good and it gets better and better it
good and it gets better and better it
doesn't like start off with the best
doesn't like start off with the best
thing first so I don't know we'll
see but I put a lot of work into it
see but I put a lot of work into it
so much
work I thought of the idea for that like
work I thought of the idea for that like
three months
three months
ago for line of sight I draw a line
ago for line of sight I draw a line
between the center of the character and
between the center of the character and
Target and check if any of the cells go
Target and check if any of the cells go
through is a
wall yeah that's like just a better
wall yeah that's like just a better
version of the ray tracing thing that I
version of the ray tracing thing that I
was thinking of
was thinking of
we'll look at that together we'll look
we'll look at that together we'll look
we'll look at
we'll look at
that what in editing yeah you're selling
that what in editing yeah you're selling
I'm trying to
here with this video puffer uh puffer AI
here with this video puffer uh puffer AI
is officially open for business so yeah
is officially open for business so yeah
we're uh I'm going to start allocating a
we're uh I'm going to start allocating a
portion of my time to you know looking
portion of my time to you know looking
around seeing what companies might be
around seeing what companies might be
interested in picking up a couple
interested in picking up a couple
support contracts and things like that
support contracts and things like that
with Puffer
with Puffer
because it would be real nice to be able
because it would be real nice to be able
to build out a much bigger
to build out a much bigger
cluster and uh we're going to need some
cluster and uh we're going to need some
revenue for
that my hope is that like if I can get a
that my hope is that like if I can get a
50 node cluster for puffer we can just
50 node cluster for puffer we can just
basically run over the entire field with
basically run over the entire field with
the number of experiments we can run and
the number of experiments we can run and
how fast and the number of different
how fast and the number of different
open source things that we can sponsor
open source things that we can sponsor
like we can just run over the whole
like we can just run over the whole
field with that
and technically I could try to go get
and technically I could try to go get
funding for it but that comes with a
funding for it but that comes with a
bunch of strings and stuff so I'd rather
bunch of strings and stuff so I'd rather
just get some
Revenue because we should be able to
Revenue because we should be able to
right we have we've got some really
right we have we've got some really
awesome tools at this point and they can
awesome tools at this point and they can
definitely solve problems in
definitely solve problems in
Industry maybe develop several Indie
Industry maybe develop several Indie
Games nah Game Dev is Game Dev is not
Games nah Game Dev is Game Dev is not
easy Game Dev is not easy
I'm good at making things fast I'm not
I'm good at making things fast I'm not
necessarily good at making things
fun all right let's see so we have the
fun all right let's see so we have the
MOBA here I was supposed to have this
MOBA here I was supposed to have this
thing running in the background while I
thing running in the background while I
was talking too much
yapping balancing it's yeah balancing is
yapping balancing it's yeah balancing is
cool but like
oops so balancing is definitely
oops so balancing is definitely
cool um but like small Indie companies
cool um but like small Indie companies
not going to have budget for
not going to have budget for
that and larger companies tend to have I
that and larger companies tend to have I
mean their games are
slow
so wait what the heck
so wait what the heck
what happened
what happened
here is there something wrong with the
here is there something wrong with the
with this
box uh
box uh
what invalid
combination
combination
what oh it's probably just running the
what oh it's probably just running the
wrong code
right oh no
wait I'm so
confused C
confused C
MOA I thought C MOA is the right file
MOA I thought C MOA is the right file
isn't it
yeah this is the really long
one
and nd's also on YouTube
OB shape
510 oh me
dumb very
dumb very
dumb it's just
syntax we really need a uh an any
syntax we really need a uh an any
validator cuz that's a really dumb bug
validator cuz that's a really dumb bug
to have
right I forget that I don't keep cred
right I forget that I don't keep cred
saved on the puffer box
typically whoops let's not do
typically whoops let's not do
that nobody saw that
yeah let me just real
yeah let me just real
quick to be responsible
okay just going to revoke the
okay just going to revoke the
uh the token real quick
I try not to do
that oh no you can get access to all of
that oh no you can get access to all of
my open source repositories
uh we're getting some attention on the
uh we're getting some attention on the
video not much yet but it's just been a
video not much yet but it's just been a
little
while okay so we should be able
while okay so we should be able
to what why is t-x not
found am I the wrong
found am I the wrong
machine wait what
okay now this should work
okay now this should work
right this should now
right this should now
work
and
okay oops
there we go so this thing will now train
there we go so this thing will now train
for about 10 minutes and we will see
for about 10 minutes and we will see
whether these hypers are actually
whether these hypers are actually
useful and in the meantime I have to
useful and in the meantime I have to
figure out what what the heck happened
figure out what what the heck happened
to my python
file I kind of went on this mad
file I kind of went on this mad
development rush over the
development rush over the
weekend
weekend
and I don't know what I did so I
and I don't know what I did so I
probably forgot to commit a couple
probably forgot to commit a couple
things up
what do I not have a python file
oh I remember I was literally okay I
oh I remember I was literally okay I
remember what happened so I was
remember what happened so I was
literally not modifying the python code
literally not modifying the python code
at all I was only deving scon and
see that's
fine and I know YouTube is way slower
fine and I know YouTube is way slower
with the uh the uptake but let's see
with the uh the uptake but let's see
if anybody is noticed it
yet this is my own
stream cool
I think I should just say
somehow I was served this while working
somehow I was served this while working
out
welcome me writing random RL code and
welcome me writing random RL code and
see
heavy lifts
only okay we well we have that
only okay we well we have that
experiment
running we have all the the H file code
running we have all the the H file code
here and actually the C is pretty
here and actually the C is pretty
much I don't know if it's 100% correct
much I don't know if it's 100% correct
but we need to
but we need to
uh we need to adjust the python binding
uh we need to adjust the python binding
for this so that we can test this end to
for this so that we can test this end to
end now and we can fix runtime
bugs of course we have the experiment
bugs of course we have the experiment
running in the background
running in the background
so I'm going to do it like this to make
so I'm going to do it like this to make
it
easier I think that all I have to do is
easier I think that all I have to do is
I replace these not even all three of
I replace these not even all three of
them just these two
them just these two
lines I'm going to replace these with
I think it's simoa or
something sioa yeah with an
underscore and we are going
underscore and we are going
to let's
see yeah so now we have these same
see yeah so now we have these same
functions in the pure C version cuz the
functions in the pure C version cuz the
difference between these two so C MOA
difference between these two so C MOA
is
is
uh I need to really rename these but
uh I need to really rename these but
right now the first one is just the full
right now the first one is just the full
thing written in scon and then the next
thing written in scon and then the next
one is the header file um where it's
one is the header file um where it's
like cython is just the binding and then
like cython is just the binding and then
the all the actual logic is in C so
the all the actual logic is in C so
let's see with this
and I will also make my camera not cover
this C MOA extension okay now where is
this C MOA extension okay now where is
simoa I want to see where this
built
built
um I'm not seeing this building anywhere
I don't think this is
I don't think this is
building I thought I have the
um did I not commit the setup
file I think I didn't commit the setup
file I think I didn't commit the setup
file then because this should be
building oh yeah
it's actually kind of funny the extent
it's actually kind of funny the extent
to which like zero problems ever come
to which like zero problems ever come
from the SE and they all come from the
from the SE and they all come from the
freaking python
bindings it says there's no diff on the
bindings it says there's no diff on the
setup.py
which is very weird because I could
swear do I have a build script
here I don't even have the build script
here I don't even have the build script
so what happened here I could have sworn
so what happened here I could have sworn
that I had a build
script oh I didn't that's what I forgot
script oh I didn't that's what I forgot
to C to commit I just just forgot to
to C to commit I just just forgot to
commit the the local build script okay
commit the the local build script okay
let me do
that cool
okay so now we actually have the build
okay so now we actually have the build
script and what ended up happening
script and what ended up happening
here is that we need a um we need
here is that we need a um we need
another line here
another line here
for simoa
and Okay cool so now we actually get
and Okay cool so now we actually get
these uh these bugs
these uh these bugs
here and yeah now I remember where we
here and yeah now I remember where we
were so I had there was one thing I had
were so I had there was one thing I had
to do with function pointers that was
to do with function pointers that was
kind of obnoxious in the scon that I
kind of obnoxious in the scon that I
didn't quite get to porting so I did
didn't quite get to porting so I did
everything but this and uh we will we'll
everything but this and uh we will we'll
figure that
out for
so we have this m. skills thing in which
so we have this m. skills thing in which
I was attempting to
record I was attempting to
record I was attempting to
record uh function
pointers is that reasonable
I think that's
reasonable you get to choose you either
reasonable you get to choose you either
have to so the problem here is
have to so the problem here is
that you basically basically want to be
that you basically basically want to be
able to do something like you know
able to do something like you know
player.
player.
skills or like player. q player. w
skills or like player. q player. w
player. for their
player. for their
skills
skills
um and if you don't have some way to
um and if you don't have some way to
bind these
bind these
correctly then um you end up having to
correctly then um you end up having to
do a big conditional over the player
do a big conditional over the player
type or switch or something like
that so we'll Port that let me double
that so we'll Port that let me double
check real
check real
quick for
okay
okay
cool glad to see it's not at least you
cool glad to see it's not at least you
know it's at least being somewhat
noticed I bother to reply to things
noticed I bother to reply to things
because um Twitter boosts your replies
because um Twitter boosts your replies
in the algorithm
skills skill support stun so I think all
skills skill support stun so I think all
I have to do is oh jeez I have to import
I have to do is oh jeez I have to import
all of these don't
I oh that's so
I oh that's so
disgusting okay so I know how to solve
disgusting okay so I know how to solve
this I have to import all these things
this I have to import all these things
to scyon and then bind them back to see
to scyon and then bind them back to see
which is gross we'll find a better way
which is gross we'll find a better way
of doing it but we'll start on this way
of doing it but we'll start on this way
for now let me real
quick is it running super Maven
Pro yeah okay
CU this will help us Port
it see death struct
it see death struct
mooba we need all the
functions they all have this uh syntax
functions they all have this uh syntax
right
and I just need all the
and I just need all the
names so I should just be able to like
names so I should just be able to like
grab all these delete the stuff in the
grab all these delete the stuff in the
middle and then I can just use the names
middle and then I can just use the names
um and the function
um and the function
syntax
right which admittedly this is
right which admittedly this is
incredibly obnoxious
but I think this will be the quickest
but I think this will be the quickest
way of doing
it it's really obnoxious that syon
it it's really obnoxious that syon
requires like these
headers and actually now that I'm
headers and actually now that I'm
thinking about it um this is going to be
thinking about it um this is going to be
a very temporary solution because what's
a very temporary solution because what's
going to happen is we're just going to
going to happen is we're just going to
end up porting all of this into native
end up porting all of this into native
SE and then we won't have to redeclare
SE and then we won't have to redeclare
stuff like this but you know this is the
stuff like this but you know this is the
price that we pay for wanting to uh or
price that we pay for wanting to uh or
for having implemented it in syon
for having implemented it in syon
first and uh these are just growing pans
first and uh these are just growing pans
from the
port I made a few improvements and
port I made a few improvements and
cleanups to the code along the way over
cleanups to the code along the way over
the weekend just since I had the
the weekend just since I had the
opportunity while I was um you know I
opportunity while I was um you know I
was going to just redo it all in the
was going to just redo it all in the
port
anyways so it's probably about the same
anyways so it's probably about the same
length if not a little bit shorter once
length if not a little bit shorter once
you ignore the uh the giant scon binding
you ignore the uh the giant scon binding
file which most of this file is going to
file which most of this file is going to
be deletable I
be deletable I
believe it's just that like you need
believe it's just that like you need
tons of De of definitions because for
tons of De of definitions because for
some reason and I don't quite understand
some reason and I don't quite understand
the architecture of this but for some
the architecture of this but for some
reason syon can't import statically
reason syon can't import statically
defined stuff from C headers it needs
defined stuff from C headers it needs
like its own stupid custom
headers and now this is no longer we no
headers and now this is no longer we no
longer have any
longer have any
classes we just have
classes we just have
the pure function pointers
here and these are scyon definitions so
here and these are scyon definitions so
we're going to see whether
we're going to see whether
um whether it allows me to do this
um whether it allows me to do this
because these are scon definitions of C
because these are scon definitions of C
functions so it might consider these
functions so it might consider these
python objects in which case it will not
python objects in which case it will not
allow us to assign them to
allow us to assign them to
C and then we'll just have to like push
C and then we'll just have to like push
this all one layer deeper a little
this all one layer deeper a little
earlier than i' intended but I think
earlier than i' intended but I think
that this should be
that this should be
okay
oops cannot
convert oh I messed up right this is
convert oh I messed up right this is
yeah this is not just skills it's mv.
yeah this is not just skills it's mv.
skills not self it's now it's en
[Music]
[Music]
and cannot
and cannot
assign to void
star
star
okay I think I have the type wrong here
okay I think I have the type wrong here
here so this needs to
be cannot assign type int can you put
be cannot assign type int can you put
the entire
C
C
int you can't put like the whole
int you can't put like the whole
function signature right
is this just a
cast I think this is just a
cast I think this is just a
cast yeah but this is going to be really
cast yeah but this is going to be really
janky because then when I go to call
janky because then when I go to call
them when I go to call the function I'm
them when I go to call the function I'm
going to have to cast the function to uh
going to have to cast the function to uh
to the different syntax
hold on is there not a way to do this
hold on is there not a way to do this
and
see oh stream is warmed up quite nicely
see oh stream is warmed up quite nicely
welcome twitch folks welcome YouTube
welcome twitch folks welcome YouTube
folks I uh I decided to Port the little
folks I uh I decided to Port the little
MOBA I've been working on which in case
MOBA I've been working on which in case
you haven't seen it we'll give a quick
you haven't seen it we'll give a quick
demo at least a gift of one so this is
demo at least a gift of one so this is
the Moa I've been working on it's fairly
the Moa I've been working on it's fairly
basic but it has many of the elements of
basic but it has many of the elements of
DOTA and it runs a million steps per
DOTA and it runs a million steps per
second so this is what we're using as
second so this is what we're using as
the RL environment and uh I'm currently
the RL environment and uh I'm currently
porting it from syon to Native c not for
porting it from syon to Native c not for
performance scon is plenty fast but just
performance scon is plenty fast but just
so that we can run it on the web because
so that we can run it on the web because
I kind of realized that the C is not any
I kind of realized that the C is not any
harder than the scyon and it's going to
harder than the scyon and it's going to
be really cool when I get to share this
be really cool when I get to share this
on the web and like people can play
on the web and like people can play
against the RL Bots right
m
Ah that's
Ah that's
wait you need to
declare oh wait you can actually do
declare oh wait you can actually do
this
okay I didn't realize you could do
okay I didn't realize you could do
that
that
so wait of course you can do this
so wait of course you can do this
because yeah type
because yeah type
def
def
um in
um in
star
skill and then this is going to
be this is a skill Star
be this is a skill Star
right
right
yeah and then we shouldn't have to do
yeah and then we shouldn't have to do
[ __ ] void star casts we should just
[ __ ] void star casts we should just
have it all nicely
have it all nicely
typed congrats for puffer officially
typed congrats for puffer officially
open a business how can Prof profession
open a business how can Prof profession
can potential customers reach out to you
can potential customers reach out to you
as it's in the video but I have my email
as it's in the video but I have my email
listed there it's jars puffer
a and yeah hopefully I mean in the early
a and yeah hopefully I mean in the early
stages the main thing that I'm going to
stages the main thing that I'm going to
be looking for I'm going to be looking
be looking for I'm going to be looking
for companies that have RL problems that
for companies that have RL problems that
are pretty close to what puffer can do
are pretty close to what puffer can do
at the moment which is quite a bit to be
at the moment which is quite a bit to be
fair and mostly I'm going to be looking
fair and mostly I'm going to be looking
for companies that like they either need
for companies that like they either need
help speeding up their Sims or like they
help speeding up their Sims or like they
need better parallelization or they have
need better parallelization or they have
like a complex Sim that's just really
like a complex Sim that's just really
clunky to work with with existing RL
clunky to work with with existing RL
infra so really the goal is just going
infra so really the goal is just going
to be to speed up and streamline stuff
to be to speed up and streamline stuff
with much lighter weight infra um now as
with much lighter weight infra um now as
puffer gets bigger right we'll be able
puffer gets bigger right we'll be able
to take on larger projects and such um
to take on larger projects and such um
but in the initial stages we're going
but in the initial stages we're going
for you know relatively specific scoped
for you know relatively specific scoped
stuff and just looking for a couple of
stuff and just looking for a couple of
initial clients that uh you know that
initial clients that uh you know that
could very much benefit from that that's
could very much benefit from that that's
the
plan caption went pretty
plan caption went pretty
quick oh
quick oh
yeah I figure I'm not hard to
find there's the there's like a contact
find there's the there's like a contact
form on Puffer that goes to my email and
form on Puffer that goes to my email and
a bunch of other
things all right it's starting to get a
things all right it's starting to get a
little bit of attention on Twitter
little bit of attention on Twitter
that's
nice the main thing is I wonder if it'll
nice the main thing is I wonder if it'll
get into the YouTube algorithm I hope it
get into the YouTube algorithm I hope it
does CU I think in the I think that the
does CU I think in the I think that the
delivery is much better than my thesis
delivery is much better than my thesis
at the
least
mhm that's a good idea I'll put my email
mhm that's a good idea I'll put my email
in the YouTube caption probably it'll
in the YouTube caption probably it'll
get scraped and I'll get spammed but
[Music]
this thingy needs to
this thingy needs to
fix um where is it
put in a one line between these
there good idea thanks
K perhaps on your X profile
K perhaps on your X profile
yep the thing is if I update my X
yep the thing is if I update my X
profile right now Kung I believe it
profile right now Kung I believe it
triggers uh
we're not going crazy on anything just
we're not going crazy on anything just
yet this just means we're open for
yet this just means we're open for
business and I'm going to be spending
business and I'm going to be spending
you know a small fraction of my
you know a small fraction of my
time on that side of things um but for
time on that side of things um but for
the most part I'm going to be chilling
the most part I'm going to be chilling
here and writing more code than ever
here and writing more code than ever
because the C has been going real
fast and it completely fixes the problem
fast and it completely fixes the problem
of releasing stuff right because oops
of releasing stuff right because oops
this needs to get
this needs to get
brighter it it fixes the problem of
brighter it it fixes the problem of
releasing stuff because we can just
releasing stuff because we can just
compile the web
assembly okay why is this s why is this
assembly okay why is this s why is this
saying it's a void star
do I need to import the type def or
something uh
something uh
yes so this is not a void
star uh I don't know how to do this
star uh I don't know how to do this
because
like I think I can just do like this and
like I think I can just do like this and
this is a c type
this is a c type
death
int wait skill of
int wait skill of
environment it's not environment is it
environment it's not environment is it
it's
MOBA I'm very confused on this
this should be
this should be
MOA MOA star entity star entity Star
right but
wait um there needs to be something with
wait um there needs to be something with
for declarations here
me
me
see
typ
have that
has an
has an
element how do I make
file I just don't know how to do the
file I just don't know how to do the
Ford declaration for
Ford declaration for
this
so type
death for
I see so you can for declare strs like
I see so you can for declare strs like
this so that's a little
janky I kind of wish I had a two pass
janky I kind of wish I had a two pass
compile or something but that's like
compile or something but that's like
such a minor nitpick or C so what we
such a minor nitpick or C so what we
have to do is C type dstruct
I think this is the syntax
right so we for declare like
this and
this and
[Music]
then error okay I can't do multiple
then error okay I can't do multiple
lines like this I assume it's C type
lines like this I assume it's C type
death BR
nty this is not the
syntax well wait a second am I being
syntax well wait a second am I being
dumb
dumb
here C type death struct
okay now I'm getting confused with
okay now I'm getting confused with
cython because they should work in C
right yeah this is what I'm going to do
right yeah this is what I'm going to do
when C right you have the struck def up
when C right you have the struck def up
here
oh wait does syon scon has a a two pass
oh wait does syon scon has a a two pass
right so in scon I think I'm fine I
right so in scon I think I'm fine I
don't need to do
this yeah so then all I have to do is
this yeah so then all I have to do is
this has to be in
m.h
death
okay skill
okay skill
and then this is now going to be a skill
and then this is now going to be a skill
Star
right cannot assign
hpe wait cannot
hpe wait cannot
assign to skill
assign to skill
star MOA entity
entity well why can't it do that
that's the same thing right a skilled
that's the same thing right a skilled
star is
star is
a hold
on oops
C
wait your function is marked as no
wait your function is marked as no
except well it's not marked as no
except
except
right modify
this is where GPT goes off the
this is where GPT goes off the
rails and I have to find uh my own
rails and I have to find uh my own
solution because that's not a thing
wait did I get this
wrong I mean I named it something else
wrong I mean I named it something else
but that doesn't matter
right so
cannot
cannot
assign oh
wait wait cannot
wait wait cannot
assign
assign
type okay so it is right that something
type okay so it is right that something
weird is happening with no accept
because it's there h
oh wait does this have to be a
oh wait does this have to be a
reference this has to be a reference
reference this has to be a reference
doesn't
it this should be because it's a
pointer if this works it's then this is
pointer if this works it's then this is
my bad being
my bad being
stupid like
stupid like
obviously and I always forget that um
obviously and I always forget that um
I've got like the python brain of things
I've got like the python brain of things
being like almost all object things
being like almost all object things
being references by
being references by
default so like I would think oh yeah of
default so like I would think oh yeah of
course it's already a pointer because
course it's already a pointer because
it's a function but obviously no it
it's a function but obviously no it
isn't and I'm dumb and I've written too
isn't and I'm dumb and I've written too
much
python okay at least now we have they're
python okay at least now we have they're
both pointers
they should not have to do this
as I'm going to put no accept on here
as I'm going to put no accept on here
just to
see what
see what
happens also you don't
happens also you don't
need you don't need semicolons in uh in
need you don't need semicolons in uh in
scon what are you
doing oh it's cuz you just copied these
doing oh it's cuz you just copied these
from the C right that's
fine okay now it says it cannot
fine okay now it says it cannot
assign to skill
star okay this is driving me nuts
star okay this is driving me nuts
because this is literally the same
because this is literally the same
type um so I think instead of screwing
type um so I think instead of screwing
around with dumb scon I think that the
around with dumb scon I think that the
easier way to solve this
easier way to solve this
is is going to be just to Port this
is is going to be just to Port this
section of the code to see
right is there anything that's hard to
right is there anything that's hard to
port to see in here they really isn't
right yeah
so let's just take this entire
block and go into
m.h and then what we're going to do is
m.h and then what we're going to do is
we're going to put this
here and we'll translate this just to C
here and we'll translate this just to C
directly cuz we were going to do this
directly cuz we were going to do this
anyways we're just going to do it a
anyways we're just going to do it a
little earlier because I'm sick of
little earlier because I'm sick of
fighting
fighting
syon so this should be entity star
syon so this should be entity star
layer and then this
layer and then this
is
M
M
yep else
yep
yep
okay HD goes to
okay HD goes to
*
*
5 +
5 +
5 Yep this is
good we already defined player here so
good we already defined player here so
these just need semicolons on the end
these just need semicolons on the end
well
well
what look at
that yeah that's what we
that yeah that's what we
want let me make sure that this is
want let me make sure that this is
correct
correct
oh yeah that's all the
oh yeah that's all the
same God got to love super
Maven like use AI to type for you not to
Maven like use AI to type for you not to
think for you it's
great um okay but now there is there's
great um okay but now there is there's
something screwy here
something screwy here
because I have have PID
here in PID is five times
here in PID is five times
team
team
okay m.
okay m.
entities HD this is good
entities HD this is good
whoops oh look at that
perfect everything gets
perfect everything gets
assigned we can see right here that the
assigned we can see right here that the
skills the syntax looks good
skills the syntax looks good
here um hold on what
happened why did it do it
twice oh it did it twice because this is
twice oh it did it twice because this is
the old version
the old version
right
right
yeah so now we just do Pit is equal to
yeah so now we just do Pit is equal to
this
okay and all the numbers are the same
okay and all the numbers are the same
all the skills are the
same and at this point I think that it's
same and at this point I think that it's
going to correctly do the rest of it so
going to correctly do the rest of it so
we will just
we will just
quickly uh refactor here
yeah okay so let's see what happens when
yeah okay so let's see what happens when
I compile
this well uh we can say that that's not
happy could it have failed perhaps
happy could it have failed perhaps
earlier
earlier
um I don't even know what the hell flag
um I don't even know what the hell flag
scon builds
with there's like tons of stuff that
with there's like tons of stuff that
it's
it's
saying defined but not
saying defined but not
used
okay we don't need these now we can get
okay we don't need these now we can get
rid of
rid of
these we actually don't need this one
these we actually don't need this one
either so let's try that again
either so let's try that again
uh you do actually need this version up
uh you do actually need this version up
here I believe because you have a skill
here I believe because you have a skill
star okay now it spams
you get
reward uh it says everything is
reward uh it says everything is
like spawn at defined but not
used that's weird
it should be being
used do I not have step
defined oh you didn't Define
defined oh you didn't Define
um well
um well
yeah you need
player offset creep offset right now you
player offset creep offset right now you
need to Define step and
reset
step wa to
step wa to
reset okay and now what we're going to
reset okay and now what we're going to
do is
do is
oops step
um okay this thing doesn't know what
um okay this thing doesn't know what
it's
it's
doing
so let me see how step gets called
so let me see how step gets called
actually I believe that we just have
actually I believe that we just have
actions already given don't we
step
step
players reset takes just the nend and
players reset takes just the nend and
step takes just the N perfect so this is
step takes just the N perfect so this is
just going to be
just going to be
self and then we're just going to do
self and then we're just going to do
self do
self do
step no it's going to be
step no it's going to be
step self Dot
step self Dot
N that's the syntax and then we just do
N that's the syntax and then we just do
def reset
def reset
look at
this
and okay so now it's still telling me
and okay so now it's still telling me
that all these things are not getting
that all these things are not getting
used now they should be getting used
used now they should be getting used
though um
all this stuff here is unused
warnings
and we have a bunch of other errors in
and we have a bunch of other errors in
here as
here as
well man I can't actually tell based on
well man I can't actually tell based on
this so what I'm going to
this so what I'm going to
do is I have this build local script
do is I have this build local script
which will just compile the C on its
own and okay now I get reasonable error
own and okay now I get reasonable error
messages
right struct
right struct
entity
94 okay it doesn't like my Ford
94 okay it doesn't like my Ford
declaration
I didn't I thought that the syntax was a
I didn't I thought that the syntax was a
little
goofy let me check not g not
GPT type Def
type def struct
a uh
a uh
wait this looks fine doesn't
it type red
definition struct entity versus struct
definition struct entity versus struct
entity
huh I actually don't know what this is
conflicting
types once is struct but it's not being
types once is struct but it's not being
defined as struct entity
defined as struct entity
right
right
T this is a type Def struct
saw a tutorial of a guy that used RL to
saw a tutorial of a guy that used RL to
oops balance double
oops balance double
pendulum uh that's a very difficult
pendulum uh that's a very difficult
problem that's like classic
problem that's like classic
chaos back end was C++
sfml
sfml
so for here's the thing um I don't want
so for here's the thing um I don't want
to implement the entire RL
to implement the entire RL
stack itself in C that's a really dumb
stack itself in C that's a really dumb
idea because like think about it the
idea because like think about it the
whole like all your environments are
whole like all your environments are
going to be like external outside of
going to be like external outside of
puffer are going to be in Python anyways
puffer are going to be in Python anyways
and yeah we can Port them but initially
and yeah we can Port them but initially
they need to work
they need to work
um you have all of pytorch which has I
um you have all of pytorch which has I
guess it technically has a C++ backend
guess it technically has a C++ backend
but nobody's doing that stuff right uh
but nobody's doing that stuff right uh
so they're going to want to have models
so they're going to want to have models
at least in Python
at least in Python
and then like all the learning libraries
and then like all the learning libraries
are also in Python and like if you're
are also in Python and like if you're
prototyping algorithms you probably want
prototyping algorithms you probably want
those to be in Python and like it's not
those to be in Python and like it's not
even that's not even where the speed
even that's not even where the speed
loss is coming from right because you
loss is coming from right because you
have like graph compilation and such
have like graph compilation and such
that can make stuff fast there so we're
that can make stuff fast there so we're
not going to be in the business of
not going to be in the business of
redoing an entire training framework in
redoing an entire training framework in
C that's like way way way way too much
C that's like way way way way too much
but what we can do is we can make the
but what we can do is we can make the
environment run and see and we can have
environment run and see and we can have
a few different uh types of layers right
a few different uh types of layers right
now we just have MLPs but I'm going to
now we just have MLPs but I'm going to
add like C layers and an lstm layer so
add like C layers and an lstm layer so
that basic networks can be run in
that basic networks can be run in
inference mode only in C not optimized
inference mode only in C not optimized
but since it's C it'll be fast enough
but since it's C it'll be fast enough
that like you can play against stuff
that like you can play against stuff
live in your browser and whatnot for the
live in your browser and whatnot for the
demos so that's the current plan
as the current
plan got some more notifications
people are putting the uh the
people are putting the uh the
video up on
video up on
the TV and stuff that's cool
very
very
nice I mean I'm glad that people are
nice I mean I'm glad that people are
having a a good time with this we'll see
having a a good time with this we'll see
how much traction this gets I really
how much traction this gets I really
hope that video does well
though okay am I just misunderstanding
though okay am I just misunderstanding
here this Line's optional
type dstruct
explain why
I okay so it's already seen the type
yeah so this is why so you type dep the
yeah so this is why so you type dep the
struct and then you just D
struct oh I I actually like this a
struct oh I I actually like this a
little bit more kind of don't I because
little bit more kind of don't I because
then you don't have like this syntax is
then you don't have like this syntax is
freaking weird right now I can just do
freaking weird right now I can just do
struct
entity and like this is gross too right
entity and like this is gross too right
so now I can just go all the way to the
so now I can just go all the way to the
top of the Moa here
top of the Moa here
and then this is just Str mooba which is
and then this is just Str mooba which is
the nice
syntax cool and what happens
now okay this is good now these are
now okay this is good now these are
legitimate errors
this is supposed to be n entities this
this is supposed to be n entities this
way uh actually let me
just I have it truncated the error so
just I have it truncated the error so
the workflow is usually that I do is I
the workflow is usually that I do is I
have the compile on one
have the compile on one
side and it truncates to three errors
side and it truncates to three errors
so Undeclared spawn
so Undeclared spawn
y this is scoping right
okay agent
okay agent
speed uh how did I mess this one up
speed uh how did I mess this one up
here init mooba right so I need to hard
here init mooba right so I need to hard
code I think for
now to
do pass agent speed as
AR agent speed I think it's 0.5 by
AR agent speed I think it's 0.5 by
default or something
right oh it's 1.5
cool so
and then what else do I have
here
here
n this is supposed to be like
this yeah this is just bad
translation all of these functions are
translation all of these functions are
Pointers now
it's a little
pedantic okay undefined
pedantic okay undefined
identifier so these things don't have um
identifier so these things don't have um
board declarations
[Music]
right can I just technically put this at
right can I just technically put this at
the bottom of the file
like nothing else is going to call this
like nothing else is going to call this
ever
ever
right why wouldn't I just put the init
right why wouldn't I just put the init
at the bottom of the
file right like nothing else is going to
file right like nothing else is going to
ever call in
ever call in
it um heck I can actually just put it
it um heck I can actually just put it
above the reset right because it'll be
above the reset right because it'll be
like the main API it's a knit
like the main API it's a knit
reset and
reset and
step I don't know maybe there's some
step I don't know maybe there's some
reason not to do this but let's see if
reason not to do this but let's see if
we're wrong
uh
uh
okay
incompatible okay so first of all this
incompatible okay so first of all this
entities thing here
thing
thing
here does that fix
anything function def not allowed here
anything function def not allowed here
why
not assumedly I forgot
not assumedly I forgot
something yes I forgot a Clos
brace
here okay perfect so now we just have
here okay perfect so now we just have
warnings and we have to fix
these now this is probably just me
these now this is probably just me
messing up my function pointers
incompatible pointer types assigning to
incompatible pointer types assigning to
skill
skill
star
AKA in Star it should not be an in star
star how did I Define this up
top type
top type
def
int St
int St
skill
wait is this supposed to be skill or
wait is this supposed to be skill or
Star
skill what's the type of a function do
skill what's the type of a function do
you have to pass the address of the
you have to pass the address of the
function or not
oh okay so I was right the first time
oh okay so I was right the first time
before I messed with
it
it
so the function is already up pointer so
so the function is already up pointer so
that matches my intuition cuz otherwise
that matches my intuition cuz otherwise
what would it be actually right like a
what would it be actually right like a
void type I don't
know so I
know so I
uncorrected myself
uncorrected myself
before and we still have inal incorrect
before and we still have inal incorrect
pointer type
skills assigning to skill
star
okay let's see if I can guess I didn't
okay let's see if I can guess I didn't
really give it any contact
du expected to be a pointer to a
du expected to be a pointer to a
function
pointer assign a regular function to a
pointer assign a regular function to a
variable
well that doesn't make any
well that doesn't make any
sense yeah this is what we
want yeah this is just an
array uh that's a little
array uh that's a little
weird but I think that that's it there
weird but I think that that's it there
we we go that's correct so now this
we we go that's correct so now this
builds in C at the very
least of course syon is still going to
least of course syon is still going to
be very angry at us
right surprisingly way less angry so
right surprisingly way less angry so
that's kind of the way to go then huh is
that's kind of the way to go then huh is
that you do all your C work in se you
that you do all your C work in se you
make sure your C comp and then you do
make sure your C comp and then you do
scon build cuz scon build is just it's
scon build cuz scon build is just it's
got a bunch of garbage on it like look
got a bunch of garbage on it like look
at how it's compiling it's got a bunch
at how it's compiling it's got a bunch
of garbage
right very nice
right very nice
and we will do a quick check on the
and we will do a quick check on the
video and then we'll keep
fixing 55 views lached one hour ago
cool well we'll see if this gets into
cool well we'll see if this gets into
elgo or
not okay
not okay
[Music]
[Music]
unused
unused
[Music]
[Music]
in spawn
in spawn
y wait unused
variable oh oh that's
gross I didn't know you could even do
that that it does it
that that it does it
build that actually
build that actually
builds that actually does
builds that actually does
build which is fantastic
and L EG
fault because this is building with GCC
fault because this is building with GCC
and it doesn't have F
and it doesn't have F
sanitized so uh let's commit some stuff
sanitized so uh let's commit some stuff
first and then we will check out the
first and then we will check out the
policy that we've trained potentially if
policy that we've trained potentially if
it's any good and then we'll continue
it's any good and then we'll continue
fixing this for
we revoke that
token big rip what
token big rip what
happened yo bet what
happened yo bet what
happened are the freaking boxes all down
oh I need to get box
oh I need to get box
three it's Labor Day so it'll be on
three it's Labor Day so it'll be on
[Music]
tomorrow yeah I think it is like 800 or
tomorrow yeah I think it is like 800 or
something
something
Max um seg fults are fine
Max um seg fults are fine
bet so seg fults are totally fine in um
bet so seg fults are totally fine in um
cuz like here's the thing I'm writing C
cuz like here's the thing I'm writing C
but they're very easy to debug because
but they're very easy to debug because
there's literally like everybody goes oh
there's literally like everybody goes oh
seg fault's hard to debug yeah they're
seg fault's hard to debug yeah they're
really hard to debug if like you don't
really hard to debug if like you don't
know that a dress sanitizer exists and
know that a dress sanitizer exists and
then it literally tells you where the
then it literally tells you where the
seg fault is and then you just fix it
seg fault is and then you just fix it
and you move on with your
life finally AI content that's not in
life finally AI content that's not in
Python so it's a bit of both um what I
Python so it's a bit of both um what I
like to do with puffer is I want to make
like to do with puffer is I want to make
it very very easy to push code from
it very very easy to push code from
python to scon to C so you have like
python to scon to C so you have like
this very very nice way to like
this very very nice way to like
prototypes like stupid code fast and
prototypes like stupid code fast and
then you have a very easy way to get it
then you have a very easy way to get it
running at very uh very high perf so
running at very uh very high perf so
what we do is like our simulators are in
what we do is like our simulators are in
pure C or scyon which runs in pure C so
pure C or scyon which runs in pure C so
either way um they run at like a million
either way um they run at like a million
steps per second
steps per second
plus
plus
and then like the learning library and
and then like the learning library and
stuff on top is in Python but like if
stuff on top is in Python but like if
you think about it most of that's not
you think about it most of that's not
even in Python because the bottleneck
even in Python because the bottleneck
there is uh torch operations that are
there is uh torch operations that are
running under the hood in uh in C++ and
running under the hood in uh in C++ and
Cuda but yeah the Sims they absolutely
Cuda but yeah the Sims they absolutely
have to be in something that is either C
have to be in something that is either C
or C native speed which is what we're
or C native speed which is what we're
doing here now technically scon is
doing here now technically scon is
plenty good enough um the two things I
plenty good enough um the two things I
got annoyed with with cython I got
got annoyed with with cython I got
annoyed with like the build system and
annoyed with like the build system and
the build times and then I got annoyed
the build times and then I got annoyed
because I couldn't easily put it on the
because I couldn't easily put it on the
web like you can't just easily compiled
web like you can't just easily compiled
a web assembly so that's why I started
a web assembly so that's why I started
porting some stuff to uh to Native C I
porting some stuff to uh to Native C I
tell contributors though that like
tell contributors though that like
you're not required to submit stuff in C
you're not required to submit stuff in C
because most people don't want to do
because most people don't want to do
that so scon is fine uh for environments
that so scon is fine uh for environments
it's still plenty
fast but the C is Fun the C is is real
fun I've been a very happy camper just
fun I've been a very happy camper just
like jamming some sea over the
weekend now the one thing that does suck
weekend now the one thing that does suck
I will say is binding to python like the
I will say is binding to python like the
bindings for C code to python are a pain
bindings for C code to python are a pain
so I'm still using scon for that because
so I'm still using scon for that because
pbind is just [ __ ] um and C types is
pbind is just [ __ ] um and C types is
not super fun either but the whole
not super fun either but the whole
simulation code is a native C now and
simulation code is a native C now and
we're fixing that
we're fixing that
up real quick though we're going to try
up real quick though we're going to try
the old model out on the old scon
the old model out on the old scon
version of the environment just to see
version of the environment just to see
if it's doing any
good so this is the python binding for
good so this is the python binding for
it and this is the uh the scon version
it and this is the uh the scon version
that I'm uncommenting here then we have
that I'm uncommenting here then we have
the C version
the C version
and all I want to do this for
and all I want to do this for
is they're supposed to be right
is they're supposed to be right
here okay so this is the model that we
here okay so this is the model that we
just
trained and if we go over
trained and if we go over
to WAND
to WAND
B we should be able to pull down the
B we should be able to pull down the
newly trained model file and see if it
newly trained model file and see if it
looks any good
[Music]
buffer this
buffer this
one yeah this one looks
one yeah this one looks
good uh this is a little
sketchy uh I think that the model might
sketchy uh I think that the model might
have diverged or something wait let me
have diverged or something wait let me
see
let me look for
wins yeah so right here oh no this is
wins yeah so right here oh no this is
actually fine right yeah cuz this last
actually fine right yeah cuz this last
little bit here is just an eval point so
little bit here is just an eval point so
it's still winning games
let's go grab this model
file
file
copy
and mobile p
and let's see if this actually plays the
and let's see if this actually plays the
game
reasonably was it eval model path
okay we'll start with
this
what yeah these things are stupid
right oh you can see right here that
right oh you can see right here that
there's one agent that's like
there's one agent that's like
jungling but the uh the radiant team is
jungling but the uh the radiant team is
stupid here
stupid here
so I'm assuming what happened oh that's
so I'm assuming what happened oh that's
really cool oh you think this is cool
really cool oh you think this is cool
wait until you see
wait until you see
this yeah stick around my
guy and guess what it's all open
source here's the actual
source here's the actual
MOA let's play puffer MOA at like this
MOA let's play puffer MOA at like this
thing runs a million steps per
thing runs a million steps per
second do a little speed boost I forget
second do a little speed boost I forget
my buttons yeah there we go we do an
my buttons yeah there we go we do an
assassinate on this
assassinate on this
one get out of tower
one get out of tower
range okay wait for
Mana what the heck is going on with
Mana what the heck is going on with
these guys okay so now he comes back and
these guys okay so now he comes back and
now we should just Auto
now we should just Auto
him and then I wait for my wave and uh I
him and then I wait for my wave and uh I
think you can assassinate the tower in
think you can assassinate the tower in
this so let's try
this so let's try
that take Tower aggro
that take Tower aggro
please oh no the tower's destroying
me ah the tank is killing me the tank
me ah the tank is killing me the tank
with the AOE is too
strong uh do I have Mana for this I
strong uh do I have Mana for this I
think I do
think I do
right oh I do have Mana but it's still
right oh I do have Mana but it's still
going to kill me yep
going to kill me yep
okay that was the Quick Test I think
okay that was the Quick Test I think
that what we need to do is we need to
that what we need to do is we need to
rerun this uh experiment for like
rerun this uh experiment for like
slightly fewer steps because I think
slightly fewer steps because I think
it's just unst uh unstable you got Dove
it's just unst uh unstable you got Dove
no I dove it and died I inted is what
no I dove it and died I inted is what
happened I will I have to
happened I will I have to
admit and all this game is done all the
admit and all this game is done all the
game AI is done using RL the player AI
game AI is done using RL the player AI
is RL uh the player AI is way better
is RL uh the player AI is way better
than you just saw by the way the model
than you just saw by the way the model
in this one collapsed so the hero AI
in this one collapsed so the hero AI
they're five different Heroes it's a
they're five different Heroes it's a
mirror match 5v5 and the models are
mirror match 5v5 and the models are
trained with reinforcement learning
yes and for context um if you click
yes and for context um if you click
around on the channel I'm assuming if
around on the channel I'm assuming if
you just got here that you're brand new
you just got here that you're brand new
I am a uh newly minted MIT PhD I've been
I am a uh newly minted MIT PhD I've been
doing reinforcement learning for 8 years
doing reinforcement learning for 8 years
I am now on a quest to make
I am now on a quest to make
reinforcement learning actually work
reinforcement learning actually work
with good infrastructure so we're doing
with good infrastructure so we're doing
tons of infra which is in puffer lib and
tons of infra which is in puffer lib and
we're building tons of really ultra high
we're building tons of really ultra high
performance simulators for training and
performance simulators for training and
evaluating reinforcement learning agents
evaluating reinforcement learning agents
um that is what I am currently doing and
um that is what I am currently doing and
if you want to check it out the code is
if you want to check it out the code is
surprisingly simple for all of this I
surprisingly simple for all of this I
really don't write big intricate things
really don't write big intricate things
so I will link it
go ahead and star the puffer to help me
go ahead and star the puffer to help me
out uh and yeah stick around because
out uh and yeah stick around because
there's a lot of this Dev happening it's
there's a lot of this Dev happening it's
really exciting for the field I just
really exciting for the field I just
posted a big video today on with like
posted a big video today on with like
all of my thoughts on where the field is
all of my thoughts on where the field is
going and how puffer lib is going to fix
going and how puffer lib is going to fix
stuff in here
stuff in here
yeah I remember seeing your thesis
yeah I remember seeing your thesis
defense okay perfect so from my thesis
defense okay perfect so from my thesis
defense the most like I just today
defense the most like I just today
posted a video I spent a lot of time on
posted a video I spent a lot of time on
that outlines like all the stack the
that outlines like all the stack the
entire RL stack from hyper parameters
entire RL stack from hyper parameters
down to well you'll see um and what
down to well you'll see um and what
puffer is doing at every
puffer is doing at every
level and since that's finally finished
level and since that's finally finished
basically the plan for the next several
basically the plan for the next several
weeks is to just Jam some code and make
weeks is to just Jam some code and make
this simulator and several others
this simulator and several others
ridiculously fast and run lots of very
ridiculously fast and run lots of very
good experiments on them that's the
good experiments on them that's the
current plan
current plan
since my thesis everything has gotten a
since my thesis everything has gotten a
thousand times faster it's actually
nuts mostly because I stopped writing
nuts mostly because I stopped writing
stuff in naive
python I still do like python but
python I still do like python but
like I'm enjoying my SE much more now
okay so we'll run that in the background
okay so we'll run that in the background
and
and
um it's going to have to retrain because
um it's going to have to retrain because
the model like I think it just collapsed
the model like I think it just collapsed
you know not amazing hypers
and now we got to fix the seg bols
right so this seg bols yeah
and it's right now it's because it's
and it's right now it's because it's
compiling it without F sanitized
right I'm trying to think how I want to
right I'm trying to think how I want to
do this because
just started Masters in
just started Masters in
THS simulating RL models was something I
THS simulating RL models was something I
really wanted to go to possibly with a
really wanted to go to possibly with a
video game development process well you
video game development process well you
found
found
it we have a bunch of people now that
it we have a bunch of people now that
are like making and contributing Sims to
are like making and contributing Sims to
the project as well and it's really cool
the project as well and it's really cool
to see people that just have General
to see people that just have General
software engineering backgrounds um
software engineering backgrounds um
writing stuff that's like a million
writing stuff that's like a million
steps per second plus and it pretty much
steps per second plus and it pretty much
as soon as we get enough of these
as soon as we get enough of these
simulators that run fast like RL is a
simulators that run fast like RL is a
whole different field so that's the main
whole different field so that's the main
focus at the moment thus far there's
focus at the moment thus far there's
this one there's like a grid World en
this one there's like a grid World en
there's a snake game couple contributors
there's a snake game couple contributors
have made a tar breakout in pong there's
have made a tar breakout in pong there's
like another PVP turnbas thing uh that
like another PVP turnbas thing uh that
somebody just started and I have another
somebody just started and I have another
big project I haven't announced yet as
big project I haven't announced yet as
well so there's a lot of progress in
well so there's a lot of progress in
this base got a star definitely using
this base got a star definitely using
this Library hey I hope so and uh let me
this Library hey I hope so and uh let me
know if anything's not working out
know if anything's not working out
because I'm pretty much always just here
because I'm pretty much always just here
on stream so it's like the best tech
on stream so it's like the best tech
support ever it's just like hey your
support ever it's just like hey your
stupid code doesn't work perfect right I
stupid code doesn't work perfect right I
fix it
live the M the master Branch should be
live the M the master Branch should be
pretty stable but it's usually a couple
pretty stable but it's usually a couple
months out date the dev branch is it has
months out date the dev branch is it has
tons of cool stuff always but it's like
tons of cool stuff always but it's like
I move fast and break things there so if
I move fast and break things there so if
I break things you let me
know all right where's the darned F
know all right where's the darned F
sanitize
setting uh
I can just run the cython command
I can just run the cython command
manually I know
manually I know
right but this extra compile ARS gets
right but this extra compile ARS gets
ignored doesn't
it yeah unknown distribution option
it yeah unknown distribution option
extra compile
arson compile where
I have to make this an
extension I really shouldn't have to do
that Discord yep there is a Discord as
that Discord yep there is a Discord as
well Discord juffer
the other cool demo on Puffer that I
the other cool demo on Puffer that I
forgot to to show off is um this is the
forgot to to show off is um this is the
reason for doing it in C right is like
reason for doing it in C right is like
here I'm playing snake versus RL agents
here I'm playing snake versus RL agents
in the
in the
browser and these are just running live
browser and these are just running live
on like one CPU
on like one CPU
core see I just juked a
core see I just juked a
snake and then I can take my hands off
snake and then I can take my hands off
and the RL takes over
so hopefully we'll do all the
so hopefully we'll do all the
environments we'll have stuff like
environments we'll have stuff like
that I really don't like
that I really don't like
this I'm trying to think if there's a
this I'm trying to think if there's a
better way I can
test I think I can just compile
test I think I can just compile
locally uh with the address sanitizer
locally uh with the address sanitizer
and I'll just have to make like some
and I'll just have to make like some
sort of
sort of
demo to run
demo to run
this yeah I need to make this run
this yeah I need to make this run
standalone C in order to test it that's
standalone C in order to test it that's
the problem and there's like there's a
the problem and there's like there's a
bunch of file data that has to get
bunch of file data that has to get
loaded that's going to be very painful
loaded that's going to be very painful
to do and
see maybe
see maybe
not but that's the direction we have to
not but that's the direction we have to
go we're going to have to slow down a
go we're going to have to slow down a
little bit we're going to have to just
little bit we're going to have to just
Port the rest of it to see and then what
Port the rest of it to see and then what
I should be able to do is I should be
I should be able to do is I should be
able to write um just something to take
able to write um just something to take
random actions in the environment
random actions in the environment
and then after that I should be able to
and then after that I should be able to
load policies into
load policies into
it so that's the way that we'll do we'll
it so that's the way that we'll do we'll
handle that how's this thing
going it's
going
going
nice garbage
ads okay
let's see how bad it is
let's see how bad it is
so I think this is the main logic right
so I think this is the main logic right
here that we haven't ported
yet really the only thing that I don't
yet really the only thing that I don't
know how to do
know how to do
easily is
easily is
like there's a dictionary
here right there's a
here right there's a
dictionary and I need to be able
dictionary and I need to be able
to load the file for
this there's a map and there's a
this there's a map and there's a
dictionary and I need to be able to load
dictionary and I need to be able to load
the files in
C enjoy the new video been following
C enjoy the new video been following
puffer for over a year amazing to see
puffer for over a year amazing to see
that there are phds who don't write
that there are phds who don't write
research codes
research codes
that's what I'm saying man it's like
that's what I'm saying man it's like
write good
write good
code the only metric that matters is the
code the only metric that matters is the
eye bleed metric it's like do my eyes
eye bleed metric it's like do my eyes
bleed reading the
bleed reading the
code H lately I've been getting lower
code H lately I've been getting lower
and lower level with this stuff as well
and lower level with this stuff as well
um so right now this is me porting the
um so right now this is me porting the
mooba from that video to
mooba from that video to
see and not scyon native C so this is
see and not scyon native C so this is
The scon Binding that I'm slowly putting
The scon Binding that I'm slowly putting
into the mob file there are a couple
into the mob file there are a couple
things I haven't figured out yet but
things I haven't figured out yet but
it's mostly there so I mean this is400
it's mostly there so I mean this is400
lines of C that didn't exist before
lines of C that didn't exist before
Saturday really I've only spent Saturday
Saturday really I've only spent Saturday
and a couple hours today on
it um so this is going to be fun as soon
it um so this is going to be fun as soon
as I figure out how to test this
as I figure out how to test this
Standalone and such uh we're going to be
Standalone and such uh we're going to be
able to play this on the web so if users
able to play this on the web so if users
will be able to like test it out and
will be able to like test it out and
like find bugs and stuff and play
like find bugs and stuff and play
against the RL agents hopefully they'll
against the RL agents hopefully they'll
have to Port A couple more um neuronet
have to Port A couple more um neuronet
layers before we can do that part of
it unfortunately the consequence of not
it unfortunately the consequence of not
writing research code is that people
writing research code is that people
don't like you uh and they don't let you
don't like you uh and they don't let you
publish stuff at
publish stuff at
conferences no good code
conferences no good code
allowed what are your thoughts on the
allowed what are your thoughts on the
company key I think I've heard of them
Ken whose company was
Ken whose company was
this oh yeah this is carac thing
this oh yeah this is carac thing
right I mean karmac is good
right I don't know what they're
right I don't know what they're
doing like I don't know what they're
doing like I don't know what they're
doing I haven't seen like anything from
them Kean AG
them Kean AG
gu yeah no effort I mean they're
gu yeah no effort I mean they're
speaking my language there but I haven't
speaking my language there but I haven't
seen anything on them
right
right
yeah I will tell you right
yeah I will tell you right
now like could I go raise 20 million if
now like could I go raise 20 million if
I wanted to if I like got a couple of my
I wanted to if I like got a couple of my
buddies involved
buddies involved
yeah um but frankly like I don't want to
yeah um but frankly like I don't want to
go this
route at least what I'm doing at the
route at least what I'm doing at the
moment I'm trying to just like bootstrap
moment I'm trying to just like bootstrap
this thing and get some Revenue um The
this thing and get some Revenue um The
Hope is that we're going to have zero
Hope is that we're going to have zero
investor obligations so we're basically
investor obligations so we're basically
just going to be able to do whatever and
just going to be able to do whatever and
just keep releasing cool technology
just keep releasing cool technology
without any pressures to do other
stuff we'll see how that goes but hey
stuff we'll see how that goes but hey
with the new video puffer is officially
with the new video puffer is officially
open for business right
open for business right
so doesn't take much if we just get a
so doesn't take much if we just get a
few clients over the next several months
few clients over the next several months
then we'll be able to just solo uh like
then we'll be able to just solo uh like
slow roll this
thing no talk is cheap got a code
speaking of which um I am currently
speaking of which um I am currently
being stumped by the incredibly simple
being stumped by the incredibly simple
problem of not knowing how to Y to
problem of not knowing how to Y to
load what is this a yaml
load what is this a yaml
file there are a few different files
file there are a few different files
here that I don't know how to
here that I don't know how to
load well at least not I don't know how
load well at least not I don't know how
to load easily
so this one is easy right this pathing
so this one is easy right this pathing
c.
c.
numpy I can save this one as a
binary this data.
file I can either I could hard code all
file I can either I could hard code all
of this technically right
I don't think I want to write a yaml
I don't think I want to write a yaml
loader is the main
loader is the main
thing right that's
thing right that's
like I don't want to have to do that let
like I don't want to have to do that let
me just make sure I'm not being stupid
me just make sure I'm not being stupid
here if there's an obvious thing chat
here if there's an obvious thing chat
jippy says then I'll do that but I don't
jippy says then I'll do that but I don't
think that there
is for
Li
yaml I mean honestly doing
yaml I mean honestly doing
um this amount of
file.io is not going to be that wouldn't
file.io is not going to be that wouldn't
be fun either
serialized binary
format okay so there is not anything
here these are all dumb so I think what
here these are all dumb so I think what
we're going to
do this DOTA map is flat data so I can
do this DOTA map is flat data so I can
just like
just like
I can just write this out to a flat
I can just write this out to a flat
array um and then load that into C same
array um and then load that into C same
thing for this pathing cache in fact
thing for this pathing cache in fact
this is going to get ported to C anyways
this is going to get ported to C anyways
probably so that's not a
probably so that's not a
problem and then this data. yaml file
problem and then this data. yaml file
this just has like spawn positions and
this just has like spawn positions and
stuff so I think I'll just hardcode
stuff so I think I'll just hardcode
these things as static arrays I mean
these things as static arrays I mean
they're just constants anyways right why
they're just constants anyways right why
do we need to have file IO it's like one
do we need to have file IO it's like one
game this isn't a config there's no
game this isn't a config there's no
reason not to just have this all be
reason not to just have this all be
static so I think that if we do
static so I think that if we do
that like there will be marginally more
that like there will be marginally more
code just from me pasting in some
code just from me pasting in some
data but it'll actually get a little bit
data but it'll actually get a little bit
simpler and we will um we'll drop the
simpler and we will um we'll drop the
yaml dependency and we'll be able to
yaml dependency and we'll be able to
make the environment in Native
make the environment in Native
sea so I'm going to use the restroom
sea so I'm going to use the restroom
real quick real real quick and then we
real quick real real quick and then we
will uh we'll go do that be right
back
e e
I don't know why I didn't think of this
I don't know why I didn't think of this
earlier to be honest cuz I have a whole
earlier to be honest cuz I have a whole
bunch of different data structures that
bunch of different data structures that
are all just being read from a dumb yel
are all just being read from a dumb yel
like I can just hardcode the data
like I can just hardcode the data
structure to be static and have a way
structure to be static and have a way
easier time of it
easier time of it
right like these way points we don't use
right like these way points we don't use
them anywhere in the
python Okay so
python Okay so
I guess this just goes over
I guess this just goes over
here uh data yl I mean the one obnoxious
here uh data yl I mean the one obnoxious
thing is we have to redo the formatting
thing is we have to redo the formatting
of
of
this uh if the data changes but it
this uh if the data changes but it
probably won't change and even if it
probably won't change and even if it
does like we'll just write a little
does like we'll just write a little
script
right yeah
way
points four
points four
five six
I'm trying to think if I should actually
I'm trying to think if I should actually
just take the pre-processing script that
just take the pre-processing script that
I have now that writes to
I have now that writes to
yaml and just make it like output in no
yaml and just make it like output in no
format
um I should just make it output in a
um I should just make it output in a
format that will be loadable from C
format that will be loadable from C
right or like close to it
that's a lot of manual processing to do
that's a lot of manual processing to do
right and I don't trust GPT to not screw
right and I don't trust GPT to not screw
up and like hallucinate stuff with
up and like hallucinate stuff with
this yeah that's like too much to do
this yeah that's like too much to do
manually if there's any possibility that
manually if there's any possibility that
it could
change maybe not
change maybe not
maybe
maybe
not let me go look at the variables that
not let me go look at the variables that
we have to load this
into action
into action
map I mean
it's I mean it's this little bit of
it's I mean it's this little bit of
logic here right we have like Camp data
logic here right we have like Camp data
Tower data
okay so it will just autocomplete for me
okay so it will just autocomplete for me
but the question is whether it'll auto
but the question is whether it'll auto
complete
complete
correctly um so I'm going to have to
correctly um so I'm going to have to
check
that I can just start deleting
that I can just start deleting
stuff as I check it right so yeah we'll
stuff as I check it right so yeah we'll
do we'll do this so we'll just use GPT
do we'll do this so we'll just use GPT
or I guess this is super Maven as a like
or I guess this is super Maven as a like
a soft formatter and we'll just manually
a soft formatter and we'll just manually
check to make sure it hasn't
check to make sure it hasn't
hallucinated
hallucinated
anything that's probably fine
anything that's probably fine
right
four yeah this will be pretty
quick
quick
n
two uh
73 this actually has not hallucinated
73 this actually has not hallucinated
anything at all so
anything at all so
far which is quite nice
man we should have um overlays and stuff
man we should have um overlays and stuff
in order to check to be sure that like
in order to check to be sure that like
the positions look like they're
the positions look like they're
reasonable anyways this is just me being
reasonable anyways this is just me being
paranoid
paranoid
about language models
hallucinating I'd be kind of surprised
hallucinating I'd be kind of surprised
though if it's actually like
just straight up like doing this
just straight up like doing this
correctly from the model itself is it
correctly from the model itself is it
not like writing a little script does it
not like writing a little script does it
have like a copy routine or something
have like a copy routine or something
probably has like some function calling
thing okay so that's the neutrals
thing okay so that's the neutrals
actually done that's pretty
nice uh and now we can
do I have to do the towers in the right
do I have to do the towers in the right
order now is the hard
order now is the hard
thing I'm pretty sure that I
did let me
see idx Tower data and enumerate
Towers wait a second it says that I just
Towers wait a second it says that I just
go through them in order doesn't
it oh yeah I just go through them in
it oh yeah I just go through them in
order because um they also have the tier
order because um they also have the tier
on them so let's just do
that Tower
that Tower
X Tower
X Tower
y so we have damage health
y so we have damage health
uh
uh
tier we need Tower team as
well team
well team
tier so we just have like this garbage
tier so we just have like this garbage
at the top which is totally
fine so and then we'll just make sure
fine so and then we'll just make sure
that it uh it didn't
that it uh it didn't
hallucinate which is pretty quick
actually
damage5
damage5
wait okay here it actually did
hallucinate look at the the
hallucinate look at the the
team team
team team
zero team one you can see it
zero team one you can see it
hallucinated
hallucinated
here it did it uh opposite it's supposed
here it did it uh opposite it's supposed
to
to
be open-ended
be open-ended
mess of course I've looked into Ken
mess of course I've looked into Ken
Stanley's work I've spoken with him
Stanley's work I've spoken with him
several
several
times most of the open-ended people are
times most of the open-ended people are
at open air I don't think so no they
at open air I don't think so no they
went they were at Uber and then they
went they were at Uber and then they
went to open Ai and then they left so I
went to open Ai and then they left so I
spoke with Jeff cloon and Ken Stanley
spoke with Jeff cloon and Ken Stanley
when they were at Uber they were in like
when they were at Uber they were in like
this random group that for some reason
this random group that for some reason
Uber was funding a bunch of cool work
Uber was funding a bunch of cool work
and then that team I think it's just
and then that team I think it's just
that team got canned or whatever they
that team got canned or whatever they
just stopped doing that and then uh they
just stopped doing that and then uh they
went to open AI for like a year and
went to open AI for like a year and
change and then Jeff started a
change and then Jeff started a
professorship uh I have a collab with
professorship uh I have a collab with
one of his students now and then Ken
one of his students now and then Ken
went to do he did that
went to do he did that
startup um what's the social media thing
startup um what's the social media thing
he did like a a social media thing uh
he did like a a social media thing uh
and I don't know what he's been doing
since open-ended mess yeah welcome back
since open-ended mess yeah welcome back
thank you you could use a CSV for the
thank you you could use a CSV for the
data yeah you're totally right that I
could I forgot that yeah there's like
could I forgot that yeah there's like
the dumb pound include CSV trick
okay that would probably be a better
okay that would probably be a better
idea
right Maven yeah that one
yeah I already I have the data in a
yeah I already I have the data in a
weird format to begin with which is
weird format to begin with which is
somewhat obnoxious yeah so this thing is
somewhat obnoxious yeah so this thing is
just freaking hallucinating completely
just freaking hallucinating completely
isn't
it look at that it can't even get the
it look at that it can't even get the
team
team
right well that's
right well that's
obnoxious I wonder why that happens it
obnoxious I wonder why that happens it
has the team so clearly there and it
has the team so clearly there and it
looks like it's doing like three
looks like it's doing like three
three three
two oh it's just completely
two oh it's just completely
hallucinating now yeah yeah I don't
hallucinating now yeah yeah I don't
trust this at
trust this at
all okay maybe I should actually do
all okay maybe I should actually do
this but wait how do I have multiple
this but wait how do I have multiple
entries as a CSV and then save that
entries as a CSV and then save that
correctly
that's pretty
that's pretty
Universal if you want to load it into
Universal if you want to load it into
any language easily
um I mean I have it as a yaml at the
um I mean I have it as a yaml at the
moment I just don't want to have to have
moment I just don't want to have to have
a yaml loader and
a yaml loader and
see it's just in D it's in an annoying
see it's just in D it's in an annoying
format at the
moment well yam was selected because it
moment well yam was selected because it
was plenty easy when I was loading it
was plenty easy when I was loading it
from Python and passing the data to C
from Python and passing the data to C
but in order for this to run in C
but in order for this to run in C
Standalone right then I would have to
Standalone right then I would have to
have a yaml parser and I don't want to
have a yaml parser and I don't want to
do yaml parsing in
do yaml parsing in
C which is why I was just going to
C which is why I was just going to
hardcode the data at the top which to be
hardcode the data at the top which to be
fair I should probably just keep doing
fair I should probably just keep doing
this and just double check it because
this and just double check it because
this won't take very long
dude like this thing needs to
dude like this thing needs to
stop like why does it have why does it
stop like why does it have why does it
think that there three teams in Dota
think that there three teams in Dota
come
on here we'll just we'll do this portion
on here we'll just we'll do this portion
manually is what we'll do power health
manually is what we'll do power health
Team and then we'll do float power tier
Team and then we'll do float power tier
okay so now we'll see look damage is
okay so now we'll see look damage is
correct health is correct team we'll put
correct health is correct team we'll put
this zero right
this zero right
then tier is going to be
then tier is going to be
three and then we'll delete these two we
three and then we'll delete these two we
see that X is correct I think it'll get
see that X is correct I think it'll get
the X and y's correct for the most part
the X and y's correct for the most part
and then
and then
damage wait did it screw up damage as
damage wait did it screw up damage as
well how did it do
that what the hell it just completely
that what the hell it just completely
messed up didn't it
okay well I guess we're doing a lot of
okay well I guess we're doing a lot of
it manually
image going to be
image going to be
zero
three and then this 29 this is
three and then this 29 this is
correct
correct I'll just I'll just quickly
correct I'll just I'll just quickly
finish this yeah there's no point like
finish this yeah there's no point like
thinking about how to do it better it's
thinking about how to do it better it's
just just you know write it quick and be
just just you know write it quick and be
done
we'll just speedrun the boring uh data
we'll just speedrun the boring uh data
munching format
thing if you think about it this is
thing if you think about it this is
still ultimately not that bad because
still ultimately not that bad because
like this is unlikely to have to
like this is unlikely to have to
change and if it is we'll like we'll
change and if it is we'll like we'll
write a script when we have to change it
write a script when we have to change it
not
before and uh this gets rid of like the
before and uh this gets rid of like the
whole file processing
whole file processing
[ __ ] thing right so it's just less
[ __ ] thing right so it's just less
code to
maintain okay now we're on tier
maintain okay now we're on tier
twos we
get are the X and y's not even
correct yeah okay if it's going to get
correct yeah okay if it's going to get
the X and y's wrong we have to write a
the X and y's wrong we have to write a
script I'm going to mess this up if I
script I'm going to mess this up if I
have to to copy and paste like this
have to to copy and paste like this
many damn
many damn
it ah fine we'll write the script
it ah fine we'll write the script
through
it we'll just write the script
yes
yes
V where is it data
V where is it data
map
map
okay save data of
okay save data of
towers data path
corners and then save
data I need to like
I need to Fork this
I need to Fork this
repo and move my changes into it don't
I M
processing yeah this one
let Fork
this welcome YouTube
folks so what this is uh what are your
folks so what this is uh what are your
thoughts on Chet's Arc challenge is it
thoughts on Chet's Arc challenge is it
interesting for
you I
mean I don't know
it's kind of like a weird problem
it's kind of like a weird problem
structure I mean I think it's an
structure I mean I think it's an
interesting
interesting
work I don't know if it's I find it the
work I don't know if it's I find it the
most compelling thing it's interesting
most compelling thing it's interesting
for
sure it's like a p it's like a zero shot
sure it's like a p it's like a zero shot
pattern recognition thing
it's not an our it doesn't fit nicely as
it's not an our it doesn't fit nicely as
an RL problem though I'll tell you that
much being good-hearted yeah totally
much being good-hearted yeah totally
that's what they do these days though
that's what they do these days though
right I mean like think about it you got
right I mean like think about it you got
all these [ __ ] that are like just
all these [ __ ] that are like just
trying to post the highest score on all
trying to post the highest score on all
these llm benchmarks so that like their
these llm benchmarks so that like their
thing is the best and like they're
thing is the best and like they're
completely overfitting and over
completely overfitting and over
optimizing to it the same thing happened
optimizing to it the same thing happened
with Atari and reinforcement
learning like researchers are not always
honest for
okay
why is this thing not
why is this thing not
remembering hold
remembering hold
on this thing should not be asking me
on this thing should not be asking me
for my
password burnt 40K with his weird hm
password burnt 40K with his weird hm
approach
yeah that's
silly I mean I'm generally I'm kind of
silly I mean I'm generally I'm kind of
at a point where like with the stuff
at a point where like with the stuff
that I'm doing and you can kind of
that I'm doing and you can kind of
probably get this from the video that I
probably get this from the video that I
put
put
out
out
um but I'm kind of at a point where I'm
um but I'm kind of at a point where I'm
just like ignoring all the llm stuff
just like ignoring all the llm stuff
ignoring all the mainstream stuff you
ignoring all the mainstream stuff you
know 5050 they're right but if they're
know 5050 they're right but if they're
wrong then you know my work on puffer is
wrong then you know my work on puffer is
just going to change everything so so
just going to change everything so so
I'm like just ignoring all the stuff
I'm like just ignoring all the stuff
that's coming out it has like so much
that's coming out it has like so much
money behind of it a lot of it is
money behind of it a lot of it is
smoking mirrors though and I'm just like
smoking mirrors though and I'm just like
doing the work on the RL side and that's
doing the work on the RL side and that's
I think that's the way
forward I don't know why this thing
forward I don't know why this thing
wasn't enabled
I saw the thing on
I saw the thing on
um I saw the thing posted where
um I saw the thing posted where
somebody's like well actually an llm
somebody's like well actually an llm
just does it I didn't know that they
just does it I didn't know that they
spent 40K I assume that they like
spent 40K I assume that they like
tinkered with it a whole bunch though
I still think that the challenge itself
I still think that the challenge itself
is like it's like a reasonable thing to
is like it's like a reasonable thing to
ask but like you know people don't
ask but like you know people don't
engage honestly with stuff like that
can I not just write the whole
file is this dumb is there like easy way
file is this dumb is there like easy way
to do
this if there's not like an aound
this if there's not like an aound
include then I am just going to do the
include then I am just going to do the
data processing manually
oh jeez no we're not doing
this I'm they're like a
trick use an llm
trick use an llm
samples
it python
interpreter yeah so like congratulations
interpreter yeah so like congratulations
you prove that researchers are smart
you prove that researchers are smart
right like congratulations you prove
right like congratulations you prove
that you are smart not that LM can do
anything yeah okay this is really gross
anything yeah okay this is really gross
so I think what we're going to do is
so I think what we're going to do is
we're just going to get this to Output a
we're just going to get this to Output a
yaml we're going to get this to just
yaml we're going to get this to just
output a yaml with ar
output a yaml with ar
rays and then we'll just copy paste that
rays and then we'll just copy paste that
data in
and
then CSV for every entry you'd
have yeah I'm still going to have to
have yeah I'm still going to have to
like load that though like it's not just
like load that though like it's not just
one field where I can just pound include
one field where I can just pound include
it I think that the easier thing is just
it I think that the easier thing is just
going to be to like make a script that
going to be to like make a script that
spits out the data as a bunch of flat
spits out the data as a bunch of flat
arrays so I know I'm not going to get
arrays so I know I'm not going to get
the numbers wrong and then just paste
the numbers wrong and then just paste
that into the file
right like this is not a config right
right like this is not a config right
this is static game
data so we'll just do
data so we'll just do
like uh neutral
like uh neutral
Camp
X neutral Camp
y we don't care whose team this is on I
y we don't care whose team this is on I
don't think I saved this data and
Powers right so I understand what you're
Powers right so I understand what you're
saying there yeah there's absolutely a
saying there yeah there's absolutely a
way to do it but like
you see that I still have to load it and
you see that I still have to load it and
I have to not screw up loading it right
I have to not screw up loading it right
and like if I make any subtle errors and
and like if I make any subtle errors and
loading the data I'm going to be
loading the data I'm going to be
debugging the stuff for hours because
debugging the stuff for hours because
it's like I'm going to have to figure
it's like I'm going to have to figure
out how it's like somehow making the
out how it's like somehow making the
game settings
game settings
wrong um it seems like the easiest and
wrong um it seems like the easiest and
least error prone thing to do is to just
least error prone thing to do is to just
like write a script that writes all this
like write a script that writes all this
data flat to a file open the file make
data flat to a file open the file make
sure that it looks good
sure that it looks good
and then just paste the arrays in as
and then just paste the arrays in as
static arrays and C
right like it's fine if it looks
dumb it's allow you're allowed to look
dumb it's allow you're allowed to look
dumb
right oh
right oh
y
okay and then we have way points
okay now this one is a little bit
okay now this one is a little bit
trickier because this is a 2d array I
trickier because this is a 2d array I
believe
I think then we just have to
do what's the C multi-m array inax does
do what's the C multi-m array inax does
it matter
we'll figure this portion
out this is actually going to make it
out this is actually going to make it
easier if you think about it because I
easier if you think about it because I
literally just have to do like this it's
literally just have to do like this it's
flat
flat
right
right
oops uh we don't save the do we save the
oops uh we don't save the do we save the
team do we use the team for
team do we use the team for
anything I think so I think we can just
anything I think so I think we can just
do this
yeah look how easy that
yeah look how easy that
is you literally just
is you literally just
depend all the different fields
and
then half corner
what's the thing called Waypoint spawn
X okay why is this
X okay why is this
erroring oh it's save data
erroring oh it's save data
of okay
and then these way points
and then these way points
here uh might be
reasonable as
reasonable as
is except I think that it has to not be
is except I think that it has to not be
a
a
dictionary so I don't know about this I
dictionary so I don't know about this I
think it's path toward do
think it's path toward do
append X and Y I think it's like
this where's this PVP
refab oh it's supposed to be exit here I
refab oh it's supposed to be exit here I
forgot the
forgot the
exit we don't need this
exit we don't need this
stuff yeah this
runs okay so now this is saved to yaml
runs okay so now this is saved to yaml
but we don't want yaml we want
but we don't want yaml we want
um like some type of CSV I
um like some type of CSV I
assume Tower X yeah like this
assume Tower X yeah like this
is this is
is this is
ridiculous pretty clear opening I
ridiculous pretty clear opening I
trained on
trained on
Arc good for the intuition
Arc good for the intuition
search bunch of prompting self
search bunch of prompting self
[Music]
verication yeah I mean it's
I don't even really know what to think
I don't even really know what to think
about the language model stuff these
about the language model stuff these
days
days
um like Ken lm's reason depends entirely
um like Ken lm's reason depends entirely
on how you define reason right it's a
on how you define reason right it's a
definitions
game Zero
Performance only generalized to constant
Performance only generalized to constant
instances
instances
that's
that's
funny yeah there's clearly there's
funny yeah there's clearly there's
something screwy I will say this
something screwy I will say this
right I think it's very unlikely that
right I think it's very unlikely that
all of AI is just going to be solved in
all of AI is just going to be solved in
hallucination where like it's just
hallucination where like it's just
thinking to itself and eventually it
thinking to itself and eventually it
just spits out the right answers to
just spits out the right answers to
everything I think it's way more likely
everything I think it's way more likely
that you're going to need some form of
that you're going to need some form of
grounding whether it's writing programs
grounding whether it's writing programs
and calling them or whether it's like
and calling them or whether it's like
through interaction with with a fixed
through interaction with with a fixed
simulator that gives you fixed results
simulator that gives you fixed results
it's basically the same thing um but the
it's basically the same thing um but the
grounding in like a fixed environment is
grounding in like a fixed environment is
the thing that I think is important with
the thing that I think is important with
RL like all the RL algorithms could get
RL like all the RL algorithms could get
replaced tomorrow and I wouldn't care
replaced tomorrow and I wouldn't care
right it's I care about the fixed data
right it's I care about the fixed data
from simulators and being able to train
from simulators and being able to train
quickly on just massive massive amounts
quickly on just massive massive amounts
of simulated data
CSV works better if you use the string
CSV works better if you use the string
type from C++ you're looking for c not C
type from C++ you're looking for c not C
yes so this is going in C
yes so this is going in C
um I think we basically have it on hly
um I think we basically have it on hly
this is just has to be
this is just has to be
process. zsv or whatever uh and
then how why does it have this these
then how why does it have this these
headers can I not just like write
headers can I not just like write
stuff TR to do Json
stuff TR to do Json
instead maybe Json
let's try this I think that this
let's try this I think that this
probably gives me the format I want
right yeah so this looks disgusting but
right yeah so this looks disgusting but
this is it right cuz I can just paste
this is it right cuz I can just paste
this in change the brackets around a
this in change the brackets around a
little bit and be
fine now technically what I could
fine now technically what I could
do is I could be a little bit nicer with
do is I could be a little bit nicer with
this and instead of saving it to
this and instead of saving it to
Json um we can just
Json um we can just
[Music]
say process. text
text and then we can just
text and then we can just
do perhaps we're also take talk any file
do perhaps we're also take talk any file
wait sorry you mentioned a
wait sorry you mentioned a
config constant variables that won't
config constant variables that won't
change yes these are constant variables
change yes these are constant variables
that won't change these are things like
that won't change these are things like
you can see right here right this is
you can see right here right this is
like these are the hardcoded uh pathway
like these are the hardcoded uh pathway
points that the AI uses to navigate
points that the AI uses to navigate
around not R AI but like the creep AI
around not R AI but like the creep AI
like the minion and stuff um it has like
like the minion and stuff um it has like
the hardcoded tower positions and things
the hardcoded tower positions and things
like that we have any files for training
like that we have any files for training
experiments and stuff that's not a
experiments and stuff that's not a
problem this is just game
configuration like this is a very very
configuration like this is a very very
easy problem frankly um I had it in yaml
before hey Reno
before hey Reno
yeah no
worries will you YouTube is way behind
worries will you YouTube is way behind
your Twitch can I fix
that what are we at we're at
that what are we at we're at
92 can I fix
this twitch lags twitch should not lag
this twitch lags twitch should not lag
behind
behind
YouTube I think that there is a latency
YouTube I think that there is a latency
setting isn't
setting isn't
there on the
stream
Studio where's this settings
well
that's where's the uh
I if anybody knows where the setting is
I if anybody knows where the setting is
I'll try to fix it from there but I
I'll try to fix it from there but I
don't know if there is one
it's curly braces right for
it's curly braces right for
um lists uh static list and
C okay
yeah let's try
this live stream look for stream
this live stream look for stream
settings tab maybe I can fix that
cuz where's the freaking tab I hate this
cuz where's the freaking tab I hate this
UI it's so
UI it's so
bad early braces yeah D why does it take
bad early braces yeah D why does it take
me back to here I just want to
do oh cool the uh click-through rate is
do oh cool the uh click-through rate is
pretty good well no this actually it's
pretty good well no this actually it's
not it's the view duration is good
not it's the view duration is good
though
though
um where's the freaking live stream so I
um where's the freaking live stream so I
can make this thing not be terrible for
can make this thing not be terrible for
you guys to
watch
watch
content
content
live ah
settings dude this is like the worst UI
settings dude this is like the worst UI
of all time I literally can't find
anything I mean you're seeing how dumb
anything I mean you're seeing how dumb
this is
right help me discover yeah I hope so
right help me discover yeah I hope so
well if anybody knows where this thing
well if anybody knows where this thing
actually is I'll gladly fix it but this
actually is I'll gladly fix it but this
thing's ridiculous and uh this will get
thing's ridiculous and uh this will get
boring very quickly if I'm messing with
boring very quickly if I'm messing with
settings we should be
coding I will say um we do have people
coding I will say um we do have people
that are have never done RL before but
that are have never done RL before but
have you know a competent software
have you know a competent software
background who are making all sorts of
background who are making all sorts of
cool things around puffer um like you
cool things around puffer um like you
can check the Discord
we've got like all sorts of contributors
we've got like all sorts of contributors
doing cool
stuff of course I have to scroll up a
ton this is kyung fixing
carbs where the heck is
this oh yeah this is awesome
this oh yeah this is awesome
this new EnV and then there's also
this new EnV and then there's also
where's the breakout and like the pong
where's the breakout and like the pong
stuff we have like Ultra fast breakout
stuff we have like Ultra fast breakout
in pong in here
somewhere yeah
somewhere yeah
here oops this is a video
here oops this is a video
where's you have to scroll up so much
where's you have to scroll up so much
okay here's pong but runs way like Ultra
okay here's pong but runs way like Ultra
Ultra fast for reinforcement
Ultra fast for reinforcement
learning and then
learning and then
Noah
has Ultra Ultra fast
has Ultra Ultra fast
breakout so you know we're looking for
breakout so you know we're looking for
more Atari games those are a really easy
more Atari games those are a really easy
way to get started is just to like make
way to get started is just to like make
uh one of the original Seven Atari games
uh one of the original Seven Atari games
like DQ and Atari games but Ultra Ultra
like DQ and Atari games but Ultra Ultra
fast um because we're going to try to
fast um because we're going to try to
replace Atari in reinforcement learning
replace Atari in reinforcement learning
and then more complex environments from
and then more complex environments from
there look at the question about
there look at the question about
breakout yeah I don't I'm pretty sure
breakout yeah I don't I'm pretty sure
that the score is double it's like 800
that the score is double it's like 800
something or whatever cuz you get two
something or whatever cuz you get two
screens of
blocks that I think that's what's uh
blocks that I think that's what's uh
what's going
what's going
on 896 is
on 896 is
Max okay so 8 96 is Max
right how is the score
right how is the score
solved okay fair it solves like the
solved okay fair it solves like the
first screen and not the second
first screen and not the second
screen are you using C not C++ yeah this
screen are you using C not C++ yeah this
is just
is just
c
um I enjoy C I do not enjoy C++ C+ plus
um I enjoy C I do not enjoy C++ C+ plus
is sad time very sad
time okay but look I mean I have it
time okay but look I mean I have it
pretty much here
right for
this is really easy to just paste into C
right this should be all the data I
right this should be all the data I
don't know about the waypoints format
don't know about the waypoints format
but I think that uh overall
I just put this
I just put this
here and that's basically C syntax
here and that's basically C syntax
already so I just get out of this
and there you
go right
and now I'm not I'm just fixing the
and now I'm not I'm just fixing the
headers
headers
essentially um I'm just fixing like the
essentially um I'm just fixing like the
syntax the main thing is I didn't want
syntax the main thing is I didn't want
to have the chance of messing up the
to have the chance of messing up the
data in the
data in the
process of uh of doing this
manually our in Tower
manually our in Tower
team I don't even trust it to refactor
team I don't even trust it to refactor
without messing
up e
and then this one is going to
and then this one is going to
be
float I think it's like this way points
float I think it's like this way points
are 20 to
are 20 to
two right
okay so now this is actually
good and we can get rid of all this
good and we can get rid of all this
garbage which is me pasting a yaml file
garbage which is me pasting a yaml file
into a SE source
file now that's not bad at all right we
file now that's not bad at all right we
have like one screen of data
have like one screen of data
for all the constants that are needed in
for all the constants that are needed in
the game that are just like know way
the game that are just like know way
points and Tower positions and things I
points and Tower positions and things I
think that's not bad at
think that's not bad at
all so now we actually can go back to
all so now we actually can go back to
writing real
logic um because if we look here in the
logic um because if we look here in the
scon there's one thing that I wasn't
scon there's one thing that I wasn't
able to
able to
Port uh that was really messing us
Port uh that was really messing us
up
up
so it's essentially this
so it's essentially this
here this logic uses a bunch of
here this logic uses a bunch of
dictionaries it's only about a screen of
dictionaries it's only about a screen of
it
right
right
but this was what was messing us up so
but this was what was messing us up so
we have after init
we have after init
players there's a lot of player init
players there's a lot of player init
logic
right now we have to just Port this
right now we have to just Port this
logic to
logic to
C using our nice new
data okay so we don't need self. way
points um we already have way points
points um we already have way points
it's a
constant in fact we can
constant in fact we can
do this can be
do this can be
const I'm not stupid C has the const
const I'm not stupid C has the const
keyword right
or is it just
or is it just
C++ yeah it is inane okay been a while I
C++ yeah it is inane okay been a while I
haven't written C in so long it's like
haven't written C in so long it's like
this is the first week in so so so
long I don't really use it that often to
long I don't really use it that often to
be
honest actually good question like when
honest actually good question like when
should
should
I cuz yeah I'm usually at I usually just
I cuz yeah I'm usually at I usually just
have single variables like this and
have single variables like this and
they're just pound
defined technically if these are
defined technically if these are
constant should I put these like all
constant should I put these like all
caps I don't know I don't usually write
caps I don't know I don't usually write
code this way but I mean I can't deny
code this way but I mean I can't deny
right that this is very
right that this is very
effective we'll just leave them as
const const Tower team yeah that's what
const const Tower team yeah that's what
I was
I was
thinking no wait wait wait you're not
thinking no wait wait wait you're not
going to include const in the name are
you there's no
way I can see doing
this it is good practice rce I don't
this it is good practice rce I don't
believe that's good
practiced like that seems like something
practiced like that seems like something
that if you have an LSP should tell
you like it's the only reason that I
you like it's the only reason that I
can't see that
can't see that
immediately how much longer until Schmid
immediately how much longer until Schmid
hoer solves RL I mean according to
hoer solves RL I mean according to
Schmid hoer he solved everything years
Schmid hoer he solved everything years
ago
ago
right to be fair he has a bunch of good
right to be fair he has a bunch of good
ideas
he's a funny
guy can't hate on Schmid
Huber seen variables with the type I num
Huber seen variables with the type I num
of
of
towers if you really need the type and
towers if you really need the type and
you're in a typed language getting LSP
you're in a typed language getting LSP
right
this was considered okay I think that
this was considered okay I think that
the only reason that that's considered
the only reason that that's considered
good to practice I think it's because
good to practice I think it's because
um so I think that that's not it I think
um so I think that that's not it I think
it's that functions will have the type
it's that functions will have the type
in them when there are multiple
in them when there are multiple
different versions of that function
different versions of that function
right like there'll be like an F Max and
right like there'll be like an F Max and
like an IMAX right stuff like that
like an IMAX right stuff like that
because C doesn't have operator
because C doesn't have operator
overloading and even if it did like eh
overloading and even if it did like eh
whatever so you have to have some way of
whatever so you have to have some way of
distinguishing them so I think that
distinguishing them so I think that
that's the convention maybe that got
that's the convention maybe that got
dragged through like different things
dragged through like different things
but really like that's the only reason I
but really like that's the only reason I
can see for doing
can see for doing
that I would sometimes do like you know
that I would sometimes do like you know
like um something [ __ ] in Python but
like um something [ __ ] in Python but
that's because python is not python is
that's because python is not python is
not typed right so like your LSP doesn't
not typed right so like your LSP doesn't
tell you that it's a dick necessarily
that said I'm not using an LSP but
that said I'm not using an LSP but
that's on
me I should probably get one for uh for
C I'm used to python where like it
C I'm used to python where like it
doesn't do all that much
anyways I never see all caps for
anyways I never see all caps for
anything I do see it for for constants
anything I do see it for for constants
oh that's a thing all caps is a that's a
oh that's a thing all caps is a that's a
thing for
constants that's totally a thing for
constants that's totally a thing for
constants like you can see my pound
constants like you can see my pound
defines up here right so yeah it makes
defines up here right so yeah it makes
sense to have them this way
yeah yeah yeah yeah I
see yeah Max num yeah yeah yeah yeah
see yeah Max num yeah yeah yeah yeah
okay we're on the same page we're on the
okay we're on the same page we're on the
same page
the heck is this dot
the heck is this dot
size do static arrays have a DOT size
size do static arrays have a DOT size
they don't right this is just joke this
they don't right this is just joke this
is just like it doesn't know what he
is just like it doesn't know what he
talking
about yeah they I don't know why it's
about yeah they I don't know why it's
suggesting this um this is a little bit
suggesting this um this is a little bit
sketchy though
sketchy though
because I think that they are
because I think that they are
technically a different size for
technically a different size for
each I do think that these need to be
each I do think that these need to be
padded
we'll add a two do and we'll remember to
we'll add a two do and we'll remember to
just pad it in the
data so we have Lane
data yeah so this is this actually
data yeah so this is this actually
becomes a lot easier it's
becomes a lot easier it's
just um way
just um way
points oh I see I see how this
points oh I see I see how this
works spawn
Y is there a creep spawn
Y is there a creep spawn
y I think so
what is this debating in the
what is this debating in the
chat y are clowns
got distracted on X it's a mess well
got distracted on X it's a mess well
hopefully my uh my video post isn't
hopefully my uh my video post isn't
let's
let's
see holy [ __ ] okay uh yeah we're at 80
see holy [ __ ] okay uh yeah we're at 80
that's nice
how do I find your video it's on it's on
how do I find your video it's on it's on
this
channel very
channel very
nice uh do we
nice uh do we
have have we
have have we
gotten a few new
gotten a few new
followers nothing crazy yet we'll see
followers nothing crazy yet we'll see
how this continues to do though I hope
how this continues to do though I hope
it does
it does
well I'm not seeing like the crazy
well I'm not seeing like the crazy
growth that I would need to like match
growth that I would need to like match
my thesis or anything
but this is
but this is
at 92 views so
far yeah we'll
far yeah we'll
see I think it needs good watch time to
see I think it needs good watch time to
get into the algorithm is the main
get into the algorithm is the main
thing it doesn't say you're streaming on
thing it doesn't say you're streaming on
X it's sometimes will show it in the on
X it's sometimes will show it in the on
the sidebar their UI really isn't great
the sidebar their UI really isn't great
to show streams that's why I just stream
to show streams that's why I just stream
on all the different platforms
on all the different platforms
right the X streams do get views like I
right the X streams do get views like I
can see right now that I have 272
can see right now that I have 272
Impressions on X you can't see
Impressions on X you can't see
concurrent titles but yeah I do get I
concurrent titles but yeah I do get I
basically will get a few hundred views
basically will get a few hundred views
slash Impressions on each YouTube and
x and going to watch latest video plan
x and going to watch latest video plan
do tonight yeah let me know what you
do tonight yeah let me know what you
think I'll be on um probably again
think I'll be on um probably again
tomorrow I've got to get on stream
tomorrow I've got to get on stream
earlier but I've been just like I've
earlier but I've been just like I've
been waking up at 8 instead of 6 and
been waking up at 8 instead of 6 and
then I've just been like really slow
then I've just been like really slow
about my exercise so I just take forever
about my exercise so I just take forever
so I'm usually not on until 1 um I got
so I'm usually not on until 1 um I got
to figure out how to streamline that but
to figure out how to streamline that but
I don't know since I did the 50k I've
I don't know since I did the 50k I've
just been like my body has just been so
just been like my body has just been so
so beat up that like even going for a
so beat up that like even going for a
light 5K run is hard and then like I got
light 5K run is hard and then like I got
to recover enough from that to to go do
to recover enough from that to to go do
my lifting right it's just it's a whole
ordeal like seriously I did like a slow
ordeal like seriously I did like a slow
5K today and I was just
5K today and I was just
exhausted I guess I ran 10 yesterday but
exhausted I guess I ran 10 yesterday but
still I should be
still I should be
recovered if I done that like before the
recovered if I done that like before the
50k that would have been easy
okay so I think that what we need is we
okay so I think that what we need is we
need to
need to
have
have
Waypoint
spawn tough time with work and
spawn tough time with work and
exercise yeah the exercise is real
exercise yeah the exercise is real
important though and it's real important
let me see I think there's something
let me see I think there's something
weird
here yeah I mean it only gets harder as
here yeah I mean it only gets harder as
you get older like it's the the best
you get older like it's the the best
time to start is yesterday right the
time to start is yesterday right the
second best time to start is
second best time to start is
today like taking this stuff
today like taking this stuff
seriously I will I don't regret doing
seriously I will I don't regret doing
the 50k because it was like such a good
the 50k because it was like such a good
Milestone but I will say that I'm
Milestone but I will say that I'm
probably not going to be doing those
probably not going to be doing those
distances much um I the thing is I
distances much um I the thing is I
thought it's like it's only a few more
thought it's like it's only a few more
miles than a marathon and I've recovered
miles than a marathon and I've recovered
like perfectly fine in just a couple
like perfectly fine in just a couple
days from my marathons but the thing I
days from my marathons but the thing I
didn't realize is that the course was so
didn't realize is that the course was so
much harder that I was out there for
much harder that I was out there for
essentially another two and a half hours
essentially another two and a half hours
um so I was out for seven and a half
um so I was out for seven and a half
hours and I just like shredded like my
hours and I just like shredded like my
whole cardio system my body like
whole cardio system my body like
everything from that so I'll get it I'll
everything from that so I'll get it I'll
get back in shape but it's disappointing
get back in shape but it's disappointing
to like do a hard race and be in worse
to like do a hard race and be in worse
shape after finishing it
shape after finishing it
right yeah yeah I mean I did the
right yeah yeah I mean I did the
distance I have an article on my ex
distance I have an article on my ex
about it too like the training and stuff
about it too like the training and stuff
for
for
it I would not recommend that though I
it I would not recommend that though I
think like running like a flat Marathon
think like running like a flat Marathon
pretty easy to recover from that hard
pretty easy to recover from that hard
hard event but easy to recover from uh
hard event but easy to recover from uh
the beyond that it gets a little silly
the beyond that it gets a little silly
you need to recover it's been like a
you need to recover it's been like a
month
month
bet started running lost 16 pounds
bet started running lost 16 pounds
that's
solid some people don't do anything well
solid some people don't do anything well
I didn't do much for a week and but it's
I didn't do much for a week and but it's
been like a month and like I've been
been like a month and like I've been
trying to get back right so like the
trying to get back right so like the
second week after I did a few 5Ks and
second week after I did a few 5Ks and
like one loop around the dish and then
like one loop around the dish and then
the last week I did like a 5k Every Day
the last week I did like a 5k Every Day
and then two loops around the dish but
and then two loops around the dish but
it's still
hard body needs to be recovered now body
hard body needs to be recovered now body
is being too
weak as simple as that a body is being
weak as simple as that a body is being
too weak it's like all right you're
too weak it's like all right you're
recovered by now stop
whining can't just will it to happen
whining can't just will it to happen
yeah I
will who says I can't
the [ __ ]
um I'm a little confused as to how this
um I'm a little confused as to how this
works
here NPC DOTA spawner
bad mid
Right Way
points okay so what if we do
this spawner key
this spawner key
and then I
and then I
do save data way
do save data way
points of spawner
key
key
um
equals there do
equals there do
insert
dude there is an insert pause it
element like
this
this
okay and
then and we'll do like this right
oops
Yeah
Yeah
slice list integers what let see save
slice list integers what let see save
data
wait save
data hold
data hold
on oh okay so this has to go I
on oh okay so this has to go I
see so this goes up
see so this goes up
here okay and then this is now way
here okay and then this is now way
points of spawner key do
insert okay and then we do process test.
insert okay and then we do process test.
text okay and now this is very important
text okay and now this is very important
because what this does is if you look at
because what this does is if you look at
these these numbers they make sense
these these numbers they make sense
right and the Hope
right and the Hope
here is that I'm just going to be able
here is that I'm just going to be able
to like paste these
in like
this puffer
this puffer
Li
Li
environments
environments
ocean o
oops okay so now I can paste this right
oops okay so now I can paste this right
to
to
here and I just now
here and I just now
can we can see that there's one extra
can we can see that there's one extra
element before this one which is the
element before this one which is the
spawn
spawn
Zone and I just delete this
and there's my Waypoint set and I no
and there's my Waypoint set and I no
longer need this spawn y spawn X
[ __ ] and so right here where it's
[ __ ] and so right here where it's
putting the spawn I don't need this so I
putting the spawn I don't need this so I
can just save all of this garbage here
can just save all of this garbage here
uh Lane data doesn't matter either
uh Lane data doesn't matter either
and actually if I'm looking at this here
and actually if I'm looking at this here
right all of this logic is just to
right all of this logic is just to
load uh load into way points and I don't
load uh load into way points and I don't
need
this the one thing that I should have
this the one thing that I should have
done is I should have saved in YX format
done is I should have saved in YX format
not XY format
not XY format
right I should have saved in YX format
right I should have saved in YX format
not XY
not XY
format so let's do that
and we'll uh we'll like clean up some
and we'll uh we'll like clean up some
stuff in the process
here so we want this to be Y and then
X why
X why
because because like we do row column
because because like we do row column
for our
indexing too many
yeah
okay so now this works and now look how
okay so now this works and now look how
nice this is it's not quite C
actually why don't we just make it C
actually why don't we just make it C
that's actually really funny
that's actually really funny
uh I bet we can just make it C
right we still can't put the type the
right we still can't put the type the
type is slightly annoying to get right
type is slightly annoying to get right
yeah row major it doesn't really matter
yeah row major it doesn't really matter
for the the accesses we weren't really
for the the accesses we weren't really
thinking about that we just that's our
thinking about that we just that's our
default and unless there's a reason not
default and unless there's a reason not
to cuz like you you you always access
to cuz like you you you always access
arrays like row call anyways
arrays like row call anyways
right
right
okay and now you can see that this is
okay and now you can see that this is
like almost C it's just missing the type
like almost C it's just missing the type
right so we can literally just uh take
this I wonder if it actually remembers
this I wonder if it actually remembers
oh yeah it totally remembers
oh yeah it totally remembers
so now we have our way points right like
so now we have our way points right like
this oops should probably put it in caps
this oops should probably put it in caps
or whatever
or whatever
but look at
but look at
that so now we have our way points
done uh and now this entire piece of
done uh and now this entire piece of
code right here was to load data from
code right here was to load data from
the waypoints yaml format into the array
the waypoints yaml format into the array
which because now we just have it as an
which because now we just have it as an
array this is redundant so this goes
array this is redundant so this goes
away um and now we do need to load the
away um and now we do need to load the
Tower
data this piece of code right here is
data this piece of code right here is
grow is gross
we made this Tower offset
we made this Tower offset
function uh especially for this
function uh especially for this
reason so this is Tower
reason so this is Tower
offset plus index that's the
offset plus index that's the
PID so that's cleaner we no longer are
PID so that's cleaner we no longer are
hardcoding that stuff and now uh this is
hardcoding that stuff and now uh this is
not DOT this is this is now a
not DOT this is this is now a
pointer of course this cannot be
pointer of course this cannot be
um this is entity Star Tower
um this is entity Star Tower
now so Tower offset of NV plus
now so Tower offset of NV plus
index uh we also have to
index uh we also have to
do enumerate entity data of towers I
do enumerate entity data of towers I
need to know exactly how many Towers
need to know exactly how many Towers
there are now I believe I believe that
there are now I believe I believe that
there are 24
Towers which we actually have right here
Towers which we actually have right here
which is num Towers
we get the index we get the tower we
we get the index we get the tower we
make the PID do this and then Tower grid
make the PID do this and then Tower grid
ID
ID
oops power basic attack cool down
oops power basic attack cool down
power
power
te uh is going to
te uh is going to
be Power Team of Index
be Power Team of Index
right and now I think it gets the idea
right and now I think it gets the idea
here so we get Tower spawn y we get
here so we get Tower spawn y we get
Tower y Tower X
Tower y Tower X
right tower y Tower X Health damage tier
right tower y Tower X Health damage tier
and XP on kill
right so that's it for this we've just
right so that's it for this we've just
ported all this stuff and it's actually
ported all this stuff and it's actually
shorter in the C which is very
shorter in the C which is very
nice this is a redundant comment and
nice this is a redundant comment and
this is a redundant index no it's not a
this is a redundant index no it's not a
redundant
redundant
index um but I swear that we have do we
index um but I swear that we have do we
have index defined already
have index defined already
somewhere well I think there's no harm
somewhere well I think there's no harm
by redefining it potentially
by redefining it potentially
right uh we have entity star
right uh we have entity star
neutral
neutral
and O num
and O num
neutrals I think it has to be numb
neutrals I think it has to be numb
neutrals divide by four or whatever
neutrals divide by four or whatever
right so
divide by
four
four
yeah we also forgot the closing
yeah we also forgot the closing
bracket I swear all my errors like
bracket I swear all my errors like
people complain about Whit space and
people complain about Whit space and
python all of my errors are always
python all of my errors are always
missing semicolons and brackets I would
missing semicolons and brackets I would
love see with white space and no
love see with white space and no
semicolons which is basically scyon
semicolons which is basically scyon
except that you know it's still there's
except that you know it's still there's
some
issues unless you're giving each entity
issues unless you're giving each entity
you'll have
you'll have
two wait unless you're giving each
entity isn't this where I'm incrementing
entity isn't this where I'm incrementing
it right here
I'm
confused uh I you see that there's
confused uh I you see that there's
there's this offset function here
there's this offset function here
right right and I believe this is needs
right right and I believe this is needs
to
be this is in
be this is in
PID
PID
PID multiple entities
index
index
uh so we are specifically instead of
uh so we are specifically instead of
doing that um I'm specifically indexing
doing that um I'm specifically indexing
each block of the array with different
each block of the array with different
um with different entities if that makes
um with different entities if that makes
sense technically I could do it the way
sense technically I could do it the way
that you're suggesting it would be the
that you're suggesting it would be the
same
but this is more explicit about which in
but this is more explicit about which in
which entities get which
indices entity
indices entity
type
okay you have the IND plus equal to 1
okay you have the IND plus equal to 1
here I forget that you can do index
Plus+ but that's
Plus+ but that's
reasonable and then we close the
reasonable and then we close the
brackets and we fix this syntax
entity
entity
what no this is this is a global counter
what no this is this is a global counter
right here right we're not assigning the
right here right we're not assigning the
index to The Entity this is just we have
index to The Entity this is just we have
a big block look we have a big block of
a big block look we have a big block of
player IDs here and it's going to be the
player IDs here and it's going to be the
offset of the new neutral Camp block
offset of the new neutral Camp block
which is right here all the neutrals
which is right here all the neutrals
plus the index and then we spawn each
plus the index and then we spawn each
entity one at a time we increment the
entity one at a time we increment the
index by one right down here so this is
index by one right down here so this is
a counter over the total number of
a counter over the total number of
things in this Loop
right unless I'm messing it up
yeah no fair that fair play it's better
yeah no fair that fair play it's better
that you catch bugs than uh than not
right spawn y spawn
right spawn y spawn
x uh so these things are all accounted
x uh so these things are all accounted
for now
for now
right so this is actually all ported
[Music]
oops and then all we have to do here
is
is
build we have to fix some bugs
oops which include
and entity is we fix a few bugs in the
port what's wrong
port what's wrong
here ah you have to give this the
N this is supposed to just be
N this is supposed to just be
PID right
and then 13
and then 13
13 this needs
13 this needs
a okay so now we have a ton
of a ton of warnings so first of all
of a ton of warnings so first of all
these are
floats float float float
and no more
and no more
warnings neutral pit is if that's not
warnings neutral pit is if that's not
missing that's
missing that's
intentional that's intentional because
intentional that's intentional because
the um I'll show
you I would see why you would think
that but the thing is that the towers
that but the thing is that the towers
are going to be spawned immed
are going to be spawned immed
immediately technically I could assign
immediately technically I could assign
them you're right I technically could um
them you're right I technically could um
the reason is that there's a separate
the reason is that there's a separate
spawn function for the neutrals which
spawn function for the neutrals which
does happen at the very start of the
does happen at the very start of the
game so it would work either way but
game so it would work either way but
it's not needed so I will
actually but I'm not going to mess with
actually but I'm not going to mess with
that initially because the pit system's
that initially because the pit system's
a little Jank but look at that we have
a little Jank but look at that we have
we have this thing building now builds
we have this thing building now builds
locally
locally
right
right
and
and
oops and if I open the saoba we're only
oops and if I open the saoba we're only
left with uh 264 lines worth of this
left with uh 264 lines worth of this
garbage um this one right here like
garbage um this one right here like
these are very easy to just hardcode
these are very easy to just hardcode
right this action map and this XP for
right this action map and this XP for
level and then the only other thing so
level and then the only other thing so
we're going we're going to clean this up
we're going we're going to clean this up
and then the only other things that
and then the only other things that
we're going to have to do to have this
we're going to have to do to have this
running in pure native sea is I'm going
running in pure native sea is I'm going
to have to Port the map image to be like
to have to Port the map image to be like
a flat array and I think one other file
a flat array and I think one other file
and then we'll be good
and then we'll be good
there it should be that
easy yeah I'm use a restro real quick
easy yeah I'm use a restro real quick
and then we will uh we'll go handle that
and then we will uh we'll go handle that
and it'll be good right
back
e
e
e
e e
okay oh
okay oh
yeah one of these days we're going to
yeah one of these days we're going to
get this green screen working correctly
get this green screen working correctly
so I actually don't have this like haze
so I actually don't have this like haze
around me today is not the day
though I keep having to redo the angle
though I keep having to redo the angle
on it and like this ring light in my
on it and like this ring light in my
face is real bright
so
bet if I recall
bet if I recall
correctly they're two different
correctly they're two different
performance M and like one of them is
performance M and like one of them is
old and one of them is not that old both
old and one of them is not that old both
of them might need a little bit of
of them might need a little bit of
tinkering
tinkering
but when I was developing the
but when I was developing the
vectorization I basically needed a way
vectorization I basically needed a way
to simulate um a ton of different
to simulate um a ton of different
workloads where like the environment
workloads where like the environment
would have a specific average Step time
would have a specific average Step time
a specific variance in that amount of
a specific variance in that amount of
time
time
taken and then like a specific memory
taken and then like a specific memory
bandwidth overhead so that was meant to
bandwidth overhead so that was meant to
simulate lots of different environment
simulate lots of different environment
workloads for our vectorization
for the folks on YouTube if you haven't
for the folks on YouTube if you haven't
seen the
seen the
um the new video on RL the new RL video
um the new video on RL the new RL video
I posted consider watching it later um I
I posted consider watching it later um I
put a ton a ton of into it and I really
put a ton a ton of into it and I really
don't think that you're going to find
don't think that you're going to find
like a better and more cohesive overview
like a better and more cohesive overview
of the whole state of RL at the moment
of the whole state of RL at the moment
it should really really provide a lot of
it should really really provide a lot of
context about all the work that you're
context about all the work that you're
seeing why stuff is being done where the
seeing why stuff is being done where the
field is going and that side of things
field is going and that side of things
um man if you do you know drop a comment
um man if you do you know drop a comment
or whatever helps with the algorithm I'm
or whatever helps with the algorithm I'm
hoping that I'm hoping it'll get into
hoping that I'm hoping it'll get into
the algorithm like my thesis video did
the algorithm like my thesis video did
we'll see if it does I think that
we'll see if it does I think that
definitely based on the delivery and
definitely based on the delivery and
such of it though I did a better job
so any way to run all the mock
environments the mock environments with
environments the mock environments with
one command if you mean the ocean
one command if you mean the ocean
environments I think there's um an old
environments I think there's um an old
shell script like the old Benchmark
shell script like the old Benchmark
script or whatever that you can
script or whatever that you can
use um all the mock ones I think that
use um all the mock ones I think that
there might be a test or something I've
there might be a test or something I've
been a while since I've looked at it
been a while since I've looked at it
have you seen any content from Welch
Labs what is
this no I haven't seen this before I
this no I haven't seen this before I
don't know what this is
111 okay this thing is slowly getting
111 okay this thing is slowly getting
some
views he discussed his AI I'll check
views he discussed his AI I'll check
that out
yeah the thesis defense video kind of
yeah the thesis defense video kind of
just blew up
just blew up
unexpectedly and then I thought like huh
unexpectedly and then I thought like huh
you know maybe I can replicate the
you know maybe I can replicate the
success of that if I really try to put
success of that if I really try to put
something something good together I
something something good together I
think that at least on the delivery of
think that at least on the delivery of
the new video it's much more polished
the new video it's much more polished
than my
than my
thesis now obviously like there's so
thesis now obviously like there's so
many cool visuals and stuff with neural
many cool visuals and stuff with neural
MMO and it's just such a long amount of
MMO and it's just such a long amount of
work um in one piece of content but I
work um in one piece of content but I
tried we'll see how it does
really the whole point of doing all this
really the whole point of doing all this
right is to just get more people looking
right is to just get more people looking
at
at
puffer using it contributing to it and
puffer using it contributing to it and
so on
that's my main thing
now okay so right here
now okay so right here
um all these things need to
um all these things need to
go into the function
all
now this init function needs to get some
now this init function needs to get some
arguments because we just added a
bunch okay agent creps neutrals Vision
bunch okay agent creps neutrals Vision
range
uh let's do two
lines probably reward distance is going
lines probably reward distance is going
to end up going away
anyways so for the init function we now
anyways so for the init function we now
have have all of the
constants long time no see it that's
constants long time no see it that's
Nishi hey cool to see you
Nishi hey cool to see you
around Pokemon project has really taken
around Pokemon project has really taken
off you should see the uh latest work on
that it's really taking off
uh this width and height here I think we
uh this width and height here I think we
can we can take this
[Music]
H finally made it back into the Discord
H finally made it back into the Discord
badge 7 yeah yeah
badge 7 yeah yeah
it's it's uh crazy progress
in fact I think we'd be farther by now
in fact I think we'd be farther by now
but we've had so many issues with the
but we've had so many issues with the
hardware
you think I'm happy about it I spend 35
you think I'm happy about it I spend 35
Grand on hardware and then Intel
Grand on hardware and then Intel
freaking drops the
ball I'm not happy about
that no they've lost me as a customer
that no they've lost me as a customer
permanently
you mean these that cost more than the
you mean these that cost more than the
entire
box the CPO costs more than an entire
box the CPO costs more than an entire
box
the good news is that like well I'm
the good news is that like well I'm
trying to
trying to
think like technically yeah we could
think like technically yeah we could
probably run Atari real fast on this but
probably run Atari real fast on this but
like we're going to hit other
like we're going to hit other
bottlenecks at some point soon
how many
how many
simulations we need centuries of
simulations we need centuries of
simulations per
day this is the current setup
there's a whole article on what like
there's a whole article on what like
what the hardware
contains it's here and on X but yeah
contains it's here and on X but yeah
it's eight boxes plus like an older
it's eight boxes plus like an older
login node with 490s and 24 core I9
trying to push things forward here I
trying to push things forward here I
really do I really
try we got to get these Maps loaded
right let's get these done
right let's get these done
first for
and we're not trusting this to copy the
and we're not trusting this to copy the
data
data
correctly so we will do it this
way and then we do cons
way and then we do cons
float action map
did it do this
right yeah did this right and what about
right yeah did this right and what about
this
this
one yeah did it right okay
Okay so we've actually already
Okay so we've actually already
simplified quite a bit just by doing
simplified quite a bit just by doing
that and now I think we really need to
that and now I think we really need to
get the um the other files
get the um the other files
right so how am I going to do
this these ones legitimately do need to
this these ones legitimately do need to
be read from file they're too much
data they contain a lot of
data um well let me see there an easy
data um well let me see there an easy
way to load like a
PNG I swear this is going to give me
PNG I swear this is going to give me
some dumb answer but we'll do it for the
some dumb answer but we'll do it for the
memes where's
memes where's
um where's
um where's
jippy I'm going to give me some dumb
answer do I like this no no I do not
answer do I like this no no I do not
like
it I do not like this one bit
it I do not like this one bit
I'm going
I'm going
to
instead let's check what the files are
instead let's check what the files are
from
python well for this one here
python well for this one here
right let's just make like a pre-process
right let's just make like a pre-process
map
script we're allowed to write utility
script we're allowed to write utility
scripts in Python right there's no
scripts in Python right there's no
reason to write this in C
and then what we have to
do we also need to convert the the data
do we also need to convert the the data
in this map
in this map
right uh so where does it do this game
right uh so where does it do this game
map
map
athing
map uh I don't know what the heck this
is still new to AI a lot of newb
is still new to AI a lot of newb
questions chat jippy did not use RL it
questions chat jippy did not use RL it
does instead use dnns
does instead use dnns
like that and like that of alexnet okay
like that and like that of alexnet okay
so there's a lot there um it uses RL
so there's a lot there um it uses RL
kind of it's not the RL that I'm using
kind of it's not the RL that I'm using
here though like maybe the algorithms
here though like maybe the algorithms
are the same but like the application's
are the same but like the application's
totally different
totally different
so if you want to understand if you want
so if you want to understand if you want
to read like three papers to understand
to read like three papers to understand
like the trajectory of modern AI just
like the trajectory of modern AI just
you know what alexnet is you read
you know what alexnet is you read
resnet encode decode
resnet encode decode
lstms and then the Transformer
lstms and then the Transformer
paper that's like a really
paper that's like a really
coarse um
coarse um
overview of how architectures have
overview of how architectures have
evolved and obviously there's been a lot
evolved and obviously there's been a lot
since
since
then and then uh chat jity will use rlf
then and then uh chat jity will use rlf
so it's reinforcement learning from
so it's reinforcement learning from
Human feedback it really doesn't have
Human feedback it really doesn't have
the same characteristics of the problems
the same characteristics of the problems
that we're solving here but that's what
that we're solving here but that's what
it uses after training to align the
it uses after training to align the
model or
model or
whatever res first of all that's the
whatever res first of all that's the
wrong order so you read uh you read
wrong order so you read uh you read
reset
reset
first and then you read uh encode decode
first and then you read uh encode decode
lstms let me find the paper for you
lstms let me find the paper for you
encode decode LST I think I can just
encode decode LST I think I can just
Google it
where the heck is the big
paper is it this
one I don't actually know where the the
one I don't actually know where the the
big paper is on
this here's the Transformer paper
yeah I don't but the thing is I don't
yeah I don't but the thing is I don't
know which one it is I actually don't
know which one it is I actually don't
know what the first one I swear it was
know what the first one I swear it was
Ila's
paper I swear he's on
paper I swear he's on
this oh here to sequence to sequence
this oh here to sequence to sequence
learning with neural networks this
one I'll put this in
chat so that's like your just
chat so that's like your just
architector
introduction yeah no worries I see what
introduction yeah no worries I see what
the stream is actually doing quite well
the stream is actually doing quite well
today so uh welcome
today so uh welcome
everybody what I'm currently doing in
everybody what I'm currently doing in
the background here is working on
the background here is working on
porting this MOBA which I will show
porting this MOBA which I will show
briefly uh this
briefly uh this
thing this runs like a million steps per
thing this runs like a million steps per
second we're making this is a really
second we're making this is a really
cool reinforcement learning environment
cool reinforcement learning environment
I'm currently in the process of porting
I'm currently in the process of porting
it from scon to C so that we can run it
it from scon to C so that we can run it
on the
on the
web it's plenty fast as is but it'll be
web it's plenty fast as is but it'll be
cool to be able to run this on the web
cool to be able to run this on the web
in web
in web
assembly so that's what we're doing at
assembly so that's what we're doing at
the
the
moment um and if you haven't seen the
moment um and if you haven't seen the
video that just went up today I highly
video that just went up today I highly
suggest watching it later it's a project
suggest watching it later it's a project
I've been working on for quite a while
I've been working on for quite a while
um I think it's relatively well produced
um I think it's relatively well produced
you know it's been substantially edited
you know it's been substantially edited
together U but this is right here this
together U but this is right here this
video is freaking sponsored [ __ ]
video is freaking sponsored [ __ ]
hold
hold
on puts videos on my own
on puts videos on my own
ad okay so this video here is 25 minutes
ad okay so this video here is 25 minutes
for an overview of the entire field of
for an overview of the entire field of
reinforcement learning at 10 different
reinforcement learning at 10 different
layers of the infr stack and where I see
layers of the infr stack and where I see
the field going as a whole and what I'm
the field going as a whole and what I'm
trying to do about that with puffer so
trying to do about that with puffer so
this is like the most condensed form of
this is like the most condensed form of
uh most condensed possible place to get
uh most condensed possible place to get
all of this
just came from the video on X hopefully
just came from the video on X hopefully
you liked it I
you liked it I
uh yeah there's I try I'm going to see
uh yeah there's I try I'm going to see
we'll see whether this does like well to
we'll see whether this does like well to
the extent of my thesis but I figured
the extent of my thesis but I figured
I'd give it a
go and also I mean as in the video you
go and also I mean as in the video you
want to help me out for free Star Puffer
want to help me out for free Star Puffer
lib helps me a
lib helps me a
ton hopefully we get a nice spike out of
ton hopefully we get a nice spike out of
uh of growth out of the the video and
uh of growth out of the the video and
also I mean I'm pretty much always just
also I mean I'm pretty much always just
building all this stuff here live so I'm
building all this stuff here live so I'm
pretty much just always building things
pretty much just always building things
here um so you can always just come by
here um so you can always just come by
and chat we have lots of people
and chat we have lots of people
contributing little uh smaller
contributing little uh smaller
environments to puffer lib like these
environments to puffer lib like these
are people that don't have prior RL
are people that don't have prior RL
experience if you know how to write
experience if you know how to write
decent code you can make environments
decent code you can make environments
and make RL work on them at a million
and make RL work on them at a million
step per second with puffer and we'd
step per second with puffer and we'd
love to have the contributions I even
love to have the contributions I even
will help people on stream with how to
will help people on stream with how to
design these things to be ultra high
design these things to be ultra high
perf so if you're interested in that you
perf so if you're interested in that you
let me know otherwise welcome everybody
let me know otherwise welcome everybody
and enjoy the
content like the structure felt easy to
content like the structure felt easy to
watch and I don't know much that was the
watch and I don't know much that was the
hope it was the hope was that you could
hope it was the hope was that you could
at least follow most of it even as an
at least follow most of it even as an
outsider to RL but like the stuff in
outsider to RL but like the stuff in
that video there are many things in that
that video there are many things in that
video that world class RLX experts do
video that world class RLX experts do
not know like I don't think anybody will
not know like I don't think anybody will
see that and not learn
anything I'd be incredibly impressed if
anything I'd be incredibly impressed if
there's like a single person that will
there's like a single person that will
watch that video and genuinely not learn
watch that video and genuinely not learn
anything
anything
useful casually hang out for a bit first
useful casually hang out for a bit first
of
of
course welcome to do
course welcome to do
that still in Holiday mood
fair
enough what's this game map equals
zero figured you wanted
zero figured you wanted
stars for more serious people not really
stars for more serious people not really
I mean like yeah I want I want people to
I mean like yeah I want I want people to
get interested in it but right like I
get interested in it but right like I
want people to be using it but also it's
want people to be using it but also it's
just it's one of the metrics that I
just it's one of the metrics that I
track right I track Twitter followers
track right I track Twitter followers
and I track uh stars on the
and I track uh stars on the
repository like I say in the video like
repository like I say in the video like
puffer's officially open for business
puffer's officially open for business
with this most recent update it's all
with this most recent update it's all
staying free it's all staying open
staying free it's all staying open
source but uh the hope is that we will
source but uh the hope is that we will
find a few companies that are doing
find a few companies that are doing
reinforcement learning that could
reinforcement learning that could
benefit from this Tech and that we'll
benefit from this Tech and that we'll
want some extended support right that'll
want some extended support right that'll
help us out a lot that'll help us to
help us out a lot that'll help us to
build out the cluster and get some more
build out the cluster and get some more
machines and hopefully to sponsor some
machines and hopefully to sponsor some
additional open source work as well I'd
additional open source work as well I'd
really like to be able to start paying
really like to be able to start paying
out bounties on features and bugs and
out bounties on features and bugs and
stuff in puffer and uh yeah it'll be
stuff in puffer and uh yeah it'll be
good to be able to do that off of
good to be able to do that off of
bootstrap
bootstrap
Revenue that's the
goal it's CD test python okay yeah it's
goal it's CD test python okay yeah it's
literally the main test
bet and also frankly like RL is not
bet and also frankly like RL is not
being solved at the moment by serious RL
being solved at the moment by serious RL
people like yeah I need to know all the
people like yeah I need to know all the
stuff to build the infastructure but
stuff to build the infastructure but
like with the way that puffer is going
like with the way that puffer is going
RL is just becoming an engineer ing
RL is just becoming an engineer ing
problem it really is like if we run
problem it really is like if we run
centuries of simulated data per GPU per
centuries of simulated data per GPU per
day we don't have to be smart about
day we don't have to be smart about
things like we just have so much data
things like we just have so much data
that you just you just auto win you
that you just you just auto win you
automate all the experiments right you
automate all the experiments right you
don't have to be smart about what
don't have to be smart about what
experiments to pick if you can run all
experiments to pick if you can run all
of
them Discord ggp puffer yep bet has the
them Discord ggp puffer yep bet has the
rank uh procite of the puffer order in
rank uh procite of the puffer order in
the Discord and this is
the Discord and this is
why appreciate the advertising bet
why appreciate the advertising bet
[Laughter]
proelite of the puffer order Brute Force
proelite of the puffer order Brute Force
pretty much it's incredibly effective
pretty much it's incredibly effective
though why be like you be smart when you
though why be like you be smart when you
need to be smart right if you can be
need to be smart right if you can be
stupid and the problem is still solved
stupid and the problem is still solved
then you can just be
then you can just be
stupid
right appreciate the shoes
right appreciate the shoes
advice
advice
hey I'm not sponsored by Brooks I just
hey I'm not sponsored by Brooks I just
like the shoes
right they're good for running I got to
right they're good for running I got to
get some more pairs I've worn out like
get some more pairs I've worn out like
three pairs of them running in the past
year it's like 500 miles a pair right
year it's like 500 miles a pair right
yeah I'm at like I'm at over a thousand
yeah I'm at like I'm at over a thousand
miles since this calendar
miles since this calendar
year
so and that's not counting walking
so and that's not counting walking
around that's just the runs
where's this game map we're supposed to
where's this game map we're supposed to
actually be writing C
actually be writing C
here GD of game map equals
wall okay so I need
wall okay so I need
to I need to modify the way that this
works going to do that with family see
works going to do that with family see
you around
bet so zero is wall 255 is empty okay
uh where' the file go convert map really
uh where' the file go convert map really
liking the new video thank you it took
liking the new video thank you it took
absolutely forever to make so I hope
absolutely forever to make so I hope
people
people
enjoy could have like two more
enjoy could have like two more
environments built by now time it takes
environments built by now time it takes
me to make one of those
wait
wait
zero I think it's like
zero I think it's like
this but hey it's going to be I think
this but hey it's going to be I think
it's worth it because that's going to be
it's worth it because that's going to be
a resource I can point people to for a
a resource I can point people to for a
very long time right like I don't there
very long time right like I don't there
is nowhere else that you can find like
is nowhere else that you can find like
as condensed of an over
as condensed of an over
I mean it's like an infra focused
I mean it's like an infra focused
perspective it's a very opinionated like
perspective it's a very opinionated like
infra focused perspective on the whole
infra focused perspective on the whole
field and how we push it forward and
field and how we push it forward and
it's a fairly unique one this is not a
it's a fairly unique one this is not a
way I see many people addressing it but
way I see many people addressing it but
from the past few months it's been it's
from the past few months it's been it's
been just tremendously effective doing
been just tremendously effective doing
work this way
and now I have to save this to Binary
and now I have to save this to Binary
right
uh is there like a game map is there
uh is there like a game map is there
like two
like two
bytes this
bytes this
work
work
oh this does work
right but then I need a way that's going
right but then I need a way that's going
to be easy to load as well
yeah I need a way that's going to be
yeah I need a way that's going to be
easy to
easy to
[Music]
load so I don't think I want to do two
load so I don't think I want to do two
bytes
bytes
right I think that I want to just save
right I think that I want to just save
this as a string
uh six wait how is it that big hold
on something went wrong
here 128 by 128 right
oh it is
16k uh is there an easy way
to do L Maybe
uh
list
sequence okay this has to be a list of
sequence okay this has to be a list of
strings uh
strings uh
what the
what the
heck of Str
heck of Str
python I do not like
python I do not like
this not like this one
this not like this one
bit whatever we'll be dumb about it for
bit whatever we'll be dumb about it for
now
there we
go okay
go okay
so now we have the game
map and then with
map and then with
[Music]
[Music]
open game map.
open game map.
text F right
and this should give you the game
map and then the only other thing we'll
map and then the only other thing we'll
have to do is save the uh the
have to do is save the uh the
precomputed map
precomputed map
similarly
right so here we have
this what's it cbfs
yeah so we have C precompute
yeah so we have C precompute
pathing this breath first search was the
pathing this breath first search was the
original implementation this is not
original implementation this is not
getting called because we have C
getting called because we have C
precompute pathing this gets called
here paths equals
where does this get saved to the
file I think that this gets called from
file I think that this gets called from
uh from the main MOBA file
right yeah you can see right
right yeah you can see right
here
um
okay so what we're going to do is we're
okay so what we're going to do is we're
just going to figure out a a very easy
just going to figure out a a very easy
format to save this into is going to be
format to save this into is going to be
just as a string uh luckily they're all
just as a string uh luckily they're all
single digit numbers so we can literally
single digit numbers so we can literally
just load this into an array as a
oneliner so AI paths is going to
oneliner so AI paths is going to
be okay so we get this we compute
pathing and then this is pathing
pathing and then this is pathing
map I believe that we have to do
map I believe that we have to do
something for this right
okay so right
okay so right
here this
here this
is the pathing
is the pathing
map so we actually have to call
this right up here I believe
before we like Ravel and save
it and this is now game
it and this is now game
map we do we save it
map we do we save it
here and
now
now
travel and then I'm a little concerned
travel and then I'm a little concerned
how long this is going to take in python
how long this is going to take in python
this is a huge amount of
this is a huge amount of
data I think this is going to take a
data I think this is going to take a
stupid amount of
stupid amount of
time is there not like an easy way to
time is there not like an easy way to
just do
this You' think that there would be
this You' think that there would be
what are we
what are we
doing I'm just flattening an array and
doing I'm just flattening an array and
saving it all I want to do is flatten an
saving it all I want to do is flatten an
array and save it to a a file as a
array and save it to a a file as a
string but it's like a 260 megabyte
array I don't know if I should be
array I don't know if I should be
worried about that being slow that'll
worried about that being slow that'll
probably be slow
probably be slow
right it's a 128 by 128 by 128 by 128
right it's a 128 by 128 by 128 by 128
array
flatten the map
flatten the map
no literally like we have all the data
no literally like we have all the data
of this giant
of this giant
tensor and like I just want to Ravel it
tensor and like I just want to Ravel it
into a one-dimensional array and save it
into a one-dimensional array and save it
as a string because the idea is that
as a string because the idea is that
like each element of the array is a
like each element of the array is a
number from Zer through eight so it's
number from Zer through eight so it's
one digit so if I just save it as a text
one digit so if I just save it as a text
file then that's really easy to read
file then that's really easy to read
from C right because it's literally like
from C right because it's literally like
position of element in Array is just no
position of element in Array is just no
math on indices it's really easy and I
math on indices it's really easy and I
don't have to do any additional
don't have to do any additional
structured
structured
processing but as you can see
processing but as you can see
here
here
um this is unfathomably
[Music]
[Music]
slow looks like it'll compress
slow looks like it'll compress
nicely well we don't care about that
nicely well we don't care about that
right it's going to get loaded into
right it's going to get loaded into
memory anyway
it only takes like 3 seconds to
it only takes like 3 seconds to
pregenerate the maps as well it's like I
pregenerate the maps as well it's like I
need to just I need a good way to save
need to just I need a good way to save
this is anybody know one it's all I need
this is anybody know one it's all I need
to do is save like the individual
to do is save like the individual
numbers to a
numbers to a
file I guess I could technically do that
file I guess I could technically do that
part in scon as
part in scon as
well um I'd rather not is there no just
well um I'd rather not is there no just
fast way of doing this
I know let's see if jity is dumb as
usual
save
save
well
well
save text every element is a one dig
nicely
nicely
but
but
making it's low
because coming in late do you have an
because coming in late do you have an
array yeah basically
that oh wait there is a save
text there's literally save text
well I think I don't need I think it's
well I think I don't need I think it's
literally there's just a function that
literally there's just a function that
does
it I just didn't know about this
function let's see if it actually works
let me see if this
works
works
and I forget the difference between
and I forget the difference between
flatten and Ravel I think one of them
flatten and Ravel I think one of them
copies and one of them doesn't or
copies and one of them doesn't or
something like
that let's see how the YouTube video is
that let's see how the YouTube video is
doing while
doing while
uh we wait
I like how it tries to give me an ad on
I like how it tries to give me an ad on
my own video every time I uh click it
my own video every time I uh click it
127 in 4
127 in 4
hours could take off could not we'll
hours could take off could not we'll
see comment for
algorithm and X
88 all it's slowing down on X
unfortunately why not numpy save do you
unfortunately why not numpy save do you
need it to be human readable I need it
need it to be human readable I need it
to be C
readable we don't care about the memory
readable we don't care about the memory
260 Megs is only 260 Megs right we
260 Megs is only 260 Megs right we
really just care about it being fast
really just care about it being fast
like this thing is taking too long
like this thing is taking too long
it should only take three seconds to
it should only take three seconds to
generate the
ray is that already how numpy saves the
ray is that already how numpy saves the
data I'm pretty sure that's not how
data I'm pretty sure that's not how
numpy will save the data
normally that'll save it in like some
normally that'll save it in like some
bite form M that I'm going to have to
bite form M that I'm going to have to
interpret
looping through the rows of X and
looping through the rows of X and
formatting each row
individually yeah okay this is slow as
hell yeah this is stupidly stupidly slow
will that actually work hold on
wait you open
wait you open
rb.
right yeah I was going to
say yeah this is binary dude
say yeah this is binary dude
I don't know what I'm supposed to get
I don't know what I'm supposed to get
out of
this actually you're kind of right it
this actually you're kind of right it
should be binary
right but like if I write if I read
right but like if I write if I read
this hold on
but how do I load that from C and make
but how do I load that from C and make
sure that I'm getting the right
sure that I'm getting the right
data is that just going to is it I don't
data is that just going to is it I don't
know if that's adding header or stuff is
know if that's adding header or stuff is
that adding like Header information or
that adding like Header information or
can I literally just read that like one
can I literally just read that like one
bite at a
time it returned 80
here look this is the
here look this is the
script create
from well this doesn't work clearly
right okay let's try your thing
umpai do
save allow pickle
Raa is there a way to do
this two
file I think it is it just2 file
file let's try this
one let's see if this is fast this one
one let's see if this is fast this one
should be
fast you should be able to read until
fast you should be able to read until
end of file and
see well this one actually
ran you can see right here that the
ran you can see right here that the
pathing data is 257
pathing data is 257
Megs so it rote all the
data I guess now we can probably start
data I guess now we can probably start
on the C
we're big on just pasting data into
we're big on just pasting data into
files as you can
see um
hold on if I have to
hold on if I have to
open how fast is C if I have to open
open how fast is C if I have to open
like 200 if I have to do this like 200
like 200 if I have to do this like 200
times per
times per
process is that going to be
process is that going to be
slow how fast can you read 200 Megs of
slow how fast can you read 200 Megs of
data from disk
wait can I just mmap the file is that a
wait can I just mmap the file is that a
thing I can
do technically I should just be able to
do technically I should just be able to
mmap the files
right the byes are just
right the byes are just
there but wait that won't read it into
there but wait that won't read it into
the memory
the memory
right that won't read it in the m memory
right that won't read it in the m memory
that's
bad if I mmap it it won't go to
bad if I mmap it it won't go to
memory but the thing is okay this is bad
memory but the thing is okay this is bad
this is really
bad how frequently so this is the
bad how frequently so this is the
problem
problem
um I I can have like 200 copies of this
um I I can have like 200 copies of this
per
per
core so if I'm making a new view of the
core so if I'm making a new view of the
data every process I'm going to
data every process I'm going to
O which is why was originally passing
O which is why was originally passing
the data from
python so I think that I what I need to
python so I think that I what I need to
do is I need to pass a binary
do is I need to pass a binary
variable
variable
um I need to just pass a binary variable
um I need to just pass a binary variable
which will be used for the python
which will be used for the python
binding because if you want multiple
binding because if you want multiple
copies of this thing then you need to
copies of this thing then you need to
have the pathing data passed to you so
have the pathing data passed to you so
that you don't
that you don't
o yeah that's what it'll be but for now
o yeah that's what it'll be but for now
we can make the we can make the read
we can make the we can make the read
function I
believe uh I don't know how to do IO and
believe uh I don't know how to do IO and
C it's been forever
[Music]
uh interprocess shared memory yeah it's
uh interprocess shared memory yeah it's
well it doesn't need to be interprocess
well it doesn't need to be interprocess
shared memory technically it just needs
shared memory technically it just needs
to be cross environments on same process
dude that's way too much freaking code
dude that's way too much freaking code
for reading a bloody
file I see there's just a bunch of error
file I see there's just a bunch of error
checking
we already have the shared memory like
we already have the shared memory like
video on inner process shared memory
video on inner process shared memory
that's puffer Libs bread and but butter
that's puffer Libs bread and but butter
like you can see we have the best shared
like you can see we have the best shared
memory out there for
RL okay so this is stupid this is giving
RL okay so this is stupid this is giving
us like out of
us like out of
memory
memory
things well actually maybe this isn't
things well actually maybe this isn't
stupid
place it in some Global
buffer does that
work I don't think that that works
work I don't think that that works
because
because
you're
you're
calling you're calling the C
calling you're calling the C
script multiple times from
python I guess technically you could
python I guess technically you could
just write the code at the top
right shouldn't need a lock you're not
right shouldn't need a lock you're not
modifying
anything actually I think you're right I
anything actually I think you're right I
think that if just don't do this in the
think that if just don't do this in the
init
script but wait then you have you still
script but wait then you have you still
have to free the memory at some point
have to free the memory at some point
don't you I don't know how you free the
don't you I don't know how you free the
memory if you do it like that
yeah I think that we're just going to
yeah I think that we're just going to
while I think about it I'm just going to
while I think about it I'm just going to
do this
do this
[Music]
[Music]
and this is one of those I know had the
and this is one of those I know had the
answer in C++ but not C then I don't
answer in C++ but not C then I don't
want the
answer very
simple whoops
I'm not doing I'm not implementing
I'm not doing I'm not implementing
reference counters with that with this
reference counters with that with this
[ __ ] that
what's this this is going to
what's this this is going to
[Music]
[Music]
return
unsigned Car
unsigned Car
Star read file
of file
of file
name watch your video thanks see you
name watch your video thanks see you
around star
array num elements
eror oh you don't even need this size
T sign
see you
see you
around unsigned let's
around unsigned let's
see close
file size
right

Kind: captions
Language: en
okay we are
live my desktop is tearing itself apart
live my desktop is tearing itself apart
but uh I think the mic is far enough
but uh I think the mic is far enough
away from it that you're not hearing
away from it that you're not hearing
this
this
mess we'll have to fix that
mess we'll have to fix that
anyways
anyways
welcome we have some cool stuff today
welcome we have some cool stuff today
some very cool stuff I've been working
some very cool stuff I've been working
on for quite a
on for quite a
while so this is
while so this is
now
now
available on X as well as just published
available on X as well as just published
on
YouTube it gives me ABS on my own video
YouTube it gives me ABS on my own video
because I have premium on a different
because I have premium on a different
account nice job YouTube okay I already
account nice job YouTube okay I already
bought it uh
bought it uh
so this is fun this took
forever but this is going to be a really
forever but this is going to be a really
great reference for people for a long
great reference for people for a long
time to
time to
come so I'm sure I'll be chatting about
come so I'm sure I'll be chatting about
this for the rest of the stream but
this for the rest of the stream but
that's not the goal for the time
that's not the goal for the time
being um
being um
first what we're going to do I'm going
first what we're going to do I'm going
to go grab my laptop because I just
to go grab my laptop because I just
realized I forgot to syn a little bit of
realized I forgot to syn a little bit of
code and then we're going to do some
code and then we're going to do some
real cool devb
real cool devb
today I'm finally free from
editing welcome YouTube folks
welcome got to sync up a little bit of
code and then we will show the dev
local is actually it might already be
local is actually it might already be
committed
uh it looks like it
uh it looks like it
is yeah it looks like I already did this
is yeah it looks like I already did this
I thought I'd
I thought I'd
forgotten
forgotten
okay oops that's no
good so what we're going to do
good so what we're going to do
today I did some fun stuff over the
today I did some fun stuff over the
weekend and I'm happy to show I'm I'm
weekend and I'm happy to show I'm I'm
looking forward to showing it off now
looking forward to showing it off now
the the thing is it doesn't run yet but
the the thing is it doesn't run yet but
uh it's still going to be
uh it's still going to be
cool and we'll see if we can get it to
cool and we'll see if we can get it to
run today but we have a couple other
run today but we have a couple other
experiments to look
at
oops
oops
okay Puffer
yes perfect so if you all
recall this is the MOBA that we've been
recall this is the MOBA that we've been
developing
developing
right and let me pull up the the latest
right and let me pull up the the latest
graphic of it as well since we're not
graphic of it as well since we're not
going to have it building for a
going to have it building for a
while so this is what we've been
while so this is what we've been
developing right we've got this MOBA
developing right we've got this MOBA
environment it's really cool
environment it's really cool
it's got a lot of the main features of
it's got a lot of the main features of
DOTA and it runs really really fast for
DOTA and it runs really really fast for
reinforcement learning
reinforcement learning
right and I've been developing this in
right and I've been developing this in
scon and this weekend I got really sick
scon and this weekend I got really sick
of editing videos and not being able to
of editing videos and not being able to
write a bunch of code uh so
write a bunch of code uh so
now this
now this
exists 1300 linish of uh of C that just
exists 1300 linish of uh of C that just
didn't exist before
didn't exist before
this
this
weekend and this actually compiles we
weekend and this actually compiles we
have a bunch of runtime stuff I'm sure
have a bunch of runtime stuff I'm sure
to fix and a ton of other little things
to fix and a ton of other little things
but I got most of the way to just
but I got most of the way to just
porting this whole thing to C in like
porting this whole thing to C in like
one all day session on uh on
Saturday so that's pretty cool now I
Saturday so that's pretty cool now I
think before we do
think before we do
this let me see so before we do
this let me see so before we do
this I think there are a few other small
this I think there are a few other small
things we need to account for
things we need to account for
right yeah there definitely some other
right yeah there definitely some other
things to account for
things to account for
first so we'll start on that um I'm also
first so we'll start on that um I'm also
today going to be
today going to be
monitoring let me put this on the side
monitoring let me put this on the side
just so I get this all set up now I'm
just so I get this all set up now I'm
going to be monitoring the Twitter on
going to be monitoring the Twitter on
the side because Twitter dramatically
the side because Twitter dramatically
boosts stuff when you actually reply to
boosts stuff when you actually reply to
comments
comments
and uh this video Took a ton of work so
and uh this video Took a ton of work so
I'm hoping it does
well I'm just going to leave this up on
well I'm just going to leave this up on
the side
the side
Monitor and uh in case you haven't seen
Monitor and uh in case you haven't seen
it in your
it in your
notifications for you know after today
notifications for you know after today
or whatever the new video is live and uh
or whatever the new video is live and uh
if you've been looking for a way to get
if you've been looking for a way to get
into reinforcement learning and really
into reinforcement learning and really
just want like a good lay of the land
just want like a good lay of the land
and really to hear like my thoughts on
and really to hear like my thoughts on
where the whole field is going I've done
where the whole field is going I've done
this in bits and pieces over the streams
this in bits and pieces over the streams
but uh I did this like all in one place
but uh I did this like all in one place
and like a nice highly produced piece of
and like a nice highly produced piece of
content so that now
content so that now
exists and let's just do
exists and let's just do
this
perfect uh first thing I want to do is
perfect uh first thing I want to do is
check wand
check wand
be because we have some experiments to
be because we have some experiments to
check on
and the goal is going to be first to
and the goal is going to be first to
load up the the plan for today is going
load up the the plan for today is going
to be to load up the best policies
to be to load up the best policies
trained in the older environment in the
trained in the older environment in the
scon 1 see how they look and then
scon 1 see how they look and then
attempt to finish porting stuff to
attempt to finish porting stuff to
see and yeah that'll be a good
time I'm also realizing that I can't see
time I'm also realizing that I can't see
my chat from here
I usually have my chat
up oh yeah I I just have it scrolled
up oh yeah I I just have it scrolled
weird yeah we're
good so you can see here with
good so you can see here with
carbs we have a few different
carbs we have a few different
sweeps uh so the first of these is this
sweeps uh so the first of these is this
is contributed by kyung can follow him
is contributed by kyung can follow him
on Twitter as well he's done some really
on Twitter as well he's done some really
awesome work
awesome work
oh my
oh my
gosh
gosh
[Music]
[Music]
H well
[ __ ] I didn't even expect that to be
[ __ ] I didn't even expect that to be
possible what the how long are these
possible what the how long are these
runs though wait how long are these
runs though wait how long are these
runs process
time okay 80 minutes is a lot
and can we get agent
and can we get agent
steps oh okay so this is training but to
steps oh okay so this is training but to
be fair this is training for Less frames
be fair this is training for Less frames
fewer frames than the original like dqn
fewer frames than the original like dqn
and stuff and it's still
good wait can you even get a can you
good wait can you even get a can you
even get 497 what's the max score on
even get 497 what's the max score on
breakout I don't freaking know this
breakout I don't freaking know this
crazy
let's check the parito fronts and stuff
let's check the parito fronts and stuff
I mean that's like actually
insane let me send this to
insane let me send this to
Kung I want to tell him he did a great
job Kung just like that's a huge
job Kung just like that's a huge
contribution to our RL stack holy I'll
contribution to our RL stack holy I'll
tell you what this is about in a second
tell you what this is about in a second
but we're going to have a lot lots of
but we're going to have a lot lots of
really cool things uh
really cool things uh
today actually let's give him a public
today actually let's give him a public
shout
out actually we're going to do in this
there we
there we
go so amazing amazing work by Kung uh I
go so amazing amazing work by Kung uh I
would post this on Twitter but I'm going
would post this on Twitter but I'm going
to give my you know my main thing a
to give my you know my main thing a
little bit of
time see how this
time see how this
goes and then this
goes and then this
one oh yeah so this one I think I
one oh yeah so this one I think I
mentioned this before but um we solved
mentioned this before but um we solved
at least one of the GPU Drive
at least one of the GPU Drive
scenes full solved it their Baseline
scenes full solved it their Baseline
took 2 hours before now ours solves it
took 2 hours before now ours solves it
in less than 30
in less than 30
seconds so great things from puffer and
seconds so great things from puffer and
this is before the carbs bug fix so
this is before the carbs bug fix so
probably it'll be even better than
probably it'll be even better than
this right the other thing I wanted to
this right the other thing I wanted to
do is I want to get the Pito front
right so this should
right so this should
be process time
wait this is still really good isn't
it
it
350 in 635 seconds so that's still
350 in 635 seconds so that's still
really good and then you have to train
really good and then you have to train
for quite a bit longer if you want to
for quite a bit longer if you want to
get out to here so I mean this is still
get out to here so I mean this is still
fast right like this is still a nice
fast right like this is still a nice
this is a nice Paro
front and this we'll let this keep
front and this we'll let this keep
running cuz who knows maybe this does
running cuz who knows maybe this does
even better but this is what we wanted
even better but this is what we wanted
out of carbs that it would keep running
out of carbs that it would keep running
longer and longer experiments it wasn't
longer and longer experiments it wasn't
working before after kyung's bug fix
working before after kyung's bug fix
this seems to work as intended so
this seems to work as intended so
absolutely great work to
him now let's see from here there were a
him now let's see from here there were a
couple other ones I wanted
couple other ones I wanted
right two weeks
ago where was my
ago where was my
um my new MOBA ELO
um my new MOBA ELO
sweep the Space
sweep the Space
Invaders has it actually been two weeks
Invaders has it actually been two weeks
since I did this sweep have I've been
since I did this sweep have I've been
slacking that
much this is it
right yeah this is the right one so
right yeah this is the right one so
they're not getting rewarded for just
they're not getting rewarded for just
rushing the enemy base now
rushing the enemy base now
uh and we have still this nice sweep and
uh and we have still this nice sweep and
by the way this is without the carbs
by the way this is without the carbs
fixed so even without the carbs fixed we
fixed so even without the carbs fixed we
have this very nice ELO overtime graph
have this very nice ELO overtime graph
and uh we just get to like grab one of
and uh we just get to like grab one of
these
right let me see how the graphs
right let me see how the graphs
look hero
kills carry this is actually very well
kills carry this is actually very well
balanced if you look at it it's a little
balanced if you look at it it's a little
wonky how many kills the tank has but I
wonky how many kills the tank has but I
guess the tank is really good when you
guess the tank is really good when you
learn to play it it's probably farming
learn to play it it's probably farming
really
really
well
well
healing okay the healing is actually
healing okay the healing is actually
well balanced now so the tank has more
well balanced now so the tank has more
healing than the support but the support
healing than the support but the support
is team healing whereas the tank is only
is team healing whereas the tank is only
able to self heal so this looks good to
able to self heal so this looks good to
me damage
dealt okay so the tank is like
dealt okay so the tank is like
ridiculous I think it's mostly doing
ridiculous I think it's mostly doing
like farming or
like farming or
something but the rest of this looks
something but the rest of this looks
roughly balanced I
roughly balanced I
think at least I can't tell looking at
think at least I can't tell looking at
it that it's definitely not balanced and
it that it's definitely not balanced and
did the tank actually tank yes it did
did the tank actually tank yes it did
you can see it's absorbed more than
you can see it's absorbed more than
double of damage which is what it's
double of damage which is what it's
supposed to
supposed to
do and healing received you can see the
do and healing received you can see the
other characters have gotten a nice
other characters have gotten a nice
chunk of healing from the support
environment
environment
level levels are all nicely balanced um
level levels are all nicely balanced um
wait are these the same
wait are these the same
graph I can't tell no these aren't the
graph I can't tell no these aren't the
same graph right not exactly you can see
same graph right not exactly you can see
that this one's a little narrower this
that this one's a little narrower this
one's a little wider so okay these are
one's a little wider so okay these are
correct I thought I was logging stats in
correct I thought I was logging stats in
correctly welcome YouTube
folks and that's all the stats we have
folks and that's all the stats we have
uh I guess we have usage let's just
uh I guess we have usage let's just
check if any of the skills changed
check if any of the skills changed
substantially so support uses
substantially so support uses
Q uses its
e carry doesn't use its q but that's
e carry doesn't use its q but that's
like a utility skill that I think is
bugged okay all these get some usage at
bugged okay all these get some usage at
least some reasonable amount of usage
least some reasonable amount of usage
maybe some get overused or
whatever first Q tank does W support
whatever first Q tank does W support
yeah some of them are really overused
yeah some of them are really overused
only one skill is dead though like only
only one skill is dead though like only
one skill is just not used meaning it's
one skill is just not used meaning it's
like not useful at all so that's pretty
like not useful at all so that's pretty
good uh ooh radiant is ridiculously over
good uh ooh radiant is ridiculously over
powered somehow I don't know why dire
powered somehow I don't know why dire
doesn't win that's
weird Towers taken levels gained yeah
weird Towers taken levels gained yeah
this looks good
this looks good
uh
uh
levels look at this reward for XP
levels look at this reward for XP
towards the end I think that this means
towards the end I think that this means
that they're learning to
that they're learning to
farm
farm
maybe the towers taken is not going up
maybe the towers taken is not going up
as much so maybe they're like over
as much so maybe they're like over
farming or
farming or
something but again these are the cool
something but again these are the cool
thing about the way I have this set up
thing about the way I have this set up
is it's based on Elo so like if you're
is it's based on Elo so like if you're
just farming right you get really high
just farming right you get really high
reward for farming um but then you lose
reward for farming um but then you lose
the game because you're not actually
the game because you're not actually
defending stuff so that gets accounted
defending stuff so that gets accounted
for by our training but yeah this reward
for by our training but yeah this reward
curve is really cool and in fact you
curve is really cool and in fact you
know I think with kung's carbs
fix I think with kung's carbs fix this
fix I think with kung's carbs fix this
is going to do real
is going to do real
well reward for death so they keep dying
well reward for death so they keep dying
more often that's not necessarily bad on
more often that's not necessarily bad on
its
its
own yeah reward board has just spiked up
own yeah reward board has just spiked up
like crazy and it's all because of this
like crazy and it's all because of this
XP pretty much they are still doing
XP pretty much they are still doing
towers and now this is what I'm afraid
towers and now this is what I'm afraid
of here is oh yeah
so the value function goes nuts I've
so the value function goes nuts I've
noticed this a lot with carbs we'll
noticed this a lot with carbs we'll
see what this turns into
but entropy is not fully crashed or
but entropy is not fully crashed or
anything
anything
so hopefully this is a
so hopefully this is a
reasonable
reasonable
policy a couple of these losses are a
policy a couple of these losses are a
little
sketchy all right let's go grab a few
sketchy all right let's go grab a few
things
here do incorporate ELO into the reward
here do incorporate ELO into the reward
so it's Incorporated at a higher level
so it's Incorporated at a higher level
than the reward um it gets assessed
than the reward um it gets assessed
after the game versus all of the
after the game versus all of the
experiments from this like massive sweep
experiments from this like massive sweep
so it gets it samples some number of
so it gets it samples some number of
opponents from like the whole pool and
opponents from like the whole pool and
that's used to evaluate ELO and then we
that's used to evaluate ELO and then we
take the policies that have the highest
take the policies that have the highest
ELO so basically cuz the agents are
ELO so basically cuz the agents are
allowed to set their own reward or the
allowed to set their own reward or the
hyper parameter sweep is allowed to set
hyper parameter sweep is allowed to set
the reward function um you can't just go
the reward function um you can't just go
by what has higher reward because you
by what has higher reward because you
know you can just set reward higher but
know you can just set reward higher but
ELO is objective right ELO is higher ELO
ELO is objective right ELO is higher ELO
means you're winning more games versus
means you're winning more games versus
the opponent components so that's
nice now I have to fix a couple small
nice now I have to fix a couple small
things I enjoy and find it affected to
things I enjoy and find it affected to
develop with C develop and see this
develop with C develop and see this
medium psychiatrist
medium psychiatrist
case this is there's also a hobby
case this is there's also a hobby
language approach to see I
language approach to see I
mean you can look at here's the thing
mean you can look at here's the thing
I'm actually very practical about stuff
I'm actually very practical about stuff
this is it in scon it has to be in
this is it in scon it has to be in
either scon or C right it has to be fast
either scon or C right it has to be fast
it has to run at c-speed so there is the
it has to run at c-speed so there is the
scon oops this is not even the original
scon oops this is not even the original
code uh I'll have to go find the
code uh I'll have to go find the
original code but basically I can't make
original code but basically I can't make
this point now correctly but basically I
this point now correctly but basically I
ported it from scon to C and it didn't
ported it from scon to C and it didn't
even get any longer or any more
even get any longer or any more
complicated so like I can just write
complicated so like I can just write
stuff in C and it's not even hard
right welcome Williams
so it's at the very end of The Sweep
so it's at the very end of The Sweep
that you pick the highest ELO or does
that you pick the highest ELO or does
ELO get optimized I'll show
ELO get optimized I'll show
you so the way that this works and by
you so the way that this works and by
the way these sweeps are about to get
the way these sweeps are about to get
way better cuz Kung just fixed a bug so
way better cuz Kung just fixed a bug so
they're about to hypers scale um but if
they're about to hypers scale um but if
I can find the
sweep this is actually really really
sweep this is actually really really
cool
cool
where's the darn
where's the darn
sweep ah okay
sweep ah okay
so carbs is the hyper parameter tuning
so carbs is the hyper parameter tuning
algorithm right and carbs suggests new
algorithm right and carbs suggests new
hyperparameters for the next experiment
hyperparameters for the next experiment
based on the success metric which is Elo
based on the success metric which is Elo
so basically if you set something that
so basically if you set something that
gets high reward but it doesn't win
gets high reward but it doesn't win
versus the other policies it gets set
versus the other policies it gets set
low down here and then carbs will say
low down here and then carbs will say
that's a bad run those were bad hyper
that's a bad run those were bad hyper
parameters so in a sense you're doing
parameters so in a sense you're doing
this second layer like this higher order
this second layer like this higher order
optimization thing where the reward
optimization thing where the reward
function components and Hyper parameters
function components and Hyper parameters
are based on what gets better ELO and
are based on what gets better ELO and
every time you get uh every time you
every time you get uh every time you
finish a single experiment you run uh
finish a single experiment you run uh
games versus I think it's like eight
games versus I think it's like eight
randomly sampled policies or something
randomly sampled policies or something
from the past in order to compute ELO
from the past in order to compute ELO
probably we could make that approach a
probably we could make that approach a
bit better it should probably be like
bit better it should probably be like
the eight best performing policies or
the eight best performing policies or
something like that but it's pretty good
something like that but it's pretty good
for now
yeah so that's the uh that's the case
yeah so that's the uh that's the case
there now I realized I think I screwed
there now I realized I think I screwed
up and I actually deleted some code by
up and I actually deleted some code by
mistake so I'm going to have to go get
mistake so I'm going to have to go get
that off of the uh the previous Dev
that off of the uh the previous Dev
commit or something
wait do I have this here
Coba oh I have it right here so 1644
Coba oh I have it right here so 1644
lines and I ported this to about the
lines and I ported this to about the
same amount of native
same amount of native
C
C
oops yo so is the MOBA even faster in
oops yo so is the MOBA even faster in
pure C or is it for web it's purely for
pure C or is it for web it's purely for
web there's literally no performance
web there's literally no performance
reason to do any of this stuff and see
reason to do any of this stuff and see
which is why I try to tell contributors
which is why I try to tell contributors
like you don't have to write and see
like you don't have to write and see
unless you want to for puffer lib
unless you want to for puffer lib
contribution scon is fine scyon is
contribution scon is fine scyon is
basically just procedural python it's
basically just procedural python it's
really easy now if you know after you've
really easy now if you know after you've
done that for a bit like I have you want
done that for a bit like I have you want
to just go to see so you can run it on
to just go to see so you can run it on
the web that's cool but that's not
required so that's this that is the
required so that's this that is the
story here why is my video autop playing
story here why is my video autop playing
in the background oh because
cool it's Auto playing in the background
cool it's Auto playing in the background
because people are retweeting it which
because people are retweeting it which
is a good
thing so now what we want to do is we
thing so now what we want to do is we
want to go grab the best run from this
want to go grab the best run from this
sweep let me just make sure my computer
sweep let me just make sure my computer
is not like getting completely hammered
is not like getting completely hammered
here
here
I think there's something screw with the
I think there's something screw with the
fans let me just make sure that it's not
fans let me just make sure that it's not
getting totally hammered by
uh yeah we're at 60 fahrenheit that's
uh yeah we're at 60 fahrenheit that's
totally fine I'll just not do any local
totally fine I'll just not do any local
training today and we'll be
good so sweep
good so sweep
carbs it's this
carbs it's this
one we go grab this experiment right
right
right
there and then we grab the
hypers and apparently this is supposed
hypers and apparently this is supposed
to be very good uh this zero is
to be very good uh this zero is
hardcoded so we didn't allow it to do
hardcoded so we didn't allow it to do
reward for
distance definitely want web dopus I
distance definitely want web dopus I
will help you with that Nathan I will
will help you with that Nathan I will
straight up help you with that
straight up help you with that
so you have to make sure if we're
so you have to make sure if we're
putting it on the web you have to make
putting it on the web you have to make
sure the assets are like a big enough
sure the assets are like a big enough
difference that I don't get sued though
difference that I don't get sued though
because technically there's a company to
sue now that said uh game mechanics are
sue now that said uh game mechanics are
not protected by law you can have
not protected by law you can have
something that has identical game
something that has identical game
mechanics and different artwork and
mechanics and different artwork and
stuff uh game mechanics are not uh
stuff uh game mechanics are not uh
copyrightable or trade Mark like you
copyrightable or trade Mark like you
can't patent or Protect by any means
can't patent or Protect by any means
game mechanics
didn't know that yeah I'll replace
didn't know that yeah I'll replace
character with a cute
character with a cute
sphere where's uh where is South CX or
sphere where's uh where is South CX or
you know our artist friend maybe he can
you know our artist friend maybe he can
uh maybe you can use
uh maybe you can use
the uh the characters he's been making
the uh the characters he's been making
for the Moa in it what do you think
for the Moa in it what do you think
about
that we now have volunteer artist who
that we now have volunteer artist who
makes awesome stuff it turns out
makes awesome stuff it turns out
so I don't know how that you know that's
so I don't know how that you know that's
possible but surprisingly this is the
possible but surprisingly this is the
second time this has happened where
second time this has happened where
we've had people volunteer art and it's
we've had people volunteer art and it's
really cool it's really
really cool it's really
cool cuz that is something I absolutely
cool cuz that is something I absolutely
do not have any any idea how to do
myself actually when he's around one of
myself actually when he's around one of
these times I got to show him I have
these times I got to show him I have
like one digital painting that I did for
like one digital painting that I did for
the cover of like a thing that I wrote
the cover of like a thing that I wrote
It's God awful I he'll get a kick out of
It's God awful I he'll get a kick out of
it I tried getting clean AI
it I tried getting clean AI
Sprites that didn't yeah no it's AI is
Sprites that didn't yeah no it's AI is
just garbage at producing it makes cool
just garbage at producing it makes cool
stuff but it never makes what you want
a little apple with an
a little apple with an
arrow you can't do that either because
arrow you can't do that either because
that's what it is in uh in creatures
that's what it is in uh in creatures
mode right doofus has creatures mode and
mode right doofus has creatures mode and
that's what they do there
make it a green you can't just recolor
make it a green you can't just recolor
it now artwork actually is substantially
it now artwork actually is substantially
protected right as programmers we get no
protected right as programmers we get no
protection for anything but like the
protection for anything but like the
artwork is you got to be visually
distinct total time steps is
this and value function
clip and value function is
clip and value function is
here it actually found very similar
here it actually found very similar
hyper parameters in many ways to
hyper parameters in many ways to
um what we had before very
um what we had before very
similar a little different though
similar a little different though
different enough
yeah uh and now we have to run this on
yeah uh and now we have to run this on
box one
right and we also have to figure out
right and we also have to figure out
because I have like weird stuff going
on see
on see
MOA
MOA
wait Moa
MOA I am somewhat
MOA I am somewhat
confused how I did
this uh I'll check that in a second but
this uh I'll check that in a second but
for now I think I can just
for now I think I can just
add in
MOA Hy
I saw the update as well that you made
I saw the update as well that you made
to the uh the game it looks really good
to the uh the game it looks really good
I'm actually I'm curious how did you do
I'm actually I'm curious how did you do
the path checks because this is going to
the path checks because this is going to
sound really stupid but I actually don't
sound really stupid but I actually don't
know off the top of my head how you
know off the top of my head how you
would do those path checks and I
would do those path checks and I
remember that I tried to make some
remember that I tried to make some
project like this when I was brand new
project like this when I was brand new
to programming and the path checks
to programming and the path checks
totally screwed me over because I tried
totally screwed me over because I tried
to do ray tracing like a [ __ ]
God if anybody saw the stuff that I
God if anybody saw the stuff that I
deved like when I was early on in
uh jeez
you be like if this idiot can do it then
you be like if this idiot can do it then
so can
I I wrote some real bad
code
uh all right
uh all right
cool box is idle
I could have sworn that we messed with
I could have sworn that we messed with
the python file I might have forgotten
the python file I might have forgotten
to commit
that it needs to be
discreet I'll have to look at the code
discreet I'll have to look at the code
for that I actually don't know how
for that I actually don't know how
you're doing it and um I think that like
you're doing it and um I think that like
pretty much the only thing that I can
pretty much the only thing that I can
think of that would be hard in that game
think of that would be hard in that game
to do fast is going to be like the uh
to do fast is going to be like the uh
the range
the range
checks wait just saw the breakout carbs
checks wait just saw the breakout carbs
weren't your runs like that before no
weren't your runs like that before no
man you shredded it you absolutely
man you shredded it you absolutely
shredded it are you kidding me
450 you did a great freaking job
450 you did a great freaking job
let me see if I find the
original it wasn't
original it wasn't
450 and it wasn't running stuff for 120
450 and it wasn't running stuff for 120
mil the current demo
mil the current demo
code what do you mean the current demo
code maybe you
code maybe you
[Music]
[Music]
ran for mobile I'm
ran for mobile I'm
confused K what are you what are you
confused K what are you what are you
saying here my brain not
working what's this
working what's this
one is the mobile where's
breakout two hours two
breakout two hours two
hours or
hours or
maybe that you put random seating
hold let me just find the run because it
hold let me just find the run because it
definitely yours was definitely way
better I didn't tweet it yet Kung
better I didn't tweet it yet Kung
because I just launched the video and
because I just launched the video and
I'm giving that one some time on its own
I'm giving that one some time on its own
but you can either tweet it if you want
but you can either tweet it if you want
to tweet it tweet it tomorrow or
to tweet it tweet it tomorrow or
whatever so I can do it like you know
whatever so I can do it like you know
retweet it then I'm giving my uh the
retweet it then I'm giving my uh the
video some Spotlight at the moment since
video some Spotlight at the moment since
that took an insane amount of
that took an insane amount of
time okay I actually can't find this
time okay I actually can't find this
sweep right now I know it's somewhere is
sweep right now I know it's somewhere is
it this
one yeah here it
is yeah look I only got to 393 you got
is yeah look I only got to 393 you got
all the way up to
450 and yours did longer
runs and this is 500 full experiments as
runs and this is 500 full experiments as
well yours is only 380 something
well yours is only 380 something
experiments right now and yours is
experiments right now and yours is
already better at like 450 and yours
already better at like 450 and yours
does much longer runs so I think you
does much longer runs so I think you
just
just
win so good job okay Nathan I need to
win so good job okay Nathan I need to
compare different implementations lines
compare different implementations lines
of sight and movement sexs are tricky
of sight and movement sexs are tricky
steps are pricky to Tre compute that I
steps are pricky to Tre compute that I
can't speak line of sight and movement
can't speak line of sight and movement
checks are tricky to pre-compute since
checks are tricky to pre-compute since
opponents move could not comp
opponents move could not comp
pre-compute all pairs
pre-compute all pairs
Al go quite simple yeah that's what I
Al go quite simple yeah that's what I
was thinking Nathan you can't
was thinking Nathan you can't
pre-compute um because of dynamic
obstacles yeah so we'll have to look at
obstacles yeah so we'll have to look at
at something for that for
sure okay I only posted this thing uh I
sure okay I only posted this thing uh I
posted this thing not that long ago and
posted this thing not that long ago and
it's at it's getting some decent
it's at it's getting some decent
engagement we'll see how well does I
engagement we'll see how well does I
hope this video does well man it took so
hope this video does well man it took so
much time it took so so much time and I
much time it took so so much time and I
hate editing too I really hate
hate editing too I really hate
editing the one thing I'm a little
editing the one thing I'm a little
concerned about is the pacing of it it
concerned about is the pacing of it it
doesn't like start with something to get
doesn't like start with something to get
you super excited like it starts off
you super excited like it starts off
good and it gets better and better it
good and it gets better and better it
doesn't like start off with the best
doesn't like start off with the best
thing first so I don't know we'll
see but I put a lot of work into it
see but I put a lot of work into it
so much
work I thought of the idea for that like
work I thought of the idea for that like
three months
three months
ago for line of sight I draw a line
ago for line of sight I draw a line
between the center of the character and
between the center of the character and
Target and check if any of the cells go
Target and check if any of the cells go
through is a
wall yeah that's like just a better
wall yeah that's like just a better
version of the ray tracing thing that I
version of the ray tracing thing that I
was thinking of
was thinking of
we'll look at that together we'll look
we'll look at that together we'll look
we'll look at
we'll look at
that what in editing yeah you're selling
that what in editing yeah you're selling
I'm trying to
here with this video puffer uh puffer AI
here with this video puffer uh puffer AI
is officially open for business so yeah
is officially open for business so yeah
we're uh I'm going to start allocating a
we're uh I'm going to start allocating a
portion of my time to you know looking
portion of my time to you know looking
around seeing what companies might be
around seeing what companies might be
interested in picking up a couple
interested in picking up a couple
support contracts and things like that
support contracts and things like that
with Puffer
with Puffer
because it would be real nice to be able
because it would be real nice to be able
to build out a much bigger
to build out a much bigger
cluster and uh we're going to need some
cluster and uh we're going to need some
revenue for
that my hope is that like if I can get a
that my hope is that like if I can get a
50 node cluster for puffer we can just
50 node cluster for puffer we can just
basically run over the entire field with
basically run over the entire field with
the number of experiments we can run and
the number of experiments we can run and
how fast and the number of different
how fast and the number of different
open source things that we can sponsor
open source things that we can sponsor
like we can just run over the whole
like we can just run over the whole
field with that
and technically I could try to go get
and technically I could try to go get
funding for it but that comes with a
funding for it but that comes with a
bunch of strings and stuff so I'd rather
bunch of strings and stuff so I'd rather
just get some
Revenue because we should be able to
Revenue because we should be able to
right we have we've got some really
right we have we've got some really
awesome tools at this point and they can
awesome tools at this point and they can
definitely solve problems in
definitely solve problems in
Industry maybe develop several Indie
Industry maybe develop several Indie
Games nah Game Dev is Game Dev is not
Games nah Game Dev is Game Dev is not
easy Game Dev is not easy
I'm good at making things fast I'm not
I'm good at making things fast I'm not
necessarily good at making things
fun all right let's see so we have the
fun all right let's see so we have the
MOBA here I was supposed to have this
MOBA here I was supposed to have this
thing running in the background while I
thing running in the background while I
was talking too much
yapping balancing it's yeah balancing is
yapping balancing it's yeah balancing is
cool but like
oops so balancing is definitely
oops so balancing is definitely
cool um but like small Indie companies
cool um but like small Indie companies
not going to have budget for
not going to have budget for
that and larger companies tend to have I
that and larger companies tend to have I
mean their games are
slow
so wait what the heck
so wait what the heck
what happened
what happened
here is there something wrong with the
here is there something wrong with the
with this
box uh
box uh
what invalid
combination
combination
what oh it's probably just running the
what oh it's probably just running the
wrong code
right oh no
wait I'm so
confused C
confused C
MOA I thought C MOA is the right file
MOA I thought C MOA is the right file
isn't it
yeah this is the really long
one
and nd's also on YouTube
OB shape
510 oh me
dumb very
dumb very
dumb it's just
syntax we really need a uh an any
syntax we really need a uh an any
validator cuz that's a really dumb bug
validator cuz that's a really dumb bug
to have
right I forget that I don't keep cred
right I forget that I don't keep cred
saved on the puffer box
typically whoops let's not do
typically whoops let's not do
that nobody saw that
yeah let me just real
yeah let me just real
quick to be responsible
okay just going to revoke the
okay just going to revoke the
uh the token real quick
I try not to do
that oh no you can get access to all of
that oh no you can get access to all of
my open source repositories
uh we're getting some attention on the
uh we're getting some attention on the
video not much yet but it's just been a
video not much yet but it's just been a
little
while okay so we should be able
while okay so we should be able
to what why is t-x not
found am I the wrong
found am I the wrong
machine wait what
okay now this should work
okay now this should work
right this should now
right this should now
work
and
okay oops
there we go so this thing will now train
there we go so this thing will now train
for about 10 minutes and we will see
for about 10 minutes and we will see
whether these hypers are actually
whether these hypers are actually
useful and in the meantime I have to
useful and in the meantime I have to
figure out what what the heck happened
figure out what what the heck happened
to my python
file I kind of went on this mad
file I kind of went on this mad
development rush over the
development rush over the
weekend
weekend
and I don't know what I did so I
and I don't know what I did so I
probably forgot to commit a couple
probably forgot to commit a couple
things up
what do I not have a python file
oh I remember I was literally okay I
oh I remember I was literally okay I
remember what happened so I was
remember what happened so I was
literally not modifying the python code
literally not modifying the python code
at all I was only deving scon and
see that's
fine and I know YouTube is way slower
fine and I know YouTube is way slower
with the uh the uptake but let's see
with the uh the uptake but let's see
if anybody is noticed it
yet this is my own
stream cool
I think I should just say
somehow I was served this while working
somehow I was served this while working
out
welcome me writing random RL code and
welcome me writing random RL code and
see
heavy lifts
only okay we well we have that
only okay we well we have that
experiment
running we have all the the H file code
running we have all the the H file code
here and actually the C is pretty
here and actually the C is pretty
much I don't know if it's 100% correct
much I don't know if it's 100% correct
but we need to
but we need to
uh we need to adjust the python binding
uh we need to adjust the python binding
for this so that we can test this end to
for this so that we can test this end to
end now and we can fix runtime
bugs of course we have the experiment
bugs of course we have the experiment
running in the background
running in the background
so I'm going to do it like this to make
so I'm going to do it like this to make
it
easier I think that all I have to do is
easier I think that all I have to do is
I replace these not even all three of
I replace these not even all three of
them just these two
them just these two
lines I'm going to replace these with
I think it's simoa or
something sioa yeah with an
underscore and we are going
underscore and we are going
to let's
see yeah so now we have these same
see yeah so now we have these same
functions in the pure C version cuz the
functions in the pure C version cuz the
difference between these two so C MOA
difference between these two so C MOA
is
is
uh I need to really rename these but
uh I need to really rename these but
right now the first one is just the full
right now the first one is just the full
thing written in scon and then the next
thing written in scon and then the next
one is the header file um where it's
one is the header file um where it's
like cython is just the binding and then
like cython is just the binding and then
the all the actual logic is in C so
the all the actual logic is in C so
let's see with this
and I will also make my camera not cover
this C MOA extension okay now where is
this C MOA extension okay now where is
simoa I want to see where this
built
built
um I'm not seeing this building anywhere
I don't think this is
I don't think this is
building I thought I have the
um did I not commit the setup
file I think I didn't commit the setup
file I think I didn't commit the setup
file then because this should be
building oh yeah
it's actually kind of funny the extent
it's actually kind of funny the extent
to which like zero problems ever come
to which like zero problems ever come
from the SE and they all come from the
from the SE and they all come from the
freaking python
bindings it says there's no diff on the
bindings it says there's no diff on the
setup.py
which is very weird because I could
swear do I have a build script
here I don't even have the build script
here I don't even have the build script
so what happened here I could have sworn
so what happened here I could have sworn
that I had a build
script oh I didn't that's what I forgot
script oh I didn't that's what I forgot
to C to commit I just just forgot to
to C to commit I just just forgot to
commit the the local build script okay
commit the the local build script okay
let me do
that cool
okay so now we actually have the build
okay so now we actually have the build
script and what ended up happening
script and what ended up happening
here is that we need a um we need
here is that we need a um we need
another line here
another line here
for simoa
and Okay cool so now we actually get
and Okay cool so now we actually get
these uh these bugs
these uh these bugs
here and yeah now I remember where we
here and yeah now I remember where we
were so I had there was one thing I had
were so I had there was one thing I had
to do with function pointers that was
to do with function pointers that was
kind of obnoxious in the scon that I
kind of obnoxious in the scon that I
didn't quite get to porting so I did
didn't quite get to porting so I did
everything but this and uh we will we'll
everything but this and uh we will we'll
figure that
out for
so we have this m. skills thing in which
so we have this m. skills thing in which
I was attempting to
record I was attempting to
record I was attempting to
record uh function
pointers is that reasonable
I think that's
reasonable you get to choose you either
reasonable you get to choose you either
have to so the problem here is
have to so the problem here is
that you basically basically want to be
that you basically basically want to be
able to do something like you know
able to do something like you know
player.
player.
skills or like player. q player. w
skills or like player. q player. w
player. for their
player. for their
skills
skills
um and if you don't have some way to
um and if you don't have some way to
bind these
bind these
correctly then um you end up having to
correctly then um you end up having to
do a big conditional over the player
do a big conditional over the player
type or switch or something like
that so we'll Port that let me double
that so we'll Port that let me double
check real
check real
quick for
okay
okay
cool glad to see it's not at least you
cool glad to see it's not at least you
know it's at least being somewhat
noticed I bother to reply to things
noticed I bother to reply to things
because um Twitter boosts your replies
because um Twitter boosts your replies
in the algorithm
skills skill support stun so I think all
skills skill support stun so I think all
I have to do is oh jeez I have to import
I have to do is oh jeez I have to import
all of these don't
I oh that's so
I oh that's so
disgusting okay so I know how to solve
disgusting okay so I know how to solve
this I have to import all these things
this I have to import all these things
to scyon and then bind them back to see
to scyon and then bind them back to see
which is gross we'll find a better way
which is gross we'll find a better way
of doing it but we'll start on this way
of doing it but we'll start on this way
for now let me real
quick is it running super Maven
Pro yeah okay
CU this will help us Port
it see death struct
it see death struct
mooba we need all the
functions they all have this uh syntax
functions they all have this uh syntax
right
and I just need all the
and I just need all the
names so I should just be able to like
names so I should just be able to like
grab all these delete the stuff in the
grab all these delete the stuff in the
middle and then I can just use the names
middle and then I can just use the names
um and the function
um and the function
syntax
right which admittedly this is
right which admittedly this is
incredibly obnoxious
but I think this will be the quickest
but I think this will be the quickest
way of doing
it it's really obnoxious that syon
it it's really obnoxious that syon
requires like these
headers and actually now that I'm
headers and actually now that I'm
thinking about it um this is going to be
thinking about it um this is going to be
a very temporary solution because what's
a very temporary solution because what's
going to happen is we're just going to
going to happen is we're just going to
end up porting all of this into native
end up porting all of this into native
SE and then we won't have to redeclare
SE and then we won't have to redeclare
stuff like this but you know this is the
stuff like this but you know this is the
price that we pay for wanting to uh or
price that we pay for wanting to uh or
for having implemented it in syon
for having implemented it in syon
first and uh these are just growing pans
first and uh these are just growing pans
from the
port I made a few improvements and
port I made a few improvements and
cleanups to the code along the way over
cleanups to the code along the way over
the weekend just since I had the
the weekend just since I had the
opportunity while I was um you know I
opportunity while I was um you know I
was going to just redo it all in the
was going to just redo it all in the
port
anyways so it's probably about the same
anyways so it's probably about the same
length if not a little bit shorter once
length if not a little bit shorter once
you ignore the uh the giant scon binding
you ignore the uh the giant scon binding
file which most of this file is going to
file which most of this file is going to
be deletable I
be deletable I
believe it's just that like you need
believe it's just that like you need
tons of De of definitions because for
tons of De of definitions because for
some reason and I don't quite understand
some reason and I don't quite understand
the architecture of this but for some
the architecture of this but for some
reason syon can't import statically
reason syon can't import statically
defined stuff from C headers it needs
defined stuff from C headers it needs
like its own stupid custom
headers and now this is no longer we no
headers and now this is no longer we no
longer have any
longer have any
classes we just have
classes we just have
the pure function pointers
here and these are scyon definitions so
here and these are scyon definitions so
we're going to see whether
we're going to see whether
um whether it allows me to do this
um whether it allows me to do this
because these are scon definitions of C
because these are scon definitions of C
functions so it might consider these
functions so it might consider these
python objects in which case it will not
python objects in which case it will not
allow us to assign them to
allow us to assign them to
C and then we'll just have to like push
C and then we'll just have to like push
this all one layer deeper a little
this all one layer deeper a little
earlier than i' intended but I think
earlier than i' intended but I think
that this should be
that this should be
okay
oops cannot
convert oh I messed up right this is
convert oh I messed up right this is
yeah this is not just skills it's mv.
yeah this is not just skills it's mv.
skills not self it's now it's en
[Music]
[Music]
and cannot
and cannot
assign to void
star
star
okay I think I have the type wrong here
okay I think I have the type wrong here
here so this needs to
be cannot assign type int can you put
be cannot assign type int can you put
the entire
C
C
int you can't put like the whole
int you can't put like the whole
function signature right
is this just a
cast I think this is just a
cast I think this is just a
cast yeah but this is going to be really
cast yeah but this is going to be really
janky because then when I go to call
janky because then when I go to call
them when I go to call the function I'm
them when I go to call the function I'm
going to have to cast the function to uh
going to have to cast the function to uh
to the different syntax
hold on is there not a way to do this
hold on is there not a way to do this
and
see oh stream is warmed up quite nicely
see oh stream is warmed up quite nicely
welcome twitch folks welcome YouTube
welcome twitch folks welcome YouTube
folks I uh I decided to Port the little
folks I uh I decided to Port the little
MOBA I've been working on which in case
MOBA I've been working on which in case
you haven't seen it we'll give a quick
you haven't seen it we'll give a quick
demo at least a gift of one so this is
demo at least a gift of one so this is
the Moa I've been working on it's fairly
the Moa I've been working on it's fairly
basic but it has many of the elements of
basic but it has many of the elements of
DOTA and it runs a million steps per
DOTA and it runs a million steps per
second so this is what we're using as
second so this is what we're using as
the RL environment and uh I'm currently
the RL environment and uh I'm currently
porting it from syon to Native c not for
porting it from syon to Native c not for
performance scon is plenty fast but just
performance scon is plenty fast but just
so that we can run it on the web because
so that we can run it on the web because
I kind of realized that the C is not any
I kind of realized that the C is not any
harder than the scyon and it's going to
harder than the scyon and it's going to
be really cool when I get to share this
be really cool when I get to share this
on the web and like people can play
on the web and like people can play
against the RL Bots right
m
Ah that's
Ah that's
wait you need to
declare oh wait you can actually do
declare oh wait you can actually do
this
okay I didn't realize you could do
okay I didn't realize you could do
that
that
so wait of course you can do this
so wait of course you can do this
because yeah type
because yeah type
def
def
um in
um in
star
skill and then this is going to
be this is a skill Star
be this is a skill Star
right
right
yeah and then we shouldn't have to do
yeah and then we shouldn't have to do
[ __ ] void star casts we should just
[ __ ] void star casts we should just
have it all nicely
have it all nicely
typed congrats for puffer officially
typed congrats for puffer officially
open a business how can Prof profession
open a business how can Prof profession
can potential customers reach out to you
can potential customers reach out to you
as it's in the video but I have my email
as it's in the video but I have my email
listed there it's jars puffer
a and yeah hopefully I mean in the early
a and yeah hopefully I mean in the early
stages the main thing that I'm going to
stages the main thing that I'm going to
be looking for I'm going to be looking
be looking for I'm going to be looking
for companies that have RL problems that
for companies that have RL problems that
are pretty close to what puffer can do
are pretty close to what puffer can do
at the moment which is quite a bit to be
at the moment which is quite a bit to be
fair and mostly I'm going to be looking
fair and mostly I'm going to be looking
for companies that like they either need
for companies that like they either need
help speeding up their Sims or like they
help speeding up their Sims or like they
need better parallelization or they have
need better parallelization or they have
like a complex Sim that's just really
like a complex Sim that's just really
clunky to work with with existing RL
clunky to work with with existing RL
infra so really the goal is just going
infra so really the goal is just going
to be to speed up and streamline stuff
to be to speed up and streamline stuff
with much lighter weight infra um now as
with much lighter weight infra um now as
puffer gets bigger right we'll be able
puffer gets bigger right we'll be able
to take on larger projects and such um
to take on larger projects and such um
but in the initial stages we're going
but in the initial stages we're going
for you know relatively specific scoped
for you know relatively specific scoped
stuff and just looking for a couple of
stuff and just looking for a couple of
initial clients that uh you know that
initial clients that uh you know that
could very much benefit from that that's
could very much benefit from that that's
the
plan caption went pretty
plan caption went pretty
quick oh
quick oh
yeah I figure I'm not hard to
find there's the there's like a contact
find there's the there's like a contact
form on Puffer that goes to my email and
form on Puffer that goes to my email and
a bunch of other
things all right it's starting to get a
things all right it's starting to get a
little bit of attention on Twitter
little bit of attention on Twitter
that's
nice the main thing is I wonder if it'll
nice the main thing is I wonder if it'll
get into the YouTube algorithm I hope it
get into the YouTube algorithm I hope it
does CU I think in the I think that the
does CU I think in the I think that the
delivery is much better than my thesis
delivery is much better than my thesis
at the
least
mhm that's a good idea I'll put my email
mhm that's a good idea I'll put my email
in the YouTube caption probably it'll
in the YouTube caption probably it'll
get scraped and I'll get spammed but
[Music]
this thingy needs to
this thingy needs to
fix um where is it
put in a one line between these
there good idea thanks
K perhaps on your X profile
K perhaps on your X profile
yep the thing is if I update my X
yep the thing is if I update my X
profile right now Kung I believe it
profile right now Kung I believe it
triggers uh
we're not going crazy on anything just
we're not going crazy on anything just
yet this just means we're open for
yet this just means we're open for
business and I'm going to be spending
business and I'm going to be spending
you know a small fraction of my
you know a small fraction of my
time on that side of things um but for
time on that side of things um but for
the most part I'm going to be chilling
the most part I'm going to be chilling
here and writing more code than ever
here and writing more code than ever
because the C has been going real
fast and it completely fixes the problem
fast and it completely fixes the problem
of releasing stuff right because oops
of releasing stuff right because oops
this needs to get
this needs to get
brighter it it fixes the problem of
brighter it it fixes the problem of
releasing stuff because we can just
releasing stuff because we can just
compile the web
assembly okay why is this s why is this
assembly okay why is this s why is this
saying it's a void star
do I need to import the type def or
something uh
something uh
yes so this is not a void
star uh I don't know how to do this
star uh I don't know how to do this
because
like I think I can just do like this and
like I think I can just do like this and
this is a c type
this is a c type
death
int wait skill of
int wait skill of
environment it's not environment is it
environment it's not environment is it
it's
MOBA I'm very confused on this
this should be
this should be
MOA MOA star entity star entity Star
right but
wait um there needs to be something with
wait um there needs to be something with
for declarations here
me
me
see
typ
have that
has an
has an
element how do I make
file I just don't know how to do the
file I just don't know how to do the
Ford declaration for
Ford declaration for
this
so type
death for
I see so you can for declare strs like
I see so you can for declare strs like
this so that's a little
janky I kind of wish I had a two pass
janky I kind of wish I had a two pass
compile or something but that's like
compile or something but that's like
such a minor nitpick or C so what we
such a minor nitpick or C so what we
have to do is C type dstruct
I think this is the syntax
right so we for declare like
this and
this and
[Music]
then error okay I can't do multiple
then error okay I can't do multiple
lines like this I assume it's C type
lines like this I assume it's C type
death BR
nty this is not the
syntax well wait a second am I being
syntax well wait a second am I being
dumb
dumb
here C type death struct
okay now I'm getting confused with
okay now I'm getting confused with
cython because they should work in C
right yeah this is what I'm going to do
right yeah this is what I'm going to do
when C right you have the struck def up
when C right you have the struck def up
here
oh wait does syon scon has a a two pass
oh wait does syon scon has a a two pass
right so in scon I think I'm fine I
right so in scon I think I'm fine I
don't need to do
this yeah so then all I have to do is
this yeah so then all I have to do is
this has to be in
m.h
death
okay skill
okay skill
and then this is now going to be a skill
and then this is now going to be a skill
Star
right cannot assign
hpe wait cannot
hpe wait cannot
assign to skill
assign to skill
star MOA entity
entity well why can't it do that
that's the same thing right a skilled
that's the same thing right a skilled
star is
star is
a hold
on oops
C
wait your function is marked as no
wait your function is marked as no
except well it's not marked as no
except
except
right modify
this is where GPT goes off the
this is where GPT goes off the
rails and I have to find uh my own
rails and I have to find uh my own
solution because that's not a thing
wait did I get this
wrong I mean I named it something else
wrong I mean I named it something else
but that doesn't matter
right so
cannot
cannot
assign oh
wait wait cannot
wait wait cannot
assign
assign
type okay so it is right that something
type okay so it is right that something
weird is happening with no accept
because it's there h
oh wait does this have to be a
oh wait does this have to be a
reference this has to be a reference
reference this has to be a reference
doesn't
it this should be because it's a
pointer if this works it's then this is
pointer if this works it's then this is
my bad being
my bad being
stupid like
stupid like
obviously and I always forget that um
obviously and I always forget that um
I've got like the python brain of things
I've got like the python brain of things
being like almost all object things
being like almost all object things
being references by
being references by
default so like I would think oh yeah of
default so like I would think oh yeah of
course it's already a pointer because
course it's already a pointer because
it's a function but obviously no it
it's a function but obviously no it
isn't and I'm dumb and I've written too
isn't and I'm dumb and I've written too
much
python okay at least now we have they're
python okay at least now we have they're
both pointers
they should not have to do this
as I'm going to put no accept on here
as I'm going to put no accept on here
just to
see what
see what
happens also you don't
happens also you don't
need you don't need semicolons in uh in
need you don't need semicolons in uh in
scon what are you
doing oh it's cuz you just copied these
doing oh it's cuz you just copied these
from the C right that's
fine okay now it says it cannot
fine okay now it says it cannot
assign to skill
star okay this is driving me nuts
star okay this is driving me nuts
because this is literally the same
because this is literally the same
type um so I think instead of screwing
type um so I think instead of screwing
around with dumb scon I think that the
around with dumb scon I think that the
easier way to solve this
easier way to solve this
is is going to be just to Port this
is is going to be just to Port this
section of the code to see
right is there anything that's hard to
right is there anything that's hard to
port to see in here they really isn't
right yeah
so let's just take this entire
block and go into
m.h and then what we're going to do is
m.h and then what we're going to do is
we're going to put this
here and we'll translate this just to C
here and we'll translate this just to C
directly cuz we were going to do this
directly cuz we were going to do this
anyways we're just going to do it a
anyways we're just going to do it a
little earlier because I'm sick of
little earlier because I'm sick of
fighting
fighting
syon so this should be entity star
syon so this should be entity star
layer and then this
layer and then this
is
M
M
yep else
yep
yep
okay HD goes to
okay HD goes to
*
*
5 +
5 +
5 Yep this is
good we already defined player here so
good we already defined player here so
these just need semicolons on the end
these just need semicolons on the end
well
well
what look at
that yeah that's what we
that yeah that's what we
want let me make sure that this is
want let me make sure that this is
correct
correct
oh yeah that's all the
oh yeah that's all the
same God got to love super
Maven like use AI to type for you not to
Maven like use AI to type for you not to
think for you it's
great um okay but now there is there's
great um okay but now there is there's
something screwy here
something screwy here
because I have have PID
here in PID is five times
here in PID is five times
team
team
okay m.
okay m.
entities HD this is good
entities HD this is good
whoops oh look at that
perfect everything gets
perfect everything gets
assigned we can see right here that the
assigned we can see right here that the
skills the syntax looks good
skills the syntax looks good
here um hold on what
happened why did it do it
twice oh it did it twice because this is
twice oh it did it twice because this is
the old version
the old version
right
right
yeah so now we just do Pit is equal to
yeah so now we just do Pit is equal to
this
okay and all the numbers are the same
okay and all the numbers are the same
all the skills are the
same and at this point I think that it's
same and at this point I think that it's
going to correctly do the rest of it so
going to correctly do the rest of it so
we will just
we will just
quickly uh refactor here
yeah okay so let's see what happens when
yeah okay so let's see what happens when
I compile
this well uh we can say that that's not
happy could it have failed perhaps
happy could it have failed perhaps
earlier
earlier
um I don't even know what the hell flag
um I don't even know what the hell flag
scon builds
with there's like tons of stuff that
with there's like tons of stuff that
it's
it's
saying defined but not
saying defined but not
used
okay we don't need these now we can get
okay we don't need these now we can get
rid of
rid of
these we actually don't need this one
these we actually don't need this one
either so let's try that again
either so let's try that again
uh you do actually need this version up
uh you do actually need this version up
here I believe because you have a skill
here I believe because you have a skill
star okay now it spams
you get
reward uh it says everything is
reward uh it says everything is
like spawn at defined but not
used that's weird
it should be being
used do I not have step
defined oh you didn't Define
defined oh you didn't Define
um well
um well
yeah you need
player offset creep offset right now you
player offset creep offset right now you
need to Define step and
reset
step wa to
step wa to
reset okay and now what we're going to
reset okay and now what we're going to
do is
do is
oops step
um okay this thing doesn't know what
um okay this thing doesn't know what
it's
it's
doing
so let me see how step gets called
so let me see how step gets called
actually I believe that we just have
actually I believe that we just have
actions already given don't we
step
step
players reset takes just the nend and
players reset takes just the nend and
step takes just the N perfect so this is
step takes just the N perfect so this is
just going to be
just going to be
self and then we're just going to do
self and then we're just going to do
self do
self do
step no it's going to be
step no it's going to be
step self Dot
step self Dot
N that's the syntax and then we just do
N that's the syntax and then we just do
def reset
def reset
look at
this
and okay so now it's still telling me
and okay so now it's still telling me
that all these things are not getting
that all these things are not getting
used now they should be getting used
used now they should be getting used
though um
all this stuff here is unused
warnings
and we have a bunch of other errors in
and we have a bunch of other errors in
here as
here as
well man I can't actually tell based on
well man I can't actually tell based on
this so what I'm going to
this so what I'm going to
do is I have this build local script
do is I have this build local script
which will just compile the C on its
own and okay now I get reasonable error
own and okay now I get reasonable error
messages
right struct
right struct
entity
94 okay it doesn't like my Ford
94 okay it doesn't like my Ford
declaration
I didn't I thought that the syntax was a
I didn't I thought that the syntax was a
little
goofy let me check not g not
GPT type Def
type def struct
a uh
a uh
wait this looks fine doesn't
it type red
definition struct entity versus struct
definition struct entity versus struct
entity
huh I actually don't know what this is
conflicting
types once is struct but it's not being
types once is struct but it's not being
defined as struct entity
defined as struct entity
right
right
T this is a type Def struct
saw a tutorial of a guy that used RL to
saw a tutorial of a guy that used RL to
oops balance double
oops balance double
pendulum uh that's a very difficult
pendulum uh that's a very difficult
problem that's like classic
problem that's like classic
chaos back end was C++
sfml
sfml
so for here's the thing um I don't want
so for here's the thing um I don't want
to implement the entire RL
to implement the entire RL
stack itself in C that's a really dumb
stack itself in C that's a really dumb
idea because like think about it the
idea because like think about it the
whole like all your environments are
whole like all your environments are
going to be like external outside of
going to be like external outside of
puffer are going to be in Python anyways
puffer are going to be in Python anyways
and yeah we can Port them but initially
and yeah we can Port them but initially
they need to work
they need to work
um you have all of pytorch which has I
um you have all of pytorch which has I
guess it technically has a C++ backend
guess it technically has a C++ backend
but nobody's doing that stuff right uh
but nobody's doing that stuff right uh
so they're going to want to have models
so they're going to want to have models
at least in Python
at least in Python
and then like all the learning libraries
and then like all the learning libraries
are also in Python and like if you're
are also in Python and like if you're
prototyping algorithms you probably want
prototyping algorithms you probably want
those to be in Python and like it's not
those to be in Python and like it's not
even that's not even where the speed
even that's not even where the speed
loss is coming from right because you
loss is coming from right because you
have like graph compilation and such
have like graph compilation and such
that can make stuff fast there so we're
that can make stuff fast there so we're
not going to be in the business of
not going to be in the business of
redoing an entire training framework in
redoing an entire training framework in
C that's like way way way way too much
C that's like way way way way too much
but what we can do is we can make the
but what we can do is we can make the
environment run and see and we can have
environment run and see and we can have
a few different uh types of layers right
a few different uh types of layers right
now we just have MLPs but I'm going to
now we just have MLPs but I'm going to
add like C layers and an lstm layer so
add like C layers and an lstm layer so
that basic networks can be run in
that basic networks can be run in
inference mode only in C not optimized
inference mode only in C not optimized
but since it's C it'll be fast enough
but since it's C it'll be fast enough
that like you can play against stuff
that like you can play against stuff
live in your browser and whatnot for the
live in your browser and whatnot for the
demos so that's the current plan
as the current
plan got some more notifications
people are putting the uh the
people are putting the uh the
video up on
video up on
the TV and stuff that's cool
very
very
nice I mean I'm glad that people are
nice I mean I'm glad that people are
having a a good time with this we'll see
having a a good time with this we'll see
how much traction this gets I really
how much traction this gets I really
hope that video does well
though okay am I just misunderstanding
though okay am I just misunderstanding
here this Line's optional
type dstruct
explain why
I okay so it's already seen the type
yeah so this is why so you type dep the
yeah so this is why so you type dep the
struct and then you just D
struct oh I I actually like this a
struct oh I I actually like this a
little bit more kind of don't I because
little bit more kind of don't I because
then you don't have like this syntax is
then you don't have like this syntax is
freaking weird right now I can just do
freaking weird right now I can just do
struct
entity and like this is gross too right
entity and like this is gross too right
so now I can just go all the way to the
so now I can just go all the way to the
top of the Moa here
top of the Moa here
and then this is just Str mooba which is
and then this is just Str mooba which is
the nice
syntax cool and what happens
now okay this is good now these are
now okay this is good now these are
legitimate errors
this is supposed to be n entities this
this is supposed to be n entities this
way uh actually let me
just I have it truncated the error so
just I have it truncated the error so
the workflow is usually that I do is I
the workflow is usually that I do is I
have the compile on one
have the compile on one
side and it truncates to three errors
side and it truncates to three errors
so Undeclared spawn
so Undeclared spawn
y this is scoping right
okay agent
okay agent
speed uh how did I mess this one up
speed uh how did I mess this one up
here init mooba right so I need to hard
here init mooba right so I need to hard
code I think for
now to
do pass agent speed as
AR agent speed I think it's 0.5 by
AR agent speed I think it's 0.5 by
default or something
right oh it's 1.5
cool so
and then what else do I have
here
here
n this is supposed to be like
this yeah this is just bad
translation all of these functions are
translation all of these functions are
Pointers now
it's a little
pedantic okay undefined
pedantic okay undefined
identifier so these things don't have um
identifier so these things don't have um
board declarations
[Music]
right can I just technically put this at
right can I just technically put this at
the bottom of the file
like nothing else is going to call this
like nothing else is going to call this
ever
ever
right why wouldn't I just put the init
right why wouldn't I just put the init
at the bottom of the
file right like nothing else is going to
file right like nothing else is going to
ever call in
ever call in
it um heck I can actually just put it
it um heck I can actually just put it
above the reset right because it'll be
above the reset right because it'll be
like the main API it's a knit
like the main API it's a knit
reset and
reset and
step I don't know maybe there's some
step I don't know maybe there's some
reason not to do this but let's see if
reason not to do this but let's see if
we're wrong
uh
uh
okay
incompatible okay so first of all this
incompatible okay so first of all this
entities thing here
thing
thing
here does that fix
anything function def not allowed here
anything function def not allowed here
why
not assumedly I forgot
not assumedly I forgot
something yes I forgot a Clos
brace
here okay perfect so now we just have
here okay perfect so now we just have
warnings and we have to fix
these now this is probably just me
these now this is probably just me
messing up my function pointers
incompatible pointer types assigning to
incompatible pointer types assigning to
skill
skill
star
AKA in Star it should not be an in star
star how did I Define this up
top type
top type
def
int St
int St
skill
wait is this supposed to be skill or
wait is this supposed to be skill or
Star
skill what's the type of a function do
skill what's the type of a function do
you have to pass the address of the
you have to pass the address of the
function or not
oh okay so I was right the first time
oh okay so I was right the first time
before I messed with
it
it
so the function is already up pointer so
so the function is already up pointer so
that matches my intuition cuz otherwise
that matches my intuition cuz otherwise
what would it be actually right like a
what would it be actually right like a
void type I don't
know so I
know so I
uncorrected myself
uncorrected myself
before and we still have inal incorrect
before and we still have inal incorrect
pointer type
skills assigning to skill
star
okay let's see if I can guess I didn't
okay let's see if I can guess I didn't
really give it any contact
du expected to be a pointer to a
du expected to be a pointer to a
function
pointer assign a regular function to a
pointer assign a regular function to a
variable
well that doesn't make any
well that doesn't make any
sense yeah this is what we
want yeah this is just an
array uh that's a little
array uh that's a little
weird but I think that that's it there
weird but I think that that's it there
we we go that's correct so now this
we we go that's correct so now this
builds in C at the very
least of course syon is still going to
least of course syon is still going to
be very angry at us
right surprisingly way less angry so
right surprisingly way less angry so
that's kind of the way to go then huh is
that's kind of the way to go then huh is
that you do all your C work in se you
that you do all your C work in se you
make sure your C comp and then you do
make sure your C comp and then you do
scon build cuz scon build is just it's
scon build cuz scon build is just it's
got a bunch of garbage on it like look
got a bunch of garbage on it like look
at how it's compiling it's got a bunch
at how it's compiling it's got a bunch
of garbage
right very nice
right very nice
and we will do a quick check on the
and we will do a quick check on the
video and then we'll keep
fixing 55 views lached one hour ago
cool well we'll see if this gets into
cool well we'll see if this gets into
elgo or
not okay
not okay
[Music]
[Music]
unused
unused
[Music]
[Music]
in spawn
in spawn
y wait unused
variable oh oh that's
gross I didn't know you could even do
that that it does it
that that it does it
build that actually
build that actually
builds that actually does
builds that actually does
build which is fantastic
and L EG
fault because this is building with GCC
fault because this is building with GCC
and it doesn't have F
and it doesn't have F
sanitized so uh let's commit some stuff
sanitized so uh let's commit some stuff
first and then we will check out the
first and then we will check out the
policy that we've trained potentially if
policy that we've trained potentially if
it's any good and then we'll continue
it's any good and then we'll continue
fixing this for
we revoke that
token big rip what
token big rip what
happened yo bet what
happened yo bet what
happened are the freaking boxes all down
oh I need to get box
oh I need to get box
three it's Labor Day so it'll be on
three it's Labor Day so it'll be on
[Music]
tomorrow yeah I think it is like 800 or
tomorrow yeah I think it is like 800 or
something
something
Max um seg fults are fine
Max um seg fults are fine
bet so seg fults are totally fine in um
bet so seg fults are totally fine in um
cuz like here's the thing I'm writing C
cuz like here's the thing I'm writing C
but they're very easy to debug because
but they're very easy to debug because
there's literally like everybody goes oh
there's literally like everybody goes oh
seg fault's hard to debug yeah they're
seg fault's hard to debug yeah they're
really hard to debug if like you don't
really hard to debug if like you don't
know that a dress sanitizer exists and
know that a dress sanitizer exists and
then it literally tells you where the
then it literally tells you where the
seg fault is and then you just fix it
seg fault is and then you just fix it
and you move on with your
life finally AI content that's not in
life finally AI content that's not in
Python so it's a bit of both um what I
Python so it's a bit of both um what I
like to do with puffer is I want to make
like to do with puffer is I want to make
it very very easy to push code from
it very very easy to push code from
python to scon to C so you have like
python to scon to C so you have like
this very very nice way to like
this very very nice way to like
prototypes like stupid code fast and
prototypes like stupid code fast and
then you have a very easy way to get it
then you have a very easy way to get it
running at very uh very high perf so
running at very uh very high perf so
what we do is like our simulators are in
what we do is like our simulators are in
pure C or scyon which runs in pure C so
pure C or scyon which runs in pure C so
either way um they run at like a million
either way um they run at like a million
steps per second
steps per second
plus
plus
and then like the learning library and
and then like the learning library and
stuff on top is in Python but like if
stuff on top is in Python but like if
you think about it most of that's not
you think about it most of that's not
even in Python because the bottleneck
even in Python because the bottleneck
there is uh torch operations that are
there is uh torch operations that are
running under the hood in uh in C++ and
running under the hood in uh in C++ and
Cuda but yeah the Sims they absolutely
Cuda but yeah the Sims they absolutely
have to be in something that is either C
have to be in something that is either C
or C native speed which is what we're
or C native speed which is what we're
doing here now technically scon is
doing here now technically scon is
plenty good enough um the two things I
plenty good enough um the two things I
got annoyed with with cython I got
got annoyed with with cython I got
annoyed with like the build system and
annoyed with like the build system and
the build times and then I got annoyed
the build times and then I got annoyed
because I couldn't easily put it on the
because I couldn't easily put it on the
web like you can't just easily compiled
web like you can't just easily compiled
a web assembly so that's why I started
a web assembly so that's why I started
porting some stuff to uh to Native C I
porting some stuff to uh to Native C I
tell contributors though that like
tell contributors though that like
you're not required to submit stuff in C
you're not required to submit stuff in C
because most people don't want to do
because most people don't want to do
that so scon is fine uh for environments
that so scon is fine uh for environments
it's still plenty
fast but the C is Fun the C is is real
fun I've been a very happy camper just
fun I've been a very happy camper just
like jamming some sea over the
weekend now the one thing that does suck
weekend now the one thing that does suck
I will say is binding to python like the
I will say is binding to python like the
bindings for C code to python are a pain
bindings for C code to python are a pain
so I'm still using scon for that because
so I'm still using scon for that because
pbind is just [ __ ] um and C types is
pbind is just [ __ ] um and C types is
not super fun either but the whole
not super fun either but the whole
simulation code is a native C now and
simulation code is a native C now and
we're fixing that
we're fixing that
up real quick though we're going to try
up real quick though we're going to try
the old model out on the old scon
the old model out on the old scon
version of the environment just to see
version of the environment just to see
if it's doing any
good so this is the python binding for
good so this is the python binding for
it and this is the uh the scon version
it and this is the uh the scon version
that I'm uncommenting here then we have
that I'm uncommenting here then we have
the C version
the C version
and all I want to do this for
and all I want to do this for
is they're supposed to be right
is they're supposed to be right
here okay so this is the model that we
here okay so this is the model that we
just
trained and if we go over
trained and if we go over
to WAND
to WAND
B we should be able to pull down the
B we should be able to pull down the
newly trained model file and see if it
newly trained model file and see if it
looks any good
[Music]
buffer this
buffer this
one yeah this one looks
one yeah this one looks
good uh this is a little
sketchy uh I think that the model might
sketchy uh I think that the model might
have diverged or something wait let me
have diverged or something wait let me
see
let me look for
wins yeah so right here oh no this is
wins yeah so right here oh no this is
actually fine right yeah cuz this last
actually fine right yeah cuz this last
little bit here is just an eval point so
little bit here is just an eval point so
it's still winning games
let's go grab this model
file
file
copy
and mobile p
and let's see if this actually plays the
and let's see if this actually plays the
game
reasonably was it eval model path
okay we'll start with
this
what yeah these things are stupid
right oh you can see right here that
right oh you can see right here that
there's one agent that's like
there's one agent that's like
jungling but the uh the radiant team is
jungling but the uh the radiant team is
stupid here
stupid here
so I'm assuming what happened oh that's
so I'm assuming what happened oh that's
really cool oh you think this is cool
really cool oh you think this is cool
wait until you see
wait until you see
this yeah stick around my
guy and guess what it's all open
source here's the actual
source here's the actual
MOA let's play puffer MOA at like this
MOA let's play puffer MOA at like this
thing runs a million steps per
thing runs a million steps per
second do a little speed boost I forget
second do a little speed boost I forget
my buttons yeah there we go we do an
my buttons yeah there we go we do an
assassinate on this
assassinate on this
one get out of tower
one get out of tower
range okay wait for
Mana what the heck is going on with
Mana what the heck is going on with
these guys okay so now he comes back and
these guys okay so now he comes back and
now we should just Auto
now we should just Auto
him and then I wait for my wave and uh I
him and then I wait for my wave and uh I
think you can assassinate the tower in
think you can assassinate the tower in
this so let's try
this so let's try
that take Tower aggro
that take Tower aggro
please oh no the tower's destroying
me ah the tank is killing me the tank
me ah the tank is killing me the tank
with the AOE is too
strong uh do I have Mana for this I
strong uh do I have Mana for this I
think I do
think I do
right oh I do have Mana but it's still
right oh I do have Mana but it's still
going to kill me yep
going to kill me yep
okay that was the Quick Test I think
okay that was the Quick Test I think
that what we need to do is we need to
that what we need to do is we need to
rerun this uh experiment for like
rerun this uh experiment for like
slightly fewer steps because I think
slightly fewer steps because I think
it's just unst uh unstable you got Dove
it's just unst uh unstable you got Dove
no I dove it and died I inted is what
no I dove it and died I inted is what
happened I will I have to
happened I will I have to
admit and all this game is done all the
admit and all this game is done all the
game AI is done using RL the player AI
game AI is done using RL the player AI
is RL uh the player AI is way better
is RL uh the player AI is way better
than you just saw by the way the model
than you just saw by the way the model
in this one collapsed so the hero AI
in this one collapsed so the hero AI
they're five different Heroes it's a
they're five different Heroes it's a
mirror match 5v5 and the models are
mirror match 5v5 and the models are
trained with reinforcement learning
yes and for context um if you click
yes and for context um if you click
around on the channel I'm assuming if
around on the channel I'm assuming if
you just got here that you're brand new
you just got here that you're brand new
I am a uh newly minted MIT PhD I've been
I am a uh newly minted MIT PhD I've been
doing reinforcement learning for 8 years
doing reinforcement learning for 8 years
I am now on a quest to make
I am now on a quest to make
reinforcement learning actually work
reinforcement learning actually work
with good infrastructure so we're doing
with good infrastructure so we're doing
tons of infra which is in puffer lib and
tons of infra which is in puffer lib and
we're building tons of really ultra high
we're building tons of really ultra high
performance simulators for training and
performance simulators for training and
evaluating reinforcement learning agents
evaluating reinforcement learning agents
um that is what I am currently doing and
um that is what I am currently doing and
if you want to check it out the code is
if you want to check it out the code is
surprisingly simple for all of this I
surprisingly simple for all of this I
really don't write big intricate things
really don't write big intricate things
so I will link it
go ahead and star the puffer to help me
go ahead and star the puffer to help me
out uh and yeah stick around because
out uh and yeah stick around because
there's a lot of this Dev happening it's
there's a lot of this Dev happening it's
really exciting for the field I just
really exciting for the field I just
posted a big video today on with like
posted a big video today on with like
all of my thoughts on where the field is
all of my thoughts on where the field is
going and how puffer lib is going to fix
going and how puffer lib is going to fix
stuff in here
stuff in here
yeah I remember seeing your thesis
yeah I remember seeing your thesis
defense okay perfect so from my thesis
defense okay perfect so from my thesis
defense the most like I just today
defense the most like I just today
posted a video I spent a lot of time on
posted a video I spent a lot of time on
that outlines like all the stack the
that outlines like all the stack the
entire RL stack from hyper parameters
entire RL stack from hyper parameters
down to well you'll see um and what
down to well you'll see um and what
puffer is doing at every
puffer is doing at every
level and since that's finally finished
level and since that's finally finished
basically the plan for the next several
basically the plan for the next several
weeks is to just Jam some code and make
weeks is to just Jam some code and make
this simulator and several others
this simulator and several others
ridiculously fast and run lots of very
ridiculously fast and run lots of very
good experiments on them that's the
good experiments on them that's the
current plan
current plan
since my thesis everything has gotten a
since my thesis everything has gotten a
thousand times faster it's actually
nuts mostly because I stopped writing
nuts mostly because I stopped writing
stuff in naive
python I still do like python but
python I still do like python but
like I'm enjoying my SE much more now
okay so we'll run that in the background
okay so we'll run that in the background
and
and
um it's going to have to retrain because
um it's going to have to retrain because
the model like I think it just collapsed
the model like I think it just collapsed
you know not amazing hypers
and now we got to fix the seg bols
right so this seg bols yeah
and it's right now it's because it's
and it's right now it's because it's
compiling it without F sanitized
right I'm trying to think how I want to
right I'm trying to think how I want to
do this because
just started Masters in
just started Masters in
THS simulating RL models was something I
THS simulating RL models was something I
really wanted to go to possibly with a
really wanted to go to possibly with a
video game development process well you
video game development process well you
found
found
it we have a bunch of people now that
it we have a bunch of people now that
are like making and contributing Sims to
are like making and contributing Sims to
the project as well and it's really cool
the project as well and it's really cool
to see people that just have General
to see people that just have General
software engineering backgrounds um
software engineering backgrounds um
writing stuff that's like a million
writing stuff that's like a million
steps per second plus and it pretty much
steps per second plus and it pretty much
as soon as we get enough of these
as soon as we get enough of these
simulators that run fast like RL is a
simulators that run fast like RL is a
whole different field so that's the main
whole different field so that's the main
focus at the moment thus far there's
focus at the moment thus far there's
this one there's like a grid World en
this one there's like a grid World en
there's a snake game couple contributors
there's a snake game couple contributors
have made a tar breakout in pong there's
have made a tar breakout in pong there's
like another PVP turnbas thing uh that
like another PVP turnbas thing uh that
somebody just started and I have another
somebody just started and I have another
big project I haven't announced yet as
big project I haven't announced yet as
well so there's a lot of progress in
well so there's a lot of progress in
this base got a star definitely using
this base got a star definitely using
this Library hey I hope so and uh let me
this Library hey I hope so and uh let me
know if anything's not working out
know if anything's not working out
because I'm pretty much always just here
because I'm pretty much always just here
on stream so it's like the best tech
on stream so it's like the best tech
support ever it's just like hey your
support ever it's just like hey your
stupid code doesn't work perfect right I
stupid code doesn't work perfect right I
fix it
live the M the master Branch should be
live the M the master Branch should be
pretty stable but it's usually a couple
pretty stable but it's usually a couple
months out date the dev branch is it has
months out date the dev branch is it has
tons of cool stuff always but it's like
tons of cool stuff always but it's like
I move fast and break things there so if
I move fast and break things there so if
I break things you let me
know all right where's the darned F
know all right where's the darned F
sanitize
setting uh
I can just run the cython command
I can just run the cython command
manually I know
manually I know
right but this extra compile ARS gets
right but this extra compile ARS gets
ignored doesn't
it yeah unknown distribution option
it yeah unknown distribution option
extra compile
arson compile where
I have to make this an
extension I really shouldn't have to do
that Discord yep there is a Discord as
that Discord yep there is a Discord as
well Discord juffer
the other cool demo on Puffer that I
the other cool demo on Puffer that I
forgot to to show off is um this is the
forgot to to show off is um this is the
reason for doing it in C right is like
reason for doing it in C right is like
here I'm playing snake versus RL agents
here I'm playing snake versus RL agents
in the
in the
browser and these are just running live
browser and these are just running live
on like one CPU
on like one CPU
core see I just juked a
core see I just juked a
snake and then I can take my hands off
snake and then I can take my hands off
and the RL takes over
so hopefully we'll do all the
so hopefully we'll do all the
environments we'll have stuff like
environments we'll have stuff like
that I really don't like
that I really don't like
this I'm trying to think if there's a
this I'm trying to think if there's a
better way I can
test I think I can just compile
test I think I can just compile
locally uh with the address sanitizer
locally uh with the address sanitizer
and I'll just have to make like some
and I'll just have to make like some
sort of
sort of
demo to run
demo to run
this yeah I need to make this run
this yeah I need to make this run
standalone C in order to test it that's
standalone C in order to test it that's
the problem and there's like there's a
the problem and there's like there's a
bunch of file data that has to get
bunch of file data that has to get
loaded that's going to be very painful
loaded that's going to be very painful
to do and
see maybe
see maybe
not but that's the direction we have to
not but that's the direction we have to
go we're going to have to slow down a
go we're going to have to slow down a
little bit we're going to have to just
little bit we're going to have to just
Port the rest of it to see and then what
Port the rest of it to see and then what
I should be able to do is I should be
I should be able to do is I should be
able to write um just something to take
able to write um just something to take
random actions in the environment
random actions in the environment
and then after that I should be able to
and then after that I should be able to
load policies into
load policies into
it so that's the way that we'll do we'll
it so that's the way that we'll do we'll
handle that how's this thing
going it's
going
going
nice garbage
ads okay
let's see how bad it is
let's see how bad it is
so I think this is the main logic right
so I think this is the main logic right
here that we haven't ported
yet really the only thing that I don't
yet really the only thing that I don't
know how to do
know how to do
easily is
easily is
like there's a dictionary
here right there's a
here right there's a
dictionary and I need to be able
dictionary and I need to be able
to load the file for
this there's a map and there's a
this there's a map and there's a
dictionary and I need to be able to load
dictionary and I need to be able to load
the files in
C enjoy the new video been following
C enjoy the new video been following
puffer for over a year amazing to see
puffer for over a year amazing to see
that there are phds who don't write
that there are phds who don't write
research codes
research codes
that's what I'm saying man it's like
that's what I'm saying man it's like
write good
write good
code the only metric that matters is the
code the only metric that matters is the
eye bleed metric it's like do my eyes
eye bleed metric it's like do my eyes
bleed reading the
bleed reading the
code H lately I've been getting lower
code H lately I've been getting lower
and lower level with this stuff as well
and lower level with this stuff as well
um so right now this is me porting the
um so right now this is me porting the
mooba from that video to
mooba from that video to
see and not scyon native C so this is
see and not scyon native C so this is
The scon Binding that I'm slowly putting
The scon Binding that I'm slowly putting
into the mob file there are a couple
into the mob file there are a couple
things I haven't figured out yet but
things I haven't figured out yet but
it's mostly there so I mean this is400
it's mostly there so I mean this is400
lines of C that didn't exist before
lines of C that didn't exist before
Saturday really I've only spent Saturday
Saturday really I've only spent Saturday
and a couple hours today on
it um so this is going to be fun as soon
it um so this is going to be fun as soon
as I figure out how to test this
as I figure out how to test this
Standalone and such uh we're going to be
Standalone and such uh we're going to be
able to play this on the web so if users
able to play this on the web so if users
will be able to like test it out and
will be able to like test it out and
like find bugs and stuff and play
like find bugs and stuff and play
against the RL agents hopefully they'll
against the RL agents hopefully they'll
have to Port A couple more um neuronet
have to Port A couple more um neuronet
layers before we can do that part of
it unfortunately the consequence of not
it unfortunately the consequence of not
writing research code is that people
writing research code is that people
don't like you uh and they don't let you
don't like you uh and they don't let you
publish stuff at
publish stuff at
conferences no good code
conferences no good code
allowed what are your thoughts on the
allowed what are your thoughts on the
company key I think I've heard of them
Ken whose company was
Ken whose company was
this oh yeah this is carac thing
this oh yeah this is carac thing
right I mean karmac is good
right I don't know what they're
right I don't know what they're
doing like I don't know what they're
doing like I don't know what they're
doing I haven't seen like anything from
them Kean AG
them Kean AG
gu yeah no effort I mean they're
gu yeah no effort I mean they're
speaking my language there but I haven't
speaking my language there but I haven't
seen anything on them
right
right
yeah I will tell you right
yeah I will tell you right
now like could I go raise 20 million if
now like could I go raise 20 million if
I wanted to if I like got a couple of my
I wanted to if I like got a couple of my
buddies involved
buddies involved
yeah um but frankly like I don't want to
yeah um but frankly like I don't want to
go this
route at least what I'm doing at the
route at least what I'm doing at the
moment I'm trying to just like bootstrap
moment I'm trying to just like bootstrap
this thing and get some Revenue um The
this thing and get some Revenue um The
Hope is that we're going to have zero
Hope is that we're going to have zero
investor obligations so we're basically
investor obligations so we're basically
just going to be able to do whatever and
just going to be able to do whatever and
just keep releasing cool technology
just keep releasing cool technology
without any pressures to do other
stuff we'll see how that goes but hey
stuff we'll see how that goes but hey
with the new video puffer is officially
with the new video puffer is officially
open for business right
open for business right
so doesn't take much if we just get a
so doesn't take much if we just get a
few clients over the next several months
few clients over the next several months
then we'll be able to just solo uh like
then we'll be able to just solo uh like
slow roll this
thing no talk is cheap got a code
speaking of which um I am currently
speaking of which um I am currently
being stumped by the incredibly simple
being stumped by the incredibly simple
problem of not knowing how to Y to
problem of not knowing how to Y to
load what is this a yaml
load what is this a yaml
file there are a few different files
file there are a few different files
here that I don't know how to
here that I don't know how to
load well at least not I don't know how
load well at least not I don't know how
to load easily
so this one is easy right this pathing
so this one is easy right this pathing
c.
c.
numpy I can save this one as a
binary this data.
file I can either I could hard code all
file I can either I could hard code all
of this technically right
I don't think I want to write a yaml
I don't think I want to write a yaml
loader is the main
loader is the main
thing right that's
thing right that's
like I don't want to have to do that let
like I don't want to have to do that let
me just make sure I'm not being stupid
me just make sure I'm not being stupid
here if there's an obvious thing chat
here if there's an obvious thing chat
jippy says then I'll do that but I don't
jippy says then I'll do that but I don't
think that there
is for
Li
yaml I mean honestly doing
yaml I mean honestly doing
um this amount of
file.io is not going to be that wouldn't
file.io is not going to be that wouldn't
be fun either
serialized binary
format okay so there is not anything
here these are all dumb so I think what
here these are all dumb so I think what
we're going to
do this DOTA map is flat data so I can
do this DOTA map is flat data so I can
just like
just like
I can just write this out to a flat
I can just write this out to a flat
array um and then load that into C same
array um and then load that into C same
thing for this pathing cache in fact
thing for this pathing cache in fact
this is going to get ported to C anyways
this is going to get ported to C anyways
probably so that's not a
probably so that's not a
problem and then this data. yaml file
problem and then this data. yaml file
this just has like spawn positions and
this just has like spawn positions and
stuff so I think I'll just hardcode
stuff so I think I'll just hardcode
these things as static arrays I mean
these things as static arrays I mean
they're just constants anyways right why
they're just constants anyways right why
do we need to have file IO it's like one
do we need to have file IO it's like one
game this isn't a config there's no
game this isn't a config there's no
reason not to just have this all be
reason not to just have this all be
static so I think that if we do
static so I think that if we do
that like there will be marginally more
that like there will be marginally more
code just from me pasting in some
code just from me pasting in some
data but it'll actually get a little bit
data but it'll actually get a little bit
simpler and we will um we'll drop the
simpler and we will um we'll drop the
yaml dependency and we'll be able to
yaml dependency and we'll be able to
make the environment in Native
make the environment in Native
sea so I'm going to use the restroom
sea so I'm going to use the restroom
real quick real real quick and then we
real quick real real quick and then we
will uh we'll go do that be right
back
e e
I don't know why I didn't think of this
I don't know why I didn't think of this
earlier to be honest cuz I have a whole
earlier to be honest cuz I have a whole
bunch of different data structures that
bunch of different data structures that
are all just being read from a dumb yel
are all just being read from a dumb yel
like I can just hardcode the data
like I can just hardcode the data
structure to be static and have a way
structure to be static and have a way
easier time of it
easier time of it
right like these way points we don't use
right like these way points we don't use
them anywhere in the
python Okay so
python Okay so
I guess this just goes over
I guess this just goes over
here uh data yl I mean the one obnoxious
here uh data yl I mean the one obnoxious
thing is we have to redo the formatting
thing is we have to redo the formatting
of
of
this uh if the data changes but it
this uh if the data changes but it
probably won't change and even if it
probably won't change and even if it
does like we'll just write a little
does like we'll just write a little
script
right yeah
way
points four
points four
five six
I'm trying to think if I should actually
I'm trying to think if I should actually
just take the pre-processing script that
just take the pre-processing script that
I have now that writes to
I have now that writes to
yaml and just make it like output in no
yaml and just make it like output in no
format
um I should just make it output in a
um I should just make it output in a
format that will be loadable from C
format that will be loadable from C
right or like close to it
that's a lot of manual processing to do
that's a lot of manual processing to do
right and I don't trust GPT to not screw
right and I don't trust GPT to not screw
up and like hallucinate stuff with
up and like hallucinate stuff with
this yeah that's like too much to do
this yeah that's like too much to do
manually if there's any possibility that
manually if there's any possibility that
it could
change maybe not
change maybe not
maybe
maybe
not let me go look at the variables that
not let me go look at the variables that
we have to load this
into action
into action
map I mean
it's I mean it's this little bit of
it's I mean it's this little bit of
logic here right we have like Camp data
logic here right we have like Camp data
Tower data
okay so it will just autocomplete for me
okay so it will just autocomplete for me
but the question is whether it'll auto
but the question is whether it'll auto
complete
complete
correctly um so I'm going to have to
correctly um so I'm going to have to
check
that I can just start deleting
that I can just start deleting
stuff as I check it right so yeah we'll
stuff as I check it right so yeah we'll
do we'll do this so we'll just use GPT
do we'll do this so we'll just use GPT
or I guess this is super Maven as a like
or I guess this is super Maven as a like
a soft formatter and we'll just manually
a soft formatter and we'll just manually
check to make sure it hasn't
check to make sure it hasn't
hallucinated
hallucinated
anything that's probably fine
anything that's probably fine
right
four yeah this will be pretty
quick
quick
n
two uh
73 this actually has not hallucinated
73 this actually has not hallucinated
anything at all so
anything at all so
far which is quite nice
man we should have um overlays and stuff
man we should have um overlays and stuff
in order to check to be sure that like
in order to check to be sure that like
the positions look like they're
the positions look like they're
reasonable anyways this is just me being
reasonable anyways this is just me being
paranoid
paranoid
about language models
hallucinating I'd be kind of surprised
hallucinating I'd be kind of surprised
though if it's actually like
just straight up like doing this
just straight up like doing this
correctly from the model itself is it
correctly from the model itself is it
not like writing a little script does it
not like writing a little script does it
have like a copy routine or something
have like a copy routine or something
probably has like some function calling
thing okay so that's the neutrals
thing okay so that's the neutrals
actually done that's pretty
nice uh and now we can
do I have to do the towers in the right
do I have to do the towers in the right
order now is the hard
order now is the hard
thing I'm pretty sure that I
did let me
see idx Tower data and enumerate
Towers wait a second it says that I just
Towers wait a second it says that I just
go through them in order doesn't
it oh yeah I just go through them in
it oh yeah I just go through them in
order because um they also have the tier
order because um they also have the tier
on them so let's just do
that Tower
that Tower
X Tower
X Tower
y so we have damage health
y so we have damage health
uh
uh
tier we need Tower team as
well team
well team
tier so we just have like this garbage
tier so we just have like this garbage
at the top which is totally
fine so and then we'll just make sure
fine so and then we'll just make sure
that it uh it didn't
that it uh it didn't
hallucinate which is pretty quick
actually
damage5
damage5
wait okay here it actually did
hallucinate look at the the
hallucinate look at the the
team team
team team
zero team one you can see it
zero team one you can see it
hallucinated
hallucinated
here it did it uh opposite it's supposed
here it did it uh opposite it's supposed
to
to
be open-ended
be open-ended
mess of course I've looked into Ken
mess of course I've looked into Ken
Stanley's work I've spoken with him
Stanley's work I've spoken with him
several
several
times most of the open-ended people are
times most of the open-ended people are
at open air I don't think so no they
at open air I don't think so no they
went they were at Uber and then they
went they were at Uber and then they
went to open Ai and then they left so I
went to open Ai and then they left so I
spoke with Jeff cloon and Ken Stanley
spoke with Jeff cloon and Ken Stanley
when they were at Uber they were in like
when they were at Uber they were in like
this random group that for some reason
this random group that for some reason
Uber was funding a bunch of cool work
Uber was funding a bunch of cool work
and then that team I think it's just
and then that team I think it's just
that team got canned or whatever they
that team got canned or whatever they
just stopped doing that and then uh they
just stopped doing that and then uh they
went to open AI for like a year and
went to open AI for like a year and
change and then Jeff started a
change and then Jeff started a
professorship uh I have a collab with
professorship uh I have a collab with
one of his students now and then Ken
one of his students now and then Ken
went to do he did that
went to do he did that
startup um what's the social media thing
startup um what's the social media thing
he did like a a social media thing uh
he did like a a social media thing uh
and I don't know what he's been doing
since open-ended mess yeah welcome back
since open-ended mess yeah welcome back
thank you you could use a CSV for the
thank you you could use a CSV for the
data yeah you're totally right that I
could I forgot that yeah there's like
could I forgot that yeah there's like
the dumb pound include CSV trick
okay that would probably be a better
okay that would probably be a better
idea
right Maven yeah that one
yeah I already I have the data in a
yeah I already I have the data in a
weird format to begin with which is
weird format to begin with which is
somewhat obnoxious yeah so this thing is
somewhat obnoxious yeah so this thing is
just freaking hallucinating completely
just freaking hallucinating completely
isn't
it look at that it can't even get the
it look at that it can't even get the
team
team
right well that's
right well that's
obnoxious I wonder why that happens it
obnoxious I wonder why that happens it
has the team so clearly there and it
has the team so clearly there and it
looks like it's doing like three
looks like it's doing like three
three three
two oh it's just completely
two oh it's just completely
hallucinating now yeah yeah I don't
hallucinating now yeah yeah I don't
trust this at
trust this at
all okay maybe I should actually do
all okay maybe I should actually do
this but wait how do I have multiple
this but wait how do I have multiple
entries as a CSV and then save that
entries as a CSV and then save that
correctly
that's pretty
that's pretty
Universal if you want to load it into
Universal if you want to load it into
any language easily
um I mean I have it as a yaml at the
um I mean I have it as a yaml at the
moment I just don't want to have to have
moment I just don't want to have to have
a yaml loader and
a yaml loader and
see it's just in D it's in an annoying
see it's just in D it's in an annoying
format at the
moment well yam was selected because it
moment well yam was selected because it
was plenty easy when I was loading it
was plenty easy when I was loading it
from Python and passing the data to C
from Python and passing the data to C
but in order for this to run in C
but in order for this to run in C
Standalone right then I would have to
Standalone right then I would have to
have a yaml parser and I don't want to
have a yaml parser and I don't want to
do yaml parsing in
do yaml parsing in
C which is why I was just going to
C which is why I was just going to
hardcode the data at the top which to be
hardcode the data at the top which to be
fair I should probably just keep doing
fair I should probably just keep doing
this and just double check it because
this and just double check it because
this won't take very long
dude like this thing needs to
dude like this thing needs to
stop like why does it have why does it
stop like why does it have why does it
think that there three teams in Dota
think that there three teams in Dota
come
on here we'll just we'll do this portion
on here we'll just we'll do this portion
manually is what we'll do power health
manually is what we'll do power health
Team and then we'll do float power tier
Team and then we'll do float power tier
okay so now we'll see look damage is
okay so now we'll see look damage is
correct health is correct team we'll put
correct health is correct team we'll put
this zero right
this zero right
then tier is going to be
then tier is going to be
three and then we'll delete these two we
three and then we'll delete these two we
see that X is correct I think it'll get
see that X is correct I think it'll get
the X and y's correct for the most part
the X and y's correct for the most part
and then
and then
damage wait did it screw up damage as
damage wait did it screw up damage as
well how did it do
that what the hell it just completely
that what the hell it just completely
messed up didn't it
okay well I guess we're doing a lot of
okay well I guess we're doing a lot of
it manually
image going to be
image going to be
zero
three and then this 29 this is
three and then this 29 this is
correct
correct I'll just I'll just quickly
correct I'll just I'll just quickly
finish this yeah there's no point like
finish this yeah there's no point like
thinking about how to do it better it's
thinking about how to do it better it's
just just you know write it quick and be
just just you know write it quick and be
done
we'll just speedrun the boring uh data
we'll just speedrun the boring uh data
munching format
thing if you think about it this is
thing if you think about it this is
still ultimately not that bad because
still ultimately not that bad because
like this is unlikely to have to
like this is unlikely to have to
change and if it is we'll like we'll
change and if it is we'll like we'll
write a script when we have to change it
write a script when we have to change it
not
before and uh this gets rid of like the
before and uh this gets rid of like the
whole file processing
whole file processing
[ __ ] thing right so it's just less
[ __ ] thing right so it's just less
code to
maintain okay now we're on tier
maintain okay now we're on tier
twos we
get are the X and y's not even
correct yeah okay if it's going to get
correct yeah okay if it's going to get
the X and y's wrong we have to write a
the X and y's wrong we have to write a
script I'm going to mess this up if I
script I'm going to mess this up if I
have to to copy and paste like this
have to to copy and paste like this
many damn
many damn
it ah fine we'll write the script
it ah fine we'll write the script
through
it we'll just write the script
yes
yes
V where is it data
V where is it data
map
map
okay save data of
okay save data of
towers data path
corners and then save
data I need to like
I need to Fork this
I need to Fork this
repo and move my changes into it don't
I M
processing yeah this one
let Fork
this welcome YouTube
folks so what this is uh what are your
folks so what this is uh what are your
thoughts on Chet's Arc challenge is it
thoughts on Chet's Arc challenge is it
interesting for
you I
mean I don't know
it's kind of like a weird problem
it's kind of like a weird problem
structure I mean I think it's an
structure I mean I think it's an
interesting
interesting
work I don't know if it's I find it the
work I don't know if it's I find it the
most compelling thing it's interesting
most compelling thing it's interesting
for
sure it's like a p it's like a zero shot
sure it's like a p it's like a zero shot
pattern recognition thing
it's not an our it doesn't fit nicely as
it's not an our it doesn't fit nicely as
an RL problem though I'll tell you that
much being good-hearted yeah totally
much being good-hearted yeah totally
that's what they do these days though
that's what they do these days though
right I mean like think about it you got
right I mean like think about it you got
all these [ __ ] that are like just
all these [ __ ] that are like just
trying to post the highest score on all
trying to post the highest score on all
these llm benchmarks so that like their
these llm benchmarks so that like their
thing is the best and like they're
thing is the best and like they're
completely overfitting and over
completely overfitting and over
optimizing to it the same thing happened
optimizing to it the same thing happened
with Atari and reinforcement
learning like researchers are not always
honest for
okay
why is this thing not
why is this thing not
remembering hold
remembering hold
on this thing should not be asking me
on this thing should not be asking me
for my
password burnt 40K with his weird hm
password burnt 40K with his weird hm
approach
yeah that's
silly I mean I'm generally I'm kind of
silly I mean I'm generally I'm kind of
at a point where like with the stuff
at a point where like with the stuff
that I'm doing and you can kind of
that I'm doing and you can kind of
probably get this from the video that I
probably get this from the video that I
put
put
out
out
um but I'm kind of at a point where I'm
um but I'm kind of at a point where I'm
just like ignoring all the llm stuff
just like ignoring all the llm stuff
ignoring all the mainstream stuff you
ignoring all the mainstream stuff you
know 5050 they're right but if they're
know 5050 they're right but if they're
wrong then you know my work on puffer is
wrong then you know my work on puffer is
just going to change everything so so
just going to change everything so so
I'm like just ignoring all the stuff
I'm like just ignoring all the stuff
that's coming out it has like so much
that's coming out it has like so much
money behind of it a lot of it is
money behind of it a lot of it is
smoking mirrors though and I'm just like
smoking mirrors though and I'm just like
doing the work on the RL side and that's
doing the work on the RL side and that's
I think that's the way
forward I don't know why this thing
forward I don't know why this thing
wasn't enabled
I saw the thing on
I saw the thing on
um I saw the thing posted where
um I saw the thing posted where
somebody's like well actually an llm
somebody's like well actually an llm
just does it I didn't know that they
just does it I didn't know that they
spent 40K I assume that they like
spent 40K I assume that they like
tinkered with it a whole bunch though
I still think that the challenge itself
I still think that the challenge itself
is like it's like a reasonable thing to
is like it's like a reasonable thing to
ask but like you know people don't
ask but like you know people don't
engage honestly with stuff like that
can I not just write the whole
file is this dumb is there like easy way
file is this dumb is there like easy way
to do
this if there's not like an aound
this if there's not like an aound
include then I am just going to do the
include then I am just going to do the
data processing manually
oh jeez no we're not doing
this I'm they're like a
trick use an llm
trick use an llm
samples
it python
interpreter yeah so like congratulations
interpreter yeah so like congratulations
you prove that researchers are smart
you prove that researchers are smart
right like congratulations you prove
right like congratulations you prove
that you are smart not that LM can do
anything yeah okay this is really gross
anything yeah okay this is really gross
so I think what we're going to do is
so I think what we're going to do is
we're just going to get this to Output a
we're just going to get this to Output a
yaml we're going to get this to just
yaml we're going to get this to just
output a yaml with ar
output a yaml with ar
rays and then we'll just copy paste that
rays and then we'll just copy paste that
data in
and
then CSV for every entry you'd
have yeah I'm still going to have to
have yeah I'm still going to have to
like load that though like it's not just
like load that though like it's not just
one field where I can just pound include
one field where I can just pound include
it I think that the easier thing is just
it I think that the easier thing is just
going to be to like make a script that
going to be to like make a script that
spits out the data as a bunch of flat
spits out the data as a bunch of flat
arrays so I know I'm not going to get
arrays so I know I'm not going to get
the numbers wrong and then just paste
the numbers wrong and then just paste
that into the file
right like this is not a config right
right like this is not a config right
this is static game
data so we'll just do
data so we'll just do
like uh neutral
like uh neutral
Camp
X neutral Camp
y we don't care whose team this is on I
y we don't care whose team this is on I
don't think I saved this data and
Powers right so I understand what you're
Powers right so I understand what you're
saying there yeah there's absolutely a
saying there yeah there's absolutely a
way to do it but like
you see that I still have to load it and
you see that I still have to load it and
I have to not screw up loading it right
I have to not screw up loading it right
and like if I make any subtle errors and
and like if I make any subtle errors and
loading the data I'm going to be
loading the data I'm going to be
debugging the stuff for hours because
debugging the stuff for hours because
it's like I'm going to have to figure
it's like I'm going to have to figure
out how it's like somehow making the
out how it's like somehow making the
game settings
game settings
wrong um it seems like the easiest and
wrong um it seems like the easiest and
least error prone thing to do is to just
least error prone thing to do is to just
like write a script that writes all this
like write a script that writes all this
data flat to a file open the file make
data flat to a file open the file make
sure that it looks good
sure that it looks good
and then just paste the arrays in as
and then just paste the arrays in as
static arrays and C
right like it's fine if it looks
dumb it's allow you're allowed to look
dumb it's allow you're allowed to look
dumb
right oh
right oh
y
okay and then we have way points
okay now this one is a little bit
okay now this one is a little bit
trickier because this is a 2d array I
trickier because this is a 2d array I
believe
I think then we just have to
do what's the C multi-m array inax does
do what's the C multi-m array inax does
it matter
we'll figure this portion
out this is actually going to make it
out this is actually going to make it
easier if you think about it because I
easier if you think about it because I
literally just have to do like this it's
literally just have to do like this it's
flat
flat
right
right
oops uh we don't save the do we save the
oops uh we don't save the do we save the
team do we use the team for
team do we use the team for
anything I think so I think we can just
anything I think so I think we can just
do this
yeah look how easy that
yeah look how easy that
is you literally just
is you literally just
depend all the different fields
and
then half corner
what's the thing called Waypoint spawn
X okay why is this
X okay why is this
erroring oh it's save data
erroring oh it's save data
of okay
and then these way points
and then these way points
here uh might be
reasonable as
reasonable as
is except I think that it has to not be
is except I think that it has to not be
a
a
dictionary so I don't know about this I
dictionary so I don't know about this I
think it's path toward do
think it's path toward do
append X and Y I think it's like
this where's this PVP
refab oh it's supposed to be exit here I
refab oh it's supposed to be exit here I
forgot the
forgot the
exit we don't need this
exit we don't need this
stuff yeah this
runs okay so now this is saved to yaml
runs okay so now this is saved to yaml
but we don't want yaml we want
but we don't want yaml we want
um like some type of CSV I
um like some type of CSV I
assume Tower X yeah like this
assume Tower X yeah like this
is this is
is this is
ridiculous pretty clear opening I
ridiculous pretty clear opening I
trained on
trained on
Arc good for the intuition
Arc good for the intuition
search bunch of prompting self
search bunch of prompting self
[Music]
verication yeah I mean it's
I don't even really know what to think
I don't even really know what to think
about the language model stuff these
about the language model stuff these
days
days
um like Ken lm's reason depends entirely
um like Ken lm's reason depends entirely
on how you define reason right it's a
on how you define reason right it's a
definitions
game Zero
Performance only generalized to constant
Performance only generalized to constant
instances
instances
that's
that's
funny yeah there's clearly there's
funny yeah there's clearly there's
something screwy I will say this
something screwy I will say this
right I think it's very unlikely that
right I think it's very unlikely that
all of AI is just going to be solved in
all of AI is just going to be solved in
hallucination where like it's just
hallucination where like it's just
thinking to itself and eventually it
thinking to itself and eventually it
just spits out the right answers to
just spits out the right answers to
everything I think it's way more likely
everything I think it's way more likely
that you're going to need some form of
that you're going to need some form of
grounding whether it's writing programs
grounding whether it's writing programs
and calling them or whether it's like
and calling them or whether it's like
through interaction with with a fixed
through interaction with with a fixed
simulator that gives you fixed results
simulator that gives you fixed results
it's basically the same thing um but the
it's basically the same thing um but the
grounding in like a fixed environment is
grounding in like a fixed environment is
the thing that I think is important with
the thing that I think is important with
RL like all the RL algorithms could get
RL like all the RL algorithms could get
replaced tomorrow and I wouldn't care
replaced tomorrow and I wouldn't care
right it's I care about the fixed data
right it's I care about the fixed data
from simulators and being able to train
from simulators and being able to train
quickly on just massive massive amounts
quickly on just massive massive amounts
of simulated data
CSV works better if you use the string
CSV works better if you use the string
type from C++ you're looking for c not C
type from C++ you're looking for c not C
yes so this is going in C
yes so this is going in C
um I think we basically have it on hly
um I think we basically have it on hly
this is just has to be
this is just has to be
process. zsv or whatever uh and
then how why does it have this these
then how why does it have this these
headers can I not just like write
headers can I not just like write
stuff TR to do Json
stuff TR to do Json
instead maybe Json
let's try this I think that this
let's try this I think that this
probably gives me the format I want
right yeah so this looks disgusting but
right yeah so this looks disgusting but
this is it right cuz I can just paste
this is it right cuz I can just paste
this in change the brackets around a
this in change the brackets around a
little bit and be
fine now technically what I could
fine now technically what I could
do is I could be a little bit nicer with
do is I could be a little bit nicer with
this and instead of saving it to
this and instead of saving it to
Json um we can just
Json um we can just
[Music]
say process. text
text and then we can just
text and then we can just
do perhaps we're also take talk any file
do perhaps we're also take talk any file
wait sorry you mentioned a
wait sorry you mentioned a
config constant variables that won't
config constant variables that won't
change yes these are constant variables
change yes these are constant variables
that won't change these are things like
that won't change these are things like
you can see right here right this is
you can see right here right this is
like these are the hardcoded uh pathway
like these are the hardcoded uh pathway
points that the AI uses to navigate
points that the AI uses to navigate
around not R AI but like the creep AI
around not R AI but like the creep AI
like the minion and stuff um it has like
like the minion and stuff um it has like
the hardcoded tower positions and things
the hardcoded tower positions and things
like that we have any files for training
like that we have any files for training
experiments and stuff that's not a
experiments and stuff that's not a
problem this is just game
configuration like this is a very very
configuration like this is a very very
easy problem frankly um I had it in yaml
before hey Reno
before hey Reno
yeah no
worries will you YouTube is way behind
worries will you YouTube is way behind
your Twitch can I fix
that what are we at we're at
that what are we at we're at
92 can I fix
this twitch lags twitch should not lag
this twitch lags twitch should not lag
behind
behind
YouTube I think that there is a latency
YouTube I think that there is a latency
setting isn't
setting isn't
there on the
stream
Studio where's this settings
well
that's where's the uh
I if anybody knows where the setting is
I if anybody knows where the setting is
I'll try to fix it from there but I
I'll try to fix it from there but I
don't know if there is one
it's curly braces right for
it's curly braces right for
um lists uh static list and
C okay
yeah let's try
this live stream look for stream
this live stream look for stream
settings tab maybe I can fix that
cuz where's the freaking tab I hate this
cuz where's the freaking tab I hate this
UI it's so
UI it's so
bad early braces yeah D why does it take
bad early braces yeah D why does it take
me back to here I just want to
do oh cool the uh click-through rate is
do oh cool the uh click-through rate is
pretty good well no this actually it's
pretty good well no this actually it's
not it's the view duration is good
not it's the view duration is good
though
though
um where's the freaking live stream so I
um where's the freaking live stream so I
can make this thing not be terrible for
can make this thing not be terrible for
you guys to
watch
watch
content
content
live ah
settings dude this is like the worst UI
settings dude this is like the worst UI
of all time I literally can't find
anything I mean you're seeing how dumb
anything I mean you're seeing how dumb
this is
right help me discover yeah I hope so
right help me discover yeah I hope so
well if anybody knows where this thing
well if anybody knows where this thing
actually is I'll gladly fix it but this
actually is I'll gladly fix it but this
thing's ridiculous and uh this will get
thing's ridiculous and uh this will get
boring very quickly if I'm messing with
boring very quickly if I'm messing with
settings we should be
coding I will say um we do have people
coding I will say um we do have people
that are have never done RL before but
that are have never done RL before but
have you know a competent software
have you know a competent software
background who are making all sorts of
background who are making all sorts of
cool things around puffer um like you
cool things around puffer um like you
can check the Discord
we've got like all sorts of contributors
we've got like all sorts of contributors
doing cool
stuff of course I have to scroll up a
ton this is kyung fixing
carbs where the heck is
this oh yeah this is awesome
this oh yeah this is awesome
this new EnV and then there's also
this new EnV and then there's also
where's the breakout and like the pong
where's the breakout and like the pong
stuff we have like Ultra fast breakout
stuff we have like Ultra fast breakout
in pong in here
somewhere yeah
somewhere yeah
here oops this is a video
here oops this is a video
where's you have to scroll up so much
where's you have to scroll up so much
okay here's pong but runs way like Ultra
okay here's pong but runs way like Ultra
Ultra fast for reinforcement
Ultra fast for reinforcement
learning and then
learning and then
Noah
has Ultra Ultra fast
has Ultra Ultra fast
breakout so you know we're looking for
breakout so you know we're looking for
more Atari games those are a really easy
more Atari games those are a really easy
way to get started is just to like make
way to get started is just to like make
uh one of the original Seven Atari games
uh one of the original Seven Atari games
like DQ and Atari games but Ultra Ultra
like DQ and Atari games but Ultra Ultra
fast um because we're going to try to
fast um because we're going to try to
replace Atari in reinforcement learning
replace Atari in reinforcement learning
and then more complex environments from
and then more complex environments from
there look at the question about
there look at the question about
breakout yeah I don't I'm pretty sure
breakout yeah I don't I'm pretty sure
that the score is double it's like 800
that the score is double it's like 800
something or whatever cuz you get two
something or whatever cuz you get two
screens of
blocks that I think that's what's uh
blocks that I think that's what's uh
what's going
what's going
on 896 is
on 896 is
Max okay so 8 96 is Max
right how is the score
right how is the score
solved okay fair it solves like the
solved okay fair it solves like the
first screen and not the second
first screen and not the second
screen are you using C not C++ yeah this
screen are you using C not C++ yeah this
is just
is just
c
um I enjoy C I do not enjoy C++ C+ plus
um I enjoy C I do not enjoy C++ C+ plus
is sad time very sad
time okay but look I mean I have it
time okay but look I mean I have it
pretty much here
right for
this is really easy to just paste into C
right this should be all the data I
right this should be all the data I
don't know about the waypoints format
don't know about the waypoints format
but I think that uh overall
I just put this
I just put this
here and that's basically C syntax
here and that's basically C syntax
already so I just get out of this
and there you
go right
and now I'm not I'm just fixing the
and now I'm not I'm just fixing the
headers
headers
essentially um I'm just fixing like the
essentially um I'm just fixing like the
syntax the main thing is I didn't want
syntax the main thing is I didn't want
to have the chance of messing up the
to have the chance of messing up the
data in the
data in the
process of uh of doing this
manually our in Tower
manually our in Tower
team I don't even trust it to refactor
team I don't even trust it to refactor
without messing
up e
and then this one is going to
and then this one is going to
be
float I think it's like this way points
float I think it's like this way points
are 20 to
are 20 to
two right
okay so now this is actually
good and we can get rid of all this
good and we can get rid of all this
garbage which is me pasting a yaml file
garbage which is me pasting a yaml file
into a SE source
file now that's not bad at all right we
file now that's not bad at all right we
have like one screen of data
have like one screen of data
for all the constants that are needed in
for all the constants that are needed in
the game that are just like know way
the game that are just like know way
points and Tower positions and things I
points and Tower positions and things I
think that's not bad at
think that's not bad at
all so now we actually can go back to
all so now we actually can go back to
writing real
logic um because if we look here in the
logic um because if we look here in the
scon there's one thing that I wasn't
scon there's one thing that I wasn't
able to
able to
Port uh that was really messing us
Port uh that was really messing us
up
up
so it's essentially this
so it's essentially this
here this logic uses a bunch of
here this logic uses a bunch of
dictionaries it's only about a screen of
dictionaries it's only about a screen of
it
right
right
but this was what was messing us up so
but this was what was messing us up so
we have after init
we have after init
players there's a lot of player init
players there's a lot of player init
logic
right now we have to just Port this
right now we have to just Port this
logic to
logic to
C using our nice new
data okay so we don't need self. way
points um we already have way points
points um we already have way points
it's a
constant in fact we can
constant in fact we can
do this can be
do this can be
const I'm not stupid C has the const
const I'm not stupid C has the const
keyword right
or is it just
or is it just
C++ yeah it is inane okay been a while I
C++ yeah it is inane okay been a while I
haven't written C in so long it's like
haven't written C in so long it's like
this is the first week in so so so
long I don't really use it that often to
long I don't really use it that often to
be
honest actually good question like when
honest actually good question like when
should
should
I cuz yeah I'm usually at I usually just
I cuz yeah I'm usually at I usually just
have single variables like this and
have single variables like this and
they're just pound
defined technically if these are
defined technically if these are
constant should I put these like all
constant should I put these like all
caps I don't know I don't usually write
caps I don't know I don't usually write
code this way but I mean I can't deny
code this way but I mean I can't deny
right that this is very
right that this is very
effective we'll just leave them as
const const Tower team yeah that's what
const const Tower team yeah that's what
I was
I was
thinking no wait wait wait you're not
thinking no wait wait wait you're not
going to include const in the name are
you there's no
way I can see doing
this it is good practice rce I don't
this it is good practice rce I don't
believe that's good
practiced like that seems like something
practiced like that seems like something
that if you have an LSP should tell
you like it's the only reason that I
you like it's the only reason that I
can't see that
can't see that
immediately how much longer until Schmid
immediately how much longer until Schmid
hoer solves RL I mean according to
hoer solves RL I mean according to
Schmid hoer he solved everything years
Schmid hoer he solved everything years
ago
ago
right to be fair he has a bunch of good
right to be fair he has a bunch of good
ideas
he's a funny
guy can't hate on Schmid
Huber seen variables with the type I num
Huber seen variables with the type I num
of
of
towers if you really need the type and
towers if you really need the type and
you're in a typed language getting LSP
you're in a typed language getting LSP
right
this was considered okay I think that
this was considered okay I think that
the only reason that that's considered
the only reason that that's considered
good to practice I think it's because
good to practice I think it's because
um so I think that that's not it I think
um so I think that that's not it I think
it's that functions will have the type
it's that functions will have the type
in them when there are multiple
in them when there are multiple
different versions of that function
different versions of that function
right like there'll be like an F Max and
right like there'll be like an F Max and
like an IMAX right stuff like that
like an IMAX right stuff like that
because C doesn't have operator
because C doesn't have operator
overloading and even if it did like eh
overloading and even if it did like eh
whatever so you have to have some way of
whatever so you have to have some way of
distinguishing them so I think that
distinguishing them so I think that
that's the convention maybe that got
that's the convention maybe that got
dragged through like different things
dragged through like different things
but really like that's the only reason I
but really like that's the only reason I
can see for doing
can see for doing
that I would sometimes do like you know
that I would sometimes do like you know
like um something [ __ ] in Python but
like um something [ __ ] in Python but
that's because python is not python is
that's because python is not python is
not typed right so like your LSP doesn't
not typed right so like your LSP doesn't
tell you that it's a dick necessarily
that said I'm not using an LSP but
that said I'm not using an LSP but
that's on
me I should probably get one for uh for
C I'm used to python where like it
C I'm used to python where like it
doesn't do all that much
anyways I never see all caps for
anyways I never see all caps for
anything I do see it for for constants
anything I do see it for for constants
oh that's a thing all caps is a that's a
oh that's a thing all caps is a that's a
thing for
constants that's totally a thing for
constants that's totally a thing for
constants like you can see my pound
constants like you can see my pound
defines up here right so yeah it makes
defines up here right so yeah it makes
sense to have them this way
yeah yeah yeah yeah I
see yeah Max num yeah yeah yeah yeah
see yeah Max num yeah yeah yeah yeah
okay we're on the same page we're on the
okay we're on the same page we're on the
same page
the heck is this dot
the heck is this dot
size do static arrays have a DOT size
size do static arrays have a DOT size
they don't right this is just joke this
they don't right this is just joke this
is just like it doesn't know what he
is just like it doesn't know what he
talking
about yeah they I don't know why it's
about yeah they I don't know why it's
suggesting this um this is a little bit
suggesting this um this is a little bit
sketchy though
sketchy though
because I think that they are
because I think that they are
technically a different size for
technically a different size for
each I do think that these need to be
each I do think that these need to be
padded
we'll add a two do and we'll remember to
we'll add a two do and we'll remember to
just pad it in the
data so we have Lane
data yeah so this is this actually
data yeah so this is this actually
becomes a lot easier it's
becomes a lot easier it's
just um way
just um way
points oh I see I see how this
points oh I see I see how this
works spawn
Y is there a creep spawn
Y is there a creep spawn
y I think so
what is this debating in the
what is this debating in the
chat y are clowns
got distracted on X it's a mess well
got distracted on X it's a mess well
hopefully my uh my video post isn't
hopefully my uh my video post isn't
let's
let's
see holy [ __ ] okay uh yeah we're at 80
see holy [ __ ] okay uh yeah we're at 80
that's nice
how do I find your video it's on it's on
how do I find your video it's on it's on
this
channel very
channel very
nice uh do we
nice uh do we
have have we
have have we
gotten a few new
gotten a few new
followers nothing crazy yet we'll see
followers nothing crazy yet we'll see
how this continues to do though I hope
how this continues to do though I hope
it does
it does
well I'm not seeing like the crazy
well I'm not seeing like the crazy
growth that I would need to like match
growth that I would need to like match
my thesis or anything
but this is
but this is
at 92 views so
far yeah we'll
far yeah we'll
see I think it needs good watch time to
see I think it needs good watch time to
get into the algorithm is the main
get into the algorithm is the main
thing it doesn't say you're streaming on
thing it doesn't say you're streaming on
X it's sometimes will show it in the on
X it's sometimes will show it in the on
the sidebar their UI really isn't great
the sidebar their UI really isn't great
to show streams that's why I just stream
to show streams that's why I just stream
on all the different platforms
on all the different platforms
right the X streams do get views like I
right the X streams do get views like I
can see right now that I have 272
can see right now that I have 272
Impressions on X you can't see
Impressions on X you can't see
concurrent titles but yeah I do get I
concurrent titles but yeah I do get I
basically will get a few hundred views
basically will get a few hundred views
slash Impressions on each YouTube and
x and going to watch latest video plan
x and going to watch latest video plan
do tonight yeah let me know what you
do tonight yeah let me know what you
think I'll be on um probably again
think I'll be on um probably again
tomorrow I've got to get on stream
tomorrow I've got to get on stream
earlier but I've been just like I've
earlier but I've been just like I've
been waking up at 8 instead of 6 and
been waking up at 8 instead of 6 and
then I've just been like really slow
then I've just been like really slow
about my exercise so I just take forever
about my exercise so I just take forever
so I'm usually not on until 1 um I got
so I'm usually not on until 1 um I got
to figure out how to streamline that but
to figure out how to streamline that but
I don't know since I did the 50k I've
I don't know since I did the 50k I've
just been like my body has just been so
just been like my body has just been so
so beat up that like even going for a
so beat up that like even going for a
light 5K run is hard and then like I got
light 5K run is hard and then like I got
to recover enough from that to to go do
to recover enough from that to to go do
my lifting right it's just it's a whole
ordeal like seriously I did like a slow
ordeal like seriously I did like a slow
5K today and I was just
5K today and I was just
exhausted I guess I ran 10 yesterday but
exhausted I guess I ran 10 yesterday but
still I should be
still I should be
recovered if I done that like before the
recovered if I done that like before the
50k that would have been easy
okay so I think that what we need is we
okay so I think that what we need is we
need to
need to
have
have
Waypoint
spawn tough time with work and
spawn tough time with work and
exercise yeah the exercise is real
exercise yeah the exercise is real
important though and it's real important
let me see I think there's something
let me see I think there's something
weird
here yeah I mean it only gets harder as
here yeah I mean it only gets harder as
you get older like it's the the best
you get older like it's the the best
time to start is yesterday right the
time to start is yesterday right the
second best time to start is
second best time to start is
today like taking this stuff
today like taking this stuff
seriously I will I don't regret doing
seriously I will I don't regret doing
the 50k because it was like such a good
the 50k because it was like such a good
Milestone but I will say that I'm
Milestone but I will say that I'm
probably not going to be doing those
probably not going to be doing those
distances much um I the thing is I
distances much um I the thing is I
thought it's like it's only a few more
thought it's like it's only a few more
miles than a marathon and I've recovered
miles than a marathon and I've recovered
like perfectly fine in just a couple
like perfectly fine in just a couple
days from my marathons but the thing I
days from my marathons but the thing I
didn't realize is that the course was so
didn't realize is that the course was so
much harder that I was out there for
much harder that I was out there for
essentially another two and a half hours
essentially another two and a half hours
um so I was out for seven and a half
um so I was out for seven and a half
hours and I just like shredded like my
hours and I just like shredded like my
whole cardio system my body like
whole cardio system my body like
everything from that so I'll get it I'll
everything from that so I'll get it I'll
get back in shape but it's disappointing
get back in shape but it's disappointing
to like do a hard race and be in worse
to like do a hard race and be in worse
shape after finishing it
shape after finishing it
right yeah yeah I mean I did the
right yeah yeah I mean I did the
distance I have an article on my ex
distance I have an article on my ex
about it too like the training and stuff
about it too like the training and stuff
for
for
it I would not recommend that though I
it I would not recommend that though I
think like running like a flat Marathon
think like running like a flat Marathon
pretty easy to recover from that hard
pretty easy to recover from that hard
hard event but easy to recover from uh
hard event but easy to recover from uh
the beyond that it gets a little silly
the beyond that it gets a little silly
you need to recover it's been like a
you need to recover it's been like a
month
month
bet started running lost 16 pounds
bet started running lost 16 pounds
that's
solid some people don't do anything well
solid some people don't do anything well
I didn't do much for a week and but it's
I didn't do much for a week and but it's
been like a month and like I've been
been like a month and like I've been
trying to get back right so like the
trying to get back right so like the
second week after I did a few 5Ks and
second week after I did a few 5Ks and
like one loop around the dish and then
like one loop around the dish and then
the last week I did like a 5k Every Day
the last week I did like a 5k Every Day
and then two loops around the dish but
and then two loops around the dish but
it's still
hard body needs to be recovered now body
hard body needs to be recovered now body
is being too
weak as simple as that a body is being
weak as simple as that a body is being
too weak it's like all right you're
too weak it's like all right you're
recovered by now stop
whining can't just will it to happen
whining can't just will it to happen
yeah I
will who says I can't
the [ __ ]
um I'm a little confused as to how this
um I'm a little confused as to how this
works
here NPC DOTA spawner
bad mid
Right Way
points okay so what if we do
this spawner key
this spawner key
and then I
and then I
do save data way
do save data way
points of spawner
key
key
um
equals there do
equals there do
insert
dude there is an insert pause it
element like
this
this
okay and
then and we'll do like this right
oops
Yeah
Yeah
slice list integers what let see save
slice list integers what let see save
data
wait save
data hold
data hold
on oh okay so this has to go I
on oh okay so this has to go I
see so this goes up
see so this goes up
here okay and then this is now way
here okay and then this is now way
points of spawner key do
insert okay and then we do process test.
insert okay and then we do process test.
text okay and now this is very important
text okay and now this is very important
because what this does is if you look at
because what this does is if you look at
these these numbers they make sense
these these numbers they make sense
right and the Hope
right and the Hope
here is that I'm just going to be able
here is that I'm just going to be able
to like paste these
in like
this puffer
this puffer
Li
Li
environments
environments
ocean o
oops okay so now I can paste this right
oops okay so now I can paste this right
to
to
here and I just now
here and I just now
can we can see that there's one extra
can we can see that there's one extra
element before this one which is the
element before this one which is the
spawn
spawn
Zone and I just delete this
and there's my Waypoint set and I no
and there's my Waypoint set and I no
longer need this spawn y spawn X
[ __ ] and so right here where it's
[ __ ] and so right here where it's
putting the spawn I don't need this so I
putting the spawn I don't need this so I
can just save all of this garbage here
can just save all of this garbage here
uh Lane data doesn't matter either
uh Lane data doesn't matter either
and actually if I'm looking at this here
and actually if I'm looking at this here
right all of this logic is just to
right all of this logic is just to
load uh load into way points and I don't
load uh load into way points and I don't
need
this the one thing that I should have
this the one thing that I should have
done is I should have saved in YX format
done is I should have saved in YX format
not XY format
not XY format
right I should have saved in YX format
right I should have saved in YX format
not XY
not XY
format so let's do that
and we'll uh we'll like clean up some
and we'll uh we'll like clean up some
stuff in the process
here so we want this to be Y and then
X why
X why
because because like we do row column
because because like we do row column
for our
indexing too many
yeah
okay so now this works and now look how
okay so now this works and now look how
nice this is it's not quite C
actually why don't we just make it C
actually why don't we just make it C
that's actually really funny
that's actually really funny
uh I bet we can just make it C
right we still can't put the type the
right we still can't put the type the
type is slightly annoying to get right
type is slightly annoying to get right
yeah row major it doesn't really matter
yeah row major it doesn't really matter
for the the accesses we weren't really
for the the accesses we weren't really
thinking about that we just that's our
thinking about that we just that's our
default and unless there's a reason not
default and unless there's a reason not
to cuz like you you you always access
to cuz like you you you always access
arrays like row call anyways
arrays like row call anyways
right
right
okay and now you can see that this is
okay and now you can see that this is
like almost C it's just missing the type
like almost C it's just missing the type
right so we can literally just uh take
this I wonder if it actually remembers
this I wonder if it actually remembers
oh yeah it totally remembers
oh yeah it totally remembers
so now we have our way points right like
so now we have our way points right like
this oops should probably put it in caps
this oops should probably put it in caps
or whatever
or whatever
but look at
but look at
that so now we have our way points
done uh and now this entire piece of
done uh and now this entire piece of
code right here was to load data from
code right here was to load data from
the waypoints yaml format into the array
the waypoints yaml format into the array
which because now we just have it as an
which because now we just have it as an
array this is redundant so this goes
array this is redundant so this goes
away um and now we do need to load the
away um and now we do need to load the
Tower
data this piece of code right here is
data this piece of code right here is
grow is gross
we made this Tower offset
we made this Tower offset
function uh especially for this
function uh especially for this
reason so this is Tower
reason so this is Tower
offset plus index that's the
offset plus index that's the
PID so that's cleaner we no longer are
PID so that's cleaner we no longer are
hardcoding that stuff and now uh this is
hardcoding that stuff and now uh this is
not DOT this is this is now a
not DOT this is this is now a
pointer of course this cannot be
pointer of course this cannot be
um this is entity Star Tower
um this is entity Star Tower
now so Tower offset of NV plus
now so Tower offset of NV plus
index uh we also have to
index uh we also have to
do enumerate entity data of towers I
do enumerate entity data of towers I
need to know exactly how many Towers
need to know exactly how many Towers
there are now I believe I believe that
there are now I believe I believe that
there are 24
Towers which we actually have right here
Towers which we actually have right here
which is num Towers
we get the index we get the tower we
we get the index we get the tower we
make the PID do this and then Tower grid
make the PID do this and then Tower grid
ID
ID
oops power basic attack cool down
oops power basic attack cool down
power
power
te uh is going to
te uh is going to
be Power Team of Index
be Power Team of Index
right and now I think it gets the idea
right and now I think it gets the idea
here so we get Tower spawn y we get
here so we get Tower spawn y we get
Tower y Tower X
Tower y Tower X
right tower y Tower X Health damage tier
right tower y Tower X Health damage tier
and XP on kill
right so that's it for this we've just
right so that's it for this we've just
ported all this stuff and it's actually
ported all this stuff and it's actually
shorter in the C which is very
shorter in the C which is very
nice this is a redundant comment and
nice this is a redundant comment and
this is a redundant index no it's not a
this is a redundant index no it's not a
redundant
redundant
index um but I swear that we have do we
index um but I swear that we have do we
have index defined already
have index defined already
somewhere well I think there's no harm
somewhere well I think there's no harm
by redefining it potentially
by redefining it potentially
right uh we have entity star
right uh we have entity star
neutral
neutral
and O num
and O num
neutrals I think it has to be numb
neutrals I think it has to be numb
neutrals divide by four or whatever
neutrals divide by four or whatever
right so
divide by
four
four
yeah we also forgot the closing
yeah we also forgot the closing
bracket I swear all my errors like
bracket I swear all my errors like
people complain about Whit space and
people complain about Whit space and
python all of my errors are always
python all of my errors are always
missing semicolons and brackets I would
missing semicolons and brackets I would
love see with white space and no
love see with white space and no
semicolons which is basically scyon
semicolons which is basically scyon
except that you know it's still there's
except that you know it's still there's
some
issues unless you're giving each entity
issues unless you're giving each entity
you'll have
you'll have
two wait unless you're giving each
entity isn't this where I'm incrementing
entity isn't this where I'm incrementing
it right here
I'm
confused uh I you see that there's
confused uh I you see that there's
there's this offset function here
there's this offset function here
right right and I believe this is needs
right right and I believe this is needs
to
be this is in
be this is in
PID
PID
PID multiple entities
index
index
uh so we are specifically instead of
uh so we are specifically instead of
doing that um I'm specifically indexing
doing that um I'm specifically indexing
each block of the array with different
each block of the array with different
um with different entities if that makes
um with different entities if that makes
sense technically I could do it the way
sense technically I could do it the way
that you're suggesting it would be the
that you're suggesting it would be the
same
but this is more explicit about which in
but this is more explicit about which in
which entities get which
indices entity
indices entity
type
okay you have the IND plus equal to 1
okay you have the IND plus equal to 1
here I forget that you can do index
Plus+ but that's
Plus+ but that's
reasonable and then we close the
reasonable and then we close the
brackets and we fix this syntax
entity
entity
what no this is this is a global counter
what no this is this is a global counter
right here right we're not assigning the
right here right we're not assigning the
index to The Entity this is just we have
index to The Entity this is just we have
a big block look we have a big block of
a big block look we have a big block of
player IDs here and it's going to be the
player IDs here and it's going to be the
offset of the new neutral Camp block
offset of the new neutral Camp block
which is right here all the neutrals
which is right here all the neutrals
plus the index and then we spawn each
plus the index and then we spawn each
entity one at a time we increment the
entity one at a time we increment the
index by one right down here so this is
index by one right down here so this is
a counter over the total number of
a counter over the total number of
things in this Loop
right unless I'm messing it up
yeah no fair that fair play it's better
yeah no fair that fair play it's better
that you catch bugs than uh than not
right spawn y spawn
right spawn y spawn
x uh so these things are all accounted
x uh so these things are all accounted
for now
for now
right so this is actually all ported
[Music]
oops and then all we have to do here
is
is
build we have to fix some bugs
oops which include
and entity is we fix a few bugs in the
port what's wrong
port what's wrong
here ah you have to give this the
N this is supposed to just be
N this is supposed to just be
PID right
and then 13
and then 13
13 this needs
13 this needs
a okay so now we have a ton
of a ton of warnings so first of all
of a ton of warnings so first of all
these are
floats float float float
and no more
and no more
warnings neutral pit is if that's not
warnings neutral pit is if that's not
missing that's
missing that's
intentional that's intentional because
intentional that's intentional because
the um I'll show
you I would see why you would think
that but the thing is that the towers
that but the thing is that the towers
are going to be spawned immed
are going to be spawned immed
immediately technically I could assign
immediately technically I could assign
them you're right I technically could um
them you're right I technically could um
the reason is that there's a separate
the reason is that there's a separate
spawn function for the neutrals which
spawn function for the neutrals which
does happen at the very start of the
does happen at the very start of the
game so it would work either way but
game so it would work either way but
it's not needed so I will
actually but I'm not going to mess with
actually but I'm not going to mess with
that initially because the pit system's
that initially because the pit system's
a little Jank but look at that we have
a little Jank but look at that we have
we have this thing building now builds
we have this thing building now builds
locally
locally
right
right
and
and
oops and if I open the saoba we're only
oops and if I open the saoba we're only
left with uh 264 lines worth of this
left with uh 264 lines worth of this
garbage um this one right here like
garbage um this one right here like
these are very easy to just hardcode
these are very easy to just hardcode
right this action map and this XP for
right this action map and this XP for
level and then the only other thing so
level and then the only other thing so
we're going we're going to clean this up
we're going we're going to clean this up
and then the only other things that
and then the only other things that
we're going to have to do to have this
we're going to have to do to have this
running in pure native sea is I'm going
running in pure native sea is I'm going
to have to Port the map image to be like
to have to Port the map image to be like
a flat array and I think one other file
a flat array and I think one other file
and then we'll be good
and then we'll be good
there it should be that
easy yeah I'm use a restro real quick
easy yeah I'm use a restro real quick
and then we will uh we'll go handle that
and then we will uh we'll go handle that
and it'll be good right
back
e
e
e
e e
okay oh
okay oh
yeah one of these days we're going to
yeah one of these days we're going to
get this green screen working correctly
get this green screen working correctly
so I actually don't have this like haze
so I actually don't have this like haze
around me today is not the day
though I keep having to redo the angle
though I keep having to redo the angle
on it and like this ring light in my
on it and like this ring light in my
face is real bright
so
bet if I recall
bet if I recall
correctly they're two different
correctly they're two different
performance M and like one of them is
performance M and like one of them is
old and one of them is not that old both
old and one of them is not that old both
of them might need a little bit of
of them might need a little bit of
tinkering
tinkering
but when I was developing the
but when I was developing the
vectorization I basically needed a way
vectorization I basically needed a way
to simulate um a ton of different
to simulate um a ton of different
workloads where like the environment
workloads where like the environment
would have a specific average Step time
would have a specific average Step time
a specific variance in that amount of
a specific variance in that amount of
time
time
taken and then like a specific memory
taken and then like a specific memory
bandwidth overhead so that was meant to
bandwidth overhead so that was meant to
simulate lots of different environment
simulate lots of different environment
workloads for our vectorization
for the folks on YouTube if you haven't
for the folks on YouTube if you haven't
seen the
seen the
um the new video on RL the new RL video
um the new video on RL the new RL video
I posted consider watching it later um I
I posted consider watching it later um I
put a ton a ton of into it and I really
put a ton a ton of into it and I really
don't think that you're going to find
don't think that you're going to find
like a better and more cohesive overview
like a better and more cohesive overview
of the whole state of RL at the moment
of the whole state of RL at the moment
it should really really provide a lot of
it should really really provide a lot of
context about all the work that you're
context about all the work that you're
seeing why stuff is being done where the
seeing why stuff is being done where the
field is going and that side of things
field is going and that side of things
um man if you do you know drop a comment
um man if you do you know drop a comment
or whatever helps with the algorithm I'm
or whatever helps with the algorithm I'm
hoping that I'm hoping it'll get into
hoping that I'm hoping it'll get into
the algorithm like my thesis video did
the algorithm like my thesis video did
we'll see if it does I think that
we'll see if it does I think that
definitely based on the delivery and
definitely based on the delivery and
such of it though I did a better job
so any way to run all the mock
environments the mock environments with
environments the mock environments with
one command if you mean the ocean
one command if you mean the ocean
environments I think there's um an old
environments I think there's um an old
shell script like the old Benchmark
shell script like the old Benchmark
script or whatever that you can
script or whatever that you can
use um all the mock ones I think that
use um all the mock ones I think that
there might be a test or something I've
there might be a test or something I've
been a while since I've looked at it
been a while since I've looked at it
have you seen any content from Welch
Labs what is
this no I haven't seen this before I
this no I haven't seen this before I
don't know what this is
111 okay this thing is slowly getting
111 okay this thing is slowly getting
some
views he discussed his AI I'll check
views he discussed his AI I'll check
that out
yeah the thesis defense video kind of
yeah the thesis defense video kind of
just blew up
just blew up
unexpectedly and then I thought like huh
unexpectedly and then I thought like huh
you know maybe I can replicate the
you know maybe I can replicate the
success of that if I really try to put
success of that if I really try to put
something something good together I
something something good together I
think that at least on the delivery of
think that at least on the delivery of
the new video it's much more polished
the new video it's much more polished
than my
than my
thesis now obviously like there's so
thesis now obviously like there's so
many cool visuals and stuff with neural
many cool visuals and stuff with neural
MMO and it's just such a long amount of
MMO and it's just such a long amount of
work um in one piece of content but I
work um in one piece of content but I
tried we'll see how it does
really the whole point of doing all this
really the whole point of doing all this
right is to just get more people looking
right is to just get more people looking
at
at
puffer using it contributing to it and
puffer using it contributing to it and
so on
that's my main thing
now okay so right here
now okay so right here
um all these things need to
um all these things need to
go into the function
all
now this init function needs to get some
now this init function needs to get some
arguments because we just added a
bunch okay agent creps neutrals Vision
bunch okay agent creps neutrals Vision
range
uh let's do two
lines probably reward distance is going
lines probably reward distance is going
to end up going away
anyways so for the init function we now
anyways so for the init function we now
have have all of the
constants long time no see it that's
constants long time no see it that's
Nishi hey cool to see you
Nishi hey cool to see you
around Pokemon project has really taken
around Pokemon project has really taken
off you should see the uh latest work on
that it's really taking off
uh this width and height here I think we
uh this width and height here I think we
can we can take this
[Music]
H finally made it back into the Discord
H finally made it back into the Discord
badge 7 yeah yeah
badge 7 yeah yeah
it's it's uh crazy progress
in fact I think we'd be farther by now
in fact I think we'd be farther by now
but we've had so many issues with the
but we've had so many issues with the
hardware
you think I'm happy about it I spend 35
you think I'm happy about it I spend 35
Grand on hardware and then Intel
Grand on hardware and then Intel
freaking drops the
ball I'm not happy about
that no they've lost me as a customer
that no they've lost me as a customer
permanently
you mean these that cost more than the
you mean these that cost more than the
entire
box the CPO costs more than an entire
box the CPO costs more than an entire
box
the good news is that like well I'm
the good news is that like well I'm
trying to
trying to
think like technically yeah we could
think like technically yeah we could
probably run Atari real fast on this but
probably run Atari real fast on this but
like we're going to hit other
like we're going to hit other
bottlenecks at some point soon
how many
how many
simulations we need centuries of
simulations we need centuries of
simulations per
day this is the current setup
there's a whole article on what like
there's a whole article on what like
what the hardware
contains it's here and on X but yeah
contains it's here and on X but yeah
it's eight boxes plus like an older
it's eight boxes plus like an older
login node with 490s and 24 core I9
trying to push things forward here I
trying to push things forward here I
really do I really
try we got to get these Maps loaded
right let's get these done
right let's get these done
first for
and we're not trusting this to copy the
and we're not trusting this to copy the
data
data
correctly so we will do it this
way and then we do cons
way and then we do cons
float action map
did it do this
right yeah did this right and what about
right yeah did this right and what about
this
this
one yeah did it right okay
Okay so we've actually already
Okay so we've actually already
simplified quite a bit just by doing
simplified quite a bit just by doing
that and now I think we really need to
that and now I think we really need to
get the um the other files
get the um the other files
right so how am I going to do
this these ones legitimately do need to
this these ones legitimately do need to
be read from file they're too much
data they contain a lot of
data um well let me see there an easy
data um well let me see there an easy
way to load like a
PNG I swear this is going to give me
PNG I swear this is going to give me
some dumb answer but we'll do it for the
some dumb answer but we'll do it for the
memes where's
memes where's
um where's
um where's
jippy I'm going to give me some dumb
answer do I like this no no I do not
answer do I like this no no I do not
like
it I do not like this one bit
it I do not like this one bit
I'm going
I'm going
to
instead let's check what the files are
instead let's check what the files are
from
python well for this one here
python well for this one here
right let's just make like a pre-process
right let's just make like a pre-process
map
script we're allowed to write utility
script we're allowed to write utility
scripts in Python right there's no
scripts in Python right there's no
reason to write this in C
and then what we have to
do we also need to convert the the data
do we also need to convert the the data
in this map
in this map
right uh so where does it do this game
right uh so where does it do this game
map
map
athing
map uh I don't know what the heck this
is still new to AI a lot of newb
is still new to AI a lot of newb
questions chat jippy did not use RL it
questions chat jippy did not use RL it
does instead use dnns
does instead use dnns
like that and like that of alexnet okay
like that and like that of alexnet okay
so there's a lot there um it uses RL
so there's a lot there um it uses RL
kind of it's not the RL that I'm using
kind of it's not the RL that I'm using
here though like maybe the algorithms
here though like maybe the algorithms
are the same but like the application's
are the same but like the application's
totally different
totally different
so if you want to understand if you want
so if you want to understand if you want
to read like three papers to understand
to read like three papers to understand
like the trajectory of modern AI just
like the trajectory of modern AI just
you know what alexnet is you read
you know what alexnet is you read
resnet encode decode
resnet encode decode
lstms and then the Transformer
lstms and then the Transformer
paper that's like a really
paper that's like a really
coarse um
coarse um
overview of how architectures have
overview of how architectures have
evolved and obviously there's been a lot
evolved and obviously there's been a lot
since
since
then and then uh chat jity will use rlf
then and then uh chat jity will use rlf
so it's reinforcement learning from
so it's reinforcement learning from
Human feedback it really doesn't have
Human feedback it really doesn't have
the same characteristics of the problems
the same characteristics of the problems
that we're solving here but that's what
that we're solving here but that's what
it uses after training to align the
it uses after training to align the
model or
model or
whatever res first of all that's the
whatever res first of all that's the
wrong order so you read uh you read
wrong order so you read uh you read
reset
reset
first and then you read uh encode decode
first and then you read uh encode decode
lstms let me find the paper for you
lstms let me find the paper for you
encode decode LST I think I can just
encode decode LST I think I can just
Google it
where the heck is the big
paper is it this
one I don't actually know where the the
one I don't actually know where the the
big paper is on
this here's the Transformer paper
yeah I don't but the thing is I don't
yeah I don't but the thing is I don't
know which one it is I actually don't
know which one it is I actually don't
know what the first one I swear it was
know what the first one I swear it was
Ila's
paper I swear he's on
paper I swear he's on
this oh here to sequence to sequence
this oh here to sequence to sequence
learning with neural networks this
one I'll put this in
chat so that's like your just
chat so that's like your just
architector
introduction yeah no worries I see what
introduction yeah no worries I see what
the stream is actually doing quite well
the stream is actually doing quite well
today so uh welcome
today so uh welcome
everybody what I'm currently doing in
everybody what I'm currently doing in
the background here is working on
the background here is working on
porting this MOBA which I will show
porting this MOBA which I will show
briefly uh this
briefly uh this
thing this runs like a million steps per
thing this runs like a million steps per
second we're making this is a really
second we're making this is a really
cool reinforcement learning environment
cool reinforcement learning environment
I'm currently in the process of porting
I'm currently in the process of porting
it from scon to C so that we can run it
it from scon to C so that we can run it
on the
on the
web it's plenty fast as is but it'll be
web it's plenty fast as is but it'll be
cool to be able to run this on the web
cool to be able to run this on the web
in web
in web
assembly so that's what we're doing at
assembly so that's what we're doing at
the
the
moment um and if you haven't seen the
moment um and if you haven't seen the
video that just went up today I highly
video that just went up today I highly
suggest watching it later it's a project
suggest watching it later it's a project
I've been working on for quite a while
I've been working on for quite a while
um I think it's relatively well produced
um I think it's relatively well produced
you know it's been substantially edited
you know it's been substantially edited
together U but this is right here this
together U but this is right here this
video is freaking sponsored [ __ ]
video is freaking sponsored [ __ ]
hold
hold
on puts videos on my own
on puts videos on my own
ad okay so this video here is 25 minutes
ad okay so this video here is 25 minutes
for an overview of the entire field of
for an overview of the entire field of
reinforcement learning at 10 different
reinforcement learning at 10 different
layers of the infr stack and where I see
layers of the infr stack and where I see
the field going as a whole and what I'm
the field going as a whole and what I'm
trying to do about that with puffer so
trying to do about that with puffer so
this is like the most condensed form of
this is like the most condensed form of
uh most condensed possible place to get
uh most condensed possible place to get
all of this
just came from the video on X hopefully
just came from the video on X hopefully
you liked it I
you liked it I
uh yeah there's I try I'm going to see
uh yeah there's I try I'm going to see
we'll see whether this does like well to
we'll see whether this does like well to
the extent of my thesis but I figured
the extent of my thesis but I figured
I'd give it a
go and also I mean as in the video you
go and also I mean as in the video you
want to help me out for free Star Puffer
want to help me out for free Star Puffer
lib helps me a
lib helps me a
ton hopefully we get a nice spike out of
ton hopefully we get a nice spike out of
uh of growth out of the the video and
uh of growth out of the the video and
also I mean I'm pretty much always just
also I mean I'm pretty much always just
building all this stuff here live so I'm
building all this stuff here live so I'm
pretty much just always building things
pretty much just always building things
here um so you can always just come by
here um so you can always just come by
and chat we have lots of people
and chat we have lots of people
contributing little uh smaller
contributing little uh smaller
environments to puffer lib like these
environments to puffer lib like these
are people that don't have prior RL
are people that don't have prior RL
experience if you know how to write
experience if you know how to write
decent code you can make environments
decent code you can make environments
and make RL work on them at a million
and make RL work on them at a million
step per second with puffer and we'd
step per second with puffer and we'd
love to have the contributions I even
love to have the contributions I even
will help people on stream with how to
will help people on stream with how to
design these things to be ultra high
design these things to be ultra high
perf so if you're interested in that you
perf so if you're interested in that you
let me know otherwise welcome everybody
let me know otherwise welcome everybody
and enjoy the
content like the structure felt easy to
content like the structure felt easy to
watch and I don't know much that was the
watch and I don't know much that was the
hope it was the hope was that you could
hope it was the hope was that you could
at least follow most of it even as an
at least follow most of it even as an
outsider to RL but like the stuff in
outsider to RL but like the stuff in
that video there are many things in that
that video there are many things in that
video that world class RLX experts do
video that world class RLX experts do
not know like I don't think anybody will
not know like I don't think anybody will
see that and not learn
anything I'd be incredibly impressed if
anything I'd be incredibly impressed if
there's like a single person that will
there's like a single person that will
watch that video and genuinely not learn
watch that video and genuinely not learn
anything
anything
useful casually hang out for a bit first
useful casually hang out for a bit first
of
of
course welcome to do
course welcome to do
that still in Holiday mood
fair
enough what's this game map equals
zero figured you wanted
zero figured you wanted
stars for more serious people not really
stars for more serious people not really
I mean like yeah I want I want people to
I mean like yeah I want I want people to
get interested in it but right like I
get interested in it but right like I
want people to be using it but also it's
want people to be using it but also it's
just it's one of the metrics that I
just it's one of the metrics that I
track right I track Twitter followers
track right I track Twitter followers
and I track uh stars on the
and I track uh stars on the
repository like I say in the video like
repository like I say in the video like
puffer's officially open for business
puffer's officially open for business
with this most recent update it's all
with this most recent update it's all
staying free it's all staying open
staying free it's all staying open
source but uh the hope is that we will
source but uh the hope is that we will
find a few companies that are doing
find a few companies that are doing
reinforcement learning that could
reinforcement learning that could
benefit from this Tech and that we'll
benefit from this Tech and that we'll
want some extended support right that'll
want some extended support right that'll
help us out a lot that'll help us to
help us out a lot that'll help us to
build out the cluster and get some more
build out the cluster and get some more
machines and hopefully to sponsor some
machines and hopefully to sponsor some
additional open source work as well I'd
additional open source work as well I'd
really like to be able to start paying
really like to be able to start paying
out bounties on features and bugs and
out bounties on features and bugs and
stuff in puffer and uh yeah it'll be
stuff in puffer and uh yeah it'll be
good to be able to do that off of
good to be able to do that off of
bootstrap
bootstrap
Revenue that's the
goal it's CD test python okay yeah it's
goal it's CD test python okay yeah it's
literally the main test
bet and also frankly like RL is not
bet and also frankly like RL is not
being solved at the moment by serious RL
being solved at the moment by serious RL
people like yeah I need to know all the
people like yeah I need to know all the
stuff to build the infastructure but
stuff to build the infastructure but
like with the way that puffer is going
like with the way that puffer is going
RL is just becoming an engineer ing
RL is just becoming an engineer ing
problem it really is like if we run
problem it really is like if we run
centuries of simulated data per GPU per
centuries of simulated data per GPU per
day we don't have to be smart about
day we don't have to be smart about
things like we just have so much data
things like we just have so much data
that you just you just auto win you
that you just you just auto win you
automate all the experiments right you
automate all the experiments right you
don't have to be smart about what
don't have to be smart about what
experiments to pick if you can run all
experiments to pick if you can run all
of
them Discord ggp puffer yep bet has the
them Discord ggp puffer yep bet has the
rank uh procite of the puffer order in
rank uh procite of the puffer order in
the Discord and this is
the Discord and this is
why appreciate the advertising bet
why appreciate the advertising bet
[Laughter]
proelite of the puffer order Brute Force
proelite of the puffer order Brute Force
pretty much it's incredibly effective
pretty much it's incredibly effective
though why be like you be smart when you
though why be like you be smart when you
need to be smart right if you can be
need to be smart right if you can be
stupid and the problem is still solved
stupid and the problem is still solved
then you can just be
then you can just be
stupid
right appreciate the shoes
right appreciate the shoes
advice
advice
hey I'm not sponsored by Brooks I just
hey I'm not sponsored by Brooks I just
like the shoes
right they're good for running I got to
right they're good for running I got to
get some more pairs I've worn out like
get some more pairs I've worn out like
three pairs of them running in the past
year it's like 500 miles a pair right
year it's like 500 miles a pair right
yeah I'm at like I'm at over a thousand
yeah I'm at like I'm at over a thousand
miles since this calendar
miles since this calendar
year
so and that's not counting walking
so and that's not counting walking
around that's just the runs
where's this game map we're supposed to
where's this game map we're supposed to
actually be writing C
actually be writing C
here GD of game map equals
wall okay so I need
wall okay so I need
to I need to modify the way that this
works going to do that with family see
works going to do that with family see
you around
bet so zero is wall 255 is empty okay
uh where' the file go convert map really
uh where' the file go convert map really
liking the new video thank you it took
liking the new video thank you it took
absolutely forever to make so I hope
absolutely forever to make so I hope
people
people
enjoy could have like two more
enjoy could have like two more
environments built by now time it takes
environments built by now time it takes
me to make one of those
wait
wait
zero I think it's like
zero I think it's like
this but hey it's going to be I think
this but hey it's going to be I think
it's worth it because that's going to be
it's worth it because that's going to be
a resource I can point people to for a
a resource I can point people to for a
very long time right like I don't there
very long time right like I don't there
is nowhere else that you can find like
is nowhere else that you can find like
as condensed of an over
as condensed of an over
I mean it's like an infra focused
I mean it's like an infra focused
perspective it's a very opinionated like
perspective it's a very opinionated like
infra focused perspective on the whole
infra focused perspective on the whole
field and how we push it forward and
field and how we push it forward and
it's a fairly unique one this is not a
it's a fairly unique one this is not a
way I see many people addressing it but
way I see many people addressing it but
from the past few months it's been it's
from the past few months it's been it's
been just tremendously effective doing
been just tremendously effective doing
work this way
and now I have to save this to Binary
and now I have to save this to Binary
right
uh is there like a game map is there
uh is there like a game map is there
like two
like two
bytes this
bytes this
work
work
oh this does work
right but then I need a way that's going
right but then I need a way that's going
to be easy to load as well
yeah I need a way that's going to be
yeah I need a way that's going to be
easy to
easy to
[Music]
load so I don't think I want to do two
load so I don't think I want to do two
bytes
bytes
right I think that I want to just save
right I think that I want to just save
this as a string
uh six wait how is it that big hold
on something went wrong
here 128 by 128 right
oh it is
16k uh is there an easy way
to do L Maybe
uh
list
sequence okay this has to be a list of
sequence okay this has to be a list of
strings uh
strings uh
what the
what the
heck of Str
heck of Str
python I do not like
python I do not like
this not like this one
this not like this one
bit whatever we'll be dumb about it for
bit whatever we'll be dumb about it for
now
there we
go okay
go okay
so now we have the game
map and then with
map and then with
[Music]
[Music]
open game map.
open game map.
text F right
and this should give you the game
map and then the only other thing we'll
map and then the only other thing we'll
have to do is save the uh the
have to do is save the uh the
precomputed map
precomputed map
similarly
right so here we have
this what's it cbfs
yeah so we have C precompute
yeah so we have C precompute
pathing this breath first search was the
pathing this breath first search was the
original implementation this is not
original implementation this is not
getting called because we have C
getting called because we have C
precompute pathing this gets called
here paths equals
where does this get saved to the
file I think that this gets called from
file I think that this gets called from
uh from the main MOBA file
right yeah you can see right
right yeah you can see right
here
um
okay so what we're going to do is we're
okay so what we're going to do is we're
just going to figure out a a very easy
just going to figure out a a very easy
format to save this into is going to be
format to save this into is going to be
just as a string uh luckily they're all
just as a string uh luckily they're all
single digit numbers so we can literally
single digit numbers so we can literally
just load this into an array as a
oneliner so AI paths is going to
oneliner so AI paths is going to
be okay so we get this we compute
pathing and then this is pathing
pathing and then this is pathing
map I believe that we have to do
map I believe that we have to do
something for this right
okay so right
okay so right
here this
here this
is the pathing
is the pathing
map so we actually have to call
this right up here I believe
before we like Ravel and save
it and this is now game
it and this is now game
map we do we save it
map we do we save it
here and
now
now
travel and then I'm a little concerned
travel and then I'm a little concerned
how long this is going to take in python
how long this is going to take in python
this is a huge amount of
this is a huge amount of
data I think this is going to take a
data I think this is going to take a
stupid amount of
stupid amount of
time is there not like an easy way to
time is there not like an easy way to
just do
this You' think that there would be
this You' think that there would be
what are we
what are we
doing I'm just flattening an array and
doing I'm just flattening an array and
saving it all I want to do is flatten an
saving it all I want to do is flatten an
array and save it to a a file as a
array and save it to a a file as a
string but it's like a 260 megabyte
array I don't know if I should be
array I don't know if I should be
worried about that being slow that'll
worried about that being slow that'll
probably be slow
probably be slow
right it's a 128 by 128 by 128 by 128
right it's a 128 by 128 by 128 by 128
array
flatten the map
flatten the map
no literally like we have all the data
no literally like we have all the data
of this giant
of this giant
tensor and like I just want to Ravel it
tensor and like I just want to Ravel it
into a one-dimensional array and save it
into a one-dimensional array and save it
as a string because the idea is that
as a string because the idea is that
like each element of the array is a
like each element of the array is a
number from Zer through eight so it's
number from Zer through eight so it's
one digit so if I just save it as a text
one digit so if I just save it as a text
file then that's really easy to read
file then that's really easy to read
from C right because it's literally like
from C right because it's literally like
position of element in Array is just no
position of element in Array is just no
math on indices it's really easy and I
math on indices it's really easy and I
don't have to do any additional
don't have to do any additional
structured
structured
processing but as you can see
processing but as you can see
here
here
um this is unfathomably
[Music]
[Music]
slow looks like it'll compress
slow looks like it'll compress
nicely well we don't care about that
nicely well we don't care about that
right it's going to get loaded into
right it's going to get loaded into
memory anyway
it only takes like 3 seconds to
it only takes like 3 seconds to
pregenerate the maps as well it's like I
pregenerate the maps as well it's like I
need to just I need a good way to save
need to just I need a good way to save
this is anybody know one it's all I need
this is anybody know one it's all I need
to do is save like the individual
to do is save like the individual
numbers to a
numbers to a
file I guess I could technically do that
file I guess I could technically do that
part in scon as
part in scon as
well um I'd rather not is there no just
well um I'd rather not is there no just
fast way of doing this
I know let's see if jity is dumb as
usual
save
save
well
well
save text every element is a one dig
nicely
nicely
but
but
making it's low
because coming in late do you have an
because coming in late do you have an
array yeah basically
that oh wait there is a save
text there's literally save text
well I think I don't need I think it's
well I think I don't need I think it's
literally there's just a function that
literally there's just a function that
does
it I just didn't know about this
function let's see if it actually works
let me see if this
works
works
and I forget the difference between
and I forget the difference between
flatten and Ravel I think one of them
flatten and Ravel I think one of them
copies and one of them doesn't or
copies and one of them doesn't or
something like
that let's see how the YouTube video is
that let's see how the YouTube video is
doing while
doing while
uh we wait
I like how it tries to give me an ad on
I like how it tries to give me an ad on
my own video every time I uh click it
my own video every time I uh click it
127 in 4
127 in 4
hours could take off could not we'll
hours could take off could not we'll
see comment for
algorithm and X
88 all it's slowing down on X
unfortunately why not numpy save do you
unfortunately why not numpy save do you
need it to be human readable I need it
need it to be human readable I need it
to be C
readable we don't care about the memory
readable we don't care about the memory
260 Megs is only 260 Megs right we
260 Megs is only 260 Megs right we
really just care about it being fast
really just care about it being fast
like this thing is taking too long
like this thing is taking too long
it should only take three seconds to
it should only take three seconds to
generate the
ray is that already how numpy saves the
ray is that already how numpy saves the
data I'm pretty sure that's not how
data I'm pretty sure that's not how
numpy will save the data
normally that'll save it in like some
normally that'll save it in like some
bite form M that I'm going to have to
bite form M that I'm going to have to
interpret
looping through the rows of X and
looping through the rows of X and
formatting each row
individually yeah okay this is slow as
hell yeah this is stupidly stupidly slow
will that actually work hold on
wait you open
wait you open
rb.
right yeah I was going to
say yeah this is binary dude
say yeah this is binary dude
I don't know what I'm supposed to get
I don't know what I'm supposed to get
out of
this actually you're kind of right it
this actually you're kind of right it
should be binary
right but like if I write if I read
right but like if I write if I read
this hold on
but how do I load that from C and make
but how do I load that from C and make
sure that I'm getting the right
sure that I'm getting the right
data is that just going to is it I don't
data is that just going to is it I don't
know if that's adding header or stuff is
know if that's adding header or stuff is
that adding like Header information or
that adding like Header information or
can I literally just read that like one
can I literally just read that like one
bite at a
time it returned 80
here look this is the
here look this is the
script create
from well this doesn't work clearly
right okay let's try your thing
umpai do
save allow pickle
Raa is there a way to do
this two
file I think it is it just2 file
file let's try this
one let's see if this is fast this one
one let's see if this is fast this one
should be
fast you should be able to read until
fast you should be able to read until
end of file and
see well this one actually
ran you can see right here that the
ran you can see right here that the
pathing data is 257
pathing data is 257
Megs so it rote all the
data I guess now we can probably start
data I guess now we can probably start
on the C
we're big on just pasting data into
we're big on just pasting data into
files as you can
see um
hold on if I have to
hold on if I have to
open how fast is C if I have to open
open how fast is C if I have to open
like 200 if I have to do this like 200
like 200 if I have to do this like 200
times per
times per
process is that going to be
process is that going to be
slow how fast can you read 200 Megs of
slow how fast can you read 200 Megs of
data from disk
wait can I just mmap the file is that a
wait can I just mmap the file is that a
thing I can
do technically I should just be able to
do technically I should just be able to
mmap the files
right the byes are just
right the byes are just
there but wait that won't read it into
there but wait that won't read it into
the memory
the memory
right that won't read it in the m memory
right that won't read it in the m memory
that's
bad if I mmap it it won't go to
bad if I mmap it it won't go to
memory but the thing is okay this is bad
memory but the thing is okay this is bad
this is really
bad how frequently so this is the
bad how frequently so this is the
problem
problem
um I I can have like 200 copies of this
um I I can have like 200 copies of this
per
per
core so if I'm making a new view of the
core so if I'm making a new view of the
data every process I'm going to
data every process I'm going to
O which is why was originally passing
O which is why was originally passing
the data from
python so I think that I what I need to
python so I think that I what I need to
do is I need to pass a binary
do is I need to pass a binary
variable
variable
um I need to just pass a binary variable
um I need to just pass a binary variable
which will be used for the python
which will be used for the python
binding because if you want multiple
binding because if you want multiple
copies of this thing then you need to
copies of this thing then you need to
have the pathing data passed to you so
have the pathing data passed to you so
that you don't
that you don't
o yeah that's what it'll be but for now
o yeah that's what it'll be but for now
we can make the we can make the read
we can make the we can make the read
function I
believe uh I don't know how to do IO and
believe uh I don't know how to do IO and
C it's been forever
[Music]
uh interprocess shared memory yeah it's
uh interprocess shared memory yeah it's
well it doesn't need to be interprocess
well it doesn't need to be interprocess
shared memory technically it just needs
shared memory technically it just needs
to be cross environments on same process
dude that's way too much freaking code
dude that's way too much freaking code
for reading a bloody
file I see there's just a bunch of error
file I see there's just a bunch of error
checking
we already have the shared memory like
we already have the shared memory like
video on inner process shared memory
video on inner process shared memory
that's puffer Libs bread and but butter
that's puffer Libs bread and but butter
like you can see we have the best shared
like you can see we have the best shared
memory out there for
RL okay so this is stupid this is giving
RL okay so this is stupid this is giving
us like out of
us like out of
memory
memory
things well actually maybe this isn't
things well actually maybe this isn't
stupid
place it in some Global
buffer does that
work I don't think that that works
work I don't think that that works
because
because
you're
you're
calling you're calling the C
calling you're calling the C
script multiple times from
python I guess technically you could
python I guess technically you could
just write the code at the top
right shouldn't need a lock you're not
right shouldn't need a lock you're not
modifying
anything actually I think you're right I
anything actually I think you're right I
think that if just don't do this in the
think that if just don't do this in the
init
script but wait then you have you still
script but wait then you have you still
have to free the memory at some point
have to free the memory at some point
don't you I don't know how you free the
don't you I don't know how you free the
memory if you do it like that
yeah I think that we're just going to
yeah I think that we're just going to
while I think about it I'm just going to
while I think about it I'm just going to
do this
do this
[Music]
[Music]
and this is one of those I know had the
and this is one of those I know had the
answer in C++ but not C then I don't
answer in C++ but not C then I don't
want the
answer very
simple whoops
I'm not doing I'm not implementing
I'm not doing I'm not implementing
reference counters with that with this
reference counters with that with this
[ __ ] that
what's this this is going to
what's this this is going to
[Music]
[Music]
return
unsigned Car
unsigned Car
Star read file
of file
of file
name watch your video thanks see you
name watch your video thanks see you
around star
array num elements
eror oh you don't even need this size
T sign
see you
see you
around unsigned let's
around unsigned let's
see close
file size
right
