Kind: captions
Language: en
okay we are
live I just posted something ridiculous
live I just posted something ridiculous
that's why I'm a little late
today somebody added the E puff that's
today somebody added the E puff that's
so funny
uh
okay let's
okay let's
uh let's post some stuff with
this and then we'll get started on
dev it'll be fun
let me just I'll do one thing real quick
let me just I'll do one thing real quick
before we start
oh cool
huh this is
huh this is
cool he's back doing Minecraft stuff
cool he's back doing Minecraft stuff
that's
awesome one sec guys this is cool
this looks
cool I want to see what he's doing with
cool I want to see what he's doing with
this real quick and then we'll start Dev
that's so bait that is so bait
[Laughter]
[Laughter]
a okay
yeah I've not engaged with this sty of
yeah I've not engaged with this sty of
programming at
programming at
all h
okay yeah
yes yes
graduate student descent
yep
yep
[Music]
mhm is my desktop audio muted
shouldn't
be what just close captioning
okay I see what he's
okay I see what he's
doing yeah I see what he's doing
okay trying to automate optim
okay trying to automate optim
optimization of
optimization of
prompts for specific tasks
H all okay I'm going to let him finish
H all okay I'm going to let him finish
this guys and then I'm going to start on
this guys and then I'm going to start on
the MOBA
the MOBA
Dev I don't know if it's getting desktop
Dev I don't know if it's getting desktop
audio or
audio or
not but his stream is on x
mhm
huh version is he making get for prompts
huh version is he making get for prompts
I
what yeah you can serialize functions
what yeah you can serialize functions
there no Clos
there no Clos
captioning no Clos captioning is
annoying Mo Dev starts in a minute
annoying Mo Dev starts in a minute
Will's cool though and I want to let him
Will's cool though and I want to let him
go explain this this is cool
I don't know if it's getting desktop
audio we don't hear him okay I'll fix
audio we don't hear him okay I'll fix
that after this I you can click his
that after this I you can click his
stream for now I'll be starting mob Dev
stream for now I'll be starting mob Dev
in one second here anyways
in one second here anyways
and I'll fix that stream element in a
and I'll fix that stream element in a
bit he's on X right now William
Gus okay so what he's doing is he's
Gus okay so what he's doing is he's
building he's building like a functional
building he's building like a functional
ver versioning and functioning
ver versioning and functioning
functionals functionals ah functions and
functionals functionals ah functions and
versioning for prompts to language
versioning for prompts to language
models I got baited by this
though okay it's kind of cool how
though okay it's kind of cool how
quickly he was able to build something
quickly he was able to build something
like this
like this
I will
say
mhm I'm
mhm I'm
here though you have very long
here though you have very long
explanations here well
he's a good salesman he's got very long
he's a good salesman he's got very long
pitches
pitches
though my
gosh hey Noah I'll be on the mob in a
second at least I see what he's building
second at least I see what he's building
I've always been wondering what the heck
I've always been wondering what the heck
Will's up to
Will's up to
so now I
know I'll tell the little story about
know I'll tell the little story about
will as well cuz Will's
will as well cuz Will's
cool in a second
oh he builds computation graphs of
oh he builds computation graphs of
prompts that's
prompts that's
interesting
yeah
yeah
okay so it's like chaining together
okay so it's like chaining together
little
little
pieces of uh of prompts Okay so so he's
pieces of uh of prompts Okay so so he's
doing a lang chainy like thing
doing a lang chainy like thing
with additional nice things okay that's
with additional nice things okay that's
funny
since you're not getting audio so to
since you're not getting audio so to
summarize in my own words he has a
summarize in my own words he has a
little framework that lets you write
little framework that lets you write
prompts as functions store all versions
prompts as functions store all versions
of them and generate computation graphs
of them and generate computation graphs
over different functions so that you
over different functions so that you
have computation graphs of different
have computation graphs of different
functions that are prompts to a language
functions that are prompts to a language
model so you can chain together little
model so you can chain together little
be little pieces of uh language model
be little pieces of uh language model
outputs okay I see what he's doing
it's cool
all right cool
all right cool
so yeah
so yeah
um I I didn't expect him to give such a
um I I didn't expect him to give such a
long-winded explanation but he does work
long-winded explanation but he does work
on cool stuff uh will is previously open
on cool stuff uh will is previously open
AI uh before that CMU I briefly ran into
AI uh before that CMU I briefly ran into
him as a PhD student he's also behind
him as a PhD student he's also behind
mineral which is like the Minecraft uh
mineral which is like the Minecraft uh
binding the Minecraft AI bindings for
binding the Minecraft AI bindings for
Stuff um really cool project I don't
Stuff um really cool project I don't
Advocate this for like uh RL from
Advocate this for like uh RL from
scratch but that doesn't mean there
scratch but that doesn't mean there
aren't a ton of other things you can do
aren't a ton of other things you can do
with it so really really cool project
with it so really really cool project
big project huge amount of work um and
big project huge amount of work um and
he's built some startups and stuff as
he's built some startups and stuff as
well so real cool
guy so welcome uh today we're going to
guy so welcome uh today we're going to
do some cool MOBA
do some cool MOBA
stuff I'd also like to mention this
stuff I'd also like to mention this
ridiculous article that I wrote It's on
X this is a thing that exists I've been
X this is a thing that exists I've been
tempted to write this up as an article
tempted to write this up as an article
for a while but uh you can go check it
for a while but uh you can go check it
out it's pretty
short if you're looking for some
entertainment puffer lib is at 689 which
entertainment puffer lib is at 689 which
is fantastic so thank you for the
is fantastic so thank you for the
support on that
support on that
and now let's take a look
and now let's take a look
at the actual project that we're
at the actual project that we're
supposed to be working on today so I've
supposed to be working on today so I've
got a few things with this um I had some
got a few things with this um I had some
difficulty with the sweeps the WB sweeps
difficulty with the sweeps the WB sweeps
integration for some reason
overnight I did launch a new one where
overnight I did launch a new one where
is
is
it 7 hours
it 7 hours
ago did this actually work work oh it
ago did this actually work work oh it
looks like it did actually work never
looks like it did actually work never
mind
um yeah I guess this did work cool
um yeah I guess this did work cool
so we have
so we have
here actually this is really
here actually this is really
good actually this is like really good
good actually this is like really good
huh so uh we have this automatic hyper
huh so uh we have this automatic hyper
parameter sweep over the environment and
parameter sweep over the environment and
uh it's finding us better and better you
uh it's finding us better and better you
know parameters to train the model with
know parameters to train the model with
what is this one
here this is big mini batch
size train batch size of hold on let's
size train batch size of hold on let's
see what's
uh train batch size is like a
uh train batch size is like a
million so really quite large batch
million so really quite large batch
sizes
sizes
and then gamma Lambda okay some values
and then gamma Lambda okay some values
in
in
there uh reasonably High entropy
there uh reasonably High entropy
coefficient cool uh four update EPO is a
coefficient cool uh four update EPO is a
little bit
little bit
weird but we will keep this for now
weird but we will keep this for now
so yeah let's look let's look at this
so yeah let's look let's look at this
model as I think
model as I think
it's where did it go wait where did our
it's where did it go wait where did our
good one go we just had a good model
good one go we just had a good model
where did it go
yeah there we go this
one o look at that they're leveling
one o look at that they're leveling
up you see
that we got some reward here for taking
Towers it looks like they actually sto
Towers it looks like they actually sto
just like rushing mid and they're
just like rushing mid and they're
starting to farm more
do we have overall reward somewhere yeah
do we have overall reward somewhere yeah
look at this pretty
look at this pretty
solid I'm assuming this is going to be
solid I'm assuming this is going to be
somewhat slow yeah this only trains at
somewhat slow yeah this only trains at
about 300,000 steps per second but
about 300,000 steps per second but
that's still
that's still
reasonable so why don't we go launch
reasonable so why don't we go launch
this as an a standalone experiment and
this as an a standalone experiment and
uh we'll see what we get out of this and
uh we'll see what we get out of this and
then we will I mean we'll have lots and
then we will I mean we'll have lots and
lots of stuff to do on this project
lots of stuff to do on this project
today we'll start by training a model
today we'll start by training a model
and then uh we're going to clean up a
and then uh we're going to clean up a
whole bunch of stuff around the project
whole bunch of stuff around the project
we're going to get stuff into a format
we're going to get stuff into a format
where like creep scale properly skills
where like creep scale properly skills
are usable uh we'll start balancing
are usable uh we'll start balancing
stuff right we'll set stuff up so we can
stuff right we'll set stuff up so we can
really really easily balance things and
really really easily balance things and
we'll generally start cleaning up this
we'll generally start cleaning up this
project because this is not that far off
project because this is not that far off
from a releasable
from a releasable
state so yeah let's started here
this is the machine where I was running
this is the machine where I was running
stuff did I change
anything and let's see the exact typer
parameters we're just going to set these
parameters we're just going to set these
as the default so that we can run
as the default so that we can run
this they're logged for us right
this they're logged for us right
here we've got a stupidly large batch
size 1
size 1
milon
24,000 mini batch size of 64k which is
huge
huge
um be PT Horizon of one that's really
um be PT Horizon of one that's really
awkward I'm sure that these aren't
awkward I'm sure that these aren't
actually optimal hyper parameters
actually optimal hyper parameters
they're just like you know better than
they're just like you know better than
whatever we had so once we run really
whatever we had so once we run really
good sweeps we're going to find stuff
good sweeps we're going to find stuff
that's way uh even way better than
this wh
CL entropy coefficient is almost the
CL entropy coefficient is almost the
same as what we guessed which is kind of
same as what we guessed which is kind of
fun
fun
it's usually a decent starting point
it's usually a decent starting point
like o1 O2 or whatever usually a decent
like o1 O2 or whatever usually a decent
starting
starting
point uh Lambda this is a really stupid
point uh Lambda this is a really stupid
Lambda value this is way too low so I'm
Lambda value this is way too low so I'm
assuming that this can even do way
assuming that this can even do way
better than it's doing
better than it's doing
now
now
gamma this is a somewhat reasonable
gamma this is a somewhat reasonable
gamma value though it's still it's still
gamma value though it's still it's still
very low this is like a very shortterm
very low this is like a very shortterm
very greedy agent oh how did you set up
very greedy agent oh how did you set up
hyper pram sweeps this is integrated
hyper pram sweeps this is integrated
with puffer lib we've got a w b sweeps
with puffer lib we've got a w b sweeps
integration that makes it very easy to
integration that makes it very easy to
launch many jobs choosing hyper
launch many jobs choosing hyper
parameters from specific section so this
parameters from specific section so this
is just overrides here there's a default
is just overrides here there's a default
that I have that has like reasonable
that I have that has like reasonable
ranges for most of the default hyper
ranges for most of the default hyper
parameters um here I just I increased
parameters um here I just I increased
the batch size so that it could use
the batch size so that it could use
larger batch sizes and stuff but yeah
larger batch sizes and stuff but yeah
that's what we do it makes it very very
that's what we do it makes it very very
easy it's one of the big things I'm
easy it's one of the big things I'm
happy with uh with Puffer
and then very low learning rate is
and then very low learning rate is
interesting
oops Max grad
oops Max grad
Norm probably we didn't even need to
Norm probably we didn't even need to
sweep quite all of
these total time steps is
these total time steps is
this is 400 mil that we
this is 400 mil that we
did
did
424 we'll use the
424 we'll use the
exact value
exact value
here even though I really should not
here even though I really should not
actually 500 mil is fine let's just do
actually 500 mil is fine let's just do
500 mil where in the libraryies it set
500 mil where in the libraryies it set
up it's just in the demo
up it's just in the demo
file I try not to add like if you think
file I try not to add like if you think
about it like wanb already has their own
about it like wanb already has their own
sweeps Library so why would I put a
sweeps Library so why would I put a
wrapper for an existing Library like
wrapper for an existing Library like
into the core of puffer right I'm just
into the core of puffer right I'm just
going to give you a demo file that has
going to give you a demo file that has
like the simplest way that I found to
like the simplest way that I found to
use it right I'm not going to add yet
use it right I'm not going to add yet
another layer on top of an existing
Library so it's just in the demo file
Library so it's just in the demo file
and uh the configs are already set up
and uh the configs are already set up
for it
okay so this should be all of our
hypers isn't integrate Rand WB sweeps
hypers isn't integrate Rand WB sweeps
just def finding sweep config yaml
just def finding sweep config yaml
file um kind of but
file um kind of but
like
like
there's if there weren't so many ways to
there's if there weren't so many ways to
shoot yourself in the foot with it then
shoot yourself in the foot with it then
yes I'll put it that
way e
I mean frankly like the demo for puffer
I mean frankly like the demo for puffer
it's
it's
not like the demo for puffer is just
not like the demo for puffer is just
meant to be a really really good starter
meant to be a really really good starter
like really really good starter code for
like really really good starter code for
just about whatever you could want to do
just about whatever you could want to do
right so has like all the stuff that
right so has like all the stuff that
you'd want already set up without you
you'd want already set up without you
having to spend a few hours debugging
having to spend a few hours debugging
Arcane API
[ __ ] and then you know I spent a few
[ __ ] and then you know I spent a few
more hours trying to make stuff nice
more hours trying to make stuff nice
stuff like that
right one plus one
welcome is it still running the
sweep yeah it is but what sweep is it
running head phones look cool I actually
running head phones look cool I actually
forgot that I don't need these I'm
forgot that I don't need these I'm
literally not listening to
literally not listening to
anything I had these on cuz I was
anything I had these on cuz I was
looking at Will's stream before
so is this really seven hours ago is
so is this really seven hours ago is
when I did this so 1:40 I guess I did do
when I did this so 1:40 I guess I did do
this at like 6:00 a.m. or something 7
this at like 6:00 a.m. or something 7
a.m. right so I guess that's correct
um
um
yeah do I want to train over
this I guess so right
this I guess so right
how well is this one doing at the
how well is this one doing at the
moment is this like doing
moment is this like doing
Godly no this is a bad run anyways okay
Godly no this is a bad run anyways okay
I'm fine killing this for
now it's not a carb sweep anyways I
now it's not a carb sweep anyways I
couldn't the carb sweep something weird
couldn't the carb sweep something weird
happened with it so we just used the
happened with it so we just used the
basian sweep as a backup because I woke
basian sweep as a backup because I woke
up this morning and it wasn't working so
up this morning and it wasn't working so
I just I did this one instead
so we're going to launch this in the
so we're going to launch this in the
background to run us a like a 500 mil or
background to run us a like a 500 mil or
so and hopefully this will give us uh
so and hopefully this will give us uh
trained checkpoints of our best set of
trained checkpoints of our best set of
hyper parameters found thus far we'll
hyper parameters found thus far we'll
see if it does anything interesting it
see if it does anything interesting it
might have just found a weird way to
might have just found a weird way to
reward hack I actually I have no
idea I see the stream is warmed up
idea I see the stream is warmed up
now so uh the quick update from uh
now so uh the quick update from uh
overnight is just that we ran a small
overnight is just that we ran a small
basic hyper pram sweep this is by no
basic hyper pram sweep this is by no
means optimal um but we found something
means optimal um but we found something
that looks like it should be
that looks like it should be
substantially better than the model from
substantially better than the model from
before the way that the sweeps
before the way that the sweeps
integration works though at the moment
integration works though at the moment
is to prevent it from creating a
is to prevent it from creating a
bajillion files um it just finds you the
bajillion files um it just finds you the
hyper parameters it doesn't actually
hyper parameters it doesn't actually
save all the checkpoints for everything
save all the checkpoints for everything
I will have to fix that in the future um
I will have to fix that in the future um
but yeah so we're going to retrain that
but yeah so we're going to retrain that
now we make sure that it reproduces the
now we make sure that it reproduces the
run which is a nice sanity we'll load
run which is a nice sanity we'll load
that up and we'll go from
that up and we'll go from
there uh I'm going to be trying to
there uh I'm going to be trying to
balance the game and enable some of the
balance the game and enable some of the
better features today I'm going to be
better features today I'm going to be
trying to do to clean up a bunch of
trying to do to clean up a bunch of
stuff and make this into something
stuff and make this into something
that's close to releasable
that's close to releasable
State I also I'm a little bit late on
State I also I'm a little bit late on
the stream today because I was doing
the stream today because I was doing
this thing where is it
so if you're looking for a fun dumb
so if you're looking for a fun dumb
article to
article to
read there's a fun dumb article on
X all
X all
right we're going to just put this in
right we're going to just put this in
the background then for
now and uh let's see oops move
this let's see what we're going to do
this let's see what we're going to do
here
so the first thing
so the first thing
was agents not being able to use skills
was agents not being able to use skills
at the moment um is very
at the moment um is very
wonky uh this is simply because I
wonky uh this is simply because I
disabled the uh I mean I just disabled
disabled the uh I mean I just disabled
the option because I thought that it was
the option because I thought that it was
bugged so we're going to reenable that
bugged so we're going to reenable that
yeah we're going to reenable that and
yeah we're going to reenable that and
um the one slightly annoying thing about
um the one slightly annoying thing about
that is it can potentially make this new
that is it can potentially make this new
model that we're going to train not work
model that we're going to train not work
with it so let me just let me see one
with it so let me just let me see one
thing how long is this going to take I
thing how long is this going to take I
don't want to just be sitting here
don't want to just be sitting here
waiting for
waiting for
it 25 minutes okay so in the meantime
it 25 minutes okay so in the meantime
we'll start looking at how to clean up a
we'll start looking at how to clean up a
few other things before we add the
few other things before we add the
skills back we'll probably like start on
skills back we'll probably like start on
the refactor base
basically there's a whole bunch of
basically there's a whole bunch of
hard-coded mess at the moment
hard-coded mess at the moment
um I want to see
um I want to see
how how I should level up
how how I should level up
skills because I think most of the hard
skills because I think most of the hard
coding comes from these
skills I could technically just leave
skills I could technically just leave
them like this right
pros and cons
pros and cons
um
H well you need to know the
H well you need to know the
damage the damage scaling and stuff for
damage the damage scaling and stuff for
this so I think I need to figure it how
this so I think I need to figure it how
I want to handle scaling in the game
I want to handle scaling in the game
that's a good question that actually
that's a good question that actually
kind of relies on more knowledge of how
kind of relies on more knowledge of how
mobas work than I might have I did a
mobas work than I might have I did a
little bit of research before and it
little bit of research before and it
looks like character stats have fixed
looks like character stats have fixed
just flat scaling per level it's
just flat scaling per level it's
different for every class but they do
different for every class but they do
have just their own uh individual flat
have just their own uh individual flat
scaling per level uh spells are
scaling per level uh spells are
different spells have a fixed three
different spells have a fixed three
levels to them or four levels I forget
levels to them or four levels I forget
depends on the game um and that can do a
depends on the game um and that can do a
lot of stuff I think usually Mana cost
lot of stuff I think usually Mana cost
goes
goes
up but
up but
usually Mana cost goes
usually Mana cost goes
up but the player is also getting more
up but the player is also getting more
Mana through level ups and items damage
Mana through level ups and items damage
of course usually goes up sometimes
of course usually goes up sometimes
durations go up sometimes cooldowns go
durations go up sometimes cooldowns go
down
right
interesting I could make there are a lot
interesting I could make there are a lot
of things I could do with this so I
of things I could do with this so I
could make a struct
I could make some strs maybe I could
I could make some strs maybe I could
make like a struck to represent a skill
make like a struck to represent a skill
that has all of the different costs
that has all of the different costs
associated and all the different stats
associated and all the different stats
of the skill and
of the skill and
then when you call the
then when you call the
skill you just get all the params from
skill you just get all the params from
this the associated struct I guess that
this the associated struct I guess that
seems kind of messy
seems kind of messy
though hm
like you almost want to have this
like you almost want to have this
information in a data file right you
information in a data file right you
almost want to have this like in a
almost want to have this like in a
config file or
config file or
something but that doesn't help me
something but that doesn't help me
because like you still need a way to
because like you still need a way to
load to load that stuff in and I don't
load to load that stuff in and I don't
want to just like just for the sake of
want to just like just for the sake of
not having variables hardcoded in line
not having variables hardcoded in line
um I don't want to add like you know
um I don't want to add like you know
another config system and 100 lines of
another config system and 100 lines of
loader and 200 lines of constants right
loader and 200 lines of constants right
this is already too too code I want this
this is already too too code I want this
to be shorter um so I guess the thing
to be shorter um so I guess the thing
that I'm trying to figure out right now
that I'm trying to figure out right now
the problem I'm trying to solve isn't
the problem I'm trying to solve isn't
necessarily the card coding directly the
necessarily the card coding directly the
problem I'm trying to solve is
scaling how do we handle
scaling well I can make it a fixed I
scaling well I can make it a fixed I
could potentially make it fix three
levels is that
good I could also for every skill I
good I could also for every skill I
could just Define a flat amount of
could just Define a flat amount of
scaling per level right so let's say
scaling per level right so let's say
that it's uh it's like they're 30 levels
that it's uh it's like they're 30 levels
right and I have 300 to start I could
right and I have 300 to start I could
just add 10 damage per level and then
just add 10 damage per level and then
it'll be uh 600 damage right at level
30 I could do
that I don't even necessarily like the
that I don't even necessarily like the
way that I have all these skills looks
way that I have all these skills looks
good yeah I'm trying to figure this is
good yeah I'm trying to figure this is
kind of important I mean maybe I'll
kind of important I mean maybe I'll
maybe I can find some Clues on how I
maybe I can find some Clues on how I
want to do this more broadly across the
want to do this more broadly across the
code base but essentially like I want to
code base but essentially like I want to
make this I'm trying to like build this
make this I'm trying to like build this
out now where enemies have to level up
out now where enemies have to level up
over the game and stuff has to scale
over the game and stuff has to scale
right um and I'm trying to find a nice
right um and I'm trying to find a nice
way to organize all of that so that
way to organize all of that so that
we'll have nice clean code like most of
we'll have nice clean code like most of
this is fine the way it is there are a
this is fine the way it is there are a
couple things where constants need to be
couple things where constants need to be
maybe pulled out there's some steing
maybe pulled out there's some steing
stuff like this that I don't
like I mean this could potentially be a
like I mean this could potentially be a
property of the player I can do like
property of the player I can do like
damage scaling or like damage per Level
damage scaling or like damage per Level
Health per
Health per
level that would make sense because it's
level that would make sense because it's
specific anyways to this to the player
right that also makes it easier if I
right that also makes it easier if I
want to do like range Creeps in the
want to do like range Creeps in the
future with different scaling if I just
future with different scaling if I just
attach it to the the struct
attach it to the the struct
itself that is
decent I also really don't like the way
decent I also really don't like the way
that I have to call skills right now
that I have to call skills right now
this is
this is
gross
gross
right this is really
gross so the way that I would do this
gross so the way that I would do this
outside of Sealand right is that I would
outside of Sealand right is that I would
have uh the like player itself would
have uh the like player itself would
have well I know how to do this with sub
have well I know how to do this with sub
classes right you have like a support
classes right you have like a support
subass or whatever and that subass has
subass or whatever and that subass has
its own q w and E skills associated with
its own q w and E skills associated with
it um I don't think it should be any
it um I don't think it should be any
harder here I just have to think of how
harder here I just have to think of how
I do it in this
setting I could do it with function
setting I could do it with function
pointers that seems gross
though lots of if else is
though lots of if else is
good not
really see the thing I don't like about
really see the thing I don't like about
this is the fact
this is the fact
that I have all this the these chain of
that I have all this the these chain of
statements like this
statements like this
um but then I also have the skills
um but then I also have the skills
factored out right so like I have this
factored out right so like I have this
gross this gross
gross this gross
nesting and I
nesting and I
have the skills are separate function so
have the skills are separate function so
I don't even have the details right
here well I can fix the PID thing
here well I can fix the PID thing
because the PID I now have classes so I
because the PID I now have classes so I
can just have I can go over pids that's
can just have I can go over pids that's
fine
do I want to do function
do I want to do function
pointers I don't even know if you can
pointers I don't even know if you can
store function pointers in strs can you
store function pointers in strs can you
in uh I mean in scon
in uh I mean in scon
strs you probably can
right I don't know if I want to though
no idea yeah well I mean this type of
no idea yeah well I mean this type of
Dev is a little bit boring to watch
Dev is a little bit boring to watch
sometimes but it's very necessary and
sometimes but it's very necessary and
this is frankly one of the crucial
this is frankly one of the crucial
things that you have to do that makes
things that you have to do that makes
the difference between you having a crap
the difference between you having a crap
project and having one that's nice is
project and having one that's nice is
actually spending the time that it takes
actually spending the time that it takes
to Think Through how you want to have
to Think Through how you want to have
things structured
nicely and you have to not get too
nicely and you have to not get too
clever about it
clever about it
either brain is getting out of
either brain is getting out of
bounds yeah you have to not get too
bounds yeah you have to not get too
clever about it either like the goal is
clever about it either like the goal is
not to come up with like a bunch of
not to come up with like a bunch of
fancy layers of indirection the goal is
fancy layers of indirection the goal is
to find like a simple direct way to do
to find like a simple direct way to do
it
I kind of don't mind the function
I kind of don't mind the function
pointers thing
pointers thing
though
though
so the the way that I would do this with
so the the way that I would do this with
function pointers the only reason I'm
function pointers the only reason I'm
hesitant let me just go through my logic
hesitant let me just go through my logic
here so the only reason I'm hesitant to
here so the only reason I'm hesitant to
do this with function pointers is that
do this with function pointers is that
the way that you represent um a function
the way that you represent um a function
like a reference to a function in C or
like a reference to a function in C or
scon is kind of
scon is kind of
gross and can be kind of buggy I
gross and can be kind of buggy I
wouldn't hesitate to do this at all if I
wouldn't hesitate to do this at all if I
were writing this in Python because it's
were writing this in Python because it's
incredibly
incredibly
easy
easy
um you just do like you know player. Q
um you just do like you know player. Q
equals uh skill support hook or whatever
equals uh skill support hook or whatever
right it's incredibly incredibly easy
does the
does the
client also take into consideration for
client also take into consideration for
the execution don't the
the execution don't the
clients also take in consideration for
clients also take in consideration for
the execution
the execution
time uh I don't exactly know what that
time uh I don't exactly know what that
means in this case not sure what you're
means in this case not sure what you're
asking
if I give this thing function
if I give this thing function
pointers it's actually incredibly easy
pointers it's actually incredibly easy
because then this whole code just
because then this whole code just
becomes you know uh if use Q then uh
becomes you know uh if use Q then uh
player.
player.
Q L if use w player. w LF use e player.
Q L if use w player. w LF use e player.
El basic attack and you don't have this
El basic attack and you don't have this
Loop over everything so then it makes
Loop over everything so then it makes
sense to have all the the skills defined
sense to have all the the skills defined
to separate functions which is nice
if else takes lots of time than the
if else takes lots of time than the
function pointers uh this is a
function pointers uh this is a
negligible amount of time either way so
negligible amount of time either way so
this is not a performance
this is not a performance
consideration because there right now
consideration because there right now
the game has to Loop over all of the
the game has to Loop over all of the
NPCs and stuff as well right so if the
NPCs and stuff as well right so if the
game has uh up to like 200 creeps and
game has uh up to like 200 creeps and
neutrals combined in towers that are
neutrals combined in towers that are
alive at the same time and they're only
alive at the same time and they're only
10 players a few if statements applied
10 players a few if statements applied
over players like this does not make a
over players like this does not make a
difference if there were tons of
difference if there were tons of
conditionals applied over every single
conditionals applied over every single
creep as well then yes that would make a
creep as well then yes that would make a
difference but this is not a performance
difference but this is not a performance
issue this is purely a making the code
issue this is purely a making the code
not garbage
issue I kind of like the way I kind of
issue I kind of like the way I kind of
like the idea of doing this with
like the idea of doing this with
function pointers uh let me see what the
function pointers uh let me see what the
syntax looks like for that to see if I
syntax looks like for that to see if I
actually want to commit to it
double star
ftype wait C def
what C type def
what C type def
double star F
double star F
Type oh I see
that's not that
bad I think then it's I forgot that this
bad I think then it's I forgot that this
is how it works and see okay so I think
is how it works and see okay so I think
that all I have to do
that all I have to do
[Music]
is where we have player
void I think the skills return void
void I think the skills return void
right skill yeah
right skill yeah
void entity
Target void skill so this is going to be
Target void skill so this is going to be
a skill
skill that takes
entity is this
valid if I try to compile this does this
build inv canot be a python
build inv canot be a python
object ah because classes aren't okay
interesting
so it doesn't like that this is a class
so it doesn't like that this is a class
method does it have to be I think it
method does it have to be I think it
does have to be a class method though
does have to be a class method though
because certain skills need to do scans
because certain skills need to do scans
and stuff
pretty obnoxious
double some
detail I don't know how
detail I don't know how
we we get pointers for
this is this a smart idea in the first
this is this a smart idea in the first
place
oops hold on restream is being
weird okay
weird okay
whatever
um so what I'm trying to do here let me
um so what I'm trying to do here let me
be clear so I have I've got this mobo
be clear so I have I've got this mobo
right and I want each player to have
right and I want each player to have
different
different
skills but I'd like them to be able to
skills but I'd like them to be able to
have pointers to those skills if
possible I don't know if you can do
that is there a better way to do
that is there a better way to do
that or is this just one of these
that or is this just one of these
limitations of
limitations of
um these limitations of scyon
is there any other way that I'm
is there any other way that I'm
overlooking I don't think so
yeah I think this is where it makes the
yeah I think this is where it makes the
most sense to do
most sense to do
this just totally where that makes the
this just totally where that makes the
most sense to do this
most sense to do this
right yeah it has to be so I got to
right yeah it has to be so I got to
figure out a way to do this um we're
figure out a way to do this um we're
going to try chat jippy and it's going
going to try chat jippy and it's going
to waste my time as always but you know
to waste my time as always but you know
maybe once in a blue moon once in a blue
maybe once in a blue moon once in a blue
moon it actually does something oh yeah
moon it actually does something oh yeah
check this out I was I was generating um
check this out I was I was generating um
Tech
Tech
Wizards I was generating like Tech
Wizards I was generating like Tech
Wizards or the
article okay
um I Define
um I Define
a
a
uh how do
uh how do
I a function
scyon struct contain a pointer to a
scyon struct contain a pointer to a
scyon class
method is this thing
method is this thing
right I think this is just what what I
right I think this is just what what I
just did and it didn't work
just did and it didn't work
right star method pointer
oh I think I might just have the syntax
oh I think I might just have the syntax
wrong actually yeah hold on I might just
wrong actually yeah hold on I might just
be I just might have the Syntax for
be I just might have the Syntax for
doing this
wrong entity
wrong entity
star is this
it or does this still not
work pointer base cannnot be a yeah it's
work pointer base cannnot be a yeah it's
the same issue so I think that uh I
the same issue so I think that uh I
think think literally chat GPD just did
think think literally chat GPD just did
the same exact thing I did
right cuz this looks clean if you could
right cuz this looks clean if you could
do
this on classes
method
method
Bridge okay I see so there is
Bridge okay I see so there is
technically a way around this I just
technically a way around this I just
don't know if it's worth
don't know if it's worth
it so what they're saying here is that
it so what they're saying here is that
you can say well you can take a pointer
you can say well you can take a pointer
to a
to a
method you
method you
see wait well this
see wait well this
doesn't the thing this just Define
doesn't the thing this just Define
doesn't make any damn
doesn't make any damn
sense but I think I see what it was
sense but I think I see what it was
trying to do let me think if that makes
trying to do let me think if that makes
any sense so
chat GPT is chat GPT is always dumb I
chat GPT is chat GPT is always dumb I
swear it's like it whenever I'm stuck on
swear it's like it whenever I'm stuck on
something it's it's like never right
something it's it's like never right
right like if I'm stuck it's basically
right like if I'm stuck it's basically
always stuck
today's stream is less heat I guess it's
today's stream is less heat I guess it's
Saturday oh it's Friday in the
Saturday oh it's Friday in the
US I do work Saturday as well but I work
US I do work Saturday as well but I work
off
stream how do I get around
stream how do I get around
this and it's fine it's fine to have
this and it's fine it's fine to have
some chill stream days I like I actually
some chill stream days I like I actually
have to get work done as well right I'm
have to get work done as well right I'm
not just here entertaining and answering
not just here entertaining and answering
tons of RL like basic RL questions right
tons of RL like basic RL questions right
like that's fun sometimes but it's good
like that's fun sometimes but it's good
to get this simulator into uh into
shape and sometimes you have to do the
shape and sometimes you have to do the
hard and boring work
right so I mean this is just a
right so I mean this is just a
straight scon
straight scon
problem with the way that it
problem with the way that it
represents classes as python objects
represents classes as python objects
because they're technically exposed
and this has to have the arguments to be
and this has to have the arguments to be
it can't just be an
untyped i for forgot that it needed to
untyped i for forgot that it needed to
know the call and return types for this
know the call and return types for this
deack I know why it needs them but I'd
deack I know why it needs them but I'd
forgotten about that for some
reason if I just put void star does that
reason if I just put void star does that
work
now let's see if I
now let's see if I
do uh skill
skill Q
right and then I do let's just pick a q
skill there's so many questions around
skill there's so many questions around
whether this works
so scale
Q let's just put it
Q let's just put it
here is a
here is a
test it doesn't like
test it doesn't like
this skill is not a type identifier well
this skill is not a type identifier well
this is I know how to fix
this is I know how to fix
this while your environment runs at 1
this while your environment runs at 1
million
million
steps I have a custom mend that runs at
steps I have a custom mend that runs at
two steps per
two steps per
second I would suggest making it
second I would suggest making it
faster it's very hard to do anything
faster it's very hard to do anything
meaningful on an environment that runs
meaningful on an environment that runs
two steps per
second I actually I was told that they
second I actually I was told that they
were running DOTA at like half of real
were running DOTA at like half of real
time uh each instance of the game for
time uh each instance of the game for
open
open
ai5 ours are going to be running at
ai5 ours are going to be running at
20,000 times real time
you know you could use 100,000 cores or
you know you could use 100,000 cores or
you could just make your M like 40,000
you could just make your M like 40,000
times faster
I have not done enough enough C++ to
I have not done enough enough C++ to
know if what I'm doing makes any sense
know if what I'm doing makes any sense
at the moment
nope it doesn't okay I got to think of a
nope it doesn't okay I got to think of a
way around this because I don't think
way around this because I don't think
that this is going to be a fruitful
that this is going to be a fruitful
approach I think this is like bumping up
approach I think this is like bumping up
against the the limitations of scon here
against the the limitations of scon here
sadly the environment has some expensive
sadly the environment has some expensive
calculations like conditional entropies
calculations like conditional entropies
of stuff that just takes
of stuff that just takes
long are those conditional entropies
long are those conditional entropies
implemented
implemented
in Python by any
chance two steps per second is just not
chance two steps per second is just not
happy play place for RL that's just like
happy play place for RL that's just like
the point of RL is that it can just
the point of RL is that it can just
ingest tons of data right if you don't
ingest tons of data right if you don't
have tons of data to
have tons of data to
ingest I mean it's like trying to insist
ingest I mean it's like trying to insist
that you do chat GPT but with a 10
that you do chat GPT but with a 10
million parameter model C with python
million parameter model C with python
bindings jeez well have you timed it in
bindings jeez well have you timed it in
C to see if the python bindings are just
C to see if the python bindings are just
garbage cuz I've seen that happen before
garbage cuz I've seen that happen before
where like the CN is Fast and the python
where like the CN is Fast and the python
bindings are garb
garbage ideally you want all static B uh
garbage ideally you want all static B uh
all static data structures that are just
all static data structures that are just
memory shared between Python and
see open the I uses RL yeah of course
see open the I uses RL yeah of course
they were one of the biggest
they were one of the biggest
contributors to RL back in
2018 possibly the biggest
contributor e
yeah there's like no way to put all
yeah there's like no way to put all
these skills into an
aray Google
aray Google
bar I don't know what Google bar
is oh bard
I honestly haven't heard of that project
I honestly haven't heard of that project
in a while was that that was one of
in a while was that that was one of
their was that their search thing or
their was that their search thing or
their language model thing I don't know
their language model thing I don't know
I haven't seen them publishing a ton of
I haven't seen them publishing a ton of
RL lately outside of deep
mind I really don't like the way that
mind I really don't like the way that
this is at the moment
so I
actually I actually like this type of a
actually I actually like this type of a
this type of logic here we're going to
this type of logic here we're going to
take this out of conditionals I like
take this out of conditionals I like
having like flat Define logic on
stuff so if we have like an init script
stuff so if we have like an init script
right where it's like 300 flat lines or
right where it's like 300 flat lines or
something and it just goes through and
something and it just goes through and
it like allocates all of the you know
it like allocates all of the you know
the specific agent stats that are needed
the specific agent stats that are needed
that's
fine really don't
fine really don't
like this is the way it is now though
basically I have a basan networ that I
basically I have a basan networ that I
used to calculate the expected
used to calculate the expected
Information Gain of each action over the
Information Gain of each action over the
system
system
jeez solving corrective maintenance find
jeez solving corrective maintenance find
the root cause of failure in a system
the root cause of failure in a system
actions or diagnostic test to execute to
actions or diagnostic test to execute to
gain information about the system
yeah that's hard that's one of those
yeah that's hard that's one of those
problems where if you don't have human
problems where if you don't have human
data and your sim is slow then you're in
data and your sim is slow then you're in
an unenviable
an unenviable
position because that's not the good
position because that's not the good
like that's not the that's not where RL
like that's not the that's not where RL
shines right RL shines when you have
shines right RL shines when you have
unlimited
data e
it's so obnoxious that I can't just type
it's so obnoxious that I can't just type
player doskill equals function
why do I need this to be like this again
right it's this
right it's this
is
geez yeah this is really where you hit
geez yeah this is really where you hit
the uh the annoyances with scon I
guess e
this is
bad I don't think either of those are
bad I don't think either of those are
better than GPT
4 currently episodes are around 10 steps
4 currently episodes are around 10 steps
per episode
well how big is the action space though
in the state space like can you cash the
in the state space like can you cash the
results of these Sims and then reuse
them you
know I would look for stuff to cash Noah
know I would look for stuff to cash Noah
like I don't know what SIM you're
like I don't know what SIM you're
working with but like let's say that you
working with but like let's say that you
have a SIM where like there are 10,000
have a SIM where like there are 10,000
States and like these that are really
States and like these that are really
really expensive to compute I just
really expensive to compute I just
pre-compute all of
pre-compute all of
them probably you don't have that
them probably you don't have that
probably you have a problem where it's
probably you have a problem where it's
way harder to cash
but 12
but 12
actions I'm not
bad is the initial state of the
bad is the initial state of the
simulator always the same
because like actually what I would do is
because like actually what I would do is
I would just cash everything
right like the results of this Ms even
by cash I mean if you have like
State like the state of the simulator
State like the state of the simulator
and then the action that is called you
and then the action that is called you
get a new state of the
get a new state of the
simulator or you get results from the
simulator or you get results from the
simulator after you run it the first
simulator after you run it the first
time I would store the state of the
time I would store the state of the
simulator and the results if you're
simulator and the results if you're
capable of doing
capable of doing
that so that you don't have RL
that so that you don't have RL
constantly recomputing the same data
constantly recomputing the same data
when it's running the same sequence of
when it's running the same sequence of
actions so that way at least like your
actions so that way at least like your
simulator gets faster and faster the
simulator gets faster and faster the
more you play with it right because if
more you play with it right because if
you cash it you're essentially you'll
you cash it you're essentially you'll
get millions of you know you'll get like
get millions of you know you'll get like
10 million steps per second Plus for
10 million steps per second Plus for
things you've already seen so you'll
things you've already seen so you'll
only ever be spending compute on new
only ever be spending compute on new
simulation
simulation
steps something like that is what I
steps something like that is what I
would
would
do not knowing anything about your
do not knowing anything about your
problem
this is going to drive me
this is going to drive me
nuts this is really going to drive me
nuts this is really going to drive me
nuts
maybe I'll try that thanks yeah that
maybe I'll try that thanks yeah that
would be my
recommendation so it's just the thing
recommendation so it's just the thing
that's so obnoxious here right is
that's so obnoxious here right is
like when you spawn all these agents you
like when you spawn all these agents you
have to go over the different types to
have to go over the different types to
assign their class and stuff and like
assign their class and stuff and like
this is where it would make sense to
this is where it would make sense to
assign their
assign their
skills so the fact that I then have to
skills so the fact that I then have to
at the bottom of the code loop over the
at the bottom of the code loop over the
agent type again in order to do this is
obnoxious is this the world's dumbest
obnoxious is this the world's dumbest
article
this is so
this is so
stupid this is valid but not
important this is
stupid
yeah oh look a rust person of course
yeah oh look a rust person of course
it's a bad
take I don't
take I don't
know let me think think about how I can
know let me think think about how I can
do this there's got to be some way to
do this there's got to be some way to
cheat like a
pointer so the reason it that I have
pointer so the reason it that I have
this
this
problem hey Trey
I SAR like rust is the Arch Linux of the
I SAR like rust is the Arch Linux of the
programming world where it's like a
programming world where it's like a
really cool community of people that are
really cool community of people that are
really passionate about tech doing stuff
really passionate about tech doing stuff
in a way that's just like utterly stupid
in a way that's just like utterly stupid
for actually getting anything
done yeah you joined at a funny time I
done yeah you joined at a funny time I
just saw this I always every time I look
just saw this I always every time I look
up Scythe on anything I see this really
up Scythe on anything I see this really
dumb bait article here like dude if
dumb bait article here like dude if
you're going to write a bait article at
you're going to write a bait article at
least write a good bait article okay
least write a good bait article okay
here I wrote a I wrote one of them today
here I wrote a I wrote one of them today
maybe you'll get a kick out of
it this is on X have fun
do I need to have this be a class in
do I need to have this be a class in
scon like if this is not a class then
scon like if this is not a class then
not this problem is
solved what if I made if the environment
solved what if I made if the environment
were a struct instead of a class what
were a struct instead of a class what
would
would
happen well the only thing that's a
happen well the only thing that's a
problem is I need a way to store that
problem is I need a way to store that
struct persistently in syon
right because you can't return strs
can you return strs from scyon to python
convert it to a dictionary okay this is
convert it to a dictionary okay this is
not
good so you need like this that's really
good so you need like this that's really
weird so you need a class just for the
weird so you need a class just for the
API I
guess eye cancer and the boiler plate to
guess eye cancer and the boiler plate to
do anything is
do anything is
yeah it's God awful
so let me tell you what I'm trying to do
so let me tell you what I'm trying to do
maybe you know
this so This logic is disgusting right
this so This logic is disgusting right
right I already have to do player
right I already have to do player
conditional logic when I in create all
conditional logic when I in create all
the players and what I want to
the players and what I want to
do is do like you know for the support
do is do like you know for the support
player doskill Q equals skill support
player doskill Q equals skill support
hook player. skill W equals skill
hook player. skill W equals skill
support AOE and so on and so forth right
support AOE and so on and so forth right
so just give the player struct pointers
so just give the player struct pointers
to the function now you can do
to the function now you can do
this by typ deing
this by typ deing
a function
a function
pointer and then what you should just be
pointer and then what you should just be
able to do is you should be able to put
able to do is you should be able to put
in your struct you should be able to put
in your struct you should be able to put
skill as an element of your struct right
skill as an element of your struct right
you just have a data type
you just have a data type
skill it's C type def it's a c type it
skill it's C type def it's a c type it
should work now the issue not this void
should work now the issue not this void
star this was me messing with it trying
star this was me messing with it trying
to make it
to make it
work is that this environment star is a
work is that this environment star is a
pointer to a cdef
pointer to a cdef
class and a cdef class
class and a cdef class
is not a uh a c type it is a python type
is not a uh a c type it is a python type
because that's how class rappers are are
because that's how class rappers are are
treated
treated
it so I need a way around
that can I see type def a
that can I see type def a
class it doesn't do anything right
yeah so anything that any method of a
yeah so anything that any method of a
class is also a python
object obnoxious
so I'm not really I'm not attached to
so I'm not really I'm not attached to
objectoriented programming in the least
objectoriented programming in the least
like I have no attachment to this class
like I have no attachment to this class
whatsoever I'd be very happy to have
whatsoever I'd be very happy to have
environment just be a struct that has
environment just be a struct that has
all this stuff in it right but then the
all this stuff in it right but then the
thing is like the struct has to live in
thing is like the struct has to live in
C it can't live in Python and keep
C it can't live in Python and keep
getting back converted back and forth to
getting back converted back and forth to
um it can't keep getting converted back
um it can't keep getting converted back
and forth via dictionaries that's really
and forth via dictionaries that's really
slow
I think technically I could come up
I think technically I could come up
with I could make like an environment
with I could make like an environment
struct and an environment class and if
struct and an environment class and if
the class has the struct then the
the class has the struct then the
pointer can take the environment struct
pointer can take the environment struct
instead of the class and then most of
instead of the class and then most of
the other methods will come out of the
the other methods will come out of the
uh out of the class and will take the
uh out of the class and will take the
struct
explicitly does that sound like a good
explicitly does that sound like a good
idea I think I still end up with an
idea I think I still end up with an
extra class just to hold the stupid
extra class just to hold the stupid
thing because I don't think there's any
thing because I don't think there's any
way to have persistent stuff in scyon if
way to have persistent stuff in scyon if
scon doesn't own a class
scon doesn't own a class
right stru can't be passed at the scon
right stru can't be passed at the scon
level yeah so I think that the thing
level yeah so I think that the thing
that you need to do then with this is
that you need to do then with this is
you have
you have
wrap the
wrap the
class and extern what do you mean by
class and extern what do you mean by
wrap the class and extern C
wrap the class and extern C
like I shouldn't need to be write that's
like I shouldn't need to be write that's
for when you're writing C files isn't
for when you're writing C files isn't
it I think that I can do if I just do
it I think that I can do if I just do
like struct environment and then like I
like struct environment and then like I
see def a class that contains like just
see def a class that contains like just
cdef you know M environment or whatever
cdef you know M environment or whatever
I think I can do that right
I think I can do that right
unique names
obviously you might need
exter might not I don't
exter might not I don't
know we'll
know we'll
see okay well I mean this is going to be
see okay well I mean this is going to be
kind of interesting like I didn't want
kind of interesting like I didn't want
to have to do this level of a refactor
to have to do this level of a refactor
today
today
but I kind of like it I mean this would
but I kind of like it I mean this would
allow me to do old procedural on this
right pretty
much I've been just increasingly hating
much I've been just increasingly hating
object-oriented
programming and the funny thing is like
programming and the funny thing is like
all of the scyon problems like all the
all of the scyon problems like all the
problems in scon aren't actually scyon
problems in scon aren't actually scyon
problems they're problems with trying to
problems they're problems with trying to
do O and C
yeah C++ is real bad
I also don't know what it is but like
I also don't know what it is but like
the colon colon Syntax for stuff drives
the colon colon Syntax for stuff drives
me nuts I hate it it's just like I don't
me nuts I hate it it's just like I don't
know
why okay well we'll start on this um by
why okay well we'll start on this um by
the way in the meantime I since I have
the way in the meantime I since I have
this running and I don't think you got
this running and I don't think you got
to see this
to see this
so I ran a little bit of a sweep
so I ran a little bit of a sweep
overnight nothing massive and then we
overnight nothing massive and then we
got some args back and we trained a new
model it's probably this
one
yeah here's the reward it looks real
good so why don't we why don't we go
good so why don't we why don't we go
render this model up before we break
render this model up before we break
stuff cuz so that'll be fun and then
stuff cuz so that'll be fun and then
we'll go from there
maybe exercise reinforcement learning
I'm going to link the fireb ball article
I'm going to link the fireb ball article
as well because it's
as well because it's
fun
oops my chat is not
showing there it's in the chat anyways
showing there it's in the chat anyways
right yeah
it's a short article it's funny I've
it's a short article it's funny I've
just seen too much dumb stuff like too
just seen too much dumb stuff like too
much stuff dumber than this that I felt
much stuff dumber than this that I felt
required like I felt obligated to post
required like I felt obligated to post
this because holy hell
this because holy hell
like the number of takes I've seen
like the number of takes I've seen
lately that are just garbage is
lately that are just garbage is
ridiculous and it's like all grifters
ridiculous and it's like all grifters
trying to get like free investor money
trying to get like free investor money
from people who don't know
from people who don't know
better or just like straight scamming
better or just like straight scamming
it's gross for
the next five bill will make deep
the next five bill will make deep
learning
learning
work well deep learning does kind of
work well deep learning does kind of
work at this point to be fair it's just
work at this point to be fair it's just
like people promising increasingly crazy
like people promising increasingly crazy
stuff
well how much compute does this model
well how much compute does this model
take let's
take let's
see oh
see oh
hold
on what do these guys do
they're kind of
Wiggly oh wait they just
farmed
farmed
h
no they're definitely
interesting they're not just going down
interesting they're not just going down
mid they seem to be like attempting to
mid they seem to be like attempting to
farm
neutrals a lot more
maybe no this has a much more
maybe no this has a much more
interesting reward
so I'll show you the uh the curves for
so I'll show you the uh the curves for
this cuz they're kind of
this cuz they're kind of
cool I mean this is pretty acceptable as
cool I mean this is pretty acceptable as
like an
like an
initial initial take
like so this giant drop here is
like so this giant drop here is
obviously they won a
obviously they won a
game um
game um
you have reward for taking Towers you've
you have reward for taking Towers you've
got this XP reward curve which it looks
got this XP reward curve which it looks
like they're learning to get more and
like they're learning to get more and
more
more
XP you've got overall reward you've got
XP you've got overall reward you've got
reward for dying which is negative
reward for dying which is negative
you've got reward uh distance rewards
you've got reward uh distance rewards
you can actually see
you can actually see
that I think that this kind of crashed
that I think that this kind of crashed
it right here that like after the first
it right here that like after the first
game after they finished their first
game after they finished their first
game uh I think that they got screwed up
game uh I think that they got screwed up
a little bit maybe
that could just be a matter of more data
that could just be a matter of more data
though and more
training not bad overall for like our
training not bad overall for like our
first reasonable run after fixing all
first reasonable run after fixing all
the crazy
things let me post this
article real quick
yeah already some behaviors and they
yeah already some behaviors and they
would just go straight down mid with the
would just go straight down mid with the
uh the full just ancient reward right so
uh the full just ancient reward right so
so I'm pretty happy overall I think we
so I'm pretty happy overall I think we
just the goal for today is going to be
just the goal for today is going to be
to you know incorporate back skill usage
to you know incorporate back skill usage
uh fix up the code make everything nice
uh fix up the code make everything nice
get it to the point where we can easily
get it to the point where we can easily
balance and then like get the the proper
balance and then like get the the proper
carb sweeps going so we can essentially
carb sweeps going so we can essentially
just like automate model development on
just like automate model development on
this
this
project and just do a little bit of
project and just do a little bit of
polishing over the next few days and
polishing over the next few days and
hopefully I won't have to so hopefully
hopefully I won't have to so hopefully
I'm probably not going to stream every
I'm probably not going to stream every
day on this project next week I'm
day on this project next week I'm
thinking I might start
thinking I might start
on I might start on the puffer video one
on I might start on the puffer video one
or two days next week we'll see because
or two days next week we'll see because
I need to make uh some long form video
I need to make uh some long form video
content for this um but there's also
content for this um but there's also
some other stuff I still have so we'll
some other stuff I still have so we'll
see on that
see on that
um and then that we like I want to
um and then that we like I want to
finish up this like all these simulators
finish up this like all these simulators
I have is the simulation update for
I have is the simulation update for
puffer and uh go from there
puffer and uh go from there
okay though let's let's start
okay though let's let's start
by
by
uhoh are you out of memory
uhoh are you out of memory
me yes the environment has out of memory
me yes the environment has out of memory
to
to
me hopefully that will kill in a second
me hopefully that will kill in a second
and then we'll be able to
continue the really nice thing with this
continue the really nice thing with this
project is we're going to actually be
project is we're going to actually be
able to run uh open AI 5 scale batch
able to run uh open AI 5 scale batch
sizes and stuff because the model is so
sizes and stuff because the model is so
small and we have the memory to do
[Music]
[Music]
that so we're going to have like batch
that so we're going to have like batch
size 1 million
I might have to restart a
I might have to restart a
WSL something
I don't even have X kill or anything on
this yeah this is all my
memory I hate windows so much
oh great it's already
Frozen
Frozen
well that seems like something we should
well that seems like something we should
probably fix huh the renderer memory
probably fix huh the renderer memory
leak somehow
I really hope I don't have to reboot the
I really hope I don't have to reboot the
machine this is kind of
ridiculous could I just dock or stop
maybe I think the container might save
maybe I think the container might save
me here I might just be able to dock or
me here I might just be able to dock or
stop it I don't want to have to reboot
stop it I don't want to have to reboot
the machine and reset the
stream why are you on Windows if you
stream why are you on Windows if you
hate
hate
it
it
um configuring OBS and other [ __ ]
to be fair on Linux this would have just
to be fair on Linux this would have just
locked my whole machine up and crashed
locked my whole machine up and crashed
it anyways
so I mean at least I might have been
so I mean at least I might have been
able to ex kill the app
though okay this is not even
I also don't want to corrupt the
I also don't want to corrupt the
container or something
[ __ ] maybe I can stop it from
here e
so it just pulled this window up and
so it just pulled this window up and
maximized it for
me there we
go okay
go okay
fixed we got it I don't even know what I
fixed we got it I don't even know what I
would task kill though is the thing cuz
would task kill though is the thing cuz
it's like container running inside of
it's like container running inside of
auntu which is running inside a WSL
auntu which is running inside a WSL
which is right you might corrupt some
[ __ ] all right we're
[ __ ] all right we're
good let the dev begin
properly let the dev
properly let the dev
begin at 300 p.m. which is absolutely
begin at 300 p.m. which is absolutely
atrociously late for
me so we'll have to make the next four
me so we'll have to make the next four
hours of death count time to lock
in ooh
oh gross oh
oh gross oh
no uh I just remember this is not going
no uh I just remember this is not going
to
to
work you can't have memory views as
work you can't have memory views as
elements of structs
is there a more
recent is there a more recent way to do
recent is there a more recent way to do
this
this
did they get a way around this maybe
I don't think you can do this
I don't think you can do this
[ __ ] I mean I can double
check let's open the
test e
C struct cannot be meem
C struct cannot be meem
yeah okay well that's
disgusting can I see type defr struct
disgusting can I see type defr struct
does it work then
nope [ __ ]
nope [ __ ]
well yeah that's the thing that we can't
well yeah that's the thing that we can't
do Ah that's so
do Ah that's so
bad that is so
bad
H problem comes from uninitialized
H problem comes from uninitialized
memory scon lack of Constructors for
memory scon lack of Constructors for
primitive
c
yeah so we can't do this
either I remember now that this is I
either I remember now that this is I
tried to do this before and this is why
tried to do this before and this is why
I got stuck as well
I got stuck as well
so you are in a sense locked to CDE uh C
so you are in a sense locked to CDE uh C
def classes instead of structs because
def classes instead of structs because
uh you need memory views that's like
uh you need memory views that's like
cython killer
cython killer
feature and in order to get memory
feature and in order to get memory
views you need to
views you need to
have you need to have uh a class but
have you need to have uh a class but
then if you have a
class I me I could look up what skills
class I me I could look up what skills
we actually need right let me
we actually need right let me
see what the heck do these skills do
see what the heck do these skills do
that's actually like
using self. attack self dot update
self do
self do
[Music]
[Music]
pull I
mean us like get entity scan
mean us like get entity scan
targets uses a bunch of stuff
honestly it'd be pretty hard to decouple
this I really do not like that at
all e
and I'm doing all of this ultimately to
and I'm doing all of this ultimately to
save what conditionals at the
bottom it's a pretty big code quality
bottom it's a pretty big code quality
thing
though I mean this is just really gross
though I mean this is just really gross
not being able to
not being able to
store a pointer or reference to a
function nope you can't pie capsule
function nope you can't pie capsule
it then you lose the scon
performance whole point of this right
yeah these need like arbitrary
functions and games are always such like
functions and games are always such like
Global State Hogs
right no way to store point
it's really just gross that a cdef
it's really just gross that a cdef
method is treated as a python
method is treated as a python
object because of the
self that's just really gross
like you can't put these things into any
like you can't put these things into any
c data structure either I can't even put
c data structure either I can't even put
them into a list or anything
what other logic is there in here
I mean yeah there're like minor
I mean yeah there're like minor
simplifications in here but this is the
simplifications in here but this is the
worst thing right
worst thing right
here it really
is e
maybe I keep going on this weird void
maybe I keep going on this weird void
star thing
because okay let me let me go to this
because okay let me let me go to this
test and see if I can make it work in
test and see if I can make it work in
here
here
so what we're going to do
so what we're going to do
is we're going to go down here
is we're going to go down here
[Music]
so C def
so C def
um
method C struct player
method C struct player
C Class some
C Class some
Class A
okay class
Al some
method see
method see
type
type
death
in some
in some
method this should just be
some
some
funk some
funk Funk
funk Funk
Funk then we do
Funk then we do
return Funk of object
uh C test we have test
class I'm trying to see if this will if
class I'm trying to see if this will if
I can work around this
here so we'll do test
class so what does this tell me
class so what does this tell me
pointer base
pointer base
type cannot be a python
object it's so it does not like that
object it's so it does not like that
this is some
class so I this will be a void star I
class so I this will be a void star I
guess right
guess right
what does that what happens
then now this is
valid this says that it can't be
valid this says that it can't be
a
really pointer base type cannot be a
really pointer base type cannot be a
python object
oh yeah that's true
okay some
class cannot convert python object to uh
class cannot convert python object to uh
void star okay
so some funk
I think I actually have it and I was
I think I actually have it and I was
just wrong I just think I have I think I
just wrong I just think I have I think I
actually have it
here and I was just being
dumb where did it print the output
dumb where did it print the output
Trace back cannot import test memory
Trace back cannot import test memory
view
oh okay I actually have it so I was
oh okay I actually have it so I was
being stupid um you can't specify a
being stupid um you can't specify a
pointer to a uh C Environ like a c def
pointer to a uh C Environ like a c def
class but you can can actually pass the
class but you can can actually pass the
class itself um which is a
class itself um which is a
reference
reference
right I
right I
think let me
see
see
yeah let me just double check
here so if I give you a pointer that has
here so if I give you a pointer that has
like a class like this some class and
like a class like this some class and
then like int X or
then like int X or
whatever and I say some class
like and it'll do like
like and it'll do like
self uh
self uh
in X and then I'll do like return
in X and then I'll do like return
object. X Plus
object. X Plus
X okay
X okay
so and then we do
struct
struct
struct and then this is I think this is
struct and then this is I think this is
going to be the minimal
going to be the minimal
example some
funk
funk
Funk and so what we'll do is
Funk
Funk
okay no not some funk Funk some struct s
so now we have
so now we have
some object is going to be some class of
some object is going to be some class of
10 and then we
10 and then we
print
print
OB
dot five
okay let's see what's wrong
here this
is void star I don't think we need to do
that yeah there okay I got it so the
that yeah there okay I got it so the
error that I was making and thinking
error that I was making and thinking
that all this didn't work is uh you
that all this didn't work is uh you
can't actually pass a pointer to the
can't actually pass a pointer to the
class but you don't need to because
class but you don't need to because
you're already passing it by reference
you're already passing it by reference
anyways um you know you already have a
anyways um you know you already have a
reference like this self environment
reference like this self environment
classes are passed by reference by
classes are passed by reference by
default so you don't need to pass
default so you don't need to pass
strs are passed by value so you need to
strs are passed by value so you need to
pass them as pointers classes are passed
pass them as pointers classes are passed
by reference so you don't need to pass a
by reference so you don't need to pass a
pointer because it's already a pointer
pointer because it's already a pointer
um so here's the minimal prototype of
um so here's the minimal prototype of
what is going to make this whole entire
what is going to make this whole entire
thing work you're just going to define a
thing work you're just going to define a
c type up here we'll Define the function
c type up here we'll Define the function
type to the struct right we'll have the
type to the struct right we'll have the
class that will have the struct we can
class that will have the struct we can
give the method to the struct and then
give the method to the struct and then
this works we have a working minimal
this works we have a working minimal
test so this has actually just saved us
test so this has actually just saved us
from having complete garbage code um
from having complete garbage code um
this is going to allow us to refactor
this is going to allow us to refactor
everything very nicely and even though
everything very nicely and even though
this took me like an hour and a half of
this took me like an hour and a half of
screwing around uh this is going to be
screwing around uh this is going to be
very well worth it for the Simplicity
very well worth it for the Simplicity
and uh code and code quality improvement
and uh code and code quality improvement
that this will bring this will allow us
that this will bring this will allow us
to cut out like an additional 50 lines
to cut out like an additional 50 lines
of garbage code as
well and I am all for cutting out
well and I am all for cutting out
garbage code
I'm surprised the wizard article has not
I'm surprised the wizard article has not
blown up yet it's like the exact type of
blown up yet it's like the exact type of
clickbait that people usually like but
clickbait that people usually like but
hey what do I know
right I think this is a substantially
right I think this is a substantially
better article than my last one cuz my
better article than my last one cuz my
last one was like intentionally like my
last one was like intentionally like my
last one was kind of intentionally
last one was kind of intentionally
stupid this one's actually been kind of
stupid this one's actually been kind of
useful but hey you
useful but hey you
know what can I say you got to make
know what can I say you got to make
worse content if you want it to blow
up it's always the case that stuff I'm
up it's always the case that stuff I'm
proud of like nobody sees and then stuff
proud of like nobody sees and then stuff
that I write in three seconds because
that I write in three seconds because
it's stupid is like I mean to be fair
it's stupid is like I mean to be fair
this was a really low effort article as
this was a really low effort article as
well but this is a thing that's
well but this is a thing that's
consistently come up over like the last
consistently come up over like the last
many many years and it's so funny like
many many years and it's so funny like
this the argument in that article just
this the argument in that article just
like
it like fuzzes the hell out of uh out of
it like fuzzes the hell out of uh out of
AI researchers is the best way I can say
AI researchers is the best way I can say
it it's like you want to break in AI
it it's like you want to break in AI
researcher make this
researcher make this
[Laughter]
argument how to was a
researcher okay so the one character bug
researcher okay so the one character bug
as
as
always
right and then we get to
right and then we get to
do
do
scale
scale
q q e
it's good that's pretty much how all
it's good that's pretty much how all
progress and technology
progress and technology
is
yeah I thought the article was funny
yeah I thought the article was funny
because like this was legitimately a
because like this was legitimately a
thing I did at open AI is like people
thing I did at open AI is like people
would be at lunch like shooting the [ __ ]
would be at lunch like shooting the [ __ ]
about like AGI and like different
about like AGI and like different
definitions and stuff and
like this one would like just break
like this one would like just break
people they just be like what but and
people they just be like what but and
there's like there's no counterargument
there's like there's no counterargument
to it
to it
either it's one of those really
either it's one of those really
obnoxious arguments that's designed to
obnoxious arguments that's designed to
just not have a way to counter
it valid base type
why is this
invalid uh
oh invalid base type for memory view
oh invalid base type for memory view
slice [ __ ] so are you telling me that I
slice [ __ ] so are you telling me that I
can't put these in a memory view if
can't put these in a memory view if
they've got skills on
they've got skills on
them that can't be right can it
that's so obnoxious what the hell you
that's so obnoxious what the hell you
gota be kidding
me
me
wow dude that's so
obnoxious I mean I can still make it
obnoxious I mean I can still make it
work it's just substantially more
work it's just substantially more
obnoxious right
see you
Noah wait did it not work
still
wait it works now right yeah so it
wait it works now right yeah so it
doesn't work if you put skills
in
e e
does this compile
cannot
cannot
convert python object to skill
oh because it's not
defined support hook heel and stun it
is
is
and cannot convert
and cannot convert
Undeclared oh yeah
loadouts oh you don't have to initialize
loadouts oh you don't have to initialize
it
here because it's a fix size array
here because it's a fix size array
yeah
perfect e
okay you don't need this it's already a
pointer
nice and then we just assign the
nice and then we just assign the
loadouts
that's not
that's not
bad you have to store them separately
bad you have to store them separately
from the the player struct but they
from the the player struct but they
still go in a
struct and now what we get to do
struct and now what we get to do
is we add this load out thing at top
isn't that so much
isn't that so much
nicer we basically we just get to get
nicer we basically we just get to get
rid of all of this checking garbage
rid of all of this checking garbage
and now we just get to
and now we just get to
say to use the load out of the specific
say to use the load out of the specific
player it's very very
nice and we'll do uh use Q equals true
nice and we'll do uh use Q equals true
let's do this for testing purposes
oops not train we need
eval let's use our nice
model seg vault
really we seg
Fon what do I do for scan
targets load out star load outs of
targets load out star load outs of
right why would that seg
fault Loadout equals self.
fault Loadout equals self.
loadouts of
loadouts of
PID and then you define the skills
yeah I mean I would guess if
um print load out. Q
maybe cannot convert
maybe cannot convert
skill to python
skill to python
object right
so I guess it would be if it's not
so I guess it would be if it's not
updating did I use did I pass by value
updating did I use did I pass by value
instead by
instead by
mistake it shouldn't have
mistake it shouldn't have
right CU scan targets
was Target is nearest scan Target
h
seg FS before we even get down to here
seg FS before we even get down to here
it looks like
say here
oops okay so loading zero and then we
oops okay so loading zero and then we
get like
faults which is very bizarre because we
faults which is very bizarre because we
should be able to
do load out. Q right
is it a skill pointer I guess it's a
is it a skill pointer I guess it's a
function
pointer no wait that's not right is
it skill
pointer it's supposed to just be a
pointer it's supposed to just be a
function not a function pointer right
me I can try
this is why we don't do this
this is why we don't do this
normally because when you get into like
normally because when you get into like
the
the
address Madness like the syntax just
address Madness like the syntax just
becomes a total
pain and you really really have to think
pain and you really really have to think
um like obnoxiously deeply about what
um like obnoxiously deeply about what
you're passing around
come on it's a function just pass
it like yeah I know it needs to be able
it like yeah I know it needs to be able
to allocate on the stack and all that
but calling nonfunction type skill
oops
how about
this nonfunction type
skill yeah I don't think any of this is
skill yeah I don't think any of this is
right
load out is going to be self. loadouts
load out is going to be self. loadouts
of
PID seg fults when you assign
okay so immediately it just it's second
okay so immediately it just it's second
right
right
here why would that happen
h
I had this tested
right that this
worked and you just
worked and you just
made
destruct you assigned it
you have to like make this struct
you have to like make this struct
because it's
I just do this
maybe cannot assign type load out to
maybe cannot assign type load out to
load out
load out
star well that's
good taking the address of
non load out star load out
you do
this cannot assign
type Okay so self. Loadout of PID is
type Okay so self. Loadout of PID is
equal to load
equal to load
out and load out is self. Loadout of
out and load out is self. Loadout of
PID can I do
that it really really bothers me how
that it really really bothers me how
like you can
like you can
accidentally pass Ship by value without
accidentally pass Ship by value without
realizing
realizing
it and not a sign type
cannot assign type load
out I don't know why you wouldn't be
out I don't know why you wouldn't be
able to do this do q w and E
maybe you can maybe it's just like the
maybe you can maybe it's just like the
thing I'm assigning it to load out. Q is
thing I'm assigning it to load out. Q is
null if I do that does that do
anything let's see if it gets to
anything let's see if it gets to
assigning Q
okay so you literally you can't even you
okay so you literally you can't even you
can't even access
can't even access
Q here
this should be allocating me an array I
this should be allocating me an array I
shouldn't have to do this this should be
shouldn't have to do this this should be
allocating me an array of structs on the
allocating me an array of structs on the
stack
right load out loadouts of 10 I have an
right load out loadouts of 10 I have an
array of 10 loadouts
array of 10 loadouts
right okay
so I shouldn't have to do jack [ __ ] with
so I shouldn't have to do jack [ __ ] with
these I should just be able to access
these I should just be able to access
like it should just there's no way that
like it should just there's no way that
should segol essentially that should not
should segol essentially that should not
be
possible maybe it does need to be a
possible maybe it does need to be a
skill pointer
well this is already a skill Star
well this is already a skill Star
right star
skill okay what if I do
skill okay what if I do
this
this
oops what happens if I
oops what happens if I
say I'm going to have a pointer to a
skill okay so the first error
skill okay so the first error
is up here
is up here
right 10%
canot assign type void star
I think that did it
that's like incredibly obnoxious and
that's like incredibly obnoxious and
almost not worth it
it's just like disgusting that you have
it's just like disgusting that you have
to know the signature of the damn thing
to know the signature of the damn thing
I understand why it's the number of
I understand why it's the number of
bites to put on the stack but like
still I mean technically if it were
still I mean technically if it were
always like a void star star you
always like a void star star you
wouldn't have to put the args on the
wouldn't have to put the args on the
stack maybe I don't know
there's got to be a way to do that fast
okay cannot assign type Loadout to
okay cannot assign type Loadout to
Loadout star we should not need to do
Loadout star we should not need to do
this anymore it should just
this anymore it should just
work and
work and
then Q
then Q
14 nonfunction type skill
can you star this how do I get the uh
can you star this how do I get the uh
how do i d reference
this can I just star it like this
hey
hey
linky
welcome I think it's load out. I think
welcome I think it's load out. I think
the syntax is like this or whatever in
the syntax is like this or whatever in
syon isn't
it yeah I forgot it's this really weird
it yeah I forgot it's this really weird
syntax
it's still freaking seg fols are you
it's still freaking seg fols are you
kidding
me there's actually no way this should
me there's actually no way this should
be freaking seg fting
okay well I'm not going to do this then
okay well I'm not going to do this then
we're going to
do
e e
we're just going to make this
array I got to go learn more about how
array I got to go learn more about how
all these freaking function pointers
all these freaking function pointers
work
work
if I'm going to keep doing all this like
if I'm going to keep doing all this like
Sim
development this shouldn't be that hard
development this shouldn't be that hard
but then the thing is like I'm not even
but then the thing is like I'm not even
writing in C so I don't even know if
writing in C so I don't even know if
this is like scyon Jank or what I guess
this is like scyon Jank or what I guess
this is where you just hit the
this is where you just hit the
limitations right
calling nonfunction type skill skill is
calling nonfunction type skill skill is
a function type what the
hell cannot assign
hell cannot assign
type void star
now you should be able to assign this I
now you should be able to assign this I
have something wrong I just tested this
have something wrong I just tested this
I have the C test for
this star some
this star some
funk takes a class and then the int
funk takes a class and then the int
right then you can just do s.
right then you can just do s.
buunk FK equal self. some
method C type def some
funk void star skill
does this have to be
a is this just
a oh that was it okay
cool so this actually looks like it runs
cool so this actually looks like it runs
maybe invalid input tensor shape
what I don't know how this
what I don't know how this
happened would be this
okay so I figured I think I figured it
okay so I figured I think I figured it
out yeah okay I figured it
out yeah okay I figured it
out so the way to do this was you could
out so the way to do this was you could
make
make
a you can have the skills
here uh I'm sure there is is's a way to
here uh I'm sure there is is's a way to
put these into a
struct but this is fine I'm I'm sick of
struct but this is fine I'm I'm sick of
this this is
this this is
fine at least this is good enough for
fine at least this is good enough for
now so now we can actually start uh this
now so now we can actually start uh this
refactor properly since we have that
refactor properly since we have that
that was the main obnoxious thing
we may still want to make like skill
we may still want to make like skill
struck or
struck or
something
something
but I don't
know I think probably
know I think probably
not right because the like the effects
not right because the like the effects
are too
varied is this Project's goal search yes
varied is this Project's goal search yes
this is
this is
a this is I can show you this hold
on oops I'll pull it up on my Twitter I
on oops I'll pull it up on my Twitter I
think I overwrote the
file so this is a million plus steps per
file so this is a million plus steps per
second uh single thread MOA like
second uh single thread MOA like
miniature Dota or League of
miniature Dota or League of
Legends um this is just the highle
Legends um this is just the highle
render mode there's also a human
render mode there's also a human
playable version that renders a little
playable version that renders a little
bit more reasonably and the goal of this
bit more reasonably and the goal of this
is to have just a really high
is to have just a really high
performance complicated game simulator
performance complicated game simulator
that we can use for training
that we can use for training
reinforcement learning agents so this is
reinforcement learning agents so this is
only two weeks into this project we
only two weeks into this project we
already have pretty much all of the
already have pretty much all of the
basic elements in place and now I am uh
basic elements in place and now I am uh
trying to clean everything up so that we
trying to clean everything up so that we
can start really training some good
can start really training some good
models CU thus far we have some agents
models CU thus far we have some agents
that run mid they'll fight a little bit
that run mid they'll fight a little bit
but that's about it so cleaning it up
but that's about it so cleaning it up
trying to Auto balance it trying to do a
trying to Auto balance it trying to do a
bunch of stuff there and the hope is
bunch of stuff there and the hope is
that this will provide a really nice
that this will provide a really nice
resource for the reinforcement learning
resource for the reinforcement learning
community to be running
community to be running
uh interesting uh interesting
uh interesting uh interesting
experiments very very
quickly
quickly
welcome welcome as well
and so far it's been going very well
and so far it's been going very well
this project it has very very nice
this project it has very very nice
training
curves and we go back to the refactor of
this sure welcome welcome uh welcome to
this sure welcome welcome uh welcome to
the stream
the stream
um okay okay
um okay okay
so the lane assignments are a little
so the lane assignments are a little
janky
here where's this function right
here where's this function right
now this is in
now this is in
reset this should not have to be in
reset this should not have to be in
reset this should be in
reset this should be in
anit so what we're going to want to do
anit so what we're going to want to do
is we're going to want to clean up the
is we're going to want to clean up the
anit so that we have faster and more
anit so that we have faster and more
consistent resets
right
right
yes
yes
and do we want to assign Mana cost
and do we want to assign Mana cost
somewhere to skills do we want to assign
somewhere to skills do we want to assign
I'm trying to think of the data
I'm trying to think of the data
structure we want for these skills
structure we want for these skills
like I could just leave them as oneoff
functions could do
that just leave them as a big block of
that just leave them as a big block of
uh function
uh function
implementations how do we handle scaling
implementations how do we handle scaling
then
[Music]
it would be kind of nice to have a
it would be kind of nice to have a
skill data struct
right because then you could have a
right because then you could have a
function associated with each
skill that might be good
I don't know if I like that so much
I don't know if I like that so much
though
because it kind of separates all the
because it kind of separates all the
code around everywhere right
because then you have the struct
because then you have the struct
format you got to make the struct you
format you got to make the struct you
got to bind
got to bind
it it kind of scatters around all the
it it kind of scatters around all the
data
right so I think that the benefit that
right so I think that the benefit that
that structure gives
that structure gives
you is
outweighed yeah so essentially what I
outweighed yeah so essentially what I
was trying to figure out is I I was
was trying to figure out is I I was
trying to figure out if there's a way
trying to figure out if there's a way
that we could take all the abilities in
that we could take all the abilities in
the game and like cleanly have them as a
the game and like cleanly have them as a
bunch of strs or
bunch of strs or
something but the problem is there's not
something but the problem is there's not
a a clean way to like
a a clean way to like
Define the skill with each struct like
that
so I mean maybe there is but there's
so I mean maybe there is but there's
definitely not a simple way of doing
definitely not a simple way of doing
that
right so I think absent something that
right so I think absent something that
would require substantially more
would require substantially more
knowledge of how this low the lowlevel
knowledge of how this low the lowlevel
side of this works I think we actually
side of this works I think we actually
have a pretty decent and succinct way of
have a pretty decent and succinct way of
doing
doing
this a lot of hardcoded crap but
this a lot of hardcoded crap but
um it's going to be able to be made very
um it's going to be able to be made very
simple at the least is the important
thing so let's take all this garbage
here this needs to go
to the
to the
reset I mean not the reset this needs to
reset I mean not the reset this needs to
go into the uh the init
go into the uh the init
method e
I don't like this loop I think we're
I don't like this loop I think we're
just going to hard
code because there's not really a lot
code because there's not really a lot
that we can
reuse well I suppose actually that we
reuse well I suppose actually that we
could
there kind of is
right we can at least reuse over team
maybe if we don't do Lane
assignments with the scripted Bots
well we can probably still figure it out
well we can probably still figure it out
yeah let's do for team in range of
yeah let's do for team in range of
two we'll
do get ID
was it team
and and then this Lane will be
okay e
correct suggestion
here I like how it just like
quietly oh I never assigned Lane to this
quietly oh I never assigned Lane to this
one that's funny
tank and
carry okay so now we can get rid of this
carry okay so now we can get rid of this
giant blob of stuff potentially
that's right isn't it it's just plus
that's right isn't it it's just plus
three
burst yep that's good so already just
burst yep that's good so already just
like that we have all of the players
initialized they have all their skills
initialized and we only had to hardcode
initialized and we only had to hardcode
basically the amount that we would have
basically the amount that we would have
to hardcode regardless right
technically we could cheat a few things
technically we could cheat a few things
here but I think that this
here but I think that this
is pretty good
is pretty good
overall especially for
starting so from here um
hang on I'll be right
back e
okay I got to do one thing real quick
all
right so this Waypoint logic
is it would be very nice if we could
is it would be very nice if we could
just clean up the way that these are
just clean up the way that these are
loaded such that
loaded such that
they're we don't have all this like file
they're we don't have all this like file
pars logic in
pars logic in
here let me see what that would
here let me see what that would
take got like good
take got like good
bad top mid and
Bot basically I just have to save it in
Bot basically I just have to save it in
this format right
three times
three times
team plus Lane yeah so if I went just if
team plus Lane yeah so if I went just if
I just uh went into the the save
I just uh went into the the save
logic
logic
and I mean same thing with the towers
right is that better though
I mean I really do kind of like the idea
of shortening all of
of shortening all of
this I mean that's a lot of code we
this I mean that's a lot of code we
would
would
save that's like a good 100 lines cut
save that's like a good 100 lines cut
off of the project nearly maybe like 70
and all I would have to do is in the
and all I would have to do is in the
save code I basically I write this the
save code I basically I write this the
reverse of this in the save
code and then I can just get this from
code and then I can just get this from
the data and annotate it a little
bit
yeah okay so now I know I can do that is
yeah okay so now I know I can do that is
that the highest priority thing that I
that the highest priority thing that I
could be doing right now
could be doing right now
though what other stuff do I want to
though what other stuff do I want to
clean up in
here I might do something cheeky with
here I might do something cheeky with
this
I might get rid of this
function yeah there's no reason to have
function yeah there's no reason to have
this function that gets called once
this function that gets called once
right
the spawn Tower function should go we
the spawn Tower function should go we
should reorganize stuff a little
should reorganize stuff a little
bit I want the all the spawn functions
bit I want the all the spawn functions
to go
together move to move
near
neutral there are a number of things
neutral there are a number of things
that can definitely be proved
that can definitely be proved
here these towers for sure
what order did I uh what order am I
what order did I uh what order am I
currently placing the
towers Knight thanks for dropping
by so what order is this currently being
by so what order is this currently being
created
okay so it looks like we're doing them
okay so it looks like we're doing them
in order of top middle bottom and then
in order of top middle bottom and then
by
tier I think if I just I can still
tier I think if I just I can still
record these in a sane format I don't
record these in a sane format I don't
have to go straight to a numpy array but
have to go straight to a numpy array but
like if I just have this as one Loop
like if I just have this as one Loop
that's like P in
that's like P in
towers that would be nice I can code the
towers that would be nice I can code the
ancient as just a tower
ancient as just a tower
basically
basically
right same thing with all the
right same thing with all the
camps let's go and do
camps let's go and do
that they need to know team tier yeah
that they need to know team tier yeah
let's go let's go do that
there's no point in having uh all of
there's no point in having uh all of
this data in like this Jank
this data in like this Jank
format hello is mid Rush still a problem
format hello is mid Rush still a problem
I've seen only first 30 minutes maybe
I've seen only first 30 minutes maybe
they Rush mid for balance to
they Rush mid for balance to
invulnerable so we were actually that
invulnerable so we were actually that
was the goal was to get them to just
was the goal was to get them to just
rush mid initially we were using that as
rush mid initially we were using that as
a debug task and there was just a bug in
a debug task and there was just a bug in
an there was a major bug in the
an there was a major bug in the
environment that was preventing the
environment that was preventing the
agents from learning anything right so
agents from learning anything right so
this was like supposed to be an easy
this was like supposed to be an easy
debug task and now what we're doing is
debug task and now what we're doing is
we're training the agents to learn uh
we're training the agents to learn uh
more comprehensive objectives and the
more comprehensive objectives and the
model that we trained overnight mostly
model that we trained overnight mostly
rushes mid but actually will do uh will
rushes mid but actually will do uh will
fight some NPCs in the jungle and stuff
fight some NPCs in the jungle and stuff
and the hope is that as I clean this up
and the hope is that as I clean this up
more and I add back all the features I
more and I add back all the features I
add in the usage of skills I fix bugs
add in the usage of skills I fix bugs
right I make improvements there and I
right I make improvements there and I
hook up some of the automated training
hook up some of the automated training
methods that I have the models are just
methods that I have the models are just
going to keep it getting better and
going to keep it getting better and
better and then they're just going to
better and then they're just going to
discover better strategies on their own
discover better strategies on their own
um it is completely possible to your
um it is completely possible to your
comment it's completely possible that
comment it's completely possible that
this is for balance reasons
this is for balance reasons
um but part of what I'm doing right now
um but part of what I'm doing right now
is cleaning the game code up so that it
is cleaning the game code up so that it
is easier to find and balance right and
is easier to find and balance right and
also also we're going to be exposing
also also we're going to be exposing
more log metrics and stuff like that
more log metrics and stuff like that
that's what we're doing for the most
that's what we're doing for the most
part
today that helps to understand yeah so I
today that helps to understand yeah so I
mean a good thing to a good way to think
mean a good thing to a good way to think
about reinforcement learning is
about reinforcement learning is
like you have a you have a simulator
like you have a you have a simulator
right in which the agent can do anything
right in which the agent can do anything
and then you have a reward function
and then you have a reward function
which is a trail of
which is a trail of
breadcrumbs for how they should interact
breadcrumbs for how they should interact
with the simulator right you kind of
with the simulator right you kind of
give them hints as to what they should
give them hints as to what they should
do you can tell them like hey you get a
do you can tell them like hey you get a
reward for getting XP you get a big
reward for getting XP you get a big
reward for K uh killing Towers right you
reward for K uh killing Towers right you
get a medium reward for defeating an
get a medium reward for defeating an
enemy hero stuff like that and if the
enemy hero stuff like that and if the
breadcrumb trail is sensible enough
breadcrumb trail is sensible enough
right if the breadcrumb trail makes
right if the breadcrumb trail makes
enough sense and your environment is
enough sense and your environment is
correct correct and your reinforcement
correct correct and your reinforcement
learning is run at substantial scale and
learning is run at substantial scale and
is tuned correctly it should just learn
is tuned correctly it should just learn
how to do all of that um now if your
how to do all of that um now if your
simulator has bugs in it that make it uh
simulator has bugs in it that make it uh
a problem that doesn't make sense then
a problem that doesn't make sense then
it's not going to learn if you have a
it's not going to learn if you have a
bad reward function that's essentially
bad reward function that's essentially
like one breadcrumb here and one
like one breadcrumb here and one
breadcrumb on the other side of a
breadcrumb on the other side of a
mountain they're not going to be able to
mountain they're not going to be able to
figure out how to do that that's like
figure out how to do that that's like
the high level of
the high level of
it have you ever dealt with CV yeah I
it have you ever dealt with CV yeah I
started in uh I started research in NL
started in uh I started research in NL
LP and then spent like a year year and a
LP and then spent like a year year and a
half in CV after that it's all pretty
half in CV after that it's all pretty
much the same these days um I don't know
much the same these days um I don't know
specifics of like diffusion models and
specifics of like diffusion models and
stuff but in general like high level
stuff but in general like high level
stuff
sure I have one cool Vision paper I can
sure I have one cool Vision paper I can
link
this is not amazing work it's from early
this is not amazing work it's from early
on and uh this is from when I was like
on and uh this is from when I was like
sophomore undergrad
but is it it's jus
oh I actually have a couple of these
oh I actually have a couple of these
papers I forgot I did this meme paper
papers I forgot I did this meme paper
where I trained Gans on other
where I trained Gans on other
Gans but like here this is
on DTM
CV yeah that's like the one paper this
CV yeah that's like the one paper this
one was really funny I did this one in
one was really funny I did this one in
like three days
like three days
this was kind of cool though so I
this was kind of cool though so I
trained ganss like to I trained a
trained ganss like to I trained a
generative model on the weights of other
generative model on the weights of other
generative models and then like I ended
generative models and then like I ended
up getting a distribution over
up getting a distribution over
generative models Each of which was a
generative models Each of which was a
generative model it was really
generative model it was really
wonky I like trained this thing on my
wonky I like trained this thing on my
laptop as well and it still kind of
laptop as well and it still kind of
worked which was really
cool like these are the samples from a
cool like these are the samples from a
single model and then these are all the
single model and then these are all the
different models
different models
mod it was pretty
cool yeah I don't know I did some funny
stuff deformable template
matching I didn't do deform mile
matching I didn't do deform mile
template
template
matching I did uh like self I did like
matching I did uh like self I did like
dynamically assembled differentiable
dynamically assembled differentiable
Vision like deep Network architectures
Vision like deep Network architectures
it was weird I did some weird
stuff e
a senior student this year trying to get
a senior student this year trying to get
into CV there are too many things to
into CV there are too many things to
learn it's hard to do something in this
learn it's hard to do something in this
yeah it takes a lot of time especially
yeah it takes a lot of time especially
when you're starting it's like it it
when you're starting it's like it it
takes a lot of time you got to read a
takes a lot of time you got to read a
bunch of papers you got to implement a
bunch of papers you got to implement a
bunch of stuff you got to get
bunch of stuff you got to get
comfortable with a bunch of tensor
comfortable with a bunch of tensor
[ __ ] as the name of the
game I mean it does get better though it
game I mean it does get better though it
does get to the point where you more or
does get to the point where you more or
less understand what's going on and then
less understand what's going on and then
it's just like a question of like well
it's just like a question of like well
which freaking architecture or data
which freaking architecture or data
thing or whatever is actually going to
thing or whatever is actually going to
make a difference next
right see DOTA
Tower probably open this file up to see
Tower probably open this file up to see
what's in it right
oof
should actually invest in this
should actually invest in this
processing code a little
bit the only thing what I should do is
working that guy is
wait what's trigger multiple oh Camp
wait what's trigger multiple oh Camp
name
I
see okay we got the team name
this is top left
X e
TM X and
TM X and
Y this is
Y this is
good so we save the neutral camp in an
good so we save the neutral camp in an
easy
easy
format we now go to the towers
really tired and go to sleep good
really tired and go to sleep good
night catch you around
one e
we just record the ancient as tier five
right this will get the data into a much
right this will get the data into a much
better format for us
this is we're just going to save the for
this is we're just going to save the for
does the tier five
makes sense right and um we should also
makes sense right and um we should also
do the uh the health and the Damage
do the uh the health and the Damage
values Maybe
well let's actually see if it's encoded
well let's actually see if it's encoded
in here there we could literally just
in here there we could literally just
have the data in here right
oh yeah look at
oh yeah look at
that it has uh it has all the values
that's really nice
right two health
is that
Health sub of
Health okay
Health okay
Oops why thinks we're doing creeps now
Health
Health
damage nice and
easy can even get armor and stuff if we
easy can even get armor and stuff if we
want it
want it
we're going to have to include this file
we're going to have to include this file
somewhere so that we can easily redo the
somewhere so that we can easily redo the
pre-processing I'm sure we handle that
pre-processing I'm sure we handle that
later
though the
though the
heck I've never seen this happen before
heck I've never seen this happen before
my straw kind of just disintegrated
uh does this give you any data about the
neutrals hold on this may or may not
neutrals hold on this may or may not
give me any data about the neutrals
give me any data about the neutrals
right
that's kind of
weird
weird
uh is there
uh is there
no DOTA healer fountain
no DOTA healer fountain
tree
wait oh
wait oh
that's really cool we just have a giant
that's really cool we just have a giant
list of Tree
list of Tree
positions we might be able to include
those neutral spawner
I don't
I don't
see I would like to be able to extract
see I would like to be able to extract
the HP
values but I don't see anywhere in
values but I don't see anywhere in
here that would
here that would
have
have
MPC filler
what's
what's
this armor 10 Health
this armor 10 Health
1,000 region
zero this seems like something
else
Watchtower no there's nothing in here
Watchtower no there's nothing in here
that has the entity data that we
need well that's somewhat
need well that's somewhat
unfortunate maybe we'll be able to pull
unfortunate maybe we'll be able to pull
that data later but for
that data later but for
now uh we can do
this yeah
that's really
obnoxious well what else do we need we
obnoxious well what else do we need we
just need the
um wait save data spawner key is this
um wait save data spawner key is this
something that we
use what did we use from here
I do not know what we used from here
bad
bad
bottom oh okay this is just uh
the yeah so these are the Waypoint this
the yeah so these are the Waypoint this
is the the Waypoint data I see that we
is the the Waypoint data I see that we
were trying to figure out
so e
format is not even that
format is not even that
bad I think that we just want
to we want to just avoid having to do
to we want to just avoid having to do
the keys with this thing I think right
the keys with this thing I think right
so
half
key this is going to be way points of
key this is going to be way points of
path
path
key this is going to be way
key this is going to be way
Points Way points
x y
okay now we just have to uh order a
okay now we just have to uh order a
points
points
clean so we just go hardcode this I
clean so we just go hardcode this I
think
think
um save data
um save data
waypoints is going to be equal
waypoints is going to be equal
to way points
P NPC DOTA
P NPC DOTA
spawner good
spawner good
top
there and that's basically all the data
there and that's basically all the data
that we wanted I
think apparently this is not the the
name uh right the
name uh right the
fort the fort apparently does not do
damage for does zero towers do the
damage for does zero towers do the
damage all right so now we have our
damage all right so now we have our
process
process
data we're just going to uh copy
data we're just going to uh copy
process
process
yaml I don't even know if I want it in a
yaml I don't even know if I want it in a
yaml though to be
honest
forb data. yl
yeah DayDay that
yaml okay so now that we have this in
yaml okay so now that we have this in
data
yaml we can load it into
here and uh it should be substantially
here and uh it should be substantially
simpler
simpler
now so way
points we simply do
points we simply do
four way points in in
range
six way
points we do spawn
and we do
um
or data
so for
so for
I
numerate and we can just write arbitrary
numerate and we can just write arbitrary
python here because this is on a knit
anyways arguably this could go in the uh
anyways arguably this could go in the uh
thep
thep
file doesn't really matter either
way kind of nicer to have it
here makes it like marginally easier to
here makes it like marginally easier to
Port later I
guess one plus one
so that's substantially simpler
right
okay now
okay now
uh this is also way way
uh this is also way way
easier we simply
do this is a list this is a list
these Tower spawns are
these Tower spawns are
weird I don't like
weird I don't like
this the way that this is
I think I would rather just set the
I think I would rather just set the
Tower data here
Tower data here
right because we have spawn ax even with
right because we have spawn ax even with
like the being able to pull towers
like the being able to pull towers
around bug I have a way around
that yeah this is going to be a lot a
that yeah this is going to be a lot a
lot cleaner we're we're not even going
lot cleaner we're we're not even going
to need we literally don't even need
to need we literally don't even need
Tower spawns that's how nice this is so
we don't need spawn Tower either but
we don't need spawn Tower either but
it's going to be very close to spawn
it's going to be very close to spawn
Tower so let's actually go grab
Tower so let's actually go grab
this this code
here doesn't tell you how much xp you
here doesn't tell you how much xp you
get on a
get on a
kill one slightly obnoxious thing I
kill one slightly obnoxious thing I
suppose
that could have been in there and I
that could have been in there and I
might have missed it
right okay so we
do get Tower of ey
do get Tower of ey
tower.
PID let's do idx
here Tower to entity
type we don't need move
type we don't need move
to but we have team
here tower.
spawn
x uh tower. Health
x uh tower. Health
right
right
Health tower.
Health tower.
damage Max
damage Max
help damage
uh and
uh and
then the XP on kill is slightly
then the XP on kill is slightly
obnoxious
obnoxious
right I think we can just do 800 times
tier that's pretty much
it and uh this is how much easier this
it and uh this is how much easier this
is going to make so when you spawn this
is going to make so when you spawn this
Tower you just
Tower you just
do x equal tower. spawn X spawn y health
do x equal tower. spawn X spawn y health
is Tower Max health
oh you actually even
oh you actually even
just spawn y spawn X
timer
timer
zero that's literally it I think this we
zero that's literally it I think this we
actually need to move this back
down because of how simple this is we no
down because of how simple this is we no
longer need any of this hardcoded
longer need any of this hardcoded
garbage
in fact we might even uh we might even
in fact we might even uh we might even
just remove that because it's so
just remove that because it's so
easy yeah this is rapidly rapidly
easy yeah this is rapidly rapidly
getting uh shorter and simpler this is
getting uh shorter and simpler this is
what we needed we just needed the data
what we needed we just needed the data
to be in an easier to read format this
to be in an easier to read format this
was the missing thing it was
was the missing thing it was
complicating this project it was just
complicating this project it was just
having the data in an obnoxious
having the data in an obnoxious
format so you know I'd rather write a
format so you know I'd rather write a
little bit of code to pull the data into
little bit of code to pull the data into
a good format uh have that code be like
a good format uh have that code be like
whatever it's a human readable format
whatever it's a human readable format
anyways
anyways
um and then the main environment code is
um and then the main environment code is
nice and
simple we no longer need this cool thing
simple we no longer need this cool thing
here is we literally don't need any of
here is we literally don't need any of
this anymore uh this all goes
away these neutral spawns these also get
away these neutral spawns these also get
to go away that's pretty cool right
spawn neutral we're going to do the
spawn neutral we're going to do the
pretty much the exact same thing we just
pretty much the exact same thing we just
did
before so
sh
okay so we have
okay so we have
PID is going to
PID is going to
be idx plus agents plus creeps not plus
be idx plus agents plus creeps not plus
towers and then we do neutral is going
towers and then we do neutral is going
to be get entity
PID
PID
PID be
PID uh you can't do
get I think get neutral is better here
get I think get neutral is better here
isn't
isn't
it how often do we use this
we don't really use
this I think it's still
cleaner not
cleaner not
really kind of have it hardcoded in two
really kind of have it hardcoded in two
places either way don't you we'll leave
places either way don't you we'll leave
it for now
um you get idx plus agents plus
um you get idx plus agents plus
creeps you get the neutral
creeps you get the neutral
here you assign the PID to be
this entity type is entity
this entity type is entity
neutral you do grid
neutral you do grid
ID
ID
neutral Max
neutral Max
Health they don't have Mana so it
Health they don't have Mana so it
doesn't
doesn't
matter Camp data and spawn X we
matter Camp data and spawn X we
get XP on kill we set we hard
get XP on kill we set we hard
set damage we hard
set damage we hard
set and that's it
we don't need any of this
we don't need any of this
anymore and then when we do spawn
anymore and then when we do spawn
neutral
hereid titty star neutral is get neutral
hereid titty star neutral is get neutral
of
of
idx no longer needs uh
idx no longer needs uh
PID Dy and DX still needed don't need
PID Dy and DX still needed don't need
this don't need this health is going to
this don't need this health is going to
be Max
be Max
Health don't need
Health don't need
team uh Team should be
hardcoded hold on we should make sure we
hardcoded hold on we should make sure we
uh we hardcoded
team this is not going to be included so
team this is not going to be included so
it's just going to be
two yeah this this is not going to be
two yeah this this is not going to be
included it's just going to be two
you set the timer on them as well why
you set the timer on them as well why
not
and then we move
and then we move
it okay that's way
it okay that's way
better we're going to have to do a fair
better we're going to have to do a fair
bit of uh debugging I'm sure with this
bit of uh debugging I'm sure with this
but
but
um it is getting cleaner we're back at
um it is getting cleaner we're back at
lines and we have almost everything
lines and we have almost everything
initialized
initialized
already just the way we need it to be
yeah that's basically all the data that
yeah that's basically all the data that
we needed
I should
I should
probably well hold on wait we have this
probably well hold on wait we have this
reset
here just spawn
player what's
player what's
this be
respawn wait respawn player
okay we don't need
this player.
this player.
health well no we don't even need any of
health well no we don't even need any of
this we just need player do X P equals z
right and then we need to respawn
right and then we need to respawn
basically the only thing we need to do
basically the only thing we need to do
player. level it's going to be one we
player. level it's going to be one we
respawn the
respawn the
player
respawn player
we also can put this in uh we can put
we also can put this in uh we can put
this up in the reset
right initialize
players e
okay
player. health is Max
Health move
Health move
speed
modifier there are kind of a bunch of
modifier there are kind of a bunch of
things here aren't
there then maybe we're going to want to
there then maybe we're going to want to
set separately
all
right it is pit
entity
entity
type yeah let's give it all the player.
type yeah let's give it all the player.
lane no we can't do
lane no we can't do
Lane player. level is
Lane player. level is
one well no this gets reset
one well no this gets reset
player damage
okay we'll have to iterate on this a
okay we'll have to iterate on this a
little bit
little bit
but we'll have some sort of like nice
but we'll have some sort of like nice
compact way to
compact way to
spawn or not to spawn but to initialize
spawn or not to spawn but to initialize
all the player
data
players basic attack timer
players basic attack timer
oh yeah and then move speed
right this also has to be loaded
in
good shoot I just realized it's uh it's
good shoot I just realized it's uh it's
5:00 p.m. and I forgot to make lunch I
5:00 p.m. and I forgot to make lunch I
will uh I'll be back in like 5 minutes
will uh I'll be back in like 5 minutes
and we will continue fixing all of this
and we will continue fixing all of this
stuff one
second
e
e
e
e
e
e
e
e
e
e
e
e e
whoops thank
you said a man can starve to death
you said a man can starve to death
eating
eating
salad um
salad um
we pretty much just have to reset level
we pretty much just have to reset level
when we reset the
end
end
yeah everything else is fine
that that wayo is zero
what get that out of
what get that out of
there okay
why we just need Y
X all right that's all
we no longer need spawn X and spawn y
we no longer need spawn X and spawn y
from
from
this right because we
this right because we
uh did we did we do that we did
right did we do this for the creeps as
right did we do this for the creeps as
well load creep way points
I guess we can keep this for the creeps
I guess we can keep this for the creeps
for
now yeah cuz the way that we spawn the
now yeah cuz the way that we spawn the
creeps is a little weird
so we have to actually
so we have to actually
add spawn
reap it's not bad
maybe we make this work now as
is generalization over abstraction
yeah exactly
I mean we've already cut off a decent
I mean we've already cut off a decent
chunk of code
chunk of code
right feels like we
right feels like we
have uh okay so I forgot that we have to
have uh okay so I forgot that we have to
add some
add some
entities to this but we can very easily
entities to this but we can very easily
do
that I
that I
think where do we see death stuff
C def entity start
player and just because for the
player and just because for the
semantics it's really nice to just have
semantics it's really nice to just have
um Star
um Star
Tower and C def star
neutral cannot convert entity star okay
cannot convert
cannot convert
entity star to python
entity star to python
object why this
one to.
one to.
tier did not
save cannot convert entity start what
save cannot convert entity start what
does it not have a
does it not have a
um probably doesn't have tier as a key
um probably doesn't have tier as a key
word
right
here respawn
player so this is entity
I'd really like this to be you know a
I'd really like this to be you know a
very
very
short concise code
project I mean just looking at the
project I mean just looking at the
length of the logic this has actually
length of the logic this has actually
gotten to be very very
gotten to be very very
substantial quite quickly
cannot assign float to int
whatever no big
deal all right
local data I
local data I
okay Waypoint
okay Waypoint
Lane then
Lane then
Lane all right
for got to
rebuild but yeah this is way cleaner
rebuild but yeah this is way cleaner
code I'm going to have to obviously fix
code I'm going to have to obviously fix
a few things there's no way I have this
a few things there's no way I have this
perfect so we have memory view not
perfect so we have memory view not
initialized right spawn Tower
initialized right spawn Tower
uh well we don't need this anymore it's
just spawn Tower of idx
right and actually Tower spawns we no
right and actually Tower spawns we no
longer need Tower
longer need Tower
spawns we no longer need neutral
spawns we no longer need neutral
spawns it's two obnoxious data
spawns it's two obnoxious data
structures we get rid of
structures we get rid of
call with the wrong number of
arguments
B
Tower we get to make the method call
Tower we get to make the method call
Signature uh the method call
simpler possible inconsistent indent
simpler possible inconsistent indent
what did I just screw up oh this there
and in fact this spawn Tower is so
and in fact this spawn Tower is so
simple
simple
like do we even need
this this is the only place we use it
this this is the only place we use it
right
okay we no longer need this
whoops 1350
whoops 1350
lines feels like it should be getting
lines feels like it should be getting
shorter but it's not
uh okay well I see that they're both on
uh okay well I see that they're both on
the same
the same
team but it looks like it works besides
team but it looks like it works besides
that sounds like it should just go
that sounds like it should just go
in in it it can't just go in a it just
in in it it can't just go in a it just
join to see the channel would love to
join to see the channel would love to
see what the game looks like let me yeah
see what the game looks like let me yeah
so you just saw that gift let me show
so you just saw that gift let me show
you the proper one because we're
you the proper one because we're
currently debugging it uh I'm doing a
currently debugging it uh I'm doing a
big refactor at the moment to make it
big refactor at the moment to make it
look nicer
a lot of progress on the Twitter
a lot of progress on the Twitter
timeline so this is the game running
timeline so this is the game running
with some uh basic trained reinforcement
with some uh basic trained reinforcement
learned
learned
agents they're trained to just go to the
agents they're trained to just go to the
enemy base um this was like a debug run
enemy base um this was like a debug run
so these ones don't do anything too too
so these ones don't do anything too too
crazy they kind of run past each other
crazy they kind of run past each other
and just go straight for the base um but
and just go straight for the base um but
yeah it's a basic mooba this is not the
yeah it's a basic mooba this is not the
only render mode there's
only render mode there's
[Music]
[Music]
also what
also what
where is
it where's the puffer
it where's the puffer
[Music]
[Music]
mode oh yeah so you can also play it
mode oh yeah so you can also play it
like
this you know there are multiple
this you know there are multiple
different render modes for it we were
different render modes for it we were
going to get some art or something at
going to get some art or something at
some point so it looks nice
some point so it looks nice
um yeah exactly tree the the layers need
um yeah exactly tree the the layers need
to reset it
confused trying to find where the
confused trying to find where the
players are but once I found the creeps
players are but once I found the creeps
it made sense yeah so the color schemes
it made sense yeah so the color schemes
aren't great at the moment right we need
aren't great at the moment right we need
to get like some more unique assets and
to get like some more unique assets and
stuff um but it is if you look at the
stuff um but it is if you look at the
high level you can think oh you're just
high level you can think oh you're just
doing like some pixel Sim but no you
doing like some pixel Sim but no you
know it's a full MOBA almost a full
know it's a full MOBA almost a full
mooba we don't have stuff like items uh
mooba we don't have stuff like items uh
items at the moment but there are
items at the moment but there are
abilities you can level up you can take
abilities you can level up you can take
Towers right you can take the objective
Towers right you can take the objective
win the game they are minion waves there
win the game they are minion waves there
are
are
neutrals lots of
neutrals lots of
things there are different
things there are different
classes or
classes or
Heroes quite a bit of
Heroes quite a bit of
stuff and this has only been two weeks
stuff and this has only been two weeks
in development I started this project
in development I started this project
last
Monday oh also the fun thing about this
Monday oh also the fun thing about this
is it runs at over a million steps per
is it runs at over a million steps per
second as the title says so it's Ultra
second as the title says so it's Ultra
ultra high performance simulation for
ultra high performance simulation for
reinforcement
learning looks great would be fun to
learning looks great would be fun to
hook this end with an RL framework yeah
hook this end with an RL framework yeah
we have it uh it's running with puffer
we have it uh it's running with puffer
lib puffer lib is my main project so I
lib puffer lib is my main project so I
just I recently finished my PhD uh I've
just I recently finished my PhD uh I've
been working in reinforcement learning
been working in reinforcement learning
for seven years or so I've done neural
for seven years or so I've done neural
MMO if you've seen that project and I'm
MMO if you've seen that project and I'm
currently working on making
currently working on making
reinforcement learning way less cursed
reinforcement learning way less cursed
way higher performance and way easier to
way higher performance and way easier to
work with so what we have here is puffer
work with so what we have here is puffer
lib puffer lib makes everything fast and
lib puffer lib makes everything fast and
compatible uh we have some demo code
compatible uh we have some demo code
based on clean rl's po just with a bunch
based on clean rl's po just with a bunch
of additional logging and some major
of additional logging and some major
performance optimizations and you can
performance optimizations and you can
get all of the things that I'm working
get all of the things that I'm working
on here in puffer Leb there's this any
on here in puffer Leb there's this any
config branch which is with the current
config branch which is with the current
Dev Branch for the mooba uh it'll be
Dev Branch for the mooba uh it'll be
merged up to Dev soon and then
merged up to Dev soon and then
eventually to 1.1
eventually to 1.1
thereafter but if you uh if you like any
thereafter but if you uh if you like any
of this stuff if you find it useful go
of this stuff if you find it useful go
ahead and give puffer a star helps me
ahead and give puffer a star helps me
out a whole bunch and I post about all
out a whole bunch and I post about all
this stuff right
this stuff right
here that's pretty much the whole
pitch puffer lib
right so I was looking for why the teams
right so I was looking for why the teams
are wrong right
are wrong right
player. team equal
team that's kind of
team that's kind of
odd oh the radiant I because I set them
odd oh the radiant I because I set them
all to radiant
all to radiant
okay that's
awkward this is really
awkward this is really
sketchy we're going to do this though
we'll find a better way to manage these
we'll find a better way to manage these
ideas
ideas
after but hopefully I think this now uh
after but hopefully I think this now uh
this should actually
run and we'll be able to see these
run and we'll be able to see these
things play a little
things play a little
bit this is a little bit of a better
bit this is a little bit of a better
model than the the other one too
yeah so this model is better than the
yeah so this model is better than the
other one they take a little longer to
other one they take a little longer to
go down mid but they don't just like
go down mid but they don't just like
beine past each other
beine past each other
anymore they do like they actually will
anymore they do like they actually will
like go try to farm neutrals and stuff
like go try to farm neutrals and stuff
it looks like in the latest patch did I
it looks like in the latest patch did I
overbuff did I like Giga buff the
overbuff did I like Giga buff the
neutrals yeah it looks like they're
neutrals yeah it looks like they're
getting one shot by
getting one shot by
neutrals so I got to go check what the
neutrals so I got to go check what the
neutrals damage values are
so much work to be
done H damage of 22 looks reasonable
done H damage of 22 looks reasonable
here we got basic attack cool down XP on
here we got basic attack cool down XP on
kill are there Heroes too not visible on
kill are there Heroes too not visible on
the mini map yeah they're not visible
the mini map yeah they're not visible
yet uh but there are five different hero
yet uh but there are five different hero
types they are they have three skills
types they are they have three skills
each at the moment the hero types are
each at the moment the hero types are
support which has a hook an AOE heal and
support which has a hook an AOE heal and
a stun assassin which has a creep clear
a stun assassin which has a creep clear
uh a blink strike and a movement buff
uh a blink strike and a movement buff
that's channeled there is a midlaner
that's channeled there is a midlaner
that has a burst nuke a burst AOE uh and
that has a burst nuke a burst AOE uh and
the AOE
the AOE
stun there's a tank that's got an AOE
stun there's a tank that's got an AOE
damage over time a self heal and an
damage over time a self heal and an
engage AOE and then there's a carry that
engage AOE and then there's a carry that
has uh well it will be scaling attack
has uh well it will be scaling attack
damage that part's not implemented yet
damage that part's not implemented yet
but has some defensive tools of retreat
but has some defensive tools of retreat
that also slows the uh the target a slow
that also slows the uh the target a slow
damage that can be used offensively or
damage that can be used offensively or
defensively and an AOE to help with
defensively and an AOE to help with
clear minion
clear minion
clear that's what we're looking at that
clear that's what we're looking at that
at the
moment again this is a fairly new
moment again this is a fairly new
project so that the way it works is
project so that the way it works is
basically I try to get the whole thing
basically I try to get the whole thing
running end to end and then like I
running end to end and then like I
iteratively improve the code debug and
iteratively improve the code debug and
like make the features that are
like make the features that are
implemented actually available to the
implemented actually available to the
neural network to learn
neural network to learn
from because it's if I throw too much at
from because it's if I throw too much at
the model all at once and nothing works
the model all at once and nothing works
it's way harder to debug right
maybe I'll get some uh some like 2D
maybe I'll get some uh some like 2D
puffer animations made that'd be fun I
puffer animations made that'd be fun I
only have the 3D ones like this guy up
here and this version of DOTA is better
here and this version of DOTA is better
because Pudge hook pulls Towers
because Pudge hook pulls Towers
yep that was a bug and then everybody
yep that was a bug and then everybody
said to leave it in so I left
said to leave it in so I left
it you can technically hook
it you can technically hook
Towers well the thing is I left it in
Towers well the thing is I left it in
because I want to see if the agents
because I want to see if the agents
actually figure out that they can do
actually figure out that they can do
that right like wouldn't that be so
that right like wouldn't that be so
funny if the RL agents just like we open
funny if the RL agents just like we open
up a training run day and then they just
up a training run day and then they just
like they've learned to just hook all
like they've learned to just hook all
their towers like around with them so
their towers like around with them so
that they like bring their towers to the
that they like bring their towers to the
fight or something
ridiculous for
well that's like the initial pass on the
well that's like the initial pass on the
refactor actually if this is working
refactor actually if this is working
more or less as
more or less as
intended
intended
um let's take a little bit of a higher
um let's take a little bit of a higher
level look at this and see what sections
level look at this and see what sections
in the code we have that can be
improved so we've got these grid
improved so we've got these grid
idas these are what we are using to
idas these are what we are using to
signify um position on the map or to
signify um position on the map or to
signify like who is who on the mini map
signify like who is who on the mini map
not mini map on like the the render it's
not mini map on like the the render it's
also visible to
also visible to
agents we've got North do we use
this we don't use these so we can delete
this we don't use these so we can delete
them uh we've got Vision counters
them uh we've got Vision counters
here these are actually kind of cool
here these are actually kind of cool
because I think we can make the game
because I think we can make the game
substantially faster just by like uh
substantially faster just by like uh
reducing some of the visions a little
reducing some of the visions a little
bit here and
there though if you reduce it too much
there though if you reduce it too much
you can kind of like you can start
you can kind of like you can start
hitting the creeps without them hitting
hitting the creeps without them hitting
you back so we might have to make some
you back so we might have to make some
changes with that
this is redundant
are walls basically trees which block
are walls basically trees which block
yeah these are in these are from the
yeah these are in these are from the
actual DOTA map like this is extracted
actual DOTA map like this is extracted
map data from DOTA so those are just
map data from DOTA so those are just
where the walls are in Dota I have not
where the walls are in Dota I have not
added trees yet I've been told that
added trees yet I've been told that
they're a very important part of DOTA
they're a very important part of DOTA
and that I should add them uh so I
and that I should add them uh so I
probably will but not yet you know it's
probably will but not yet you know it's
some work that's actually like sub quite
some work that's actually like sub quite
substantial work so you have to do
substantial work so you have to do
Vision then
I mean I'm open to implementing like I'm
I mean I'm open to implementing like I'm
open to making the Sim substantially
open to making the Sim substantially
closer to DOTA and like way way way
closer to DOTA and like way way way
better which would just require me
better which would just require me
spending like a couple extra weeks more
spending like a couple extra weeks more
like more than I intend to on it um it's
like more than I intend to on it um it's
just going to be a matter of how much uh
just going to be a matter of how much uh
you know how much interest there is in
you know how much interest there is in
this project overall
hey pdbs
hey pdbs
welcome we've got some cool stuff here
welcome we've got some cool stuff here
I'll show you the
latest so we're at 1337 lines I did not
latest so we're at 1337 lines I did not
plan
plan
that and
here we go we have some very basic
here we go we have some very basic
reinforcement learned agents that
reinforcement learned agents that
Meander down mid and attempt to fight
Meander down mid and attempt to fight
neutrals no proper DOTA M and this would
neutrals no proper DOTA M and this would
be great to recreate open A5 at some
be great to recreate open A5 at some
point in the future yeah exactly that's
point in the future yeah exactly that's
the that's the general idea right like
the that's the general idea right like
open ai5 is this awesome project but
open ai5 is this awesome project but
they you can't train on the actual game
they you can't train on the actual game
dota's like the simulator for DOTA is
dota's like the simulator for DOTA is
too slow they used over a 100,000 CPU
too slow they used over a 100,000 CPU
cores for that project and like a th
cores for that project and like a th
gpus this version we can run this at a
gpus this version we can run this at a
million steps per second single thread
million steps per second single thread
and we can train this at a like I've
and we can train this at a like I've
gotten 500k steps per second so far but
gotten 500k steps per second so far but
it will be a million plus by the time
it will be a million plus by the time
I'm done uh on one
I'm done uh on one
GPU so we're actually training this
GPU so we're actually training this
thing like the number of samples we're
thing like the number of samples we're
going through it's about half of the
going through it's about half of the
total number of samples of all of
total number of samples of all of
opening I5 but we're doing it on one GPU
so it's very very
fast it's kind of been my main Jam
fast it's kind of been my main Jam
lately is just like performance
lately is just like performance
engineering cool
Sims you have some basic trained agents
Sims you have some basic trained agents
now yes can you play against
them if I didn't break the renderer
them if I didn't break the renderer
you I also this will be useful cuz I
you I also this will be useful cuz I
need to check if I I think the neutrals
need to check if I I think the neutrals
might oneshot you
now hey what's up puffers come on let's
now hey what's up puffers come on let's
push mid come
push mid come
on key error
five well it looks like something wasn't
five well it looks like something wasn't
there
neutrals uh see
I thought that I had a graphic for
I thought that I had a graphic for
neutrals didn't
I is this
five what's neutral three three is
five what's neutral three three is
radiant creep
hold
on oh I didn't make a graphic for
on oh I didn't make a graphic for
neutrals we'll just reuse this one for
neutrals we'll just reuse this one for
now
what's up
poppers uh you have zero zero health so
poppers uh you have zero zero health so
I've clearly I've broken some stuff with
I've clearly I've broken some stuff with
the reset
the reset
functions but yeah they take a while
functions but yeah they take a while
they do eventually Mander up they like
they do eventually Mander up they like
to go fight these uh these neutrals up
to go fight these uh these neutrals up
here as well they're kind of funny here
here as well they're kind of funny here
are the waves the wave paths the waves
are the waves the wave paths the waves
path very nicely
path very nicely
now this is about the state of the
now this is about the state of the
project at the
project at the
moment there you go
guess Heroes increase
damage yeah they do there is a basic
damage yeah they do there is a basic
leveling system I need to expand on it
leveling system I need to expand on it
but there is
one and I need to add player max Health
one and I need to add player max Health
here right
wonder if the current bot take the mid
wonder if the current bot take the mid
Tower after a while they do they do
Tower after a while they do they do
eventually win the whole
eventually win the whole
game is there a fixed number of entities
game is there a fixed number of entities
can you crank it up for
can you crank it up for
fun uh not quickly pdubs I
can't I can run many copies of the
can't I can run many copies of the
environment in the background and when
environment in the background and when
I'm training I'm usually running like
I'm training I'm usually running like
two to 400 copies of the environment per
two to 400 copies of the environment per
CPU core
but because I've been deving this
but because I've been deving this
quickly like 10 players is hardcoded in
quickly like 10 players is hardcoded in
a lot of spots at the
moment that'd be kind of funny to have
moment that'd be kind of funny to have
like nvn mooba like technically you
like nvn mooba like technically you
could have like a 100 V 100 but I don't
could have like a 100 V 100 but I don't
think it's going to work I don't like
think it's going to work I don't like
pdbs I don't think it would work because
pdbs I don't think it would work because
like the XP would not scale so like you
like the XP would not scale so like you
wouldn't be able to feed enough
wouldn't be able to feed enough
agents like the games are not made this
agents like the games are not made this
is not a game that I think works very
is not a game that I think works very
well if you just scale them
players Starcraft 2 mobile yeah if I
players Starcraft 2 mobile yeah if I
wanted to do an RTS I'd do an RTS right
wanted to do an RTS I'd do an RTS right
that's like another that's another
that's like another that's another
totally reasonable project I don't think
totally reasonable project I don't think
I will do one though at least I don't
I will do one though at least I don't
have a plan to do one at the moment
have a plan to do one at the moment
because like it's cool but I don't think
because like it's cool but I don't think
that having this and uh and like it's
that having this and uh and like it's
not twice as good I don't think to have
not twice as good I don't think to have
this end and an
RTS they have a decent end but as far as
RTS they have a decent end but as far as
I'm aware I think it's very slow
one of the big goals I have at the
one of the big goals I have at the
moment is to accelerate all of RL
moment is to accelerate all of RL
research to be million steps per second
research to be million steps per second
as a baseline on a range of different
as a baseline on a range of different
environments of different
complexities and think if you do that
complexities and think if you do that
then you'll start to get a lot of you'll
then you'll start to get a lot of you'll
start to really get a lot of uh
start to really get a lot of uh
interesting
stuff in the research scene very quickly
all right so this fixes the health
bars so now if I go try to fight a
bars so now if I go try to fight a
neutral I can probably go fight this
neutral oh yeah I hardcoded it to always
neutral oh yeah I hardcoded it to always
Pi Q because I was debugging something
Pi Q because I was debugging something
use Q
I think yeah this okay so this is why
I think yeah this okay so this is why
it's not
it's not
working so now if I do
this we should actually see them do
this we should actually see them do
something a little better maybe they
something a little better maybe they
should actually be able to kill stuff
okay so right now they uh you can
okay so right now they uh you can
technically hit them out of
technically hit them out of
Los that's nice though you
heal you can kind of just all
push me standing here makes the waves
push me standing here makes the waves
push because I had my damage in right
push because I had my damage in right
you can see I got level two which means
you can see I got level two which means
my HP total Max went up to
600 and then if I'm here without my wave
600 and then if I'm here without my wave
I'm probably going to
I'm probably going to
die unless my wave saves me which it
die unless my wave saves me which it
did you heal one HP per game
tick and some weird render bug
not bad though that's not
bad there's a little bit more
bad there's a little bit more
refactoring to do um I think I said we
refactoring to do um I think I said we
were going to look at this at a high
were going to look at this at a high
level and like try to section out some
level and like try to section out some
blocks of code so I'm going to do that
blocks of code so I'm going to do that
in a moment you just use the restroom
in a moment you just use the restroom
I'll be right back and we've got another
I'll be right back and we've got another
hour and a bit of Dev
e
e e
okay
okay
got to do one thing real quick and we go
got to do one thing real quick and we go
back to Dev
how's this article of mine
doing not
great I guess this was insufficiently
great I guess this was insufficiently
clickbait but if you're looking for
clickbait but if you're looking for
something fun to read it's like I don't
something fun to read it's like I don't
know page or
know page or
two articles on X wrote this today for
two articles on X wrote this today for
fun
this is fine
let's go block out the uh the code
let's go block out the uh the code
so at the top we've got all of these
so at the top we've got all of these
types uh these
types uh these
constants types hero types we don't
constants types hero types we don't
really use these hero types a ton to be
honest let me
honest let me
see yeah we really only use this here
see yeah we really only use this here
which is kind of lame
I say we get rid of
these cuz like they don't we really just
these cuz like they don't we really just
need
need
um I really just need these for
observations we are not using these
observations we are not using these
anywhere in the code
okay so we have our
constants let's merge these two
sections don't need these comments
environment
star go up
star go up
top a better
there put this
do we need L2
distance we'll leave L2 for now
distance we'll leave L2 for now
so I think we're going to decide on that
so I think we're going to decide on that
later uh and then what do we have
later uh and then what do we have
here interray actions yeah this is going
here interray actions yeah this is going
to end up being 2D in the
to end up being 2D in the
future with height num agents num creeps
future with height num agents num creeps
num neutrals num
Towers this is not used
Towers this is not used
ever this is not used ever so we don't
ever this is not used ever so we don't
really care about within height now do
really care about within height now do
we
we
agent creeps neutrals
agent creeps neutrals
Towers uh Vision
Towers uh Vision
range agent speed discretize obiz creep
range agent speed discretize obiz creep
index creep
index oh yeah
index oh yeah
that's that's used for keeping track of
that's that's used for keeping track of
uh when creeps spawn that's
fine then XP for
fine then XP for
level I think this can go down here
right uh where you put this maybe
here entity
here entity
data go down here who is it need wait
data go down here who is it need wait
self. entity
we we don't need to we don't need to
we we don't need to we don't need to
store it we only use it on a
net okay we have pre-allocated
net okay we have pre-allocated
RNG we've
RNG we've
got obervations
got obervations
map which gets used where
here and then observations
here and then observations
extra so observations map observations
extra so observations map observations
extra this is
good okay that prunes that down just a
good okay that prunes that down just a
little bit
next immediate Milestone you're looking
next immediate Milestone you're looking
to get
to get
to um I really just want to have this
to um I really just want to have this
code nicely cleaned up to start with and
code nicely cleaned up to start with and
then the next thing after that will be I
then the next thing after that will be I
want to turn back on the um the skills
want to turn back on the um the skills
cuz the previous model that I trained it
cuz the previous model that I trained it
was a simpler test so I left all the
was a simpler test so I left all the
skills off so I want to train a model
skills off so I want to train a model
with uh the ability to use skills and
with uh the ability to use skills and
get them to start using those skills
get them to start using those skills
have that be stable have some good
have that be stable have some good
learning curves and then from there the
learning curves and then from there the
hope is that if we do like a nice hyper
hope is that if we do like a nice hyper
parameter sweep we'll get like an
parameter sweep we'll get like an
actually reasonable policy out of it and
actually reasonable policy out of it and
we can start seeing like what's
we can start seeing like what's
overpowered and stuff from there and we
overpowered and stuff from there and we
can start game balancing it
can start game balancing it
so we're like I'm not going to say we're
so we're like I'm not going to say we're
entirely feature complete there's some
entirely feature complete there's some
stuff missing around like scaling creep
stuff missing around like scaling creep
waves they need to like have scaling
waves they need to like have scaling
stats uh we need to have assign like uh
stats uh we need to have assign like uh
specific base stats and scaling for each
specific base stats and scaling for each
hero type right now they just have
hero type right now they just have
different abilities um but it's
different abilities um but it's
generally like we've got a vertical
generally like we've got a vertical
slice now of the whole
slice now of the whole
thing there's a lot we can do from here
thing there's a lot we can do from here
right but uh it's it's in a good spot at
right but uh it's it's in a good spot at
the moment and it's really going to just
the moment and it's really going to just
depend on how training goes and how
depend on how training goes and how
people like the project and so much from
people like the project and so much from
there at the very least I'm going to
there at the very least I'm going to
release uh when I release this it will
release uh when I release this it will
be you know a good stable somewhat well
be you know a good stable somewhat well
balanced uh mini MOBA now how much more
balanced uh mini MOBA now how much more
stuff we add you know if I add forest
stuff we add you know if I add forest
and vision control um if I decide to add
and vision control um if I decide to add
some form of items if I add like you
some form of items if I add like you
know different types of creeps and stuff
know different types of creeps and stuff
if I try to like more accurately
if I try to like more accurately
replicate the hard versus easy neutral
replicate the hard versus easy neutral
camps if I try to like Implement
camps if I try to like Implement
specific mechanics that's going to
specific mechanics that's going to
depend on how much people like the
environment you know it's a very
environment you know it's a very
different story if I release this and
different story if I release this and
maybe like one or two people kind of
maybe like one or two people kind of
like it and use it versus if I use this
like it and use it versus if I use this
and like I have a hundred researchers
and like I have a hundred researchers
all like wanting to use this for their
all like wanting to use this for their
projects right it's going to be a very
projects right it's going to be a very
different amount of effort I put into
different amount of effort I put into
it because ultimately I'm doing this so
it because ultimately I'm doing this so
that researchers use it
let's see how the code is blocked out at
let's see how the code is blocked out at
the
moment we have all these get functions
moment we have all these get functions
that are kind of obnoxious well this one
that are kind of obnoxious well this one
I know is old we don't need this
I know is old we don't need this
one I'm not a researcher can I still use
one I'm not a researcher can I still use
it yeah you can I mean link key you're
it yeah you can I mean link key you're
kind of a researcher at this point
kind of a researcher at this point
you're doing research Argo you're a
researcher we'll see about these methods
researcher we'll see about these methods
I don't necessarily like
these but have to keep going for
now in6 makes torch compile errors
now in6 makes torch compile errors
[ __ ] torch
man okay we've got compute
man okay we've got compute
observations I haven't decided whether I
observations I haven't decided whether I
like it when you one line like variables
like it when you one line like variables
that don't have initializations you can
that don't have initializations you can
technically go like this
right that's kind of better isn't
right that's kind of better isn't
it not having a giant block for a bunch
it not having a giant block for a bunch
of unallocated
variables I like that more
it's a little annoying because it's
it's a little annoying because it's
inconsistent when you mix um variables
inconsistent when you mix um variables
that have in uh have have assignments
that have in uh have have assignments
versus not
but you figured out how to zero the
data love to get the hang of it and make
data love to get the hang of it and make
contributions for building the
contributions for building the
EnV yeah I mean it's a it's a full open
EnV yeah I mean it's a it's a full open
source project so if you have ideas or
source project so if you have ideas or
you have like stuff you can do like chat
you have like stuff you can do like chat
me up I'm very easy to get a hold of and
me up I'm very easy to get a hold of and
everything's open source right look so
everything's open source right look so
right now it's
in look this thing had to commit four
in look this thing had to commit four
hours ago that's the last time I
hours ago that's the last time I
committed changes I'll commit them to
committed changes I'll commit them to
again you know in a a little bit or at
again you know in a a little bit or at
the end of the stream or whatever it's
the end of the stream or whatever it's
in puffer lab
in puffer lab
environments um
environments um
ocean here's all the stuff I've built
ocean here's all the stuff I've built
they're not really docks for this yet
they're not really docks for this yet
but I have uh a 10 million plus FPS
but I have uh a 10 million plus FPS
snake en a 10 mil plus FPS particle
snake en a 10 mil plus FPS particle
engine and then the mobile which is
engine and then the mobile which is
still over a million
still over a million
FPS uh you have the mobile file here
FPS uh you have the mobile file here
which is like a bunch of python wrappers
which is like a bunch of python wrappers
this is 600 lines and then you have the
this is 600 lines and then you have the
mobile file which is or the cmob file
mobile file which is or the cmob file
where is
where is
it which is uh 1400 lines which is going
it which is uh 1400 lines which is going
to be a little shorter so overall goal
to be a little shorter so overall goal
is that this whole project all in is
is that this whole project all in is
going to be less than 2,000
lines unless of course it gets
lines unless of course it gets
substantially larger right if we're
substantially larger right if we're
going to say okay it's going to be 3,000
going to say okay it's going to be 3,000
instead of 2,000 but it's going to
instead of 2,000 but it's going to
basically be like all of DOTA almost one
basically be like all of DOTA almost one
to one then I'm good with that but uh
to one then I'm good with that but uh
otherwise we try to keep it very nice
otherwise we try to keep it very nice
and
and
concise I'm compactifying stuff a little
concise I'm compactifying stuff a little
bit right
now I also do give um another cool thing
now I also do give um another cool thing
by the way is I also do give compute
by the way is I also do give compute
access to people to
access to people to
contributors and uh really the only
contributors and uh really the only
requirement for compute access is that
requirement for compute access is that
you're actually developing stuff and
you're actually developing stuff and
doing useful work so I don't give it to
doing useful work so I don't give it to
people immediately because 90% of people
people immediately because 90% of people
don't actually do anything after they
don't actually do anything after they
say they want to but um if people are
say they want to but um if people are
doing stuff they get compute uh I don't
doing stuff they get compute uh I don't
have a ton of boxes at the moment we've
have a ton of boxes at the moment we've
only got eight uh eight machines but uh
only got eight uh eight machines but uh
we'll hopefully be getting some more
we'll hopefully be getting some more
some uh some more
some uh some more
in probably be a few more months but
in probably be a few more months but
we'll be getting more
we'll be getting more
soon we have a little bit of spare
soon we have a little bit of spare
capacity maybe at the moment we'll see
I don't know I could try to go get
I don't know I could try to go get
puffer some Revenue to just get a way
puffer some Revenue to just get a way
bigger cluster but then I don't have
bigger cluster but then I don't have
time to be doing this stuff right
for e
I can't respawn the creeps that's
obnoxious so this move to function is
obnoxious so this move to function is
pretty
pretty
nice you check if your destination is
nice you check if your destination is
empty is not
empty is not
empty for
this move two function this move two
this move two function this move two
function could be
is better
right
yeah wa if entity PID is Target PID
the heck
the heck
move player
Target that should never be the case
[Music]
why I don't know why I did that that's
why I don't know why I did that that's
really weird wait
it did uh equals equals 1 it's a bent I
it did uh equals equals 1 it's a bent I
shouldn't need
that okay we got
that okay we got
kill got move
towards wait
oh huh
probably this would be
probably this would be
um a useful thing to fix
um a useful thing to fix
right this is eight
lfs an array lookup would be faster
lfs an array lookup would be faster
wouldn't
it it definitely be
simpler
for e
you hear Heroes get together to D gank
you hear Heroes get together to D gank
other
other
Heroes be interesting to know how to get
Heroes be interesting to know how to get
the agents to learn the behavior I mean
the agents to learn the behavior I mean
literally all that should be required
literally all that should be required
for that is a well balanced game a
for that is a well balanced game a
reasonable Network a reasonable reward
reasonable Network a reasonable reward
function and enough
training you shouldn't have to get uh
training you shouldn't have to get uh
you shouldn't even have to get probably
you shouldn't even have to get probably
some function of the rewards for ganking
some function of the rewards for ganking
and scaling easily yeah I mean the
and scaling easily yeah I mean the
reward will definitely influence it I
reward will definitely influence it I
mean if you go look at the Dota 2 reward
mean if you go look at the Dota 2 reward
they didn't have like a specific gank
they didn't have like a specific gank
reward they just have there's like a
reward they just have there's like a
reward sharing mechanism or whatever but
reward sharing mechanism or whatever but
um it was actually pretty reasonable
um it was actually pretty reasonable
like they didn't have to do a crazy
like they didn't have to do a crazy
crazy amount of reward
engineering like you'd think it would be
engineering like you'd think it would be
a 100 component reward or something for
a 100 component reward or something for
open A5 and it wasn't
did I do this
did I do this
right
z0 XP a hero XP gold there's a little
z0 XP a hero XP gold there's a little
more than that right there were Tower
more than that right there were Tower
kills there's Hero death there was like
kills there's Hero death there was like
Roshan um there were a few other small
Roshan um there were a few other small
things right there was like a last hit
things right there was like a last hit
thing there were some like Delta
thing there were some like Delta
adjustments on
top I mean the other thing is you
top I mean the other thing is you
actually don't know how well
actually don't know how well
those we really don't know how well any
those we really don't know how well any
of those were tuned because
of those were tuned because
like so I was there in 20 I was there in
like so I was there in 20 I was there in
2018 and I never knew exactly how many
2018 and I never knew exactly how many
gpus they had but I definitely didn't
gpus they had but I definitely didn't
get the impression that they had like
get the impression that they had like
they did not have enough gpus to run
they did not have enough gpus to run
like a 100 experiment sweep or anything
like a 100 experiment sweep or anything
at a time so I'm guessing that the hyper
at a time so I'm guessing that the hyper
prams and the rewards they use could
prams and the rewards they use could
have been substantially simplified just
have been substantially simplified just
with better
with better
tuning so that's kind of one of the
tuning so that's kind of one of the
things I'm hoping with this project is
things I'm hoping with this project is
like it's so stupidly fast that we can
like it's so stupidly fast that we can
tune it so much that probably we can
tune it so much that probably we can
make it work with way simpler rewards
make it work with way simpler rewards
and things just by tuning
and things just by tuning
it we've got carb sweeps
Dy is 1 DX is Zer Y is negative 1 DX is
Dy is 1 DX is Zer Y is negative 1 DX is
0 Y is z DX
0 Y is z DX
1 wait four
1 wait four
three is
three is
D four is dy
D four is dy
is
three four is 1
three four is 1
1 5 is 1 negative 1 one one one one okay
1 5 is 1 negative 1 one one one one okay
good
great to see the progress interested in
great to see the progress interested in
novel population
novel population
search I can stand the
search I can stand the
yeah I've spoken with Ken many times
yeah I've spoken with Ken many times
he's a very cool
he's a very cool
guy
guy
um novel population search so the only
um novel population search so the only
thing that I've really seen on that to
thing that I've really seen on that to
be frank is like the Deep mindes PBT
be frank is like the Deep mindes PBT
thing right where they search over
thing right where they search over
reward weights
reward weights
I don't think that it's a particularly
I don't think that it's a particularly
good algorithm
good algorithm
though I honestly I think I have a way
though I honestly I think I have a way
better way of doing it
better way of doing it
um so what you do is you
um so what you do is you
need can imagine a s a where game
need can imagine a s a where game
designer let me finish this question
designer let me finish this question
wait they're related can imagine a St
wait they're related can imagine a St
area where game designers can use these
area where game designers can use these
environments to see tuning certain
environments to see tuning certain
parameters to induce certain behav yes
parameters to induce certain behav yes
okay this slightly different so uh to
okay this slightly different so uh to
answer the first question
answer the first question
the way that I think that this is going
the way that I think that this is going
to work when we run the full tuning
to work when we run the full tuning
thing
thing
and we really need some sort of like ELO
and we really need some sort of like ELO
based metric or something for DOTA
based metric or something for DOTA
because it's adversarial so that's going
because it's adversarial so that's going
to still be a little bit of work I've
to still be a little bit of work I've
had people asking me for that anyways
had people asking me for that anyways
though so you know if we have to add it
though so you know if we have to add it
we have to add it no big deal um but
we have to add it no big deal um but
let's just say like let's assume that we
let's just say like let's assume that we
have an ELO implementation right um so
have an ELO implementation right um so
that gives you like a ground truth like
that gives you like a ground truth like
a ground truth way to to evaluate how
a ground truth way to to evaluate how
good players
good players
are then what I would do from there is I
are then what I would do from there is I
would take all of the different reward
would take all of the different reward
components I have and I would put the
components I have and I would put the
weights of these various rewards as
weights of these various rewards as
hyper
hyper
parameters along with all the normal
parameters along with all the normal
hyper parameters and then I would give
hyper parameters and then I would give
the entire thing to carbs to do a
the entire thing to carbs to do a
gigantic hyperparameter
gigantic hyperparameter
sweep and carbs would be able then to
sweep and carbs would be able then to
dynamically tune all of the rewards uh
dynamically tune all of the rewards uh
but also the length of the experiments
but also the length of the experiments
and all the other
and all the other
hyperparameters and uh it would be
hyperparameters and uh it would be
selecting based on Elo improvements so
selecting based on Elo improvements so
essentially over time you would get
essentially over time you would get
better and better models with higher and
better and better models with higher and
higher ELO and uh it would autotune the
higher ELO and uh it would autotune the
rewards for you as a result of that I
rewards for you as a result of that I
think that that is probably going to be
think that that is probably going to be
the more reasonable way of going about
the more reasonable way of going about
it there's some limitations with that
it there's some limitations with that
but uh probably will get us pretty far
and by the way yes uh the other question
and by the way yes uh the other question
yes you absolutely can use RL for game
yes you absolutely can use RL for game
balance there's a little bit of work on
balance there's a little bit of work on
doing this a couple game studios have
doing this a couple game studios have
done it they've had some success
done it they've had some success
probably not worth the cost that they
probably not worth the cost that they
invested in it um but it will definitely
invested in it um but it will definitely
be worth the cost in the future when it
be worth the cost in the future when it
gets simpler like I spoke with Riot
gets simpler like I spoke with Riot
about this and how they were doing it um
about this and how they were doing it um
I mean they did a bunch of cool work but
I mean they did a bunch of cool work but
they really just got hamstrung by the
they really just got hamstrung by the
infrastructure and
infrastructure and
tools more than
tools more than
anything of course it's always going to
anything of course it's always going to
be hard on real games like to be frank I
be hard on real games like to be frank I
don't have the the infra for handling
don't have the the infra for handling
well I kind of do have the infra for
well I kind of do have the infra for
handling real games
handling real games
um there's a little bit of tech a little
um there's a little bit of tech a little
bit of extra i' have to do but not
much would definitely have to be
much would definitely have to be
worthwhile
though hyper parameter is I learning
though hyper parameter is I learning
rate no you don't need learning rate of
rate no you don't need learning rate of
learning
learning
rate you just need to tune learning rate
a hyp like learning rate is a
a hyp like learning rate is a
hyperparameter you don't need to do
hyperparameter you don't need to do
learning rate of learning
rate so the way that carbs work carbs is
rate so the way that carbs work carbs is
a parito optimal basian tuning
a parito optimal basian tuning
algorithm which means that it will it
algorithm which means that it will it
keeps like a wide set of different hyper
keeps like a wide set of different hyper
parameters that are good for different
parameters that are good for different
reasons essentially and uh it will
reasons essentially and uh it will
investigate all of the promising routes
investigate all of the promising routes
at the same
at the same
time carbs is really
time carbs is really
good only in puffer
good only in puffer
lib puffer
exclusive at least until wandb gives us
exclusive at least until wandb gives us
a native integration which I'm looking
a native integration which I'm looking
forward to but until then it's part of
forward to but until then it's part of
the puffer open source
moat how does it evaluate if something
moat how does it evaluate if something
is good in the RL cases you give it a
is good in the RL cases you give it a
metric like ELO would be the metric that
metric like ELO would be the metric that
you'd use for DOTA right so higher ELO
you'd use for DOTA right so higher ELO
is better so just at the end of every
is better so just at the end of every
run it sees how long did it take me to
run it sees how long did it take me to
get this result what was the ELO and it
get this result what was the ELO and it
will just maintain all possible pairs of
will just maintain all possible pairs of
like you know all points for which there
like you know all points for which there
are no other runs that were quicker and
are no other runs that were quicker and
got higher ELO that's the Pito front
how can I join
how can I join
you
friends this is all just open source
Dev try to get it running at some point
Dev try to get it running at some point
and see if I can do
and see if I can do
anything heck yeah we definitely want
anything heck yeah we definitely want
more contributors on this do you set
more contributors on this do you set
like a max number of steps to achieve
like a max number of steps to achieve
the desired
the desired
metric uh not quite you set
metric uh not quite you set
ranges on valid hyper prams but you
ranges on valid hyper prams but you
don't necessarily have to specify a
don't necessarily have to specify a
closed range so like for time steps I
closed range so like for time steps I
could specify that it's going to be
could specify that it's going to be
between 100 million and a quadrillion
between 100 million and a quadrillion
and I specify the search center as like
and I specify the search center as like
you know 200 million and then what it'll
you know 200 million and then what it'll
do is it'll just like it'll start off
do is it'll just like it'll start off
with a bunch of quick runs and then as
with a bunch of quick runs and then as
it gets more confident in the hyper
it gets more confident in the hyper
parameters that are better and that lead
parameters that are better and that lead
to more growth over time and provided
to more growth over time and provided
that you actually do continue to get
that you actually do continue to get
better performance by training longer
better performance by training longer
it'll just keep training for longer and
it'll just keep training for longer and
longer with like the refined set of
longer with like the refined set of
hyper
hyper
parameters it's a very nice
algorithm all the code is right on here
algorithm all the code is right on here
on puffer lib go ahead and head and give
on puffer lib go ahead and head and give
it a star on the way in we're almost at
it a star on the way in we're almost at
700 now which is awesome
700 now which is awesome
I've been looking at uh where is it
I've been looking at uh where is it
sample we're almost at sample Factory
sample we're almost at sample Factory
aren't
aren't
we yeah we're like less than 100 off of
we yeah we're like less than 100 off of
passing sample Factory which is freaking
crazy should star this
if I can't get direct ml should I
if I can't get direct ml should I
theoretically be able to get some
theoretically be able to get some
results on CPU possibly
results on CPU possibly
yes um it's so rough without Nvidia
yes um it's so rough without Nvidia
gpus now the thing is I do actually
gpus now the thing is I do actually
provide Hardware to contributors of the
provide Hardware to contributors of the
project um you know I have the puffer
project um you know I have the puffer
cluster and I do provide access access
cluster and I do provide access access
to people who are actually doing stuff
to people who are actually doing stuff
but I don't provide access up front
but I don't provide access up front
right cuz like I get a bajillion request
right cuz like I get a bajillion request
and 99% of people or 90% of people I
and 99% of people or 90% of people I
should say don't do anything and then
should say don't do anything and then
then I just have like random people on
then I just have like random people on
the cluster access list racking up bills
the cluster access list racking up bills
so I do provide access pretty quick
so I do provide access pretty quick
though once people start doing cool
stuff and you know contributions get
stuff and you know contributions get
credited on the perer site and yada yada
credited on the perer site and yada yada
it's all open source
Dev allegedly scale well I'll
Dev allegedly scale well I'll
code that would be cool I'll believe it
code that would be cool I'll believe it
when I see
it George Hots literally offered to do
it George Hots literally offered to do
it for him for free and they were
it for him for free and they were
dumb so
I know companies are super bullshitty
I know companies are super bullshitty
sometimes it's like you offer to like
sometimes it's like you offer to like
make them something awesome for free and
make them something awesome for free and
it's like it's you're almost better off
it's like it's you're almost better off
like offering to charge him a million
like offering to charge him a million
dollars to do it like they don't take
dollars to do it like they don't take
you seriously unless you're charging
you seriously unless you're charging
them a million dollars
I wouldn't be surprised if they'd
I wouldn't be surprised if they'd
actually gone for it if he'd been like
actually gone for it if he'd been like
that it'll be a million
today
today
Project how to land I don't know what I
Project how to land I don't know what I
don't know what you're
don't know what you're
asking
asking
uh T Tia
uh T Tia
Tila not sure what you're asking there
Tila not sure what you're asking there
can't put links on YouTube sounds like
can't put links on YouTube sounds like
NVIDIA drivers will be open source come
NVIDIA drivers will be open source come
5 that would be
5 that would be
awesome that'd be really
awesome that'd be really
awesome dang I hope that happens
I don't believe they'll do that
though the project is uh it's
though the project is uh it's
on if if I'm not sure if this answers
on if if I'm not sure if this answers
the question but this the Project's on
the question but this the Project's on
puffer AI puffer
puffer AI puffer
lib and the current is any
lib and the current is any
config so the latest Dev is all in here
config so the latest Dev is all in here
it's in puffer Leb
it's in puffer Leb
environments uh ocean which is our first
environments uh ocean which is our first
party ones and
party ones and
MOA so it's right in here and you can
MOA so it's right in here and you can
run it like this with Dash Dash and
whoops you can run it like this with Das
whoops you can run it like this with Das
Das n MOBA mode eval and then there's
Das n MOBA mode eval and then there's
like render mode rib or render mode
like render mode rib or render mode
human
yeah pretty cool
this will probably use the move actions
this will probably use the move actions
as well for
right not yet though because I'm pretty
right not yet though because I'm pretty
sure they're
sure they're
different yeah these are different we'll
different yeah these are different we'll
use that in the future for this okay
use that in the future for this okay
we're we're under 1300
we're we're under 1300
lines we are under 1300 lines again
lines we are under 1300 lines again
it's always nice to
it's always nice to
see uh we've got all the
see uh we've got all the
skills we've got cool Downs this is fine
skills we've got cool Downs this is fine
this code is fine
this code is fine
push AOE
push nearest scan Target let's take
push nearest scan Target let's take
these l2s out for
now AE attack
now AE attack
back is there a debug mode where we can
back is there a debug mode where we can
manually play the game yes there is and
manually play the game yes there is and
that's not even just a debug mode that's
that's not even just a debug mode that's
a fundamental feature uh there are a
a fundamental feature uh there are a
couple little bugs in it
couple little bugs in it
so might have to look at some stuff but
so might have to look at some stuff but
um Das D render mode human and the only
um Das D render mode human and the only
dependency for these renders is uh you
dependency for these renders is uh you
might have to pip install rib rib the uh
might have to pip install rib rib the uh
the graphics Library not the like
the graphics Library not the like
distributed
distributed
Library rib is god tier it's like my
Library rib is god tier it's like my
favorite library
ever it's just so
good this scan AOE is kind of slow but
rank the following carbs rib clean
rank the following carbs rib clean
RL uh clean RL is god
RL uh clean RL is god
tier oh [ __ ] now you're putting like all
tier oh [ __ ] now you're putting like all
of my
well the thing is rib isn't even an ml
well the thing is rib isn't even an ml
thing so that's apples to oranges but I
thing so that's apples to oranges but I
consider clean RL the best contribution
consider clean RL the best contribution
to RL ever by a single
individual
so cost is
so cost is
goated carbs is another carbs is awesome
goated carbs is another carbs is awesome
I definitely put carbs in like the top
I definitely put carbs in like the top
well the thing is I haven't really done
well the thing is I haven't really done
enough analysis on it to like I need to
enough analysis on it to like I need to
Benchmark exactly how much better it is
Benchmark exactly how much better it is
than like bayy and sweep but I think
than like bayy and sweep but I think
it's very well like if it performs as
it's very well like if it performs as
well as it looks like it's going to it
well as it looks like it's going to it
could very well be a contender for top
could very well be a contender for top
10 contributions but it's really going
10 contributions but it's really going
to depend on like whether we get native
to depend on like whether we get native
Integrations with wandb and stuff uh and
Integrations with wandb and stuff uh and
Rib is not ml it's just a graphics
Rib is not ml it's just a graphics
library but I think it's the best one
library but I think it's the best one
like RB is so
like RB is so
nice and I'm very like I do not give
nice and I'm very like I do not give
praise Broadley like I I generally think
praise Broadley like I I generally think
that most code is [ __ ] like most code is
that most code is [ __ ] like most code is
just garbage nobody knows what they're
just garbage nobody knows what they're
doing like GPT is not going to automate
doing like GPT is not going to automate
everything of course it's not we have no
everything of course it's not we have no
skill whatsoever in the field yada yada
skill whatsoever in the field yada yada
yada like Boomer rant whatever but uh
yada like Boomer rant whatever but uh
those three are
awesome I have a bit of art expertise
awesome I have a bit of art expertise
and might help fancy up the Sim View and
and might help fancy up the Sim View and
stuff that would be
stuff that would be
amazing that would be amazing you want
amazing that would be amazing you want
to do stuff for this H
yeah because I'm not going to use the
yeah because I'm not going to use the
DOTA map for it right I think that would
DOTA map for it right I think that would
be a little bit much like ripping map
be a little bit much like ripping map
data for an open source project is one
data for an open source project is one
thing like ripping the artwork from DOTA
thing like ripping the artwork from DOTA
I think that's a
nogo it would be very easy to do but I
nogo it would be very easy to do but I
think they'd be mad don't
you I genuinely don't know how artists
you I genuinely don't know how artists
do do things um hold
on let me show
on let me show
you I'll show you I did like one digital
you I'll show you I did like one digital
art painting ever and it was terrible I
art painting ever and it was terrible I
did like for a cover of a short
story okay here's my garbage digital art
story okay here's my garbage digital art
painting
okay that's
[Music]
it mostly do
it mostly do
3D I if you want to do 3D you can do
3D I if you want to do 3D you can do
3D we'll have to figure out how to had
3D we'll have to figure out how to had
to Lo to load it I mean the concept was
to Lo to load it I mean the concept was
pretty cool it was like I actually used
pretty cool it was like I actually used
to be a creative writer like growing up
to be a creative writer like growing up
I did I like I wrote a fair bit of
I did I like I wrote a fair bit of
stuff I got like 150 pages into a novel
stuff I got like 150 pages into a novel
as
well wrote like sci-fi and fantasy
stuff was
fun for
okay so these spawn functions need to
okay so these spawn functions need to
get moved around
essentially is that wait one thing I
essentially is that wait one thing I
want to know
get
entity only
entity only
novel in sixth grade about
something I uh I think wait six it might
something I uh I think wait six it might
have been seventh I think I
have been seventh I think I
published I published a a uh like a
published I published a a uh like a
short children's book in seventh
grade I mean I had a lot of help with
grade I mean I had a lot of help with
the publishing obviously but I did write
the publishing obviously but I did write
it
myself entity star Target
oh that's so
oh that's so
awkward because it's I it's not it's
awkward because it's I it's not it's
star
player right you got to do like
player right you got to do like
this I always forget that it's supposed
this I always forget that it's supposed
to be grouped like this right
for some reason in my head I always put
for some reason in my head I always put
the like the star I I hate the Syntax
the like the star I I hate the Syntax
for this stuff like in my head the star
for this stuff like in my head the star
goes with the type right like the type
goes with the type right like the type
is is entity
star is there some way to train video
star is there some way to train video
save uh gifts yes yes there is um mind
save uh gifts yes yes there is um mind
you if you're trying to save a really
you if you're trying to save a really
long gift then you're going to run into
long gift then you're going to run into
issues uh but in
issues uh but in
clean you will out of memory your
clean you will out of memory your
machine if you leave this running for
machine if you leave this running for
too long by the way um there's there
too long by the way um there's there
might be a small leak not in the
might be a small leak not in the
environment but in the renderer so
environment but in the renderer so
there's this gift saver here in clean
there's this gift saver here in clean
puff RL and you can set like the number
puff RL and you can set like the number
of ticks up here there's not a command
of ticks up here there's not a command
line option for it or anything but you
line option for it or anything but you
can set number of ticks here and you can
can set number of ticks here and you can
set like a frame skip over here if you
set like a frame skip over here if you
want to only record every few frames
cool to see people starting to use stuff
though let me reorder the methods before
though let me reorder the methods before
I forget to do
that I want to
that I want to
have so we have inette
short
methods I want the spawn functions
turn the AC one
sec the one other thing that helps a lot
sec the one other thing that helps a lot
with the project is if you folks if you
with the project is if you folks if you
use Twitter if you just post stuff every
use Twitter if you just post stuff every
so often it helps a lot
so often it helps a lot
I mean the whole thing at the moment
I mean the whole thing at the moment
right is like building puffer as uh open
right is like building puffer as uh open
source stuff so hopefully companies will
source stuff so hopefully companies will
eventually want to like use it and
eventually want to like use it and
puffer can get some some contracts so we
puffer can get some some contracts so we
can build out a bigger cluster and like
can build out a bigger cluster and like
do more cool big
stuff for now this is just me funding
this
e
e
e
e
e e
Ro's looking a lot
Ro's looking a lot
cleaner we cut like few 200 lines off of
cleaner we cut like few 200 lines off of
it
today 642
very
nice so many cool projects to do with
nice so many cool projects to do with
like hyperf Sim like
this this is like about the scope of a
this this is like about the scope of a
project that I like as well like this is
project that I like as well like this is
pretty much like the scope of a project
pretty much like the scope of a project
that I'm comfortable doing without it
that I'm comfortable doing without it
taking for absolutely
taking for absolutely
forever it's still going to take a while
but okay so there's some respawn stuff
but okay so there's some respawn stuff
that we can maybe look at just a little
that we can maybe look at just a little
bit but
bit but
then I want to put this reset method at
then I want to put this reset method at
the bottom before
step right
actually or do want I want to put this
actually or do want I want to put this
at the
at the
top no I think it's a long method I
top no I think it's a long method I
think I put it at the
think I put it at the
bottom you just go to the bottom of the
bottom you just go to the bottom of the
file
file
yeah
yeah
uh a lot of these variables could just
uh a lot of these variables could just
be on lined
right YX
attack star
attack star
player Target creep
player Target creep
neutral
Tower PID Target PID
action e
I don't know if I like having a Big Blob
I don't know if I like having a Big Blob
of variables like this but I also really
of variables like this but I also really
don't like having 50 lines of variable
don't like having 50 lines of variable
deaths at the start so we'll leave it
deaths at the start so we'll leave it
for
now reset then we got all the
skills got cooldowns and status this
skills got cooldowns and status this
feels like this should go higher up this
feels like this should go higher up this
is not part of skills cuz these are all
is not part of skills cuz these are all
skills
here I like it but I also
here I like it but I also
like Pascal so what can I
say there is a question as to whether
say there is a question as to whether
one should like
pescal I don't know I'm tempted the next
pescal I don't know I'm tempted the next
time I get a little bit of spare time
time I get a little bit of spare time
like after I finish the simulation
like after I finish the simulation
update maybe maybe finish some videos
update maybe maybe finish some videos
it's a lot of work actually we'll see um
it's a lot of work actually we'll see um
I don't know I might want to do Jam some
I don't know I might want to do Jam some
Zig just try that out might want to see
Zig just try that out might want to see
if
if
I I want to see if there's a non- cursed
I I want to see if there's a non- cursed
web development stack so I can maybe put
web development stack so I can maybe put
some of this these cool things online
some of this these cool things online
instead of just putting
gifts but I'm guessing web dev's pretty
gifts but I'm guessing web dev's pretty
damn cursed
I think this is legal right
syntax
error guess that's not legal I guess it
error guess that's not legal I guess it
has to be the same
type I do not use use the
function neutral AI should go after
function neutral AI should go after
creep
AI e
it's attack function should go higher
it's attack function should go higher
I'm just kind of
I'm just kind of
like I'm just sort of like semantically
like I'm just sort of like semantically
organizing stuff at the
moment zigg Lings and messed with
moment zigg Lings and messed with
threading
do you know what a man goes through when
do you know what a man goes through when
you don't have
threads you want to know what how much
threads you want to know what how much
Cur [ __ ] I had to put up with without
Cur [ __ ] I had to put up with without
threads to get Python's multiprocessing
threads to get Python's multiprocessing
to be
fast there's like a whole section of the
fast there's like a whole section of the
puffer white paper that's just devoted
puffer white paper that's just devoted
to like cursed tricks to make
to like cursed tricks to make
multi-processing really fast you know I
multi-processing really fast you know I
actually the puffer multiprocessing one
actually the puffer multiprocessing one
of the things I did that made it so much
of the things I did that made it so much
faster than everything else is I
faster than everything else is I
completely cut out interprocess
completely cut out interprocess
communication and I
communication and I
had processes would signal each other by
had processes would signal each other by
writing to a block of shared memory and
writing to a block of shared memory and
busy waiting for updates on that block
busy waiting for updates on that block
and that ended up cutting out like 40
and that ended up cutting out like 40
micro seconds per uh per
micro seconds per uh per
cycle which just like made the whole
cycle which just like made the whole
thing way way way faster and scale 10
thing way way way faster and scale 10
times
better I've seen some [ __ ] all
right looking at somebody who's seen
right looking at somebody who's seen
some [ __ ]
did I say milliseconds I think it was
did I say milliseconds I think it was
micro I said microc seconds I hope um
micro I said microc seconds I hope um
but it was still
huge I have liked raise actor pool as
huge I have liked raise actor pool as
the best multiprocessing tool in Python
the best multiprocessing tool in Python
it has an amazing API but it's [ __ ]
it has an amazing API but it's [ __ ]
slow rib is the actual slowest multi
slow rib is the actual slowest multi
prosting implementation around for
prosting implementation around for
shortlived
jobs I timed it is bad it real
jobs I timed it is bad it real
bad sorry
I mean we're talking like 100,000 jobs
I mean we're talking like 100,000 jobs
per
per
second um puffer actually I think can go
second um puffer actually I think can go
higher than that but yeah like 100,000
higher than that but yeah like 100,000
job like small jobs per
job like small jobs per
second right
so you basically you have 10 micros
seconds now of course you have that per
seconds now of course you have that per
process so you have a little more time
process so you have a little more time
than that but still it's
tight I mean when I say like puffer
tight I mean when I say like puffer
literally our implementation for fast
literally our implementation for fast
workloads can be 10 times plus faster
workloads can be 10 times plus faster
than other multiprocessing
than other multiprocessing
implementations it makes that much of a
difference I don't want to save a line
difference I don't want to save a line
that badly to have to do
that even I have
that even I have
limits oh jeez
okay 1231 lines does it still
work and just reordered a bunch of stuff
work and just reordered a bunch of stuff
it's way nicer now
though rid of L2
distance 1220
lines it's way
lines it's way
nicer 40 kilobytes of
nicer 40 kilobytes of
code is what you're looking at for 40kb
code is what you're looking at for 40kb
for this whole
Sim let me commit up these
Sim let me commit up these
changes this is pretty
changes this is pretty
sweet I didn't want to do the human
mode
mode
uhoh that doesn't look good
still
huge I think it was, 1500 something
huge I think it was, 1500 something
before so I think we literally cut 300
before so I think we literally cut 300
lines off the implementation
that's pretty solid you don't often get
that's pretty solid you don't often get
to delete 300 lines and have it do the
to delete 300 lines and have it do the
same
thing what's happening
here this is two
rows eight columns
rows eight columns
right what was the implementation
before 0 through
S is there an eight
it's literally uh 0 through seven isn't
it's literally uh 0 through seven isn't
it yeah
really
255 well
255 was that a
sentinel as yeah that is a
sentinel e
what the
what the
hell an action
eight how the hell is there an Eight in
eight how the hell is there an Eight in
the map data
oh wait what
do
this all
right this works the same as before
right this works the same as before
right
here come the
agents
nice 1222 lines
that's a lot of
that's a lot of
changes for
[Music]
[Music]
nothing
nothing
cool o more
cool o more
RB our text Packer can pack Sprites and
fonts that's really useful
that's like really
useful Ray is like one of these
useful Ray is like one of these
completely cracked devs who should be
completely cracked devs who should be
making a lot more than he is making
making a lot more than he is making
though I have no idea how much he's
though I have no idea how much he's
making but given that he's selling these
making but given that he's selling these
things on hiio he should be making all
things on hiio he should be making all
of the dollars cuz he makes really
of the dollars cuz he makes really
really really good
software what the hell is it with my ads
software what the hell is it with my ads
like these freaking
ads Ray is so so nice you know they
ads Ray is so so nice you know they
bindings for basically every language as
bindings for basically every language as
well and it's the same API so you can
well and it's the same API so you can
literally use it with anything it's
literally use it with anything it's
native to see it's a single it's a
native to see it's a single it's a
single file uh header only
single file uh header only
Library it's like one. H file it's
awesome it's like the library that I'd
awesome it's like the library that I'd
wished existed forever
okay it's 7:05 I'm trying to think if
okay it's 7:05 I'm trying to think if
there's anything else I want to do today
there's anything else I want to do today
or if I just want to call
or if I just want to call
it
um well we could at least see if uh if
um well we could at least see if uh if
it's stable enough to run experiments on
it's stable enough to run experiments on
right it'd be nice to get a carb sweep
right it'd be nice to get a carb sweep
going maybe we can figure out what was
going maybe we can figure out what was
wrong with carbs
wrong with carbs
before let's try
that I got to go to dinner after
did I build this I did right
did I build this I did right
yeah yeah we've already rebuilt
yeah yeah we've already rebuilt
okay
um
e e
there was some weird bug where after one
there was some weird bug where after one
run it would like pit her out you see a
run it would like pit her out you see a
little bit currently rewriting a couple
little bit currently rewriting a couple
tools from C to Ray
tools from C to Ray
[ __ ] that's
cool I mean I love the idea of C but in
cool I mean I love the idea of C but in
practice I never end up jamming C
like the language itself is fine but
like the language itself is fine but
like I want more compile time checks
like I want more compile time checks
essentially like I want I want just like
essentially like I want I want just like
tools built around it I probably just
tools built around it I probably just
want Zig as what I want to be honest
want Zig as what I want to be honest
like I just want to be able to like
like I just want to be able to like
compile C slow in a way that checks for
compile C slow in a way that checks for
all the stupid things and gives me
all the stupid things and gives me
reasonable error messages and then
reasonable error messages and then
compile it fast and not do any of the
compile it fast and not do any of the
checks
checks
you
know oh I see what happened
that's why I end up never using
C I also just really value my Dev speed
right well I guess that's really the
right well I guess that's really the
main thing though is just
main thing though is just
like fixing bugs with shitty or no error
like fixing bugs with shitty or no error
messages is not
fun just want decent checks so I don't
fun just want decent checks so I don't
have shitty error messages
language itself is great
why is this invalid
pretty much necessitates
pretty much necessitates
debugger it doesn't even help though
debugger it doesn't even help though
like freaking seg
faults like I'll spend most of my time
faults like I'll spend most of my time
writing python in a debugger but the
writing python in a debugger but the
thing is it at least it doesn't want it
thing is it at least it doesn't want it
like the debugger is not actively trying
like the debugger is not actively trying
to kill you right
valid hyper
valid hyper
configuration why
um oh that's
obnoxious yeah that's really
obnoxious
e e
okay I think I fixed
carbs we can use carbs now carbs is
carbs we can use carbs now carbs is
pretty cool after all
pretty cool after all
right I just want to see if the largest
right I just want to see if the largest
batch size om is the machine
128k mini
128k mini
batch I like
batch I like
bread Bread's
bread Bread's
okay like Bagels do Bagels count as
okay like Bagels do Bagels count as
bread pasta is very good
I generally like
pasta meat is much better than
pasta meat is much better than
bread it's that time of the
evening there's a little Mexican
evening there's a little Mexican
restaurant that I go to down the street
restaurant that I go to down the street
pretty much every night
they do like a big tortilla soup with
they do like a big tortilla soup with
chicken avocado and cheese and stuff
chicken avocado and cheese and stuff
good quesadillas and maybe once a week
good quesadillas and maybe once a week
or
or
Margarita good time
I think Bagels count bagels are good and
I think Bagels count bagels are good and
I think with Zig build system you can do
I think with Zig build system you can do
arbitrary comp
arbitrary comp
time compile time code generation which
time compile time code generation which
is cool haven't tried any of that
I mean I don't like the thing I'm asking
I mean I don't like the thing I'm asking
for is
for is
like
like
look it should
be
like it should just be like you know
like it should just be like you know
whatever the build system the build
whatever the build system the build
system should be called zag so it should
system should be called zag so it should
just be like zag your file Das Das safe
just be like zag your file Das Das safe
whatever or like zag your file Das Das
whatever or like zag your file Das Das
fast that's it
done it's all I
done it's all I
want if you compile with dh- safe it
want if you compile with dh- safe it
uses a better it uses a memory allocator
uses a better it uses a memory allocator
that does bounds checking on freaking
that does bounds checking on freaking
everything it does uninitialized checks
everything it does uninitialized checks
on freaking everything right it does
on freaking everything right it does
like no pointer checks on
like no pointer checks on
everything
everything
right that'd be
good e
didn't I literally just fix
this e
okay so you can't have both carbs and
okay so you can't have both carbs and
non- carbs working at the same that's
fine cool well we have a sweep running
fine cool well we have a sweep running
uh this is pretty cool so I'll show this
uh this is pretty cool so I'll show this
off and then I think I'll call it for
off and then I think I'll call it for
tonight uh I usually have a long work
tonight uh I usually have a long work
day on Saturday I do solo Dev off
day on Saturday I do solo Dev off
stream and I like to get myself a lot of
stream and I like to get myself a lot of
rest before then then on Sunday I got to
rest before then then on Sunday I got to
go run 22 miles which is going to
go run 22 miles which is going to
suck so
suck so
yeah
yeah
um carbs
okay so this is pretty cool uh we now
okay so this is pretty cool uh we now
have the wanb sweeps
have the wanb sweeps
UI pretty much as If This Were Native
UI pretty much as If This Were Native
integrated with wand B except instead of
integrated with wand B except instead of
using their default basy and sweep
using their default basy and sweep
method it's using carbs so hyper
method it's using carbs so hyper
parameters should be intelligently
parameters should be intelligently
Chosen and they should tend to get much
Chosen and they should tend to get much
better over time so you should actually
better over time so you should actually
if your environment is amenable to
if your environment is amenable to
Improvement via better hyper parameters
Improvement via better hyper parameters
and long longer training if you're not
and long longer training if you're not
just solving it you should see this
just solving it you should see this
thing where like you get this cloud of
thing where like you get this cloud of
points that goes up over time and then
points that goes up over time and then
you just have to run lots of
jobs let me make sure it's set to a big
number yeah we're
number yeah we're
good all right
um I will let let me know how uh I just
um I will let let me know how uh I just
pushed everything so should have the
pushed everything so should have the
latest
latest
versions
um I will be back streaming on Monday if
um I will be back streaming on Monday if
you want to try to get stuff working
you want to try to get stuff working
before then and have any questions I'm
before then and have any questions I'm
mostly going to be deving tomorrow but
mostly going to be deving tomorrow but
I'll probably see them if you just post
I'll probably see them if you just post
him in uh the Discord the Discord is
him in uh the Discord the Discord is
pretty much everywhere you look for it
pretty much everywhere you look for it
discord.gg
puffer it's pretty nice we've got
puffer it's pretty nice we've got
uh says 44
uh says 44
plus yeah 370 people in it already which
plus yeah 370 people in it already which
is
nice
um
um
yeah that's about
yeah that's about
all looks like this very well could hit
all looks like this very well could hit
700 over the weekend which would be
700 over the weekend which would be
amazing cool see I can get it running
amazing cool see I can get it running
tonight or in the morning yeah whatever
tonight or in the morning yeah whatever
you want to do and um I mean there's a
you want to do and um I mean there's a
lot of work that can be done on and
lot of work that can be done on and
around it
around it
so if you have specific ideas for stuff
so if you have specific ideas for stuff
that you want to do on it you definitely
that you want to do on it you definitely
let me know so that uh we don't do the
let me know so that uh we don't do the
exact same thing since I Dev pretty much
exact same thing since I Dev pretty much
all day Saturday as well so just you
all day Saturday as well so just you
know message me or whatever I don't
know message me or whatever I don't
really do any Dev on Sunday I kind of
really do any Dev on Sunday I kind of
just run until I'm unable to think and
just run until I'm unable to think and
then I like pass out it's pretty much
then I like pass out it's pretty much
what my Sunday looks like and then I go
what my Sunday looks like and then I go
back to work on
Monday this is so
Monday this is so
awesome this is a great
awesome this is a great
growth and I've really just been doing
growth and I've really just been doing
Sims for the last month as well
oh I need to get
um generate a little gift real
quick e
just making a gift for Twitter and then
just making a gift for Twitter and then
I'm signing
off the promo helps a ton it really
off the promo helps a ton it really
does like basically none of what I'm
does like basically none of what I'm
doing would be worth building if uh
doing would be worth building if uh
nobody were seeing
it
e
e
e e
why I post random stuff because
why I post random stuff because
occasionally it just blows up even the
occasionally it just blows up even the
stupidest
thing very nice that's good progress for
thing very nice that's good progress for
the
week all right good night tree I'm gonna
week all right good night tree I'm gonna
go grab dinner and pass out
go grab dinner and pass out
um thanks for stopping by and uh see you

Kind: captions
Language: en
okay we are
live I just posted something ridiculous
live I just posted something ridiculous
that's why I'm a little late
today somebody added the E puff that's
today somebody added the E puff that's
so funny
uh
okay let's
okay let's
uh let's post some stuff with
this and then we'll get started on
dev it'll be fun
let me just I'll do one thing real quick
let me just I'll do one thing real quick
before we start
oh cool
huh this is
huh this is
cool he's back doing Minecraft stuff
cool he's back doing Minecraft stuff
that's
awesome one sec guys this is cool
this looks
cool I want to see what he's doing with
cool I want to see what he's doing with
this real quick and then we'll start Dev
that's so bait that is so bait
[Laughter]
[Laughter]
a okay
yeah I've not engaged with this sty of
yeah I've not engaged with this sty of
programming at
programming at
all h
okay yeah
yes yes
graduate student descent
yep
yep
[Music]
mhm is my desktop audio muted
shouldn't
be what just close captioning
okay I see what he's
okay I see what he's
doing yeah I see what he's doing
okay trying to automate optim
okay trying to automate optim
optimization of
optimization of
prompts for specific tasks
H all okay I'm going to let him finish
H all okay I'm going to let him finish
this guys and then I'm going to start on
this guys and then I'm going to start on
the MOBA
the MOBA
Dev I don't know if it's getting desktop
Dev I don't know if it's getting desktop
audio or
audio or
not but his stream is on x
mhm
huh version is he making get for prompts
huh version is he making get for prompts
I
what yeah you can serialize functions
what yeah you can serialize functions
there no Clos
there no Clos
captioning no Clos captioning is
annoying Mo Dev starts in a minute
annoying Mo Dev starts in a minute
Will's cool though and I want to let him
Will's cool though and I want to let him
go explain this this is cool
I don't know if it's getting desktop
audio we don't hear him okay I'll fix
audio we don't hear him okay I'll fix
that after this I you can click his
that after this I you can click his
stream for now I'll be starting mob Dev
stream for now I'll be starting mob Dev
in one second here anyways
in one second here anyways
and I'll fix that stream element in a
and I'll fix that stream element in a
bit he's on X right now William
Gus okay so what he's doing is he's
Gus okay so what he's doing is he's
building he's building like a functional
building he's building like a functional
ver versioning and functioning
ver versioning and functioning
functionals functionals ah functions and
functionals functionals ah functions and
versioning for prompts to language
versioning for prompts to language
models I got baited by this
though okay it's kind of cool how
though okay it's kind of cool how
quickly he was able to build something
quickly he was able to build something
like this
like this
I will
say
mhm I'm
mhm I'm
here though you have very long
here though you have very long
explanations here well
he's a good salesman he's got very long
he's a good salesman he's got very long
pitches
pitches
though my
gosh hey Noah I'll be on the mob in a
second at least I see what he's building
second at least I see what he's building
I've always been wondering what the heck
I've always been wondering what the heck
Will's up to
Will's up to
so now I
know I'll tell the little story about
know I'll tell the little story about
will as well cuz Will's
will as well cuz Will's
cool in a second
oh he builds computation graphs of
oh he builds computation graphs of
prompts that's
prompts that's
interesting
yeah
yeah
okay so it's like chaining together
okay so it's like chaining together
little
little
pieces of uh of prompts Okay so so he's
pieces of uh of prompts Okay so so he's
doing a lang chainy like thing
doing a lang chainy like thing
with additional nice things okay that's
with additional nice things okay that's
funny
since you're not getting audio so to
since you're not getting audio so to
summarize in my own words he has a
summarize in my own words he has a
little framework that lets you write
little framework that lets you write
prompts as functions store all versions
prompts as functions store all versions
of them and generate computation graphs
of them and generate computation graphs
over different functions so that you
over different functions so that you
have computation graphs of different
have computation graphs of different
functions that are prompts to a language
functions that are prompts to a language
model so you can chain together little
model so you can chain together little
be little pieces of uh language model
be little pieces of uh language model
outputs okay I see what he's doing
it's cool
all right cool
all right cool
so yeah
so yeah
um I I didn't expect him to give such a
um I I didn't expect him to give such a
long-winded explanation but he does work
long-winded explanation but he does work
on cool stuff uh will is previously open
on cool stuff uh will is previously open
AI uh before that CMU I briefly ran into
AI uh before that CMU I briefly ran into
him as a PhD student he's also behind
him as a PhD student he's also behind
mineral which is like the Minecraft uh
mineral which is like the Minecraft uh
binding the Minecraft AI bindings for
binding the Minecraft AI bindings for
Stuff um really cool project I don't
Stuff um really cool project I don't
Advocate this for like uh RL from
Advocate this for like uh RL from
scratch but that doesn't mean there
scratch but that doesn't mean there
aren't a ton of other things you can do
aren't a ton of other things you can do
with it so really really cool project
with it so really really cool project
big project huge amount of work um and
big project huge amount of work um and
he's built some startups and stuff as
he's built some startups and stuff as
well so real cool
guy so welcome uh today we're going to
guy so welcome uh today we're going to
do some cool MOBA
do some cool MOBA
stuff I'd also like to mention this
stuff I'd also like to mention this
ridiculous article that I wrote It's on
X this is a thing that exists I've been
X this is a thing that exists I've been
tempted to write this up as an article
tempted to write this up as an article
for a while but uh you can go check it
for a while but uh you can go check it
out it's pretty
short if you're looking for some
entertainment puffer lib is at 689 which
entertainment puffer lib is at 689 which
is fantastic so thank you for the
is fantastic so thank you for the
support on that
support on that
and now let's take a look
and now let's take a look
at the actual project that we're
at the actual project that we're
supposed to be working on today so I've
supposed to be working on today so I've
got a few things with this um I had some
got a few things with this um I had some
difficulty with the sweeps the WB sweeps
difficulty with the sweeps the WB sweeps
integration for some reason
overnight I did launch a new one where
overnight I did launch a new one where
is
is
it 7 hours
it 7 hours
ago did this actually work work oh it
ago did this actually work work oh it
looks like it did actually work never
looks like it did actually work never
mind
um yeah I guess this did work cool
um yeah I guess this did work cool
so we have
so we have
here actually this is really
here actually this is really
good actually this is like really good
good actually this is like really good
huh so uh we have this automatic hyper
huh so uh we have this automatic hyper
parameter sweep over the environment and
parameter sweep over the environment and
uh it's finding us better and better you
uh it's finding us better and better you
know parameters to train the model with
know parameters to train the model with
what is this one
here this is big mini batch
size train batch size of hold on let's
size train batch size of hold on let's
see what's
uh train batch size is like a
uh train batch size is like a
million so really quite large batch
million so really quite large batch
sizes
sizes
and then gamma Lambda okay some values
and then gamma Lambda okay some values
in
in
there uh reasonably High entropy
there uh reasonably High entropy
coefficient cool uh four update EPO is a
coefficient cool uh four update EPO is a
little bit
little bit
weird but we will keep this for now
weird but we will keep this for now
so yeah let's look let's look at this
so yeah let's look let's look at this
model as I think
model as I think
it's where did it go wait where did our
it's where did it go wait where did our
good one go we just had a good model
good one go we just had a good model
where did it go
yeah there we go this
one o look at that they're leveling
one o look at that they're leveling
up you see
that we got some reward here for taking
Towers it looks like they actually sto
Towers it looks like they actually sto
just like rushing mid and they're
just like rushing mid and they're
starting to farm more
do we have overall reward somewhere yeah
do we have overall reward somewhere yeah
look at this pretty
look at this pretty
solid I'm assuming this is going to be
solid I'm assuming this is going to be
somewhat slow yeah this only trains at
somewhat slow yeah this only trains at
about 300,000 steps per second but
about 300,000 steps per second but
that's still
that's still
reasonable so why don't we go launch
reasonable so why don't we go launch
this as an a standalone experiment and
this as an a standalone experiment and
uh we'll see what we get out of this and
uh we'll see what we get out of this and
then we will I mean we'll have lots and
then we will I mean we'll have lots and
lots of stuff to do on this project
lots of stuff to do on this project
today we'll start by training a model
today we'll start by training a model
and then uh we're going to clean up a
and then uh we're going to clean up a
whole bunch of stuff around the project
whole bunch of stuff around the project
we're going to get stuff into a format
we're going to get stuff into a format
where like creep scale properly skills
where like creep scale properly skills
are usable uh we'll start balancing
are usable uh we'll start balancing
stuff right we'll set stuff up so we can
stuff right we'll set stuff up so we can
really really easily balance things and
really really easily balance things and
we'll generally start cleaning up this
we'll generally start cleaning up this
project because this is not that far off
project because this is not that far off
from a releasable
from a releasable
state so yeah let's started here
this is the machine where I was running
this is the machine where I was running
stuff did I change
anything and let's see the exact typer
parameters we're just going to set these
parameters we're just going to set these
as the default so that we can run
as the default so that we can run
this they're logged for us right
this they're logged for us right
here we've got a stupidly large batch
size 1
size 1
milon
24,000 mini batch size of 64k which is
huge
huge
um be PT Horizon of one that's really
um be PT Horizon of one that's really
awkward I'm sure that these aren't
awkward I'm sure that these aren't
actually optimal hyper parameters
actually optimal hyper parameters
they're just like you know better than
they're just like you know better than
whatever we had so once we run really
whatever we had so once we run really
good sweeps we're going to find stuff
good sweeps we're going to find stuff
that's way uh even way better than
this wh
CL entropy coefficient is almost the
CL entropy coefficient is almost the
same as what we guessed which is kind of
same as what we guessed which is kind of
fun
fun
it's usually a decent starting point
it's usually a decent starting point
like o1 O2 or whatever usually a decent
like o1 O2 or whatever usually a decent
starting
starting
point uh Lambda this is a really stupid
point uh Lambda this is a really stupid
Lambda value this is way too low so I'm
Lambda value this is way too low so I'm
assuming that this can even do way
assuming that this can even do way
better than it's doing
better than it's doing
now
now
gamma this is a somewhat reasonable
gamma this is a somewhat reasonable
gamma value though it's still it's still
gamma value though it's still it's still
very low this is like a very shortterm
very low this is like a very shortterm
very greedy agent oh how did you set up
very greedy agent oh how did you set up
hyper pram sweeps this is integrated
hyper pram sweeps this is integrated
with puffer lib we've got a w b sweeps
with puffer lib we've got a w b sweeps
integration that makes it very easy to
integration that makes it very easy to
launch many jobs choosing hyper
launch many jobs choosing hyper
parameters from specific section so this
parameters from specific section so this
is just overrides here there's a default
is just overrides here there's a default
that I have that has like reasonable
that I have that has like reasonable
ranges for most of the default hyper
ranges for most of the default hyper
parameters um here I just I increased
parameters um here I just I increased
the batch size so that it could use
the batch size so that it could use
larger batch sizes and stuff but yeah
larger batch sizes and stuff but yeah
that's what we do it makes it very very
that's what we do it makes it very very
easy it's one of the big things I'm
easy it's one of the big things I'm
happy with uh with Puffer
and then very low learning rate is
and then very low learning rate is
interesting
oops Max grad
oops Max grad
Norm probably we didn't even need to
Norm probably we didn't even need to
sweep quite all of
these total time steps is
these total time steps is
this is 400 mil that we
this is 400 mil that we
did
did
424 we'll use the
424 we'll use the
exact value
exact value
here even though I really should not
here even though I really should not
actually 500 mil is fine let's just do
actually 500 mil is fine let's just do
500 mil where in the libraryies it set
500 mil where in the libraryies it set
up it's just in the demo
up it's just in the demo
file I try not to add like if you think
file I try not to add like if you think
about it like wanb already has their own
about it like wanb already has their own
sweeps Library so why would I put a
sweeps Library so why would I put a
wrapper for an existing Library like
wrapper for an existing Library like
into the core of puffer right I'm just
into the core of puffer right I'm just
going to give you a demo file that has
going to give you a demo file that has
like the simplest way that I found to
like the simplest way that I found to
use it right I'm not going to add yet
use it right I'm not going to add yet
another layer on top of an existing
Library so it's just in the demo file
Library so it's just in the demo file
and uh the configs are already set up
and uh the configs are already set up
for it
okay so this should be all of our
hypers isn't integrate Rand WB sweeps
hypers isn't integrate Rand WB sweeps
just def finding sweep config yaml
just def finding sweep config yaml
file um kind of but
file um kind of but
like
like
there's if there weren't so many ways to
there's if there weren't so many ways to
shoot yourself in the foot with it then
shoot yourself in the foot with it then
yes I'll put it that
way e
I mean frankly like the demo for puffer
I mean frankly like the demo for puffer
it's
it's
not like the demo for puffer is just
not like the demo for puffer is just
meant to be a really really good starter
meant to be a really really good starter
like really really good starter code for
like really really good starter code for
just about whatever you could want to do
just about whatever you could want to do
right so has like all the stuff that
right so has like all the stuff that
you'd want already set up without you
you'd want already set up without you
having to spend a few hours debugging
having to spend a few hours debugging
Arcane API
[ __ ] and then you know I spent a few
[ __ ] and then you know I spent a few
more hours trying to make stuff nice
more hours trying to make stuff nice
stuff like that
right one plus one
welcome is it still running the
sweep yeah it is but what sweep is it
running head phones look cool I actually
running head phones look cool I actually
forgot that I don't need these I'm
forgot that I don't need these I'm
literally not listening to
literally not listening to
anything I had these on cuz I was
anything I had these on cuz I was
looking at Will's stream before
so is this really seven hours ago is
so is this really seven hours ago is
when I did this so 1:40 I guess I did do
when I did this so 1:40 I guess I did do
this at like 6:00 a.m. or something 7
this at like 6:00 a.m. or something 7
a.m. right so I guess that's correct
um
um
yeah do I want to train over
this I guess so right
this I guess so right
how well is this one doing at the
how well is this one doing at the
moment is this like doing
moment is this like doing
Godly no this is a bad run anyways okay
Godly no this is a bad run anyways okay
I'm fine killing this for
now it's not a carb sweep anyways I
now it's not a carb sweep anyways I
couldn't the carb sweep something weird
couldn't the carb sweep something weird
happened with it so we just used the
happened with it so we just used the
basian sweep as a backup because I woke
basian sweep as a backup because I woke
up this morning and it wasn't working so
up this morning and it wasn't working so
I just I did this one instead
so we're going to launch this in the
so we're going to launch this in the
background to run us a like a 500 mil or
background to run us a like a 500 mil or
so and hopefully this will give us uh
so and hopefully this will give us uh
trained checkpoints of our best set of
trained checkpoints of our best set of
hyper parameters found thus far we'll
hyper parameters found thus far we'll
see if it does anything interesting it
see if it does anything interesting it
might have just found a weird way to
might have just found a weird way to
reward hack I actually I have no
idea I see the stream is warmed up
idea I see the stream is warmed up
now so uh the quick update from uh
now so uh the quick update from uh
overnight is just that we ran a small
overnight is just that we ran a small
basic hyper pram sweep this is by no
basic hyper pram sweep this is by no
means optimal um but we found something
means optimal um but we found something
that looks like it should be
that looks like it should be
substantially better than the model from
substantially better than the model from
before the way that the sweeps
before the way that the sweeps
integration works though at the moment
integration works though at the moment
is to prevent it from creating a
is to prevent it from creating a
bajillion files um it just finds you the
bajillion files um it just finds you the
hyper parameters it doesn't actually
hyper parameters it doesn't actually
save all the checkpoints for everything
save all the checkpoints for everything
I will have to fix that in the future um
I will have to fix that in the future um
but yeah so we're going to retrain that
but yeah so we're going to retrain that
now we make sure that it reproduces the
now we make sure that it reproduces the
run which is a nice sanity we'll load
run which is a nice sanity we'll load
that up and we'll go from
that up and we'll go from
there uh I'm going to be trying to
there uh I'm going to be trying to
balance the game and enable some of the
balance the game and enable some of the
better features today I'm going to be
better features today I'm going to be
trying to do to clean up a bunch of
trying to do to clean up a bunch of
stuff and make this into something
stuff and make this into something
that's close to releasable
that's close to releasable
State I also I'm a little bit late on
State I also I'm a little bit late on
the stream today because I was doing
the stream today because I was doing
this thing where is it
so if you're looking for a fun dumb
so if you're looking for a fun dumb
article to
article to
read there's a fun dumb article on
X all
X all
right we're going to just put this in
right we're going to just put this in
the background then for
now and uh let's see oops move
this let's see what we're going to do
this let's see what we're going to do
here
so the first thing
so the first thing
was agents not being able to use skills
was agents not being able to use skills
at the moment um is very
at the moment um is very
wonky uh this is simply because I
wonky uh this is simply because I
disabled the uh I mean I just disabled
disabled the uh I mean I just disabled
the option because I thought that it was
the option because I thought that it was
bugged so we're going to reenable that
bugged so we're going to reenable that
yeah we're going to reenable that and
yeah we're going to reenable that and
um the one slightly annoying thing about
um the one slightly annoying thing about
that is it can potentially make this new
that is it can potentially make this new
model that we're going to train not work
model that we're going to train not work
with it so let me just let me see one
with it so let me just let me see one
thing how long is this going to take I
thing how long is this going to take I
don't want to just be sitting here
don't want to just be sitting here
waiting for
waiting for
it 25 minutes okay so in the meantime
it 25 minutes okay so in the meantime
we'll start looking at how to clean up a
we'll start looking at how to clean up a
few other things before we add the
few other things before we add the
skills back we'll probably like start on
skills back we'll probably like start on
the refactor base
basically there's a whole bunch of
basically there's a whole bunch of
hard-coded mess at the moment
hard-coded mess at the moment
um I want to see
um I want to see
how how I should level up
how how I should level up
skills because I think most of the hard
skills because I think most of the hard
coding comes from these
skills I could technically just leave
skills I could technically just leave
them like this right
pros and cons
pros and cons
um
H well you need to know the
H well you need to know the
damage the damage scaling and stuff for
damage the damage scaling and stuff for
this so I think I need to figure it how
this so I think I need to figure it how
I want to handle scaling in the game
I want to handle scaling in the game
that's a good question that actually
that's a good question that actually
kind of relies on more knowledge of how
kind of relies on more knowledge of how
mobas work than I might have I did a
mobas work than I might have I did a
little bit of research before and it
little bit of research before and it
looks like character stats have fixed
looks like character stats have fixed
just flat scaling per level it's
just flat scaling per level it's
different for every class but they do
different for every class but they do
have just their own uh individual flat
have just their own uh individual flat
scaling per level uh spells are
scaling per level uh spells are
different spells have a fixed three
different spells have a fixed three
levels to them or four levels I forget
levels to them or four levels I forget
depends on the game um and that can do a
depends on the game um and that can do a
lot of stuff I think usually Mana cost
lot of stuff I think usually Mana cost
goes
goes
up but
up but
usually Mana cost goes
usually Mana cost goes
up but the player is also getting more
up but the player is also getting more
Mana through level ups and items damage
Mana through level ups and items damage
of course usually goes up sometimes
of course usually goes up sometimes
durations go up sometimes cooldowns go
durations go up sometimes cooldowns go
down
right
interesting I could make there are a lot
interesting I could make there are a lot
of things I could do with this so I
of things I could do with this so I
could make a struct
I could make some strs maybe I could
I could make some strs maybe I could
make like a struck to represent a skill
make like a struck to represent a skill
that has all of the different costs
that has all of the different costs
associated and all the different stats
associated and all the different stats
of the skill and
of the skill and
then when you call the
then when you call the
skill you just get all the params from
skill you just get all the params from
this the associated struct I guess that
this the associated struct I guess that
seems kind of messy
seems kind of messy
though hm
like you almost want to have this
like you almost want to have this
information in a data file right you
information in a data file right you
almost want to have this like in a
almost want to have this like in a
config file or
config file or
something but that doesn't help me
something but that doesn't help me
because like you still need a way to
because like you still need a way to
load to load that stuff in and I don't
load to load that stuff in and I don't
want to just like just for the sake of
want to just like just for the sake of
not having variables hardcoded in line
not having variables hardcoded in line
um I don't want to add like you know
um I don't want to add like you know
another config system and 100 lines of
another config system and 100 lines of
loader and 200 lines of constants right
loader and 200 lines of constants right
this is already too too code I want this
this is already too too code I want this
to be shorter um so I guess the thing
to be shorter um so I guess the thing
that I'm trying to figure out right now
that I'm trying to figure out right now
the problem I'm trying to solve isn't
the problem I'm trying to solve isn't
necessarily the card coding directly the
necessarily the card coding directly the
problem I'm trying to solve is
scaling how do we handle
scaling well I can make it a fixed I
scaling well I can make it a fixed I
could potentially make it fix three
levels is that
good I could also for every skill I
good I could also for every skill I
could just Define a flat amount of
could just Define a flat amount of
scaling per level right so let's say
scaling per level right so let's say
that it's uh it's like they're 30 levels
that it's uh it's like they're 30 levels
right and I have 300 to start I could
right and I have 300 to start I could
just add 10 damage per level and then
just add 10 damage per level and then
it'll be uh 600 damage right at level
30 I could do
that I don't even necessarily like the
that I don't even necessarily like the
way that I have all these skills looks
way that I have all these skills looks
good yeah I'm trying to figure this is
good yeah I'm trying to figure this is
kind of important I mean maybe I'll
kind of important I mean maybe I'll
maybe I can find some Clues on how I
maybe I can find some Clues on how I
want to do this more broadly across the
want to do this more broadly across the
code base but essentially like I want to
code base but essentially like I want to
make this I'm trying to like build this
make this I'm trying to like build this
out now where enemies have to level up
out now where enemies have to level up
over the game and stuff has to scale
over the game and stuff has to scale
right um and I'm trying to find a nice
right um and I'm trying to find a nice
way to organize all of that so that
way to organize all of that so that
we'll have nice clean code like most of
we'll have nice clean code like most of
this is fine the way it is there are a
this is fine the way it is there are a
couple things where constants need to be
couple things where constants need to be
maybe pulled out there's some steing
maybe pulled out there's some steing
stuff like this that I don't
like I mean this could potentially be a
like I mean this could potentially be a
property of the player I can do like
property of the player I can do like
damage scaling or like damage per Level
damage scaling or like damage per Level
Health per
Health per
level that would make sense because it's
level that would make sense because it's
specific anyways to this to the player
right that also makes it easier if I
right that also makes it easier if I
want to do like range Creeps in the
want to do like range Creeps in the
future with different scaling if I just
future with different scaling if I just
attach it to the the struct
attach it to the the struct
itself that is
decent I also really don't like the way
decent I also really don't like the way
that I have to call skills right now
that I have to call skills right now
this is
this is
gross
gross
right this is really
gross so the way that I would do this
gross so the way that I would do this
outside of Sealand right is that I would
outside of Sealand right is that I would
have uh the like player itself would
have uh the like player itself would
have well I know how to do this with sub
have well I know how to do this with sub
classes right you have like a support
classes right you have like a support
subass or whatever and that subass has
subass or whatever and that subass has
its own q w and E skills associated with
its own q w and E skills associated with
it um I don't think it should be any
it um I don't think it should be any
harder here I just have to think of how
harder here I just have to think of how
I do it in this
setting I could do it with function
setting I could do it with function
pointers that seems gross
though lots of if else is
though lots of if else is
good not
really see the thing I don't like about
really see the thing I don't like about
this is the fact
this is the fact
that I have all this the these chain of
that I have all this the these chain of
statements like this
statements like this
um but then I also have the skills
um but then I also have the skills
factored out right so like I have this
factored out right so like I have this
gross this gross
gross this gross
nesting and I
nesting and I
have the skills are separate function so
have the skills are separate function so
I don't even have the details right
here well I can fix the PID thing
here well I can fix the PID thing
because the PID I now have classes so I
because the PID I now have classes so I
can just have I can go over pids that's
can just have I can go over pids that's
fine
do I want to do function
do I want to do function
pointers I don't even know if you can
pointers I don't even know if you can
store function pointers in strs can you
store function pointers in strs can you
in uh I mean in scon
in uh I mean in scon
strs you probably can
right I don't know if I want to though
no idea yeah well I mean this type of
no idea yeah well I mean this type of
Dev is a little bit boring to watch
Dev is a little bit boring to watch
sometimes but it's very necessary and
sometimes but it's very necessary and
this is frankly one of the crucial
this is frankly one of the crucial
things that you have to do that makes
things that you have to do that makes
the difference between you having a crap
the difference between you having a crap
project and having one that's nice is
project and having one that's nice is
actually spending the time that it takes
actually spending the time that it takes
to Think Through how you want to have
to Think Through how you want to have
things structured
nicely and you have to not get too
nicely and you have to not get too
clever about it
clever about it
either brain is getting out of
either brain is getting out of
bounds yeah you have to not get too
bounds yeah you have to not get too
clever about it either like the goal is
clever about it either like the goal is
not to come up with like a bunch of
not to come up with like a bunch of
fancy layers of indirection the goal is
fancy layers of indirection the goal is
to find like a simple direct way to do
to find like a simple direct way to do
it
I kind of don't mind the function
I kind of don't mind the function
pointers thing
pointers thing
though
though
so the the way that I would do this with
so the the way that I would do this with
function pointers the only reason I'm
function pointers the only reason I'm
hesitant let me just go through my logic
hesitant let me just go through my logic
here so the only reason I'm hesitant to
here so the only reason I'm hesitant to
do this with function pointers is that
do this with function pointers is that
the way that you represent um a function
the way that you represent um a function
like a reference to a function in C or
like a reference to a function in C or
scon is kind of
scon is kind of
gross and can be kind of buggy I
gross and can be kind of buggy I
wouldn't hesitate to do this at all if I
wouldn't hesitate to do this at all if I
were writing this in Python because it's
were writing this in Python because it's
incredibly
incredibly
easy
easy
um you just do like you know player. Q
um you just do like you know player. Q
equals uh skill support hook or whatever
equals uh skill support hook or whatever
right it's incredibly incredibly easy
does the
does the
client also take into consideration for
client also take into consideration for
the execution don't the
the execution don't the
clients also take in consideration for
clients also take in consideration for
the execution
the execution
time uh I don't exactly know what that
time uh I don't exactly know what that
means in this case not sure what you're
means in this case not sure what you're
asking
if I give this thing function
if I give this thing function
pointers it's actually incredibly easy
pointers it's actually incredibly easy
because then this whole code just
because then this whole code just
becomes you know uh if use Q then uh
becomes you know uh if use Q then uh
player.
player.
Q L if use w player. w LF use e player.
Q L if use w player. w LF use e player.
El basic attack and you don't have this
El basic attack and you don't have this
Loop over everything so then it makes
Loop over everything so then it makes
sense to have all the the skills defined
sense to have all the the skills defined
to separate functions which is nice
if else takes lots of time than the
if else takes lots of time than the
function pointers uh this is a
function pointers uh this is a
negligible amount of time either way so
negligible amount of time either way so
this is not a performance
this is not a performance
consideration because there right now
consideration because there right now
the game has to Loop over all of the
the game has to Loop over all of the
NPCs and stuff as well right so if the
NPCs and stuff as well right so if the
game has uh up to like 200 creeps and
game has uh up to like 200 creeps and
neutrals combined in towers that are
neutrals combined in towers that are
alive at the same time and they're only
alive at the same time and they're only
10 players a few if statements applied
10 players a few if statements applied
over players like this does not make a
over players like this does not make a
difference if there were tons of
difference if there were tons of
conditionals applied over every single
conditionals applied over every single
creep as well then yes that would make a
creep as well then yes that would make a
difference but this is not a performance
difference but this is not a performance
issue this is purely a making the code
issue this is purely a making the code
not garbage
issue I kind of like the way I kind of
issue I kind of like the way I kind of
like the idea of doing this with
like the idea of doing this with
function pointers uh let me see what the
function pointers uh let me see what the
syntax looks like for that to see if I
syntax looks like for that to see if I
actually want to commit to it
double star
ftype wait C def
what C type def
what C type def
double star F
double star F
Type oh I see
that's not that
bad I think then it's I forgot that this
bad I think then it's I forgot that this
is how it works and see okay so I think
is how it works and see okay so I think
that all I have to do
that all I have to do
[Music]
is where we have player
void I think the skills return void
void I think the skills return void
right skill yeah
right skill yeah
void entity
Target void skill so this is going to be
Target void skill so this is going to be
a skill
skill that takes
entity is this
valid if I try to compile this does this
build inv canot be a python
build inv canot be a python
object ah because classes aren't okay
interesting
so it doesn't like that this is a class
so it doesn't like that this is a class
method does it have to be I think it
method does it have to be I think it
does have to be a class method though
does have to be a class method though
because certain skills need to do scans
because certain skills need to do scans
and stuff
pretty obnoxious
double some
detail I don't know how
detail I don't know how
we we get pointers for
this is this a smart idea in the first
this is this a smart idea in the first
place
oops hold on restream is being
weird okay
weird okay
whatever
um so what I'm trying to do here let me
um so what I'm trying to do here let me
be clear so I have I've got this mobo
be clear so I have I've got this mobo
right and I want each player to have
right and I want each player to have
different
different
skills but I'd like them to be able to
skills but I'd like them to be able to
have pointers to those skills if
possible I don't know if you can do
that is there a better way to do
that is there a better way to do
that or is this just one of these
that or is this just one of these
limitations of
limitations of
um these limitations of scyon
is there any other way that I'm
is there any other way that I'm
overlooking I don't think so
yeah I think this is where it makes the
yeah I think this is where it makes the
most sense to do
most sense to do
this just totally where that makes the
this just totally where that makes the
most sense to do this
most sense to do this
right yeah it has to be so I got to
right yeah it has to be so I got to
figure out a way to do this um we're
figure out a way to do this um we're
going to try chat jippy and it's going
going to try chat jippy and it's going
to waste my time as always but you know
to waste my time as always but you know
maybe once in a blue moon once in a blue
maybe once in a blue moon once in a blue
moon it actually does something oh yeah
moon it actually does something oh yeah
check this out I was I was generating um
check this out I was I was generating um
Tech
Tech
Wizards I was generating like Tech
Wizards I was generating like Tech
Wizards or the
article okay
um I Define
um I Define
a
a
uh how do
uh how do
I a function
scyon struct contain a pointer to a
scyon struct contain a pointer to a
scyon class
method is this thing
method is this thing
right I think this is just what what I
right I think this is just what what I
just did and it didn't work
just did and it didn't work
right star method pointer
oh I think I might just have the syntax
oh I think I might just have the syntax
wrong actually yeah hold on I might just
wrong actually yeah hold on I might just
be I just might have the Syntax for
be I just might have the Syntax for
doing this
wrong entity
wrong entity
star is this
it or does this still not
work pointer base cannnot be a yeah it's
work pointer base cannnot be a yeah it's
the same issue so I think that uh I
the same issue so I think that uh I
think think literally chat GPD just did
think think literally chat GPD just did
the same exact thing I did
right cuz this looks clean if you could
right cuz this looks clean if you could
do
this on classes
method
method
Bridge okay I see so there is
Bridge okay I see so there is
technically a way around this I just
technically a way around this I just
don't know if it's worth
don't know if it's worth
it so what they're saying here is that
it so what they're saying here is that
you can say well you can take a pointer
you can say well you can take a pointer
to a
to a
method you
method you
see wait well this
see wait well this
doesn't the thing this just Define
doesn't the thing this just Define
doesn't make any damn
doesn't make any damn
sense but I think I see what it was
sense but I think I see what it was
trying to do let me think if that makes
trying to do let me think if that makes
any sense so
chat GPT is chat GPT is always dumb I
chat GPT is chat GPT is always dumb I
swear it's like it whenever I'm stuck on
swear it's like it whenever I'm stuck on
something it's it's like never right
something it's it's like never right
right like if I'm stuck it's basically
right like if I'm stuck it's basically
always stuck
today's stream is less heat I guess it's
today's stream is less heat I guess it's
Saturday oh it's Friday in the
Saturday oh it's Friday in the
US I do work Saturday as well but I work
US I do work Saturday as well but I work
off
stream how do I get around
stream how do I get around
this and it's fine it's fine to have
this and it's fine it's fine to have
some chill stream days I like I actually
some chill stream days I like I actually
have to get work done as well right I'm
have to get work done as well right I'm
not just here entertaining and answering
not just here entertaining and answering
tons of RL like basic RL questions right
tons of RL like basic RL questions right
like that's fun sometimes but it's good
like that's fun sometimes but it's good
to get this simulator into uh into
shape and sometimes you have to do the
shape and sometimes you have to do the
hard and boring work
right so I mean this is just a
right so I mean this is just a
straight scon
straight scon
problem with the way that it
problem with the way that it
represents classes as python objects
represents classes as python objects
because they're technically exposed
and this has to have the arguments to be
and this has to have the arguments to be
it can't just be an
untyped i for forgot that it needed to
untyped i for forgot that it needed to
know the call and return types for this
know the call and return types for this
deack I know why it needs them but I'd
deack I know why it needs them but I'd
forgotten about that for some
reason if I just put void star does that
reason if I just put void star does that
work
now let's see if I
now let's see if I
do uh skill
skill Q
right and then I do let's just pick a q
skill there's so many questions around
skill there's so many questions around
whether this works
so scale
Q let's just put it
Q let's just put it
here is a
here is a
test it doesn't like
test it doesn't like
this skill is not a type identifier well
this skill is not a type identifier well
this is I know how to fix
this is I know how to fix
this while your environment runs at 1
this while your environment runs at 1
million
million
steps I have a custom mend that runs at
steps I have a custom mend that runs at
two steps per
two steps per
second I would suggest making it
second I would suggest making it
faster it's very hard to do anything
faster it's very hard to do anything
meaningful on an environment that runs
meaningful on an environment that runs
two steps per
second I actually I was told that they
second I actually I was told that they
were running DOTA at like half of real
were running DOTA at like half of real
time uh each instance of the game for
time uh each instance of the game for
open
open
ai5 ours are going to be running at
ai5 ours are going to be running at
20,000 times real time
you know you could use 100,000 cores or
you know you could use 100,000 cores or
you could just make your M like 40,000
you could just make your M like 40,000
times faster
I have not done enough enough C++ to
I have not done enough enough C++ to
know if what I'm doing makes any sense
know if what I'm doing makes any sense
at the moment
nope it doesn't okay I got to think of a
nope it doesn't okay I got to think of a
way around this because I don't think
way around this because I don't think
that this is going to be a fruitful
that this is going to be a fruitful
approach I think this is like bumping up
approach I think this is like bumping up
against the the limitations of scon here
against the the limitations of scon here
sadly the environment has some expensive
sadly the environment has some expensive
calculations like conditional entropies
calculations like conditional entropies
of stuff that just takes
of stuff that just takes
long are those conditional entropies
long are those conditional entropies
implemented
implemented
in Python by any
chance two steps per second is just not
chance two steps per second is just not
happy play place for RL that's just like
happy play place for RL that's just like
the point of RL is that it can just
the point of RL is that it can just
ingest tons of data right if you don't
ingest tons of data right if you don't
have tons of data to
have tons of data to
ingest I mean it's like trying to insist
ingest I mean it's like trying to insist
that you do chat GPT but with a 10
that you do chat GPT but with a 10
million parameter model C with python
million parameter model C with python
bindings jeez well have you timed it in
bindings jeez well have you timed it in
C to see if the python bindings are just
C to see if the python bindings are just
garbage cuz I've seen that happen before
garbage cuz I've seen that happen before
where like the CN is Fast and the python
where like the CN is Fast and the python
bindings are garb
garbage ideally you want all static B uh
garbage ideally you want all static B uh
all static data structures that are just
all static data structures that are just
memory shared between Python and
see open the I uses RL yeah of course
see open the I uses RL yeah of course
they were one of the biggest
they were one of the biggest
contributors to RL back in
2018 possibly the biggest
contributor e
yeah there's like no way to put all
yeah there's like no way to put all
these skills into an
aray Google
aray Google
bar I don't know what Google bar
is oh bard
I honestly haven't heard of that project
I honestly haven't heard of that project
in a while was that that was one of
in a while was that that was one of
their was that their search thing or
their was that their search thing or
their language model thing I don't know
their language model thing I don't know
I haven't seen them publishing a ton of
I haven't seen them publishing a ton of
RL lately outside of deep
mind I really don't like the way that
mind I really don't like the way that
this is at the moment
so I
actually I actually like this type of a
actually I actually like this type of a
this type of logic here we're going to
this type of logic here we're going to
take this out of conditionals I like
take this out of conditionals I like
having like flat Define logic on
stuff so if we have like an init script
stuff so if we have like an init script
right where it's like 300 flat lines or
right where it's like 300 flat lines or
something and it just goes through and
something and it just goes through and
it like allocates all of the you know
it like allocates all of the you know
the specific agent stats that are needed
the specific agent stats that are needed
that's
fine really don't
fine really don't
like this is the way it is now though
basically I have a basan networ that I
basically I have a basan networ that I
used to calculate the expected
used to calculate the expected
Information Gain of each action over the
Information Gain of each action over the
system
system
jeez solving corrective maintenance find
jeez solving corrective maintenance find
the root cause of failure in a system
the root cause of failure in a system
actions or diagnostic test to execute to
actions or diagnostic test to execute to
gain information about the system
yeah that's hard that's one of those
yeah that's hard that's one of those
problems where if you don't have human
problems where if you don't have human
data and your sim is slow then you're in
data and your sim is slow then you're in
an unenviable
an unenviable
position because that's not the good
position because that's not the good
like that's not the that's not where RL
like that's not the that's not where RL
shines right RL shines when you have
shines right RL shines when you have
unlimited
data e
it's so obnoxious that I can't just type
it's so obnoxious that I can't just type
player doskill equals function
why do I need this to be like this again
right it's this
right it's this
is
geez yeah this is really where you hit
geez yeah this is really where you hit
the uh the annoyances with scon I
guess e
this is
bad I don't think either of those are
bad I don't think either of those are
better than GPT
4 currently episodes are around 10 steps
4 currently episodes are around 10 steps
per episode
well how big is the action space though
in the state space like can you cash the
in the state space like can you cash the
results of these Sims and then reuse
them you
know I would look for stuff to cash Noah
know I would look for stuff to cash Noah
like I don't know what SIM you're
like I don't know what SIM you're
working with but like let's say that you
working with but like let's say that you
have a SIM where like there are 10,000
have a SIM where like there are 10,000
States and like these that are really
States and like these that are really
really expensive to compute I just
really expensive to compute I just
pre-compute all of
pre-compute all of
them probably you don't have that
them probably you don't have that
probably you have a problem where it's
probably you have a problem where it's
way harder to cash
but 12
but 12
actions I'm not
bad is the initial state of the
bad is the initial state of the
simulator always the same
because like actually what I would do is
because like actually what I would do is
I would just cash everything
right like the results of this Ms even
by cash I mean if you have like
State like the state of the simulator
State like the state of the simulator
and then the action that is called you
and then the action that is called you
get a new state of the
get a new state of the
simulator or you get results from the
simulator or you get results from the
simulator after you run it the first
simulator after you run it the first
time I would store the state of the
time I would store the state of the
simulator and the results if you're
simulator and the results if you're
capable of doing
capable of doing
that so that you don't have RL
that so that you don't have RL
constantly recomputing the same data
constantly recomputing the same data
when it's running the same sequence of
when it's running the same sequence of
actions so that way at least like your
actions so that way at least like your
simulator gets faster and faster the
simulator gets faster and faster the
more you play with it right because if
more you play with it right because if
you cash it you're essentially you'll
you cash it you're essentially you'll
get millions of you know you'll get like
get millions of you know you'll get like
10 million steps per second Plus for
10 million steps per second Plus for
things you've already seen so you'll
things you've already seen so you'll
only ever be spending compute on new
only ever be spending compute on new
simulation
simulation
steps something like that is what I
steps something like that is what I
would
would
do not knowing anything about your
do not knowing anything about your
problem
this is going to drive me
this is going to drive me
nuts this is really going to drive me
nuts this is really going to drive me
nuts
maybe I'll try that thanks yeah that
maybe I'll try that thanks yeah that
would be my
recommendation so it's just the thing
recommendation so it's just the thing
that's so obnoxious here right is
that's so obnoxious here right is
like when you spawn all these agents you
like when you spawn all these agents you
have to go over the different types to
have to go over the different types to
assign their class and stuff and like
assign their class and stuff and like
this is where it would make sense to
this is where it would make sense to
assign their
assign their
skills so the fact that I then have to
skills so the fact that I then have to
at the bottom of the code loop over the
at the bottom of the code loop over the
agent type again in order to do this is
obnoxious is this the world's dumbest
obnoxious is this the world's dumbest
article
this is so
this is so
stupid this is valid but not
important this is
stupid
yeah oh look a rust person of course
yeah oh look a rust person of course
it's a bad
take I don't
take I don't
know let me think think about how I can
know let me think think about how I can
do this there's got to be some way to
do this there's got to be some way to
cheat like a
pointer so the reason it that I have
pointer so the reason it that I have
this
this
problem hey Trey
I SAR like rust is the Arch Linux of the
I SAR like rust is the Arch Linux of the
programming world where it's like a
programming world where it's like a
really cool community of people that are
really cool community of people that are
really passionate about tech doing stuff
really passionate about tech doing stuff
in a way that's just like utterly stupid
in a way that's just like utterly stupid
for actually getting anything
done yeah you joined at a funny time I
done yeah you joined at a funny time I
just saw this I always every time I look
just saw this I always every time I look
up Scythe on anything I see this really
up Scythe on anything I see this really
dumb bait article here like dude if
dumb bait article here like dude if
you're going to write a bait article at
you're going to write a bait article at
least write a good bait article okay
least write a good bait article okay
here I wrote a I wrote one of them today
here I wrote a I wrote one of them today
maybe you'll get a kick out of
it this is on X have fun
do I need to have this be a class in
do I need to have this be a class in
scon like if this is not a class then
scon like if this is not a class then
not this problem is
solved what if I made if the environment
solved what if I made if the environment
were a struct instead of a class what
were a struct instead of a class what
would
would
happen well the only thing that's a
happen well the only thing that's a
problem is I need a way to store that
problem is I need a way to store that
struct persistently in syon
right because you can't return strs
can you return strs from scyon to python
convert it to a dictionary okay this is
convert it to a dictionary okay this is
not
good so you need like this that's really
good so you need like this that's really
weird so you need a class just for the
weird so you need a class just for the
API I
guess eye cancer and the boiler plate to
guess eye cancer and the boiler plate to
do anything is
do anything is
yeah it's God awful
so let me tell you what I'm trying to do
so let me tell you what I'm trying to do
maybe you know
this so This logic is disgusting right
this so This logic is disgusting right
right I already have to do player
right I already have to do player
conditional logic when I in create all
conditional logic when I in create all
the players and what I want to
the players and what I want to
do is do like you know for the support
do is do like you know for the support
player doskill Q equals skill support
player doskill Q equals skill support
hook player. skill W equals skill
hook player. skill W equals skill
support AOE and so on and so forth right
support AOE and so on and so forth right
so just give the player struct pointers
so just give the player struct pointers
to the function now you can do
to the function now you can do
this by typ deing
this by typ deing
a function
a function
pointer and then what you should just be
pointer and then what you should just be
able to do is you should be able to put
able to do is you should be able to put
in your struct you should be able to put
in your struct you should be able to put
skill as an element of your struct right
skill as an element of your struct right
you just have a data type
you just have a data type
skill it's C type def it's a c type it
skill it's C type def it's a c type it
should work now the issue not this void
should work now the issue not this void
star this was me messing with it trying
star this was me messing with it trying
to make it
to make it
work is that this environment star is a
work is that this environment star is a
pointer to a cdef
pointer to a cdef
class and a cdef class
class and a cdef class
is not a uh a c type it is a python type
is not a uh a c type it is a python type
because that's how class rappers are are
because that's how class rappers are are
treated
treated
it so I need a way around
that can I see type def a
that can I see type def a
class it doesn't do anything right
yeah so anything that any method of a
yeah so anything that any method of a
class is also a python
object obnoxious
so I'm not really I'm not attached to
so I'm not really I'm not attached to
objectoriented programming in the least
objectoriented programming in the least
like I have no attachment to this class
like I have no attachment to this class
whatsoever I'd be very happy to have
whatsoever I'd be very happy to have
environment just be a struct that has
environment just be a struct that has
all this stuff in it right but then the
all this stuff in it right but then the
thing is like the struct has to live in
thing is like the struct has to live in
C it can't live in Python and keep
C it can't live in Python and keep
getting back converted back and forth to
getting back converted back and forth to
um it can't keep getting converted back
um it can't keep getting converted back
and forth via dictionaries that's really
and forth via dictionaries that's really
slow
I think technically I could come up
I think technically I could come up
with I could make like an environment
with I could make like an environment
struct and an environment class and if
struct and an environment class and if
the class has the struct then the
the class has the struct then the
pointer can take the environment struct
pointer can take the environment struct
instead of the class and then most of
instead of the class and then most of
the other methods will come out of the
the other methods will come out of the
uh out of the class and will take the
uh out of the class and will take the
struct
explicitly does that sound like a good
explicitly does that sound like a good
idea I think I still end up with an
idea I think I still end up with an
extra class just to hold the stupid
extra class just to hold the stupid
thing because I don't think there's any
thing because I don't think there's any
way to have persistent stuff in scyon if
way to have persistent stuff in scyon if
scon doesn't own a class
scon doesn't own a class
right stru can't be passed at the scon
right stru can't be passed at the scon
level yeah so I think that the thing
level yeah so I think that the thing
that you need to do then with this is
that you need to do then with this is
you have
you have
wrap the
wrap the
class and extern what do you mean by
class and extern what do you mean by
wrap the class and extern C
wrap the class and extern C
like I shouldn't need to be write that's
like I shouldn't need to be write that's
for when you're writing C files isn't
for when you're writing C files isn't
it I think that I can do if I just do
it I think that I can do if I just do
like struct environment and then like I
like struct environment and then like I
see def a class that contains like just
see def a class that contains like just
cdef you know M environment or whatever
cdef you know M environment or whatever
I think I can do that right
I think I can do that right
unique names
obviously you might need
exter might not I don't
exter might not I don't
know we'll
know we'll
see okay well I mean this is going to be
see okay well I mean this is going to be
kind of interesting like I didn't want
kind of interesting like I didn't want
to have to do this level of a refactor
to have to do this level of a refactor
today
today
but I kind of like it I mean this would
but I kind of like it I mean this would
allow me to do old procedural on this
right pretty
much I've been just increasingly hating
much I've been just increasingly hating
object-oriented
programming and the funny thing is like
programming and the funny thing is like
all of the scyon problems like all the
all of the scyon problems like all the
problems in scon aren't actually scyon
problems in scon aren't actually scyon
problems they're problems with trying to
problems they're problems with trying to
do O and C
yeah C++ is real bad
I also don't know what it is but like
I also don't know what it is but like
the colon colon Syntax for stuff drives
the colon colon Syntax for stuff drives
me nuts I hate it it's just like I don't
me nuts I hate it it's just like I don't
know
why okay well we'll start on this um by
why okay well we'll start on this um by
the way in the meantime I since I have
the way in the meantime I since I have
this running and I don't think you got
this running and I don't think you got
to see this
to see this
so I ran a little bit of a sweep
so I ran a little bit of a sweep
overnight nothing massive and then we
overnight nothing massive and then we
got some args back and we trained a new
model it's probably this
one
yeah here's the reward it looks real
good so why don't we why don't we go
good so why don't we why don't we go
render this model up before we break
render this model up before we break
stuff cuz so that'll be fun and then
stuff cuz so that'll be fun and then
we'll go from there
maybe exercise reinforcement learning
I'm going to link the fireb ball article
I'm going to link the fireb ball article
as well because it's
as well because it's
fun
oops my chat is not
showing there it's in the chat anyways
showing there it's in the chat anyways
right yeah
it's a short article it's funny I've
it's a short article it's funny I've
just seen too much dumb stuff like too
just seen too much dumb stuff like too
much stuff dumber than this that I felt
much stuff dumber than this that I felt
required like I felt obligated to post
required like I felt obligated to post
this because holy hell
this because holy hell
like the number of takes I've seen
like the number of takes I've seen
lately that are just garbage is
lately that are just garbage is
ridiculous and it's like all grifters
ridiculous and it's like all grifters
trying to get like free investor money
trying to get like free investor money
from people who don't know
from people who don't know
better or just like straight scamming
better or just like straight scamming
it's gross for
the next five bill will make deep
the next five bill will make deep
learning
learning
work well deep learning does kind of
work well deep learning does kind of
work at this point to be fair it's just
work at this point to be fair it's just
like people promising increasingly crazy
like people promising increasingly crazy
stuff
well how much compute does this model
well how much compute does this model
take let's
take let's
see oh
see oh
hold
on what do these guys do
they're kind of
Wiggly oh wait they just
farmed
farmed
h
no they're definitely
interesting they're not just going down
interesting they're not just going down
mid they seem to be like attempting to
mid they seem to be like attempting to
farm
neutrals a lot more
maybe no this has a much more
maybe no this has a much more
interesting reward
so I'll show you the uh the curves for
so I'll show you the uh the curves for
this cuz they're kind of
this cuz they're kind of
cool I mean this is pretty acceptable as
cool I mean this is pretty acceptable as
like an
like an
initial initial take
like so this giant drop here is
like so this giant drop here is
obviously they won a
obviously they won a
game um
game um
you have reward for taking Towers you've
you have reward for taking Towers you've
got this XP reward curve which it looks
got this XP reward curve which it looks
like they're learning to get more and
like they're learning to get more and
more
more
XP you've got overall reward you've got
XP you've got overall reward you've got
reward for dying which is negative
reward for dying which is negative
you've got reward uh distance rewards
you've got reward uh distance rewards
you can actually see
you can actually see
that I think that this kind of crashed
that I think that this kind of crashed
it right here that like after the first
it right here that like after the first
game after they finished their first
game after they finished their first
game uh I think that they got screwed up
game uh I think that they got screwed up
a little bit maybe
that could just be a matter of more data
that could just be a matter of more data
though and more
training not bad overall for like our
training not bad overall for like our
first reasonable run after fixing all
first reasonable run after fixing all
the crazy
things let me post this
article real quick
yeah already some behaviors and they
yeah already some behaviors and they
would just go straight down mid with the
would just go straight down mid with the
uh the full just ancient reward right so
uh the full just ancient reward right so
so I'm pretty happy overall I think we
so I'm pretty happy overall I think we
just the goal for today is going to be
just the goal for today is going to be
to you know incorporate back skill usage
to you know incorporate back skill usage
uh fix up the code make everything nice
uh fix up the code make everything nice
get it to the point where we can easily
get it to the point where we can easily
balance and then like get the the proper
balance and then like get the the proper
carb sweeps going so we can essentially
carb sweeps going so we can essentially
just like automate model development on
just like automate model development on
this
this
project and just do a little bit of
project and just do a little bit of
polishing over the next few days and
polishing over the next few days and
hopefully I won't have to so hopefully
hopefully I won't have to so hopefully
I'm probably not going to stream every
I'm probably not going to stream every
day on this project next week I'm
day on this project next week I'm
thinking I might start
thinking I might start
on I might start on the puffer video one
on I might start on the puffer video one
or two days next week we'll see because
or two days next week we'll see because
I need to make uh some long form video
I need to make uh some long form video
content for this um but there's also
content for this um but there's also
some other stuff I still have so we'll
some other stuff I still have so we'll
see on that
see on that
um and then that we like I want to
um and then that we like I want to
finish up this like all these simulators
finish up this like all these simulators
I have is the simulation update for
I have is the simulation update for
puffer and uh go from there
puffer and uh go from there
okay though let's let's start
okay though let's let's start
by
by
uhoh are you out of memory
uhoh are you out of memory
me yes the environment has out of memory
me yes the environment has out of memory
to
to
me hopefully that will kill in a second
me hopefully that will kill in a second
and then we'll be able to
continue the really nice thing with this
continue the really nice thing with this
project is we're going to actually be
project is we're going to actually be
able to run uh open AI 5 scale batch
able to run uh open AI 5 scale batch
sizes and stuff because the model is so
sizes and stuff because the model is so
small and we have the memory to do
[Music]
[Music]
that so we're going to have like batch
that so we're going to have like batch
size 1 million
I might have to restart a
I might have to restart a
WSL something
I don't even have X kill or anything on
this yeah this is all my
memory I hate windows so much
oh great it's already
Frozen
Frozen
well that seems like something we should
well that seems like something we should
probably fix huh the renderer memory
probably fix huh the renderer memory
leak somehow
I really hope I don't have to reboot the
I really hope I don't have to reboot the
machine this is kind of
ridiculous could I just dock or stop
maybe I think the container might save
maybe I think the container might save
me here I might just be able to dock or
me here I might just be able to dock or
stop it I don't want to have to reboot
stop it I don't want to have to reboot
the machine and reset the
stream why are you on Windows if you
stream why are you on Windows if you
hate
hate
it
it
um configuring OBS and other [ __ ]
to be fair on Linux this would have just
to be fair on Linux this would have just
locked my whole machine up and crashed
locked my whole machine up and crashed
it anyways
so I mean at least I might have been
so I mean at least I might have been
able to ex kill the app
though okay this is not even
I also don't want to corrupt the
I also don't want to corrupt the
container or something
[ __ ] maybe I can stop it from
here e
so it just pulled this window up and
so it just pulled this window up and
maximized it for
me there we
go okay
go okay
fixed we got it I don't even know what I
fixed we got it I don't even know what I
would task kill though is the thing cuz
would task kill though is the thing cuz
it's like container running inside of
it's like container running inside of
auntu which is running inside a WSL
auntu which is running inside a WSL
which is right you might corrupt some
[ __ ] all right we're
[ __ ] all right we're
good let the dev begin
properly let the dev
properly let the dev
begin at 300 p.m. which is absolutely
begin at 300 p.m. which is absolutely
atrociously late for
me so we'll have to make the next four
me so we'll have to make the next four
hours of death count time to lock
in ooh
oh gross oh
oh gross oh
no uh I just remember this is not going
no uh I just remember this is not going
to
to
work you can't have memory views as
work you can't have memory views as
elements of structs
is there a more
recent is there a more recent way to do
recent is there a more recent way to do
this
this
did they get a way around this maybe
I don't think you can do this
I don't think you can do this
[ __ ] I mean I can double
check let's open the
test e
C struct cannot be meem
C struct cannot be meem
yeah okay well that's
disgusting can I see type defr struct
disgusting can I see type defr struct
does it work then
nope [ __ ]
nope [ __ ]
well yeah that's the thing that we can't
well yeah that's the thing that we can't
do Ah that's so
do Ah that's so
bad that is so
bad
H problem comes from uninitialized
H problem comes from uninitialized
memory scon lack of Constructors for
memory scon lack of Constructors for
primitive
c
yeah so we can't do this
either I remember now that this is I
either I remember now that this is I
tried to do this before and this is why
tried to do this before and this is why
I got stuck as well
I got stuck as well
so you are in a sense locked to CDE uh C
so you are in a sense locked to CDE uh C
def classes instead of structs because
def classes instead of structs because
uh you need memory views that's like
uh you need memory views that's like
cython killer
cython killer
feature and in order to get memory
feature and in order to get memory
views you need to
views you need to
have you need to have uh a class but
have you need to have uh a class but
then if you have a
class I me I could look up what skills
class I me I could look up what skills
we actually need right let me
we actually need right let me
see what the heck do these skills do
see what the heck do these skills do
that's actually like
using self. attack self dot update
self do
self do
[Music]
[Music]
pull I
mean us like get entity scan
mean us like get entity scan
targets uses a bunch of stuff
honestly it'd be pretty hard to decouple
this I really do not like that at
all e
and I'm doing all of this ultimately to
and I'm doing all of this ultimately to
save what conditionals at the
bottom it's a pretty big code quality
bottom it's a pretty big code quality
thing
though I mean this is just really gross
though I mean this is just really gross
not being able to
not being able to
store a pointer or reference to a
function nope you can't pie capsule
function nope you can't pie capsule
it then you lose the scon
performance whole point of this right
yeah these need like arbitrary
functions and games are always such like
functions and games are always such like
Global State Hogs
right no way to store point
it's really just gross that a cdef
it's really just gross that a cdef
method is treated as a python
method is treated as a python
object because of the
self that's just really gross
like you can't put these things into any
like you can't put these things into any
c data structure either I can't even put
c data structure either I can't even put
them into a list or anything
what other logic is there in here
I mean yeah there're like minor
I mean yeah there're like minor
simplifications in here but this is the
simplifications in here but this is the
worst thing right
worst thing right
here it really
is e
maybe I keep going on this weird void
maybe I keep going on this weird void
star thing
because okay let me let me go to this
because okay let me let me go to this
test and see if I can make it work in
test and see if I can make it work in
here
here
so what we're going to do
so what we're going to do
is we're going to go down here
is we're going to go down here
[Music]
so C def
so C def
um
method C struct player
method C struct player
C Class some
C Class some
Class A
okay class
Al some
method see
method see
type
type
death
in some
in some
method this should just be
some
some
funk some
funk Funk
funk Funk
Funk then we do
Funk then we do
return Funk of object
uh C test we have test
class I'm trying to see if this will if
class I'm trying to see if this will if
I can work around this
here so we'll do test
class so what does this tell me
class so what does this tell me
pointer base
pointer base
type cannot be a python
object it's so it does not like that
object it's so it does not like that
this is some
class so I this will be a void star I
class so I this will be a void star I
guess right
guess right
what does that what happens
then now this is
valid this says that it can't be
valid this says that it can't be
a
really pointer base type cannot be a
really pointer base type cannot be a
python object
oh yeah that's true
okay some
class cannot convert python object to uh
class cannot convert python object to uh
void star okay
so some funk
I think I actually have it and I was
I think I actually have it and I was
just wrong I just think I have I think I
just wrong I just think I have I think I
actually have it
here and I was just being
dumb where did it print the output
dumb where did it print the output
Trace back cannot import test memory
Trace back cannot import test memory
view
oh okay I actually have it so I was
oh okay I actually have it so I was
being stupid um you can't specify a
being stupid um you can't specify a
pointer to a uh C Environ like a c def
pointer to a uh C Environ like a c def
class but you can can actually pass the
class but you can can actually pass the
class itself um which is a
class itself um which is a
reference
reference
right I
right I
think let me
see
see
yeah let me just double check
here so if I give you a pointer that has
here so if I give you a pointer that has
like a class like this some class and
like a class like this some class and
then like int X or
then like int X or
whatever and I say some class
like and it'll do like
like and it'll do like
self uh
self uh
in X and then I'll do like return
in X and then I'll do like return
object. X Plus
object. X Plus
X okay
X okay
so and then we do
struct
struct
struct and then this is I think this is
struct and then this is I think this is
going to be the minimal
going to be the minimal
example some
funk
funk
Funk and so what we'll do is
Funk
Funk
okay no not some funk Funk some struct s
so now we have
so now we have
some object is going to be some class of
some object is going to be some class of
10 and then we
10 and then we
print
print
OB
dot five
okay let's see what's wrong
here this
is void star I don't think we need to do
that yeah there okay I got it so the
that yeah there okay I got it so the
error that I was making and thinking
error that I was making and thinking
that all this didn't work is uh you
that all this didn't work is uh you
can't actually pass a pointer to the
can't actually pass a pointer to the
class but you don't need to because
class but you don't need to because
you're already passing it by reference
you're already passing it by reference
anyways um you know you already have a
anyways um you know you already have a
reference like this self environment
reference like this self environment
classes are passed by reference by
classes are passed by reference by
default so you don't need to pass
default so you don't need to pass
strs are passed by value so you need to
strs are passed by value so you need to
pass them as pointers classes are passed
pass them as pointers classes are passed
by reference so you don't need to pass a
by reference so you don't need to pass a
pointer because it's already a pointer
pointer because it's already a pointer
um so here's the minimal prototype of
um so here's the minimal prototype of
what is going to make this whole entire
what is going to make this whole entire
thing work you're just going to define a
thing work you're just going to define a
c type up here we'll Define the function
c type up here we'll Define the function
type to the struct right we'll have the
type to the struct right we'll have the
class that will have the struct we can
class that will have the struct we can
give the method to the struct and then
give the method to the struct and then
this works we have a working minimal
this works we have a working minimal
test so this has actually just saved us
test so this has actually just saved us
from having complete garbage code um
from having complete garbage code um
this is going to allow us to refactor
this is going to allow us to refactor
everything very nicely and even though
everything very nicely and even though
this took me like an hour and a half of
this took me like an hour and a half of
screwing around uh this is going to be
screwing around uh this is going to be
very well worth it for the Simplicity
very well worth it for the Simplicity
and uh code and code quality improvement
and uh code and code quality improvement
that this will bring this will allow us
that this will bring this will allow us
to cut out like an additional 50 lines
to cut out like an additional 50 lines
of garbage code as
well and I am all for cutting out
well and I am all for cutting out
garbage code
I'm surprised the wizard article has not
I'm surprised the wizard article has not
blown up yet it's like the exact type of
blown up yet it's like the exact type of
clickbait that people usually like but
clickbait that people usually like but
hey what do I know
right I think this is a substantially
right I think this is a substantially
better article than my last one cuz my
better article than my last one cuz my
last one was like intentionally like my
last one was like intentionally like my
last one was kind of intentionally
last one was kind of intentionally
stupid this one's actually been kind of
stupid this one's actually been kind of
useful but hey you
useful but hey you
know what can I say you got to make
know what can I say you got to make
worse content if you want it to blow
up it's always the case that stuff I'm
up it's always the case that stuff I'm
proud of like nobody sees and then stuff
proud of like nobody sees and then stuff
that I write in three seconds because
that I write in three seconds because
it's stupid is like I mean to be fair
it's stupid is like I mean to be fair
this was a really low effort article as
this was a really low effort article as
well but this is a thing that's
well but this is a thing that's
consistently come up over like the last
consistently come up over like the last
many many years and it's so funny like
many many years and it's so funny like
this the argument in that article just
this the argument in that article just
like
it like fuzzes the hell out of uh out of
it like fuzzes the hell out of uh out of
AI researchers is the best way I can say
AI researchers is the best way I can say
it it's like you want to break in AI
it it's like you want to break in AI
researcher make this
researcher make this
[Laughter]
argument how to was a
researcher okay so the one character bug
researcher okay so the one character bug
as
as
always
right and then we get to
right and then we get to
do
do
scale
scale
q q e
it's good that's pretty much how all
it's good that's pretty much how all
progress and technology
progress and technology
is
yeah I thought the article was funny
yeah I thought the article was funny
because like this was legitimately a
because like this was legitimately a
thing I did at open AI is like people
thing I did at open AI is like people
would be at lunch like shooting the [ __ ]
would be at lunch like shooting the [ __ ]
about like AGI and like different
about like AGI and like different
definitions and stuff and
like this one would like just break
like this one would like just break
people they just be like what but and
people they just be like what but and
there's like there's no counterargument
there's like there's no counterargument
to it
to it
either it's one of those really
either it's one of those really
obnoxious arguments that's designed to
obnoxious arguments that's designed to
just not have a way to counter
it valid base type
why is this
invalid uh
oh invalid base type for memory view
oh invalid base type for memory view
slice [ __ ] so are you telling me that I
slice [ __ ] so are you telling me that I
can't put these in a memory view if
can't put these in a memory view if
they've got skills on
they've got skills on
them that can't be right can it
that's so obnoxious what the hell you
that's so obnoxious what the hell you
gota be kidding
me
me
wow dude that's so
obnoxious I mean I can still make it
obnoxious I mean I can still make it
work it's just substantially more
work it's just substantially more
obnoxious right
see you
Noah wait did it not work
still
wait it works now right yeah so it
wait it works now right yeah so it
doesn't work if you put skills
in
e e
does this compile
cannot
cannot
convert python object to skill
oh because it's not
defined support hook heel and stun it
is
is
and cannot convert
and cannot convert
Undeclared oh yeah
loadouts oh you don't have to initialize
loadouts oh you don't have to initialize
it
here because it's a fix size array
here because it's a fix size array
yeah
perfect e
okay you don't need this it's already a
pointer
nice and then we just assign the
nice and then we just assign the
loadouts
that's not
that's not
bad you have to store them separately
bad you have to store them separately
from the the player struct but they
from the the player struct but they
still go in a
struct and now what we get to do
struct and now what we get to do
is we add this load out thing at top
isn't that so much
isn't that so much
nicer we basically we just get to get
nicer we basically we just get to get
rid of all of this checking garbage
rid of all of this checking garbage
and now we just get to
and now we just get to
say to use the load out of the specific
say to use the load out of the specific
player it's very very
nice and we'll do uh use Q equals true
nice and we'll do uh use Q equals true
let's do this for testing purposes
oops not train we need
eval let's use our nice
model seg vault
really we seg
Fon what do I do for scan
targets load out star load outs of
targets load out star load outs of
right why would that seg
fault Loadout equals self.
fault Loadout equals self.
loadouts of
loadouts of
PID and then you define the skills
yeah I mean I would guess if
um print load out. Q
maybe cannot convert
maybe cannot convert
skill to python
skill to python
object right
so I guess it would be if it's not
so I guess it would be if it's not
updating did I use did I pass by value
updating did I use did I pass by value
instead by
instead by
mistake it shouldn't have
mistake it shouldn't have
right CU scan targets
was Target is nearest scan Target
h
seg FS before we even get down to here
seg FS before we even get down to here
it looks like
say here
oops okay so loading zero and then we
oops okay so loading zero and then we
get like
faults which is very bizarre because we
faults which is very bizarre because we
should be able to
do load out. Q right
is it a skill pointer I guess it's a
is it a skill pointer I guess it's a
function
pointer no wait that's not right is
it skill
pointer it's supposed to just be a
pointer it's supposed to just be a
function not a function pointer right
me I can try
this is why we don't do this
this is why we don't do this
normally because when you get into like
normally because when you get into like
the
the
address Madness like the syntax just
address Madness like the syntax just
becomes a total
pain and you really really have to think
pain and you really really have to think
um like obnoxiously deeply about what
um like obnoxiously deeply about what
you're passing around
come on it's a function just pass
it like yeah I know it needs to be able
it like yeah I know it needs to be able
to allocate on the stack and all that
but calling nonfunction type skill
oops
how about
this nonfunction type
skill yeah I don't think any of this is
skill yeah I don't think any of this is
right
load out is going to be self. loadouts
load out is going to be self. loadouts
of
PID seg fults when you assign
okay so immediately it just it's second
okay so immediately it just it's second
right
right
here why would that happen
h
I had this tested
right that this
worked and you just
worked and you just
made
destruct you assigned it
you have to like make this struct
you have to like make this struct
because it's
I just do this
maybe cannot assign type load out to
maybe cannot assign type load out to
load out
load out
star well that's
good taking the address of
non load out star load out
you do
this cannot assign
type Okay so self. Loadout of PID is
type Okay so self. Loadout of PID is
equal to load
equal to load
out and load out is self. Loadout of
out and load out is self. Loadout of
PID can I do
that it really really bothers me how
that it really really bothers me how
like you can
like you can
accidentally pass Ship by value without
accidentally pass Ship by value without
realizing
realizing
it and not a sign type
cannot assign type load
out I don't know why you wouldn't be
out I don't know why you wouldn't be
able to do this do q w and E
maybe you can maybe it's just like the
maybe you can maybe it's just like the
thing I'm assigning it to load out. Q is
thing I'm assigning it to load out. Q is
null if I do that does that do
anything let's see if it gets to
anything let's see if it gets to
assigning Q
okay so you literally you can't even you
okay so you literally you can't even you
can't even access
can't even access
Q here
this should be allocating me an array I
this should be allocating me an array I
shouldn't have to do this this should be
shouldn't have to do this this should be
allocating me an array of structs on the
allocating me an array of structs on the
stack
right load out loadouts of 10 I have an
right load out loadouts of 10 I have an
array of 10 loadouts
array of 10 loadouts
right okay
so I shouldn't have to do jack [ __ ] with
so I shouldn't have to do jack [ __ ] with
these I should just be able to access
these I should just be able to access
like it should just there's no way that
like it should just there's no way that
should segol essentially that should not
should segol essentially that should not
be
possible maybe it does need to be a
possible maybe it does need to be a
skill pointer
well this is already a skill Star
well this is already a skill Star
right star
skill okay what if I do
skill okay what if I do
this
this
oops what happens if I
oops what happens if I
say I'm going to have a pointer to a
skill okay so the first error
skill okay so the first error
is up here
is up here
right 10%
canot assign type void star
I think that did it
that's like incredibly obnoxious and
that's like incredibly obnoxious and
almost not worth it
it's just like disgusting that you have
it's just like disgusting that you have
to know the signature of the damn thing
to know the signature of the damn thing
I understand why it's the number of
I understand why it's the number of
bites to put on the stack but like
still I mean technically if it were
still I mean technically if it were
always like a void star star you
always like a void star star you
wouldn't have to put the args on the
wouldn't have to put the args on the
stack maybe I don't know
there's got to be a way to do that fast
okay cannot assign type Loadout to
okay cannot assign type Loadout to
Loadout star we should not need to do
Loadout star we should not need to do
this anymore it should just
this anymore it should just
work and
work and
then Q
then Q
14 nonfunction type skill
can you star this how do I get the uh
can you star this how do I get the uh
how do i d reference
this can I just star it like this
hey
hey
linky
welcome I think it's load out. I think
welcome I think it's load out. I think
the syntax is like this or whatever in
the syntax is like this or whatever in
syon isn't
it yeah I forgot it's this really weird
it yeah I forgot it's this really weird
syntax
it's still freaking seg fols are you
it's still freaking seg fols are you
kidding
me there's actually no way this should
me there's actually no way this should
be freaking seg fting
okay well I'm not going to do this then
okay well I'm not going to do this then
we're going to
do
e e
we're just going to make this
array I got to go learn more about how
array I got to go learn more about how
all these freaking function pointers
all these freaking function pointers
work
work
if I'm going to keep doing all this like
if I'm going to keep doing all this like
Sim
development this shouldn't be that hard
development this shouldn't be that hard
but then the thing is like I'm not even
but then the thing is like I'm not even
writing in C so I don't even know if
writing in C so I don't even know if
this is like scyon Jank or what I guess
this is like scyon Jank or what I guess
this is where you just hit the
this is where you just hit the
limitations right
calling nonfunction type skill skill is
calling nonfunction type skill skill is
a function type what the
hell cannot assign
hell cannot assign
type void star
now you should be able to assign this I
now you should be able to assign this I
have something wrong I just tested this
have something wrong I just tested this
I have the C test for
this star some
this star some
funk takes a class and then the int
funk takes a class and then the int
right then you can just do s.
right then you can just do s.
buunk FK equal self. some
method C type def some
funk void star skill
does this have to be
a is this just
a oh that was it okay
cool so this actually looks like it runs
cool so this actually looks like it runs
maybe invalid input tensor shape
what I don't know how this
what I don't know how this
happened would be this
okay so I figured I think I figured it
okay so I figured I think I figured it
out yeah okay I figured it
out yeah okay I figured it
out so the way to do this was you could
out so the way to do this was you could
make
make
a you can have the skills
here uh I'm sure there is is's a way to
here uh I'm sure there is is's a way to
put these into a
struct but this is fine I'm I'm sick of
struct but this is fine I'm I'm sick of
this this is
this this is
fine at least this is good enough for
fine at least this is good enough for
now so now we can actually start uh this
now so now we can actually start uh this
refactor properly since we have that
refactor properly since we have that
that was the main obnoxious thing
we may still want to make like skill
we may still want to make like skill
struck or
struck or
something
something
but I don't
know I think probably
know I think probably
not right because the like the effects
not right because the like the effects
are too
varied is this Project's goal search yes
varied is this Project's goal search yes
this is
this is
a this is I can show you this hold
on oops I'll pull it up on my Twitter I
on oops I'll pull it up on my Twitter I
think I overwrote the
file so this is a million plus steps per
file so this is a million plus steps per
second uh single thread MOA like
second uh single thread MOA like
miniature Dota or League of
miniature Dota or League of
Legends um this is just the highle
Legends um this is just the highle
render mode there's also a human
render mode there's also a human
playable version that renders a little
playable version that renders a little
bit more reasonably and the goal of this
bit more reasonably and the goal of this
is to have just a really high
is to have just a really high
performance complicated game simulator
performance complicated game simulator
that we can use for training
that we can use for training
reinforcement learning agents so this is
reinforcement learning agents so this is
only two weeks into this project we
only two weeks into this project we
already have pretty much all of the
already have pretty much all of the
basic elements in place and now I am uh
basic elements in place and now I am uh
trying to clean everything up so that we
trying to clean everything up so that we
can start really training some good
can start really training some good
models CU thus far we have some agents
models CU thus far we have some agents
that run mid they'll fight a little bit
that run mid they'll fight a little bit
but that's about it so cleaning it up
but that's about it so cleaning it up
trying to Auto balance it trying to do a
trying to Auto balance it trying to do a
bunch of stuff there and the hope is
bunch of stuff there and the hope is
that this will provide a really nice
that this will provide a really nice
resource for the reinforcement learning
resource for the reinforcement learning
community to be running
community to be running
uh interesting uh interesting
uh interesting uh interesting
experiments very very
quickly
quickly
welcome welcome as well
and so far it's been going very well
and so far it's been going very well
this project it has very very nice
this project it has very very nice
training
curves and we go back to the refactor of
this sure welcome welcome uh welcome to
this sure welcome welcome uh welcome to
the stream
the stream
um okay okay
um okay okay
so the lane assignments are a little
so the lane assignments are a little
janky
here where's this function right
here where's this function right
now this is in
now this is in
reset this should not have to be in
reset this should not have to be in
reset this should be in
reset this should be in
anit so what we're going to want to do
anit so what we're going to want to do
is we're going to want to clean up the
is we're going to want to clean up the
anit so that we have faster and more
anit so that we have faster and more
consistent resets
right
right
yes
yes
and do we want to assign Mana cost
and do we want to assign Mana cost
somewhere to skills do we want to assign
somewhere to skills do we want to assign
I'm trying to think of the data
I'm trying to think of the data
structure we want for these skills
structure we want for these skills
like I could just leave them as oneoff
functions could do
that just leave them as a big block of
that just leave them as a big block of
uh function
uh function
implementations how do we handle scaling
implementations how do we handle scaling
then
[Music]
it would be kind of nice to have a
it would be kind of nice to have a
skill data struct
right because then you could have a
right because then you could have a
function associated with each
skill that might be good
I don't know if I like that so much
I don't know if I like that so much
though
because it kind of separates all the
because it kind of separates all the
code around everywhere right
because then you have the struct
because then you have the struct
format you got to make the struct you
format you got to make the struct you
got to bind
got to bind
it it kind of scatters around all the
it it kind of scatters around all the
data
right so I think that the benefit that
right so I think that the benefit that
that structure gives
that structure gives
you is
outweighed yeah so essentially what I
outweighed yeah so essentially what I
was trying to figure out is I I was
was trying to figure out is I I was
trying to figure out if there's a way
trying to figure out if there's a way
that we could take all the abilities in
that we could take all the abilities in
the game and like cleanly have them as a
the game and like cleanly have them as a
bunch of strs or
bunch of strs or
something but the problem is there's not
something but the problem is there's not
a a clean way to like
a a clean way to like
Define the skill with each struct like
that
so I mean maybe there is but there's
so I mean maybe there is but there's
definitely not a simple way of doing
definitely not a simple way of doing
that
right so I think absent something that
right so I think absent something that
would require substantially more
would require substantially more
knowledge of how this low the lowlevel
knowledge of how this low the lowlevel
side of this works I think we actually
side of this works I think we actually
have a pretty decent and succinct way of
have a pretty decent and succinct way of
doing
doing
this a lot of hardcoded crap but
this a lot of hardcoded crap but
um it's going to be able to be made very
um it's going to be able to be made very
simple at the least is the important
thing so let's take all this garbage
here this needs to go
to the
to the
reset I mean not the reset this needs to
reset I mean not the reset this needs to
go into the uh the init
go into the uh the init
method e
I don't like this loop I think we're
I don't like this loop I think we're
just going to hard
code because there's not really a lot
code because there's not really a lot
that we can
reuse well I suppose actually that we
reuse well I suppose actually that we
could
there kind of is
right we can at least reuse over team
maybe if we don't do Lane
assignments with the scripted Bots
well we can probably still figure it out
well we can probably still figure it out
yeah let's do for team in range of
yeah let's do for team in range of
two we'll
do get ID
was it team
and and then this Lane will be
okay e
correct suggestion
here I like how it just like
quietly oh I never assigned Lane to this
quietly oh I never assigned Lane to this
one that's funny
tank and
carry okay so now we can get rid of this
carry okay so now we can get rid of this
giant blob of stuff potentially
that's right isn't it it's just plus
that's right isn't it it's just plus
three
burst yep that's good so already just
burst yep that's good so already just
like that we have all of the players
initialized they have all their skills
initialized and we only had to hardcode
initialized and we only had to hardcode
basically the amount that we would have
basically the amount that we would have
to hardcode regardless right
technically we could cheat a few things
technically we could cheat a few things
here but I think that this
here but I think that this
is pretty good
is pretty good
overall especially for
starting so from here um
hang on I'll be right
back e
okay I got to do one thing real quick
all
right so this Waypoint logic
is it would be very nice if we could
is it would be very nice if we could
just clean up the way that these are
just clean up the way that these are
loaded such that
loaded such that
they're we don't have all this like file
they're we don't have all this like file
pars logic in
pars logic in
here let me see what that would
here let me see what that would
take got like good
take got like good
bad top mid and
Bot basically I just have to save it in
Bot basically I just have to save it in
this format right
three times
three times
team plus Lane yeah so if I went just if
team plus Lane yeah so if I went just if
I just uh went into the the save
I just uh went into the the save
logic
logic
and I mean same thing with the towers
right is that better though
I mean I really do kind of like the idea
of shortening all of
of shortening all of
this I mean that's a lot of code we
this I mean that's a lot of code we
would
would
save that's like a good 100 lines cut
save that's like a good 100 lines cut
off of the project nearly maybe like 70
and all I would have to do is in the
and all I would have to do is in the
save code I basically I write this the
save code I basically I write this the
reverse of this in the save
code and then I can just get this from
code and then I can just get this from
the data and annotate it a little
bit
yeah okay so now I know I can do that is
yeah okay so now I know I can do that is
that the highest priority thing that I
that the highest priority thing that I
could be doing right now
could be doing right now
though what other stuff do I want to
though what other stuff do I want to
clean up in
here I might do something cheeky with
here I might do something cheeky with
this
I might get rid of this
function yeah there's no reason to have
function yeah there's no reason to have
this function that gets called once
this function that gets called once
right
the spawn Tower function should go we
the spawn Tower function should go we
should reorganize stuff a little
should reorganize stuff a little
bit I want the all the spawn functions
bit I want the all the spawn functions
to go
together move to move
near
neutral there are a number of things
neutral there are a number of things
that can definitely be proved
that can definitely be proved
here these towers for sure
what order did I uh what order am I
what order did I uh what order am I
currently placing the
towers Knight thanks for dropping
by so what order is this currently being
by so what order is this currently being
created
okay so it looks like we're doing them
okay so it looks like we're doing them
in order of top middle bottom and then
in order of top middle bottom and then
by
tier I think if I just I can still
tier I think if I just I can still
record these in a sane format I don't
record these in a sane format I don't
have to go straight to a numpy array but
have to go straight to a numpy array but
like if I just have this as one Loop
like if I just have this as one Loop
that's like P in
that's like P in
towers that would be nice I can code the
towers that would be nice I can code the
ancient as just a tower
ancient as just a tower
basically
basically
right same thing with all the
right same thing with all the
camps let's go and do
camps let's go and do
that they need to know team tier yeah
that they need to know team tier yeah
let's go let's go do that
there's no point in having uh all of
there's no point in having uh all of
this data in like this Jank
this data in like this Jank
format hello is mid Rush still a problem
format hello is mid Rush still a problem
I've seen only first 30 minutes maybe
I've seen only first 30 minutes maybe
they Rush mid for balance to
they Rush mid for balance to
invulnerable so we were actually that
invulnerable so we were actually that
was the goal was to get them to just
was the goal was to get them to just
rush mid initially we were using that as
rush mid initially we were using that as
a debug task and there was just a bug in
a debug task and there was just a bug in
an there was a major bug in the
an there was a major bug in the
environment that was preventing the
environment that was preventing the
agents from learning anything right so
agents from learning anything right so
this was like supposed to be an easy
this was like supposed to be an easy
debug task and now what we're doing is
debug task and now what we're doing is
we're training the agents to learn uh
we're training the agents to learn uh
more comprehensive objectives and the
more comprehensive objectives and the
model that we trained overnight mostly
model that we trained overnight mostly
rushes mid but actually will do uh will
rushes mid but actually will do uh will
fight some NPCs in the jungle and stuff
fight some NPCs in the jungle and stuff
and the hope is that as I clean this up
and the hope is that as I clean this up
more and I add back all the features I
more and I add back all the features I
add in the usage of skills I fix bugs
add in the usage of skills I fix bugs
right I make improvements there and I
right I make improvements there and I
hook up some of the automated training
hook up some of the automated training
methods that I have the models are just
methods that I have the models are just
going to keep it getting better and
going to keep it getting better and
better and then they're just going to
better and then they're just going to
discover better strategies on their own
discover better strategies on their own
um it is completely possible to your
um it is completely possible to your
comment it's completely possible that
comment it's completely possible that
this is for balance reasons
this is for balance reasons
um but part of what I'm doing right now
um but part of what I'm doing right now
is cleaning the game code up so that it
is cleaning the game code up so that it
is easier to find and balance right and
is easier to find and balance right and
also also we're going to be exposing
also also we're going to be exposing
more log metrics and stuff like that
more log metrics and stuff like that
that's what we're doing for the most
that's what we're doing for the most
part
today that helps to understand yeah so I
today that helps to understand yeah so I
mean a good thing to a good way to think
mean a good thing to a good way to think
about reinforcement learning is
about reinforcement learning is
like you have a you have a simulator
like you have a you have a simulator
right in which the agent can do anything
right in which the agent can do anything
and then you have a reward function
and then you have a reward function
which is a trail of
which is a trail of
breadcrumbs for how they should interact
breadcrumbs for how they should interact
with the simulator right you kind of
with the simulator right you kind of
give them hints as to what they should
give them hints as to what they should
do you can tell them like hey you get a
do you can tell them like hey you get a
reward for getting XP you get a big
reward for getting XP you get a big
reward for K uh killing Towers right you
reward for K uh killing Towers right you
get a medium reward for defeating an
get a medium reward for defeating an
enemy hero stuff like that and if the
enemy hero stuff like that and if the
breadcrumb trail is sensible enough
breadcrumb trail is sensible enough
right if the breadcrumb trail makes
right if the breadcrumb trail makes
enough sense and your environment is
enough sense and your environment is
correct correct and your reinforcement
correct correct and your reinforcement
learning is run at substantial scale and
learning is run at substantial scale and
is tuned correctly it should just learn
is tuned correctly it should just learn
how to do all of that um now if your
how to do all of that um now if your
simulator has bugs in it that make it uh
simulator has bugs in it that make it uh
a problem that doesn't make sense then
a problem that doesn't make sense then
it's not going to learn if you have a
it's not going to learn if you have a
bad reward function that's essentially
bad reward function that's essentially
like one breadcrumb here and one
like one breadcrumb here and one
breadcrumb on the other side of a
breadcrumb on the other side of a
mountain they're not going to be able to
mountain they're not going to be able to
figure out how to do that that's like
figure out how to do that that's like
the high level of
the high level of
it have you ever dealt with CV yeah I
it have you ever dealt with CV yeah I
started in uh I started research in NL
started in uh I started research in NL
LP and then spent like a year year and a
LP and then spent like a year year and a
half in CV after that it's all pretty
half in CV after that it's all pretty
much the same these days um I don't know
much the same these days um I don't know
specifics of like diffusion models and
specifics of like diffusion models and
stuff but in general like high level
stuff but in general like high level
stuff
sure I have one cool Vision paper I can
sure I have one cool Vision paper I can
link
this is not amazing work it's from early
this is not amazing work it's from early
on and uh this is from when I was like
on and uh this is from when I was like
sophomore undergrad
but is it it's jus
oh I actually have a couple of these
oh I actually have a couple of these
papers I forgot I did this meme paper
papers I forgot I did this meme paper
where I trained Gans on other
where I trained Gans on other
Gans but like here this is
on DTM
CV yeah that's like the one paper this
CV yeah that's like the one paper this
one was really funny I did this one in
one was really funny I did this one in
like three days
like three days
this was kind of cool though so I
this was kind of cool though so I
trained ganss like to I trained a
trained ganss like to I trained a
generative model on the weights of other
generative model on the weights of other
generative models and then like I ended
generative models and then like I ended
up getting a distribution over
up getting a distribution over
generative models Each of which was a
generative models Each of which was a
generative model it was really
generative model it was really
wonky I like trained this thing on my
wonky I like trained this thing on my
laptop as well and it still kind of
laptop as well and it still kind of
worked which was really
cool like these are the samples from a
cool like these are the samples from a
single model and then these are all the
single model and then these are all the
different models
different models
mod it was pretty
cool yeah I don't know I did some funny
stuff deformable template
matching I didn't do deform mile
matching I didn't do deform mile
template
template
matching I did uh like self I did like
matching I did uh like self I did like
dynamically assembled differentiable
dynamically assembled differentiable
Vision like deep Network architectures
Vision like deep Network architectures
it was weird I did some weird
stuff e
a senior student this year trying to get
a senior student this year trying to get
into CV there are too many things to
into CV there are too many things to
learn it's hard to do something in this
learn it's hard to do something in this
yeah it takes a lot of time especially
yeah it takes a lot of time especially
when you're starting it's like it it
when you're starting it's like it it
takes a lot of time you got to read a
takes a lot of time you got to read a
bunch of papers you got to implement a
bunch of papers you got to implement a
bunch of stuff you got to get
bunch of stuff you got to get
comfortable with a bunch of tensor
comfortable with a bunch of tensor
[ __ ] as the name of the
game I mean it does get better though it
game I mean it does get better though it
does get to the point where you more or
does get to the point where you more or
less understand what's going on and then
less understand what's going on and then
it's just like a question of like well
it's just like a question of like well
which freaking architecture or data
which freaking architecture or data
thing or whatever is actually going to
thing or whatever is actually going to
make a difference next
right see DOTA
Tower probably open this file up to see
Tower probably open this file up to see
what's in it right
oof
should actually invest in this
should actually invest in this
processing code a little
bit the only thing what I should do is
working that guy is
wait what's trigger multiple oh Camp
wait what's trigger multiple oh Camp
name
I
see okay we got the team name
this is top left
X e
TM X and
TM X and
Y this is
Y this is
good so we save the neutral camp in an
good so we save the neutral camp in an
easy
easy
format we now go to the towers
really tired and go to sleep good
really tired and go to sleep good
night catch you around
one e
we just record the ancient as tier five
right this will get the data into a much
right this will get the data into a much
better format for us
this is we're just going to save the for
this is we're just going to save the for
does the tier five
makes sense right and um we should also
makes sense right and um we should also
do the uh the health and the Damage
do the uh the health and the Damage
values Maybe
well let's actually see if it's encoded
well let's actually see if it's encoded
in here there we could literally just
in here there we could literally just
have the data in here right
oh yeah look at
oh yeah look at
that it has uh it has all the values
that's really nice
right two health
is that
Health sub of
Health okay
Health okay
Oops why thinks we're doing creeps now
Health
Health
damage nice and
easy can even get armor and stuff if we
easy can even get armor and stuff if we
want it
want it
we're going to have to include this file
we're going to have to include this file
somewhere so that we can easily redo the
somewhere so that we can easily redo the
pre-processing I'm sure we handle that
pre-processing I'm sure we handle that
later
though the
though the
heck I've never seen this happen before
heck I've never seen this happen before
my straw kind of just disintegrated
uh does this give you any data about the
neutrals hold on this may or may not
neutrals hold on this may or may not
give me any data about the neutrals
give me any data about the neutrals
right
that's kind of
weird
weird
uh is there
uh is there
no DOTA healer fountain
no DOTA healer fountain
tree
wait oh
wait oh
that's really cool we just have a giant
that's really cool we just have a giant
list of Tree
list of Tree
positions we might be able to include
those neutral spawner
I don't
I don't
see I would like to be able to extract
see I would like to be able to extract
the HP
values but I don't see anywhere in
values but I don't see anywhere in
here that would
here that would
have
have
MPC filler
what's
what's
this armor 10 Health
this armor 10 Health
1,000 region
zero this seems like something
else
Watchtower no there's nothing in here
Watchtower no there's nothing in here
that has the entity data that we
need well that's somewhat
need well that's somewhat
unfortunate maybe we'll be able to pull
unfortunate maybe we'll be able to pull
that data later but for
that data later but for
now uh we can do
this yeah
that's really
obnoxious well what else do we need we
obnoxious well what else do we need we
just need the
um wait save data spawner key is this
um wait save data spawner key is this
something that we
use what did we use from here
I do not know what we used from here
bad
bad
bottom oh okay this is just uh
the yeah so these are the Waypoint this
the yeah so these are the Waypoint this
is the the Waypoint data I see that we
is the the Waypoint data I see that we
were trying to figure out
so e
format is not even that
format is not even that
bad I think that we just want
to we want to just avoid having to do
to we want to just avoid having to do
the keys with this thing I think right
the keys with this thing I think right
so
half
key this is going to be way points of
key this is going to be way points of
path
path
key this is going to be way
key this is going to be way
Points Way points
x y
okay now we just have to uh order a
okay now we just have to uh order a
points
points
clean so we just go hardcode this I
clean so we just go hardcode this I
think
think
um save data
um save data
waypoints is going to be equal
waypoints is going to be equal
to way points
P NPC DOTA
P NPC DOTA
spawner good
spawner good
top
there and that's basically all the data
there and that's basically all the data
that we wanted I
think apparently this is not the the
name uh right the
name uh right the
fort the fort apparently does not do
damage for does zero towers do the
damage for does zero towers do the
damage all right so now we have our
damage all right so now we have our
process
process
data we're just going to uh copy
data we're just going to uh copy
process
process
yaml I don't even know if I want it in a
yaml I don't even know if I want it in a
yaml though to be
honest
forb data. yl
yeah DayDay that
yaml okay so now that we have this in
yaml okay so now that we have this in
data
yaml we can load it into
here and uh it should be substantially
here and uh it should be substantially
simpler
simpler
now so way
points we simply do
points we simply do
four way points in in
range
six way
points we do spawn
and we do
um
or data
so for
so for
I
numerate and we can just write arbitrary
numerate and we can just write arbitrary
python here because this is on a knit
anyways arguably this could go in the uh
anyways arguably this could go in the uh
thep
thep
file doesn't really matter either
way kind of nicer to have it
here makes it like marginally easier to
here makes it like marginally easier to
Port later I
guess one plus one
so that's substantially simpler
right
okay now
okay now
uh this is also way way
uh this is also way way
easier we simply
do this is a list this is a list
these Tower spawns are
these Tower spawns are
weird I don't like
weird I don't like
this the way that this is
I think I would rather just set the
I think I would rather just set the
Tower data here
Tower data here
right because we have spawn ax even with
right because we have spawn ax even with
like the being able to pull towers
like the being able to pull towers
around bug I have a way around
that yeah this is going to be a lot a
that yeah this is going to be a lot a
lot cleaner we're we're not even going
lot cleaner we're we're not even going
to need we literally don't even need
to need we literally don't even need
Tower spawns that's how nice this is so
we don't need spawn Tower either but
we don't need spawn Tower either but
it's going to be very close to spawn
it's going to be very close to spawn
Tower so let's actually go grab
Tower so let's actually go grab
this this code
here doesn't tell you how much xp you
here doesn't tell you how much xp you
get on a
get on a
kill one slightly obnoxious thing I
kill one slightly obnoxious thing I
suppose
that could have been in there and I
that could have been in there and I
might have missed it
right okay so we
do get Tower of ey
do get Tower of ey
tower.
PID let's do idx
here Tower to entity
type we don't need move
type we don't need move
to but we have team
here tower.
spawn
x uh tower. Health
x uh tower. Health
right
right
Health tower.
Health tower.
damage Max
damage Max
help damage
uh and
uh and
then the XP on kill is slightly
then the XP on kill is slightly
obnoxious
obnoxious
right I think we can just do 800 times
tier that's pretty much
it and uh this is how much easier this
it and uh this is how much easier this
is going to make so when you spawn this
is going to make so when you spawn this
Tower you just
Tower you just
do x equal tower. spawn X spawn y health
do x equal tower. spawn X spawn y health
is Tower Max health
oh you actually even
oh you actually even
just spawn y spawn X
timer
timer
zero that's literally it I think this we
zero that's literally it I think this we
actually need to move this back
down because of how simple this is we no
down because of how simple this is we no
longer need any of this hardcoded
longer need any of this hardcoded
garbage
in fact we might even uh we might even
in fact we might even uh we might even
just remove that because it's so
just remove that because it's so
easy yeah this is rapidly rapidly
easy yeah this is rapidly rapidly
getting uh shorter and simpler this is
getting uh shorter and simpler this is
what we needed we just needed the data
what we needed we just needed the data
to be in an easier to read format this
to be in an easier to read format this
was the missing thing it was
was the missing thing it was
complicating this project it was just
complicating this project it was just
having the data in an obnoxious
having the data in an obnoxious
format so you know I'd rather write a
format so you know I'd rather write a
little bit of code to pull the data into
little bit of code to pull the data into
a good format uh have that code be like
a good format uh have that code be like
whatever it's a human readable format
whatever it's a human readable format
anyways
anyways
um and then the main environment code is
um and then the main environment code is
nice and
simple we no longer need this cool thing
simple we no longer need this cool thing
here is we literally don't need any of
here is we literally don't need any of
this anymore uh this all goes
away these neutral spawns these also get
away these neutral spawns these also get
to go away that's pretty cool right
spawn neutral we're going to do the
spawn neutral we're going to do the
pretty much the exact same thing we just
pretty much the exact same thing we just
did
before so
sh
okay so we have
okay so we have
PID is going to
PID is going to
be idx plus agents plus creeps not plus
be idx plus agents plus creeps not plus
towers and then we do neutral is going
towers and then we do neutral is going
to be get entity
PID
PID
PID be
PID uh you can't do
get I think get neutral is better here
get I think get neutral is better here
isn't
isn't
it how often do we use this
we don't really use
this I think it's still
cleaner not
cleaner not
really kind of have it hardcoded in two
really kind of have it hardcoded in two
places either way don't you we'll leave
places either way don't you we'll leave
it for now
um you get idx plus agents plus
um you get idx plus agents plus
creeps you get the neutral
creeps you get the neutral
here you assign the PID to be
this entity type is entity
this entity type is entity
neutral you do grid
neutral you do grid
ID
ID
neutral Max
neutral Max
Health they don't have Mana so it
Health they don't have Mana so it
doesn't
doesn't
matter Camp data and spawn X we
matter Camp data and spawn X we
get XP on kill we set we hard
get XP on kill we set we hard
set damage we hard
set damage we hard
set and that's it
we don't need any of this
we don't need any of this
anymore and then when we do spawn
anymore and then when we do spawn
neutral
hereid titty star neutral is get neutral
hereid titty star neutral is get neutral
of
of
idx no longer needs uh
idx no longer needs uh
PID Dy and DX still needed don't need
PID Dy and DX still needed don't need
this don't need this health is going to
this don't need this health is going to
be Max
be Max
Health don't need
Health don't need
team uh Team should be
hardcoded hold on we should make sure we
hardcoded hold on we should make sure we
uh we hardcoded
team this is not going to be included so
team this is not going to be included so
it's just going to be
two yeah this this is not going to be
two yeah this this is not going to be
included it's just going to be two
you set the timer on them as well why
you set the timer on them as well why
not
and then we move
and then we move
it okay that's way
it okay that's way
better we're going to have to do a fair
better we're going to have to do a fair
bit of uh debugging I'm sure with this
bit of uh debugging I'm sure with this
but
but
um it is getting cleaner we're back at
um it is getting cleaner we're back at
lines and we have almost everything
lines and we have almost everything
initialized
initialized
already just the way we need it to be
yeah that's basically all the data that
yeah that's basically all the data that
we needed
I should
I should
probably well hold on wait we have this
probably well hold on wait we have this
reset
here just spawn
player what's
player what's
this be
respawn wait respawn player
okay we don't need
this player.
this player.
health well no we don't even need any of
health well no we don't even need any of
this we just need player do X P equals z
right and then we need to respawn
right and then we need to respawn
basically the only thing we need to do
basically the only thing we need to do
player. level it's going to be one we
player. level it's going to be one we
respawn the
respawn the
player
respawn player
we also can put this in uh we can put
we also can put this in uh we can put
this up in the reset
right initialize
players e
okay
player. health is Max
Health move
Health move
speed
modifier there are kind of a bunch of
modifier there are kind of a bunch of
things here aren't
there then maybe we're going to want to
there then maybe we're going to want to
set separately
all
right it is pit
entity
entity
type yeah let's give it all the player.
type yeah let's give it all the player.
lane no we can't do
lane no we can't do
Lane player. level is
Lane player. level is
one well no this gets reset
one well no this gets reset
player damage
okay we'll have to iterate on this a
okay we'll have to iterate on this a
little bit
little bit
but we'll have some sort of like nice
but we'll have some sort of like nice
compact way to
compact way to
spawn or not to spawn but to initialize
spawn or not to spawn but to initialize
all the player
data
players basic attack timer
players basic attack timer
oh yeah and then move speed
right this also has to be loaded
in
good shoot I just realized it's uh it's
good shoot I just realized it's uh it's
5:00 p.m. and I forgot to make lunch I
5:00 p.m. and I forgot to make lunch I
will uh I'll be back in like 5 minutes
will uh I'll be back in like 5 minutes
and we will continue fixing all of this
and we will continue fixing all of this
stuff one
second
e
e
e
e
e
e
e
e
e
e
e
e e
whoops thank
you said a man can starve to death
you said a man can starve to death
eating
eating
salad um
salad um
we pretty much just have to reset level
we pretty much just have to reset level
when we reset the
end
end
yeah everything else is fine
that that wayo is zero
what get that out of
what get that out of
there okay
why we just need Y
X all right that's all
we no longer need spawn X and spawn y
we no longer need spawn X and spawn y
from
from
this right because we
this right because we
uh did we did we do that we did
right did we do this for the creeps as
right did we do this for the creeps as
well load creep way points
I guess we can keep this for the creeps
I guess we can keep this for the creeps
for
now yeah cuz the way that we spawn the
now yeah cuz the way that we spawn the
creeps is a little weird
so we have to actually
so we have to actually
add spawn
reap it's not bad
maybe we make this work now as
is generalization over abstraction
yeah exactly
I mean we've already cut off a decent
I mean we've already cut off a decent
chunk of code
chunk of code
right feels like we
right feels like we
have uh okay so I forgot that we have to
have uh okay so I forgot that we have to
add some
add some
entities to this but we can very easily
entities to this but we can very easily
do
that I
that I
think where do we see death stuff
C def entity start
player and just because for the
player and just because for the
semantics it's really nice to just have
semantics it's really nice to just have
um Star
um Star
Tower and C def star
neutral cannot convert entity star okay
cannot convert
cannot convert
entity star to python
entity star to python
object why this
one to.
one to.
tier did not
save cannot convert entity start what
save cannot convert entity start what
does it not have a
does it not have a
um probably doesn't have tier as a key
um probably doesn't have tier as a key
word
right
here respawn
player so this is entity
I'd really like this to be you know a
I'd really like this to be you know a
very
very
short concise code
project I mean just looking at the
project I mean just looking at the
length of the logic this has actually
length of the logic this has actually
gotten to be very very
gotten to be very very
substantial quite quickly
cannot assign float to int
whatever no big
deal all right
local data I
local data I
okay Waypoint
okay Waypoint
Lane then
Lane then
Lane all right
for got to
rebuild but yeah this is way cleaner
rebuild but yeah this is way cleaner
code I'm going to have to obviously fix
code I'm going to have to obviously fix
a few things there's no way I have this
a few things there's no way I have this
perfect so we have memory view not
perfect so we have memory view not
initialized right spawn Tower
initialized right spawn Tower
uh well we don't need this anymore it's
just spawn Tower of idx
right and actually Tower spawns we no
right and actually Tower spawns we no
longer need Tower
longer need Tower
spawns we no longer need neutral
spawns we no longer need neutral
spawns it's two obnoxious data
spawns it's two obnoxious data
structures we get rid of
structures we get rid of
call with the wrong number of
arguments
B
Tower we get to make the method call
Tower we get to make the method call
Signature uh the method call
simpler possible inconsistent indent
simpler possible inconsistent indent
what did I just screw up oh this there
and in fact this spawn Tower is so
and in fact this spawn Tower is so
simple
simple
like do we even need
this this is the only place we use it
this this is the only place we use it
right
okay we no longer need this
whoops 1350
whoops 1350
lines feels like it should be getting
lines feels like it should be getting
shorter but it's not
uh okay well I see that they're both on
uh okay well I see that they're both on
the same
the same
team but it looks like it works besides
team but it looks like it works besides
that sounds like it should just go
that sounds like it should just go
in in it it can't just go in a it just
in in it it can't just go in a it just
join to see the channel would love to
join to see the channel would love to
see what the game looks like let me yeah
see what the game looks like let me yeah
so you just saw that gift let me show
so you just saw that gift let me show
you the proper one because we're
you the proper one because we're
currently debugging it uh I'm doing a
currently debugging it uh I'm doing a
big refactor at the moment to make it
big refactor at the moment to make it
look nicer
a lot of progress on the Twitter
a lot of progress on the Twitter
timeline so this is the game running
timeline so this is the game running
with some uh basic trained reinforcement
with some uh basic trained reinforcement
learned
learned
agents they're trained to just go to the
agents they're trained to just go to the
enemy base um this was like a debug run
enemy base um this was like a debug run
so these ones don't do anything too too
so these ones don't do anything too too
crazy they kind of run past each other
crazy they kind of run past each other
and just go straight for the base um but
and just go straight for the base um but
yeah it's a basic mooba this is not the
yeah it's a basic mooba this is not the
only render mode there's
only render mode there's
[Music]
[Music]
also what
also what
where is
it where's the puffer
it where's the puffer
[Music]
[Music]
mode oh yeah so you can also play it
mode oh yeah so you can also play it
like
this you know there are multiple
this you know there are multiple
different render modes for it we were
different render modes for it we were
going to get some art or something at
going to get some art or something at
some point so it looks nice
some point so it looks nice
um yeah exactly tree the the layers need
um yeah exactly tree the the layers need
to reset it
confused trying to find where the
confused trying to find where the
players are but once I found the creeps
players are but once I found the creeps
it made sense yeah so the color schemes
it made sense yeah so the color schemes
aren't great at the moment right we need
aren't great at the moment right we need
to get like some more unique assets and
to get like some more unique assets and
stuff um but it is if you look at the
stuff um but it is if you look at the
high level you can think oh you're just
high level you can think oh you're just
doing like some pixel Sim but no you
doing like some pixel Sim but no you
know it's a full MOBA almost a full
know it's a full MOBA almost a full
mooba we don't have stuff like items uh
mooba we don't have stuff like items uh
items at the moment but there are
items at the moment but there are
abilities you can level up you can take
abilities you can level up you can take
Towers right you can take the objective
Towers right you can take the objective
win the game they are minion waves there
win the game they are minion waves there
are
are
neutrals lots of
neutrals lots of
things there are different
things there are different
classes or
classes or
Heroes quite a bit of
Heroes quite a bit of
stuff and this has only been two weeks
stuff and this has only been two weeks
in development I started this project
in development I started this project
last
Monday oh also the fun thing about this
Monday oh also the fun thing about this
is it runs at over a million steps per
is it runs at over a million steps per
second as the title says so it's Ultra
second as the title says so it's Ultra
ultra high performance simulation for
ultra high performance simulation for
reinforcement
learning looks great would be fun to
learning looks great would be fun to
hook this end with an RL framework yeah
hook this end with an RL framework yeah
we have it uh it's running with puffer
we have it uh it's running with puffer
lib puffer lib is my main project so I
lib puffer lib is my main project so I
just I recently finished my PhD uh I've
just I recently finished my PhD uh I've
been working in reinforcement learning
been working in reinforcement learning
for seven years or so I've done neural
for seven years or so I've done neural
MMO if you've seen that project and I'm
MMO if you've seen that project and I'm
currently working on making
currently working on making
reinforcement learning way less cursed
reinforcement learning way less cursed
way higher performance and way easier to
way higher performance and way easier to
work with so what we have here is puffer
work with so what we have here is puffer
lib puffer lib makes everything fast and
lib puffer lib makes everything fast and
compatible uh we have some demo code
compatible uh we have some demo code
based on clean rl's po just with a bunch
based on clean rl's po just with a bunch
of additional logging and some major
of additional logging and some major
performance optimizations and you can
performance optimizations and you can
get all of the things that I'm working
get all of the things that I'm working
on here in puffer Leb there's this any
on here in puffer Leb there's this any
config branch which is with the current
config branch which is with the current
Dev Branch for the mooba uh it'll be
Dev Branch for the mooba uh it'll be
merged up to Dev soon and then
merged up to Dev soon and then
eventually to 1.1
eventually to 1.1
thereafter but if you uh if you like any
thereafter but if you uh if you like any
of this stuff if you find it useful go
of this stuff if you find it useful go
ahead and give puffer a star helps me
ahead and give puffer a star helps me
out a whole bunch and I post about all
out a whole bunch and I post about all
this stuff right
this stuff right
here that's pretty much the whole
pitch puffer lib
right so I was looking for why the teams
right so I was looking for why the teams
are wrong right
are wrong right
player. team equal
team that's kind of
team that's kind of
odd oh the radiant I because I set them
odd oh the radiant I because I set them
all to radiant
all to radiant
okay that's
awkward this is really
awkward this is really
sketchy we're going to do this though
we'll find a better way to manage these
we'll find a better way to manage these
ideas
ideas
after but hopefully I think this now uh
after but hopefully I think this now uh
this should actually
run and we'll be able to see these
run and we'll be able to see these
things play a little
things play a little
bit this is a little bit of a better
bit this is a little bit of a better
model than the the other one too
yeah so this model is better than the
yeah so this model is better than the
other one they take a little longer to
other one they take a little longer to
go down mid but they don't just like
go down mid but they don't just like
beine past each other
beine past each other
anymore they do like they actually will
anymore they do like they actually will
like go try to farm neutrals and stuff
like go try to farm neutrals and stuff
it looks like in the latest patch did I
it looks like in the latest patch did I
overbuff did I like Giga buff the
overbuff did I like Giga buff the
neutrals yeah it looks like they're
neutrals yeah it looks like they're
getting one shot by
getting one shot by
neutrals so I got to go check what the
neutrals so I got to go check what the
neutrals damage values are
so much work to be
done H damage of 22 looks reasonable
done H damage of 22 looks reasonable
here we got basic attack cool down XP on
here we got basic attack cool down XP on
kill are there Heroes too not visible on
kill are there Heroes too not visible on
the mini map yeah they're not visible
the mini map yeah they're not visible
yet uh but there are five different hero
yet uh but there are five different hero
types they are they have three skills
types they are they have three skills
each at the moment the hero types are
each at the moment the hero types are
support which has a hook an AOE heal and
support which has a hook an AOE heal and
a stun assassin which has a creep clear
a stun assassin which has a creep clear
uh a blink strike and a movement buff
uh a blink strike and a movement buff
that's channeled there is a midlaner
that's channeled there is a midlaner
that has a burst nuke a burst AOE uh and
that has a burst nuke a burst AOE uh and
the AOE
the AOE
stun there's a tank that's got an AOE
stun there's a tank that's got an AOE
damage over time a self heal and an
damage over time a self heal and an
engage AOE and then there's a carry that
engage AOE and then there's a carry that
has uh well it will be scaling attack
has uh well it will be scaling attack
damage that part's not implemented yet
damage that part's not implemented yet
but has some defensive tools of retreat
but has some defensive tools of retreat
that also slows the uh the target a slow
that also slows the uh the target a slow
damage that can be used offensively or
damage that can be used offensively or
defensively and an AOE to help with
defensively and an AOE to help with
clear minion
clear minion
clear that's what we're looking at that
clear that's what we're looking at that
at the
moment again this is a fairly new
moment again this is a fairly new
project so that the way it works is
project so that the way it works is
basically I try to get the whole thing
basically I try to get the whole thing
running end to end and then like I
running end to end and then like I
iteratively improve the code debug and
iteratively improve the code debug and
like make the features that are
like make the features that are
implemented actually available to the
implemented actually available to the
neural network to learn
neural network to learn
from because it's if I throw too much at
from because it's if I throw too much at
the model all at once and nothing works
the model all at once and nothing works
it's way harder to debug right
maybe I'll get some uh some like 2D
maybe I'll get some uh some like 2D
puffer animations made that'd be fun I
puffer animations made that'd be fun I
only have the 3D ones like this guy up
here and this version of DOTA is better
here and this version of DOTA is better
because Pudge hook pulls Towers
because Pudge hook pulls Towers
yep that was a bug and then everybody
yep that was a bug and then everybody
said to leave it in so I left
said to leave it in so I left
it you can technically hook
it you can technically hook
Towers well the thing is I left it in
Towers well the thing is I left it in
because I want to see if the agents
because I want to see if the agents
actually figure out that they can do
actually figure out that they can do
that right like wouldn't that be so
that right like wouldn't that be so
funny if the RL agents just like we open
funny if the RL agents just like we open
up a training run day and then they just
up a training run day and then they just
like they've learned to just hook all
like they've learned to just hook all
their towers like around with them so
their towers like around with them so
that they like bring their towers to the
that they like bring their towers to the
fight or something
ridiculous for
well that's like the initial pass on the
well that's like the initial pass on the
refactor actually if this is working
refactor actually if this is working
more or less as
more or less as
intended
intended
um let's take a little bit of a higher
um let's take a little bit of a higher
level look at this and see what sections
level look at this and see what sections
in the code we have that can be
improved so we've got these grid
improved so we've got these grid
idas these are what we are using to
idas these are what we are using to
signify um position on the map or to
signify um position on the map or to
signify like who is who on the mini map
signify like who is who on the mini map
not mini map on like the the render it's
not mini map on like the the render it's
also visible to
also visible to
agents we've got North do we use
this we don't use these so we can delete
this we don't use these so we can delete
them uh we've got Vision counters
them uh we've got Vision counters
here these are actually kind of cool
here these are actually kind of cool
because I think we can make the game
because I think we can make the game
substantially faster just by like uh
substantially faster just by like uh
reducing some of the visions a little
reducing some of the visions a little
bit here and
there though if you reduce it too much
there though if you reduce it too much
you can kind of like you can start
you can kind of like you can start
hitting the creeps without them hitting
hitting the creeps without them hitting
you back so we might have to make some
you back so we might have to make some
changes with that
this is redundant
are walls basically trees which block
are walls basically trees which block
yeah these are in these are from the
yeah these are in these are from the
actual DOTA map like this is extracted
actual DOTA map like this is extracted
map data from DOTA so those are just
map data from DOTA so those are just
where the walls are in Dota I have not
where the walls are in Dota I have not
added trees yet I've been told that
added trees yet I've been told that
they're a very important part of DOTA
they're a very important part of DOTA
and that I should add them uh so I
and that I should add them uh so I
probably will but not yet you know it's
probably will but not yet you know it's
some work that's actually like sub quite
some work that's actually like sub quite
substantial work so you have to do
substantial work so you have to do
Vision then
I mean I'm open to implementing like I'm
I mean I'm open to implementing like I'm
open to making the Sim substantially
open to making the Sim substantially
closer to DOTA and like way way way
closer to DOTA and like way way way
better which would just require me
better which would just require me
spending like a couple extra weeks more
spending like a couple extra weeks more
like more than I intend to on it um it's
like more than I intend to on it um it's
just going to be a matter of how much uh
just going to be a matter of how much uh
you know how much interest there is in
you know how much interest there is in
this project overall
hey pdbs
hey pdbs
welcome we've got some cool stuff here
welcome we've got some cool stuff here
I'll show you the
latest so we're at 1337 lines I did not
latest so we're at 1337 lines I did not
plan
plan
that and
here we go we have some very basic
here we go we have some very basic
reinforcement learned agents that
reinforcement learned agents that
Meander down mid and attempt to fight
Meander down mid and attempt to fight
neutrals no proper DOTA M and this would
neutrals no proper DOTA M and this would
be great to recreate open A5 at some
be great to recreate open A5 at some
point in the future yeah exactly that's
point in the future yeah exactly that's
the that's the general idea right like
the that's the general idea right like
open ai5 is this awesome project but
open ai5 is this awesome project but
they you can't train on the actual game
they you can't train on the actual game
dota's like the simulator for DOTA is
dota's like the simulator for DOTA is
too slow they used over a 100,000 CPU
too slow they used over a 100,000 CPU
cores for that project and like a th
cores for that project and like a th
gpus this version we can run this at a
gpus this version we can run this at a
million steps per second single thread
million steps per second single thread
and we can train this at a like I've
and we can train this at a like I've
gotten 500k steps per second so far but
gotten 500k steps per second so far but
it will be a million plus by the time
it will be a million plus by the time
I'm done uh on one
I'm done uh on one
GPU so we're actually training this
GPU so we're actually training this
thing like the number of samples we're
thing like the number of samples we're
going through it's about half of the
going through it's about half of the
total number of samples of all of
total number of samples of all of
opening I5 but we're doing it on one GPU
so it's very very
fast it's kind of been my main Jam
fast it's kind of been my main Jam
lately is just like performance
lately is just like performance
engineering cool
Sims you have some basic trained agents
Sims you have some basic trained agents
now yes can you play against
them if I didn't break the renderer
them if I didn't break the renderer
you I also this will be useful cuz I
you I also this will be useful cuz I
need to check if I I think the neutrals
need to check if I I think the neutrals
might oneshot you
now hey what's up puffers come on let's
now hey what's up puffers come on let's
push mid come
push mid come
on key error
five well it looks like something wasn't
five well it looks like something wasn't
there
neutrals uh see
I thought that I had a graphic for
I thought that I had a graphic for
neutrals didn't
I is this
five what's neutral three three is
five what's neutral three three is
radiant creep
hold
on oh I didn't make a graphic for
on oh I didn't make a graphic for
neutrals we'll just reuse this one for
neutrals we'll just reuse this one for
now
what's up
poppers uh you have zero zero health so
poppers uh you have zero zero health so
I've clearly I've broken some stuff with
I've clearly I've broken some stuff with
the reset
the reset
functions but yeah they take a while
functions but yeah they take a while
they do eventually Mander up they like
they do eventually Mander up they like
to go fight these uh these neutrals up
to go fight these uh these neutrals up
here as well they're kind of funny here
here as well they're kind of funny here
are the waves the wave paths the waves
are the waves the wave paths the waves
path very nicely
path very nicely
now this is about the state of the
now this is about the state of the
project at the
project at the
moment there you go
guess Heroes increase
damage yeah they do there is a basic
damage yeah they do there is a basic
leveling system I need to expand on it
leveling system I need to expand on it
but there is
one and I need to add player max Health
one and I need to add player max Health
here right
wonder if the current bot take the mid
wonder if the current bot take the mid
Tower after a while they do they do
Tower after a while they do they do
eventually win the whole
eventually win the whole
game is there a fixed number of entities
game is there a fixed number of entities
can you crank it up for
can you crank it up for
fun uh not quickly pdubs I
can't I can run many copies of the
can't I can run many copies of the
environment in the background and when
environment in the background and when
I'm training I'm usually running like
I'm training I'm usually running like
two to 400 copies of the environment per
two to 400 copies of the environment per
CPU core
but because I've been deving this
but because I've been deving this
quickly like 10 players is hardcoded in
quickly like 10 players is hardcoded in
a lot of spots at the
moment that'd be kind of funny to have
moment that'd be kind of funny to have
like nvn mooba like technically you
like nvn mooba like technically you
could have like a 100 V 100 but I don't
could have like a 100 V 100 but I don't
think it's going to work I don't like
think it's going to work I don't like
pdbs I don't think it would work because
pdbs I don't think it would work because
like the XP would not scale so like you
like the XP would not scale so like you
wouldn't be able to feed enough
wouldn't be able to feed enough
agents like the games are not made this
agents like the games are not made this
is not a game that I think works very
is not a game that I think works very
well if you just scale them
players Starcraft 2 mobile yeah if I
players Starcraft 2 mobile yeah if I
wanted to do an RTS I'd do an RTS right
wanted to do an RTS I'd do an RTS right
that's like another that's another
that's like another that's another
totally reasonable project I don't think
totally reasonable project I don't think
I will do one though at least I don't
I will do one though at least I don't
have a plan to do one at the moment
have a plan to do one at the moment
because like it's cool but I don't think
because like it's cool but I don't think
that having this and uh and like it's
that having this and uh and like it's
not twice as good I don't think to have
not twice as good I don't think to have
this end and an
RTS they have a decent end but as far as
RTS they have a decent end but as far as
I'm aware I think it's very slow
one of the big goals I have at the
one of the big goals I have at the
moment is to accelerate all of RL
moment is to accelerate all of RL
research to be million steps per second
research to be million steps per second
as a baseline on a range of different
as a baseline on a range of different
environments of different
complexities and think if you do that
complexities and think if you do that
then you'll start to get a lot of you'll
then you'll start to get a lot of you'll
start to really get a lot of uh
start to really get a lot of uh
interesting
stuff in the research scene very quickly
all right so this fixes the health
bars so now if I go try to fight a
bars so now if I go try to fight a
neutral I can probably go fight this
neutral oh yeah I hardcoded it to always
neutral oh yeah I hardcoded it to always
Pi Q because I was debugging something
Pi Q because I was debugging something
use Q
I think yeah this okay so this is why
I think yeah this okay so this is why
it's not
it's not
working so now if I do
this we should actually see them do
this we should actually see them do
something a little better maybe they
something a little better maybe they
should actually be able to kill stuff
okay so right now they uh you can
okay so right now they uh you can
technically hit them out of
technically hit them out of
Los that's nice though you
heal you can kind of just all
push me standing here makes the waves
push me standing here makes the waves
push because I had my damage in right
push because I had my damage in right
you can see I got level two which means
you can see I got level two which means
my HP total Max went up to
600 and then if I'm here without my wave
600 and then if I'm here without my wave
I'm probably going to
I'm probably going to
die unless my wave saves me which it
die unless my wave saves me which it
did you heal one HP per game
tick and some weird render bug
not bad though that's not
bad there's a little bit more
bad there's a little bit more
refactoring to do um I think I said we
refactoring to do um I think I said we
were going to look at this at a high
were going to look at this at a high
level and like try to section out some
level and like try to section out some
blocks of code so I'm going to do that
blocks of code so I'm going to do that
in a moment you just use the restroom
in a moment you just use the restroom
I'll be right back and we've got another
I'll be right back and we've got another
hour and a bit of Dev
e
e e
okay
okay
got to do one thing real quick and we go
got to do one thing real quick and we go
back to Dev
how's this article of mine
doing not
great I guess this was insufficiently
great I guess this was insufficiently
clickbait but if you're looking for
clickbait but if you're looking for
something fun to read it's like I don't
something fun to read it's like I don't
know page or
know page or
two articles on X wrote this today for
two articles on X wrote this today for
fun
this is fine
let's go block out the uh the code
let's go block out the uh the code
so at the top we've got all of these
so at the top we've got all of these
types uh these
types uh these
constants types hero types we don't
constants types hero types we don't
really use these hero types a ton to be
honest let me
honest let me
see yeah we really only use this here
see yeah we really only use this here
which is kind of lame
I say we get rid of
these cuz like they don't we really just
these cuz like they don't we really just
need
need
um I really just need these for
observations we are not using these
observations we are not using these
anywhere in the code
okay so we have our
constants let's merge these two
sections don't need these comments
environment
star go up
star go up
top a better
there put this
do we need L2
distance we'll leave L2 for now
distance we'll leave L2 for now
so I think we're going to decide on that
so I think we're going to decide on that
later uh and then what do we have
later uh and then what do we have
here interray actions yeah this is going
here interray actions yeah this is going
to end up being 2D in the
to end up being 2D in the
future with height num agents num creeps
future with height num agents num creeps
num neutrals num
Towers this is not used
Towers this is not used
ever this is not used ever so we don't
ever this is not used ever so we don't
really care about within height now do
really care about within height now do
we
we
agent creeps neutrals
agent creeps neutrals
Towers uh Vision
Towers uh Vision
range agent speed discretize obiz creep
range agent speed discretize obiz creep
index creep
index oh yeah
index oh yeah
that's that's used for keeping track of
that's that's used for keeping track of
uh when creeps spawn that's
fine then XP for
fine then XP for
level I think this can go down here
right uh where you put this maybe
here entity
here entity
data go down here who is it need wait
data go down here who is it need wait
self. entity
we we don't need to we don't need to
we we don't need to we don't need to
store it we only use it on a
net okay we have pre-allocated
net okay we have pre-allocated
RNG we've
RNG we've
got obervations
got obervations
map which gets used where
here and then observations
here and then observations
extra so observations map observations
extra so observations map observations
extra this is
good okay that prunes that down just a
good okay that prunes that down just a
little bit
next immediate Milestone you're looking
next immediate Milestone you're looking
to get
to get
to um I really just want to have this
to um I really just want to have this
code nicely cleaned up to start with and
code nicely cleaned up to start with and
then the next thing after that will be I
then the next thing after that will be I
want to turn back on the um the skills
want to turn back on the um the skills
cuz the previous model that I trained it
cuz the previous model that I trained it
was a simpler test so I left all the
was a simpler test so I left all the
skills off so I want to train a model
skills off so I want to train a model
with uh the ability to use skills and
with uh the ability to use skills and
get them to start using those skills
get them to start using those skills
have that be stable have some good
have that be stable have some good
learning curves and then from there the
learning curves and then from there the
hope is that if we do like a nice hyper
hope is that if we do like a nice hyper
parameter sweep we'll get like an
parameter sweep we'll get like an
actually reasonable policy out of it and
actually reasonable policy out of it and
we can start seeing like what's
we can start seeing like what's
overpowered and stuff from there and we
overpowered and stuff from there and we
can start game balancing it
can start game balancing it
so we're like I'm not going to say we're
so we're like I'm not going to say we're
entirely feature complete there's some
entirely feature complete there's some
stuff missing around like scaling creep
stuff missing around like scaling creep
waves they need to like have scaling
waves they need to like have scaling
stats uh we need to have assign like uh
stats uh we need to have assign like uh
specific base stats and scaling for each
specific base stats and scaling for each
hero type right now they just have
hero type right now they just have
different abilities um but it's
different abilities um but it's
generally like we've got a vertical
generally like we've got a vertical
slice now of the whole
slice now of the whole
thing there's a lot we can do from here
thing there's a lot we can do from here
right but uh it's it's in a good spot at
right but uh it's it's in a good spot at
the moment and it's really going to just
the moment and it's really going to just
depend on how training goes and how
depend on how training goes and how
people like the project and so much from
people like the project and so much from
there at the very least I'm going to
there at the very least I'm going to
release uh when I release this it will
release uh when I release this it will
be you know a good stable somewhat well
be you know a good stable somewhat well
balanced uh mini MOBA now how much more
balanced uh mini MOBA now how much more
stuff we add you know if I add forest
stuff we add you know if I add forest
and vision control um if I decide to add
and vision control um if I decide to add
some form of items if I add like you
some form of items if I add like you
know different types of creeps and stuff
know different types of creeps and stuff
if I try to like more accurately
if I try to like more accurately
replicate the hard versus easy neutral
replicate the hard versus easy neutral
camps if I try to like Implement
camps if I try to like Implement
specific mechanics that's going to
specific mechanics that's going to
depend on how much people like the
environment you know it's a very
environment you know it's a very
different story if I release this and
different story if I release this and
maybe like one or two people kind of
maybe like one or two people kind of
like it and use it versus if I use this
like it and use it versus if I use this
and like I have a hundred researchers
and like I have a hundred researchers
all like wanting to use this for their
all like wanting to use this for their
projects right it's going to be a very
projects right it's going to be a very
different amount of effort I put into
different amount of effort I put into
it because ultimately I'm doing this so
it because ultimately I'm doing this so
that researchers use it
let's see how the code is blocked out at
let's see how the code is blocked out at
the
moment we have all these get functions
moment we have all these get functions
that are kind of obnoxious well this one
that are kind of obnoxious well this one
I know is old we don't need this
I know is old we don't need this
one I'm not a researcher can I still use
one I'm not a researcher can I still use
it yeah you can I mean link key you're
it yeah you can I mean link key you're
kind of a researcher at this point
kind of a researcher at this point
you're doing research Argo you're a
researcher we'll see about these methods
researcher we'll see about these methods
I don't necessarily like
these but have to keep going for
now in6 makes torch compile errors
now in6 makes torch compile errors
[ __ ] torch
man okay we've got compute
man okay we've got compute
observations I haven't decided whether I
observations I haven't decided whether I
like it when you one line like variables
like it when you one line like variables
that don't have initializations you can
that don't have initializations you can
technically go like this
right that's kind of better isn't
right that's kind of better isn't
it not having a giant block for a bunch
it not having a giant block for a bunch
of unallocated
variables I like that more
it's a little annoying because it's
it's a little annoying because it's
inconsistent when you mix um variables
inconsistent when you mix um variables
that have in uh have have assignments
that have in uh have have assignments
versus not
but you figured out how to zero the
data love to get the hang of it and make
data love to get the hang of it and make
contributions for building the
contributions for building the
EnV yeah I mean it's a it's a full open
EnV yeah I mean it's a it's a full open
source project so if you have ideas or
source project so if you have ideas or
you have like stuff you can do like chat
you have like stuff you can do like chat
me up I'm very easy to get a hold of and
me up I'm very easy to get a hold of and
everything's open source right look so
everything's open source right look so
right now it's
in look this thing had to commit four
in look this thing had to commit four
hours ago that's the last time I
hours ago that's the last time I
committed changes I'll commit them to
committed changes I'll commit them to
again you know in a a little bit or at
again you know in a a little bit or at
the end of the stream or whatever it's
the end of the stream or whatever it's
in puffer lab
in puffer lab
environments um
environments um
ocean here's all the stuff I've built
ocean here's all the stuff I've built
they're not really docks for this yet
they're not really docks for this yet
but I have uh a 10 million plus FPS
but I have uh a 10 million plus FPS
snake en a 10 mil plus FPS particle
snake en a 10 mil plus FPS particle
engine and then the mobile which is
engine and then the mobile which is
still over a million
still over a million
FPS uh you have the mobile file here
FPS uh you have the mobile file here
which is like a bunch of python wrappers
which is like a bunch of python wrappers
this is 600 lines and then you have the
this is 600 lines and then you have the
mobile file which is or the cmob file
mobile file which is or the cmob file
where is
where is
it which is uh 1400 lines which is going
it which is uh 1400 lines which is going
to be a little shorter so overall goal
to be a little shorter so overall goal
is that this whole project all in is
is that this whole project all in is
going to be less than 2,000
lines unless of course it gets
lines unless of course it gets
substantially larger right if we're
substantially larger right if we're
going to say okay it's going to be 3,000
going to say okay it's going to be 3,000
instead of 2,000 but it's going to
instead of 2,000 but it's going to
basically be like all of DOTA almost one
basically be like all of DOTA almost one
to one then I'm good with that but uh
to one then I'm good with that but uh
otherwise we try to keep it very nice
otherwise we try to keep it very nice
and
and
concise I'm compactifying stuff a little
concise I'm compactifying stuff a little
bit right
now I also do give um another cool thing
now I also do give um another cool thing
by the way is I also do give compute
by the way is I also do give compute
access to people to
access to people to
contributors and uh really the only
contributors and uh really the only
requirement for compute access is that
requirement for compute access is that
you're actually developing stuff and
you're actually developing stuff and
doing useful work so I don't give it to
doing useful work so I don't give it to
people immediately because 90% of people
people immediately because 90% of people
don't actually do anything after they
don't actually do anything after they
say they want to but um if people are
say they want to but um if people are
doing stuff they get compute uh I don't
doing stuff they get compute uh I don't
have a ton of boxes at the moment we've
have a ton of boxes at the moment we've
only got eight uh eight machines but uh
only got eight uh eight machines but uh
we'll hopefully be getting some more
we'll hopefully be getting some more
some uh some more
some uh some more
in probably be a few more months but
in probably be a few more months but
we'll be getting more
we'll be getting more
soon we have a little bit of spare
soon we have a little bit of spare
capacity maybe at the moment we'll see
I don't know I could try to go get
I don't know I could try to go get
puffer some Revenue to just get a way
puffer some Revenue to just get a way
bigger cluster but then I don't have
bigger cluster but then I don't have
time to be doing this stuff right
for e
I can't respawn the creeps that's
obnoxious so this move to function is
obnoxious so this move to function is
pretty
pretty
nice you check if your destination is
nice you check if your destination is
empty is not
empty is not
empty for
this move two function this move two
this move two function this move two
function could be
is better
right
yeah wa if entity PID is Target PID
the heck
the heck
move player
Target that should never be the case
[Music]
why I don't know why I did that that's
why I don't know why I did that that's
really weird wait
it did uh equals equals 1 it's a bent I
it did uh equals equals 1 it's a bent I
shouldn't need
that okay we got
that okay we got
kill got move
towards wait
oh huh
probably this would be
probably this would be
um a useful thing to fix
um a useful thing to fix
right this is eight
lfs an array lookup would be faster
lfs an array lookup would be faster
wouldn't
it it definitely be
simpler
for e
you hear Heroes get together to D gank
you hear Heroes get together to D gank
other
other
Heroes be interesting to know how to get
Heroes be interesting to know how to get
the agents to learn the behavior I mean
the agents to learn the behavior I mean
literally all that should be required
literally all that should be required
for that is a well balanced game a
for that is a well balanced game a
reasonable Network a reasonable reward
reasonable Network a reasonable reward
function and enough
training you shouldn't have to get uh
training you shouldn't have to get uh
you shouldn't even have to get probably
you shouldn't even have to get probably
some function of the rewards for ganking
some function of the rewards for ganking
and scaling easily yeah I mean the
and scaling easily yeah I mean the
reward will definitely influence it I
reward will definitely influence it I
mean if you go look at the Dota 2 reward
mean if you go look at the Dota 2 reward
they didn't have like a specific gank
they didn't have like a specific gank
reward they just have there's like a
reward they just have there's like a
reward sharing mechanism or whatever but
reward sharing mechanism or whatever but
um it was actually pretty reasonable
um it was actually pretty reasonable
like they didn't have to do a crazy
like they didn't have to do a crazy
crazy amount of reward
engineering like you'd think it would be
engineering like you'd think it would be
a 100 component reward or something for
a 100 component reward or something for
open A5 and it wasn't
did I do this
did I do this
right
z0 XP a hero XP gold there's a little
z0 XP a hero XP gold there's a little
more than that right there were Tower
more than that right there were Tower
kills there's Hero death there was like
kills there's Hero death there was like
Roshan um there were a few other small
Roshan um there were a few other small
things right there was like a last hit
things right there was like a last hit
thing there were some like Delta
thing there were some like Delta
adjustments on
top I mean the other thing is you
top I mean the other thing is you
actually don't know how well
actually don't know how well
those we really don't know how well any
those we really don't know how well any
of those were tuned because
of those were tuned because
like so I was there in 20 I was there in
like so I was there in 20 I was there in
2018 and I never knew exactly how many
2018 and I never knew exactly how many
gpus they had but I definitely didn't
gpus they had but I definitely didn't
get the impression that they had like
get the impression that they had like
they did not have enough gpus to run
they did not have enough gpus to run
like a 100 experiment sweep or anything
like a 100 experiment sweep or anything
at a time so I'm guessing that the hyper
at a time so I'm guessing that the hyper
prams and the rewards they use could
prams and the rewards they use could
have been substantially simplified just
have been substantially simplified just
with better
with better
tuning so that's kind of one of the
tuning so that's kind of one of the
things I'm hoping with this project is
things I'm hoping with this project is
like it's so stupidly fast that we can
like it's so stupidly fast that we can
tune it so much that probably we can
tune it so much that probably we can
make it work with way simpler rewards
make it work with way simpler rewards
and things just by tuning
and things just by tuning
it we've got carb sweeps
Dy is 1 DX is Zer Y is negative 1 DX is
Dy is 1 DX is Zer Y is negative 1 DX is
0 Y is z DX
0 Y is z DX
1 wait four
1 wait four
three is
three is
D four is dy
D four is dy
is
three four is 1
three four is 1
1 5 is 1 negative 1 one one one one okay
1 5 is 1 negative 1 one one one one okay
good
great to see the progress interested in
great to see the progress interested in
novel population
novel population
search I can stand the
search I can stand the
yeah I've spoken with Ken many times
yeah I've spoken with Ken many times
he's a very cool
he's a very cool
guy
guy
um novel population search so the only
um novel population search so the only
thing that I've really seen on that to
thing that I've really seen on that to
be frank is like the Deep mindes PBT
be frank is like the Deep mindes PBT
thing right where they search over
thing right where they search over
reward weights
reward weights
I don't think that it's a particularly
I don't think that it's a particularly
good algorithm
good algorithm
though I honestly I think I have a way
though I honestly I think I have a way
better way of doing it
better way of doing it
um so what you do is you
um so what you do is you
need can imagine a s a where game
need can imagine a s a where game
designer let me finish this question
designer let me finish this question
wait they're related can imagine a St
wait they're related can imagine a St
area where game designers can use these
area where game designers can use these
environments to see tuning certain
environments to see tuning certain
parameters to induce certain behav yes
parameters to induce certain behav yes
okay this slightly different so uh to
okay this slightly different so uh to
answer the first question
answer the first question
the way that I think that this is going
the way that I think that this is going
to work when we run the full tuning
to work when we run the full tuning
thing
thing
and we really need some sort of like ELO
and we really need some sort of like ELO
based metric or something for DOTA
based metric or something for DOTA
because it's adversarial so that's going
because it's adversarial so that's going
to still be a little bit of work I've
to still be a little bit of work I've
had people asking me for that anyways
had people asking me for that anyways
though so you know if we have to add it
though so you know if we have to add it
we have to add it no big deal um but
we have to add it no big deal um but
let's just say like let's assume that we
let's just say like let's assume that we
have an ELO implementation right um so
have an ELO implementation right um so
that gives you like a ground truth like
that gives you like a ground truth like
a ground truth way to to evaluate how
a ground truth way to to evaluate how
good players
good players
are then what I would do from there is I
are then what I would do from there is I
would take all of the different reward
would take all of the different reward
components I have and I would put the
components I have and I would put the
weights of these various rewards as
weights of these various rewards as
hyper
hyper
parameters along with all the normal
parameters along with all the normal
hyper parameters and then I would give
hyper parameters and then I would give
the entire thing to carbs to do a
the entire thing to carbs to do a
gigantic hyperparameter
gigantic hyperparameter
sweep and carbs would be able then to
sweep and carbs would be able then to
dynamically tune all of the rewards uh
dynamically tune all of the rewards uh
but also the length of the experiments
but also the length of the experiments
and all the other
and all the other
hyperparameters and uh it would be
hyperparameters and uh it would be
selecting based on Elo improvements so
selecting based on Elo improvements so
essentially over time you would get
essentially over time you would get
better and better models with higher and
better and better models with higher and
higher ELO and uh it would autotune the
higher ELO and uh it would autotune the
rewards for you as a result of that I
rewards for you as a result of that I
think that that is probably going to be
think that that is probably going to be
the more reasonable way of going about
the more reasonable way of going about
it there's some limitations with that
it there's some limitations with that
but uh probably will get us pretty far
and by the way yes uh the other question
and by the way yes uh the other question
yes you absolutely can use RL for game
yes you absolutely can use RL for game
balance there's a little bit of work on
balance there's a little bit of work on
doing this a couple game studios have
doing this a couple game studios have
done it they've had some success
done it they've had some success
probably not worth the cost that they
probably not worth the cost that they
invested in it um but it will definitely
invested in it um but it will definitely
be worth the cost in the future when it
be worth the cost in the future when it
gets simpler like I spoke with Riot
gets simpler like I spoke with Riot
about this and how they were doing it um
about this and how they were doing it um
I mean they did a bunch of cool work but
I mean they did a bunch of cool work but
they really just got hamstrung by the
they really just got hamstrung by the
infrastructure and
infrastructure and
tools more than
tools more than
anything of course it's always going to
anything of course it's always going to
be hard on real games like to be frank I
be hard on real games like to be frank I
don't have the the infra for handling
don't have the the infra for handling
well I kind of do have the infra for
well I kind of do have the infra for
handling real games
handling real games
um there's a little bit of tech a little
um there's a little bit of tech a little
bit of extra i' have to do but not
much would definitely have to be
much would definitely have to be
worthwhile
though hyper parameter is I learning
though hyper parameter is I learning
rate no you don't need learning rate of
rate no you don't need learning rate of
learning
learning
rate you just need to tune learning rate
a hyp like learning rate is a
a hyp like learning rate is a
hyperparameter you don't need to do
hyperparameter you don't need to do
learning rate of learning
rate so the way that carbs work carbs is
rate so the way that carbs work carbs is
a parito optimal basian tuning
a parito optimal basian tuning
algorithm which means that it will it
algorithm which means that it will it
keeps like a wide set of different hyper
keeps like a wide set of different hyper
parameters that are good for different
parameters that are good for different
reasons essentially and uh it will
reasons essentially and uh it will
investigate all of the promising routes
investigate all of the promising routes
at the same
at the same
time carbs is really
time carbs is really
good only in puffer
good only in puffer
lib puffer
exclusive at least until wandb gives us
exclusive at least until wandb gives us
a native integration which I'm looking
a native integration which I'm looking
forward to but until then it's part of
forward to but until then it's part of
the puffer open source
moat how does it evaluate if something
moat how does it evaluate if something
is good in the RL cases you give it a
is good in the RL cases you give it a
metric like ELO would be the metric that
metric like ELO would be the metric that
you'd use for DOTA right so higher ELO
you'd use for DOTA right so higher ELO
is better so just at the end of every
is better so just at the end of every
run it sees how long did it take me to
run it sees how long did it take me to
get this result what was the ELO and it
get this result what was the ELO and it
will just maintain all possible pairs of
will just maintain all possible pairs of
like you know all points for which there
like you know all points for which there
are no other runs that were quicker and
are no other runs that were quicker and
got higher ELO that's the Pito front
how can I join
how can I join
you
friends this is all just open source
Dev try to get it running at some point
Dev try to get it running at some point
and see if I can do
and see if I can do
anything heck yeah we definitely want
anything heck yeah we definitely want
more contributors on this do you set
more contributors on this do you set
like a max number of steps to achieve
like a max number of steps to achieve
the desired
the desired
metric uh not quite you set
metric uh not quite you set
ranges on valid hyper prams but you
ranges on valid hyper prams but you
don't necessarily have to specify a
don't necessarily have to specify a
closed range so like for time steps I
closed range so like for time steps I
could specify that it's going to be
could specify that it's going to be
between 100 million and a quadrillion
between 100 million and a quadrillion
and I specify the search center as like
and I specify the search center as like
you know 200 million and then what it'll
you know 200 million and then what it'll
do is it'll just like it'll start off
do is it'll just like it'll start off
with a bunch of quick runs and then as
with a bunch of quick runs and then as
it gets more confident in the hyper
it gets more confident in the hyper
parameters that are better and that lead
parameters that are better and that lead
to more growth over time and provided
to more growth over time and provided
that you actually do continue to get
that you actually do continue to get
better performance by training longer
better performance by training longer
it'll just keep training for longer and
it'll just keep training for longer and
longer with like the refined set of
longer with like the refined set of
hyper
hyper
parameters it's a very nice
algorithm all the code is right on here
algorithm all the code is right on here
on puffer lib go ahead and head and give
on puffer lib go ahead and head and give
it a star on the way in we're almost at
it a star on the way in we're almost at
700 now which is awesome
700 now which is awesome
I've been looking at uh where is it
I've been looking at uh where is it
sample we're almost at sample Factory
sample we're almost at sample Factory
aren't
aren't
we yeah we're like less than 100 off of
we yeah we're like less than 100 off of
passing sample Factory which is freaking
crazy should star this
if I can't get direct ml should I
if I can't get direct ml should I
theoretically be able to get some
theoretically be able to get some
results on CPU possibly
results on CPU possibly
yes um it's so rough without Nvidia
yes um it's so rough without Nvidia
gpus now the thing is I do actually
gpus now the thing is I do actually
provide Hardware to contributors of the
provide Hardware to contributors of the
project um you know I have the puffer
project um you know I have the puffer
cluster and I do provide access access
cluster and I do provide access access
to people who are actually doing stuff
to people who are actually doing stuff
but I don't provide access up front
but I don't provide access up front
right cuz like I get a bajillion request
right cuz like I get a bajillion request
and 99% of people or 90% of people I
and 99% of people or 90% of people I
should say don't do anything and then
should say don't do anything and then
then I just have like random people on
then I just have like random people on
the cluster access list racking up bills
the cluster access list racking up bills
so I do provide access pretty quick
so I do provide access pretty quick
though once people start doing cool
stuff and you know contributions get
stuff and you know contributions get
credited on the perer site and yada yada
credited on the perer site and yada yada
it's all open source
Dev allegedly scale well I'll
Dev allegedly scale well I'll
code that would be cool I'll believe it
code that would be cool I'll believe it
when I see
it George Hots literally offered to do
it George Hots literally offered to do
it for him for free and they were
it for him for free and they were
dumb so
I know companies are super bullshitty
I know companies are super bullshitty
sometimes it's like you offer to like
sometimes it's like you offer to like
make them something awesome for free and
make them something awesome for free and
it's like it's you're almost better off
it's like it's you're almost better off
like offering to charge him a million
like offering to charge him a million
dollars to do it like they don't take
dollars to do it like they don't take
you seriously unless you're charging
you seriously unless you're charging
them a million dollars
I wouldn't be surprised if they'd
I wouldn't be surprised if they'd
actually gone for it if he'd been like
actually gone for it if he'd been like
that it'll be a million
today
today
Project how to land I don't know what I
Project how to land I don't know what I
don't know what you're
don't know what you're
asking
asking
uh T Tia
uh T Tia
Tila not sure what you're asking there
Tila not sure what you're asking there
can't put links on YouTube sounds like
can't put links on YouTube sounds like
NVIDIA drivers will be open source come
NVIDIA drivers will be open source come
5 that would be
5 that would be
awesome that'd be really
awesome that'd be really
awesome dang I hope that happens
I don't believe they'll do that
though the project is uh it's
though the project is uh it's
on if if I'm not sure if this answers
on if if I'm not sure if this answers
the question but this the Project's on
the question but this the Project's on
puffer AI puffer
puffer AI puffer
lib and the current is any
lib and the current is any
config so the latest Dev is all in here
config so the latest Dev is all in here
it's in puffer Leb
it's in puffer Leb
environments uh ocean which is our first
environments uh ocean which is our first
party ones and
party ones and
MOA so it's right in here and you can
MOA so it's right in here and you can
run it like this with Dash Dash and
whoops you can run it like this with Das
whoops you can run it like this with Das
Das n MOBA mode eval and then there's
Das n MOBA mode eval and then there's
like render mode rib or render mode
like render mode rib or render mode
human
yeah pretty cool
this will probably use the move actions
this will probably use the move actions
as well for
right not yet though because I'm pretty
right not yet though because I'm pretty
sure they're
sure they're
different yeah these are different we'll
different yeah these are different we'll
use that in the future for this okay
use that in the future for this okay
we're we're under 1300
we're we're under 1300
lines we are under 1300 lines again
lines we are under 1300 lines again
it's always nice to
it's always nice to
see uh we've got all the
see uh we've got all the
skills we've got cool Downs this is fine
skills we've got cool Downs this is fine
this code is fine
this code is fine
push AOE
push nearest scan Target let's take
push nearest scan Target let's take
these l2s out for
now AE attack
now AE attack
back is there a debug mode where we can
back is there a debug mode where we can
manually play the game yes there is and
manually play the game yes there is and
that's not even just a debug mode that's
that's not even just a debug mode that's
a fundamental feature uh there are a
a fundamental feature uh there are a
couple little bugs in it
couple little bugs in it
so might have to look at some stuff but
so might have to look at some stuff but
um Das D render mode human and the only
um Das D render mode human and the only
dependency for these renders is uh you
dependency for these renders is uh you
might have to pip install rib rib the uh
might have to pip install rib rib the uh
the graphics Library not the like
the graphics Library not the like
distributed
distributed
Library rib is god tier it's like my
Library rib is god tier it's like my
favorite library
ever it's just so
good this scan AOE is kind of slow but
rank the following carbs rib clean
rank the following carbs rib clean
RL uh clean RL is god
RL uh clean RL is god
tier oh [ __ ] now you're putting like all
tier oh [ __ ] now you're putting like all
of my
well the thing is rib isn't even an ml
well the thing is rib isn't even an ml
thing so that's apples to oranges but I
thing so that's apples to oranges but I
consider clean RL the best contribution
consider clean RL the best contribution
to RL ever by a single
individual
so cost is
so cost is
goated carbs is another carbs is awesome
goated carbs is another carbs is awesome
I definitely put carbs in like the top
I definitely put carbs in like the top
well the thing is I haven't really done
well the thing is I haven't really done
enough analysis on it to like I need to
enough analysis on it to like I need to
Benchmark exactly how much better it is
Benchmark exactly how much better it is
than like bayy and sweep but I think
than like bayy and sweep but I think
it's very well like if it performs as
it's very well like if it performs as
well as it looks like it's going to it
well as it looks like it's going to it
could very well be a contender for top
could very well be a contender for top
10 contributions but it's really going
10 contributions but it's really going
to depend on like whether we get native
to depend on like whether we get native
Integrations with wandb and stuff uh and
Integrations with wandb and stuff uh and
Rib is not ml it's just a graphics
Rib is not ml it's just a graphics
library but I think it's the best one
library but I think it's the best one
like RB is so
like RB is so
nice and I'm very like I do not give
nice and I'm very like I do not give
praise Broadley like I I generally think
praise Broadley like I I generally think
that most code is [ __ ] like most code is
that most code is [ __ ] like most code is
just garbage nobody knows what they're
just garbage nobody knows what they're
doing like GPT is not going to automate
doing like GPT is not going to automate
everything of course it's not we have no
everything of course it's not we have no
skill whatsoever in the field yada yada
skill whatsoever in the field yada yada
yada like Boomer rant whatever but uh
yada like Boomer rant whatever but uh
those three are
awesome I have a bit of art expertise
awesome I have a bit of art expertise
and might help fancy up the Sim View and
and might help fancy up the Sim View and
stuff that would be
stuff that would be
amazing that would be amazing you want
amazing that would be amazing you want
to do stuff for this H
yeah because I'm not going to use the
yeah because I'm not going to use the
DOTA map for it right I think that would
DOTA map for it right I think that would
be a little bit much like ripping map
be a little bit much like ripping map
data for an open source project is one
data for an open source project is one
thing like ripping the artwork from DOTA
thing like ripping the artwork from DOTA
I think that's a
nogo it would be very easy to do but I
nogo it would be very easy to do but I
think they'd be mad don't
you I genuinely don't know how artists
you I genuinely don't know how artists
do do things um hold
on let me show
on let me show
you I'll show you I did like one digital
you I'll show you I did like one digital
art painting ever and it was terrible I
art painting ever and it was terrible I
did like for a cover of a short
story okay here's my garbage digital art
story okay here's my garbage digital art
painting
okay that's
[Music]
it mostly do
it mostly do
3D I if you want to do 3D you can do
3D I if you want to do 3D you can do
3D we'll have to figure out how to had
3D we'll have to figure out how to had
to Lo to load it I mean the concept was
to Lo to load it I mean the concept was
pretty cool it was like I actually used
pretty cool it was like I actually used
to be a creative writer like growing up
to be a creative writer like growing up
I did I like I wrote a fair bit of
I did I like I wrote a fair bit of
stuff I got like 150 pages into a novel
stuff I got like 150 pages into a novel
as
well wrote like sci-fi and fantasy
stuff was
fun for
okay so these spawn functions need to
okay so these spawn functions need to
get moved around
essentially is that wait one thing I
essentially is that wait one thing I
want to know
get
entity only
entity only
novel in sixth grade about
something I uh I think wait six it might
something I uh I think wait six it might
have been seventh I think I
have been seventh I think I
published I published a a uh like a
published I published a a uh like a
short children's book in seventh
grade I mean I had a lot of help with
grade I mean I had a lot of help with
the publishing obviously but I did write
the publishing obviously but I did write
it
myself entity star Target
oh that's so
oh that's so
awkward because it's I it's not it's
awkward because it's I it's not it's
star
player right you got to do like
player right you got to do like
this I always forget that it's supposed
this I always forget that it's supposed
to be grouped like this right
for some reason in my head I always put
for some reason in my head I always put
the like the star I I hate the Syntax
the like the star I I hate the Syntax
for this stuff like in my head the star
for this stuff like in my head the star
goes with the type right like the type
goes with the type right like the type
is is entity
star is there some way to train video
star is there some way to train video
save uh gifts yes yes there is um mind
save uh gifts yes yes there is um mind
you if you're trying to save a really
you if you're trying to save a really
long gift then you're going to run into
long gift then you're going to run into
issues uh but in
issues uh but in
clean you will out of memory your
clean you will out of memory your
machine if you leave this running for
machine if you leave this running for
too long by the way um there's there
too long by the way um there's there
might be a small leak not in the
might be a small leak not in the
environment but in the renderer so
environment but in the renderer so
there's this gift saver here in clean
there's this gift saver here in clean
puff RL and you can set like the number
puff RL and you can set like the number
of ticks up here there's not a command
of ticks up here there's not a command
line option for it or anything but you
line option for it or anything but you
can set number of ticks here and you can
can set number of ticks here and you can
set like a frame skip over here if you
set like a frame skip over here if you
want to only record every few frames
cool to see people starting to use stuff
though let me reorder the methods before
though let me reorder the methods before
I forget to do
that I want to
that I want to
have so we have inette
short
methods I want the spawn functions
turn the AC one
sec the one other thing that helps a lot
sec the one other thing that helps a lot
with the project is if you folks if you
with the project is if you folks if you
use Twitter if you just post stuff every
use Twitter if you just post stuff every
so often it helps a lot
so often it helps a lot
I mean the whole thing at the moment
I mean the whole thing at the moment
right is like building puffer as uh open
right is like building puffer as uh open
source stuff so hopefully companies will
source stuff so hopefully companies will
eventually want to like use it and
eventually want to like use it and
puffer can get some some contracts so we
puffer can get some some contracts so we
can build out a bigger cluster and like
can build out a bigger cluster and like
do more cool big
stuff for now this is just me funding
this
e
e
e
e
e e
Ro's looking a lot
Ro's looking a lot
cleaner we cut like few 200 lines off of
cleaner we cut like few 200 lines off of
it
today 642
very
nice so many cool projects to do with
nice so many cool projects to do with
like hyperf Sim like
this this is like about the scope of a
this this is like about the scope of a
project that I like as well like this is
project that I like as well like this is
pretty much like the scope of a project
pretty much like the scope of a project
that I'm comfortable doing without it
that I'm comfortable doing without it
taking for absolutely
taking for absolutely
forever it's still going to take a while
but okay so there's some respawn stuff
but okay so there's some respawn stuff
that we can maybe look at just a little
that we can maybe look at just a little
bit but
bit but
then I want to put this reset method at
then I want to put this reset method at
the bottom before
step right
actually or do want I want to put this
actually or do want I want to put this
at the
at the
top no I think it's a long method I
top no I think it's a long method I
think I put it at the
think I put it at the
bottom you just go to the bottom of the
bottom you just go to the bottom of the
file
file
yeah
yeah
uh a lot of these variables could just
uh a lot of these variables could just
be on lined
right YX
attack star
attack star
player Target creep
player Target creep
neutral
Tower PID Target PID
action e
I don't know if I like having a Big Blob
I don't know if I like having a Big Blob
of variables like this but I also really
of variables like this but I also really
don't like having 50 lines of variable
don't like having 50 lines of variable
deaths at the start so we'll leave it
deaths at the start so we'll leave it
for
now reset then we got all the
skills got cooldowns and status this
skills got cooldowns and status this
feels like this should go higher up this
feels like this should go higher up this
is not part of skills cuz these are all
is not part of skills cuz these are all
skills
here I like it but I also
here I like it but I also
like Pascal so what can I
say there is a question as to whether
say there is a question as to whether
one should like
pescal I don't know I'm tempted the next
pescal I don't know I'm tempted the next
time I get a little bit of spare time
time I get a little bit of spare time
like after I finish the simulation
like after I finish the simulation
update maybe maybe finish some videos
update maybe maybe finish some videos
it's a lot of work actually we'll see um
it's a lot of work actually we'll see um
I don't know I might want to do Jam some
I don't know I might want to do Jam some
Zig just try that out might want to see
Zig just try that out might want to see
if
if
I I want to see if there's a non- cursed
I I want to see if there's a non- cursed
web development stack so I can maybe put
web development stack so I can maybe put
some of this these cool things online
some of this these cool things online
instead of just putting
gifts but I'm guessing web dev's pretty
gifts but I'm guessing web dev's pretty
damn cursed
I think this is legal right
syntax
error guess that's not legal I guess it
error guess that's not legal I guess it
has to be the same
type I do not use use the
function neutral AI should go after
function neutral AI should go after
creep
AI e
it's attack function should go higher
it's attack function should go higher
I'm just kind of
I'm just kind of
like I'm just sort of like semantically
like I'm just sort of like semantically
organizing stuff at the
moment zigg Lings and messed with
moment zigg Lings and messed with
threading
do you know what a man goes through when
do you know what a man goes through when
you don't have
threads you want to know what how much
threads you want to know what how much
Cur [ __ ] I had to put up with without
Cur [ __ ] I had to put up with without
threads to get Python's multiprocessing
threads to get Python's multiprocessing
to be
fast there's like a whole section of the
fast there's like a whole section of the
puffer white paper that's just devoted
puffer white paper that's just devoted
to like cursed tricks to make
to like cursed tricks to make
multi-processing really fast you know I
multi-processing really fast you know I
actually the puffer multiprocessing one
actually the puffer multiprocessing one
of the things I did that made it so much
of the things I did that made it so much
faster than everything else is I
faster than everything else is I
completely cut out interprocess
completely cut out interprocess
communication and I
communication and I
had processes would signal each other by
had processes would signal each other by
writing to a block of shared memory and
writing to a block of shared memory and
busy waiting for updates on that block
busy waiting for updates on that block
and that ended up cutting out like 40
and that ended up cutting out like 40
micro seconds per uh per
micro seconds per uh per
cycle which just like made the whole
cycle which just like made the whole
thing way way way faster and scale 10
thing way way way faster and scale 10
times
better I've seen some [ __ ] all
right looking at somebody who's seen
right looking at somebody who's seen
some [ __ ]
did I say milliseconds I think it was
did I say milliseconds I think it was
micro I said microc seconds I hope um
micro I said microc seconds I hope um
but it was still
huge I have liked raise actor pool as
huge I have liked raise actor pool as
the best multiprocessing tool in Python
the best multiprocessing tool in Python
it has an amazing API but it's [ __ ]
it has an amazing API but it's [ __ ]
slow rib is the actual slowest multi
slow rib is the actual slowest multi
prosting implementation around for
prosting implementation around for
shortlived
jobs I timed it is bad it real
jobs I timed it is bad it real
bad sorry
I mean we're talking like 100,000 jobs
I mean we're talking like 100,000 jobs
per
per
second um puffer actually I think can go
second um puffer actually I think can go
higher than that but yeah like 100,000
higher than that but yeah like 100,000
job like small jobs per
job like small jobs per
second right
so you basically you have 10 micros
seconds now of course you have that per
seconds now of course you have that per
process so you have a little more time
process so you have a little more time
than that but still it's
tight I mean when I say like puffer
tight I mean when I say like puffer
literally our implementation for fast
literally our implementation for fast
workloads can be 10 times plus faster
workloads can be 10 times plus faster
than other multiprocessing
than other multiprocessing
implementations it makes that much of a
difference I don't want to save a line
difference I don't want to save a line
that badly to have to do
that even I have
that even I have
limits oh jeez
okay 1231 lines does it still
work and just reordered a bunch of stuff
work and just reordered a bunch of stuff
it's way nicer now
though rid of L2
distance 1220
lines it's way
lines it's way
nicer 40 kilobytes of
nicer 40 kilobytes of
code is what you're looking at for 40kb
code is what you're looking at for 40kb
for this whole
Sim let me commit up these
Sim let me commit up these
changes this is pretty
changes this is pretty
sweet I didn't want to do the human
mode
mode
uhoh that doesn't look good
still
huge I think it was, 1500 something
huge I think it was, 1500 something
before so I think we literally cut 300
before so I think we literally cut 300
lines off the implementation
that's pretty solid you don't often get
that's pretty solid you don't often get
to delete 300 lines and have it do the
to delete 300 lines and have it do the
same
thing what's happening
here this is two
rows eight columns
rows eight columns
right what was the implementation
before 0 through
S is there an eight
it's literally uh 0 through seven isn't
it's literally uh 0 through seven isn't
it yeah
really
255 well
255 was that a
sentinel as yeah that is a
sentinel e
what the
what the
hell an action
eight how the hell is there an Eight in
eight how the hell is there an Eight in
the map data
oh wait what
do
this all
right this works the same as before
right this works the same as before
right
here come the
agents
nice 1222 lines
that's a lot of
that's a lot of
changes for
[Music]
[Music]
nothing
nothing
cool o more
cool o more
RB our text Packer can pack Sprites and
fonts that's really useful
that's like really
useful Ray is like one of these
useful Ray is like one of these
completely cracked devs who should be
completely cracked devs who should be
making a lot more than he is making
making a lot more than he is making
though I have no idea how much he's
though I have no idea how much he's
making but given that he's selling these
making but given that he's selling these
things on hiio he should be making all
things on hiio he should be making all
of the dollars cuz he makes really
of the dollars cuz he makes really
really really good
software what the hell is it with my ads
software what the hell is it with my ads
like these freaking
ads Ray is so so nice you know they
ads Ray is so so nice you know they
bindings for basically every language as
bindings for basically every language as
well and it's the same API so you can
well and it's the same API so you can
literally use it with anything it's
literally use it with anything it's
native to see it's a single it's a
native to see it's a single it's a
single file uh header only
single file uh header only
Library it's like one. H file it's
awesome it's like the library that I'd
awesome it's like the library that I'd
wished existed forever
okay it's 7:05 I'm trying to think if
okay it's 7:05 I'm trying to think if
there's anything else I want to do today
there's anything else I want to do today
or if I just want to call
or if I just want to call
it
um well we could at least see if uh if
um well we could at least see if uh if
it's stable enough to run experiments on
it's stable enough to run experiments on
right it'd be nice to get a carb sweep
right it'd be nice to get a carb sweep
going maybe we can figure out what was
going maybe we can figure out what was
wrong with carbs
wrong with carbs
before let's try
that I got to go to dinner after
did I build this I did right
did I build this I did right
yeah yeah we've already rebuilt
yeah yeah we've already rebuilt
okay
um
e e
there was some weird bug where after one
there was some weird bug where after one
run it would like pit her out you see a
run it would like pit her out you see a
little bit currently rewriting a couple
little bit currently rewriting a couple
tools from C to Ray
tools from C to Ray
[ __ ] that's
cool I mean I love the idea of C but in
cool I mean I love the idea of C but in
practice I never end up jamming C
like the language itself is fine but
like the language itself is fine but
like I want more compile time checks
like I want more compile time checks
essentially like I want I want just like
essentially like I want I want just like
tools built around it I probably just
tools built around it I probably just
want Zig as what I want to be honest
want Zig as what I want to be honest
like I just want to be able to like
like I just want to be able to like
compile C slow in a way that checks for
compile C slow in a way that checks for
all the stupid things and gives me
all the stupid things and gives me
reasonable error messages and then
reasonable error messages and then
compile it fast and not do any of the
compile it fast and not do any of the
checks
checks
you
know oh I see what happened
that's why I end up never using
C I also just really value my Dev speed
right well I guess that's really the
right well I guess that's really the
main thing though is just
main thing though is just
like fixing bugs with shitty or no error
like fixing bugs with shitty or no error
messages is not
fun just want decent checks so I don't
fun just want decent checks so I don't
have shitty error messages
language itself is great
why is this invalid
pretty much necessitates
pretty much necessitates
debugger it doesn't even help though
debugger it doesn't even help though
like freaking seg
faults like I'll spend most of my time
faults like I'll spend most of my time
writing python in a debugger but the
writing python in a debugger but the
thing is it at least it doesn't want it
thing is it at least it doesn't want it
like the debugger is not actively trying
like the debugger is not actively trying
to kill you right
valid hyper
valid hyper
configuration why
um oh that's
obnoxious yeah that's really
obnoxious
e e
okay I think I fixed
carbs we can use carbs now carbs is
carbs we can use carbs now carbs is
pretty cool after all
pretty cool after all
right I just want to see if the largest
right I just want to see if the largest
batch size om is the machine
128k mini
128k mini
batch I like
batch I like
bread Bread's
bread Bread's
okay like Bagels do Bagels count as
okay like Bagels do Bagels count as
bread pasta is very good
I generally like
pasta meat is much better than
pasta meat is much better than
bread it's that time of the
evening there's a little Mexican
evening there's a little Mexican
restaurant that I go to down the street
restaurant that I go to down the street
pretty much every night
they do like a big tortilla soup with
they do like a big tortilla soup with
chicken avocado and cheese and stuff
chicken avocado and cheese and stuff
good quesadillas and maybe once a week
good quesadillas and maybe once a week
or
or
Margarita good time
I think Bagels count bagels are good and
I think Bagels count bagels are good and
I think with Zig build system you can do
I think with Zig build system you can do
arbitrary comp
arbitrary comp
time compile time code generation which
time compile time code generation which
is cool haven't tried any of that
I mean I don't like the thing I'm asking
I mean I don't like the thing I'm asking
for is
for is
like
like
look it should
be
like it should just be like you know
like it should just be like you know
whatever the build system the build
whatever the build system the build
system should be called zag so it should
system should be called zag so it should
just be like zag your file Das Das safe
just be like zag your file Das Das safe
whatever or like zag your file Das Das
whatever or like zag your file Das Das
fast that's it
done it's all I
done it's all I
want if you compile with dh- safe it
want if you compile with dh- safe it
uses a better it uses a memory allocator
uses a better it uses a memory allocator
that does bounds checking on freaking
that does bounds checking on freaking
everything it does uninitialized checks
everything it does uninitialized checks
on freaking everything right it does
on freaking everything right it does
like no pointer checks on
like no pointer checks on
everything
everything
right that'd be
good e
didn't I literally just fix
this e
okay so you can't have both carbs and
okay so you can't have both carbs and
non- carbs working at the same that's
fine cool well we have a sweep running
fine cool well we have a sweep running
uh this is pretty cool so I'll show this
uh this is pretty cool so I'll show this
off and then I think I'll call it for
off and then I think I'll call it for
tonight uh I usually have a long work
tonight uh I usually have a long work
day on Saturday I do solo Dev off
day on Saturday I do solo Dev off
stream and I like to get myself a lot of
stream and I like to get myself a lot of
rest before then then on Sunday I got to
rest before then then on Sunday I got to
go run 22 miles which is going to
go run 22 miles which is going to
suck so
suck so
yeah
yeah
um carbs
okay so this is pretty cool uh we now
okay so this is pretty cool uh we now
have the wanb sweeps
have the wanb sweeps
UI pretty much as If This Were Native
UI pretty much as If This Were Native
integrated with wand B except instead of
integrated with wand B except instead of
using their default basy and sweep
using their default basy and sweep
method it's using carbs so hyper
method it's using carbs so hyper
parameters should be intelligently
parameters should be intelligently
Chosen and they should tend to get much
Chosen and they should tend to get much
better over time so you should actually
better over time so you should actually
if your environment is amenable to
if your environment is amenable to
Improvement via better hyper parameters
Improvement via better hyper parameters
and long longer training if you're not
and long longer training if you're not
just solving it you should see this
just solving it you should see this
thing where like you get this cloud of
thing where like you get this cloud of
points that goes up over time and then
points that goes up over time and then
you just have to run lots of
jobs let me make sure it's set to a big
number yeah we're
number yeah we're
good all right
um I will let let me know how uh I just
um I will let let me know how uh I just
pushed everything so should have the
pushed everything so should have the
latest
latest
versions
um I will be back streaming on Monday if
um I will be back streaming on Monday if
you want to try to get stuff working
you want to try to get stuff working
before then and have any questions I'm
before then and have any questions I'm
mostly going to be deving tomorrow but
mostly going to be deving tomorrow but
I'll probably see them if you just post
I'll probably see them if you just post
him in uh the Discord the Discord is
him in uh the Discord the Discord is
pretty much everywhere you look for it
pretty much everywhere you look for it
discord.gg
puffer it's pretty nice we've got
puffer it's pretty nice we've got
uh says 44
uh says 44
plus yeah 370 people in it already which
plus yeah 370 people in it already which
is
nice
um
um
yeah that's about
yeah that's about
all looks like this very well could hit
all looks like this very well could hit
700 over the weekend which would be
700 over the weekend which would be
amazing cool see I can get it running
amazing cool see I can get it running
tonight or in the morning yeah whatever
tonight or in the morning yeah whatever
you want to do and um I mean there's a
you want to do and um I mean there's a
lot of work that can be done on and
lot of work that can be done on and
around it
around it
so if you have specific ideas for stuff
so if you have specific ideas for stuff
that you want to do on it you definitely
that you want to do on it you definitely
let me know so that uh we don't do the
let me know so that uh we don't do the
exact same thing since I Dev pretty much
exact same thing since I Dev pretty much
all day Saturday as well so just you
all day Saturday as well so just you
know message me or whatever I don't
know message me or whatever I don't
really do any Dev on Sunday I kind of
really do any Dev on Sunday I kind of
just run until I'm unable to think and
just run until I'm unable to think and
then I like pass out it's pretty much
then I like pass out it's pretty much
what my Sunday looks like and then I go
what my Sunday looks like and then I go
back to work on
Monday this is so
Monday this is so
awesome this is a great
awesome this is a great
growth and I've really just been doing
growth and I've really just been doing
Sims for the last month as well
oh I need to get
um generate a little gift real
quick e
just making a gift for Twitter and then
just making a gift for Twitter and then
I'm signing
off the promo helps a ton it really
off the promo helps a ton it really
does like basically none of what I'm
does like basically none of what I'm
doing would be worth building if uh
doing would be worth building if uh
nobody were seeing
it
e
e
e e
why I post random stuff because
why I post random stuff because
occasionally it just blows up even the
occasionally it just blows up even the
stupidest
thing very nice that's good progress for
thing very nice that's good progress for
the
week all right good night tree I'm gonna
week all right good night tree I'm gonna
go grab dinner and pass out
go grab dinner and pass out
um thanks for stopping by and uh see you
