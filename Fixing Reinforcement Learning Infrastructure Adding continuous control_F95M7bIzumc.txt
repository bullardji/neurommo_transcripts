Kind: captions
Language: en
hello I think this is
hello I think this is
live second day using R stream been
live second day using R stream been
going pretty well so
going pretty well so
far let me make sure everything is set
far let me make sure everything is set
up
correctly okay yep this works that's
correctly okay yep this works that's
nice and then we will check YouTube as
nice and then we will check YouTube as
well
and we're
and we're
live
live
10:54 so this should be
10:54 so this should be
live uh says
streaming cool it
streaming cool it
works so we're going to be doing a
works so we're going to be doing a
couple of things
today first
today first
thing is uh I was meant to have a call
thing is uh I was meant to have a call
with the wand be guys like last week
with the wand be guys like last week
early last week so that they could look
early last week so that they could look
at carbs and maybe integrating it
at carbs and maybe integrating it
natively which would be god tier
natively which would be god tier
for reinforcement learning for sure but
for reinforcement learning for sure but
also for like llm people and stuff would
also for like llm people and stuff would
be an awesome feature so thanks to imbw
be an awesome feature so thanks to imbw
AI for open sourcing that and I've been
AI for open sourcing that and I've been
using it quite a
using it quite a
bit hold on let's get ourselves
bit hold on let's get ourselves
uh some graphs up to look at because I
uh some graphs up to look at because I
did
did
run some sweeps I guess these aren't
run some sweeps I guess these aren't
going to be the best demo of carbs
going to be the best demo of carbs
capabilities cuz snake is a pretty
capabilities cuz snake is a pretty
consistent uh
consistent uh
environment
but yeah right here
but yeah right here
so we have this 108 environment
sweep filter
sweep filter
out the best runs but just to show you
out the best runs but just to show you
if we look at all the
if we look at all the
runs we have ton of different
runs we have ton of different
environments in carbs you can see it
environments in carbs you can see it
goes up over time found us some nice
goes up over time found us some nice
settings for this
settings for this
environment and then what I did is I
environment and then what I did is I
took the settings I ran it for 10
took the settings I ran it for 10
billion steps and I released that model
billion steps and I released that model
speaking which I should probably tweet
speaking which I should probably tweet
that model but I've kind of got enough
that model but I've kind of got enough
stuff already floating around on Twitter
stuff already floating around on Twitter
today uh these graphs don't work here
today uh these graphs don't work here
because it's not a native integration
because it's not a native integration
it's kind of a hack to make this work so
it's kind of a hack to make this work so
I have to actually overwrite these
I have to actually overwrite these
parameters um
parameters um
so what we're going to do right now is
so what we're going to do right now is
we're going to take a look at my
we're going to take a look at my
integration I'm going to come up with
integration I'm going to come up with
some thoughts I'm going to talk through
some thoughts I'm going to talk through
them just for myself here and for
them just for myself here and for
anybody interested and then I'm going to
anybody interested and then I'm going to
just write up a real quick summary I'll
just write up a real quick summary I'll
also link them this stream but I'm going
also link them this stream but I'm going
to write up a real quick summary for the
to write up a real quick summary for the
w b guys since we had some scheduling
w b guys since we had some scheduling
issues hello fruit punch Samurai on
issues hello fruit punch Samurai on
YouTube cool to see that the chat's
YouTube cool to see that the chat's
working thanks for that I wasn't quite
working thanks for that I wasn't quite
sure it was anyways though what I'm
sure it was anyways though what I'm
going to do is I'm going to uh go
going to do is I'm going to uh go
through this setup here I'm going to
through this setup here I'm going to
look at the code a little bit and then
look at the code a little bit and then
I'm going to put all that together for
I'm going to put all that together for
the WB guys that should only take me I
the WB guys that should only take me I
don't know 20 30 minutes uh and then
don't know 20 30 minutes uh and then
after that I'm going to start looking at
after that I'm going to start looking at
continuous control because that whole
continuous control because that whole
ecosystem is exceptionally cursed and I
ecosystem is exceptionally cursed and I
haven't really prioritized it for puffer
haven't really prioritized it for puffer
yet uh but it's a really big missing
yet uh but it's a really big missing
feature and it's probably not even that
feature and it's probably not even that
hard to add so we're going to see if we
hard to add so we're going to see if we
can get a continuous control environment
can get a continuous control environment
working with puffer and if we can I'll
working with puffer and if we can I'll
decide whether I want to add like
decide whether I want to add like
bindings for more existing Ms or if I
bindings for more existing Ms or if I
want to just like start making some cool
want to just like start making some cool
control Ms we'll see where we go from
control Ms we'll see where we go from
there but I definitely want to get
there but I definitely want to get
puffer working with continuous control
puffer working with continuous control
and then see if any of the Cool Tech
and then see if any of the Cool Tech
I've come up with lately would also be
I've come up with lately would also be
as useful in continuous control as it is
as useful in continuous control as it is
in the rest of reinforcement
in the rest of reinforcement
learning so let's
learning so let's
start H we're in the wrong container
start H we're in the wrong container
here let's get out of
this attempted to remove this
this attempted to remove this
thing did post the uh the you know rage
thing did post the uh the you know rage
bait whatever cringe article on Jack's
bait whatever cringe article on Jack's
being a piece of this morning on
being a piece of this morning on
Twitter um we'll see how people respond
Twitter um we'll see how people respond
to that but I did not have a good time
to that but I did not have a good time
with
Jack let's see I need really need a chat
Jack let's see I need really need a chat
overlay so that people because I have
overlay so that people because I have
this streaming to X and YouTube
this streaming to X and YouTube
simultaneously but from YouTube I
simultaneously but from YouTube I
reached out to you via commenting under
reached out to you via commenting under
your YouTube vid last month also part of
your YouTube vid last month also part of
the neural MMO
the neural MMO
Discord uh
Discord uh
which comment was this let me go take a
which comment was this let me go take a
quick
quick
look oops neural
look oops neural
MMO is my defense not indexed here yeah
MMO is my defense not indexed here yeah
here it
here it
is the same I guess it would be the same
username do I see
did I miss a communication
here not seeing Oh here it
is oh yeah so the way that I generally
is oh yeah so the way that I generally
handle this stuff um cuz I get a lot of
handle this stuff um cuz I get a lot of
requests for like general mentorship I'm
requests for like general mentorship I'm
not going to like one-on-one tutor
not going to like one-on-one tutor
somebody but what I will do is I will
somebody but what I will do is I will
help you out along the same way that I
help you out along the same way that I
learn stuff myself which is you work on
learn stuff myself which is you work on
projects either your own or you know
projects either your own or you know
existing open- Source stuff with puffer
existing open- Source stuff with puffer
or with any of these other things um and
or with any of these other things um and
you know if you do work and you actually
you know if you do work and you actually
make progress on stuff then yeah of
make progress on stuff then yeah of
course I'd happy be happy to give you a
course I'd happy be happy to give you a
a bunch of free pointers uh literally
a bunch of free pointers uh literally
the best way to you know get some input
the best way to you know get some input
and get some advice in the right
and get some advice in the right
direction is to just start doing cool
direction is to just start doing cool
stuff though um of the people that
stuff though um of the people that
message me like this 90% will like post
message me like this 90% will like post
something like this I'll tell them like
something like this I'll tell them like
here try doing this and this and then
here try doing this and this and then
I'll never hear from them again so
I'll never hear from them again so
literally all you have to do is like
literally all you have to do is like
start working on some stuff uh there a
start working on some stuff uh there a
bunch of people on Twitter doing like
bunch of people on Twitter doing like
relatively simple RL Plus game type
relatively simple RL Plus game type
stuff you can look at the snake en code
stuff you can look at the snake en code
that I posted on uh on puffer lib lately
that I posted on uh on puffer lib lately
you can try some stuff with that and
you can try some stuff with that and
then yeah keep me posted on how that's
then yeah keep me posted on how that's
going and if you need any pointers in
going and if you need any pointers in
the right direction that's what I'd tell
the right direction that's what I'd tell
you with
that I started working on AI stuff when
that I started working on AI stuff when
I was 16 when there were far fewer
I was 16 when there were far fewer
resources and way worse tools for doing
resources and way worse tools for doing
stuff like this and uh it was mostly
stuff like this and uh it was mostly
just what I just said you know working
just what I just said you know working
on stuff yourself and learning that way
on stuff yourself and learning that way
with maybe like 10% formal
with maybe like 10% formal
material which these days is all free
material which these days is all free
online
okay let's go
check uh let's go
check uh let's go
check
check
carbs this is the wrong docker
yeah Pokemon uh poker RL is an awesome
yeah Pokemon uh poker RL is an awesome
project to contribute to bet and Link
project to contribute to bet and Link
key two of our top contributors there uh
key two of our top contributors there uh
came in with next to no programming
came in with next to no programming
experience and no reinforcement learning
experience and no reinforcement learning
or AI experience and they're doing an
or AI experience and they're doing an
amazing job and they've just worked
amazing job and they've just worked
really hard at it right they just spent
really hard at it right they just spent
a lot a lot of time learning like the
a lot a lot of time learning like the
thing you have to realize is that when
thing you have to realize is that when
you're new stuff is just going to take
you're new stuff is just going to take
you 10 times longer than it would take
you 10 times longer than it would take
anybody who knows what they're doing and
anybody who knows what they're doing and
there's not really anything I can do to
there's not really anything I can do to
make it not take 10 times as long like
make it not take 10 times as long like
some of the lessons you just have to
some of the lessons you just have to
learn for yourself and put in the time
learn for yourself and put in the time
and the effort um but hey they're doing
and the effort um but hey they're doing
amazing now and Link's even started
amazing now and Link's even started
messing with like Network architectures
messing with like Network architectures
and stuff which is awesome amount of
progress I do provide uh hardware and
progress I do provide uh hardware and
stuff by the way for a couple projects
stuff by the way for a couple projects
like poker RL but I provide the hardware
like poker RL but I provide the hardware
to like people who are consistently
to like people who are consistently
doing stuff on the projects and are like
doing stuff on the projects and are like
actually showing consistent contribution
actually showing consistent contribution
that's how you get added to that list
that's how you get added to that list
and that's not like me being you know
and that's not like me being you know
that that's just like me having limited
that that's just like me having limited
uh limited resources I'm like a single
uh limited resources I'm like a single
individual with a very small
cluster all right let's see I'm going to
cluster all right let's see I'm going to
start on the carbs thing and I'm going
start on the carbs thing and I'm going
to kind of do this segment as a little
to kind of do this segment as a little
bit of a bit I'm going to try to talk
bit of a bit I'm going to try to talk
through this in one take and not look at
through this in one take and not look at
the chat for a few minutes just because
the chat for a few minutes just because
what I want to do is I want to
what I want to do is I want to
put together this dock on carbs um and I
put together this dock on carbs um and I
want to also link the WB team this
want to also link the WB team this
section of the video so they can just
section of the video so they can just
sort of see me talking through stuff
sort of see me talking through stuff
with carbs and um how this could be
with carbs and um how this could be
integrated
so I have here
why is this
not what in the
heck oh rout cash hold on let me fix
heck oh rout cash hold on let me fix
this
first Ro
first Ro
cash
cash
Vim fix my Vim real
Vim fix my Vim real
quick I don't know why it
quick I don't know why it
broke but I definitely would like to
broke but I definitely would like to
have super Maven for today
oh jeez is this the the system that's
oh jeez is this the the system that's
like really hard to to copy stuff
from hold
from hold
on no it
on no it
works
works
uh log in
okay so this now
works so uh whatever this time stamp is
works so uh whatever this time stamp is
this will be where this
starts so IMB released carbs carbs is
starts so IMB released carbs carbs is
this awesome hyper praning tuning
this awesome hyper praning tuning
algorithm that is as far as I understand
algorithm that is as far as I understand
uh a substantial Improvement on basian
uh a substantial Improvement on basian
optimization that introduces the concept
optimization that introduces the concept
of cost awareness in which it takes into
of cost awareness in which it takes into
account the wall clock runtime or any
account the wall clock runtime or any
other cost but usually wall clock time
other cost but usually wall clock time
that is taken for the experiment to
that is taken for the experiment to
reach a certain performance threshold
reach a certain performance threshold
and it explores a parito front of
and it explores a parito front of
Optimal Solutions so it'll explore many
Optimal Solutions so it'll explore many
different Pathways of potentially
different Pathways of potentially
optimal hyper parameters um and it has a
optimal hyper parameters um and it has a
bunch of additional Nifty tricks as well
bunch of additional Nifty tricks as well
that just generally make it very stable
that just generally make it very stable
and importantly it can also scale to
and importantly it can also scale to
longer and longer runs so as you're
longer and longer runs so as you're
optimizing it can run short runs while
optimizing it can run short runs while
it doesn't know what's going on and it
it doesn't know what's going on and it
can run much longer experiments over
can run much longer experiments over
time and if you look at the imbw blog
time and if you look at the imbw blog
post they have some very cool posts on
post they have some very cool posts on
how they use this to scale up uh
how they use this to scale up uh
relatively large language models and uh
relatively large language models and uh
how they are able to find Optimal
how they are able to find Optimal
hyperparameters by doing longer and
hyperparameters by doing longer and
longer runs over time entirely
longer runs over time entirely
automatically so what I did is right
automatically so what I did is right
after it released I tried to just hack
after it released I tried to just hack
some way of getting it to work with WP
some way of getting it to work with WP
um if we look at the carbs config here
um if we look at the carbs config here
I'm going to use snake as an
example using snake as an example here
example using snake as an example here
so you see I have a config section just
so you see I have a config section just
in yaml very standard and then I have
in yaml very standard and then I have
this sweep configuration this is just a
this sweep configuration this is just a
WB sweep in the syntax required by wandb
WB sweep in the syntax required by wandb
um it's a little I'm going to give you a
um it's a little I'm going to give you a
couple additional things along the way
couple additional things along the way
that are just pain points with w b
that are just pain points with w b
sweeps in addition to the carbs
sweeps in addition to the carbs
integration so that there are a couple
integration so that there are a couple
different ways that this is helpful um
different ways that this is helpful um
but this is the standard sweeps config
but this is the standard sweeps config
the first thing that's a little weird is
the first thing that's a little weird is
that you have to Nest this parameters
that you have to Nest this parameters
thing you can't just do like
thing you can't just do like
parameters uh you know n Vision you have
parameters uh you know n Vision you have
this like extra layer every time so
this like extra layer every time so
that's kind of awkward um but that aside
that's kind of awkward um but that aside
we go
we go
into the carbs
sweeps uh so this is my definition for
sweeps uh so this is my definition for
how I'm using carbs with WB let me give
how I'm using carbs with WB let me give
you a quick comparison if I scroll down
you a quick comparison if I scroll down
here because I have a similar code that
here because I have a similar code that
is just for WB sweeps so this is the
is just for WB sweeps so this is the
code for WB sweeps we initialize WB this
code for WB sweeps we initialize WB this
ar. sweep here gives you the the thing
ar. sweep here gives you the the thing
on the left side of the screen I'm going
on the left side of the screen I'm going
to have to make sure that I uh I don't
to have to make sure that I uh I don't
cover this code window with my my camera
cover this code window with my my camera
let's do
this we initialize one B here
this we initialize one B here
inside of the function I put this try
inside of the function I put this try
accept so that we get a trace back and
accept so that we get a trace back and
then it doesn't hard fail um print out
then it doesn't hard fail um print out
the config and then here this is where I
the config and then here this is where I
update the training
update the training
configuration uh of the experiment with
configuration uh of the experiment with
wb's config so train takes args args
wb's config so train takes args args
gets updated with WB config train fairly
gets updated with WB config train fairly
simple and then we run the sweep here
simple and then we run the sweep here
second general paino for wand B sweeps
second general paino for wand B sweeps
is this being its own
is this being its own
routine um it's very odd that I have to
routine um it's very odd that I have to
register main as a call back like this
register main as a call back like this
right that this has to run in a sub
right that this has to run in a sub
process this will eat a lot of your
process this will eat a lot of your
debugging information and generally will
debugging information and generally will
add startup time and make it a lot
add startup time and make it a lot
harder to do stuff inside of sweeps so
harder to do stuff inside of sweeps so
generally I will have to run stuff
generally I will have to run stuff
either with just wanb or even without WB
either with just wanb or even without WB
to debug code and then only enable
to debug code and then only enable
sweeps when I'm sure everything is set
sweeps when I'm sure everything is set
otherwise I just get a bunch of error
otherwise I just get a bunch of error
spam the thing that would be very nice
spam the thing that would be very nice
here would be the ability to say instead
here would be the ability to say instead
of writing this main function and
of writing this main function and
passing it to WAN B right what if I
passing it to WAN B right what if I
could just do
this right and I could just run the
this right and I could just run the
experiment like
experiment like
this and it works here or maybe you know
this and it works here or maybe you know
I have to pass Reet maybe you have to
I have to pass Reet maybe you have to
pass the sweep ID whatever but then this
pass the sweep ID whatever but then this
could all run on the same process and
could all run on the same process and
what would be even nicer with this is
what would be even nicer with this is
let's say I did want to do uh processing
let's say I did want to do uh processing
multi-processing I could write my own
multi-processing I could write my own
multi-process Loop here and then do
multi-process Loop here and then do
experiments in parallel way way easier
experiments in parallel way way easier
without having you know some opaque uh
without having you know some opaque uh
some opaque API that takes a call back
some opaque API that takes a call back
and is going to manage processes itself
and is going to manage processes itself
but I think for most users just having
but I think for most users just having
this sort of a thing would be nice in
this sort of a thing would be nice in
general um but this works fairly well
general um but this works fairly well
overall with those two minor uh minor
overall with those two minor uh minor
quibbles aside now for carbs
quibbles aside now for carbs
integration you can see all that
integration you can see all that
commented code by the way is for is for
commented code by the way is for is for
this carbs uh the carbs integration code
this carbs uh the carbs integration code
right there is I see the comment let me
right there is I see the comment let me
finish this bit for the team um this was
finish this bit for the team um this was
all debug code right here because I
all debug code right here because I
couldn't get it working properly
couldn't get it working properly
specifically because it was very hard to
specifically because it was very hard to
debug through multiprocess
debug through multiprocess
code so this is the carbs configuration
code so this is the carbs configuration
here this is the uh this method of
here this is the uh this method of
sweeps here now this a lot of this code
sweeps here now this a lot of this code
is copied from carbs from their example
is copied from carbs from their example
code all these Imports for
code all these Imports for
instance um but you can see that right
instance um but you can see that right
here I'm grabbing all of the different
here I'm grabbing all of the different
configuration parameters that I need
configuration parameters that I need
from this config on the left
from this config on the left
here I'm importing all the carb stuff
here I'm importing all the carb stuff
and I have this function called carbs
and I have this function called carbs
Pam and what this attempts to do is to
Pam and what this attempts to do is to
convert between the want to be syntax on
convert between the want to be syntax on
the left which requires distribution Min
the left which requires distribution Min
and Max or you know values whatever it's
and Max or you know values whatever it's
going to be and the carb syntax which is
going to be and the carb syntax which is
slightly different and provides a few
slightly different and provides a few
additional
additional
options so you can see they have log
options so you can see they have log
space they have linear space they also
space they have linear space they also
have logic space this is a very
have logic space this is a very
important one for params between zero
important one for params between zero
and
and
one and then I return this as a carbs
one and then I return this as a carbs
param it get it gets a Min a Max an
param it get it gets a Min a Max an
important parameter which is is integer
important parameter which is is integer
whether to give you an integer or not
whether to give you an integer or not
and also a rounding factor which is very
and also a rounding factor which is very
convenient say that you want your batch
convenient say that you want your batch
size to be a multiple of 32 or something
size to be a multiple of 32 or something
like that I would additionally like an
like that I would additionally like an
exponential rounding Factor if possible
exponential rounding Factor if possible
so that you could round to be a power of
so that you could round to be a power of
two but you know I can also do that
two but you know I can also do that
manually if needed and then it also you
manually if needed and then it also you
get a search center here this tells you
get a search center here this tells you
where to start the search from very
where to start the search from very
important uh so you can kind of seat it
important uh so you can kind of seat it
with something that's generally in the
with something that's generally in the
right place and then it will search out
right place and then it will search out
from there as is
from there as is
useful um based on the results of sweeps
useful um based on the results of sweeps
so here's the pram space that has all
so here's the pram space that has all
the different keys in here you can see
the different keys in here you can see
I'm specifying search centers manually
I'm specifying search centers manually
because you're not allowed to do that on
because you're not allowed to do that on
the left in the WB config as well as is
the left in the WB config as well as is
integer and other such
integer and other such
properties I make my carbs prams I say
properties I make my carbs prams I say
that up is better positive is better uh
that up is better positive is better uh
I do the w b logging myself so I don't
I do the w b logging myself so I don't
use theirs and uh cuz they're not
use theirs and uh cuz they're not
configured for sweet
configured for sweet
and then this is uh to do with whether
and then this is uh to do with whether
you want to run the same thing multiple
you want to run the same thing multiple
times all their code is open source and
times all their code is open source and
fairly
fairly
succinct here's the main function that's
succinct here's the main function that's
going to be in the Callback I grab the
going to be in the Callback I grab the
experiment name and initialize WBY I
experiment name and initialize WBY I
call carbs. suggest in order to get the
call carbs. suggest in order to get the
suggested hyper prams from carbs I make
suggested hyper prams from carbs I make
a copy of it for later and then what I'm
a copy of it for later and then what I'm
doing here is I am overwriting wb's
doing here is I am overwriting wb's
configuration with
configuration with
uh the carbs suggested one now this does
uh the carbs suggested one now this does
not actually show up correctly in the
not actually show up correctly in the
UI as far as I can tell like this does
UI as far as I can tell like this does
not actually reflect the changes that
not actually reflect the changes that
I've made here so this graph doesn't
I've made here so this graph doesn't
become particularly useful but you still
become particularly useful but you still
get everything in the sweep UI and you
get everything in the sweep UI and you
still get this you know reward over time
still get this you know reward over time
which is all
correct so this is where I'm updating
correct so this is where I'm updating
all the parameters and then I call my
all the parameters and then I call my
train function
train function
and then finally this is my workaround
and then finally this is my workaround
since I can't get the actual correct
since I can't get the actual correct
parameters to show up correctly I uh I
parameters to show up correctly I uh I
put this hypers do text and I just spit
put this hypers do text and I just spit
everything out into
everything out into
there so you know this does work I don't
there so you know this does work I don't
get all the nice charts that I would
get all the nice charts that I would
want in WB sweeps but the idea would be
want in WB sweeps but the idea would be
that if we had a native integration we
that if we had a native integration we
would be able to have uh either
would be able to have uh either
conversion internally to carbs spaces or
conversion internally to carbs spaces or
just change the carbs code to accept WB
just change the carbs code to accept WB
spaces again it's pretty short um add in
spaces again it's pretty short um add in
things like the rounding factor is
things like the rounding factor is
integer you know the different
integer you know the different
parameters that con carbs can take as
parameters that con carbs can take as
well as the search center parameter
well as the search center parameter
that's very important and then you could
that's very important and then you could
just specify method equals carbs right
just specify method equals carbs right
here and it would do a carb sweep for
here and it would do a carb sweep for
you and you'd have to specify a few
you and you'd have to specify a few
additional things right like you'd have
additional things right like you'd have
uh an
uh an
additional metric or parameter or
additional metric or parameter or
whatever that is going to be the cost
whatever that is going to be the cost
cost is very
cost is very
important because if we do update where
important because if we do update where
is
is
it let me find the update thing
it let me find the update thing
here yes right here
here yes right here
so uh you need to be able to get a
so uh you need to be able to get a
parameter back from your
parameter back from your
experiment it's almost always going to
experiment it's almost always going to
just be wall clock time and that's going
just be wall clock time and that's going
to be your cost and then the actual uh
to be your cost and then the actual uh
metric that you're maximizing which is
metric that you're maximizing which is
the same as the one that is here
the same as the one that is here
maximize environment reward uh
maximize environment reward uh
potentially now I did speak with the
potentially now I did speak with the
developers of this and potentially we
developers of this and potentially we
would want to take like say a window
would want to take like say a window
average over a certain number of steps
average over a certain number of steps
and say what was the best reward
and say what was the best reward
obtained ever during the course of the
obtained ever during the course of the
Run since RL can be rather unstable
Run since RL can be rather unstable
probably not as useful in language
probably not as useful in language
modeling though runs can be unstable
modeling though runs can be unstable
there as well um but this should hook in
there as well um but this should hook in
already quite
already quite
nicely so those are pretty much all my
nicely so those are pretty much all my
thoughts on carbs I'm going to draft
thoughts on carbs I'm going to draft
that document now and since I'm ending
that document now and since I'm ending
this little bit uh for this comment here
this little bit uh for this comment here
what exactly is the use case of carb
what exactly is the use case of carb
sweeps uh so carbs is a different
sweeps uh so carbs is a different
hyperparameter tuning algorithm and this
hyperparameter tuning algorithm and this
is my integration with wand B sweeps for
is my integration with wand B sweeps for
the carbs hyperparameter tuning
the carbs hyperparameter tuning
algorithm as compared to the native base
algorithm as compared to the native base
one
one
here so let's just go before I forget
here so let's just go before I forget
all that stuff that I just said let's
all that stuff that I just said let's
just make a Google doc and let me real
just make a Google doc and let me real
quick put some of these thoughts down
down one be sweeps feedback plus carbs
integration so here we do
um let's go find the uh the Youtube link
um let's go find the uh the Youtube link
actually so I can get them a timestamp
oh I'm going to have to like listen to
oh I'm going to have to like listen to
this aren't
this aren't
I okay I'll figure out the time stamp
afterwards unable to
afterwards unable to
understand is my audio bad or am I
understand is my audio bad or am I
saying complicated things what do you
saying complicated things what do you
mean by
that ah yes um so carbs is a hyper
that ah yes um so carbs is a hyper
parameter tuning method that is that
parameter tuning method that is that
we're using for reinforcement learning
we're using for reinforcement learning
it is a huge huge upgrade to RL what I'm
it is a huge huge upgrade to RL what I'm
doing right now is I am I have a basic
doing right now is I am I have a basic
integration of carbs hyperparameter
integration of carbs hyperparameter
sweeps with puffer Leb that we can use
sweeps with puffer Leb that we can use
to run like a 100 experiments with
to run like a 100 experiments with
different hyper prams that's way better
different hyper prams that's way better
than anything else uh it's a little bit
than anything else uh it's a little bit
Jank CU it's not natively supported by
Jank CU it's not natively supported by
wandb so I'm taking just a couple of
wandb so I'm taking just a couple of
minutes now to write up some comments
minutes now to write up some comments
for the wandb team they've asked to do
for the wandb team they've asked to do
so on how they could generally integrate
so on how they could generally integrate
this natively which would be a huge
this natively which would be a huge
Improvement to reinforcement learning
Improvement to reinforcement learning
and as soon as I finish that I'm going
and as soon as I finish that I'm going
to look at puffer lib and I'm going to
to look at puffer lib and I'm going to
see if we can make continuous control
see if we can make continuous control
environments work with puffer that's
environments work with puffer that's
been a very requested feature and uh
been a very requested feature and uh
something I haven't played with too much
something I haven't played with too much
but I think shouldn't be too hard to get
working so let me real quick
working so let me real quick
uh this is a a pretty useful piece of
uh this is a a pretty useful piece of
software for RL right now
software for RL right now
so uh General
improvements
improvements
uh you have to Nest
uh you have to Nest
parameters inside of
configs is clunky
okay let's give
okay let's give
them
this as an
example and then the second thing here
example and then the second thing here
whoops
second thing
second thing
is uh there's one other thing uh
is uh there's one other thing uh
yeah the sweeps
yeah the sweeps
API
API
only accepts a call back to your
only accepts a call back to your
experiment main
function this means that wandb manages
function this means that wandb manages
multiprocessing
multiprocessing
and eat error
messages able to write
this this has cost me several hours of
this this has cost me several hours of
debugging it would be nice to be able to
debugging it would be nice to be able to
write
write
this write our
this write our
own Loop
net
see thread let's give them this
see thread let's give them this
example since we had that right
here sweep
oops
oops okay just get them this clean right
here
here
and if
I well I don't really need to annotate
I well I don't really need to annotate
it do I I think I can just post
it okay this is our these are our
it okay this is our these are our
general feedback these are like the two
general feedback these are like the two
things that have just annoyed me to no
things that have just annoyed me to no
end with uh Wan B sweeps everything else
end with uh Wan B sweeps everything else
is pretty good and now we do
is pretty good and now we do
carbs uh
carbs uh
[Music]
integration View
hyperparameter
tuning RL looking for autonomous
tuning RL looking for autonomous
vehicle with RL can this be
vehicle with RL can this be
HT RL for it depends what you mean by RL
HT RL for it depends what you mean by RL
for autonomous vehicle um they're if
for autonomous vehicle um they're if
you're looking for like online
you're looking for like online
reinforcement learning end to end for
reinforcement learning end to end for
self-driving cars that does not exist
self-driving cars that does not exist
it's mostly like imitation learning
it's mostly like imitation learning
maybe offline learning uh
this I know Eugene is he's on Twitter
this I know Eugene is he's on Twitter
where's his
Twitter doesn't have his Twitter on here
Twitter doesn't have his Twitter on here
oh here it is follow this guy on Twitter
oh here it is follow this guy on Twitter
um he
um he
does multi-agent self-driving uh nocturn
does multi-agent self-driving uh nocturn
nocturn multi-agent simulator I recently
nocturn multi-agent simulator I recently
added a binding for nocturn to puffer
added a binding for nocturn to puffer
lib so yeah that's something that we're
lib so yeah that's something that we're
looking
at he post a lot of good stuff in this
at he post a lot of good stuff in this
space
space
but generally um I would look at like
but generally um I would look at like
the puffer
the puffer
lib but the thing is you're not like
lib but the thing is you're not like
there's no way to just do RL on AV right
there's no way to just do RL on AV right
you need like some sort of simulator to
you need like some sort of simulator to
have that work if you want to do like
have that work if you want to do like
research on that then you could either
research on that then you could either
use an existing big in CL funky
use an existing big in CL funky
simulator or you could look at writing a
simulator or you could look at writing a
simulator which puffer lib helps with a
simulator which puffer lib helps with a
lot we have really good fast simulation
lot we have really good fast simulation
techniques and uh and doing something
techniques and uh and doing something
there that's actually something I've
there that's actually something I've
been considering doing as well if you uh
been considering doing as well if you uh
are sticking around and looking for that
are sticking around and looking for that
type of a thing because like AV is one
type of a thing because like AV is one
of those applications that gets people a
of those applications that gets people a
lot gets people very
interested let me where' my Google doc
interested let me where' my Google doc
go
go
here we
go see a fruit
punch yeah small scale is good um try
punch yeah small scale is good um try
try some stuff with puffer puffer is
try some stuff with puffer puffer is
pretty fast you can get really far like
pretty fast you can get really far like
try my snake environment out it's pretty
try my snake environment out it's pretty
nice you can run like 100,000 steps per
nice you can run like 100,000 steps per
second local easily like on CPU even so
second local easily like on CPU even so
yeah go try out the multi snake
yeah go try out the multi snake
environment stick around in chat that's
environment stick around in chat that's
generally what uh that's generally how
generally what uh that's generally how
you make
progress in two want to
be there wall
be there wall
clock of
clock of
experiments addition to
with
with
[Laughter]
SB puffer is you can technically use
SB puffer is you can technically use
puffer instead of C datable baselines
puffer instead of C datable baselines
but really puffer is not an algorithms
but really puffer is not an algorithms
uh repository our main script that we
uh repository our main script that we
use for everything uses clean RL it's a
use for everything uses clean RL it's a
souped up version of clean RL with extra
souped up version of clean RL with extra
logging and stuff um um stable baselines
logging and stuff um um stable baselines
is really high level and abstracted and
is really high level and abstracted and
it's hard to get your hands dirty with
it's hard to get your hands dirty with
it um puffer lib lets you get your hands
it um puffer lib lets you get your hands
dirty with everything but in the process
dirty with everything but in the process
of doing that we make everything really
of doing that we make everything really
really simple so like instead of 10,000
really simple so like instead of 10,000
lines of Highly abstracted stuff that
lines of Highly abstracted stuff that
you hope you never have to touch it's
you hope you never have to touch it's
1,000 lines of as simple as possible
1,000 lines of as simple as possible
stuff that you're expected to touch when
stuff that you're expected to touch when
you need
to that's the philosophy difference
we in let's get the
repo
repo
[Music]
[Music]
puffer yeah hit me up there's a puffer
puffer yeah hit me up there's a puffer
Discord as well discord.gg
Discord as well discord.gg
puffer I got to get a chat plugin so
puffer I got to get a chat plugin so
that these messages show up on my my
that these messages show up on my my
screen here
and make sure to feed the pup for a
star let's
star let's
see he likes Stars uh
can you please share any link for it
can you please share any link for it
where I can start from what
where I can start from what
is what is it like if you're a beginner
is what is it like if you're a beginner
in AV that's a really hard place to
in AV that's a really hard place to
start
start
um like that's a really really hard
um like that's a really really hard
place to start
hold
hold
on hey thank
on hey thank
you um I would suggest just like if
you um I would suggest just like if
you're new to RL start with some fast
you're new to RL start with some fast
environments play around with some stuff
environments play around with some stuff
uh this snake en I made is a really nice
uh this snake en I made is a really nice
place to start cuz it's a really simple
place to start cuz it's a really simple
and really high performance environment
and really high performance environment
and like if you wanted to have fast uh
and like if you wanted to have fast uh
AV
AV
Sim yeah so RL in general I have some
Sim yeah so RL in general I have some
resources in the puffer uh the puffer
resources in the puffer uh the puffer
lib Discord um puffer lib is a pretty
lib Discord um puffer lib is a pretty
darn good place to start here or clean
darn good place to start here or clean
RL and we just have a lot of
RL and we just have a lot of
environments that you can play around
environments that you can play around
with like there this is docs we' we've
with like there this is docs we' we've
got docs here puffi GitHub iio we've got
got docs here puffi GitHub iio we've got
some tutorials on there there's some
some tutorials on there there's some
stuff in the Discord um this is not
stuff in the Discord um this is not
aimed at beginners but it is aimed to be
aimed at beginners but it is aimed to be
as simple as possible which ends up
as simple as possible which ends up
making it really nice for beginners
making it really nice for beginners
we've got all these different
we've got all these different
environments they don't all they're not
environments they don't all they're not
all fully supported there's a list of
all fully supported there's a list of
them on the website but like you could
them on the website but like you could
very easily play around with uh the
very easily play around with uh the
snake environment that I have here and
snake environment that I have here and
very uh very quickly get some uh some
very uh very quickly get some uh some
cool
results uh yeah they're docks I mean
look here I have this might not be fully
look here I have this might not be fully
set up yet let's see if this
works I might have to download RB
cannot use okay I have to I have to add
cannot use okay I have to I have to add
hold on let me add my w
hold on let me add my w
b I got to grab my
b I got to grab my
WB uh API
key might have to
let me actually fix one thing right now
let me actually fix one thing right now
I've been meaning to fix this and I'll
I've been meaning to fix this and I'll
get you this snake demo since you're
get you this snake demo since you're
both
both
asking let me just give
asking let me just give
you and here this is a good chance for
you and here this is a good chance for
me to fix a bug
anyways this is just like a thing that I
anyways this is just like a thing that I
forgot to commit to the dev
Branch it
Branch it
fix render mode in
Dev dot
Dev dot
[Music]
name let me grab one thing
name let me grab one thing
get there's just a little quick bit of
get there's just a little quick bit of
setup hold on because this is a new uh
setup hold on because this is a new uh
this is a new container of
mine grab that
mine grab that
and let me get my creds from over here
okay so I there's this demo file here I
okay so I there's this demo file here I
might have to install RB for this
might have to install RB for this
one a brand new environment I literally
one a brand new environment I literally
I wrote this whole snake environment in
I wrote this whole snake environment in
one week and uh yeah so rayb so here you
one week and uh yeah so rayb so here you
get like an import error pip install
get like an import error pip install
rayb and it'll
rayb and it'll
work technically there two different
work technically there two different
demos I could do uh this one will be
demos I could do uh this one will be
cool for you guys I think think
cool for you guys I think think
oops so M snake model--
Baseline this downloads Baseline
and cool now it is playing
and cool now it is playing
snake this is a 10 billion step
snake this is a 10 billion step
pre-trained
model currently the AI is playing this
model currently the AI is playing this
I'm not controlling it though if I want
I'm not controlling it though if I want
to mess with it and control it I can now
to mess with it and control it I can now
I'm playing the snake
I'm not as good at it as the AI is
I'm not as good at it as the AI is
though the AI is kind of super
though the AI is kind of super
human and now I can let the AI take
over this is a giant snake environment
over this is a giant snake environment
as it turns out um this has 4096 snakes
as it turns out um this has 4096 snakes
in
in
it I can show you the high level of
that render mode human no RGB
array uh and look if I have an error I
array uh and look if I have an error I
get all these these uh these help
get all these these uh these help
commands in here so I can see I just Mis
commands in here so I can see I just Mis
mistyped it it should be a
dash tries to help you out a
bunch yeah Roman the snakes are nice I
bunch yeah Roman the snakes are nice I
really need to get a chat plugin because
really need to get a chat plugin because
now I'm talking Roman is on X and I've
now I'm talking Roman is on X and I've
got two people on um YouTube so it'll be
got two people on um YouTube so it'll be
a little awkward for today I'll get a
a little awkward for today I'll get a
chat plugin when I get a
chat plugin when I get a
chance I this is the cool thing uh this
chance I this is the cool thing uh this
is the cool thing about the compute
is the cool thing about the compute
requirement I just got a question on
requirement I just got a question on
that um I train this in three hours on
that um I train this in three hours on
one GPU and two
one GPU and two
cores I I have a 4090 so it's a pretty
cores I I have a 4090 so it's a pretty
good GPU but still like any reasonable
good GPU but still like any reasonable
GPU it'll still be less than a day for
GPU it'll still be less than a day for
10 billion steps and you can train it
10 billion steps and you can train it
for one bill and get something that's
for one bill and get something that's
almost as good
almost as good
so uh is this not going to render hold
on here I'll show the one other cool
on here I'll show the one other cool
demo since we got a couple new folks in
here we're just going to do like
this and then we'll see the uh the whole
this and then we'll see the uh the whole
the whole
the whole
thing
boom this is the scale that it trains at
boom this is the scale that it trains at
4096 snakes and
1440p yeah if you if you're serious
1440p yeah if you if you're serious
about doing like any sort of AI you do
about doing like any sort of AI you do
kind of need a discret GPU of some sort
kind of need a discret GPU of some sort
but that said the snake environment will
but that said the snake environment will
still train at like 100,000 steps per
still train at like 100,000 steps per
second on one half decent CPU core so if
second on one half decent CPU core so if
it's like literally 10 times faster than
it's like literally 10 times faster than
most things run on GPU actually 20 times
most things run on GPU actually 20 times
faster on One Core that's how fast all
faster on One Core that's how fast all
the stuff is with
the stuff is with
puffer so this is this is the
puffer so this is this is the
environment you can actually zoom in on
environment you can actually zoom in on
this I think yeah you can zoom in on
this I think yeah you can zoom in on
this and see what the snakes are
doing so yeah cool environment right
doing so yeah cool environment right
this whole thing is 450 lines of code
this whole thing is 450 lines of code
including three renderers 200 some odd
including three renderers 200 some odd
lines of cython runs 14 million steps
lines of cython runs 14 million steps
per second single core and trains it a
per second single core and trains it a
million steps per second on one GPU
million steps per second on one GPU
Ultra ultra high performance
Ultra ultra high performance
reinforcement learning like 100 times
reinforcement learning like 100 times
faster than most things out there wrote
faster than most things out there wrote
it in 5 days from scratch and there's
it in 5 days from scratch and there's
going to be a lot more stuff like this
going to be a lot more stuff like this
coming in fact that's what I was hoping
coming in fact that's what I was hoping
to do as soon as I finish this w b thing
to do as soon as I finish this w b thing
is we're going to integrate a continuous
is we're going to integrate a continuous
control
control
today let me finish up this WB thing
today let me finish up this WB thing
just so I don't lose my train of thought
just so I don't lose my train of thought
too badly cuz I I went through a few
too badly cuz I I went through a few
things with that already ready uh hack
things with that already ready uh hack
together basic carbs
together basic carbs
demo
limitations
uh general idea was
uh general idea was
to
uh Define
uh Define
carbs
carbs
outside the one
outside the one
be uh experiment process and
be uh experiment process and
since uh
sweets
uses smuggle it into the
uses smuggle it into the
training so we can get
training so we can get
suggestions carbs and override the the
suggestions carbs and override the the
sample
sample
paper params basically an environment
paper params basically an environment
with multiple agents training
with multiple agents training
simultaneously yes 4096 agents training
simultaneously yes 4096 agents training
simultaneously all the data goes to the
simultaneously all the data goes to the
same neural network though one neural
same neural network though one neural
network independently controls all the
network independently controls all the
agents so you get all that data
agents so you get all that data
accumulated into one neural
network the one be sampled hyper prams
imitations
The I got to get this scph for
The I got to get this scph for
them hold
on let's do like this
R
R
springy raft does not show
springy raft does not show
updated from
updated from
WB
uh automating Google dinno
uh automating Google dinno
game yeah I would try not to like don't
game yeah I would try not to like don't
try to like get if you have an
try to like get if you have an
environment as simple as the diamondo
environment as simple as the diamondo
game just write it from scratch like
game just write it from scratch like
don't use something super slow you want
don't use something super slow you want
the m to run super fast especially if
the m to run super fast especially if
you don't have resources multi-agent RL
you don't have resources multi-agent RL
is not any harder than single agent RL
is not any harder than single agent RL
because of puffer it's identical with
because of puffer it's identical with
puffer outside of puffer very hard with
puffer outside of puffer very hard with
puffer trivial
let's see
also does not show up in wand
also does not show up in wand
b
b
um what other things there were a couple
um what other things there were a couple
other limitations
right does not support all the carbs
right does not support all the carbs
ases so I had to
ases so I had to
hack around
hack around
that
that
some let talk
actually I should give them my fixed
actually I should give them my fixed
Branch right because I fix some
stuff uh puff RI what is it puff R
carbs yeah right here
do
this add missing spaces to want
this add missing spaces to want
B logic
B logic
space particularly
space particularly
useful add
useful add
missing params like into
Factor uh the other thing is you need to
Factor uh the other thing is you need to
be able to specify the
target let me go see what they called
this they called this something I forget
this they called this something I forget
what they called it
search
center specify the starting point
center specify the starting point
for the
for the
sweep each gram in the sweep
sweep each gram in the sweep
and is there anything else that they'd
and is there anything else that they'd
have to
do use carbs to
do use carbs to
generate code to uh
generate code to uh
generate the to or to
generate the to or to
sample hyper params for each
sample hyper params for each
Run
Run
update the carbs object with
update the carbs object with
the wall clock time
metric from the Run do wall
metric from the Run do wall
clock time and the score this can be the
clock time and the score this can be the
final
value probably better take the max or
value probably better take the max or
over average over a
window okay this is a pretty decent
window okay this is a pretty decent
little dock I think for uh for w be
right we'll make this
public
for for
okay cool that's
okay cool that's
done uh messages here is there anything
done uh messages here is there anything
I can contribute to in the puffer it's
I can contribute to in the puffer it's
going to be kind of hard um since you're
going to be kind of hard um since you're
new now what you can do is if you're
new now what you can do is if you're
going to like add a new environment it's
going to like add a new environment it's
not too hard to add a binding for a new
not too hard to add a binding for a new
environment uh to Puffer that you could
environment uh to Puffer that you could
probably manage like if you just look at
probably manage like if you just look at
how we have one of these simple
how we have one of these simple
environments added like uh I don't know
environments added like uh I don't know
which one is easy in here mini grid like
which one is easy in here mini grid like
if you just look at the code for this we
if you just look at the code for this we
just add a little binding and a little
just add a little binding and a little
wrapper stuff like this you could
wrapper stuff like this you could
probably just add something like this to
probably just add something like this to
a fork of puffer and if you have a cool
a fork of puffer and if you have a cool
environment you can open a PR and I'll
environment you can open a PR and I'll
just add it uh I'll add it to puffer as
just add it uh I'll add it to puffer as
well but yeah RL definitely does take
well but yeah RL definitely does take
some time I spend a few days get
some time I spend a few days get
comfortable like get comfortable with
comfortable like get comfortable with
snake you know maybe uh try a couple of
snake you know maybe uh try a couple of
the other environments out um and then
the other environments out um and then
you know maybe start working on either
you know maybe start working on either
adding your own environment uh writing
adding your own environment uh writing
your own and adding your own environment
your own and adding your own environment
or like taking another existing game
or like taking another existing game
thing and binding it to Puffer that you
thing and binding it to Puffer that you
want to play with at a high uh High perf
want to play with at a high uh High perf
that's probably a good thing to do so
that's probably a good thing to do so
we're going to move over to the control
we're going to move over to the control
stuff right after I check
stuff right after I check
on
on
this crazy for Twitter lots of lots of
this crazy for Twitter lots of lots of
good
good
stuff I did this as an experiment um I
stuff I did this as an experiment um I
kind of just wrote this silly bait
article I mean the stuff in here is it's
article I mean the stuff in here is it's
good information it's just written in
good information it's just written in
kind of a rage bity way
kind of a rage bity way
um and we'll see how much exposure this
gets yeah this has gone crazy okay let's
gets yeah this has gone crazy okay let's
start on the control segment
um let's edit the stream title on
YouTube let's just update the
titles adding continuous
control that'll update the YouTube one
control that'll update the YouTube one
and there's no Echo right
and there's no Echo right
yeah let's
do continuous
control okay we're in Dev let me just
control okay we're in Dev let me just
fix the AC real
quick reason myself here
quick reason myself here
continuous control
continuous control
um let's find a good environment to
um let's find a good environment to
start with for continuous control I
start with for continuous control I
think does box 2D maybe have
one oh actually this is
one oh actually this is
perfect this uh car racing environment I
perfect this uh car racing environment I
forgot this was in
forgot this was in
here let's do uh let's do this one
here let's do uh let's do this one
all right see you
all right see you
Sam uh we
Sam uh we
will be back with some stuff later I'm
will be back with some stuff later I'm
sure yeah this one's cool let's do
this action
this action
space is negative 1:
space is negative 1:
one car racing
V2 observation space
V2 observation space
is it's RGB
really it's probably slow isn't
it I bet this thing is
slow well we'll try it
out we'll try this out let's add a
out we'll try this out let's add a
binding for box 2D we're going to
binding for box 2D we're going to
discretize it first see if we can do
discretize it first see if we can do
anything with the environment
anything with the environment
discretized and then we're going to see
discretized and then we're going to see
how we can get it to work with
how we can get it to work with
continuous control that's going to be
continuous control that's going to be
the
easiest uh I don't have box 2D here at
easiest uh I don't have box 2D here at
all do I classic
all do I classic
control
box
box
okay uh let's use mini grid as a
okay uh let's use mini grid as a
template
slash star.
py this is
py this is
fine uh what do we have in
torch that is not fine we need to get
torch that is not fine we need to get
the Atari policy
right uh I think I can just do
right uh I think I can just do
like TCH
yeah this one's good right I'll have to
yeah this one's good right I'll have to
make a small change to the the size of
make a small change to the the size of
this thing but this will be little
this thing but this will be little
confet lstm for this probably decent
confet lstm for this probably decent
starting point and now we go to uh box
starting point and now we go to uh box
2D so default name will
be car racing
V1 car
B1
B1
and we do
and we do
uh
options
options
okay
domain equals
true and we're going to do
there's no import
here I think we got to do
try
try
name
name
equals
m then we'll do
m then we'll do
accept
raise uh
upper
upper
lib
lib
okay can you link the snake and please
okay can you link the snake and please
yes it's in the dev Branch so you will
yes it's in the dev Branch so you will
be with the dev branch which I'm hoping
be with the dev branch which I'm hoping
to merge
soon so all my Dev is open source we've
got so ocean is a first party
got so ocean is a first party
environments puff for
environments puff for
ocean so this is like stuff that I have
ocean so this is like stuff that I have
made um and have added to here I've also
made um and have added to here I've also
made I'm also the uh neural MMO author
made I'm also the uh neural MMO author
why does it have me as
why does it have me as
restream.io whatever that's the link
restream.io whatever that's the link
that I just posted so you can you can
that I just posted so you can you can
grab
grab
that hopefully you can see that link
where okay here
where okay here
is this is so
man this this EnV is like really
man this this EnV is like really
gross the way that they do
this what the
heck well I'm hoping that this is just
heck well I'm hoping that this is just
reasonable
reasonable
um I I don't know why they do it this
um I I don't know why they do it this
way this really gross
now what we're going to do is we're
now what we're going to do is we're
going to write a little
going to write a little
wrapper we're going to make a box 2D
wrapper
wrapper
and we don't need this but we need self.
and we don't need this but we need self.
action
action
space gymnasium do spaces of
space gymnasium do spaces of
discreet we'll
do
do
seven okay
and this actually can be gymnasium do
and this actually can be gymnasium do
rapper so then I don't even need to do
rapper so then I don't even need to do
any of this
any of this
super yeah we'll just do like
super yeah we'll just do like
that uh and then I don't need to do any
that uh and then I don't need to do any
of this
of this
garbage only thing I need to do is
garbage only thing I need to do is
convert the
convert the
action space
action space
to I think I do
float
float
action wait what's the the
space Oh wait there is a discret version
space Oh wait there is a discret version
of
of
this I didn't realize
this I didn't realize
that there's a discret version of
that there's a discret version of
it if wait this doesn't make sense
it if wait this doesn't make sense
though if continuous
huh is there more stuff that's not
huh is there more stuff that's not
uh not reported in here
okay oh I actually don't need
okay oh I actually don't need
to yeah that's fine
to yeah that's fine
um where
um where
is how long do this
is how long do this
n oh man I could totally rewrite this
n oh man I could totally rewrite this
thing so fast
thing so fast
yeah I could rewrite this thing it would
yeah I could rewrite this thing it would
be half as long and it would be way
be half as long and it would be way
faster I'm
sure okay so right here they don't
sure okay so right here they don't
document this at all but they've got um
document this at all but they've got um
continuous as a argument so let's do
continuous as a argument so let's do
continuous
continuous
false
right and then
yeah this is
yeah this is
good continuous is
good continuous is
false and I
false and I
think I did the syntax of this slightly
think I did the syntax of this slightly
wrong as
wrong as
well yeah I misread the API
well yeah I misread the API
it's so you actually don't need
yeah this is
fine don't need this 2D wrapper anymore
fine don't need this 2D wrapper anymore
at all not going to need any
at all not going to need any
wrappers and this should be
sufficient what exactly is use case for
sufficient what exactly is use case for
the n
the n
how would I play around with it yeah so
how would I play around with it yeah so
the the there's no read me in there
the the there's no read me in there
because the documentation is the
because the documentation is the
documentation for puffer not for like
documentation for puffer not for like
this specific environment there's really
this specific environment there's really
nothing to document with snake it's it's
nothing to document with snake it's it's
snake um and there's just it's the same
snake um and there's just it's the same
standard interface as everything else so
standard interface as everything else so
the demo file is documented and the demo
the demo file is documented and the demo
file you can run with D- MV M name so in
file you can run with D- MV M name so in
this case
this case
snake uh eval is
snake uh eval is
to run uh an existing model instead of
to run uh an existing model instead of
train from scratch there's also a train
train from scratch there's also a train
mode and then there
mode and then there
is a uh dash
is a uh dash
dash uh well this would work but
dash uh well this would work but
Baseline pulls down a baseline model
Baseline pulls down a baseline model
that we've pre-trained for this
that we've pre-trained for this
environment so that's what I ran
environment so that's what I ran
earlier this demo file is a little bit
earlier this demo file is a little bit
chunky if you want to you could do
chunky if you want to you could do
simple demo you could like add the
simple demo you could like add the
environment into this one
environment into this one
instead this is like uh just meant to a
instead this is like uh just meant to a
simpler setup file but yeah either way
simpler setup file but yeah either way
it's that's what it works off
it's that's what it works off
of the ocean by the way ocean is snake
of the ocean by the way ocean is snake
is brand new so snake is not on there
is brand new so snake is not on there
yet but ocean is
yet but ocean is
documented um right here it's on the
website puff. github.io
okay let's
okay let's
add
add
um box
um box
2D okay and then we do EnV
2D okay and then we do EnV
[Music]
[Music]
name
name
car was it car
car was it car
racing V1
racing V1
say and then
car sing
huh
huh
n car
racing not
installed install box
2D that all went over my head okay so
2D that all went over my head okay so
there's no RL Basics involved with that
there's no RL Basics involved with that
that's just API stuff so
that's just API stuff so
um the environment is like a it's a
um the environment is like a it's a
class right you can just like
class right you can just like
instantiate the environment and play
instantiate the environment and play
with it you can just import it from
with it you can just import it from
there and play around with it if you
there and play around with it if you
want um the demo file is a loader that
want um the demo file is a loader that
can load any of the environments in
can load any of the environments in
puffer lib and then run them through
puffer lib and then run them through
clean puff RL with training or
clean puff RL with training or
evaluation clean puff RL is the actual
evaluation clean puff RL is the actual
file that contains all the RL
file that contains all the RL
implementation so all the actual RL code
implementation so all the actual RL code
is in this file the file 750 lines there
is in this file the file 750 lines there
are only about 300 lines of actual
are only about 300 lines of actual
reinforcement learning code the rest is
reinforcement learning code the rest is
logging and uh performance monitoring so
logging and uh performance monitoring so
it's all in there so I mean if you can
it's all in there so I mean if you can
get the snake environment running just
get the snake environment running just
using that same command that I used you
using that same command that I used you
can start playing around with it from
can start playing around with it from
there that would be where you would
start and keep asking me until you get
start and keep asking me until you get
it working I'm trying I'm always trying
it working I'm trying I'm always trying
to figure out how to fix the new user
to figure out how to fix the new user
experience up with
experience up with
this so if you have anything that's like
this so if you have anything that's like
specifically confusing let me know like
specifically confusing let me know like
what you'd want like what information is
what you'd want like what information is
it that you would want to see better
presented yeah so like keep in mind I'm
presented yeah so like keep in mind I'm
a researcher I'm not a ux person right
a researcher I'm not a ux person right
my thing is I write simple code not like
my thing is I write simple code not like
I'm really good at documenting simple
I'm really good at documenting simple
code I I'm not particular good at that
code I I'm not particular good at that
so if uh if there's specific things that
so if uh if there's specific things that
you're like hey I would really like to
you're like hey I would really like to
know this let me know and I can just add
know this let me know and I can just add
stuff often in real time that's one of
stuff often in real time that's one of
my favorite things to do it's like oh
my favorite things to do it's like oh
that thing doesn't work here let me push
that thing doesn't work here let me push
you a patch right
now at least in Dev branches I try to
now at least in Dev branches I try to
avoid breaking the
main
main
so I got some sort of an error here a
so I got some sort of an error here a
swig
right what's wrong with
Swig puffer versus say Jax who'd
Swig puffer versus say Jax who'd
win
win
uh I don't even think Jax will show up
uh I don't even think Jax will show up
to the arena but puffer is not an
to the arena but puffer is not an
implementations Library um it's more
implementations Library um it's more
just infra and stuff and hyperf Sim
well I'll tell you what we win this
well I'll tell you what we win this
snake environment implementation will
snake environment implementation will
win
um yeah go read this code go read like
um yeah go read this code go read like
any a code and tell me what you would
any a code and tell me what you would
rather have to
write will you post the stream as a
write will you post the stream as a
recording my friend this stream is
recording my friend this stream is
posted as a recording it's on YouTube
posted as a recording it's on YouTube
all the YouTube live streams just go
all the YouTube live streams just go
onto the
channel is isn't that how it
works I do absolutely need to get a chat
works I do absolutely need to get a chat
plugin because I have people on X and
plugin because I have people on X and
people on YouTube and it's confusing if
people on YouTube and it's confusing if
since you can't see each other's
chat I was tempted to actually
chat I was tempted to actually
multistream to Twitch as well I might do
multistream to Twitch as well I might do
that that'd be kind of fun to
that that'd be kind of fun to
multistream to X YouTube and twitch
uh what is wrong with
uh what is wrong with
Swig did they
say isn't this documented somewhere
like can I do this
so Swig build fails
right streams are privatized what can
right streams are privatized what can
you see my other ones uh if you tell me
you see my other ones uh if you tell me
where the setting is I will make them
where the setting is I will make them
public if not I don't know why they
public if not I don't know why they
would be marked
private like all my Dev is pretty much
private like all my Dev is pretty much
all the stuff I do is pretty much out in
all the stuff I do is pretty much out in
the open so totally fine having them be
the open so totally fine having them be
saved I would like it if they'd all go
saved I would like it if they'd all go
into like a playlist or something to not
into like a playlist or something to not
crowd the main Channel but I can also
crowd the main Channel but I can also
just like make a playlist of main
just like make a playlist of main
Channel vids or whatever
what in the
heck hey
heck hey
pdbs thank you for the uh the setting
pdbs thank you for the uh the setting
here it is
here it is
in wait this is just linked to my
streams is there a setting I can change
streams is there a setting I can change
here
yeah no Jackson puffer are not even
yeah no Jackson puffer are not even
close to comparable um but for the
close to comparable um but for the
specific use of RL environments I think
specific use of RL environments I think
most of the time you'd prefer to write
most of the time you'd prefer to write
stuff the way that the snake en is
stuff the way that the snake en is
written in the live tab you can see all
written in the live tab you can see all
streams also the ones from yesterday
streams also the ones from yesterday
okay so perfect so yeah they're all
okay so perfect so yeah they're all
public then so this is already set up
public then so this is already set up
and I think I don't know if I have stuff
and I think I don't know if I have stuff
highl I would like to have them like
highl I would like to have them like
nicely highlighted and stuff oh I also
nicely highlighted and stuff oh I also
have to go fix the monetization on this
have to go fix the monetization on this
cuz I qualified for that which was kind
cuz I qualified for that which was kind
of
of
cool
cool
um brings in a few
pennies let's see so yeah that's already
pennies let's see so yeah that's already
set up then I'm going to figure out
set up then I'm going to figure out
what's wrong with this
Swig same issue
yesh okay so here's the
yesh okay so here's the
bug
a specific to
poetry what
yeah pip install
Swig the absolute state
wait pip install Swig works so why does
wait pip install Swig works so why does
this not
work I don't know I get all the Jack
work I don't know I get all the Jack
post I assume that this is because of
post I assume that this is because of
the uh I posted this article
right where's the rage bait article yeah
right where's the rage bait article yeah
this rage bait
this rage bait
article uh where I basically just
article uh where I basically just
on Jacks for a whole post and like rust
on Jacks for a whole post and like rust
and C++ and all the popular things
and C++ and all the popular things
um
um
cuz genuinely we don't need any of
it does it work now
what in the heck what is wrong with
this gymnasium of box
2D maybe I want the the base
2D maybe I want the the base
error oh maybe I want the base
error o
error o
I want the base
I want the base
error
error
ah okay this was me being dumb though
ah okay this was me being dumb though
this is not documented which
is okay good so it works this is an
is okay good so it works this is an
error that I know how to fix this is
error that I know how to fix this is
just me having not set up the uh the
just me having not set up the uh the
channels
channels
yet have four channels got three
yet have four channels got three
channels
channels
instead uh so frame stack equals
instead uh so frame stack equals
three and
then we
open models
just put this here and then we
just put this here and then we
[Music]
[Music]
do uh we will comment out some
stuff OBS
equals one 64 8 and 8 that is too is
equals one 64 8 and 8 that is too is
that too
big yeah that's way too
big yeah that's way too
big uh
shoot anybody have an architecture for
shoot anybody have an architecture for
cars
cars
racing anybody have architecture for
racing anybody have architecture for
this
maybe really would prefer to not have a
maybe really would prefer to not have a
4096 linear layer in this thing that's
ridiculous I guess 4098 to 128 wouldn't
ridiculous I guess 4098 to 128 wouldn't
be
be
terrible that's still
terrible that's still
dumb I'll do it for now just because but
dumb I'll do it for now just because but
that's really
dumb uh
dumb uh
these are way too big these
networks we're going to do
networks we're going to do
128 128 like
128 128 like
this
and cool it
runs I'm not seeing it Rend
which is
which is
weird what's the render
weird what's the render
mode by
mode by
default what's their render
mode human
mode human
rge State pixels
do we do RGB
maybe ah
maybe ah
cool room
cool so this is the
cool so this is the
environment this is uh somebody was
environment this is uh somebody was
asking about car racing before
right so this is
untrained let's see how fast it
untrained let's see how fast it
trains do I have free compute right
trains do I have free compute right
now I don't know if I actually do have
now I don't know if I actually do have
free
free
compute let's try it locally first
600k pram network not
bad ooh garbage
bad ooh garbage
speed let's make that
better I'm going to take this uh this
better I'm going to take this uh this
config and I'm going to use this
config and I'm going to use this
for uh the car except I'm going to
for uh the car except I'm going to
change a few small things with
it I'm setting num workers to eight
it I'm setting num workers to eight
because I only have eight cores on this
machine set this to like
machine set this to like
16 k
oh I need VC
multiprocessing let's see how this
does it's spinning my box super loud
does it's spinning my box super loud
already I can
hear is this end
hear is this end
slow is don't tell me this en is
slow is this en like really
slow I swear if I if I go and look at
slow I swear if I if I go and look at
this thing and it runs less than a
this thing and it runs less than a
thousand steps per
thousand steps per
second like
I'm going to post more rage
Bait Box
Bait Box
2D it's going to be box
2D it's going to be box
2D profile
2D profile
[Music]
[Music]
emulation what's the default in here 10
emulation what's the default in here 10
that's
that's
fine
fine
oop SE
snake what
let's see how fast this end
runs we're currently running the car
runs we're currently running the car
racing end for 10
racing end for 10
seconds just to
see you've got to be kidding
see you've got to be kidding
me
me
how oh
my how
now you get blasted for that that's just
unacceptable what in
the gracing card at
gif for
so no meaningful reinforcement learning
so no meaningful reinforcement learning
can be done on this environment
um
ridiculous anything
else I mean it's like not even there's
else I mean it's like not even there's
no point in even bothering to use this
no point in even bothering to use this
envir this is worthless like 150 SPS get
envir this is worthless like 150 SPS get
out of here that's
insane it's just like pure Python and
insane it's just like pure Python and
pure python rendering or
pure python rendering or
something
something
oh
oh
yeah that's
ridiculous every time I think RLS hit
ridiculous every time I think RLS hit
rock bottom it's like nope
rock bottom it's like nope
find a new way to dig
find a new way to dig
deeper
deeper
um I'm kind of stuck now with what to do
um I'm kind of stuck now with what to do
with that because I'm not going to use
with that because I'm not going to use
this I need like a continuous control M
this I need like a continuous control M
that runs
fast I hope I don't have to actually
fast I hope I don't have to actually
make
make
one I could do multi-agent
one I could do multi-agent
nothing wrong with that
right are there any m's that
are
environments these are all
environments these are all
[Music]
slow Mountain car continuous
right Highway M
oh
oh
cool
uh
Highway that's a discreet action
Highway that's a discreet action
is there is there continuous control on
is there is there continuous control on
this thing ideally non-pixel
this thing ideally non-pixel
observations as well if we have
observations as well if we have
state-based observations that's likely
state-based observations that's likely
to be much faster
there should be a continuous version of
there should be a continuous version of
this
this
right this looks very
simple drive on a multi-lane
simple drive on a multi-lane
highway okay I didn't know this
highway okay I didn't know this
existed right side of the road
discrete meta
action fast version okay
wait is
wait is
this when they say FPS is one do they
this when they say FPS is one do they
mean this thing simulates one frame per
mean this thing simulates one frame per
second am I reading this right
I'll wait for replies here in the
I'll wait for replies here in the
meantime I'm going to look at Mountain
meantime I'm going to look at Mountain
car really simple and right I just need
car really simple and right I just need
to test something
anyways I mean it looks like this space
anyways I mean it looks like this space
is so poor that I'm just going to have
is so poor that I'm just going to have
to write a bunch of
to write a bunch of
environments
environments
um nobody's done it
apparently Mountain
apparently Mountain
car classic control
I know that's fast at least
right uh
I haven't touched this code in so long
sure everything is still working here
sure everything is still working here
right yeah it
works Mountain car continuous
could any arguments
G
nasium
okay well I have to add The Binding now
right what
right what
the classic control
the classic control
control uh
continuous and we do package is going to
continuous and we do package is going to
be classic
be classic
control well actually no I don't even
control well actually no I don't even
need to do this
need to do this
right M
name it's going to
name it's going to
be Mountain car
be Mountain car
continuous and then let's
continuous and then let's
do car
like this
right does this
work unknown
environment
wow uhoh I edited the wrong one
Okay cool
Okay cool
so this is now where we get into the
so this is now where we get into the
bindings uh issue
right
right
so this is uh this is corre this is
so this is uh this is corre this is
where we actually need to edit a couple
things so puffer lib
expects you to have
puffer lib expects you to have a
puffer lib expects you to have a
discreet or multi-
discreet or multi-
discrete um so for now I'm just going to
discrete um so for now I'm just going to
add
box I'm just going to add like box to
box I'm just going to add like box to
this thing here
this yeah that's
good okay and then the standard policy
good okay and then the standard policy
is going to be uh the standard policy is
is going to be uh the standard policy is
also going to need to be updated
right for
I think this is
good so we just add this to
good so we just add this to
uh encoder whoa and not what we wanted
um I know why this
happens fix that up a little bit
happens fix that up a little bit
but let's
do this exit function needs to be here
do this exit function needs to be here
to
stop okay could not broadcast input
stop okay could not broadcast input
array from shape
eight into shape
eight into shape
eight comma
one that's kind of weird isn't it
there's probably like a squeeze or
there's probably like a squeeze or
something
right try
right try
this sent break point oops
uh
interesting this should not be an
int64 should
int64 should
definitely not be in N 64
it's a numpy
array but what is the shape of actions
right star action
shape what is action shape
what is action shape
right it be right
right it be right
here we want action shape to
be okay so action shape yeah this makes
be okay so action shape yeah this makes
sense cuz it's a box it's shape one
um so I think that I need to add I need
um so I think that I need to add I need
to change the model of Def
maybe maybe that would fix
it little bit
it little bit
confusing just a little basic shape
confusing just a little basic shape
error
[Music]
uh maybe this does it
batch let's just
batch let's just
do
do
uh batch.
uh batch.
shape no batch minus
shape no batch minus
one and this shouldn't be a a reshape
one and this shouldn't be a a reshape
this is just a view don't need a copy
there still we get this broadcast cast
there still we get this broadcast cast
that's weird they should be coming out
that's weird they should be coming out
now with the right shape
right yeah there's 81 right there
right yeah there's 81 right there
right um
right um
so somewhere this is going to get
squeezed so if I look at
policy do
policy do
I is
discreet
discreet
sample probably here
right
right
lits
lits
tensor okay
so well this is going to be the wrong
so well this is going to be the wrong
function I'm
sure I probably should just be using the
sure I probably should just be using the
um
the clean RL script for this
[Music]
[Music]
right okay this is a little bit tricky
let's go look at the clean RL script and
let's go look at the clean RL script and
see how they
see how they
handle sampling
here I said it would be like 100 lines
here I said it would be like 100 lines
of code to add this to puffer and it's
of code to add this to puffer and it's
probably going to be a little less than
probably going to be a little less than
that but it's not no work
po continuous
po continuous
actions
actions
[Music]
[Music]
so ah they
so ah they
do actor.
do actor.
mean actor. log standard
mean actor. log standard
deviation that's weird
is this
standard I'm assuming this is standard
standard I'm assuming this is standard
if it's in clean
RL and then how do they do the
um how do they do this section
here where's the
loss MB time ratio where's the loss
function oh this looks the same doesn't
function oh this looks the same doesn't
it am I wrong here or is this just ident
it am I wrong here or is this just ident
identical to the uh the
original the clean RL
code is it just you get log
problems I think you just get log probs
problems I think you just get log probs
right
policy loss
policy loss
is minus advantages times
is minus advantages times
ratio clamp
ratio clamp
coefficient this is identical
code so I think it's literally just the
code so I think it's literally just the
sampling of
sampling of
is there a log
is there a log
ratio yeah yeah so this is literally you
ratio yeah yeah so this is literally you
just okay I didn't actually know that um
just okay I didn't actually know that um
I thought that there was a for some
I thought that there was a for some
reason I thought there was like a
reason I thought there was like a
difference in the optimization algorithm
difference in the optimization algorithm
or the loss or something with continuous
or the loss or something with continuous
but it looks like there isn't it looks
but it looks like there isn't it looks
like if I add the
like if I add the
sampler then uh we're good to go so that
sampler then uh we're good to go so that
actually makes me much more comfortable
actually makes me much more comfortable
doing this
so let's go look at that
so let's go look at that
code I've actually never bothered with
code I've actually never bothered with
continuous control like because you're
continuous control like because you're
just always dis discretizing it
just always dis discretizing it
works and their end their Ms are
slow and usually too simple as well
slow and usually too simple as well
because they're too slow
let's now
do we're going to add this to clean RL
do we're going to add this to clean RL
um the one thing is we need to have some
um the one thing is we need to have some
way of
way of
knowing whether the logits
knowing whether the logits
are continuous or so I'm going to hack
are continuous or so I'm going to hack
it for now
where is it sample
logits has
logits has
Adder
policy is continuous and so this is
policy is continuous and so this is
going to be oops this is going to just
going to be oops this is going to just
be a quick
be a quick
hack for now we on the dev
branch and then we're going to
branch and then we're going to
do that is continuous
here this continuous is
false man so much stuff needs to be
false man so much stuff needs to be
fixed in here maybe this was what I'll
fixed in here maybe this was what I'll
do next on puffer for uh
do next on puffer for uh
1.1 this whole framework code is really
Jank it's continuous
oops LF is
discret
discret
so now we do the sample from
so now we do the sample from
here which is going to be
oo that's kind of
Jank action log prob
where do I add
this hold
this hold
on
on
models this doesn't take action
models this doesn't take action
right my API doesn't take action right
right my API doesn't take action right
yeah look up can cat it doesn't take
yeah look up can cat it doesn't take
action just this rapper does
action just this rapper does
so what I do
is is
and so if action is none then we do
and so if action is none then we do
action is going to be equal
action is going to be equal
[Music]
to logits do
sample and then where do we get log
sample and then where do we get log
probs
log this is Jank very
log this is Jank very
Jank I'm tempted to mess with this whole
Jank I'm tempted to mess with this whole
section just to make it reasonable
147 two and a half
hours I could probably do
hours I could probably do
it this is a very I'm a little hesitant
it this is a very I'm a little hesitant
to mess with it too much this is a very
to mess with it too much this is a very
critical section of code but I really
critical section of code but I really
hate these rappers
well I guess for now what we're going to
well I guess for now what we're going to
do is we're just going to add this as a
do is we're just going to add this as a
pathway
pathway
right
um probs
um probs
equals logits
equals logits
dolog prob of action
entropy logits
entropy logits
dotp
dot there's
dot there's
value what's this thing
value what's this thing
return oh this just returned so return
return oh this just returned so return
action long problems entropy
okay so this actually might be fine for
okay so this actually might be fine for
now I just do it this way let's see what
now I just do it this way let's see what
Miss what's missing from
that right I didn't actually update I
that right I didn't actually update I
got to update the network
right
models let's go check on models
models let's go check on models
[Music]
uh right so this decoder cannot
uh right so this decoder cannot
be cannot be this it's got to be action
mean and action log standard
mean and action log standard
deviation
deviation
self. coder
self. coder
mean is going to be
it's really weird how they
have oh this is the whole policy that's
why layer in
it they don't have standard
it they don't have standard
deviation standard deviations are weird
deviation standard deviations are weird
here have to look at those
I think you do standard deviation 01
I think you do standard deviation 01
though right yeah then stealth.
though right yeah then stealth.
decoder log
STD this is a just a parameter isn't
it wait what
parameter torch. z a
parameter torch. z a
one
okay this is weird but
okay this is weird but
sure and then
LF self. is
LF self. is
continuous
continuous
mean log STD
mean log STD
STD see this gives you wrong code so I
STD see this gives you wrong code so I
got to check it
got to check it
um decoder
um decoder
mean decoder log standard
mean decoder log standard
deviation band as mean
okay and then we
okay and then we
do standard deviation is going to be
do standard deviation is going to be
this is wrong as well torch.
this is wrong as well torch.
x a log standard deviation and then we
x a log standard deviation and then we
do
do
probs equals torch. distributions normal
probs equals torch. distributions normal
mean standard deviation and you don't
mean standard deviation and you don't
dolog prob yet you do
you just return probs
you just return probs
right return probs
value I think that's
it can I broadcast okay so we still have
it can I broadcast okay so we still have
this broadcast
this broadcast
error but we got farther this
error but we got farther this
time let's see do we get
here
here
nice are these supposed to be
nice are these supposed to be
um Pro no wait it's a normal
um Pro no wait it's a normal
so this is not probs I don't know why
so this is not probs I don't know why
it's called that we'll have to edit that
it's called that we'll have to edit that
they're log probs not probs right I'm
they're log probs not probs right I'm
pretty sure these are log props yeah
pretty sure these are log props yeah
because this is log standard
because this is log standard
deviation anyways
though and then this
gets oh and we don't need to we can get
gets oh and we don't need to we can get
rid of that line that's likely to cause
rid of that line that's likely to cause
uh bugs I added this thing
uh bugs I added this thing
before yeah this is not needed anymore
before yeah this is not needed anymore
this is likely to cause bugs uh we don't
this is likely to cause bugs uh we don't
need
this yes this is
good
good
and oh I do need to add it though to
and oh I do need to add it though to
right I do need to add the reshape to
right I do need to add the reshape to
probs that's where it needs to be added
probs that's where it needs to be added
so we're going to
so we're going to
add
batch yeah like
this normal has no ATT okay so you
this normal has no ATT okay so you
cannot view a normal
you can't view normal this
you can't view normal this
way so let's let's just see what's in
way so let's let's just see what's in
clean uh the framework file
here so
batch maybe it's maybe it's
this normal has no attribute shape
this normal has no attribute shape
uh okay
so something's got to have the shape
right yeah we're going to just do logic.
right yeah we're going to just do logic.
lo. shape
still could not
broadcast oh cuz it's not the log probs
broadcast oh cuz it's not the log probs
that need to be viewed duh it's it's
that need to be viewed duh it's it's
this
right yeah yeah yeah this is this is
correct still
no okay well let's check uh puffer lib
no okay well let's check uh puffer lib
let's check the forward
pass train what is
pass train what is
it eval forward
here this should be giving us uh non-f
here this should be giving us uh non-f
flat
data which is correct right here so this
data which is correct right here so this
is giving us the correct correct shape
data let's just uh keep going
here still
correct still correct
ah so this does work now
ah so this does work now
oh log probs NP does not work okay
oh log probs NP does not work okay
that's fine that's
easy view I guess this needs to
easy view I guess this needs to
be
multiple uh log probs MP still
is is it the other way around
I think this is supposed to be summed
I think this is supposed to be summed
right
right
because torch. stack. t. someone yeah
because torch. stack. t. someone yeah
yeah yeah so you stack uh use some log
probs and perfect this uh this is
probs and perfect this uh this is
now yeah this is perfect this is where
now yeah this is perfect this is where
we want to be um
let's go look at well first of
let's go look at well first of
all puffer lip
Vector shouldn't be
Vector
maybe let's see what the v action space
maybe let's see what the v action space
is
vn. action
vn. action
space ven. action
space ven. action
space is a
box oh but the box is from negative -1
box oh but the box is from negative -1
to one and this is out of range so
this is out of
this is out of
range so I think it's a clip
range so I think it's a clip
right I think there's action
clipping I'm just going to put it in the
clipping I'm just going to put it in the
model for now
model for now
right when the clean
right when the clean
RL let me just make sure that they
RL let me just make sure that they
actually
clip
cuz H right here clip action you see
this so I think I can just add a
wrapper then I don't have to put it in
wrapper then I don't have to put it in
the model code that's way
the model code that's way
better though it's a little weird not to
better though it's a little weird not to
cuz like seems like the model should be
cuz like seems like the model should be
penalized for outputting Stuff way
penalized for outputting Stuff way
outside the range cuz otherwise it's
outside the range cuz otherwise it's
just going to keep drifting but whatever
just going to keep drifting but whatever
you know we'll we'll deal with that
later classic control
later classic control
continuous uh
continuous uh
environment and we'll
environment and we'll
do equals gymnasium rappers uh clip
do equals gymnasium rappers uh clip
action
that's all we
that's all we
need I think that's all we
need we don't need any of the other
need we don't need any of the other
clipping it should be
fun still do not
match maybe this is not clipping
match maybe this is not clipping
the oh that's gross yeah
the oh that's gross yeah
so this is clipping the actions when the
so this is clipping the actions when the
actions come in but you're not allowed
actions come in but you're not allowed
to pass an action that doesn't fit the
to pass an action that doesn't fit the
action space to gymnasium so this
action space to gymnasium so this
wrapper is actually
wrapper is actually
useless uh and we have to do this in the
useless uh and we have to do this in the
model or
model or
something do we want to do it in the
something do we want to do it in the
model or do we want to do
model or do we want to do
it
it
shoot dang I don't know where we want to
shoot dang I don't know where we want to
do that huh
[Music]
[Music]
so the issue here is that like gymnasium
so the issue here is that like gymnasium
expects you to return actions that are
expects you to return actions that are
within the defined action space which is
within the defined action space which is
negative 1 to one and they have this
negative 1 to one and they have this
wrapper that will clip actions for you
wrapper that will clip actions for you
but if you're being strict with the API
but if you're being strict with the API
like puffer lib is to prevent you from
like puffer lib is to prevent you from
bugging stuff um the action should not
bugging stuff um the action should not
be sent to the environment at all when
be sent to the environment at all when
they're out of range
they're out of range
so the way to fix this is going to be to
so the way to fix this is going to be to
make my own version of this rapper uh
make my own version of this rapper uh
that does not suck that's what it's
that does not suck that's what it's
going to
going to
be
be
right yes that's the correct
answer um
I thought I had more rappers than
this don't have more wrappers in
this don't have more wrappers in
this or is it
postprocess oh yeah it's in post process
postprocess oh yeah it's in post process
cool so let's just add right to the top
cool so let's just add right to the top
of this uh clip
of this uh clip
actions and we're going to do this will
actions and we're going to do this will
be
be
a gymnasium
a gymnasium
wrapper and this is going to fill this
wrapper and this is going to fill this
with probably what's the implementation
with probably what's the implementation
of the existing uh thing but it's
of the existing uh thing but it's
actually this is wrong so what we need
actually this is wrong so what we need
to do is action space
to do is action space
equals so first
equals so first
assert this only works for
assert this only works for
boxes so gymnasium spaces.
boxes so gymnasium spaces.
boox and then we're going to do high
boox and then we're going to do high
equals to
how do we get the high and the low value
how do we get the high and the low value
from the D
from the D
type
um Min value of
um Min value of
numpy python Min value of dtype
numpy python Min value of dtype
I don't know if it's a numpy d type is
I don't know if it's a numpy d type is
the
the
thing numpy
thing numpy
Min num. Min scaler type
that's
that's
better you don't need to reset it here I
better you don't need to reset it here I
don't know why I added
that you don't need any of
that you don't need any of
this and you do need to do clip this
this and you do need to do clip this
to
to
self. n. action space.
low cool cool
um this
um this
works I need to go okay I need to take a
works I need to go okay I need to take a
quick break to go do one thing I'll be
quick break to go do one thing I'll be
right back and then we will we'll finish
right back and then we will we'll finish
this up and hopefully we'll have this
this up and hopefully we'll have this
environment training rather
quickly
e
e
e
e
e
e
e
e
e
e
e
e
e
e
e
e
e
e
e
e
e e
okay we're back
okay we're back
here let's um let's finish
this this
clip actions I think this is done
clip actions I think this is done
right
yeah
yeah
postprocess clip actions
I actually should make this clip action
I actually should make this clip action
the single agent one
right and then Max scaler type so
right and then Max scaler type so
there's no Max scaler type that's weird
there's no Max scaler type that's weird
there's a Min one but not a Max
there's a Min one but not a Max
one Min scaler
type numpy Max scaler type or
something max value of D type
I okay that's what I thought that's
I okay that's what I thought that's
really weird that there's um a separate
API but
min max like this
right you can do D type
right you can do D type
[Music]
[Music]
info
info
low
low
equal D type info yeah there we
go invalid
F
info okay going to be super
buggy Roman is the screen is the screen
buggy Roman is the screen is the screen
updated
now wait is the Stream not
now wait is the Stream not
working I flipped it already if it got
working I flipped it already if it got
stuck that's
weird looks like it's
weird looks like it's
working yeah okay it's just there's a
working yeah okay it's just there's a
there's a stream delay it's
weird it shouldn't have been more than a
weird it shouldn't have been more than a
few second delay though cuz I flipped
few second delay though cuz I flipped
the audio back and the screen back at
the audio back and the screen back at
about the same time that's really
weird uh okay let's see what this gave
weird uh okay let's see what this gave
us we're going to get this working today
us we're going to get this working today
I do have to go to a 500 PM
I do have to go to a 500 PM
meeting but uh hopefully we have this
meeting but uh hopefully we have this
working by
working by
then validate sample that's
then validate sample that's
weird value is not
broadcastable 32 by 16 is 512
broadcastable 32 by 16 is 512
but why would it be 32 by 16 in the
but why would it be 32 by 16 in the
first
first
place assumedly during training it does
place assumedly during training it does
this
right assumedly during
training okay if there's a 30 to 60
training okay if there's a 30 to 60
second DNC that's really
second DNC that's really
weird
weird
um does it seem like what I'm saying is
um does it seem like what I'm saying is
like 30 to 60 seconds desinc from the
like 30 to 60 seconds desinc from the
video or like you can see my camera
video or like you can see my camera
right does it look like my uh what I'm
right does it look like my uh what I'm
saying is 30 seconds dect or is it just
saying is 30 seconds dect or is it just
like a weird scene uh scene switch
thing camera is full synced okay if
thing camera is full synced okay if
camera's full synced and audio is fully
camera's full synced and audio is fully
synced and everything should be good I
synced and everything should be good I
think it's just a OBS uh scene switching
think it's just a OBS uh scene switching
thing cuz this is going through restream
thing cuz this is going through restream
IO for
IO for
um X and YouTube I'm probably going to
um X and YouTube I'm probably going to
since this has been working well I'm
since this has been working well I'm
probably going to get the premium on it
probably going to get the premium on it
and do twitch as
and do twitch as
well we'll see I got to get like a good
well we'll see I got to get like a good
multi- chat application I got to get
multi- chat application I got to get
like a good multi- chat that'll just
like a good multi- chat that'll just
combine all my Chats on the stream that
combine all my Chats on the stream that
would be
nice I don't know where I would put it I
nice I don't know where I would put it I
guess i' would have to put it like next
guess i' would have to put it like next
to my camera
to my camera
here um right
here um right
there can't put it here puffer occupies
there can't put it here puffer occupies
this
[Music]
corner I get so much Amusement out of
corner I get so much Amusement out of
this this
mascot took like 200 messages back and
mascot took like 200 messages back and
forth with two different uh artists to
forth with two different uh artists to
get this puffer just the way I wanted
him okay
so it's kind of odd
so this sample logits function right
is this is working on the structure
data so it's do
some very
odd we could just do like if Len
odd we could just do like if Len
of. look. shape greater than two we put
of. look. shape greater than two we put
a break
point
point
no what do you mean
no where is it
no where is it
wrong right here
logits do log prob
logits do log prob
action do
shape okay we'll just
try no not this
okay interesting so this has now given
okay interesting so this has now given
us this is got to be a training mini
us this is got to be a training mini
batch
right but I have some of
one how does that make sense because
one how does that make sense because
uh because I'm stacking along the First
uh because I'm stacking along the First
Dimension so actually this has got to be
Dimension so actually this has got to be
sum of minus one
sum of minus one
here
here
right and then if I do
action do
view we'll see how far this
view we'll see how far this
gets I think that the batch uh bat shape
gets I think that the batch uh bat shape
operation might still be wrong but this
operation might still be wrong but this
should be
closer value is still not
closer value is still not
broadcastable very odd
so let's see what's going on with
this action is this
shape
ah bat shape plus plus event shape
so it says that logits are
so it says that logits are
flat I
see
see
so this is not too
so this is not too
bad all I need to do
bad all I need to do
is I get the bat shape right
and I
do. entropy
h a little awkward
frankly I see why it does
this the issue is that uh I have like
this the issue is that uh I have like
one API that's returning structure data
one API that's returning structure data
and one that's returning flat data and
and one that's returning flat data and
they need to process it flat but then
they need to process it flat but then
return
structured uh I mean I can just like
structured uh I mean I can just like
Latin everything first right
actually I can just do yeah logits
actually I can just do yeah logits
logic. logr actions.
logic. logr actions.
viw
viw
batch minus
one right do
one right do
sum of
sum of
one and then I can do logits do
one and then I can do logits do
entropy do
entropy do
view
batch minus
batch minus
one do sum of
one and then I have to
one and then I have to
do
do
[Music]
[Music]
Dot
View that's kind of complicated
could not
broadcast into the
shape
shape
really let's see what is going on with
this action gives 81
right log prob uh these are actually
right log prob uh these are actually
both supposed to be
both supposed to be
flapped but I don't need to view
flapped but I don't need to view
these wait do I need to view
these let's just make something work
these let's just make something work
first and then we'll uh we can clean it
up must match size of
tensor
really size of tensor
really size of tensor
a must match
slightly
slightly
awkward all just shape stuff I'm
awkward all just shape stuff I'm
following exactly what's going on with
following exactly what's going on with
this so I'm not just like randomly
this so I'm not just like randomly
changing stuff um I am following this in
changing stuff um I am following this in
my head though it's a little hard to
my head though it's a little hard to
explain it's easier to just do it and
explain it's easier to just do it and
show
show
you
shape dot shape yeah so
shape dot shape yeah so
problems.
problems.
shape interesting
shape interesting
so this is
so this is
actually evidently supposed to be
actually evidently supposed to be
flat that actually makes it easier
flat that actually makes it easier
right because entropy is probably also
right because entropy is probably also
supposed to be flat yes it is so I
supposed to be flat yes it is so I
actually that's very convenient I don't
actually that's very convenient I don't
need to reshape at all
need to reshape at all
all I should be able to do like
all I should be able to do like
this and then we'll see what
happens ah that actually does work so I
happens ah that actually does work so I
was a little I was getting a little bit
was a little I was getting a little bit
annoyed by the amount of API Jank that
annoyed by the amount of API Jank that
was going on but with that deleted it's
was going on but with that deleted it's
not bad does this
not bad does this
train ah this does train
awesome the reward is going down not
awesome the reward is going down not
up but uh it does actually
train
cool now we will go get some reasonable
cool now we will go get some reasonable
settings and we will try to actually
settings and we will try to actually
solve this thing
this is what I used for cart
this is what I used for cart
pole this seems suitable
pole this seems suitable
for racing as
well uh well I guess not racing we're
well uh well I guess not racing we're
not doing this anymore right it's
not doing this anymore right it's
suitable
suitable
[Music]
[Music]
for
for
continuous cart Pole or continuous uh
continuous cart Pole or continuous uh
Mountain
Mountain
car num M's M batch size so
car num M's M batch size so
64 synchronized
64 synchronized
environments let's see if it's fast
environments let's see if it's fast
enough to run single
core not all that fast but reasonable
core not all that fast but reasonable
enough i' I
enough i' I
guess very weird
guess very weird
how the dashboard starts updating very
how the dashboard starts updating very
rapidly all of a
rapidly all of a
sudden dashboard's not supposed to do
that
that
well no big deal
is there a discreet version of mountain
is there a discreet version of mountain
car that I contest
car that I contest
against let's
against let's
see that would
see that would
be most
appreciated Mountain car continuous this
appreciated Mountain car continuous this
seems to imply that there is a
discreet let's go look at the gymnasium
Source uh there
is there is a mountain
is there is a mountain
car and it
car and it
appears that it
appears that it
has discrete
has discrete
actions so let's go add this to the uh
actions so let's go add this to the uh
non
non
continuous control one where we go
continuous control one where we go
classic control let's just
add these aliases are dumb let's add
add these aliases are dumb let's add
like this
like this
and then let's
and then let's
do mountain
do mountain
car and then M name is Mountain car B
0 car and then this needs to be Mountain
0 car and then this needs to be Mountain
car
car
continuous so if we run this
continuous so if we run this
version unknown
version unknown
environment that is my bad
this is a dumb error
this is a dumb error
message I think I should just get rid of
message I think I should just get rid of
it this should just be gym. gynasium
it this should just be gym. gynasium
doake
cannot access free variable
cannot access free variable
entropy that is
entropy that is
very
odd did I break
odd did I break
something entropy where is
entropy I have to actually look at my
entropy I have to actually look at my
source code I don't know what happened
source code I don't know what happened
here something weird happened
in Sample logic something weird
in Sample logic something weird
happened uh I Define
entropy ah it is
a it's should be logits
entropy I was overwriting the function
name
name
cool so now we do have Mountain
cool so now we do have Mountain
car as an
environment and it seems to be very
environment and it seems to be very
rapidly not learning anything
rapidly not learning anything
let's figure out what is going on with
that it's got episode Yep this is all
that it's got episode Yep this is all
very
reasonable something in the config
maybe start by giving it some reasonable
maybe start by giving it some reasonable
scale
something very odd is happening with
something very odd is happening with
this
dashboard
if ah so this is um
that's something I'll will have to fix
that's something I'll will have to fix
there's no big
deal return updates
with that's fine no big deal with
that now the real question is
that now the real question is
why is this slow
Mountain
Mountain
car real question why is this slow
right appears to just be getting worse
right appears to just be getting worse
and
worse and the episodes keep getting
worse and the episodes keep getting
longer so it looks like this is never
longer so it looks like this is never
resetting so I'm guessing this is one of
resetting so I'm guessing this is one of
those obnoxious
those obnoxious
environments that requires a Time step
environments that requires a Time step
Horizon to be
useful I swear I saw those arguments
useful I swear I saw those arguments
just a moment
ago reward
ago reward
there's got to be
there's got to be
a
a
clip a horizon or something
right fix time
Horizon for Mountain
car though I don't see it here is it
car though I don't see it here is it
possible that I'm not actually
possible that I'm not actually
interpreting truncated
correctly tch. SU
let's see if we're actually ever getting
let's see if we're actually ever getting
a done or truncated
signal and this is a numpy sum not a
signal and this is a numpy sum not a
torch
sum so let's figure out what is going
sum so let's figure out what is going
wrong
wrong
here and it does look like I have a
sum and they actually they all all
sum and they actually they all all
say they all say
say they all say
truncated not terminated
truncated not terminated
truncated so possibly puffer is not set
truncated so possibly puffer is not set
up to handle truncated
up to handle truncated
correctly let's go take a look at
that async
reset if n
reset if n
DOD I'm using N.D to detect
DOD I'm using N.D to detect
resets
resets
slash done
slash done
self. okay
so self.
so self.
ah big mistake right here done or
ah big mistake right here done or
truncated
good bug fix for the
day and then I do have a self. done here
day and then I do have a self. done here
do I not in the multi-agent version as
do I not in the multi-agent version as
well
and probably this is a property
done probably this is good enough for
done probably this is good enough for
now
way way
better so now I can actually
better so now I can actually
see uh that this is working correctly
see uh that this is working correctly
that this is truncating correctly at
that this is truncating correctly at
least the value loss is through the
least the value loss is through the
roof which doesn't really make much
roof which doesn't really make much
sense whatsoever
value law should never be that
high and it doesn't appear to be
high and it doesn't appear to be
decreasing either which once it's that
decreasing either which once it's that
large it's probably just learning in
large it's probably just learning in
stability the question is why is it that
ridiculous I'm going to open up the
ridiculous I'm going to open up the
default model to look at the data right
default model to look at the data right
before
it goes into the
network to see what it
is this looks fine
right yeah so this is reasonably
right yeah so this is reasonably
conditioned data there's nothing wrong
conditioned data there's nothing wrong
with this
data this is
data this is
fine uh I think that it is quite
fine uh I think that it is quite
possible that we do need these clean our
possible that we do need these clean our
all wrappers you know it might be the
all wrappers you know it might be the
case
that normalize
reward very very
weird is this the environment I think it
is now this is half cheetah which is
is now this is half cheetah which is
more
more
complicated
um it's funny that they have this
um it's funny that they have this
flatten op as
well let's just
well let's just
do I don't think we have particularly
do I don't think we have particularly
poor conditioned anything except the
poor conditioned anything except the
position data is
position data is
probably the position data is probably
probably the position data is probably
quite bad
right so let's go figure this
out yikes
don't think we need this
one don't think we need this one either
one don't think we need this one either
I don't even know if we need this
I don't even know if we need this
normalized to be
normalized to be
honest
um I think we get rid of this
um I think we get rid of this
and let's just do let's just try this
and let's just do let's just try this
and see what
happens value loss
happens value loss
explodes
explodes
okay if I clip to
minus5 Value loss is still
minus5 Value loss is still
exploded very weird maybe I do need the
exploded very weird maybe I do need the
normalize you know let's try the let's
normalize you know let's try the let's
try the
try the
originals except for this one reward
originals except for this one reward
wrapper this do
anything right
so they forgot to modify the space of
so they forgot to modify the space of
course they did
I can clip it right I can clip the
observations very very weird the
observations very very weird the
mountain car is this odd
going to need to see what data
going to need to see what data
is producing
this value loss should be prediction of
this value loss should be prediction of
the
the
reward so if I just clip the reward from
reward so if I just clip the reward from
negative 1 to1 and I clip the OBS as
negative 1 to1 and I clip the OBS as
well what happens
still crazy high value
still crazy high value
loss this is not the continuous version
either am I missing
either am I missing
something learning rate too high
something learning rate too high
something like
something like
that maybe there are
well we don't really
have maybe hyper parameters for this
have maybe hyper parameters for this
maybe continuous controls just
maybe continuous controls just
like 3 e minus
Lambda very
Lambda very
interesting we'll
add what do we have our defaults what
add what do we have our defaults what
are our
are our
defaults these are all
defaults these are all
reasonable
um why would the value loss be that High
um why would the value loss be that High
Why would the value loss be that high
Why would the value loss be that high
actually let me make sure first of all
actually let me make sure first of all
that I'm not I just didn't break
that I'm not I just didn't break
something right it's also possible
n cart pole definitely does exist so I'm
n cart pole definitely does exist so I'm
not sure what's up with
that oh I need n
that oh I need n
name maybe cartp
b0 ah so I did break something something
b0 ah so I did break something something
maybe this swing up does this works like
maybe this swing up does this works like
the reward is going up here um
the reward is going up here um
but the value loss is
nuts possibly that could just be the
nuts possibly that could just be the
reward
scale yeah because you can see that this
scale yeah because you can see that this
is learning
not very efficiently but it is
learning
right Mountain car let's see if this is
right Mountain car let's see if this is
going to optimize
whatsoever no it does not
okay let me see if I can find hyper
parameters you only get a positive
parameters you only get a positive
reward when you reach the
top is that how it works
so this could simply be entropy right
d
d
[Music]
m's give it an entropy of
0.05 and we will see whether this gets
0.05 and we will see whether this gets
it
anything it's incredibly obnox
anything it's incredibly obnox
just environment
here let's
see that's
funny he added founder as previously
unemployed this has done okay
she
we'll respond to this
later this actually forces you to write
later this actually forces you to write
bad code this is Chris Lou is one of the
bad code this is Chris Lou is one of the
people who is like I respect incredibly
people who is like I respect incredibly
and writes good code so the fact that
and writes good code so the fact that
the RL code is a mess is enti due to
the RL code is a mess is enti due to
Jack like the pure Jax RL library has
Jack like the pure Jax RL library has
seven deep nested functions you cannot
seven deep nested functions you cannot
tell me that that is a reasonable thing
tell me that that is a reasonable thing
to
do what is wrong with this control lamp
do what is wrong with this control lamp
um doesn't get any rewards it is sparse
um doesn't get any rewards it is sparse
and it's a sparse janky en as
well lunar land Ander one is too
slow their continuous reward version of
slow their continuous reward version of
this
I'm just going to reply to this now
I'm just going to reply to this now
while I think about the other thing
sh
for e
think
hold on what did he he wrote another
hold on what did he he wrote another
thing and it's not showing
me
e
e
e
e
e
e
e
e
e
e e
okay there we go that's a reasonable
reply for
there you
go what
Russ C is a great
helper rust is not a bigger in time
helper rust is not a bigger in time
investment for top not results it's the
investment for top not results it's the
same thing
was it
third we're going to be inflammatory
third we're going to be inflammatory
today
today
because I am sick of engaging
because I am sick of engaging
respectfully with things that are
respectfully with things that are
screwing up the
field like the tool stack has literally
field like the tool stack has literally
just gotten worse we've had 10 years to
just gotten worse we've had 10 years to
fix this and we've made it worse like
fix this and we've made it worse like
good
job okay
um so I basically the thing that I came
um so I basically the thing that I came
to while I was writing that was I either
to while I was writing that was I either
need a a dense reward version of this
need a a dense reward version of this
just for test or I'm going to have to
just for test or I'm going to have to
find something else and it would be way
find something else and it would be way
nicer to have a dense reward version of
nicer to have a dense reward version of
this
so does it tell you
the can I just like do
the can I just like do
this yeah I can write a quick wrapper
right for
uh can I just do like
what is it box or
Mountain eum
Mountain eum
wrapper and all I need to Define here
wrapper and all I need to Define here
is the uh step function
step
so
so
reward plus equal 1 *
reward plus equal 1 *
ABS
ABS
this let's see if that does anything
now
something is very wrong with this
environment that is not training
environment that is not training
whatsoever
whatsoever
um I'm trying to think what I can do
um I'm trying to think what I can do
with
with
this this is like a very very simple
this this is like a very very simple
environment
position is greater than or equal to
045 weird
maybe it needs to
be no this
H very
weird e
I'm trying to think what would be wrong
I'm trying to think what would be wrong
with this thing a very simple
with this thing a very simple
environment well it's kind of deceptive
environment well it's kind of deceptive
in the sense that like it seems like
in the sense that like it seems like
it's very
it's very
simple
simple
um can I play it is that a thing I can
do
do
eval uh
eval uh
render
render
human does it have this
doesn't seem to work correctly
right uh I don't think it's possible to
right uh I don't think it's possible to
get it to swing
get it to swing
up what the heck
the key controls are not letting me do
the key controls are not letting me do
this it's kind of just like doing
this it's kind of just like doing
whatever it
wants oh wait this is a random policy
wants oh wait this is a random policy
that's why I'm not actually playing
it let's see if
it let's see if
um if I like open this up
96 okay let's just go check
96 okay let's just go check
something is like bizarre here the
something is like bizarre here the
rewards are just screwed right like
rewards are just screwed right like
something is something is bizarre
something is something is bizarre
here okay so
here okay so
ooh okay so the rewards are
ooh okay so the rewards are
not this is
0.05 okay so this it's not sent
0.05 okay so this it's not sent
it's
it's
weird let's go figure out where where
weird let's go figure out where where
this is supposed to
be position along the X AIS is
the position
the position
is a uniform random value in .06 to .04
is a uniform random value in .06 to .04
so negative .05 is
so negative .05 is
the uh the
the uh the
default so let's
default so let's
do OBS minus
o 0.5 right
okay
zero
zero
who
0.1 looks like the bottom is
0.1 let me see does it make it better or
0.1 let me see does it make it better or
worse
what the heck is
what the heck is
the what the heck is the
center what is what is the
center what is what is the
center pi/ 2
huh
position
position
what what is the center of this stupid
environment like what is so 320
okay it's
ridiculous can I get it from the
ridiculous can I get it from the
velocity
velocity
here- 1 *
here- 1 *
Force cosine of three
Force cosine of three
times the position
times the position
what the heck does that make the
center cosine of
center cosine of
0o is
0o is
one so I don't know minus self that's a
one so I don't know minus self that's a
weird maybe I can just figure out the
oh maybe if I can figure out where it's
oh maybe if I can figure out where it's
drawing the
sign right so it's Pi game but it's
sign right so it's Pi game but it's
going to
going to
draw it's going to draw the sign wave
draw it's going to draw the sign wave
somewhere
right rotate
right rotate
[Music]
[Music]
red
well okay so they're not going to give
well okay so they're not going to give
me
me
um a
um a
reasonable
thing
thing
reset just custom reset
reset just custom reset
bounds I would really expect it to be
bounds I would really expect it to be
0.05
no
no
[Music]
[Music]
0.1
0.01 let's just say what the let's just
0.01 let's just say what the let's just
see what the
see what the
the position is
Right
negative yeah negative .05
right so maybe it's going to be
right so maybe it's going to be
ABS plus
0.5 like this
that looks
that looks
good and
good and
uh yeah let's just let's just see what
uh yeah let's just let's just see what
happens if I do this
15 well now it trains
right let's just do D-
right let's just do D-
Baseline we'll let this train for a
Baseline we'll let this train for a
couple minutes and then we'll uh we'll
couple minutes and then we'll uh we'll
see if it looks like it solved the
see if it looks like it solved the
en screw your reward function
e
I mean this was really like I wrote this
I mean this was really like I wrote this
article in maybe 20 30 minutes it was
article in maybe 20 30 minutes it was
like a quick I am mad at Jack and I want
like a quick I am mad at Jack and I want
to talk about
it one
good
for e
okay we got our Mountain
okay we got our Mountain
car let's do
eval and let's see how it
goes
goes
whoop
two doesn't look like it's very
good
good
really oh did I add entropy wait wait I
really oh did I add entropy wait wait I
screwed it up I I totally screwed it up
screwed it up I I totally screwed it up
um I added like
way yeah see this this entropy needs to
way yeah see this this entropy needs to
go
go
away okay I got to train a new one hope
away okay I got to train a new one hope
hopefully this is way
better yeah
immediately this might have to be more
immediately this might have to be more
than 500k as well we'll
than 500k as well we'll
see
see
31 two
going up
quickly I was supposed to this was
quickly I was supposed to this was
supposed to fix the flashing thing
but
but
six 35 okay it's stuck at it looks like
six 35 okay it's stuck at it looks like
it is roughly uh
it is roughly uh
stuck here so it's leveled off in
stuck here so it's leveled off in
training
35 36 something about there at least
35 36 something about there at least
with the current hyper prms
I don't know why it's just going up this
I don't know why it's just going up this
side Hill right here right
H
interesting really didn't want to be
interesting really didn't want to be
spending a whole bunch of time on
spending a whole bunch of time on
Mountain car of all things
today um I guess I can just go run the
today um I guess I can just go run the
continuous one though
continuous one though
right like I could just go run mount car
continuous
continuous
car
continuous oh wait I uh I have two
continuous oh wait I uh I have two
separate M's right I need to adjust the
separate M's right I need to adjust the
the rewards
we do clip
action uh we don't need these transform
action uh we don't need these transform
observations as we found out right we
observations as we found out right we
just need clip action
everything else should be
everything else should be
good and this needs to
be hey Aiden
welcome we are currently attempting to
welcome we are currently attempting to
make continuous control work but I'm
make continuous control work but I'm
having difficulty finding any remotely
having difficulty finding any remotely
reasonable environments that we can just
reasonable environments that we can just
use to test which is kind of sad uh I
use to test which is kind of sad uh I
might actually just have to write
one interestingly
one interestingly
this the reward skill is completely
this the reward skill is completely
different on uh
different on uh
on this one
on this one
here oh I think the OBS might be
here oh I think the OBS might be
different
different
right well we'll see in just a moment if
right well we'll see in just a moment if
it learned if it learned anything I
it learned if it learned anything I
don't think it did but maybe the value
don't think it did but maybe the value
loss is exploding I can see on the right
loss is exploding I can see on the right
which is probably not
which is probably not
good uh
good uh
so continuous
such a simple environment as well it's
such a simple environment as well it's
just like
Jank oh it looks like it's doing
Jank oh it looks like it's doing
something right kind
something right kind
of hard to
of hard to
say that looks a little better than
say that looks a little better than
random oh yeah yeah that's definitely
random oh yeah yeah that's definitely
better than
better than
random oh wait hey look at
that yay continuous control
it's not
it's not
amazing it's not amazing and I actually
amazing it's not amazing and I actually
probably should just in case it's like
probably should just in case it's like
different I should run this with a
different I should run this with a
random policy just for comparison right
random policy just for comparison right
yeah let's run this with a random policy
yeah let's run this with a random policy
just to make sure I'm not uh completely
just to make sure I'm not uh completely
missing
this so this is a random policy
okay no the random policy is actually
okay no the random policy is actually
just as good so yeah this thing is not
just as good so yeah this thing is not
learning much let's figure out
why I feel like cheating on
why I feel like cheating on
that the cart Pole or the what the the
that the cart Pole or the what the the
car
M oh the fact that like just not running
M oh the fact that like just not running
the Baseline
uh OBS are the
same yeah OB should be the same
same yeah OB should be the same
here so this should actually just be the
here so this should actually just be the
same exact thing for
training sure what have you been do
training sure what have you been do
doing an
ml
ml
sh this thing is going to bother me
sh this thing is going to bother me
isn't it
rewards too big
maybe let's see
okay that's
eval random
policy hold on I'm trying to figure this
policy hold on I'm trying to figure this
out
starts at
16 15 okay so this is not optimizing
right oh wait
no
no
17 well I changed the reward scale here
17 well I changed the reward scale here
I shouldn't do
I shouldn't do
that oh wait I just saw it I just saw it
that oh wait I just saw it I just saw it
be better right
right let's let's rerun this I want to
right let's let's rerun this I want to
see what the I just want to see the
see what the I just want to see the
training curves on this actually you
training curves on this actually you
know that that's all I need cuz I need
know that that's all I need cuz I need
to just know if this is optimizing or
to just know if this is optimizing or
not and uh if it's optimizing then I can
not and uh if it's optimizing then I can
I can go from
there
what not sure what your on about there
what not sure what your on about there
Aiden uh I'm trying to figure this rlm
Aiden uh I'm trying to figure this rlm
out
um is this
it yeah this is the right one
it yeah this is the right one
so okay this is actually
so okay this is actually
optimizing this is
optimizing this is
optimizing um we'll need some benchmarks
optimizing um we'll need some benchmarks
and stuff and probably I should just
and stuff and probably I should just
make a little toy EnV to play with um
make a little toy EnV to play with um
that has discreet and continuous because
that has discreet and continuous because
this is a disaster here um so we can do
this is a disaster here um so we can do
that
that
tomorrow I've only got well I've got an
tomorrow I've only got well I've got an
hour I've got an hour now I could make a
hour I've got an hour now I could make a
quick continuous environment
right yeah let's do that I'm going to
right yeah let's do that I'm going to
take I'll be back in 1 minute I got to
take I'll be back in 1 minute I got to
just restro real quick and think about
just restro real quick and think about
what type of environment I want to make
what type of environment I want to make
real quick
e
e e
oops there's the mic okay we're going to
oops there's the mic okay we're going to
make a very simple uh continuous control
make a very simple uh continuous control
environment um that is going to just
environment um that is going to just
be super basic uh test it's going to be
be super basic uh test it's going to be
like can you steer a little ship to a
like can you steer a little ship to a
Target that's it
Target that's it
let's let's go start on that because
let's let's go start on that because
this environment is Jank and if I make
this environment is Jank and if I make
an M I know I'm going to be able to have
an M I know I'm going to be able to have
something that's reasonable
I just
I just
need
continuous okay um go grab some starter
continuous okay um go grab some starter
code from snake maybe
code from snake maybe
or dot
dotn I'd probably just grab all this
dotn I'd probably just grab all this
right
this is a
this is a
gymnasium environment so it's going to
gymnasium environment so it's going to
be substantially simpler than this
right
right
yes I think I
actually let's grab
actually let's grab
ocean like one of these
maybe goal of this is to be quick
so
continuous and we're going to do
continuous and we're going to do
no args don't need
any uh needs to
have observation space which is going to
have observation space which is going to
be
be
a gymnasium spaces
dot
dot
box which is going to contain
10 high will be
10 high will be
10 or no it can be let's make it
10 or no it can be let's make it
reasonable negative 1: one it's going to
reasonable negative 1: one it's going to
have four things in it right it's going
have four things in it right it's going
to have your
to have your
position Target position and so on and
position Target position and so on and
so forth and we actually
so forth and we actually
need uh
discretize it's going to be false if
discretize it's going to be false if
discretize
discretize
action space is going to be a discrete
action space is going to be a discrete
of
of
four else it's going to be gymnasium do
four else it's going to be gymnasium do
spaces. boox of
spaces. boox of
two
two
okay and then render mode is going to be
okay and then render mode is going to be
RGB it's going to be human let's do
RGB it's going to be human let's do
human render mode because I'm not sure
human render mode because I'm not sure
how I would do this with RGB array
um so we're going to
um so we're going to
do self
dot pause is going to
be here self. State equals z of
be here self. State equals z of
four um
four um
we can actually do numpy
we can actually do numpy
random let's just make the numpy random.
random let's just make the numpy random.
Rand or does this function do what I
think
think
or Min =
or Min =
1 =
1 numpy random Rand
okay we'll just have to do uh we'll have
okay we'll just have to do uh we'll have
to multiply that's fine so it's just
to multiply that's fine so it's just
going to be 2 * this minus one 2 * this
going to be 2 * this minus one 2 * this
-
-
one so this gives you uh negative-1 to
one so this gives you uh negative-1 to
one
right and then I'm going to just
right and then I'm going to just
write um
write um
position X X Y Target X Target
position X X Y Target X Target
y
okay and then it's going to return self.
okay and then it's going to return self.
State now the
State now the
action is going to
be
um X is going to be action zero
Y is going to be action we also need in
Y is going to be action we also need in
addition to State we need
addition to State we need
self. velocity is going to be two in
self. velocity is going to be two in
fact this should be on the state
fact this should be on the state
shouldn't
shouldn't
it this should
it this should
be part of the state so we're going to
be part of the state so we're going to
do self.
do self.
state
state
of uh 2 to 4 equal
Z pause X pause y Bell X
Z pause X pause y Bell X
bell
bell
y
okay
State we're going to add the Excel to
State we're going to add the Excel to
the velocity
St
St
of
of
zero is going to be equal
zero is going to be equal
to yeah this is
fine then
if now we need a distance
if now we need a distance
function so we
do
do
zero we
do pause
do pause
X okay
if
if
x
minus equal m is less than 0.1
no 0.05 I
no 0.05 I
think then
we then we get uh a reward
right and actually we don't even need to
right and actually we don't even need to
do this dist is going to be equal
to yeah this and then we're going to do
to yeah this and then we're going to do
1 minus disc is going to be the reward
1 minus disc is going to be the reward
reward equal 0.1 * 1 minus dist that's
good and we will mess with the rewards
good and we will mess with the rewards
and stuff after but this
and stuff after but this
is this is very
is this is very
reasonable and then this doesn't need
reasonable and then this doesn't need
any infos because it will just use the
wrapper and actually this M is so simple
wrapper and actually this M is so simple
that I can just put it into ocean I
that I can just put it into ocean I
think
think
right it is going to technically need a
right it is going to technically need a
renderer which is going to be a little
renderer which is going to be a little
bit more code so I think I'll leave it
bit more code so I think I'll leave it
like this for now
like this for now
um I would like to write a little
um I would like to write a little
renderer real
quick so let's do that
I kind of want to go grab the rayb one
I kind of want to go grab the rayb one
right
I did forget to grab shake today I need
I did forget to grab shake today I need
to go get a
to go get a
shake uh I will I'll give this five
shake uh I will I'll give this five
minutes and then I'm going to go do that
minutes and then I'm going to go do that
real
quick
quick
let's let's just grab this oh this is
let's let's just grab this oh this is
dated let's get the uh the snake one
dated let's get the uh the snake one
from snake snake yeah that doesn't even
from snake snake yeah that doesn't even
need to be there that file should be
need to be there that file should be
deleted
deleted
let's grab the RB client from snake and
let's grab the RB client from snake and
then it's going to be substantially
then it's going to be substantially
simpler than
this
right RB client is going to
right RB client is going to
be doesn't need any of this
be doesn't need any of this
stuff
um oh it does need width I
um oh it does need width I
doesn't
it and then uh size I
guess
guess
1080 80 height is going to be equal to
1080 80 height is going to be equal to
720 that size is equal 100 like
720 that size is equal 100 like
this okay and it window is going to be
this okay and it window is going to be
width
height uper
height uper
lib simple
lib simple
continuous Target FPS is going to be
60 this code is fine
this code is
fine uh and then this needs to
fine uh and then this needs to
be let's
be let's
do pause X pause y Target X Target
do pause X pause y Target X Target
Y and we don't need any of
Y and we don't need any of
this RL do
this RL do
draw rectangle
it's going to be
it's going to be
um there's
Circle yeah there
is of course there
is Center X Center y radius color
is Center X Center y radius color
perfect so we
perfect so we
do uh Center
do uh Center
X
X
so pause
so pause
x y and then we're going to
x y and then we're going to
do uh
do uh
255 255 is going to be the
color and we're going to do
color and we're going to do
Target R and then we are going to use
blue
blue
nice and this background
nice and this background
color
color
is let's go grab the puffer
color I should have this memorized
there's the puffer color I here it is
there's the puffer color I here it is
624 this is
624 this is
the the color that I use for puffer for
the the color that I use for puffer for
everything so we will just
everything so we will just
do this
color and we will fix this uh fix
color and we will fix this uh fix
whatever needs to be fixed with this and
whatever needs to be fixed with this and
this should be good we have to add a
this should be good we have to add a
couple last things which is going to be
couple last things which is going to be
The
Binding if name
Binding if name
equals
equals
continuous make
continuous make
continuous and we probably just want
continuous and we probably just want
something that looks very similar
something that looks very similar
to make
to make
continuous doesn't need any of this
continuous doesn't need any of this
we're going to do discretize
we're going to do discretize
discretize false
discretize false
and then ocean.
and then ocean.
continuous perfect now all we need to do
continuous perfect now all we need to do
is add a binding
is add a binding
to the config for
to the config for
this
ocean ocean what is this is this
ocean ocean what is this is this
ocean grid
we'll just add continuous here I
we'll just add continuous here I
guess
continous okay Python and
continous okay Python and
continuous mode
continuous mode
eval
yeah ocean. ocean has no continuous
right
continuous from do continuous import
continuous box has no attribute
continuous box has no attribute
n right so this is now the now we're
n right so this is now the now we're
getting into a limitation of the policy
we're going to go real quick uh
we're going to go real quick uh
into for we're going to go real quick
into for we're going to go real quick
into
into
this uh
this uh
from for. Models import
from for. Models import
default
policy so I cannot commit any of this
policy so I cannot commit any of this
until I fix things here but that's
until I fix things here but that's
okay not broadcast input from shape six
okay not broadcast input from shape six
into shape
four right because I I forgot to update
four right because I I forgot to update
the the space def which is
the the space def which is
fine this is Space
six not implemented
six not implemented
error render and close
error render and close
Okay uh let's Implement these
up to
up to
client client is
client client is
none if soft. client is none then soft.
none if soft. client is none then soft.
client is going to be this RB
client that's cool
right integer is
required so let's
do yes we have to do a few things here
do yes we have to do a few things here
so what we're going to do
is pause xal
is pause xal
int time s.
int time s.
width let's do this
width let's do this
normal object is not
iterable should be continuous so this
iterable should be continuous so this
should not be being
should not be being
triggered um
triggered um
[Music]
forward
forward
so the goal here is to just have a
so the goal here is to just have a
really simple test
really simple test
en
en
um something is screwy with
this normal object is not iterable what
this normal object is not iterable what
what could that possibly be
right
right
uh Frameworks cleaner
all should be uh continuous
here has attribute policy is continuous
here has attribute policy is continuous
right
you
see wait
what
what
oh this is policy. policy right
again this is just a
hack yeah this is a just a quick hack
hack yeah this is a just a quick hack
and policy. policy okay we're not going
and policy. policy okay we're not going
to be shipping this code this is just we
to be shipping this code this is just we
need to get something working here that
need to get something working here that
that was the goal for
that was the goal for
today action spaces do not match ve
today action spaces do not match ve
action space why
action space why
not uh actions do not match action
not uh actions do not match action
spaces spefic specifically the issue
spaces spefic specifically the issue
rtion continuous
rtion continuous
continuous what do I have the action
continuous what do I have the action
specified
specified
as negative one and
one shut up about my Vim theme
Noah this is the best Vim theme
actions do not match action space yeah
actions do not match action space yeah
this needs a clip this needs a a clip on
it
it
uh continue classic control
right
here this where I want
here this where I want
it probably
it probably
here yeah
that's
fine continuous. reset got unexpected
fine continuous. reset got unexpected
keyword options right that's the new
API continuous
API continuous
has self. State few last bugs
holy okay that's way too fast
holy okay that's way too fast
um let's figure out why that is so
fast these also are supposed to be
fast these also are supposed to be
circles
let's
see oh because I set the the frame rate
see oh because I set the the frame rate
target to be way
target to be way
too way too high
too way too high
duh
um and the velocity to be way too fast
um and the velocity to be way too fast
for 60 FPS right like 10
for 60 FPS right like 10
FPS and
then the actual
then the actual
space is going to
be 1 *
be 1 *
action or 0.01 times action well we'll
action or 0.01 times action well we'll
figure out what looks reasonable in a
figure out what looks reasonable in a
second
right draw a circle expected right
right draw a circle expected right
because you need a
is this just resetting constantly what's
is this just resetting constantly what's
going
on oh well this is returning true for
on oh well this is returning true for
some reason that's
some reason that's
dumb um
and so if dist is less than 0.1 or
and so if dist is less than 0.1 or
actually we'll just do done equals dist
actually we'll just do done equals dist
less than
less than
.1 self dot here self dot tick tick is
.1 self dot here self dot tick tick is
equal to
equal to
zero uh self.
zero uh self.
tick uh
tick uh
truncated equals
truncated equals
uh. take greater
uh. take greater
than 100
done
done
rated technically it's terminal but we
rated technically it's terminal but we
don't care this is
fine not rendering
inbounds so first of all this size is
inbounds so first of all this size is
way too large this should be like
way too large this should be like
20 and with height
ah so this should
be
position this needs to be 1 + position
x
x
wait it's 1+
position x
no
no
0.5 plus position X over two
right
0.5 let's try
this still out of bounds it looks look
this still out of bounds it looks look
like um
like um
print what's going on
here literally order of Ops
okay we still have this gigantically
okay we still have this gigantically
negative value here oh uh if it goes out
negative value here oh uh if it goes out
of bounds we should just yeah we need to
of bounds we should just yeah we need to
do a bounce check on the that's an
do a bounce check on the that's an
environment
environment
error so
if
if
pause X less
pause X less
than what we say negative 1 to
one1 return self. State minus one reward
hey this is kind of a decent little
hey this is kind of a decent little
physics Sim Right Moves around kind of
smoothly yeah I mean we could make it
smoothly yeah I mean we could make it
way finer grain if we
way finer grain if we
want but this is this is what I wanted
right cool so now we get to train this
right cool so now we get to train this
uh and we need to discretize First we're
uh and we need to discretize First we're
going to do a discretize version so I
going to do a discretize version so I
need to actually Define that I should
need to actually Define that I should
make it human playable as
make it human playable as
well
um yeah I should make it
um yeah I should make it
human
human
playable
maybe we'll do that in a
maybe we'll do that in a
bit let's do first the main thing
bit let's do first the main thing
which is
discretize if self.
discretize if self.
discrete we
do
or
or
action is going to be greater than
zero we
zero we
[Music]
do cell
X
X
0.1 negative
there that's the discretized
version
version
discretized
through hey rain uh thank you yeah these
through hey rain uh thank you yeah these
are just chill streams I'm uh thinking
are just chill streams I'm uh thinking
I'm going to start I've been streaming
I'm going to start I've been streaming
on X but I'm now multi streaming it to
on X but I'm now multi streaming it to
YouTube I might start doing it with
YouTube I might start doing it with
twitch as well because this is fun and
twitch as well because this is fun and
uh the main one is my thesis defense
uh the main one is my thesis defense
that's more accessible and then the more
that's more accessible and then the more
technical one is the puffer lib 1.0
technical one is the puffer lib 1.0
which is a live demo of all the stuff
which is a live demo of all the stuff
I've been working on but more
I've been working on but more
technical for now I'm just doing live
technical for now I'm just doing live
Dev on puffer lib and all the various
Dev on puffer lib and all the various
things that are wrong with reinforcement
things that are wrong with reinforcement
learning trying to fix them
where is this EnV argument being
bound there should be an EnV AR
here old streams are backed up on X this
here old streams are backed up on X this
has only been this is a relatively new
has only been this is a relatively new
thing so the main thing is last week I
thing so the main thing is last week I
built the uh multi snake environment I
built the uh multi snake environment I
actually should do a video on that here
actually should do a video on that here
I'll show you real quick
I'll show you real quick
the uh the multi snake I I just did a a
the uh the multi snake I I just did a a
post on it um most of the stuff is on
post on it um most of the stuff is on
here because this is where most of the
here because this is where most of the
AI people are but I've been trying to do
AI people are but I've been trying to do
more you know more branching out of
stuff yeah so this this is the multi
stuff yeah so this this is the multi
snake environment that I made um this is
snake environment that I made um this is
can I expand this
can I expand this
whatsoever not really um
whatsoever not really um
this
this
is
is
4096 uh up to 4096 snakes in the same
4096 uh up to 4096 snakes in the same
environment and this simulation runs at
environment and this simulation runs at
14 million steps per second and trains
14 million steps per second and trains
reinforcement learning at 1 million
reinforcement learning at 1 million
steps per second so I've been working on
steps per second so I've been working on
Tech for high performance Sim and uh
Tech for high performance Sim and uh
working on then making this Tech apply
working on then making this Tech apply
to all of the reinforcement learning
Ms that's what I've been up to mainly
Ms that's what I've been up to mainly
yeah there's cool stuff going on
yeah there's cool stuff going on
reinforcement learning is uh upgrading
reinforcement learning is uh upgrading
very fast and then wait until you see
very fast and then wait until you see
the code for that snake and it's dead
the code for that snake and it's dead
simple it's like 220 lines of scyon and
simple it's like 220 lines of scyon and
uh 200 lines of python something like
uh 200 lines of python something like
that 450 is lines total built it from
that 450 is lines total built it from
scratch in 5 Days whole thing is
scratch in 5 Days whole thing is
streamed on X I might have to upload
streamed on X I might have to upload
those here I don't know how hard that
those here I don't know how hard that
would be if I can easily download them
would be if I can easily download them
from there but hey I'm going to be
from there but hey I'm going to be
making more environments like that live
making more environments like that live
anyways
it's pretty slow going you know it's
it's pretty slow going you know it's
it's not like an hour and it's done
it's not like an hour and it's done
right it's like 30 40 hours a stream for
right it's like 30 40 hours a stream for
something like that but not too
something like that but not too
bad easy enough to like check in every
bad easy enough to like check in every
couple days and see the progress or sit
couple days and see the progress or sit
down and actually learn some Dev if
down and actually learn some Dev if
that's what you're
into give the puffer Li a star on on uh
into give the puffer Li a star on on uh
GitHub if you would helps me out it's
GitHub if you would helps me out it's
basically all I ask all the stuff's open
source all right good night thanks for
source all right good night thanks for
stopping by
why are my nargs not showing up is the
question they should be getting bound so
question they should be getting bound so
this one
this one
here this missing
here this missing
name
name
no so really should be getting bound
but you know whatever we'll just
but you know whatever we'll just
discretize this way for
now right I also have to change
the if
the if
wait is
wait is
instance
instance
ah I need to
if not discretized then you clip the
actions has no attribute
actions has no attribute
discretize
descripti Okay cool so this is the exact
descripti Okay cool so this is the exact
same environment from before um but now
same environment from before um but now
it has a discreet
it has a discreet
mode so this is very important because
mode so this is very important because
what we can
do we can just YOLO this actually and
do we can just YOLO this actually and
see if it learns anything off the
bat
bat
H that's funny
does it just literally solve it
does it just literally solve it
instantly on the first
instantly on the first
settings in like 10
seconds I mean it wouldn't be surprising
right it's still pretty
funny okay mode eval
funny okay mode eval
Baseline
oops oh that's so funny is it learning
oops oh that's so funny is it learning
to not like get all the way to it
to not like get all the way to it
because
it's like getting there and then staying
it's like getting there and then staying
there CU I think that the way I have my
there CU I think that the way I have my
generalized Advantage estimation
generalized Advantage estimation
done yeah that's
done yeah that's
screwy that's actually a good uh
screwy that's actually a good uh
indicator though of a puffer Li thing I
indicator though of a puffer Li thing I
should
should
fix uh I'm going to just patch it here
fix uh I'm going to just patch it here
in the environment for now and then well
in the environment for now and then well
I'm going to just have to stream a bunch
I'm going to just have to stream a bunch
of random stuff this week is just going
of random stuff this week is just going
to have to be a lot of random fixes and
to have to be a lot of random fixes and
things to Puffer because there's so many
things to Puffer because there's so many
things that I've just like neglected
things that I've just like neglected
that need to be uh improved
that need to be uh improved
upon let me just double check my Twitter
upon let me just double check my Twitter
DMS because I have a meeting in uh a
DMS because I have a meeting in uh a
little bit and I want to make sure I'm
little bit and I want to make sure I'm
not missing
not missing
it like if the time is if somebody
it like if the time is if somebody
wanted to do earlier or
wanted to do earlier or
whatever uh nope looks like we're good
whatever uh nope looks like we're good
then I'll put this back let's see if we
then I'll put this back let's see if we
have angry
have angry
people in
let's see too far away from first
let's see too far away from first
party
party
[Music]
independently yeah Chris is good
independently yeah Chris is good
basically taught should be like power
P torch plus
scyon Sim demo with snake soon RL
wide compile time functions
all right that's
all
all
cool let's finish this
I think you need to get
I think you need to get
a big reward here
right done reward equals
right done reward equals
1.0 too
implementation
implementation
making uh agent
making uh agent
not
not
Target without a big reward
Target without a big reward
here that is actually pretty bad that's
here that is actually pretty bad that's
a big screw up on my part pretty
a big screw up on my part pretty
embarrassing one
embarrassing one
but whatever we'll get back to that soon
yeah there it
yeah there it
goes might need to run it a little
goes might need to run it a little
longer than uh we have currently
longer than uh we have currently
right let's just do a slightly better
right let's just do a slightly better
config
maybe slightly better config
maybe slightly better config
right gr we can
right gr we can
do uh
do uh
[Music]
ocean first of all does it work
now let's train it a little more it can
now let's train it a little more it can
have it can have a little bit more uh
have it can have a little bit more uh
SPS right and give it like a little bit
SPS right and give it like a little bit
more juice
let's give it like these where do we
let's give it like these where do we
put Mountain car these settings are good
put Mountain car these settings are good
right maybe 500k is too much but we do
right maybe 500k is too much but we do
continuous like this for 100k
continuous like this for 100k
right and then we'll do
like well we'll start with this
oops meant to run train
5.0 maybe any
better I'm sure that there are
better I'm sure that there are
parameters that solve this in like
30k let's see what this looks
30k let's see what this looks
like oop
nope still not
solved definitely learning something but
solved definitely learning something but
not solved
right might need to mess with the reward
right might need to mess with the reward
scales just a little
scales just a little
bit
bit
um yeah
negative one for going off
screen
two let's do like this
maybe of course the rewards now are
maybe of course the rewards now are
going to be scaled differently but
that's a little more promising right
yeah that's way
yeah that's way
better it Stills a little skittish about
better it Stills a little skittish about
actually hitting the uh the target
actually hitting the uh the target
though goes right to it and then it's a
though goes right to it and then it's a
little skittish about actually hitting
it cuz see it's getting reward by
it cuz see it's getting reward by
standing here
but it should get a yeah it gets a big
but it should get a yeah it gets a big
reward when it hits
it let's just set a couple more
parameters let's do I don't know like
parameters let's do I don't know like
probably
probably
uh gamma's probably like way too high
right okay so this is what it looks like
right okay so this is what it looks like
now uh let's retrain
it oh yeah look at that that's so much
it oh yeah look at that that's so much
better
right
maybe and you get stuck
might be
worse oh
worse oh
no this is way better yeah it it goes
no this is way better yeah it it goes
past occasionally it like misses so it's
past occasionally it like misses so it's
not perfect but it's pretty good
not perfect but it's pretty good
right
right
boom simple and environment little quick
boom simple and environment little quick
test
right now let's go do the uh let's go do
right now let's go do the uh let's go do
the the other version
discretize we're going to do false here
discretize we're going to do false here
and we're going to
and we're going to
do mod green D- Baseline
does appear to be learning but much
does appear to be learning but much
worse than the uh the other case
right so once we made it
continuous yeah this is way worse right
it's basically learn to not go off the
screen there any reason it would be
worse let's just give it some more uh
worse let's just give it some more uh
let's give it some more time
let's give it some more time
steps as a sanity
right oops not this
right oops not this
one so I have to leave very soon I want
one so I have to leave very soon I want
to just have one thing to
post doesn't look
stable very high
stable very high
entropy very very high entropy right
yeah what's wrong with the
yeah what's wrong with the
entropy like I'm seeing it's doing okay
entropy like I'm seeing it's doing okay
on some of
on some of
these entropy starts off really
high stay is very high as
high stay is very high as
well well this is perfect though because
well well this is perfect though because
I have uh I have the ability to check
I have uh I have the ability to check
this versus the discreet
case what is the entropy
here
here
five starts at five and goes down
whereas in the continuous
case search at
14 now I have to look at I have to look
14 now I have to look at I have to look
at some stuff
logit
entropy
sample yeah
uh three
uh three
times if I just do like 0.3 times would
times if I just do like 0.3 times would
this do
it starts going
up should not going up should be going
down
down
interesting okay last last thing I'm
interesting okay last last thing I'm
going to probably have time to try
oops
and zero we do zero
entropy zero entropy so now if it goes
entropy zero entropy so now if it goes
up it's just because the optimization is
bad still goes up
looks like this is really not
working did I make any
mistakes it's
possible let's see how Costa
I forgot how uh let's see how cost it
I forgot how uh let's see how cost it
does
it let's
do I'm going to have to end stream in a
do I'm going to have to end stream in a
second here here I just want to see if
second here here I just want to see if
there's like an obvious
bug he uses standard
bug he uses standard
deviation one for the value
function
okay actor mean
okay actor mean
has 0.01 this is fine
and then the decode right
here mean of the
here mean of the
hidden log standard
hidden log standard
deviation expand as
mean this is X of log standard
mean this is X of log standard
deviation you have normal of action
deviation you have normal of action
mean and into action standard deviation
mean and into action standard deviation
which is
here and then you
here and then you
return probs and
value and then you do problems. log
value and then you do problems. log
probob action sum entropy sum yeah this
probob action sum entropy sum yeah this
all looks correct
all looks correct
um okay well I'll have to keep going on
um okay well I'll have to keep going on
this tomorrow continuous control Jank um
this tomorrow continuous control Jank um
I might come back in the evening we'll
I might come back in the evening we'll
see uh I usually go to bed pretty early
see uh I usually go to bed pretty early
so maybe not but there will be stuff to
so maybe not but there will be stuff to
do anyways I've got uh meeting in 20 so
do anyways I've got uh meeting in 20 so
plan for tomorrow roughly speaking is
plan for tomorrow roughly speaking is
Tuesday Wednesday yeah plan for tomorrow
Tuesday Wednesday yeah plan for tomorrow
is going to be
is going to be
to uh stream on this fix continuous uh
to uh stream on this fix continuous uh
continuous integration get this m tested
continuous integration get this m tested
try maybe a couple of other things with
try maybe a couple of other things with
this start thinking about more
this start thinking about more
substantial continuous M I don't want to
substantial continuous M I don't want to
go too far down that rabbit hole just
go too far down that rabbit hole just
yet maybe do some cleanup stuff for
yet maybe do some cleanup stuff for
puffer to fix some just general stuff um
puffer to fix some just general stuff um
and I've got some experiments that are
and I've got some experiments that are
running in the background while I'm
running in the background while I'm
doing this type of work so that's all
doing this type of work so that's all
said okay uh well thank you and I will
said okay uh well thank you and I will
be back tomorrow bye

Kind: captions
Language: en
hello I think this is
hello I think this is
live second day using R stream been
live second day using R stream been
going pretty well so
going pretty well so
far let me make sure everything is set
far let me make sure everything is set
up
correctly okay yep this works that's
correctly okay yep this works that's
nice and then we will check YouTube as
nice and then we will check YouTube as
well
and we're
and we're
live
live
10:54 so this should be
10:54 so this should be
live uh says
streaming cool it
streaming cool it
works so we're going to be doing a
works so we're going to be doing a
couple of things
today first
today first
thing is uh I was meant to have a call
thing is uh I was meant to have a call
with the wand be guys like last week
with the wand be guys like last week
early last week so that they could look
early last week so that they could look
at carbs and maybe integrating it
at carbs and maybe integrating it
natively which would be god tier
natively which would be god tier
for reinforcement learning for sure but
for reinforcement learning for sure but
also for like llm people and stuff would
also for like llm people and stuff would
be an awesome feature so thanks to imbw
be an awesome feature so thanks to imbw
AI for open sourcing that and I've been
AI for open sourcing that and I've been
using it quite a
using it quite a
bit hold on let's get ourselves
bit hold on let's get ourselves
uh some graphs up to look at because I
uh some graphs up to look at because I
did
did
run some sweeps I guess these aren't
run some sweeps I guess these aren't
going to be the best demo of carbs
going to be the best demo of carbs
capabilities cuz snake is a pretty
capabilities cuz snake is a pretty
consistent uh
consistent uh
environment
but yeah right here
but yeah right here
so we have this 108 environment
sweep filter
sweep filter
out the best runs but just to show you
out the best runs but just to show you
if we look at all the
if we look at all the
runs we have ton of different
runs we have ton of different
environments in carbs you can see it
environments in carbs you can see it
goes up over time found us some nice
goes up over time found us some nice
settings for this
settings for this
environment and then what I did is I
environment and then what I did is I
took the settings I ran it for 10
took the settings I ran it for 10
billion steps and I released that model
billion steps and I released that model
speaking which I should probably tweet
speaking which I should probably tweet
that model but I've kind of got enough
that model but I've kind of got enough
stuff already floating around on Twitter
stuff already floating around on Twitter
today uh these graphs don't work here
today uh these graphs don't work here
because it's not a native integration
because it's not a native integration
it's kind of a hack to make this work so
it's kind of a hack to make this work so
I have to actually overwrite these
I have to actually overwrite these
parameters um
parameters um
so what we're going to do right now is
so what we're going to do right now is
we're going to take a look at my
we're going to take a look at my
integration I'm going to come up with
integration I'm going to come up with
some thoughts I'm going to talk through
some thoughts I'm going to talk through
them just for myself here and for
them just for myself here and for
anybody interested and then I'm going to
anybody interested and then I'm going to
just write up a real quick summary I'll
just write up a real quick summary I'll
also link them this stream but I'm going
also link them this stream but I'm going
to write up a real quick summary for the
to write up a real quick summary for the
w b guys since we had some scheduling
w b guys since we had some scheduling
issues hello fruit punch Samurai on
issues hello fruit punch Samurai on
YouTube cool to see that the chat's
YouTube cool to see that the chat's
working thanks for that I wasn't quite
working thanks for that I wasn't quite
sure it was anyways though what I'm
sure it was anyways though what I'm
going to do is I'm going to uh go
going to do is I'm going to uh go
through this setup here I'm going to
through this setup here I'm going to
look at the code a little bit and then
look at the code a little bit and then
I'm going to put all that together for
I'm going to put all that together for
the WB guys that should only take me I
the WB guys that should only take me I
don't know 20 30 minutes uh and then
don't know 20 30 minutes uh and then
after that I'm going to start looking at
after that I'm going to start looking at
continuous control because that whole
continuous control because that whole
ecosystem is exceptionally cursed and I
ecosystem is exceptionally cursed and I
haven't really prioritized it for puffer
haven't really prioritized it for puffer
yet uh but it's a really big missing
yet uh but it's a really big missing
feature and it's probably not even that
feature and it's probably not even that
hard to add so we're going to see if we
hard to add so we're going to see if we
can get a continuous control environment
can get a continuous control environment
working with puffer and if we can I'll
working with puffer and if we can I'll
decide whether I want to add like
decide whether I want to add like
bindings for more existing Ms or if I
bindings for more existing Ms or if I
want to just like start making some cool
want to just like start making some cool
control Ms we'll see where we go from
control Ms we'll see where we go from
there but I definitely want to get
there but I definitely want to get
puffer working with continuous control
puffer working with continuous control
and then see if any of the Cool Tech
and then see if any of the Cool Tech
I've come up with lately would also be
I've come up with lately would also be
as useful in continuous control as it is
as useful in continuous control as it is
in the rest of reinforcement
in the rest of reinforcement
learning so let's
learning so let's
start H we're in the wrong container
start H we're in the wrong container
here let's get out of
this attempted to remove this
this attempted to remove this
thing did post the uh the you know rage
thing did post the uh the you know rage
bait whatever cringe article on Jack's
bait whatever cringe article on Jack's
being a piece of this morning on
being a piece of this morning on
Twitter um we'll see how people respond
Twitter um we'll see how people respond
to that but I did not have a good time
to that but I did not have a good time
with
Jack let's see I need really need a chat
Jack let's see I need really need a chat
overlay so that people because I have
overlay so that people because I have
this streaming to X and YouTube
this streaming to X and YouTube
simultaneously but from YouTube I
simultaneously but from YouTube I
reached out to you via commenting under
reached out to you via commenting under
your YouTube vid last month also part of
your YouTube vid last month also part of
the neural MMO
the neural MMO
Discord uh
Discord uh
which comment was this let me go take a
which comment was this let me go take a
quick
quick
look oops neural
look oops neural
MMO is my defense not indexed here yeah
MMO is my defense not indexed here yeah
here it
here it
is the same I guess it would be the same
username do I see
did I miss a communication
here not seeing Oh here it
is oh yeah so the way that I generally
is oh yeah so the way that I generally
handle this stuff um cuz I get a lot of
handle this stuff um cuz I get a lot of
requests for like general mentorship I'm
requests for like general mentorship I'm
not going to like one-on-one tutor
not going to like one-on-one tutor
somebody but what I will do is I will
somebody but what I will do is I will
help you out along the same way that I
help you out along the same way that I
learn stuff myself which is you work on
learn stuff myself which is you work on
projects either your own or you know
projects either your own or you know
existing open- Source stuff with puffer
existing open- Source stuff with puffer
or with any of these other things um and
or with any of these other things um and
you know if you do work and you actually
you know if you do work and you actually
make progress on stuff then yeah of
make progress on stuff then yeah of
course I'd happy be happy to give you a
course I'd happy be happy to give you a
a bunch of free pointers uh literally
a bunch of free pointers uh literally
the best way to you know get some input
the best way to you know get some input
and get some advice in the right
and get some advice in the right
direction is to just start doing cool
direction is to just start doing cool
stuff though um of the people that
stuff though um of the people that
message me like this 90% will like post
message me like this 90% will like post
something like this I'll tell them like
something like this I'll tell them like
here try doing this and this and then
here try doing this and this and then
I'll never hear from them again so
I'll never hear from them again so
literally all you have to do is like
literally all you have to do is like
start working on some stuff uh there a
start working on some stuff uh there a
bunch of people on Twitter doing like
bunch of people on Twitter doing like
relatively simple RL Plus game type
relatively simple RL Plus game type
stuff you can look at the snake en code
stuff you can look at the snake en code
that I posted on uh on puffer lib lately
that I posted on uh on puffer lib lately
you can try some stuff with that and
you can try some stuff with that and
then yeah keep me posted on how that's
then yeah keep me posted on how that's
going and if you need any pointers in
going and if you need any pointers in
the right direction that's what I'd tell
the right direction that's what I'd tell
you with
that I started working on AI stuff when
that I started working on AI stuff when
I was 16 when there were far fewer
I was 16 when there were far fewer
resources and way worse tools for doing
resources and way worse tools for doing
stuff like this and uh it was mostly
stuff like this and uh it was mostly
just what I just said you know working
just what I just said you know working
on stuff yourself and learning that way
on stuff yourself and learning that way
with maybe like 10% formal
with maybe like 10% formal
material which these days is all free
material which these days is all free
online
okay let's go
check uh let's go
check uh let's go
check
check
carbs this is the wrong docker
yeah Pokemon uh poker RL is an awesome
yeah Pokemon uh poker RL is an awesome
project to contribute to bet and Link
project to contribute to bet and Link
key two of our top contributors there uh
key two of our top contributors there uh
came in with next to no programming
came in with next to no programming
experience and no reinforcement learning
experience and no reinforcement learning
or AI experience and they're doing an
or AI experience and they're doing an
amazing job and they've just worked
amazing job and they've just worked
really hard at it right they just spent
really hard at it right they just spent
a lot a lot of time learning like the
a lot a lot of time learning like the
thing you have to realize is that when
thing you have to realize is that when
you're new stuff is just going to take
you're new stuff is just going to take
you 10 times longer than it would take
you 10 times longer than it would take
anybody who knows what they're doing and
anybody who knows what they're doing and
there's not really anything I can do to
there's not really anything I can do to
make it not take 10 times as long like
make it not take 10 times as long like
some of the lessons you just have to
some of the lessons you just have to
learn for yourself and put in the time
learn for yourself and put in the time
and the effort um but hey they're doing
and the effort um but hey they're doing
amazing now and Link's even started
amazing now and Link's even started
messing with like Network architectures
messing with like Network architectures
and stuff which is awesome amount of
progress I do provide uh hardware and
progress I do provide uh hardware and
stuff by the way for a couple projects
stuff by the way for a couple projects
like poker RL but I provide the hardware
like poker RL but I provide the hardware
to like people who are consistently
to like people who are consistently
doing stuff on the projects and are like
doing stuff on the projects and are like
actually showing consistent contribution
actually showing consistent contribution
that's how you get added to that list
that's how you get added to that list
and that's not like me being you know
and that's not like me being you know
that that's just like me having limited
that that's just like me having limited
uh limited resources I'm like a single
uh limited resources I'm like a single
individual with a very small
cluster all right let's see I'm going to
cluster all right let's see I'm going to
start on the carbs thing and I'm going
start on the carbs thing and I'm going
to kind of do this segment as a little
to kind of do this segment as a little
bit of a bit I'm going to try to talk
bit of a bit I'm going to try to talk
through this in one take and not look at
through this in one take and not look at
the chat for a few minutes just because
the chat for a few minutes just because
what I want to do is I want to
what I want to do is I want to
put together this dock on carbs um and I
put together this dock on carbs um and I
want to also link the WB team this
want to also link the WB team this
section of the video so they can just
section of the video so they can just
sort of see me talking through stuff
sort of see me talking through stuff
with carbs and um how this could be
with carbs and um how this could be
integrated
so I have here
why is this
not what in the
heck oh rout cash hold on let me fix
heck oh rout cash hold on let me fix
this
first Ro
first Ro
cash
cash
Vim fix my Vim real
Vim fix my Vim real
quick I don't know why it
quick I don't know why it
broke but I definitely would like to
broke but I definitely would like to
have super Maven for today
oh jeez is this the the system that's
oh jeez is this the the system that's
like really hard to to copy stuff
from hold
from hold
on no it
on no it
works
works
uh log in
okay so this now
works so uh whatever this time stamp is
works so uh whatever this time stamp is
this will be where this
starts so IMB released carbs carbs is
starts so IMB released carbs carbs is
this awesome hyper praning tuning
this awesome hyper praning tuning
algorithm that is as far as I understand
algorithm that is as far as I understand
uh a substantial Improvement on basian
uh a substantial Improvement on basian
optimization that introduces the concept
optimization that introduces the concept
of cost awareness in which it takes into
of cost awareness in which it takes into
account the wall clock runtime or any
account the wall clock runtime or any
other cost but usually wall clock time
other cost but usually wall clock time
that is taken for the experiment to
that is taken for the experiment to
reach a certain performance threshold
reach a certain performance threshold
and it explores a parito front of
and it explores a parito front of
Optimal Solutions so it'll explore many
Optimal Solutions so it'll explore many
different Pathways of potentially
different Pathways of potentially
optimal hyper parameters um and it has a
optimal hyper parameters um and it has a
bunch of additional Nifty tricks as well
bunch of additional Nifty tricks as well
that just generally make it very stable
that just generally make it very stable
and importantly it can also scale to
and importantly it can also scale to
longer and longer runs so as you're
longer and longer runs so as you're
optimizing it can run short runs while
optimizing it can run short runs while
it doesn't know what's going on and it
it doesn't know what's going on and it
can run much longer experiments over
can run much longer experiments over
time and if you look at the imbw blog
time and if you look at the imbw blog
post they have some very cool posts on
post they have some very cool posts on
how they use this to scale up uh
how they use this to scale up uh
relatively large language models and uh
relatively large language models and uh
how they are able to find Optimal
how they are able to find Optimal
hyperparameters by doing longer and
hyperparameters by doing longer and
longer runs over time entirely
longer runs over time entirely
automatically so what I did is right
automatically so what I did is right
after it released I tried to just hack
after it released I tried to just hack
some way of getting it to work with WP
some way of getting it to work with WP
um if we look at the carbs config here
um if we look at the carbs config here
I'm going to use snake as an
example using snake as an example here
example using snake as an example here
so you see I have a config section just
so you see I have a config section just
in yaml very standard and then I have
in yaml very standard and then I have
this sweep configuration this is just a
this sweep configuration this is just a
WB sweep in the syntax required by wandb
WB sweep in the syntax required by wandb
um it's a little I'm going to give you a
um it's a little I'm going to give you a
couple additional things along the way
couple additional things along the way
that are just pain points with w b
that are just pain points with w b
sweeps in addition to the carbs
sweeps in addition to the carbs
integration so that there are a couple
integration so that there are a couple
different ways that this is helpful um
different ways that this is helpful um
but this is the standard sweeps config
but this is the standard sweeps config
the first thing that's a little weird is
the first thing that's a little weird is
that you have to Nest this parameters
that you have to Nest this parameters
thing you can't just do like
thing you can't just do like
parameters uh you know n Vision you have
parameters uh you know n Vision you have
this like extra layer every time so
this like extra layer every time so
that's kind of awkward um but that aside
that's kind of awkward um but that aside
we go
we go
into the carbs
sweeps uh so this is my definition for
sweeps uh so this is my definition for
how I'm using carbs with WB let me give
how I'm using carbs with WB let me give
you a quick comparison if I scroll down
you a quick comparison if I scroll down
here because I have a similar code that
here because I have a similar code that
is just for WB sweeps so this is the
is just for WB sweeps so this is the
code for WB sweeps we initialize WB this
code for WB sweeps we initialize WB this
ar. sweep here gives you the the thing
ar. sweep here gives you the the thing
on the left side of the screen I'm going
on the left side of the screen I'm going
to have to make sure that I uh I don't
to have to make sure that I uh I don't
cover this code window with my my camera
cover this code window with my my camera
let's do
this we initialize one B here
this we initialize one B here
inside of the function I put this try
inside of the function I put this try
accept so that we get a trace back and
accept so that we get a trace back and
then it doesn't hard fail um print out
then it doesn't hard fail um print out
the config and then here this is where I
the config and then here this is where I
update the training
update the training
configuration uh of the experiment with
configuration uh of the experiment with
wb's config so train takes args args
wb's config so train takes args args
gets updated with WB config train fairly
gets updated with WB config train fairly
simple and then we run the sweep here
simple and then we run the sweep here
second general paino for wand B sweeps
second general paino for wand B sweeps
is this being its own
is this being its own
routine um it's very odd that I have to
routine um it's very odd that I have to
register main as a call back like this
register main as a call back like this
right that this has to run in a sub
right that this has to run in a sub
process this will eat a lot of your
process this will eat a lot of your
debugging information and generally will
debugging information and generally will
add startup time and make it a lot
add startup time and make it a lot
harder to do stuff inside of sweeps so
harder to do stuff inside of sweeps so
generally I will have to run stuff
generally I will have to run stuff
either with just wanb or even without WB
either with just wanb or even without WB
to debug code and then only enable
to debug code and then only enable
sweeps when I'm sure everything is set
sweeps when I'm sure everything is set
otherwise I just get a bunch of error
otherwise I just get a bunch of error
spam the thing that would be very nice
spam the thing that would be very nice
here would be the ability to say instead
here would be the ability to say instead
of writing this main function and
of writing this main function and
passing it to WAN B right what if I
passing it to WAN B right what if I
could just do
this right and I could just run the
this right and I could just run the
experiment like
experiment like
this and it works here or maybe you know
this and it works here or maybe you know
I have to pass Reet maybe you have to
I have to pass Reet maybe you have to
pass the sweep ID whatever but then this
pass the sweep ID whatever but then this
could all run on the same process and
could all run on the same process and
what would be even nicer with this is
what would be even nicer with this is
let's say I did want to do uh processing
let's say I did want to do uh processing
multi-processing I could write my own
multi-processing I could write my own
multi-process Loop here and then do
multi-process Loop here and then do
experiments in parallel way way easier
experiments in parallel way way easier
without having you know some opaque uh
without having you know some opaque uh
some opaque API that takes a call back
some opaque API that takes a call back
and is going to manage processes itself
and is going to manage processes itself
but I think for most users just having
but I think for most users just having
this sort of a thing would be nice in
this sort of a thing would be nice in
general um but this works fairly well
general um but this works fairly well
overall with those two minor uh minor
overall with those two minor uh minor
quibbles aside now for carbs
quibbles aside now for carbs
integration you can see all that
integration you can see all that
commented code by the way is for is for
commented code by the way is for is for
this carbs uh the carbs integration code
this carbs uh the carbs integration code
right there is I see the comment let me
right there is I see the comment let me
finish this bit for the team um this was
finish this bit for the team um this was
all debug code right here because I
all debug code right here because I
couldn't get it working properly
couldn't get it working properly
specifically because it was very hard to
specifically because it was very hard to
debug through multiprocess
debug through multiprocess
code so this is the carbs configuration
code so this is the carbs configuration
here this is the uh this method of
here this is the uh this method of
sweeps here now this a lot of this code
sweeps here now this a lot of this code
is copied from carbs from their example
is copied from carbs from their example
code all these Imports for
code all these Imports for
instance um but you can see that right
instance um but you can see that right
here I'm grabbing all of the different
here I'm grabbing all of the different
configuration parameters that I need
configuration parameters that I need
from this config on the left
from this config on the left
here I'm importing all the carb stuff
here I'm importing all the carb stuff
and I have this function called carbs
and I have this function called carbs
Pam and what this attempts to do is to
Pam and what this attempts to do is to
convert between the want to be syntax on
convert between the want to be syntax on
the left which requires distribution Min
the left which requires distribution Min
and Max or you know values whatever it's
and Max or you know values whatever it's
going to be and the carb syntax which is
going to be and the carb syntax which is
slightly different and provides a few
slightly different and provides a few
additional
additional
options so you can see they have log
options so you can see they have log
space they have linear space they also
space they have linear space they also
have logic space this is a very
have logic space this is a very
important one for params between zero
important one for params between zero
and
and
one and then I return this as a carbs
one and then I return this as a carbs
param it get it gets a Min a Max an
param it get it gets a Min a Max an
important parameter which is is integer
important parameter which is is integer
whether to give you an integer or not
whether to give you an integer or not
and also a rounding factor which is very
and also a rounding factor which is very
convenient say that you want your batch
convenient say that you want your batch
size to be a multiple of 32 or something
size to be a multiple of 32 or something
like that I would additionally like an
like that I would additionally like an
exponential rounding Factor if possible
exponential rounding Factor if possible
so that you could round to be a power of
so that you could round to be a power of
two but you know I can also do that
two but you know I can also do that
manually if needed and then it also you
manually if needed and then it also you
get a search center here this tells you
get a search center here this tells you
where to start the search from very
where to start the search from very
important uh so you can kind of seat it
important uh so you can kind of seat it
with something that's generally in the
with something that's generally in the
right place and then it will search out
right place and then it will search out
from there as is
from there as is
useful um based on the results of sweeps
useful um based on the results of sweeps
so here's the pram space that has all
so here's the pram space that has all
the different keys in here you can see
the different keys in here you can see
I'm specifying search centers manually
I'm specifying search centers manually
because you're not allowed to do that on
because you're not allowed to do that on
the left in the WB config as well as is
the left in the WB config as well as is
integer and other such
integer and other such
properties I make my carbs prams I say
properties I make my carbs prams I say
that up is better positive is better uh
that up is better positive is better uh
I do the w b logging myself so I don't
I do the w b logging myself so I don't
use theirs and uh cuz they're not
use theirs and uh cuz they're not
configured for sweet
configured for sweet
and then this is uh to do with whether
and then this is uh to do with whether
you want to run the same thing multiple
you want to run the same thing multiple
times all their code is open source and
times all their code is open source and
fairly
fairly
succinct here's the main function that's
succinct here's the main function that's
going to be in the Callback I grab the
going to be in the Callback I grab the
experiment name and initialize WBY I
experiment name and initialize WBY I
call carbs. suggest in order to get the
call carbs. suggest in order to get the
suggested hyper prams from carbs I make
suggested hyper prams from carbs I make
a copy of it for later and then what I'm
a copy of it for later and then what I'm
doing here is I am overwriting wb's
doing here is I am overwriting wb's
configuration with
configuration with
uh the carbs suggested one now this does
uh the carbs suggested one now this does
not actually show up correctly in the
not actually show up correctly in the
UI as far as I can tell like this does
UI as far as I can tell like this does
not actually reflect the changes that
not actually reflect the changes that
I've made here so this graph doesn't
I've made here so this graph doesn't
become particularly useful but you still
become particularly useful but you still
get everything in the sweep UI and you
get everything in the sweep UI and you
still get this you know reward over time
still get this you know reward over time
which is all
correct so this is where I'm updating
correct so this is where I'm updating
all the parameters and then I call my
all the parameters and then I call my
train function
train function
and then finally this is my workaround
and then finally this is my workaround
since I can't get the actual correct
since I can't get the actual correct
parameters to show up correctly I uh I
parameters to show up correctly I uh I
put this hypers do text and I just spit
put this hypers do text and I just spit
everything out into
everything out into
there so you know this does work I don't
there so you know this does work I don't
get all the nice charts that I would
get all the nice charts that I would
want in WB sweeps but the idea would be
want in WB sweeps but the idea would be
that if we had a native integration we
that if we had a native integration we
would be able to have uh either
would be able to have uh either
conversion internally to carbs spaces or
conversion internally to carbs spaces or
just change the carbs code to accept WB
just change the carbs code to accept WB
spaces again it's pretty short um add in
spaces again it's pretty short um add in
things like the rounding factor is
things like the rounding factor is
integer you know the different
integer you know the different
parameters that con carbs can take as
parameters that con carbs can take as
well as the search center parameter
well as the search center parameter
that's very important and then you could
that's very important and then you could
just specify method equals carbs right
just specify method equals carbs right
here and it would do a carb sweep for
here and it would do a carb sweep for
you and you'd have to specify a few
you and you'd have to specify a few
additional things right like you'd have
additional things right like you'd have
uh an
uh an
additional metric or parameter or
additional metric or parameter or
whatever that is going to be the cost
whatever that is going to be the cost
cost is very
cost is very
important because if we do update where
important because if we do update where
is
is
it let me find the update thing
it let me find the update thing
here yes right here
here yes right here
so uh you need to be able to get a
so uh you need to be able to get a
parameter back from your
parameter back from your
experiment it's almost always going to
experiment it's almost always going to
just be wall clock time and that's going
just be wall clock time and that's going
to be your cost and then the actual uh
to be your cost and then the actual uh
metric that you're maximizing which is
metric that you're maximizing which is
the same as the one that is here
the same as the one that is here
maximize environment reward uh
maximize environment reward uh
potentially now I did speak with the
potentially now I did speak with the
developers of this and potentially we
developers of this and potentially we
would want to take like say a window
would want to take like say a window
average over a certain number of steps
average over a certain number of steps
and say what was the best reward
and say what was the best reward
obtained ever during the course of the
obtained ever during the course of the
Run since RL can be rather unstable
Run since RL can be rather unstable
probably not as useful in language
probably not as useful in language
modeling though runs can be unstable
modeling though runs can be unstable
there as well um but this should hook in
there as well um but this should hook in
already quite
already quite
nicely so those are pretty much all my
nicely so those are pretty much all my
thoughts on carbs I'm going to draft
thoughts on carbs I'm going to draft
that document now and since I'm ending
that document now and since I'm ending
this little bit uh for this comment here
this little bit uh for this comment here
what exactly is the use case of carb
what exactly is the use case of carb
sweeps uh so carbs is a different
sweeps uh so carbs is a different
hyperparameter tuning algorithm and this
hyperparameter tuning algorithm and this
is my integration with wand B sweeps for
is my integration with wand B sweeps for
the carbs hyperparameter tuning
the carbs hyperparameter tuning
algorithm as compared to the native base
algorithm as compared to the native base
one
one
here so let's just go before I forget
here so let's just go before I forget
all that stuff that I just said let's
all that stuff that I just said let's
just make a Google doc and let me real
just make a Google doc and let me real
quick put some of these thoughts down
down one be sweeps feedback plus carbs
integration so here we do
um let's go find the uh the Youtube link
um let's go find the uh the Youtube link
actually so I can get them a timestamp
oh I'm going to have to like listen to
oh I'm going to have to like listen to
this aren't
this aren't
I okay I'll figure out the time stamp
afterwards unable to
afterwards unable to
understand is my audio bad or am I
understand is my audio bad or am I
saying complicated things what do you
saying complicated things what do you
mean by
that ah yes um so carbs is a hyper
that ah yes um so carbs is a hyper
parameter tuning method that is that
parameter tuning method that is that
we're using for reinforcement learning
we're using for reinforcement learning
it is a huge huge upgrade to RL what I'm
it is a huge huge upgrade to RL what I'm
doing right now is I am I have a basic
doing right now is I am I have a basic
integration of carbs hyperparameter
integration of carbs hyperparameter
sweeps with puffer Leb that we can use
sweeps with puffer Leb that we can use
to run like a 100 experiments with
to run like a 100 experiments with
different hyper prams that's way better
different hyper prams that's way better
than anything else uh it's a little bit
than anything else uh it's a little bit
Jank CU it's not natively supported by
Jank CU it's not natively supported by
wandb so I'm taking just a couple of
wandb so I'm taking just a couple of
minutes now to write up some comments
minutes now to write up some comments
for the wandb team they've asked to do
for the wandb team they've asked to do
so on how they could generally integrate
so on how they could generally integrate
this natively which would be a huge
this natively which would be a huge
Improvement to reinforcement learning
Improvement to reinforcement learning
and as soon as I finish that I'm going
and as soon as I finish that I'm going
to look at puffer lib and I'm going to
to look at puffer lib and I'm going to
see if we can make continuous control
see if we can make continuous control
environments work with puffer that's
environments work with puffer that's
been a very requested feature and uh
been a very requested feature and uh
something I haven't played with too much
something I haven't played with too much
but I think shouldn't be too hard to get
working so let me real quick
working so let me real quick
uh this is a a pretty useful piece of
uh this is a a pretty useful piece of
software for RL right now
software for RL right now
so uh General
improvements
improvements
uh you have to Nest
uh you have to Nest
parameters inside of
configs is clunky
okay let's give
okay let's give
them
this as an
example and then the second thing here
example and then the second thing here
whoops
second thing
second thing
is uh there's one other thing uh
is uh there's one other thing uh
yeah the sweeps
yeah the sweeps
API
API
only accepts a call back to your
only accepts a call back to your
experiment main
function this means that wandb manages
function this means that wandb manages
multiprocessing
multiprocessing
and eat error
messages able to write
this this has cost me several hours of
this this has cost me several hours of
debugging it would be nice to be able to
debugging it would be nice to be able to
write
write
this write our
this write our
own Loop
net
see thread let's give them this
see thread let's give them this
example since we had that right
here sweep
oops
oops okay just get them this clean right
here
here
and if
I well I don't really need to annotate
I well I don't really need to annotate
it do I I think I can just post
it okay this is our these are our
it okay this is our these are our
general feedback these are like the two
general feedback these are like the two
things that have just annoyed me to no
things that have just annoyed me to no
end with uh Wan B sweeps everything else
end with uh Wan B sweeps everything else
is pretty good and now we do
is pretty good and now we do
carbs uh
carbs uh
[Music]
integration View
hyperparameter
tuning RL looking for autonomous
tuning RL looking for autonomous
vehicle with RL can this be
vehicle with RL can this be
HT RL for it depends what you mean by RL
HT RL for it depends what you mean by RL
for autonomous vehicle um they're if
for autonomous vehicle um they're if
you're looking for like online
you're looking for like online
reinforcement learning end to end for
reinforcement learning end to end for
self-driving cars that does not exist
self-driving cars that does not exist
it's mostly like imitation learning
it's mostly like imitation learning
maybe offline learning uh
this I know Eugene is he's on Twitter
this I know Eugene is he's on Twitter
where's his
Twitter doesn't have his Twitter on here
Twitter doesn't have his Twitter on here
oh here it is follow this guy on Twitter
oh here it is follow this guy on Twitter
um he
um he
does multi-agent self-driving uh nocturn
does multi-agent self-driving uh nocturn
nocturn multi-agent simulator I recently
nocturn multi-agent simulator I recently
added a binding for nocturn to puffer
added a binding for nocturn to puffer
lib so yeah that's something that we're
lib so yeah that's something that we're
looking
at he post a lot of good stuff in this
at he post a lot of good stuff in this
space
space
but generally um I would look at like
but generally um I would look at like
the puffer
the puffer
lib but the thing is you're not like
lib but the thing is you're not like
there's no way to just do RL on AV right
there's no way to just do RL on AV right
you need like some sort of simulator to
you need like some sort of simulator to
have that work if you want to do like
have that work if you want to do like
research on that then you could either
research on that then you could either
use an existing big in CL funky
use an existing big in CL funky
simulator or you could look at writing a
simulator or you could look at writing a
simulator which puffer lib helps with a
simulator which puffer lib helps with a
lot we have really good fast simulation
lot we have really good fast simulation
techniques and uh and doing something
techniques and uh and doing something
there that's actually something I've
there that's actually something I've
been considering doing as well if you uh
been considering doing as well if you uh
are sticking around and looking for that
are sticking around and looking for that
type of a thing because like AV is one
type of a thing because like AV is one
of those applications that gets people a
of those applications that gets people a
lot gets people very
interested let me where' my Google doc
interested let me where' my Google doc
go
go
here we
go see a fruit
punch yeah small scale is good um try
punch yeah small scale is good um try
try some stuff with puffer puffer is
try some stuff with puffer puffer is
pretty fast you can get really far like
pretty fast you can get really far like
try my snake environment out it's pretty
try my snake environment out it's pretty
nice you can run like 100,000 steps per
nice you can run like 100,000 steps per
second local easily like on CPU even so
second local easily like on CPU even so
yeah go try out the multi snake
yeah go try out the multi snake
environment stick around in chat that's
environment stick around in chat that's
generally what uh that's generally how
generally what uh that's generally how
you make
progress in two want to
be there wall
be there wall
clock of
clock of
experiments addition to
with
with
[Laughter]
SB puffer is you can technically use
SB puffer is you can technically use
puffer instead of C datable baselines
puffer instead of C datable baselines
but really puffer is not an algorithms
but really puffer is not an algorithms
uh repository our main script that we
uh repository our main script that we
use for everything uses clean RL it's a
use for everything uses clean RL it's a
souped up version of clean RL with extra
souped up version of clean RL with extra
logging and stuff um um stable baselines
logging and stuff um um stable baselines
is really high level and abstracted and
is really high level and abstracted and
it's hard to get your hands dirty with
it's hard to get your hands dirty with
it um puffer lib lets you get your hands
it um puffer lib lets you get your hands
dirty with everything but in the process
dirty with everything but in the process
of doing that we make everything really
of doing that we make everything really
really simple so like instead of 10,000
really simple so like instead of 10,000
lines of Highly abstracted stuff that
lines of Highly abstracted stuff that
you hope you never have to touch it's
you hope you never have to touch it's
1,000 lines of as simple as possible
1,000 lines of as simple as possible
stuff that you're expected to touch when
stuff that you're expected to touch when
you need
to that's the philosophy difference
we in let's get the
repo
repo
[Music]
[Music]
puffer yeah hit me up there's a puffer
puffer yeah hit me up there's a puffer
Discord as well discord.gg
Discord as well discord.gg
puffer I got to get a chat plugin so
puffer I got to get a chat plugin so
that these messages show up on my my
that these messages show up on my my
screen here
and make sure to feed the pup for a
star let's
star let's
see he likes Stars uh
can you please share any link for it
can you please share any link for it
where I can start from what
where I can start from what
is what is it like if you're a beginner
is what is it like if you're a beginner
in AV that's a really hard place to
in AV that's a really hard place to
start
start
um like that's a really really hard
um like that's a really really hard
place to start
hold
hold
on hey thank
on hey thank
you um I would suggest just like if
you um I would suggest just like if
you're new to RL start with some fast
you're new to RL start with some fast
environments play around with some stuff
environments play around with some stuff
uh this snake en I made is a really nice
uh this snake en I made is a really nice
place to start cuz it's a really simple
place to start cuz it's a really simple
and really high performance environment
and really high performance environment
and like if you wanted to have fast uh
and like if you wanted to have fast uh
AV
AV
Sim yeah so RL in general I have some
Sim yeah so RL in general I have some
resources in the puffer uh the puffer
resources in the puffer uh the puffer
lib Discord um puffer lib is a pretty
lib Discord um puffer lib is a pretty
darn good place to start here or clean
darn good place to start here or clean
RL and we just have a lot of
RL and we just have a lot of
environments that you can play around
environments that you can play around
with like there this is docs we' we've
with like there this is docs we' we've
got docs here puffi GitHub iio we've got
got docs here puffi GitHub iio we've got
some tutorials on there there's some
some tutorials on there there's some
stuff in the Discord um this is not
stuff in the Discord um this is not
aimed at beginners but it is aimed to be
aimed at beginners but it is aimed to be
as simple as possible which ends up
as simple as possible which ends up
making it really nice for beginners
making it really nice for beginners
we've got all these different
we've got all these different
environments they don't all they're not
environments they don't all they're not
all fully supported there's a list of
all fully supported there's a list of
them on the website but like you could
them on the website but like you could
very easily play around with uh the
very easily play around with uh the
snake environment that I have here and
snake environment that I have here and
very uh very quickly get some uh some
very uh very quickly get some uh some
cool
results uh yeah they're docks I mean
look here I have this might not be fully
look here I have this might not be fully
set up yet let's see if this
works I might have to download RB
cannot use okay I have to I have to add
cannot use okay I have to I have to add
hold on let me add my w
hold on let me add my w
b I got to grab my
b I got to grab my
WB uh API
key might have to
let me actually fix one thing right now
let me actually fix one thing right now
I've been meaning to fix this and I'll
I've been meaning to fix this and I'll
get you this snake demo since you're
get you this snake demo since you're
both
both
asking let me just give
asking let me just give
you and here this is a good chance for
you and here this is a good chance for
me to fix a bug
anyways this is just like a thing that I
anyways this is just like a thing that I
forgot to commit to the dev
Branch it
Branch it
fix render mode in
Dev dot
Dev dot
[Music]
name let me grab one thing
name let me grab one thing
get there's just a little quick bit of
get there's just a little quick bit of
setup hold on because this is a new uh
setup hold on because this is a new uh
this is a new container of
mine grab that
mine grab that
and let me get my creds from over here
okay so I there's this demo file here I
okay so I there's this demo file here I
might have to install RB for this
might have to install RB for this
one a brand new environment I literally
one a brand new environment I literally
I wrote this whole snake environment in
I wrote this whole snake environment in
one week and uh yeah so rayb so here you
one week and uh yeah so rayb so here you
get like an import error pip install
get like an import error pip install
rayb and it'll
rayb and it'll
work technically there two different
work technically there two different
demos I could do uh this one will be
demos I could do uh this one will be
cool for you guys I think think
cool for you guys I think think
oops so M snake model--
Baseline this downloads Baseline
and cool now it is playing
and cool now it is playing
snake this is a 10 billion step
snake this is a 10 billion step
pre-trained
model currently the AI is playing this
model currently the AI is playing this
I'm not controlling it though if I want
I'm not controlling it though if I want
to mess with it and control it I can now
to mess with it and control it I can now
I'm playing the snake
I'm not as good at it as the AI is
I'm not as good at it as the AI is
though the AI is kind of super
though the AI is kind of super
human and now I can let the AI take
over this is a giant snake environment
over this is a giant snake environment
as it turns out um this has 4096 snakes
as it turns out um this has 4096 snakes
in
in
it I can show you the high level of
that render mode human no RGB
array uh and look if I have an error I
array uh and look if I have an error I
get all these these uh these help
get all these these uh these help
commands in here so I can see I just Mis
commands in here so I can see I just Mis
mistyped it it should be a
dash tries to help you out a
bunch yeah Roman the snakes are nice I
bunch yeah Roman the snakes are nice I
really need to get a chat plugin because
really need to get a chat plugin because
now I'm talking Roman is on X and I've
now I'm talking Roman is on X and I've
got two people on um YouTube so it'll be
got two people on um YouTube so it'll be
a little awkward for today I'll get a
a little awkward for today I'll get a
chat plugin when I get a
chat plugin when I get a
chance I this is the cool thing uh this
chance I this is the cool thing uh this
is the cool thing about the compute
is the cool thing about the compute
requirement I just got a question on
requirement I just got a question on
that um I train this in three hours on
that um I train this in three hours on
one GPU and two
one GPU and two
cores I I have a 4090 so it's a pretty
cores I I have a 4090 so it's a pretty
good GPU but still like any reasonable
good GPU but still like any reasonable
GPU it'll still be less than a day for
GPU it'll still be less than a day for
10 billion steps and you can train it
10 billion steps and you can train it
for one bill and get something that's
for one bill and get something that's
almost as good
almost as good
so uh is this not going to render hold
on here I'll show the one other cool
on here I'll show the one other cool
demo since we got a couple new folks in
here we're just going to do like
this and then we'll see the uh the whole
this and then we'll see the uh the whole
the whole
the whole
thing
boom this is the scale that it trains at
boom this is the scale that it trains at
4096 snakes and
1440p yeah if you if you're serious
1440p yeah if you if you're serious
about doing like any sort of AI you do
about doing like any sort of AI you do
kind of need a discret GPU of some sort
kind of need a discret GPU of some sort
but that said the snake environment will
but that said the snake environment will
still train at like 100,000 steps per
still train at like 100,000 steps per
second on one half decent CPU core so if
second on one half decent CPU core so if
it's like literally 10 times faster than
it's like literally 10 times faster than
most things run on GPU actually 20 times
most things run on GPU actually 20 times
faster on One Core that's how fast all
faster on One Core that's how fast all
the stuff is with
the stuff is with
puffer so this is this is the
puffer so this is this is the
environment you can actually zoom in on
environment you can actually zoom in on
this I think yeah you can zoom in on
this I think yeah you can zoom in on
this and see what the snakes are
doing so yeah cool environment right
doing so yeah cool environment right
this whole thing is 450 lines of code
this whole thing is 450 lines of code
including three renderers 200 some odd
including three renderers 200 some odd
lines of cython runs 14 million steps
lines of cython runs 14 million steps
per second single core and trains it a
per second single core and trains it a
million steps per second on one GPU
million steps per second on one GPU
Ultra ultra high performance
Ultra ultra high performance
reinforcement learning like 100 times
reinforcement learning like 100 times
faster than most things out there wrote
faster than most things out there wrote
it in 5 days from scratch and there's
it in 5 days from scratch and there's
going to be a lot more stuff like this
going to be a lot more stuff like this
coming in fact that's what I was hoping
coming in fact that's what I was hoping
to do as soon as I finish this w b thing
to do as soon as I finish this w b thing
is we're going to integrate a continuous
is we're going to integrate a continuous
control
control
today let me finish up this WB thing
today let me finish up this WB thing
just so I don't lose my train of thought
just so I don't lose my train of thought
too badly cuz I I went through a few
too badly cuz I I went through a few
things with that already ready uh hack
things with that already ready uh hack
together basic carbs
together basic carbs
demo
limitations
uh general idea was
uh general idea was
to
uh Define
uh Define
carbs
carbs
outside the one
outside the one
be uh experiment process and
be uh experiment process and
since uh
sweets
uses smuggle it into the
uses smuggle it into the
training so we can get
training so we can get
suggestions carbs and override the the
suggestions carbs and override the the
sample
sample
paper params basically an environment
paper params basically an environment
with multiple agents training
with multiple agents training
simultaneously yes 4096 agents training
simultaneously yes 4096 agents training
simultaneously all the data goes to the
simultaneously all the data goes to the
same neural network though one neural
same neural network though one neural
network independently controls all the
network independently controls all the
agents so you get all that data
agents so you get all that data
accumulated into one neural
network the one be sampled hyper prams
imitations
The I got to get this scph for
The I got to get this scph for
them hold
on let's do like this
R
R
springy raft does not show
springy raft does not show
updated from
updated from
WB
uh automating Google dinno
uh automating Google dinno
game yeah I would try not to like don't
game yeah I would try not to like don't
try to like get if you have an
try to like get if you have an
environment as simple as the diamondo
environment as simple as the diamondo
game just write it from scratch like
game just write it from scratch like
don't use something super slow you want
don't use something super slow you want
the m to run super fast especially if
the m to run super fast especially if
you don't have resources multi-agent RL
you don't have resources multi-agent RL
is not any harder than single agent RL
is not any harder than single agent RL
because of puffer it's identical with
because of puffer it's identical with
puffer outside of puffer very hard with
puffer outside of puffer very hard with
puffer trivial
let's see
also does not show up in wand
also does not show up in wand
b
b
um what other things there were a couple
um what other things there were a couple
other limitations
right does not support all the carbs
right does not support all the carbs
ases so I had to
ases so I had to
hack around
hack around
that
that
some let talk
actually I should give them my fixed
actually I should give them my fixed
Branch right because I fix some
stuff uh puff RI what is it puff R
carbs yeah right here
do
this add missing spaces to want
this add missing spaces to want
B logic
B logic
space particularly
space particularly
useful add
useful add
missing params like into
Factor uh the other thing is you need to
Factor uh the other thing is you need to
be able to specify the
target let me go see what they called
this they called this something I forget
this they called this something I forget
what they called it
search
center specify the starting point
center specify the starting point
for the
for the
sweep each gram in the sweep
sweep each gram in the sweep
and is there anything else that they'd
and is there anything else that they'd
have to
do use carbs to
do use carbs to
generate code to uh
generate code to uh
generate the to or to
generate the to or to
sample hyper params for each
sample hyper params for each
Run
Run
update the carbs object with
update the carbs object with
the wall clock time
metric from the Run do wall
metric from the Run do wall
clock time and the score this can be the
clock time and the score this can be the
final
value probably better take the max or
value probably better take the max or
over average over a
window okay this is a pretty decent
window okay this is a pretty decent
little dock I think for uh for w be
right we'll make this
public
for for
okay cool that's
okay cool that's
done uh messages here is there anything
done uh messages here is there anything
I can contribute to in the puffer it's
I can contribute to in the puffer it's
going to be kind of hard um since you're
going to be kind of hard um since you're
new now what you can do is if you're
new now what you can do is if you're
going to like add a new environment it's
going to like add a new environment it's
not too hard to add a binding for a new
not too hard to add a binding for a new
environment uh to Puffer that you could
environment uh to Puffer that you could
probably manage like if you just look at
probably manage like if you just look at
how we have one of these simple
how we have one of these simple
environments added like uh I don't know
environments added like uh I don't know
which one is easy in here mini grid like
which one is easy in here mini grid like
if you just look at the code for this we
if you just look at the code for this we
just add a little binding and a little
just add a little binding and a little
wrapper stuff like this you could
wrapper stuff like this you could
probably just add something like this to
probably just add something like this to
a fork of puffer and if you have a cool
a fork of puffer and if you have a cool
environment you can open a PR and I'll
environment you can open a PR and I'll
just add it uh I'll add it to puffer as
just add it uh I'll add it to puffer as
well but yeah RL definitely does take
well but yeah RL definitely does take
some time I spend a few days get
some time I spend a few days get
comfortable like get comfortable with
comfortable like get comfortable with
snake you know maybe uh try a couple of
snake you know maybe uh try a couple of
the other environments out um and then
the other environments out um and then
you know maybe start working on either
you know maybe start working on either
adding your own environment uh writing
adding your own environment uh writing
your own and adding your own environment
your own and adding your own environment
or like taking another existing game
or like taking another existing game
thing and binding it to Puffer that you
thing and binding it to Puffer that you
want to play with at a high uh High perf
want to play with at a high uh High perf
that's probably a good thing to do so
that's probably a good thing to do so
we're going to move over to the control
we're going to move over to the control
stuff right after I check
stuff right after I check
on
on
this crazy for Twitter lots of lots of
this crazy for Twitter lots of lots of
good
good
stuff I did this as an experiment um I
stuff I did this as an experiment um I
kind of just wrote this silly bait
article I mean the stuff in here is it's
article I mean the stuff in here is it's
good information it's just written in
good information it's just written in
kind of a rage bity way
kind of a rage bity way
um and we'll see how much exposure this
gets yeah this has gone crazy okay let's
gets yeah this has gone crazy okay let's
start on the control segment
um let's edit the stream title on
YouTube let's just update the
titles adding continuous
control that'll update the YouTube one
control that'll update the YouTube one
and there's no Echo right
and there's no Echo right
yeah let's
do continuous
control okay we're in Dev let me just
control okay we're in Dev let me just
fix the AC real
quick reason myself here
quick reason myself here
continuous control
continuous control
um let's find a good environment to
um let's find a good environment to
start with for continuous control I
start with for continuous control I
think does box 2D maybe have
one oh actually this is
one oh actually this is
perfect this uh car racing environment I
perfect this uh car racing environment I
forgot this was in
forgot this was in
here let's do uh let's do this one
here let's do uh let's do this one
all right see you
all right see you
Sam uh we
Sam uh we
will be back with some stuff later I'm
will be back with some stuff later I'm
sure yeah this one's cool let's do
this action
this action
space is negative 1:
space is negative 1:
one car racing
V2 observation space
V2 observation space
is it's RGB
really it's probably slow isn't
it I bet this thing is
slow well we'll try it
out we'll try this out let's add a
out we'll try this out let's add a
binding for box 2D we're going to
binding for box 2D we're going to
discretize it first see if we can do
discretize it first see if we can do
anything with the environment
anything with the environment
discretized and then we're going to see
discretized and then we're going to see
how we can get it to work with
how we can get it to work with
continuous control that's going to be
continuous control that's going to be
the
easiest uh I don't have box 2D here at
easiest uh I don't have box 2D here at
all do I classic
all do I classic
control
box
box
okay uh let's use mini grid as a
okay uh let's use mini grid as a
template
slash star.
py this is
py this is
fine uh what do we have in
torch that is not fine we need to get
torch that is not fine we need to get
the Atari policy
right uh I think I can just do
right uh I think I can just do
like TCH
yeah this one's good right I'll have to
yeah this one's good right I'll have to
make a small change to the the size of
make a small change to the the size of
this thing but this will be little
this thing but this will be little
confet lstm for this probably decent
confet lstm for this probably decent
starting point and now we go to uh box
starting point and now we go to uh box
2D so default name will
be car racing
V1 car
B1
B1
and we do
and we do
uh
options
options
okay
domain equals
true and we're going to do
there's no import
here I think we got to do
try
try
name
name
equals
m then we'll do
m then we'll do
accept
raise uh
upper
upper
lib
lib
okay can you link the snake and please
okay can you link the snake and please
yes it's in the dev Branch so you will
yes it's in the dev Branch so you will
be with the dev branch which I'm hoping
be with the dev branch which I'm hoping
to merge
soon so all my Dev is open source we've
got so ocean is a first party
got so ocean is a first party
environments puff for
environments puff for
ocean so this is like stuff that I have
ocean so this is like stuff that I have
made um and have added to here I've also
made um and have added to here I've also
made I'm also the uh neural MMO author
made I'm also the uh neural MMO author
why does it have me as
why does it have me as
restream.io whatever that's the link
restream.io whatever that's the link
that I just posted so you can you can
that I just posted so you can you can
grab
grab
that hopefully you can see that link
where okay here
where okay here
is this is so
man this this EnV is like really
man this this EnV is like really
gross the way that they do
this what the
heck well I'm hoping that this is just
heck well I'm hoping that this is just
reasonable
reasonable
um I I don't know why they do it this
um I I don't know why they do it this
way this really gross
now what we're going to do is we're
now what we're going to do is we're
going to write a little
going to write a little
wrapper we're going to make a box 2D
wrapper
wrapper
and we don't need this but we need self.
and we don't need this but we need self.
action
action
space gymnasium do spaces of
space gymnasium do spaces of
discreet we'll
do
do
seven okay
and this actually can be gymnasium do
and this actually can be gymnasium do
rapper so then I don't even need to do
rapper so then I don't even need to do
any of this
any of this
super yeah we'll just do like
super yeah we'll just do like
that uh and then I don't need to do any
that uh and then I don't need to do any
of this
of this
garbage only thing I need to do is
garbage only thing I need to do is
convert the
convert the
action space
action space
to I think I do
float
float
action wait what's the the
space Oh wait there is a discret version
space Oh wait there is a discret version
of
of
this I didn't realize
this I didn't realize
that there's a discret version of
that there's a discret version of
it if wait this doesn't make sense
it if wait this doesn't make sense
though if continuous
huh is there more stuff that's not
huh is there more stuff that's not
uh not reported in here
okay oh I actually don't need
okay oh I actually don't need
to yeah that's fine
to yeah that's fine
um where
um where
is how long do this
is how long do this
n oh man I could totally rewrite this
n oh man I could totally rewrite this
thing so fast
thing so fast
yeah I could rewrite this thing it would
yeah I could rewrite this thing it would
be half as long and it would be way
be half as long and it would be way
faster I'm
sure okay so right here they don't
sure okay so right here they don't
document this at all but they've got um
document this at all but they've got um
continuous as a argument so let's do
continuous as a argument so let's do
continuous
continuous
false
right and then
yeah this is
yeah this is
good continuous is
good continuous is
false and I
false and I
think I did the syntax of this slightly
think I did the syntax of this slightly
wrong as
wrong as
well yeah I misread the API
well yeah I misread the API
it's so you actually don't need
yeah this is
fine don't need this 2D wrapper anymore
fine don't need this 2D wrapper anymore
at all not going to need any
at all not going to need any
wrappers and this should be
sufficient what exactly is use case for
sufficient what exactly is use case for
the n
the n
how would I play around with it yeah so
how would I play around with it yeah so
the the there's no read me in there
the the there's no read me in there
because the documentation is the
because the documentation is the
documentation for puffer not for like
documentation for puffer not for like
this specific environment there's really
this specific environment there's really
nothing to document with snake it's it's
nothing to document with snake it's it's
snake um and there's just it's the same
snake um and there's just it's the same
standard interface as everything else so
standard interface as everything else so
the demo file is documented and the demo
the demo file is documented and the demo
file you can run with D- MV M name so in
file you can run with D- MV M name so in
this case
this case
snake uh eval is
snake uh eval is
to run uh an existing model instead of
to run uh an existing model instead of
train from scratch there's also a train
train from scratch there's also a train
mode and then there
mode and then there
is a uh dash
is a uh dash
dash uh well this would work but
dash uh well this would work but
Baseline pulls down a baseline model
Baseline pulls down a baseline model
that we've pre-trained for this
that we've pre-trained for this
environment so that's what I ran
environment so that's what I ran
earlier this demo file is a little bit
earlier this demo file is a little bit
chunky if you want to you could do
chunky if you want to you could do
simple demo you could like add the
simple demo you could like add the
environment into this one
environment into this one
instead this is like uh just meant to a
instead this is like uh just meant to a
simpler setup file but yeah either way
simpler setup file but yeah either way
it's that's what it works off
it's that's what it works off
of the ocean by the way ocean is snake
of the ocean by the way ocean is snake
is brand new so snake is not on there
is brand new so snake is not on there
yet but ocean is
yet but ocean is
documented um right here it's on the
website puff. github.io
okay let's
okay let's
add
add
um box
um box
2D okay and then we do EnV
2D okay and then we do EnV
[Music]
[Music]
name
name
car was it car
car was it car
racing V1
racing V1
say and then
car sing
huh
huh
n car
racing not
installed install box
2D that all went over my head okay so
2D that all went over my head okay so
there's no RL Basics involved with that
there's no RL Basics involved with that
that's just API stuff so
that's just API stuff so
um the environment is like a it's a
um the environment is like a it's a
class right you can just like
class right you can just like
instantiate the environment and play
instantiate the environment and play
with it you can just import it from
with it you can just import it from
there and play around with it if you
there and play around with it if you
want um the demo file is a loader that
want um the demo file is a loader that
can load any of the environments in
can load any of the environments in
puffer lib and then run them through
puffer lib and then run them through
clean puff RL with training or
clean puff RL with training or
evaluation clean puff RL is the actual
evaluation clean puff RL is the actual
file that contains all the RL
file that contains all the RL
implementation so all the actual RL code
implementation so all the actual RL code
is in this file the file 750 lines there
is in this file the file 750 lines there
are only about 300 lines of actual
are only about 300 lines of actual
reinforcement learning code the rest is
reinforcement learning code the rest is
logging and uh performance monitoring so
logging and uh performance monitoring so
it's all in there so I mean if you can
it's all in there so I mean if you can
get the snake environment running just
get the snake environment running just
using that same command that I used you
using that same command that I used you
can start playing around with it from
can start playing around with it from
there that would be where you would
start and keep asking me until you get
start and keep asking me until you get
it working I'm trying I'm always trying
it working I'm trying I'm always trying
to figure out how to fix the new user
to figure out how to fix the new user
experience up with
experience up with
this so if you have anything that's like
this so if you have anything that's like
specifically confusing let me know like
specifically confusing let me know like
what you'd want like what information is
what you'd want like what information is
it that you would want to see better
presented yeah so like keep in mind I'm
presented yeah so like keep in mind I'm
a researcher I'm not a ux person right
a researcher I'm not a ux person right
my thing is I write simple code not like
my thing is I write simple code not like
I'm really good at documenting simple
I'm really good at documenting simple
code I I'm not particular good at that
code I I'm not particular good at that
so if uh if there's specific things that
so if uh if there's specific things that
you're like hey I would really like to
you're like hey I would really like to
know this let me know and I can just add
know this let me know and I can just add
stuff often in real time that's one of
stuff often in real time that's one of
my favorite things to do it's like oh
my favorite things to do it's like oh
that thing doesn't work here let me push
that thing doesn't work here let me push
you a patch right
now at least in Dev branches I try to
now at least in Dev branches I try to
avoid breaking the
main
main
so I got some sort of an error here a
so I got some sort of an error here a
swig
right what's wrong with
Swig puffer versus say Jax who'd
Swig puffer versus say Jax who'd
win
win
uh I don't even think Jax will show up
uh I don't even think Jax will show up
to the arena but puffer is not an
to the arena but puffer is not an
implementations Library um it's more
implementations Library um it's more
just infra and stuff and hyperf Sim
well I'll tell you what we win this
well I'll tell you what we win this
snake environment implementation will
snake environment implementation will
win
um yeah go read this code go read like
um yeah go read this code go read like
any a code and tell me what you would
any a code and tell me what you would
rather have to
write will you post the stream as a
write will you post the stream as a
recording my friend this stream is
recording my friend this stream is
posted as a recording it's on YouTube
posted as a recording it's on YouTube
all the YouTube live streams just go
all the YouTube live streams just go
onto the
channel is isn't that how it
works I do absolutely need to get a chat
works I do absolutely need to get a chat
plugin because I have people on X and
plugin because I have people on X and
people on YouTube and it's confusing if
people on YouTube and it's confusing if
since you can't see each other's
chat I was tempted to actually
chat I was tempted to actually
multistream to Twitch as well I might do
multistream to Twitch as well I might do
that that'd be kind of fun to
that that'd be kind of fun to
multistream to X YouTube and twitch
uh what is wrong with
uh what is wrong with
Swig did they
say isn't this documented somewhere
like can I do this
so Swig build fails
right streams are privatized what can
right streams are privatized what can
you see my other ones uh if you tell me
you see my other ones uh if you tell me
where the setting is I will make them
where the setting is I will make them
public if not I don't know why they
public if not I don't know why they
would be marked
private like all my Dev is pretty much
private like all my Dev is pretty much
all the stuff I do is pretty much out in
all the stuff I do is pretty much out in
the open so totally fine having them be
the open so totally fine having them be
saved I would like it if they'd all go
saved I would like it if they'd all go
into like a playlist or something to not
into like a playlist or something to not
crowd the main Channel but I can also
crowd the main Channel but I can also
just like make a playlist of main
just like make a playlist of main
Channel vids or whatever
what in the
heck hey
heck hey
pdbs thank you for the uh the setting
pdbs thank you for the uh the setting
here it is
here it is
in wait this is just linked to my
streams is there a setting I can change
streams is there a setting I can change
here
yeah no Jackson puffer are not even
yeah no Jackson puffer are not even
close to comparable um but for the
close to comparable um but for the
specific use of RL environments I think
specific use of RL environments I think
most of the time you'd prefer to write
most of the time you'd prefer to write
stuff the way that the snake en is
stuff the way that the snake en is
written in the live tab you can see all
written in the live tab you can see all
streams also the ones from yesterday
streams also the ones from yesterday
okay so perfect so yeah they're all
okay so perfect so yeah they're all
public then so this is already set up
public then so this is already set up
and I think I don't know if I have stuff
and I think I don't know if I have stuff
highl I would like to have them like
highl I would like to have them like
nicely highlighted and stuff oh I also
nicely highlighted and stuff oh I also
have to go fix the monetization on this
have to go fix the monetization on this
cuz I qualified for that which was kind
cuz I qualified for that which was kind
of
of
cool
cool
um brings in a few
pennies let's see so yeah that's already
pennies let's see so yeah that's already
set up then I'm going to figure out
set up then I'm going to figure out
what's wrong with this
Swig same issue
yesh okay so here's the
yesh okay so here's the
bug
a specific to
poetry what
yeah pip install
Swig the absolute state
wait pip install Swig works so why does
wait pip install Swig works so why does
this not
work I don't know I get all the Jack
work I don't know I get all the Jack
post I assume that this is because of
post I assume that this is because of
the uh I posted this article
right where's the rage bait article yeah
right where's the rage bait article yeah
this rage bait
this rage bait
article uh where I basically just
article uh where I basically just
on Jacks for a whole post and like rust
on Jacks for a whole post and like rust
and C++ and all the popular things
and C++ and all the popular things
um
um
cuz genuinely we don't need any of
it does it work now
what in the heck what is wrong with
this gymnasium of box
2D maybe I want the the base
2D maybe I want the the base
error oh maybe I want the base
error o
error o
I want the base
I want the base
error
error
ah okay this was me being dumb though
ah okay this was me being dumb though
this is not documented which
is okay good so it works this is an
is okay good so it works this is an
error that I know how to fix this is
error that I know how to fix this is
just me having not set up the uh the
just me having not set up the uh the
channels
channels
yet have four channels got three
yet have four channels got three
channels
channels
instead uh so frame stack equals
instead uh so frame stack equals
three and
then we
open models
just put this here and then we
just put this here and then we
[Music]
[Music]
do uh we will comment out some
stuff OBS
equals one 64 8 and 8 that is too is
equals one 64 8 and 8 that is too is
that too
big yeah that's way too
big yeah that's way too
big uh
shoot anybody have an architecture for
shoot anybody have an architecture for
cars
cars
racing anybody have architecture for
racing anybody have architecture for
this
maybe really would prefer to not have a
maybe really would prefer to not have a
4096 linear layer in this thing that's
ridiculous I guess 4098 to 128 wouldn't
ridiculous I guess 4098 to 128 wouldn't
be
be
terrible that's still
terrible that's still
dumb I'll do it for now just because but
dumb I'll do it for now just because but
that's really
dumb uh
dumb uh
these are way too big these
networks we're going to do
networks we're going to do
128 128 like
128 128 like
this
and cool it
runs I'm not seeing it Rend
which is
which is
weird what's the render
weird what's the render
mode by
mode by
default what's their render
mode human
mode human
rge State pixels
do we do RGB
maybe ah
maybe ah
cool room
cool so this is the
cool so this is the
environment this is uh somebody was
environment this is uh somebody was
asking about car racing before
right so this is
untrained let's see how fast it
untrained let's see how fast it
trains do I have free compute right
trains do I have free compute right
now I don't know if I actually do have
now I don't know if I actually do have
free
free
compute let's try it locally first
600k pram network not
bad ooh garbage
bad ooh garbage
speed let's make that
better I'm going to take this uh this
better I'm going to take this uh this
config and I'm going to use this
config and I'm going to use this
for uh the car except I'm going to
for uh the car except I'm going to
change a few small things with
it I'm setting num workers to eight
it I'm setting num workers to eight
because I only have eight cores on this
machine set this to like
machine set this to like
16 k
oh I need VC
multiprocessing let's see how this
does it's spinning my box super loud
does it's spinning my box super loud
already I can
hear is this end
hear is this end
slow is don't tell me this en is
slow is this en like really
slow I swear if I if I go and look at
slow I swear if I if I go and look at
this thing and it runs less than a
this thing and it runs less than a
thousand steps per
thousand steps per
second like
I'm going to post more rage
Bait Box
Bait Box
2D it's going to be box
2D it's going to be box
2D profile
2D profile
[Music]
[Music]
emulation what's the default in here 10
emulation what's the default in here 10
that's
that's
fine
fine
oop SE
snake what
let's see how fast this end
runs we're currently running the car
runs we're currently running the car
racing end for 10
racing end for 10
seconds just to
see you've got to be kidding
see you've got to be kidding
me
me
how oh
my how
now you get blasted for that that's just
unacceptable what in
the gracing card at
gif for
so no meaningful reinforcement learning
so no meaningful reinforcement learning
can be done on this environment
um
ridiculous anything
else I mean it's like not even there's
else I mean it's like not even there's
no point in even bothering to use this
no point in even bothering to use this
envir this is worthless like 150 SPS get
envir this is worthless like 150 SPS get
out of here that's
insane it's just like pure Python and
insane it's just like pure Python and
pure python rendering or
pure python rendering or
something
something
oh
oh
yeah that's
ridiculous every time I think RLS hit
ridiculous every time I think RLS hit
rock bottom it's like nope
rock bottom it's like nope
find a new way to dig
find a new way to dig
deeper
deeper
um I'm kind of stuck now with what to do
um I'm kind of stuck now with what to do
with that because I'm not going to use
with that because I'm not going to use
this I need like a continuous control M
this I need like a continuous control M
that runs
fast I hope I don't have to actually
fast I hope I don't have to actually
make
make
one I could do multi-agent
one I could do multi-agent
nothing wrong with that
right are there any m's that
are
environments these are all
environments these are all
[Music]
slow Mountain car continuous
right Highway M
oh
oh
cool
uh
Highway that's a discreet action
Highway that's a discreet action
is there is there continuous control on
is there is there continuous control on
this thing ideally non-pixel
this thing ideally non-pixel
observations as well if we have
observations as well if we have
state-based observations that's likely
state-based observations that's likely
to be much faster
there should be a continuous version of
there should be a continuous version of
this
this
right this looks very
simple drive on a multi-lane
simple drive on a multi-lane
highway okay I didn't know this
highway okay I didn't know this
existed right side of the road
discrete meta
action fast version okay
wait is
wait is
this when they say FPS is one do they
this when they say FPS is one do they
mean this thing simulates one frame per
mean this thing simulates one frame per
second am I reading this right
I'll wait for replies here in the
I'll wait for replies here in the
meantime I'm going to look at Mountain
meantime I'm going to look at Mountain
car really simple and right I just need
car really simple and right I just need
to test something
anyways I mean it looks like this space
anyways I mean it looks like this space
is so poor that I'm just going to have
is so poor that I'm just going to have
to write a bunch of
to write a bunch of
environments
environments
um nobody's done it
apparently Mountain
apparently Mountain
car classic control
I know that's fast at least
right uh
I haven't touched this code in so long
sure everything is still working here
sure everything is still working here
right yeah it
works Mountain car continuous
could any arguments
G
nasium
okay well I have to add The Binding now
right what
right what
the classic control
the classic control
control uh
continuous and we do package is going to
continuous and we do package is going to
be classic
be classic
control well actually no I don't even
control well actually no I don't even
need to do this
need to do this
right M
name it's going to
name it's going to
be Mountain car
be Mountain car
continuous and then let's
continuous and then let's
do car
like this
right does this
work unknown
environment
wow uhoh I edited the wrong one
Okay cool
Okay cool
so this is now where we get into the
so this is now where we get into the
bindings uh issue
right
right
so this is uh this is corre this is
so this is uh this is corre this is
where we actually need to edit a couple
things so puffer lib
expects you to have
puffer lib expects you to have a
puffer lib expects you to have a
discreet or multi-
discreet or multi-
discrete um so for now I'm just going to
discrete um so for now I'm just going to
add
box I'm just going to add like box to
box I'm just going to add like box to
this thing here
this yeah that's
good okay and then the standard policy
good okay and then the standard policy
is going to be uh the standard policy is
is going to be uh the standard policy is
also going to need to be updated
right for
I think this is
good so we just add this to
good so we just add this to
uh encoder whoa and not what we wanted
um I know why this
happens fix that up a little bit
happens fix that up a little bit
but let's
do this exit function needs to be here
do this exit function needs to be here
to
stop okay could not broadcast input
stop okay could not broadcast input
array from shape
eight into shape
eight into shape
eight comma
one that's kind of weird isn't it
there's probably like a squeeze or
there's probably like a squeeze or
something
right try
right try
this sent break point oops
uh
interesting this should not be an
int64 should
int64 should
definitely not be in N 64
it's a numpy
array but what is the shape of actions
right star action
shape what is action shape
what is action shape
right it be right
right it be right
here we want action shape to
be okay so action shape yeah this makes
be okay so action shape yeah this makes
sense cuz it's a box it's shape one
um so I think that I need to add I need
um so I think that I need to add I need
to change the model of Def
maybe maybe that would fix
it little bit
it little bit
confusing just a little basic shape
confusing just a little basic shape
error
[Music]
uh maybe this does it
batch let's just
batch let's just
do
do
uh batch.
uh batch.
shape no batch minus
shape no batch minus
one and this shouldn't be a a reshape
one and this shouldn't be a a reshape
this is just a view don't need a copy
there still we get this broadcast cast
there still we get this broadcast cast
that's weird they should be coming out
that's weird they should be coming out
now with the right shape
right yeah there's 81 right there
right yeah there's 81 right there
right um
right um
so somewhere this is going to get
squeezed so if I look at
policy do
policy do
I is
discreet
discreet
sample probably here
right
right
lits
lits
tensor okay
so well this is going to be the wrong
so well this is going to be the wrong
function I'm
sure I probably should just be using the
sure I probably should just be using the
um
the clean RL script for this
[Music]
[Music]
right okay this is a little bit tricky
let's go look at the clean RL script and
let's go look at the clean RL script and
see how they
see how they
handle sampling
here I said it would be like 100 lines
here I said it would be like 100 lines
of code to add this to puffer and it's
of code to add this to puffer and it's
probably going to be a little less than
probably going to be a little less than
that but it's not no work
po continuous
po continuous
actions
actions
[Music]
[Music]
so ah they
so ah they
do actor.
do actor.
mean actor. log standard
mean actor. log standard
deviation that's weird
is this
standard I'm assuming this is standard
standard I'm assuming this is standard
if it's in clean
RL and then how do they do the
um how do they do this section
here where's the
loss MB time ratio where's the loss
function oh this looks the same doesn't
function oh this looks the same doesn't
it am I wrong here or is this just ident
it am I wrong here or is this just ident
identical to the uh the
original the clean RL
code is it just you get log
problems I think you just get log probs
problems I think you just get log probs
right
policy loss
policy loss
is minus advantages times
is minus advantages times
ratio clamp
ratio clamp
coefficient this is identical
code so I think it's literally just the
code so I think it's literally just the
sampling of
sampling of
is there a log
is there a log
ratio yeah yeah so this is literally you
ratio yeah yeah so this is literally you
just okay I didn't actually know that um
just okay I didn't actually know that um
I thought that there was a for some
I thought that there was a for some
reason I thought there was like a
reason I thought there was like a
difference in the optimization algorithm
difference in the optimization algorithm
or the loss or something with continuous
or the loss or something with continuous
but it looks like there isn't it looks
but it looks like there isn't it looks
like if I add the
like if I add the
sampler then uh we're good to go so that
sampler then uh we're good to go so that
actually makes me much more comfortable
actually makes me much more comfortable
doing this
so let's go look at that
so let's go look at that
code I've actually never bothered with
code I've actually never bothered with
continuous control like because you're
continuous control like because you're
just always dis discretizing it
just always dis discretizing it
works and their end their Ms are
slow and usually too simple as well
slow and usually too simple as well
because they're too slow
let's now
do we're going to add this to clean RL
do we're going to add this to clean RL
um the one thing is we need to have some
um the one thing is we need to have some
way of
way of
knowing whether the logits
knowing whether the logits
are continuous or so I'm going to hack
are continuous or so I'm going to hack
it for now
where is it sample
logits has
logits has
Adder
policy is continuous and so this is
policy is continuous and so this is
going to be oops this is going to just
going to be oops this is going to just
be a quick
be a quick
hack for now we on the dev
branch and then we're going to
branch and then we're going to
do that is continuous
here this continuous is
false man so much stuff needs to be
false man so much stuff needs to be
fixed in here maybe this was what I'll
fixed in here maybe this was what I'll
do next on puffer for uh
do next on puffer for uh
1.1 this whole framework code is really
Jank it's continuous
oops LF is
discret
discret
so now we do the sample from
so now we do the sample from
here which is going to be
oo that's kind of
Jank action log prob
where do I add
this hold
this hold
on
on
models this doesn't take action
models this doesn't take action
right my API doesn't take action right
right my API doesn't take action right
yeah look up can cat it doesn't take
yeah look up can cat it doesn't take
action just this rapper does
action just this rapper does
so what I do
is is
and so if action is none then we do
and so if action is none then we do
action is going to be equal
action is going to be equal
[Music]
to logits do
sample and then where do we get log
sample and then where do we get log
probs
log this is Jank very
log this is Jank very
Jank I'm tempted to mess with this whole
Jank I'm tempted to mess with this whole
section just to make it reasonable
147 two and a half
hours I could probably do
hours I could probably do
it this is a very I'm a little hesitant
it this is a very I'm a little hesitant
to mess with it too much this is a very
to mess with it too much this is a very
critical section of code but I really
critical section of code but I really
hate these rappers
well I guess for now what we're going to
well I guess for now what we're going to
do is we're just going to add this as a
do is we're just going to add this as a
pathway
pathway
right
um probs
um probs
equals logits
equals logits
dolog prob of action
entropy logits
entropy logits
dotp
dot there's
dot there's
value what's this thing
value what's this thing
return oh this just returned so return
return oh this just returned so return
action long problems entropy
okay so this actually might be fine for
okay so this actually might be fine for
now I just do it this way let's see what
now I just do it this way let's see what
Miss what's missing from
that right I didn't actually update I
that right I didn't actually update I
got to update the network
right
models let's go check on models
models let's go check on models
[Music]
uh right so this decoder cannot
uh right so this decoder cannot
be cannot be this it's got to be action
mean and action log standard
mean and action log standard
deviation
deviation
self. coder
self. coder
mean is going to be
it's really weird how they
have oh this is the whole policy that's
why layer in
it they don't have standard
it they don't have standard
deviation standard deviations are weird
deviation standard deviations are weird
here have to look at those
I think you do standard deviation 01
I think you do standard deviation 01
though right yeah then stealth.
though right yeah then stealth.
decoder log
STD this is a just a parameter isn't
it wait what
parameter torch. z a
parameter torch. z a
one
okay this is weird but
okay this is weird but
sure and then
LF self. is
LF self. is
continuous
continuous
mean log STD
mean log STD
STD see this gives you wrong code so I
STD see this gives you wrong code so I
got to check it
got to check it
um decoder
um decoder
mean decoder log standard
mean decoder log standard
deviation band as mean
okay and then we
okay and then we
do standard deviation is going to be
do standard deviation is going to be
this is wrong as well torch.
this is wrong as well torch.
x a log standard deviation and then we
x a log standard deviation and then we
do
do
probs equals torch. distributions normal
probs equals torch. distributions normal
mean standard deviation and you don't
mean standard deviation and you don't
dolog prob yet you do
you just return probs
you just return probs
right return probs
value I think that's
it can I broadcast okay so we still have
it can I broadcast okay so we still have
this broadcast
this broadcast
error but we got farther this
error but we got farther this
time let's see do we get
here
here
nice are these supposed to be
nice are these supposed to be
um Pro no wait it's a normal
um Pro no wait it's a normal
so this is not probs I don't know why
so this is not probs I don't know why
it's called that we'll have to edit that
it's called that we'll have to edit that
they're log probs not probs right I'm
they're log probs not probs right I'm
pretty sure these are log props yeah
pretty sure these are log props yeah
because this is log standard
because this is log standard
deviation anyways
though and then this
gets oh and we don't need to we can get
gets oh and we don't need to we can get
rid of that line that's likely to cause
rid of that line that's likely to cause
uh bugs I added this thing
uh bugs I added this thing
before yeah this is not needed anymore
before yeah this is not needed anymore
this is likely to cause bugs uh we don't
this is likely to cause bugs uh we don't
need
this yes this is
good
good
and oh I do need to add it though to
and oh I do need to add it though to
right I do need to add the reshape to
right I do need to add the reshape to
probs that's where it needs to be added
probs that's where it needs to be added
so we're going to
so we're going to
add
batch yeah like
this normal has no ATT okay so you
this normal has no ATT okay so you
cannot view a normal
you can't view normal this
you can't view normal this
way so let's let's just see what's in
way so let's let's just see what's in
clean uh the framework file
here so
batch maybe it's maybe it's
this normal has no attribute shape
this normal has no attribute shape
uh okay
so something's got to have the shape
right yeah we're going to just do logic.
right yeah we're going to just do logic.
lo. shape
still could not
broadcast oh cuz it's not the log probs
broadcast oh cuz it's not the log probs
that need to be viewed duh it's it's
that need to be viewed duh it's it's
this
right yeah yeah yeah this is this is
correct still
no okay well let's check uh puffer lib
no okay well let's check uh puffer lib
let's check the forward
pass train what is
pass train what is
it eval forward
here this should be giving us uh non-f
here this should be giving us uh non-f
flat
data which is correct right here so this
data which is correct right here so this
is giving us the correct correct shape
data let's just uh keep going
here still
correct still correct
ah so this does work now
ah so this does work now
oh log probs NP does not work okay
oh log probs NP does not work okay
that's fine that's
easy view I guess this needs to
easy view I guess this needs to
be
multiple uh log probs MP still
is is it the other way around
I think this is supposed to be summed
I think this is supposed to be summed
right
right
because torch. stack. t. someone yeah
because torch. stack. t. someone yeah
yeah yeah so you stack uh use some log
probs and perfect this uh this is
probs and perfect this uh this is
now yeah this is perfect this is where
now yeah this is perfect this is where
we want to be um
let's go look at well first of
let's go look at well first of
all puffer lip
Vector shouldn't be
Vector
maybe let's see what the v action space
maybe let's see what the v action space
is
vn. action
vn. action
space ven. action
space ven. action
space is a
box oh but the box is from negative -1
box oh but the box is from negative -1
to one and this is out of range so
this is out of
this is out of
range so I think it's a clip
range so I think it's a clip
right I think there's action
clipping I'm just going to put it in the
clipping I'm just going to put it in the
model for now
model for now
right when the clean
right when the clean
RL let me just make sure that they
RL let me just make sure that they
actually
clip
cuz H right here clip action you see
this so I think I can just add a
wrapper then I don't have to put it in
wrapper then I don't have to put it in
the model code that's way
the model code that's way
better though it's a little weird not to
better though it's a little weird not to
cuz like seems like the model should be
cuz like seems like the model should be
penalized for outputting Stuff way
penalized for outputting Stuff way
outside the range cuz otherwise it's
outside the range cuz otherwise it's
just going to keep drifting but whatever
just going to keep drifting but whatever
you know we'll we'll deal with that
later classic control
later classic control
continuous uh
continuous uh
environment and we'll
environment and we'll
do equals gymnasium rappers uh clip
do equals gymnasium rappers uh clip
action
that's all we
that's all we
need I think that's all we
need we don't need any of the other
need we don't need any of the other
clipping it should be
fun still do not
match maybe this is not clipping
match maybe this is not clipping
the oh that's gross yeah
the oh that's gross yeah
so this is clipping the actions when the
so this is clipping the actions when the
actions come in but you're not allowed
actions come in but you're not allowed
to pass an action that doesn't fit the
to pass an action that doesn't fit the
action space to gymnasium so this
action space to gymnasium so this
wrapper is actually
wrapper is actually
useless uh and we have to do this in the
useless uh and we have to do this in the
model or
model or
something do we want to do it in the
something do we want to do it in the
model or do we want to do
model or do we want to do
it
it
shoot dang I don't know where we want to
shoot dang I don't know where we want to
do that huh
[Music]
[Music]
so the issue here is that like gymnasium
so the issue here is that like gymnasium
expects you to return actions that are
expects you to return actions that are
within the defined action space which is
within the defined action space which is
negative 1 to one and they have this
negative 1 to one and they have this
wrapper that will clip actions for you
wrapper that will clip actions for you
but if you're being strict with the API
but if you're being strict with the API
like puffer lib is to prevent you from
like puffer lib is to prevent you from
bugging stuff um the action should not
bugging stuff um the action should not
be sent to the environment at all when
be sent to the environment at all when
they're out of range
they're out of range
so the way to fix this is going to be to
so the way to fix this is going to be to
make my own version of this rapper uh
make my own version of this rapper uh
that does not suck that's what it's
that does not suck that's what it's
going to
going to
be
be
right yes that's the correct
answer um
I thought I had more rappers than
this don't have more wrappers in
this don't have more wrappers in
this or is it
postprocess oh yeah it's in post process
postprocess oh yeah it's in post process
cool so let's just add right to the top
cool so let's just add right to the top
of this uh clip
of this uh clip
actions and we're going to do this will
actions and we're going to do this will
be
be
a gymnasium
a gymnasium
wrapper and this is going to fill this
wrapper and this is going to fill this
with probably what's the implementation
with probably what's the implementation
of the existing uh thing but it's
of the existing uh thing but it's
actually this is wrong so what we need
actually this is wrong so what we need
to do is action space
to do is action space
equals so first
equals so first
assert this only works for
assert this only works for
boxes so gymnasium spaces.
boxes so gymnasium spaces.
boox and then we're going to do high
boox and then we're going to do high
equals to
how do we get the high and the low value
how do we get the high and the low value
from the D
from the D
type
um Min value of
um Min value of
numpy python Min value of dtype
numpy python Min value of dtype
I don't know if it's a numpy d type is
I don't know if it's a numpy d type is
the
the
thing numpy
thing numpy
Min num. Min scaler type
that's
that's
better you don't need to reset it here I
better you don't need to reset it here I
don't know why I added
that you don't need any of
that you don't need any of
this and you do need to do clip this
this and you do need to do clip this
to
to
self. n. action space.
low cool cool
um this
um this
works I need to go okay I need to take a
works I need to go okay I need to take a
quick break to go do one thing I'll be
quick break to go do one thing I'll be
right back and then we will we'll finish
right back and then we will we'll finish
this up and hopefully we'll have this
this up and hopefully we'll have this
environment training rather
quickly
e
e
e
e
e
e
e
e
e
e
e
e
e
e
e
e
e
e
e
e
e e
okay we're back
okay we're back
here let's um let's finish
this this
clip actions I think this is done
clip actions I think this is done
right
yeah
yeah
postprocess clip actions
I actually should make this clip action
I actually should make this clip action
the single agent one
right and then Max scaler type so
right and then Max scaler type so
there's no Max scaler type that's weird
there's no Max scaler type that's weird
there's a Min one but not a Max
there's a Min one but not a Max
one Min scaler
type numpy Max scaler type or
something max value of D type
I okay that's what I thought that's
I okay that's what I thought that's
really weird that there's um a separate
API but
min max like this
right you can do D type
right you can do D type
[Music]
[Music]
info
info
low
low
equal D type info yeah there we
go invalid
F
info okay going to be super
buggy Roman is the screen is the screen
buggy Roman is the screen is the screen
updated
now wait is the Stream not
now wait is the Stream not
working I flipped it already if it got
working I flipped it already if it got
stuck that's
weird looks like it's
weird looks like it's
working yeah okay it's just there's a
working yeah okay it's just there's a
there's a stream delay it's
weird it shouldn't have been more than a
weird it shouldn't have been more than a
few second delay though cuz I flipped
few second delay though cuz I flipped
the audio back and the screen back at
the audio back and the screen back at
about the same time that's really
weird uh okay let's see what this gave
weird uh okay let's see what this gave
us we're going to get this working today
us we're going to get this working today
I do have to go to a 500 PM
I do have to go to a 500 PM
meeting but uh hopefully we have this
meeting but uh hopefully we have this
working by
working by
then validate sample that's
then validate sample that's
weird value is not
broadcastable 32 by 16 is 512
broadcastable 32 by 16 is 512
but why would it be 32 by 16 in the
but why would it be 32 by 16 in the
first
first
place assumedly during training it does
place assumedly during training it does
this
right assumedly during
training okay if there's a 30 to 60
training okay if there's a 30 to 60
second DNC that's really
second DNC that's really
weird
weird
um does it seem like what I'm saying is
um does it seem like what I'm saying is
like 30 to 60 seconds desinc from the
like 30 to 60 seconds desinc from the
video or like you can see my camera
video or like you can see my camera
right does it look like my uh what I'm
right does it look like my uh what I'm
saying is 30 seconds dect or is it just
saying is 30 seconds dect or is it just
like a weird scene uh scene switch
thing camera is full synced okay if
thing camera is full synced okay if
camera's full synced and audio is fully
camera's full synced and audio is fully
synced and everything should be good I
synced and everything should be good I
think it's just a OBS uh scene switching
think it's just a OBS uh scene switching
thing cuz this is going through restream
thing cuz this is going through restream
IO for
IO for
um X and YouTube I'm probably going to
um X and YouTube I'm probably going to
since this has been working well I'm
since this has been working well I'm
probably going to get the premium on it
probably going to get the premium on it
and do twitch as
and do twitch as
well we'll see I got to get like a good
well we'll see I got to get like a good
multi- chat application I got to get
multi- chat application I got to get
like a good multi- chat that'll just
like a good multi- chat that'll just
combine all my Chats on the stream that
combine all my Chats on the stream that
would be
nice I don't know where I would put it I
nice I don't know where I would put it I
guess i' would have to put it like next
guess i' would have to put it like next
to my camera
to my camera
here um right
here um right
there can't put it here puffer occupies
there can't put it here puffer occupies
this
[Music]
corner I get so much Amusement out of
corner I get so much Amusement out of
this this
mascot took like 200 messages back and
mascot took like 200 messages back and
forth with two different uh artists to
forth with two different uh artists to
get this puffer just the way I wanted
him okay
so it's kind of odd
so this sample logits function right
is this is working on the structure
data so it's do
some very
odd we could just do like if Len
odd we could just do like if Len
of. look. shape greater than two we put
of. look. shape greater than two we put
a break
point
point
no what do you mean
no where is it
no where is it
wrong right here
logits do log prob
logits do log prob
action do
shape okay we'll just
try no not this
okay interesting so this has now given
okay interesting so this has now given
us this is got to be a training mini
us this is got to be a training mini
batch
right but I have some of
one how does that make sense because
one how does that make sense because
uh because I'm stacking along the First
uh because I'm stacking along the First
Dimension so actually this has got to be
Dimension so actually this has got to be
sum of minus one
sum of minus one
here
here
right and then if I do
action do
view we'll see how far this
view we'll see how far this
gets I think that the batch uh bat shape
gets I think that the batch uh bat shape
operation might still be wrong but this
operation might still be wrong but this
should be
closer value is still not
closer value is still not
broadcastable very odd
so let's see what's going on with
this action is this
shape
ah bat shape plus plus event shape
so it says that logits are
so it says that logits are
flat I
see
see
so this is not too
so this is not too
bad all I need to do
bad all I need to do
is I get the bat shape right
and I
do. entropy
h a little awkward
frankly I see why it does
this the issue is that uh I have like
this the issue is that uh I have like
one API that's returning structure data
one API that's returning structure data
and one that's returning flat data and
and one that's returning flat data and
they need to process it flat but then
they need to process it flat but then
return
structured uh I mean I can just like
structured uh I mean I can just like
Latin everything first right
actually I can just do yeah logits
actually I can just do yeah logits
logic. logr actions.
logic. logr actions.
viw
viw
batch minus
one right do
one right do
sum of
sum of
one and then I can do logits do
one and then I can do logits do
entropy do
entropy do
view
batch minus
batch minus
one do sum of
one and then I have to
one and then I have to
do
do
[Music]
[Music]
Dot
View that's kind of complicated
could not
broadcast into the
shape
shape
really let's see what is going on with
this action gives 81
right log prob uh these are actually
right log prob uh these are actually
both supposed to be
both supposed to be
flapped but I don't need to view
flapped but I don't need to view
these wait do I need to view
these let's just make something work
these let's just make something work
first and then we'll uh we can clean it
up must match size of
tensor
really size of tensor
really size of tensor
a must match
slightly
slightly
awkward all just shape stuff I'm
awkward all just shape stuff I'm
following exactly what's going on with
following exactly what's going on with
this so I'm not just like randomly
this so I'm not just like randomly
changing stuff um I am following this in
changing stuff um I am following this in
my head though it's a little hard to
my head though it's a little hard to
explain it's easier to just do it and
explain it's easier to just do it and
show
show
you
shape dot shape yeah so
shape dot shape yeah so
problems.
problems.
shape interesting
shape interesting
so this is
so this is
actually evidently supposed to be
actually evidently supposed to be
flat that actually makes it easier
flat that actually makes it easier
right because entropy is probably also
right because entropy is probably also
supposed to be flat yes it is so I
supposed to be flat yes it is so I
actually that's very convenient I don't
actually that's very convenient I don't
need to reshape at all
need to reshape at all
all I should be able to do like
all I should be able to do like
this and then we'll see what
happens ah that actually does work so I
happens ah that actually does work so I
was a little I was getting a little bit
was a little I was getting a little bit
annoyed by the amount of API Jank that
annoyed by the amount of API Jank that
was going on but with that deleted it's
was going on but with that deleted it's
not bad does this
not bad does this
train ah this does train
awesome the reward is going down not
awesome the reward is going down not
up but uh it does actually
train
cool now we will go get some reasonable
cool now we will go get some reasonable
settings and we will try to actually
settings and we will try to actually
solve this thing
this is what I used for cart
this is what I used for cart
pole this seems suitable
pole this seems suitable
for racing as
well uh well I guess not racing we're
well uh well I guess not racing we're
not doing this anymore right it's
not doing this anymore right it's
suitable
suitable
[Music]
[Music]
for
for
continuous cart Pole or continuous uh
continuous cart Pole or continuous uh
Mountain
Mountain
car num M's M batch size so
car num M's M batch size so
64 synchronized
64 synchronized
environments let's see if it's fast
environments let's see if it's fast
enough to run single
core not all that fast but reasonable
core not all that fast but reasonable
enough i' I
enough i' I
guess very weird
guess very weird
how the dashboard starts updating very
how the dashboard starts updating very
rapidly all of a
rapidly all of a
sudden dashboard's not supposed to do
that
that
well no big deal
is there a discreet version of mountain
is there a discreet version of mountain
car that I contest
car that I contest
against let's
against let's
see that would
see that would
be most
appreciated Mountain car continuous this
appreciated Mountain car continuous this
seems to imply that there is a
discreet let's go look at the gymnasium
Source uh there
is there is a mountain
is there is a mountain
car and it
car and it
appears that it
appears that it
has discrete
has discrete
actions so let's go add this to the uh
actions so let's go add this to the uh
non
non
continuous control one where we go
continuous control one where we go
classic control let's just
add these aliases are dumb let's add
add these aliases are dumb let's add
like this
like this
and then let's
and then let's
do mountain
do mountain
car and then M name is Mountain car B
0 car and then this needs to be Mountain
0 car and then this needs to be Mountain
car
car
continuous so if we run this
continuous so if we run this
version unknown
version unknown
environment that is my bad
this is a dumb error
this is a dumb error
message I think I should just get rid of
message I think I should just get rid of
it this should just be gym. gynasium
it this should just be gym. gynasium
doake
cannot access free variable
cannot access free variable
entropy that is
entropy that is
very
odd did I break
odd did I break
something entropy where is
entropy I have to actually look at my
entropy I have to actually look at my
source code I don't know what happened
source code I don't know what happened
here something weird happened
in Sample logic something weird
in Sample logic something weird
happened uh I Define
entropy ah it is
a it's should be logits
entropy I was overwriting the function
name
name
cool so now we do have Mountain
cool so now we do have Mountain
car as an
environment and it seems to be very
environment and it seems to be very
rapidly not learning anything
rapidly not learning anything
let's figure out what is going on with
that it's got episode Yep this is all
that it's got episode Yep this is all
very
reasonable something in the config
maybe start by giving it some reasonable
maybe start by giving it some reasonable
scale
something very odd is happening with
something very odd is happening with
this
dashboard
if ah so this is um
that's something I'll will have to fix
that's something I'll will have to fix
there's no big
deal return updates
with that's fine no big deal with
that now the real question is
that now the real question is
why is this slow
Mountain
Mountain
car real question why is this slow
right appears to just be getting worse
right appears to just be getting worse
and
worse and the episodes keep getting
worse and the episodes keep getting
longer so it looks like this is never
longer so it looks like this is never
resetting so I'm guessing this is one of
resetting so I'm guessing this is one of
those obnoxious
those obnoxious
environments that requires a Time step
environments that requires a Time step
Horizon to be
useful I swear I saw those arguments
useful I swear I saw those arguments
just a moment
ago reward
ago reward
there's got to be
there's got to be
a
a
clip a horizon or something
right fix time
Horizon for Mountain
car though I don't see it here is it
car though I don't see it here is it
possible that I'm not actually
possible that I'm not actually
interpreting truncated
correctly tch. SU
let's see if we're actually ever getting
let's see if we're actually ever getting
a done or truncated
signal and this is a numpy sum not a
signal and this is a numpy sum not a
torch
sum so let's figure out what is going
sum so let's figure out what is going
wrong
wrong
here and it does look like I have a
sum and they actually they all all
sum and they actually they all all
say they all say
say they all say
truncated not terminated
truncated not terminated
truncated so possibly puffer is not set
truncated so possibly puffer is not set
up to handle truncated
up to handle truncated
correctly let's go take a look at
that async
reset if n
reset if n
DOD I'm using N.D to detect
DOD I'm using N.D to detect
resets
resets
slash done
slash done
self. okay
so self.
so self.
ah big mistake right here done or
ah big mistake right here done or
truncated
good bug fix for the
day and then I do have a self. done here
day and then I do have a self. done here
do I not in the multi-agent version as
do I not in the multi-agent version as
well
and probably this is a property
done probably this is good enough for
done probably this is good enough for
now
way way
better so now I can actually
better so now I can actually
see uh that this is working correctly
see uh that this is working correctly
that this is truncating correctly at
that this is truncating correctly at
least the value loss is through the
least the value loss is through the
roof which doesn't really make much
roof which doesn't really make much
sense whatsoever
value law should never be that
high and it doesn't appear to be
high and it doesn't appear to be
decreasing either which once it's that
decreasing either which once it's that
large it's probably just learning in
large it's probably just learning in
stability the question is why is it that
ridiculous I'm going to open up the
ridiculous I'm going to open up the
default model to look at the data right
default model to look at the data right
before
it goes into the
network to see what it
is this looks fine
right yeah so this is reasonably
right yeah so this is reasonably
conditioned data there's nothing wrong
conditioned data there's nothing wrong
with this
data this is
data this is
fine uh I think that it is quite
fine uh I think that it is quite
possible that we do need these clean our
possible that we do need these clean our
all wrappers you know it might be the
all wrappers you know it might be the
case
that normalize
reward very very
weird is this the environment I think it
is now this is half cheetah which is
is now this is half cheetah which is
more
more
complicated
um it's funny that they have this
um it's funny that they have this
flatten op as
well let's just
well let's just
do I don't think we have particularly
do I don't think we have particularly
poor conditioned anything except the
poor conditioned anything except the
position data is
position data is
probably the position data is probably
probably the position data is probably
quite bad
right so let's go figure this
out yikes
don't think we need this
one don't think we need this one either
one don't think we need this one either
I don't even know if we need this
I don't even know if we need this
normalized to be
normalized to be
honest
um I think we get rid of this
um I think we get rid of this
and let's just do let's just try this
and let's just do let's just try this
and see what
happens value loss
happens value loss
explodes
explodes
okay if I clip to
minus5 Value loss is still
minus5 Value loss is still
exploded very weird maybe I do need the
exploded very weird maybe I do need the
normalize you know let's try the let's
normalize you know let's try the let's
try the
try the
originals except for this one reward
originals except for this one reward
wrapper this do
anything right
so they forgot to modify the space of
so they forgot to modify the space of
course they did
I can clip it right I can clip the
observations very very weird the
observations very very weird the
mountain car is this odd
going to need to see what data
going to need to see what data
is producing
this value loss should be prediction of
this value loss should be prediction of
the
the
reward so if I just clip the reward from
reward so if I just clip the reward from
negative 1 to1 and I clip the OBS as
negative 1 to1 and I clip the OBS as
well what happens
still crazy high value
still crazy high value
loss this is not the continuous version
either am I missing
either am I missing
something learning rate too high
something learning rate too high
something like
something like
that maybe there are
well we don't really
have maybe hyper parameters for this
have maybe hyper parameters for this
maybe continuous controls just
maybe continuous controls just
like 3 e minus
Lambda very
Lambda very
interesting we'll
add what do we have our defaults what
add what do we have our defaults what
are our
are our
defaults these are all
defaults these are all
reasonable
um why would the value loss be that High
um why would the value loss be that High
Why would the value loss be that high
Why would the value loss be that high
actually let me make sure first of all
actually let me make sure first of all
that I'm not I just didn't break
that I'm not I just didn't break
something right it's also possible
n cart pole definitely does exist so I'm
n cart pole definitely does exist so I'm
not sure what's up with
that oh I need n
that oh I need n
name maybe cartp
b0 ah so I did break something something
b0 ah so I did break something something
maybe this swing up does this works like
maybe this swing up does this works like
the reward is going up here um
the reward is going up here um
but the value loss is
nuts possibly that could just be the
nuts possibly that could just be the
reward
scale yeah because you can see that this
scale yeah because you can see that this
is learning
not very efficiently but it is
learning
right Mountain car let's see if this is
right Mountain car let's see if this is
going to optimize
whatsoever no it does not
okay let me see if I can find hyper
parameters you only get a positive
parameters you only get a positive
reward when you reach the
top is that how it works
so this could simply be entropy right
d
d
[Music]
m's give it an entropy of
0.05 and we will see whether this gets
0.05 and we will see whether this gets
it
anything it's incredibly obnox
anything it's incredibly obnox
just environment
here let's
see that's
funny he added founder as previously
unemployed this has done okay
she
we'll respond to this
later this actually forces you to write
later this actually forces you to write
bad code this is Chris Lou is one of the
bad code this is Chris Lou is one of the
people who is like I respect incredibly
people who is like I respect incredibly
and writes good code so the fact that
and writes good code so the fact that
the RL code is a mess is enti due to
the RL code is a mess is enti due to
Jack like the pure Jax RL library has
Jack like the pure Jax RL library has
seven deep nested functions you cannot
seven deep nested functions you cannot
tell me that that is a reasonable thing
tell me that that is a reasonable thing
to
do what is wrong with this control lamp
do what is wrong with this control lamp
um doesn't get any rewards it is sparse
um doesn't get any rewards it is sparse
and it's a sparse janky en as
well lunar land Ander one is too
slow their continuous reward version of
slow their continuous reward version of
this
I'm just going to reply to this now
I'm just going to reply to this now
while I think about the other thing
sh
for e
think
hold on what did he he wrote another
hold on what did he he wrote another
thing and it's not showing
me
e
e
e
e
e
e
e
e
e
e e
okay there we go that's a reasonable
reply for
there you
go what
Russ C is a great
helper rust is not a bigger in time
helper rust is not a bigger in time
investment for top not results it's the
investment for top not results it's the
same thing
was it
third we're going to be inflammatory
third we're going to be inflammatory
today
today
because I am sick of engaging
because I am sick of engaging
respectfully with things that are
respectfully with things that are
screwing up the
field like the tool stack has literally
field like the tool stack has literally
just gotten worse we've had 10 years to
just gotten worse we've had 10 years to
fix this and we've made it worse like
fix this and we've made it worse like
good
job okay
um so I basically the thing that I came
um so I basically the thing that I came
to while I was writing that was I either
to while I was writing that was I either
need a a dense reward version of this
need a a dense reward version of this
just for test or I'm going to have to
just for test or I'm going to have to
find something else and it would be way
find something else and it would be way
nicer to have a dense reward version of
nicer to have a dense reward version of
this
so does it tell you
the can I just like do
the can I just like do
this yeah I can write a quick wrapper
right for
uh can I just do like
what is it box or
Mountain eum
Mountain eum
wrapper and all I need to Define here
wrapper and all I need to Define here
is the uh step function
step
so
so
reward plus equal 1 *
reward plus equal 1 *
ABS
ABS
this let's see if that does anything
now
something is very wrong with this
environment that is not training
environment that is not training
whatsoever
whatsoever
um I'm trying to think what I can do
um I'm trying to think what I can do
with
with
this this is like a very very simple
this this is like a very very simple
environment
position is greater than or equal to
045 weird
maybe it needs to
be no this
H very
weird e
I'm trying to think what would be wrong
I'm trying to think what would be wrong
with this thing a very simple
with this thing a very simple
environment well it's kind of deceptive
environment well it's kind of deceptive
in the sense that like it seems like
in the sense that like it seems like
it's very
it's very
simple
simple
um can I play it is that a thing I can
do
do
eval uh
eval uh
render
render
human does it have this
doesn't seem to work correctly
right uh I don't think it's possible to
right uh I don't think it's possible to
get it to swing
get it to swing
up what the heck
the key controls are not letting me do
the key controls are not letting me do
this it's kind of just like doing
this it's kind of just like doing
whatever it
wants oh wait this is a random policy
wants oh wait this is a random policy
that's why I'm not actually playing
it let's see if
it let's see if
um if I like open this up
96 okay let's just go check
96 okay let's just go check
something is like bizarre here the
something is like bizarre here the
rewards are just screwed right like
rewards are just screwed right like
something is something is bizarre
something is something is bizarre
here okay so
here okay so
ooh okay so the rewards are
ooh okay so the rewards are
not this is
0.05 okay so this it's not sent
0.05 okay so this it's not sent
it's
it's
weird let's go figure out where where
weird let's go figure out where where
this is supposed to
be position along the X AIS is
the position
the position
is a uniform random value in .06 to .04
is a uniform random value in .06 to .04
so negative .05 is
so negative .05 is
the uh the
the uh the
default so let's
default so let's
do OBS minus
o 0.5 right
okay
zero
zero
who
0.1 looks like the bottom is
0.1 let me see does it make it better or
0.1 let me see does it make it better or
worse
what the heck is
what the heck is
the what the heck is the
center what is what is the
center what is what is the
center pi/ 2
huh
position
position
what what is the center of this stupid
environment like what is so 320
okay it's
ridiculous can I get it from the
ridiculous can I get it from the
velocity
velocity
here- 1 *
here- 1 *
Force cosine of three
Force cosine of three
times the position
times the position
what the heck does that make the
center cosine of
center cosine of
0o is
0o is
one so I don't know minus self that's a
one so I don't know minus self that's a
weird maybe I can just figure out the
oh maybe if I can figure out where it's
oh maybe if I can figure out where it's
drawing the
sign right so it's Pi game but it's
sign right so it's Pi game but it's
going to
going to
draw it's going to draw the sign wave
draw it's going to draw the sign wave
somewhere
right rotate
right rotate
[Music]
[Music]
red
well okay so they're not going to give
well okay so they're not going to give
me
me
um a
um a
reasonable
thing
thing
reset just custom reset
reset just custom reset
bounds I would really expect it to be
bounds I would really expect it to be
0.05
no
no
[Music]
[Music]
0.1
0.01 let's just say what the let's just
0.01 let's just say what the let's just
see what the
see what the
the position is
Right
negative yeah negative .05
right so maybe it's going to be
right so maybe it's going to be
ABS plus
0.5 like this
that looks
that looks
good and
good and
uh yeah let's just let's just see what
uh yeah let's just let's just see what
happens if I do this
15 well now it trains
right let's just do D-
right let's just do D-
Baseline we'll let this train for a
Baseline we'll let this train for a
couple minutes and then we'll uh we'll
couple minutes and then we'll uh we'll
see if it looks like it solved the
see if it looks like it solved the
en screw your reward function
e
I mean this was really like I wrote this
I mean this was really like I wrote this
article in maybe 20 30 minutes it was
article in maybe 20 30 minutes it was
like a quick I am mad at Jack and I want
like a quick I am mad at Jack and I want
to talk about
it one
good
for e
okay we got our Mountain
okay we got our Mountain
car let's do
eval and let's see how it
goes
goes
whoop
two doesn't look like it's very
good
good
really oh did I add entropy wait wait I
really oh did I add entropy wait wait I
screwed it up I I totally screwed it up
screwed it up I I totally screwed it up
um I added like
way yeah see this this entropy needs to
way yeah see this this entropy needs to
go
go
away okay I got to train a new one hope
away okay I got to train a new one hope
hopefully this is way
better yeah
immediately this might have to be more
immediately this might have to be more
than 500k as well we'll
than 500k as well we'll
see
see
31 two
going up
quickly I was supposed to this was
quickly I was supposed to this was
supposed to fix the flashing thing
but
but
six 35 okay it's stuck at it looks like
six 35 okay it's stuck at it looks like
it is roughly uh
it is roughly uh
stuck here so it's leveled off in
stuck here so it's leveled off in
training
35 36 something about there at least
35 36 something about there at least
with the current hyper prms
I don't know why it's just going up this
I don't know why it's just going up this
side Hill right here right
H
interesting really didn't want to be
interesting really didn't want to be
spending a whole bunch of time on
spending a whole bunch of time on
Mountain car of all things
today um I guess I can just go run the
today um I guess I can just go run the
continuous one though
continuous one though
right like I could just go run mount car
continuous
continuous
car
continuous oh wait I uh I have two
continuous oh wait I uh I have two
separate M's right I need to adjust the
separate M's right I need to adjust the
the rewards
we do clip
action uh we don't need these transform
action uh we don't need these transform
observations as we found out right we
observations as we found out right we
just need clip action
everything else should be
everything else should be
good and this needs to
be hey Aiden
welcome we are currently attempting to
welcome we are currently attempting to
make continuous control work but I'm
make continuous control work but I'm
having difficulty finding any remotely
having difficulty finding any remotely
reasonable environments that we can just
reasonable environments that we can just
use to test which is kind of sad uh I
use to test which is kind of sad uh I
might actually just have to write
one interestingly
one interestingly
this the reward skill is completely
this the reward skill is completely
different on uh
different on uh
on this one
on this one
here oh I think the OBS might be
here oh I think the OBS might be
different
different
right well we'll see in just a moment if
right well we'll see in just a moment if
it learned if it learned anything I
it learned if it learned anything I
don't think it did but maybe the value
don't think it did but maybe the value
loss is exploding I can see on the right
loss is exploding I can see on the right
which is probably not
which is probably not
good uh
good uh
so continuous
such a simple environment as well it's
such a simple environment as well it's
just like
Jank oh it looks like it's doing
Jank oh it looks like it's doing
something right kind
something right kind
of hard to
of hard to
say that looks a little better than
say that looks a little better than
random oh yeah yeah that's definitely
random oh yeah yeah that's definitely
better than
better than
random oh wait hey look at
that yay continuous control
it's not
it's not
amazing it's not amazing and I actually
amazing it's not amazing and I actually
probably should just in case it's like
probably should just in case it's like
different I should run this with a
different I should run this with a
random policy just for comparison right
random policy just for comparison right
yeah let's run this with a random policy
yeah let's run this with a random policy
just to make sure I'm not uh completely
just to make sure I'm not uh completely
missing
this so this is a random policy
okay no the random policy is actually
okay no the random policy is actually
just as good so yeah this thing is not
just as good so yeah this thing is not
learning much let's figure out
why I feel like cheating on
why I feel like cheating on
that the cart Pole or the what the the
that the cart Pole or the what the the
car
M oh the fact that like just not running
M oh the fact that like just not running
the Baseline
uh OBS are the
same yeah OB should be the same
same yeah OB should be the same
here so this should actually just be the
here so this should actually just be the
same exact thing for
training sure what have you been do
training sure what have you been do
doing an
ml
ml
sh this thing is going to bother me
sh this thing is going to bother me
isn't it
rewards too big
maybe let's see
okay that's
eval random
policy hold on I'm trying to figure this
policy hold on I'm trying to figure this
out
starts at
16 15 okay so this is not optimizing
right oh wait
no
no
17 well I changed the reward scale here
17 well I changed the reward scale here
I shouldn't do
I shouldn't do
that oh wait I just saw it I just saw it
that oh wait I just saw it I just saw it
be better right
right let's let's rerun this I want to
right let's let's rerun this I want to
see what the I just want to see the
see what the I just want to see the
training curves on this actually you
training curves on this actually you
know that that's all I need cuz I need
know that that's all I need cuz I need
to just know if this is optimizing or
to just know if this is optimizing or
not and uh if it's optimizing then I can
not and uh if it's optimizing then I can
I can go from
there
what not sure what your on about there
what not sure what your on about there
Aiden uh I'm trying to figure this rlm
Aiden uh I'm trying to figure this rlm
out
um is this
it yeah this is the right one
it yeah this is the right one
so okay this is actually
so okay this is actually
optimizing this is
optimizing this is
optimizing um we'll need some benchmarks
optimizing um we'll need some benchmarks
and stuff and probably I should just
and stuff and probably I should just
make a little toy EnV to play with um
make a little toy EnV to play with um
that has discreet and continuous because
that has discreet and continuous because
this is a disaster here um so we can do
this is a disaster here um so we can do
that
that
tomorrow I've only got well I've got an
tomorrow I've only got well I've got an
hour I've got an hour now I could make a
hour I've got an hour now I could make a
quick continuous environment
right yeah let's do that I'm going to
right yeah let's do that I'm going to
take I'll be back in 1 minute I got to
take I'll be back in 1 minute I got to
just restro real quick and think about
just restro real quick and think about
what type of environment I want to make
what type of environment I want to make
real quick
e
e e
oops there's the mic okay we're going to
oops there's the mic okay we're going to
make a very simple uh continuous control
make a very simple uh continuous control
environment um that is going to just
environment um that is going to just
be super basic uh test it's going to be
be super basic uh test it's going to be
like can you steer a little ship to a
like can you steer a little ship to a
Target that's it
Target that's it
let's let's go start on that because
let's let's go start on that because
this environment is Jank and if I make
this environment is Jank and if I make
an M I know I'm going to be able to have
an M I know I'm going to be able to have
something that's reasonable
I just
I just
need
continuous okay um go grab some starter
continuous okay um go grab some starter
code from snake maybe
code from snake maybe
or dot
dotn I'd probably just grab all this
dotn I'd probably just grab all this
right
this is a
this is a
gymnasium environment so it's going to
gymnasium environment so it's going to
be substantially simpler than this
right
right
yes I think I
actually let's grab
actually let's grab
ocean like one of these
maybe goal of this is to be quick
so
continuous and we're going to do
continuous and we're going to do
no args don't need
any uh needs to
have observation space which is going to
have observation space which is going to
be
be
a gymnasium spaces
dot
dot
box which is going to contain
10 high will be
10 high will be
10 or no it can be let's make it
10 or no it can be let's make it
reasonable negative 1: one it's going to
reasonable negative 1: one it's going to
have four things in it right it's going
have four things in it right it's going
to have your
to have your
position Target position and so on and
position Target position and so on and
so forth and we actually
so forth and we actually
need uh
discretize it's going to be false if
discretize it's going to be false if
discretize
discretize
action space is going to be a discrete
action space is going to be a discrete
of
of
four else it's going to be gymnasium do
four else it's going to be gymnasium do
spaces. boox of
spaces. boox of
two
two
okay and then render mode is going to be
okay and then render mode is going to be
RGB it's going to be human let's do
RGB it's going to be human let's do
human render mode because I'm not sure
human render mode because I'm not sure
how I would do this with RGB array
um so we're going to
um so we're going to
do self
dot pause is going to
be here self. State equals z of
be here self. State equals z of
four um
four um
we can actually do numpy
we can actually do numpy
random let's just make the numpy random.
random let's just make the numpy random.
Rand or does this function do what I
think
think
or Min =
or Min =
1 =
1 numpy random Rand
okay we'll just have to do uh we'll have
okay we'll just have to do uh we'll have
to multiply that's fine so it's just
to multiply that's fine so it's just
going to be 2 * this minus one 2 * this
going to be 2 * this minus one 2 * this
-
-
one so this gives you uh negative-1 to
one so this gives you uh negative-1 to
one
right and then I'm going to just
right and then I'm going to just
write um
write um
position X X Y Target X Target
position X X Y Target X Target
y
okay and then it's going to return self.
okay and then it's going to return self.
State now the
State now the
action is going to
be
um X is going to be action zero
Y is going to be action we also need in
Y is going to be action we also need in
addition to State we need
addition to State we need
self. velocity is going to be two in
self. velocity is going to be two in
fact this should be on the state
fact this should be on the state
shouldn't
shouldn't
it this should
it this should
be part of the state so we're going to
be part of the state so we're going to
do self.
do self.
state
state
of uh 2 to 4 equal
Z pause X pause y Bell X
Z pause X pause y Bell X
bell
bell
y
okay
State we're going to add the Excel to
State we're going to add the Excel to
the velocity
St
St
of
of
zero is going to be equal
zero is going to be equal
to yeah this is
fine then
if now we need a distance
if now we need a distance
function so we
do
do
zero we
do pause
do pause
X okay
if
if
x
minus equal m is less than 0.1
no 0.05 I
no 0.05 I
think then
we then we get uh a reward
right and actually we don't even need to
right and actually we don't even need to
do this dist is going to be equal
to yeah this and then we're going to do
to yeah this and then we're going to do
1 minus disc is going to be the reward
1 minus disc is going to be the reward
reward equal 0.1 * 1 minus dist that's
good and we will mess with the rewards
good and we will mess with the rewards
and stuff after but this
and stuff after but this
is this is very
is this is very
reasonable and then this doesn't need
reasonable and then this doesn't need
any infos because it will just use the
wrapper and actually this M is so simple
wrapper and actually this M is so simple
that I can just put it into ocean I
that I can just put it into ocean I
think
think
right it is going to technically need a
right it is going to technically need a
renderer which is going to be a little
renderer which is going to be a little
bit more code so I think I'll leave it
bit more code so I think I'll leave it
like this for now
like this for now
um I would like to write a little
um I would like to write a little
renderer real
quick so let's do that
I kind of want to go grab the rayb one
I kind of want to go grab the rayb one
right
I did forget to grab shake today I need
I did forget to grab shake today I need
to go get a
to go get a
shake uh I will I'll give this five
shake uh I will I'll give this five
minutes and then I'm going to go do that
minutes and then I'm going to go do that
real
quick
quick
let's let's just grab this oh this is
let's let's just grab this oh this is
dated let's get the uh the snake one
dated let's get the uh the snake one
from snake snake yeah that doesn't even
from snake snake yeah that doesn't even
need to be there that file should be
need to be there that file should be
deleted
deleted
let's grab the RB client from snake and
let's grab the RB client from snake and
then it's going to be substantially
then it's going to be substantially
simpler than
this
right RB client is going to
right RB client is going to
be doesn't need any of this
be doesn't need any of this
stuff
um oh it does need width I
um oh it does need width I
doesn't
it and then uh size I
guess
guess
1080 80 height is going to be equal to
1080 80 height is going to be equal to
720 that size is equal 100 like
720 that size is equal 100 like
this okay and it window is going to be
this okay and it window is going to be
width
height uper
height uper
lib simple
lib simple
continuous Target FPS is going to be
60 this code is fine
this code is
fine uh and then this needs to
fine uh and then this needs to
be let's
be let's
do pause X pause y Target X Target
do pause X pause y Target X Target
Y and we don't need any of
Y and we don't need any of
this RL do
this RL do
draw rectangle
it's going to be
it's going to be
um there's
Circle yeah there
is of course there
is Center X Center y radius color
is Center X Center y radius color
perfect so we
perfect so we
do uh Center
do uh Center
X
X
so pause
so pause
x y and then we're going to
x y and then we're going to
do uh
do uh
255 255 is going to be the
color and we're going to do
color and we're going to do
Target R and then we are going to use
blue
blue
nice and this background
nice and this background
color
color
is let's go grab the puffer
color I should have this memorized
there's the puffer color I here it is
there's the puffer color I here it is
624 this is
624 this is
the the color that I use for puffer for
the the color that I use for puffer for
everything so we will just
everything so we will just
do this
color and we will fix this uh fix
color and we will fix this uh fix
whatever needs to be fixed with this and
whatever needs to be fixed with this and
this should be good we have to add a
this should be good we have to add a
couple last things which is going to be
couple last things which is going to be
The
Binding if name
Binding if name
equals
equals
continuous make
continuous make
continuous and we probably just want
continuous and we probably just want
something that looks very similar
something that looks very similar
to make
to make
continuous doesn't need any of this
continuous doesn't need any of this
we're going to do discretize
we're going to do discretize
discretize false
discretize false
and then ocean.
and then ocean.
continuous perfect now all we need to do
continuous perfect now all we need to do
is add a binding
is add a binding
to the config for
to the config for
this
ocean ocean what is this is this
ocean ocean what is this is this
ocean grid
we'll just add continuous here I
we'll just add continuous here I
guess
continous okay Python and
continous okay Python and
continuous mode
continuous mode
eval
yeah ocean. ocean has no continuous
right
continuous from do continuous import
continuous box has no attribute
continuous box has no attribute
n right so this is now the now we're
n right so this is now the now we're
getting into a limitation of the policy
we're going to go real quick uh
we're going to go real quick uh
into for we're going to go real quick
into for we're going to go real quick
into
into
this uh
this uh
from for. Models import
from for. Models import
default
policy so I cannot commit any of this
policy so I cannot commit any of this
until I fix things here but that's
until I fix things here but that's
okay not broadcast input from shape six
okay not broadcast input from shape six
into shape
four right because I I forgot to update
four right because I I forgot to update
the the space def which is
the the space def which is
fine this is Space
six not implemented
six not implemented
error render and close
error render and close
Okay uh let's Implement these
up to
up to
client client is
client client is
none if soft. client is none then soft.
none if soft. client is none then soft.
client is going to be this RB
client that's cool
right integer is
required so let's
do yes we have to do a few things here
do yes we have to do a few things here
so what we're going to do
is pause xal
is pause xal
int time s.
int time s.
width let's do this
width let's do this
normal object is not
iterable should be continuous so this
iterable should be continuous so this
should not be being
should not be being
triggered um
triggered um
[Music]
forward
forward
so the goal here is to just have a
so the goal here is to just have a
really simple test
really simple test
en
en
um something is screwy with
this normal object is not iterable what
this normal object is not iterable what
what could that possibly be
right
right
uh Frameworks cleaner
all should be uh continuous
here has attribute policy is continuous
here has attribute policy is continuous
right
you
see wait
what
what
oh this is policy. policy right
again this is just a
hack yeah this is a just a quick hack
hack yeah this is a just a quick hack
and policy. policy okay we're not going
and policy. policy okay we're not going
to be shipping this code this is just we
to be shipping this code this is just we
need to get something working here that
need to get something working here that
that was the goal for
that was the goal for
today action spaces do not match ve
today action spaces do not match ve
action space why
action space why
not uh actions do not match action
not uh actions do not match action
spaces spefic specifically the issue
spaces spefic specifically the issue
rtion continuous
rtion continuous
continuous what do I have the action
continuous what do I have the action
specified
specified
as negative one and
one shut up about my Vim theme
Noah this is the best Vim theme
actions do not match action space yeah
actions do not match action space yeah
this needs a clip this needs a a clip on
it
it
uh continue classic control
right
here this where I want
here this where I want
it probably
it probably
here yeah
that's
fine continuous. reset got unexpected
fine continuous. reset got unexpected
keyword options right that's the new
API continuous
API continuous
has self. State few last bugs
holy okay that's way too fast
holy okay that's way too fast
um let's figure out why that is so
fast these also are supposed to be
fast these also are supposed to be
circles
let's
see oh because I set the the frame rate
see oh because I set the the frame rate
target to be way
target to be way
too way too high
too way too high
duh
um and the velocity to be way too fast
um and the velocity to be way too fast
for 60 FPS right like 10
for 60 FPS right like 10
FPS and
then the actual
then the actual
space is going to
be 1 *
be 1 *
action or 0.01 times action well we'll
action or 0.01 times action well we'll
figure out what looks reasonable in a
figure out what looks reasonable in a
second
right draw a circle expected right
right draw a circle expected right
because you need a
is this just resetting constantly what's
is this just resetting constantly what's
going
on oh well this is returning true for
on oh well this is returning true for
some reason that's
some reason that's
dumb um
and so if dist is less than 0.1 or
and so if dist is less than 0.1 or
actually we'll just do done equals dist
actually we'll just do done equals dist
less than
less than
.1 self dot here self dot tick tick is
.1 self dot here self dot tick tick is
equal to
equal to
zero uh self.
zero uh self.
tick uh
tick uh
truncated equals
truncated equals
uh. take greater
uh. take greater
than 100
done
done
rated technically it's terminal but we
rated technically it's terminal but we
don't care this is
fine not rendering
inbounds so first of all this size is
inbounds so first of all this size is
way too large this should be like
way too large this should be like
20 and with height
ah so this should
be
position this needs to be 1 + position
x
x
wait it's 1+
position x
no
no
0.5 plus position X over two
right
0.5 let's try
this still out of bounds it looks look
this still out of bounds it looks look
like um
like um
print what's going on
here literally order of Ops
okay we still have this gigantically
okay we still have this gigantically
negative value here oh uh if it goes out
negative value here oh uh if it goes out
of bounds we should just yeah we need to
of bounds we should just yeah we need to
do a bounce check on the that's an
do a bounce check on the that's an
environment
environment
error so
if
if
pause X less
pause X less
than what we say negative 1 to
one1 return self. State minus one reward
hey this is kind of a decent little
hey this is kind of a decent little
physics Sim Right Moves around kind of
smoothly yeah I mean we could make it
smoothly yeah I mean we could make it
way finer grain if we
way finer grain if we
want but this is this is what I wanted
right cool so now we get to train this
right cool so now we get to train this
uh and we need to discretize First we're
uh and we need to discretize First we're
going to do a discretize version so I
going to do a discretize version so I
need to actually Define that I should
need to actually Define that I should
make it human playable as
make it human playable as
well
um yeah I should make it
um yeah I should make it
human
human
playable
maybe we'll do that in a
maybe we'll do that in a
bit let's do first the main thing
bit let's do first the main thing
which is
discretize if self.
discretize if self.
discrete we
do
or
or
action is going to be greater than
zero we
zero we
[Music]
do cell
X
X
0.1 negative
there that's the discretized
version
version
discretized
through hey rain uh thank you yeah these
through hey rain uh thank you yeah these
are just chill streams I'm uh thinking
are just chill streams I'm uh thinking
I'm going to start I've been streaming
I'm going to start I've been streaming
on X but I'm now multi streaming it to
on X but I'm now multi streaming it to
YouTube I might start doing it with
YouTube I might start doing it with
twitch as well because this is fun and
twitch as well because this is fun and
uh the main one is my thesis defense
uh the main one is my thesis defense
that's more accessible and then the more
that's more accessible and then the more
technical one is the puffer lib 1.0
technical one is the puffer lib 1.0
which is a live demo of all the stuff
which is a live demo of all the stuff
I've been working on but more
I've been working on but more
technical for now I'm just doing live
technical for now I'm just doing live
Dev on puffer lib and all the various
Dev on puffer lib and all the various
things that are wrong with reinforcement
things that are wrong with reinforcement
learning trying to fix them
where is this EnV argument being
bound there should be an EnV AR
here old streams are backed up on X this
here old streams are backed up on X this
has only been this is a relatively new
has only been this is a relatively new
thing so the main thing is last week I
thing so the main thing is last week I
built the uh multi snake environment I
built the uh multi snake environment I
actually should do a video on that here
actually should do a video on that here
I'll show you real quick
I'll show you real quick
the uh the multi snake I I just did a a
the uh the multi snake I I just did a a
post on it um most of the stuff is on
post on it um most of the stuff is on
here because this is where most of the
here because this is where most of the
AI people are but I've been trying to do
AI people are but I've been trying to do
more you know more branching out of
stuff yeah so this this is the multi
stuff yeah so this this is the multi
snake environment that I made um this is
snake environment that I made um this is
can I expand this
can I expand this
whatsoever not really um
whatsoever not really um
this
this
is
is
4096 uh up to 4096 snakes in the same
4096 uh up to 4096 snakes in the same
environment and this simulation runs at
environment and this simulation runs at
14 million steps per second and trains
14 million steps per second and trains
reinforcement learning at 1 million
reinforcement learning at 1 million
steps per second so I've been working on
steps per second so I've been working on
Tech for high performance Sim and uh
Tech for high performance Sim and uh
working on then making this Tech apply
working on then making this Tech apply
to all of the reinforcement learning
Ms that's what I've been up to mainly
Ms that's what I've been up to mainly
yeah there's cool stuff going on
yeah there's cool stuff going on
reinforcement learning is uh upgrading
reinforcement learning is uh upgrading
very fast and then wait until you see
very fast and then wait until you see
the code for that snake and it's dead
the code for that snake and it's dead
simple it's like 220 lines of scyon and
simple it's like 220 lines of scyon and
uh 200 lines of python something like
uh 200 lines of python something like
that 450 is lines total built it from
that 450 is lines total built it from
scratch in 5 Days whole thing is
scratch in 5 Days whole thing is
streamed on X I might have to upload
streamed on X I might have to upload
those here I don't know how hard that
those here I don't know how hard that
would be if I can easily download them
would be if I can easily download them
from there but hey I'm going to be
from there but hey I'm going to be
making more environments like that live
making more environments like that live
anyways
it's pretty slow going you know it's
it's pretty slow going you know it's
it's not like an hour and it's done
it's not like an hour and it's done
right it's like 30 40 hours a stream for
right it's like 30 40 hours a stream for
something like that but not too
something like that but not too
bad easy enough to like check in every
bad easy enough to like check in every
couple days and see the progress or sit
couple days and see the progress or sit
down and actually learn some Dev if
down and actually learn some Dev if
that's what you're
into give the puffer Li a star on on uh
into give the puffer Li a star on on uh
GitHub if you would helps me out it's
GitHub if you would helps me out it's
basically all I ask all the stuff's open
source all right good night thanks for
source all right good night thanks for
stopping by
why are my nargs not showing up is the
question they should be getting bound so
question they should be getting bound so
this one
this one
here this missing
here this missing
name
name
no so really should be getting bound
but you know whatever we'll just
but you know whatever we'll just
discretize this way for
now right I also have to change
the if
the if
wait is
wait is
instance
instance
ah I need to
if not discretized then you clip the
actions has no attribute
actions has no attribute
discretize
descripti Okay cool so this is the exact
descripti Okay cool so this is the exact
same environment from before um but now
same environment from before um but now
it has a discreet
it has a discreet
mode so this is very important because
mode so this is very important because
what we can
do we can just YOLO this actually and
do we can just YOLO this actually and
see if it learns anything off the
bat
bat
H that's funny
does it just literally solve it
does it just literally solve it
instantly on the first
instantly on the first
settings in like 10
seconds I mean it wouldn't be surprising
right it's still pretty
funny okay mode eval
funny okay mode eval
Baseline
oops oh that's so funny is it learning
oops oh that's so funny is it learning
to not like get all the way to it
to not like get all the way to it
because
it's like getting there and then staying
it's like getting there and then staying
there CU I think that the way I have my
there CU I think that the way I have my
generalized Advantage estimation
generalized Advantage estimation
done yeah that's
done yeah that's
screwy that's actually a good uh
screwy that's actually a good uh
indicator though of a puffer Li thing I
indicator though of a puffer Li thing I
should
should
fix uh I'm going to just patch it here
fix uh I'm going to just patch it here
in the environment for now and then well
in the environment for now and then well
I'm going to just have to stream a bunch
I'm going to just have to stream a bunch
of random stuff this week is just going
of random stuff this week is just going
to have to be a lot of random fixes and
to have to be a lot of random fixes and
things to Puffer because there's so many
things to Puffer because there's so many
things that I've just like neglected
things that I've just like neglected
that need to be uh improved
that need to be uh improved
upon let me just double check my Twitter
upon let me just double check my Twitter
DMS because I have a meeting in uh a
DMS because I have a meeting in uh a
little bit and I want to make sure I'm
little bit and I want to make sure I'm
not missing
not missing
it like if the time is if somebody
it like if the time is if somebody
wanted to do earlier or
wanted to do earlier or
whatever uh nope looks like we're good
whatever uh nope looks like we're good
then I'll put this back let's see if we
then I'll put this back let's see if we
have angry
have angry
people in
let's see too far away from first
let's see too far away from first
party
party
[Music]
independently yeah Chris is good
independently yeah Chris is good
basically taught should be like power
P torch plus
scyon Sim demo with snake soon RL
wide compile time functions
all right that's
all
all
cool let's finish this
I think you need to get
I think you need to get
a big reward here
right done reward equals
right done reward equals
1.0 too
implementation
implementation
making uh agent
making uh agent
not
not
Target without a big reward
Target without a big reward
here that is actually pretty bad that's
here that is actually pretty bad that's
a big screw up on my part pretty
a big screw up on my part pretty
embarrassing one
embarrassing one
but whatever we'll get back to that soon
yeah there it
yeah there it
goes might need to run it a little
goes might need to run it a little
longer than uh we have currently
longer than uh we have currently
right let's just do a slightly better
right let's just do a slightly better
config
maybe slightly better config
maybe slightly better config
right gr we can
right gr we can
do uh
do uh
[Music]
ocean first of all does it work
now let's train it a little more it can
now let's train it a little more it can
have it can have a little bit more uh
have it can have a little bit more uh
SPS right and give it like a little bit
SPS right and give it like a little bit
more juice
let's give it like these where do we
let's give it like these where do we
put Mountain car these settings are good
put Mountain car these settings are good
right maybe 500k is too much but we do
right maybe 500k is too much but we do
continuous like this for 100k
continuous like this for 100k
right and then we'll do
like well we'll start with this
oops meant to run train
5.0 maybe any
better I'm sure that there are
better I'm sure that there are
parameters that solve this in like
30k let's see what this looks
30k let's see what this looks
like oop
nope still not
solved definitely learning something but
solved definitely learning something but
not solved
right might need to mess with the reward
right might need to mess with the reward
scales just a little
scales just a little
bit
bit
um yeah
negative one for going off
screen
two let's do like this
maybe of course the rewards now are
maybe of course the rewards now are
going to be scaled differently but
that's a little more promising right
yeah that's way
yeah that's way
better it Stills a little skittish about
better it Stills a little skittish about
actually hitting the uh the target
actually hitting the uh the target
though goes right to it and then it's a
though goes right to it and then it's a
little skittish about actually hitting
it cuz see it's getting reward by
it cuz see it's getting reward by
standing here
but it should get a yeah it gets a big
but it should get a yeah it gets a big
reward when it hits
it let's just set a couple more
parameters let's do I don't know like
parameters let's do I don't know like
probably
probably
uh gamma's probably like way too high
right okay so this is what it looks like
right okay so this is what it looks like
now uh let's retrain
it oh yeah look at that that's so much
it oh yeah look at that that's so much
better
right
maybe and you get stuck
might be
worse oh
worse oh
no this is way better yeah it it goes
no this is way better yeah it it goes
past occasionally it like misses so it's
past occasionally it like misses so it's
not perfect but it's pretty good
not perfect but it's pretty good
right
right
boom simple and environment little quick
boom simple and environment little quick
test
right now let's go do the uh let's go do
right now let's go do the uh let's go do
the the other version
discretize we're going to do false here
discretize we're going to do false here
and we're going to
and we're going to
do mod green D- Baseline
does appear to be learning but much
does appear to be learning but much
worse than the uh the other case
right so once we made it
continuous yeah this is way worse right
it's basically learn to not go off the
screen there any reason it would be
worse let's just give it some more uh
worse let's just give it some more uh
let's give it some more time
let's give it some more time
steps as a sanity
right oops not this
right oops not this
one so I have to leave very soon I want
one so I have to leave very soon I want
to just have one thing to
post doesn't look
stable very high
stable very high
entropy very very high entropy right
yeah what's wrong with the
yeah what's wrong with the
entropy like I'm seeing it's doing okay
entropy like I'm seeing it's doing okay
on some of
on some of
these entropy starts off really
high stay is very high as
high stay is very high as
well well this is perfect though because
well well this is perfect though because
I have uh I have the ability to check
I have uh I have the ability to check
this versus the discreet
case what is the entropy
here
here
five starts at five and goes down
whereas in the continuous
case search at
14 now I have to look at I have to look
14 now I have to look at I have to look
at some stuff
logit
entropy
sample yeah
uh three
uh three
times if I just do like 0.3 times would
times if I just do like 0.3 times would
this do
it starts going
up should not going up should be going
down
down
interesting okay last last thing I'm
interesting okay last last thing I'm
going to probably have time to try
oops
and zero we do zero
entropy zero entropy so now if it goes
entropy zero entropy so now if it goes
up it's just because the optimization is
bad still goes up
looks like this is really not
working did I make any
mistakes it's
possible let's see how Costa
I forgot how uh let's see how cost it
I forgot how uh let's see how cost it
does
it let's
do I'm going to have to end stream in a
do I'm going to have to end stream in a
second here here I just want to see if
second here here I just want to see if
there's like an obvious
bug he uses standard
bug he uses standard
deviation one for the value
function
okay actor mean
okay actor mean
has 0.01 this is fine
and then the decode right
here mean of the
here mean of the
hidden log standard
hidden log standard
deviation expand as
mean this is X of log standard
mean this is X of log standard
deviation you have normal of action
deviation you have normal of action
mean and into action standard deviation
mean and into action standard deviation
which is
here and then you
here and then you
return probs and
value and then you do problems. log
value and then you do problems. log
probob action sum entropy sum yeah this
probob action sum entropy sum yeah this
all looks correct
all looks correct
um okay well I'll have to keep going on
um okay well I'll have to keep going on
this tomorrow continuous control Jank um
this tomorrow continuous control Jank um
I might come back in the evening we'll
I might come back in the evening we'll
see uh I usually go to bed pretty early
see uh I usually go to bed pretty early
so maybe not but there will be stuff to
so maybe not but there will be stuff to
do anyways I've got uh meeting in 20 so
do anyways I've got uh meeting in 20 so
plan for tomorrow roughly speaking is
plan for tomorrow roughly speaking is
Tuesday Wednesday yeah plan for tomorrow
Tuesday Wednesday yeah plan for tomorrow
is going to be
is going to be
to uh stream on this fix continuous uh
to uh stream on this fix continuous uh
continuous integration get this m tested
continuous integration get this m tested
try maybe a couple of other things with
try maybe a couple of other things with
this start thinking about more
this start thinking about more
substantial continuous M I don't want to
substantial continuous M I don't want to
go too far down that rabbit hole just
go too far down that rabbit hole just
yet maybe do some cleanup stuff for
yet maybe do some cleanup stuff for
puffer to fix some just general stuff um
puffer to fix some just general stuff um
and I've got some experiments that are
and I've got some experiments that are
running in the background while I'm
running in the background while I'm
doing this type of work so that's all
doing this type of work so that's all
said okay uh well thank you and I will
said okay uh well thank you and I will
be back tomorrow bye
