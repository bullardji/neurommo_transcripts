Kind: captions
Language: en
cool let's see if this is
cool let's see if this is
working
working
uh it says the X1 is
uh it says the X1 is
streaming testing out the uh
multistream oh yeah
yeah why does it not
uh the updates button doesn't seem to do
uh the updates button doesn't seem to do
anything
let's see is this
let's see is this
live this says
Live Well if it's live then where's the
Live Well if it's live then where's the
stream
stream
right I don't know if the default
right I don't know if the default
recommendations
uh it automatically Subs you to this
uh it automatically Subs you to this
no thank
no thank
you kind of
you kind of
invasive I didn't like what they did
invasive I didn't like what they did
with their perms either oh okay wait
with their perms either oh okay wait
this does
work if I just type test
here oh yeah okay oh got to mute
here oh yeah okay oh got to mute
this um I got infinite window
this um I got infinite window
here but I get messages from
here but I get messages from
the YouTube
the YouTube
chat I don't get do I get watch
chat I don't get do I get watch
numbers I do get watch numbers okay
numbers I do get watch numbers okay
that's
that's
nice uh now where is the xtram is the
nice uh now where is the xtram is the
question oh
question oh
wait so the extrem is
here and I do get the chat messages
but hold on was the did the YouTube
but hold on was the did the YouTube
title update as
title update as
well there's an update button that
well there's an update button that
doesn't seem to
be update
separately what would you like to do
separately what would you like to do
hold on
stream
click
obnoxious edit destinations
maybe it's not letting me update the
maybe it's not letting me update the
darn uh the
darn uh the
titles and that's not great
edit
settings I don't know maybe somebody's
settings I don't know maybe somebody's
used uh restream
here hold on does this have
anything if I refresh this I'm sending
anything if I refresh this I'm sending
it through OBS which is nice
the title
is where the heck there was an update oh
is where the heck there was an update oh
update
titles what about this
titles what about this
button ah that one
button ah that one
works so that's somewhat inconvenient
works so that's somewhat inconvenient
um but I guess it's okay
um but I guess it's okay
like
like
there's there's a pop out that doesn't
there's there's a pop out that doesn't
work to
work to
update um nah that's okay though so let
update um nah that's okay though so let
me make sure that this
me make sure that this
actually this actually got it um yeah I
actually this actually got it um yeah I
see it here
see it here
perfect and if I check here
it didn't update this title as far as I
it didn't update this title as far as I
can
can
tell did
it okay that's really obnoxious
um
um
dude well I think I can just mess with
dude well I think I can just mess with
it and I can just um start doing a
it and I can just um start doing a
little bit of Dev for now maybe and then
little bit of Dev for now maybe and then
I'll see if this does
update here let me just uh let me repost
update here let me just uh let me repost
it at
it at
least
so okay
so okay
so I should actually just be able to
so I should actually just be able to
close this now which would be nice
close this now which would be nice
because usually I have to keep um chat
because usually I have to keep um chat
tabs open let's get this off the screen
tabs open let's get this off the screen
I usually have to keep the chat tabs
open and do a little bit of
Dev let's grab
Dev let's grab
this uh Kevin
this uh Kevin
friends
Twitter so buddy of mine
Twitter so buddy of mine
here release this cool
Library go ahead and give this a star
Library go ahead and give this a star
oops
oops
right go ahead and give that a
star and what we're going to do is
I actually don't want to mess up this
I actually don't want to mess up this
particular
container um so what I'm going to do is
container um so what I'm going to do is
I'm going to name this
ja and I think that I can just like
error what the
error what the
heck oh port is all all right that's
heck oh port is all all right that's
fine stop cuz I bound a port for some
fine stop cuz I bound a port for some
old thing that's no big deal so we're
old thing that's no big deal so we're
going to stop this
going to stop this
container and we're going to spin up a
container and we're going to spin up a
new one that I can just uh bum around
new one that I can just uh bum around
with with Jack
already
exists oh no it doesn't exist this is
exists oh no it doesn't exist this is
this is new I can see that this is new
this is new I can see that this is new
it just it made it before um and it just
it just it made it before um and it just
wouldn't start it that's
fine yeah
fine yeah
so uh what branch do I want to use for
so uh what branch do I want to use for
this I probably want to
this I probably want to
use Dev Branch right
use Dev Branch right
well first of all I'm going to need to
well first of all I'm going to need to
set some stuff up
anyways really weird
how okay no it's it's sort of
how okay no it's it's sort of
working I think the Twitter some of the
working I think the Twitter some of the
Twitter stuff doesn't work but the chat
Twitter stuff doesn't work but the chat
works right cuz Twitter doesn't have a
works right cuz Twitter doesn't have a
view count anyways like not a proper one
view count anyways like not a proper one
so it's just not showing it that's
fine I'm just going to do like an hour
fine I'm just going to do like an hour
hour and a half worth of Dev probably
hour and a half worth of Dev probably
we'll just get uh order food at some
we'll just get uh order food at some
point
point
and mainly just want to see if this is
and mainly just want to see if this is
quick to get working or not as I've put
quick to get working or not as I've put
off trying Jacks for a long
off trying Jacks for a long
time not a great start
well let's just grab
this everybody says stable and none of
this everybody says stable and none of
it actually is
it actually is
stable I will say though to preface this
stable I will say though to preface this
does look like very very good work so
does look like very very good work so
I'm critical of the whole Jack's
I'm critical of the whole Jack's
ecosystem and stuff but this does appear
ecosystem and stuff but this does appear
to be very good work and uh Kevin in
to be very good work and uh Kevin in
general does good work we're going to
general does good work we're going to
see how hamstring stuff is by Jax or
see how hamstring stuff is by Jax or
whether I suddenly decide that Jax is
whether I suddenly decide that Jax is
the greatest thing ever
now well I'm not going to copy this
now well I'm not going to copy this
right ye
right ye
yaml can you install a yaml with uh
wait let's try
this gy 0
this gy 0
23.1
okay D4 RL
little bit sketched that this
little bit sketched that this
is well hopefully it's gymnasium we'll
see offline
see offline
results they only have control
results they only have control
environments here
environments here
right that's sketchy
weird this file looks good
weird this file looks good
ooh that doesn't look good so I have to
ooh that doesn't look good so I have to
change some
change some
stuff what has happened
here
huh what dependency screwed this up
huh what dependency screwed this up
the DM
control does this just get
control does this just get
stuck oh
stuck oh
no plot L
no plot L
Jacks Jack lib
okay that looks
okay that looks
fine
llvm lot of random packages pie
llvm lot of random packages pie
bullet and I guess that's the control
bullet and I guess that's the control
ecosystem though
okay uninstalling
okay uninstalling
cython you can install some old
syon let me just check the uh the
syon let me just check the uh the
Twitter thing in the
Twitter thing in the
meantime does it
meantime does it
work yeah this works
this actually has the proper view count
this actually has the proper view count
on it I don't get it on my side we've
on it I don't get it on my side we've
also got the YouTube one of
course okay well this looks like it's
course okay well this looks like it's
relatively uh reasonable can I run
relatively uh reasonable can I run
something
already there is no file for
this this just a
main app.run
really
really
huh
huh
okay
okay
M or
online this
run
nope am I seriously going to do the cond
install that's really gross that it
install that's really gross that it
doesn't work without
cond where's the damn
download no Anaconda download no
download no Anaconda download no
yapping yada
yapping yada
yada I don't
yada I don't
want okay actually where's the damn
want okay actually where's the damn
download link they keep making the site
download link they keep making the site
like the site used to be okay and now
like the site used to be okay and now
it's literally it's
worse every single
worse every single
time x86
installer okay
installing condo on a
Docker let's
Docker let's
see and now that takes you know already
see and now that takes you know already
more time than it
should I thought I saw a container
should I thought I saw a container
didn't
didn't
I base container.
def what is a dode
well this is not an image this is just a
well this is not an image this is just a
container so this is going to be even
container so this is going to be even
slower if you're not going to release
slower if you're not going to release
um yeah this is just the worst of both
almost done though we're going to follow
almost done though we're going to follow
the re the um the repo instructions
the re the um the repo instructions
exactly this time since I wasn't
exactly this time since I wasn't
entirely fair to the Jack uh the Marl
entirely fair to the Jack uh the Marl
one cuz I didn't use the exact
one cuz I didn't use the exact
install um so I'm going to use their
install um so I'm going to use their
exact instructions inside of a clean
exact instructions inside of a clean
Docker and if this doesn't work I'm
Docker and if this doesn't work I'm
going to conclude that the Jack's
going to conclude that the Jack's
ecosystem is cursed and uh is not worth
ecosystem is cursed and uh is not worth
touching for a while it does work and we
touching for a while it does work and we
can run some stuff then we will be good
can run some stuff then we will be good
and I will see if I can get puffer bound
and I will see if I can get puffer bound
to
it it's
fine I hate Anaconda so much
like the install time to be fair is not
like the install time to be fair is not
terrible but
terrible but
um the spin up time for each new
um the spin up time for each new
environment is just not what you want it
environment is just not what you want it
to be only like base images
okay
now hopefully this will correctly
run how much stuff am I going to have to
run how much stuff am I going to have to
change for
change for
this because this is not I mean this is
this because this is not I mean this is
like way more control this is not like
like way more control this is not like
General RL this is specifically
General RL this is specifically
control is a much smaller set of stuff
control is a much smaller set of stuff
than the discret
than the discret
M's
M's
um I think we're going to have to are we
um I think we're going to have to are we
going to have to like mess with the
going to have to like mess with the
losses and
stuff J is the
stuff J is the
same calculate
loss use clipping
[Music]
[Music]
debugging
weird Okay sample
actions so it's
actions so it's
got act
got act
sample agent.
sample agent.
actor what's actor
this a train
this a train
State what's a train
State oh wait this is not um I thought
State oh wait this is not um I thought
this was a single file implementation
this was a single file implementation
this is not a single file
this is not a single file
implementation there's
implementation there's
um a bunch of other
stuff how much stuff do they have in
stuff how much stuff do they have in
utils
okay I'm substantially less impressed
okay I'm substantially less impressed
now because I thought this was the whole
now because I thought this was the whole
code so that some of it standard to be
code so that some of it standard to be
fair um but there's actually there is
fair um but there's actually there is
quite a a number of additional utilities
quite a a number of additional utilities
that are not included in the line
account the code the the code itself is
account the code the the code itself is
looks fairly clean though so Props for
that but I am not
that but I am not
sure how I'm going to update
sure how I'm going to update
the uh the actions to
the uh the actions to
be
discreet I technically don't have to if
discreet I technically don't have to if
I'm just trying to get a speed test do I
I'm just trying to get a speed test do I
I can just kind of post talk it
the fact that this uses gem as
well were uh performance metrics given
well were uh performance metrics given
with
with
this like performance numbers
anywhere x o
anywhere x o
[Music]
[Music]
RL no
oh wait they have WB reports okay so
oh wait they have WB reports okay so
I'll be able to get it from this
I'll be able to get it from this
probably
probably
right locked
let me DM
Kevin jeez this is like so
Kevin jeez this is like so
unbelievably slow
well I should be able to figure out
well I should be able to figure out
though if this is a good Library I
though if this is a good Library I
should be able to figure out where it is
should be able to figure out where it is
Computing the actions right
sample
actions agent.
actions agent.
actor and agent. actor
actor and agent. actor
is a train state that doesn't make any
is a train state that doesn't make any
sense
um this is train state right here's
um this is train state right here's
train
state which takes a model
def it takes a model de
def it takes a model de
call apply
call apply
function which is what gets past so I
function which is what gets past so I
have to see when the train States made
have to see when the train States made
somehow
so the actor gets passed to
PO which
is wait the actor gets passed
is wait the actor gets passed
to the the actor gets passed to the
to the the actor gets passed to the
agent um
agent um
agent actor equals actor so
agent actor equals actor so
where actor is train State
where actor is train State
create
create
actor which takes an actor
actor which takes an actor
defa which is a policy
where the hell's policy come
from is policy in
from is policy in
here okay
wait what the
[ __ ]
call but the where the hell are the
call but the where the hell are the
weights even stored for
this um
well here's the
well here's the
distribution but I have no idea how I'm
distribution but I have no idea how I'm
going to be how I'm supposed to be able
going to be how I'm supposed to be able
to edit any of this
to edit any of this
stuff um
and it doesn't
work setup does not work in a clean
environment do I have to cond oh wait
environment do I have to cond oh wait
cond right wait
okay hold on Maybe I'm
Wrong nope this was the error that I got
before so this two
now let's just before I blast this let
now let's just before I blast this let
me make sure I'm not being completely
me make sure I'm not being completely
stupid
stupid
here
here
um is this actually just supposed to be
um is this actually just supposed to be
run as po it is supposed to just be run
run as po it is supposed to just be run
as p.p though right
yeah this is totally it's just got a
yeah this is totally it's just got a
main
main
function maybe it takes pams but they
function maybe it takes pams but they
should have defaults
right yeah they've all got
defaults um
I don't know I can try
sa
sa
nope doesn't
nope doesn't
work config is
work config is
no same
no same
error
error
so I'm not going to be able to use this
so I'm not going to be able to use this
unfortunately um even if this had
unfortunately um even if this had
discret implementation I mean maybe then
discret implementation I mean maybe then
if it had a discret implementation
if it had a discret implementation
but
like man this is so sad like I can tell
like man this is so sad like I can tell
that this is like a good project written
that this is like a good project written
by somebody who knows what they're doing
by somebody who knows what they're doing
right I know Kevin Kevin does good work
right I know Kevin Kevin does good work
but like just the amount of stuff that's
but like just the amount of stuff that's
just Jax is causing like this whole like
just Jax is causing like this whole like
this shouldn't have to exist this whole
this shouldn't have to exist this whole
like for the online like the PO
like for the online like the PO
implementation
implementation
that's
that's
here this PO implementation should just
here this PO implementation should just
be this
length is there a clean
rl1 is there a Jack's one here yeah
rl1 is there a Jack's one here yeah
there is isn't there
[Music]
uh well maybe I can at least test
uh well maybe I can at least test
out but the thing is this is so
out but the thing is this is so
unoptimized like I know that this clean
unoptimized like I know that this clean
R this uh implementation here is so much
R this uh implementation here is so much
less optimized I mean the best thing I
less optimized I mean the best thing I
could do is potentially go find cost's
could do is potentially go find cost's
numbers that might tell me
numbers that might tell me
something but I don't even think that's
something but I don't even think that's
going to tell me anything
nope where is
nope where is
it clean our
else okay so here is
else okay so here is
clean
RLS oh he ran everything didn't he
RLS oh he ran everything didn't he
that's cool there's a breakout beam
that's cool there's a breakout beam
Rider will
Rider will
do so how
do so how
fast did he
get 40
get 40
minutes yeah that's not fast
40 minutes for 10 million steps is not
40 minutes for 10 million steps is not
fast puffer is faster than that and now
fast puffer is faster than that and now
not maybe not with these same settings
not maybe not with these same settings
but
but
um
um
yeah there's more that can be done for
sure so not sold on the speed thing
sure so not sold on the speed thing
yet
yet
oops black
okay wait he gave me a
thing comment out that
import where is
import where is
it from do configurations
import import checkpoints
checkpoints uh on Jack
Jack
Jack if they're breaking stuff on bug
Jack if they're breaking stuff on bug
fix versions
all
different error
jeez
um I mean this should be pretty
um I mean this should be pretty
indictive ative of the Jack
ecosystem should
ecosystem should
be did I maybe I screwed it up hold on I
be did I maybe I screwed it up hold on I
don't think I
don't think I
did let just check
Honda
Forge that's right
uh
it's all these random Jacks
packages
705 that's so
705 that's so
unfortunate the fact that they're
unfortunate the fact that they're
breaking stuff on bugs bug fix versions
breaking stuff on bugs bug fix versions
as well that I'm getting different
as well that I'm getting different
errors is insane
um none of these are like well these are
um none of these are like well these are
pinned right but some
pinned right but some
s scipi was not pinned in
here yeah this needs like more depths
pinned it's
pinned it's
annoying
TPU I could do Jack Cuda
maybe hold on
nope plus
CA maybe this
nope two updated
uh
okay let's
see all right
so I guess you're not supposed to run it
so I guess you're not supposed to run it
from
here you need to log in it doesn't work
here you need to log in it doesn't work
without Wan B
let me go grab my w b
key these are
key these are
settings where's this thing
yeah yeah yeah it's going to take a
yeah yeah yeah it's going to take a
second to give me my API
key give me the key
missing
maoko holy
cursed
cursed
god control ecosystem is cursed jym
god control ecosystem is cursed jym
ecosystem is cursed Jack ecosystem is
ecosystem is cursed Jack ecosystem is
cursed you're just
[ __ ] I mean I I don't know what
like what the heck is there a different
like what the heck is there a different
en I can
en I can
do namama Joko pie bullet Maybe
what's all this
H not
really every language has the same
problem so
is it easy to swap the N
here maybe you just Swap this thing
right which is most likely to work DMC
right which is most likely to work DMC
maybe cheetah
maybe cheetah
run maybe I do
this I didn't set up my uh I didn't
this I didn't set up my uh I didn't
bother setting up
Maven no chpu TPU found is gross
all
right so what's the Jax Cuda thing that
right so what's the Jax Cuda thing that
I
need c to 12 like
need c to 12 like
this all right let's
this all right let's
try yeah yeah yeah yeah yeah where's the
try yeah yeah yeah yeah yeah where's the
jack thing
Cuda
12 Jax does not provide
12 Jax does not provide
extra Q to
12 requirement already satisfied
GPU does not work
uh
uh
un activate
zeros yeah my torch
works ah crap what's the cond thing
works ah crap what's the cond thing
kinda activate something or
other
list now what's the
Honda what's the freaking
Honda what's the freaking
cond cond list uh
M
M
where list
where list
cond
cond
list
no cond of
info so it doesn't find my GPU for some
info so it doesn't find my GPU for some
reason this is gross
Nvidia
GPU ja just ships Cuda
GPU ja just ships Cuda
123 compatible with Cuda yeah I have
123 compatible with Cuda yeah I have
this
this should be what it was it should be
this should be what it was it should be
using the
using the
container
um so it runs at least but
is
is
this this is 1 million here
right 100 iterations per second what
is go
Max
steps really it's only trained for a
steps really it's only trained for a
million
steps I mean I guess I've got to um
well actually wait he might have made
well actually wait he might have made
this public by
now let me see how fast he
uh he has this where's the
notebook okay he made it public
notebook okay he made it public
good
so here's the half cheetah end right
right you don't have the do you not have
right you don't have the do you not have
the time on
this give me one of
this give me one of
these come on it's private
hi I'm from Ecuador what is Jax Jax is
hi I'm from Ecuador what is Jax Jax is
this
this
GPU accelerated learning library that is
GPU accelerated learning library that is
an alternative to pie torch as well as
an alternative to pie torch as well as
used in simulation I'm currently playing
used in simulation I'm currently playing
a lot of people have said it's very good
a lot of people have said it's very good
I'm playing around with it right now in
I'm playing around with it right now in
this new library and so far I completely
this new library and so far I completely
hate it um
hate it um
we're going to see whether it gets any
we're going to see whether it gets any
better and if it actually is giving as
better and if it actually is giving as
high performance as people say or
not but so far it looks to me like a
not but so far it looks to me like a
bunch of functional Bros who love their
bunch of functional Bros who love their
hasal decided to make a learning library
hasal decided to make a learning library
and that went as well about as well as
and that went as well about as well as
you'd
you'd
expect with all of the usual versioning
expect with all of the usual versioning
problems in python as well and
problems in python as well and
absolutely nothing uh pinned down and
absolutely nothing uh pinned down and
made more stable as you'd expect from
made more stable as you'd expect from
like a new library trying to get stuff
like a new library trying to get stuff
right so let me see is
right so let me see is
this can I get the run
this can I get the run
time wait this took an hour and 43
time wait this took an hour and 43
minutes for a million steps is that
minutes for a million steps is that
right is this a million episodes or a
right is this a million episodes or a
million steps I think this is a million
million steps I think this is a million
steps how could it possibly take an hour
steps how could it possibly take an hour
and 43 minutes
right there's just no way this should
right there's just no way this should
take like 5
Seconds episode
Seconds episode
return am I reading this wrong is it a
return am I reading this wrong is it a
million
million
episodes a million
batches
batches
wait maybe it's 16
wait maybe it's 16
million uh
so range
of we've got add
transitions I'm going to be generous I'm
transitions I'm going to be generous I'm
assuming that this is batched across the
assuming that this is batched across the
environments
um train model
wait flags. num steps per up
okay steps yeah yeah so this is the same
okay steps yeah yeah so this is the same
so this is 16 million steps right number
so this is 16 million steps right number
of Ms to run in parallel 16 let's just
of Ms to run in parallel 16 let's just
make sure cuz he had half cheetah as the
make sure cuz he had half cheetah as the
default let me make sure it's the same
default let me make sure it's the same
here
here
right yeah yeah yeah so 16 million steps
right yeah yeah yeah so 16 million steps
in an hour 43 Mill minutes is absolutely
in an hour 43 Mill minutes is absolutely
God awful so that's not fast whatsoever
God awful so that's not fast whatsoever
that's incredibly incredibly
that's incredibly incredibly
slow um so I don't think you can make
slow um so I don't think you can make
any perf claims about anything at that
speed how big is the
network this is 512 512
512 uh
let's
let's
see where's the freaking
policy it looks like it's just an MLP
right oh God this
code dance
code dance
oh there is support for discreet that's
oh there is support for discreet that's
nice yeah I didn't notice this so there
nice yeah I didn't notice this so there
is support for discreet here that's
good but yeah this looks like it's just
good but yeah this looks like it's just
let me think 512 512 is 500,000
let me think 512 512 is 500,000
parameter model CU it's 250 250k and
parameter model CU it's 250 250k and
then 250k so yeah that's a tiny I I
then 250k so yeah that's a tiny I I
don't know what is up with this this
don't know what is up with this this
something
something
is screwy
is screwy
let me go check on the
let me go check on the
whoops and check if I got any DMS from
him NOP
well there's really not much else to do
well there's really not much else to do
here unless I I would like to see if I
here unless I I would like to see if I
could get GPU working
maybe I mean I also wonder it does
maybe I mean I also wonder it does
doesn't it does depend kind
doesn't it does depend kind
of how many updates they're
running but if it's
running but if it's
like mini batch
size okay so this is
a Time 8 is five so this is a 1024 mini
a Time 8 is five so this is a 1024 mini
batch size which is small but not like
batch size which is small but not like
crazy small
two yeah this should be way faster this
two yeah this should be way faster this
no
no
excuse
um
yeah wait multiplied by number
yeah wait multiplied by number
M's batch
M's batch
size oh 64 mini batch that's
size oh 64 mini batch that's
insane yeah yeah that's that's just
insane yeah yeah that's that's just
absolutely insane
so this is
so this is
slow I don't know how slow the simulator
slow I don't know how slow the simulator
is though that's the
is though that's the
thing maybe I could just real quick just
thing maybe I could just real quick just
test
the maybe I can just hack this to test
the maybe I can just hack this to test
the simulator real quick right
where are the M's
where are the M's
made make ve
made make ve
M right here make V
and okay let's
and okay let's
do cheetah run
do cheetah run
num Ms equal
num Ms equal
right then we do I want to see how fast
right then we do I want to see how fast
this m
is and I will allocate for the fact that
is and I will allocate for the fact that
I am on my slower uh
I am on my slower uh
box
box
so all right I need to just see
so what we're going to do is actions
so what we're going to do is actions
equal action
equal action
space sample
this is a trick to make sure that you're
this is a trick to make sure that you're
not accidentally timing the sample time
not accidentally timing the sample time
for fast M which I don't think is going
for fast M which I don't think is going
to be relevant but we're going to give
to be relevant but we're going to give
it the benefit of the doubt
it the benefit of the doubt
so uh start time.
so uh start time.
time for
time for
time and what we're going to do
time and what we're going to do
is while uh I'm
is while uh I'm
time
time
start we're going to run this for 10
start we're going to run this for 10
seconds
seconds
and I'm going to just do pick is equal
and I'm going to just do pick is equal
to
to
zero we're going to do m. step actions
zero we're going to do m. step actions
of uh was it tick percent
print
print
time or was it
time or was it
SPS which is going to be
uh time
start no autocomplete is really clunky
start no autocomplete is really clunky
over uh the number of steps which is a
over uh the number of steps which is a
th000
no it steps per second so it's going to
no it steps per second so it's going to
be
be
tick uh
tick uh
times num M's which is 16 divided
times num M's which is 16 divided
by the
by the
time let's see if this
runs
what oh I'm dumb it's okay
okay you do need to reset it
apparently no big
deal looks like it's
running excuse
running excuse
me
me
oh it's been uh it's been a
day actually no we don't want to do that
day actually no we don't want to do that
was
was
dumb we want to do tick plus equals one
dumb we want to do tick plus equals one
yeah let's do it this way
7,000 steps per
second on this like not
second on this like not
great uh on this not great
desktop
right 8
right 8
core it would be more than twice as fast
core it would be more than twice as fast
on a real machine
so I it just
so I it just
like well actually wait back of the
like well actually wait back of the
envelope
envelope
right the way that you do this so 3600
right the way that you do this so 3600
seconds per hour
times
times
six 27 mil per hour yeah no this is slow
it took an hour 40 to run these
experiments uh times hour 40
experiments uh times hour 40
is uh
1.6 should have
1.6 should have
been two to three times that speed two
been two to three times that speed two
to three times that speed it is
to three times that speed it is
incredibly easy uh to get capped out
incredibly easy uh to get capped out
speeds as well
speeds as well
with uh environments that are only 7500
with uh environments that are only 7500
steps per second like
steps per second like
so uh basically no perf optimization
so uh basically no perf optimization
whatsoever um
yeah well it is uh 7:32 so I just wanted
yeah well it is uh 7:32 so I just wanted
to jump in and do a quick test stream
to jump in and do a quick test stream
and check out a Jax thing to see if I
and check out a Jax thing to see if I
was missing
was missing
out I'll give my brief summary of this
out I'll give my brief summary of this
overall U first of all Kevin France
overall U first of all Kevin France
incredibly incred L talented guy
incredibly incred L talented guy
actually knows how to write good code
actually knows how to write good code
does a ton of great research um so
does a ton of great research um so
basically anything that I say about this
basically anything that I say about this
project is going to be bad because Jax
project is going to be bad because Jax
is making it be bad not because of Kevin
is making it be bad not because of Kevin
so and the surrounding ecosystem so
so and the surrounding ecosystem so
control ecosystems old and bad um jimm
control ecosystems old and bad um jimm
ecosystem around that is outdated and
ecosystem around that is outdated and
bad right so so you're starting off like
bad right so so you're starting off like
that bad there's the npol info that has
that bad there's the npol info that has
to run on top of that that's complicated
to run on top of that that's complicated
right but then on top of all that the
right but then on top of all that the
jackon for is bad it has breaking
jackon for is bad it has breaking
updates in bug fix versions apparently
updates in bug fix versions apparently
so there're a bunch of dependency issues
so there're a bunch of dependency issues
and then once you actually get it
and then once you actually get it
running it seems like somehow the wrong
running it seems like somehow the wrong
metrics have been optimized for here um
metrics have been optimized for here um
because if the whole selling point of
because if the whole selling point of
Jack is speed and the code is undeniably
Jack is speed and the code is undeniably
inarguably more complicated and annoying
inarguably more complicated and annoying
to deal with than pytorch right so it's
to deal with than pytorch right so it's
got to have speed
got to have speed
um to even think about it this is an
um to even think about it this is an
environment that's running at 7500 steps
environment that's running at 7500 steps
per second on my you know not great
per second on my you know not great
local desktop while I'm streaming as
local desktop while I'm streaming as
well um that should be able to produce
well um that should be able to produce
in an hour 40 44 44 million steps worth
in an hour 40 44 44 million steps worth
of
of
data um if it's supposed to produce that
data um if it's supposed to produce that
much data that's not a lot of data for
much data that's not a lot of data for
an hour 40 you should be able to train
an hour 40 you should be able to train
44 mil but it's only training 16 mil in
44 mil but it's only training 16 mil in
that time now that's not necessarily
that time now that's not necessarily
Jack right that could be I see that the
Jack right that could be I see that the
mini batch sizes are way too small to be
mini batch sizes are way too small to be
even remotely reasonable I don't know
even remotely reasonable I don't know
why they're that small
why they're that small
um but if the selling point is like hey
um but if the selling point is like hey
use this library because it's Jack and
use this library because it's Jack and
Jax is fast this is like a third of the
Jax is fast this is like a third of the
speed that you would get out of puffer
speed that you would get out of puffer
lib while having everything be way
lib while having everything be way
easier and more stable with
torch hey
torch hey
siman yeah I I don't necessarily even
siman yeah I I don't necessarily even
think that it's slow right I'm not even
think that it's slow right I'm not even
saying that Jax is slow but if you're
saying that Jax is slow but if you're
saying that Jax based libraries are just
saying that Jax based libraries are just
so much faster than pytorch ones I'm not
so much faster than pytorch ones I'm not
seeing it right like you take a 7500
seeing it right like you take a 7500
step per second environment puffer lib
step per second environment puffer lib
will train it at 7500 steps per second
will train it at 7500 steps per second
in fact we do this with Pokémon which
in fact we do this with Pokémon which
has more data and is more annoying to
has more data and is more annoying to
transfer across and has a bigger policy
transfer across and has a bigger policy
and it trains at know 7,000 at least
and it trains at know 7,000 at least
steps per
steps per
second um
second um
so this should be very very easily
so this should be very very easily
attainable if Japs is remotely a
attainable if Japs is remotely a
performance dependent um
Library so yeah I
you know I was I always avoid checking
you know I was I always avoid checking
out the trendy stuff precisely for this
out the trendy stuff precisely for this
reason cuz like until the stuff has
reason cuz like until the stuff has
matured and has really like had time uh
matured and has really like had time uh
you end up just wasting a lot of time
you end up just wasting a lot of time
messing with stuff but in this case it
messing with stuff but in this case it
really seems like
really seems like
fundamentally the Jack's code base is
fundamentally the Jack's code base is
just in a weird way that nobody asked
just in a weird way that nobody asked
for like just look at this and this is
for like just look at this and this is
not a critique of Kevin's code Kevin
not a critique of Kevin's code Kevin
writes a really good
writes a really good
code it's like this is what Jax forces
code it's like this is what Jax forces
good programmers to
good programmers to
do look this is your network code where
do look this is your network code where
is
it uh data where the heck is it oh UT
it uh data where the heck is it oh UT
Tails Network okay just you can't
Tails Network okay just you can't
possibly tell me that this is like
possibly tell me that this is like
remotely reasonable and readable code
remotely reasonable and readable code
like look at this one here
so the weights of this thing are who
so the weights of this thing are who
knows where and despite the fact that
knows where and despite the fact that
like we don't even know where the
like we don't even know where the
weights are here like look on every
weights are here like look on every
call this thing is
call this thing is
making an
making an
MLP it's so it's making the network and
MLP it's so it's making the network and
then calling it on
then calling it on
observations this is not like I don't
observations this is not like I don't
see weights in here anywhere so like
see weights in here anywhere so like
this is doing some weird functional
this is doing some weird functional
caching [ __ ] where like it's
caching [ __ ] where like it's
injecting the weights or something I
injecting the weights or something I
don't know so it's like stateless but
don't know so it's like stateless but
not really and it's like still class
not really and it's like still class
syntax and then it's called on
syntax and then it's called on
observations and then you have the same
observations and then you have the same
exact thing with all these layers so
exact thing with all these layers so
this is like the worst of combining
this is like the worst of combining
functional and objectoriented
functional and objectoriented
programming you literally get the worst
programming you literally get the worst
of both and I'm not even seeing the
of both and I'm not even seeing the
speed like what is the point of this
hey Costa how's it going I'm having an
hey Costa how's it going I'm having an
absolutely terrible time of Jax at the
absolutely terrible time of Jax at the
moment and generally just [ __ ] on it
um and this is kind of like a different
um and this is kind of like a different
thing from before right cuz this is like
thing from before right cuz this is like
this is a jack based library from
this is a jack based library from
somebody I really respect after it's had
somebody I really respect after it's had
several iterations to cook right like
several iterations to cook right like
writes good
writes good
code okay wait let's see let's see your
code okay wait let's see let's see your
thing let's see if your jack is fast I
thing let's see if your jack is fast I
bet your jack isn't
fast actually Costa give me do you have
fast actually Costa give me do you have
a link to like a uh a report that you
a link to like a uh a report that you
think runs fast like do you have a steps
think runs fast like do you have a steps
per second on anything let me look at
per second on anything let me look at
your Jack's code here here like this is
your Jack's code here here like this is
another good thing cuz if I look at your
another good thing cuz if I look at your
code I know you write good code you
code I know you write good code you
write like the best code right so if I
write like the best code right so if I
don't like the code it means that it's
don't like the code it means that it's
Jack's making you write shitty stuff
Jack's making you write shitty stuff
like it's forcing you to this is
fine okay I hate this I hate the fact
fine okay I hate this I hate the fact
like yes this is technically shorter but
like yes this is technically shorter but
I hate the fact that it's like you're
I hate the fact that it's like you're
remaking this object every time you have
remaking this object every time you have
this class based syntax and then the
this class based syntax and then the
weights just magically I guess come out
weights just magically I guess come out
of nowhere
of nowhere
like this is bizarre to
like this is bizarre to
me like if you really want to save the
me like if you really want to save the
lines of the Declarations fine you use a
lines of the Declarations fine you use a
sequential
right but yeah it's nice and short so
right but yeah it's nice and short so
like uh okay I think it's really gross
like uh okay I think it's really gross
in more complicated networks because in
in more complicated networks because in
more complicated networks if you don't
more complicated networks if you don't
separate the Declaration you end up with
separate the Declaration you end up with
this
this
right so here you have a bunch of like
right so here you have a bunch of like
conditional logic
conditional logic
where you also have the syntax overhead
where you also have the syntax overhead
of having to redeclare this thing like
of having to redeclare this thing like
like this makes no sense to me so in
like this makes no sense to me so in
your case it actually looks fine but
your case it actually looks fine but
here it's a
here it's a
mess difficult to diagnose
mess difficult to diagnose
yeah
yeah
so yeah this is fine I actually yeah I
so yeah this is fine I actually yeah I
really wanted like strs like this is
really wanted like strs like this is
this is just a data class but fine
this is just a data class but fine
that's cool
why is this defined in in
main this is like a really common thing
main this is like a really common thing
I see in ja is like these scope captured
I see in ja is like these scope captured
functions
um too many damn third party libraries
um too many damn third party libraries
weights and stuff is because the weights
weights and stuff is because the weights
is separate from the neuronet function
is separate from the neuronet function
but like where are they they're nowhere
but like where are they they're nowhere
right like where do the weights get
right like where do the weights get
added
added
nowhere like I know that they get added
nowhere like I know that they get added
in the main or whatever that calls this
in the main or whatever that calls this
but like it's not in the code so it's
but like it's not in the code so it's
like this weird functional class-based
like this weird functional class-based
hybrid thing that has state but you
hybrid thing that has state but you
don't see the
state but where where do they get made
state but where where do they get made
right like look it's yeah I know that
right like look it's yeah I know that
this technically has them if they get
this technically has them if they get
made by the class though then or the
made by the class though then or the
optimizer right like where where do they
optimizer right like where where do they
get added to this thing and then like
get added to this thing and then like
you're remaking this it looks like
you're remaking this it looks like
you're remaking this call every time so
you're remaking this call every time so
like how does this know where to get its
like how does this know where to get its
weights from it's really
Jank this is like this bizarre like look
Jank this is like this bizarre like look
if you were to tell me that this is
if you were to tell me that this is
going to be like neuronet DOD lowercase
going to be like neuronet DOD lowercase
right that takes weights as a parameter
right that takes weights as a parameter
like weights and bias as a parameter I'd
like weights and bias as a parameter I'd
say it's clunky but okay fine like
say it's clunky but okay fine like
that's functional like that makes sense
that's functional like that makes sense
sure you can do it functional I don't
sure you can do it functional I don't
like it but I'd like it more than
this more functions inside of main that
this more functions inside of main that
are scope captured this is not bad it's
are scope captured this is not bad it's
only one nested deep but it I shouldn't
only one nested deep but it I shouldn't
need to be nested in the first
need to be nested in the first
place
place
um storage.
um storage.
replace good code right you write good
replace good code right you write good
code the fact that it's has to be scope
code the fact that it's has to be scope
captured like this is
captured like this is
janky um
janky um
yep good
code good
code good
code the hell is this now we're inside
code the hell is this now we're inside
of Maine we're two nested deep right why
of Maine we're two nested deep right why
the hell are we two two nested deep with
the hell are we two two nested deep with
scope capture
some logging so like this is good code
some logging so like this is good code
right you write good code but
right you write good code but
like it would be way better code if it
like it would be way better code if it
were not Jack and the proof of that is
were not Jack and the proof of that is
we can just open up the P the torch po
we can just open up the P the torch po
file and it's way better and doesn't
file and it's way better and doesn't
have all this janky scope capture stuff
have all this janky scope capture stuff
in it
in it
right so the second question is is it
right so the second question is is it
even fast like people say it's fast but
even fast like people say it's fast but
where how is it fast I haven't seen any
where how is it fast I haven't seen any
like I haven't seen anybody show that
like I haven't seen anybody show that
it's actually fast I'm training snake it
it's actually fast I'm training snake it
over a million steps per second in P
over a million steps per second in P
torch where's the speed on
ja I don't understand as well when you
ja I don't understand as well when you
say the neural net sta is just a
say the neural net sta is just a
function
function
because it needs weights right and I'm
because it needs weights right and I'm
not seeing weights anywhere here
not seeing weights anywhere here
unless it's this default in
unless it's this default in
it but like this gets cached or
it but like this gets cached or
something because you're not like
something because you're not like
updating the
weights where is it much faster though
weights where is it much faster though
like I haven't
like I haven't
seen I haven't seen where it's faster
seen I haven't seen where it's faster
right like is this just a case of people
right like is this just a case of people
writing horribly optimized pytorch code
writing horribly optimized pytorch code
and then well optimized Jack's code
yeah I I still don't see where they get
yeah I I still don't see where they get
set though agent State
set though agent State
like they're not in the point is they're
like they're not in the point is they're
not in the function
not in the function
call right so this is supposed to be
call right so this is supposed to be
like stateless but it is actually taking
like stateless but it is actually taking
state so like from there it's just not
state so like from there it's just not
here it's weird anyways that like that
here it's weird anyways that like that
like we can argue that d dets of this I
like we can argue that d dets of this I
think it's generally like much wonkier
think it's generally like much wonkier
code um but the main thing is like I
code um but the main thing is like I
don't even see it being fast um I did
don't even see it being fast um I did
back of the envelope math on cheetah it
back of the envelope math on cheetah it
was really slow like three times slower
was really slow like three times slower
than it should be that I could get in P
than it should be that I could get in P
torch
torch
um and I don't
um and I don't
see yeah like if you write the same
see yeah like if you write the same
really weird like poorly GPU optimized
really weird like poorly GPU optimized
code in Jackson p tortured they might
code in Jackson p tortured they might
like one might be faster than the other
like one might be faster than the other
but
but
like do you have notebooks that are like
like do you have notebooks that are like
hey look Jack gets good steps per second
here qar is a slow environment so we're
here qar is a slow environment so we're
not going to see anything there
right I mean I guess I could look at
right I mean I guess I could look at
your PO Atari stuff but I think I've
your PO Atari stuff but I think I've
gotten it faster I've gotten like 16
gotten it faster I've gotten like 16
20,000 steps per
20,000 steps per
second on uh clean RL like on clean RL
second on uh clean RL like on clean RL
with po uh in
with po uh in
torch like you can get 16k on Atari
torch like you can get 16k on Atari
pretty
easily okay so yeah there
easily okay so yeah there
is uh I should get a chat plugin so I
is uh I should get a chat plugin so I
can see the chat on the screen because
can see the chat on the screen because
otherwise I'm just talking to yeah I'll
otherwise I'm just talking to yeah I'll
I'll work on that
but basically what I would want is I'd
but basically what I would want is I'd
want like a fast environment where JX is
want like a fast environment where JX is
really fast
um okay let's
see
see
okay so you have the same environment as
okay so you have the same environment as
Chris Lou here
do you have
the
the
okay so you
okay so you
have right
have right
here this is what looks to be about six
here this is what looks to be about six
minutes for six so a million steps per
minutes for six so a million steps per
minute 1 million steps per
minute 1 million steps per
minute um
minute um
I'm assuming the environment is fast
I'm assuming the environment is fast
then and is not the bottleneck if it is
then and is not the bottleneck if it is
a million steps per minute I'm assuming
a million steps per minute I'm assuming
the environment is fast
the environment is fast
um oh let's see
there's let's
there's let's
see where's time
there
there
is 41 minutes
for 41 minutes for 10 mil is not
for 41 minutes for 10 mil is not
particularly
particularly
fast like we can absolutely get I'd have
fast like we can absolutely get I'd have
to see if the hyper parameters tune out
to see if the hyper parameters tune out
to be as good but um
to be as good but um
if I've gotten 16k I think it was like
if I've gotten 16k I think it was like
20 minutes or something for 10 mil 15 20
20 minutes or something for 10 mil 15 20
minutes for 10 mil let me
minutes for 10 mil let me
see so you have uh 40 minutes so 66 or
see so you have uh 40 minutes so 66 or
actually it's just 2400
actually it's just 2400
seconds
seconds
um so let's see steps per second times
um so let's see steps per second times
is it 10 million yeah
it's only 4,000 steps per second isn't
it but like why are we running 8 M's
it but like why are we running 8 M's
right Costa like why why are we going to
right Costa like why why are we going to
compare numbers between like things that
compare numbers between like things that
are just absolutely horribly optimized
are just absolutely horribly optimized
for GPU batch size right like you why
for GPU batch size right like you why
why would we ever have eight
why would we ever have eight
environments
like I can find the
config I'm going to move the chat window
config I'm going to move the chat window
onto the the stream so I can if you
onto the the stream so I can if you
don't mind so I can because otherwise
don't mind so I can because otherwise
I'm just like talking into the
I'm just like talking into the
air
air
um so here let's look at puffer right so
um so here let's look at puffer right so
on puffer
on puffer
10 I have this config file right and I
10 I have this config file right and I
have
have
Atari and if you look down to the max
Atari and if you look down to the max
configs
I have 96 environments or 144 depending
I have 96 environments or 144 depending
right and I have a batch size of 48 so
right and I have a batch size of 48 so
by going from eight up to 48
by going from eight up to 48
environments with proper EnV pool and
environments with proper EnV pool and
then using like Sayan mini batch sizes
then using like Sayan mini batch sizes
you want like 2K or 4K or something like
you want like 2K or 4K or something like
that um this thing will train at 16,000
that um this thing will train at 16,000
steps per second and then you know
steps per second and then you know
you'll take a small hit
you'll take a small hit
12 or 10K whatever if you want to run
12 or 10K whatever if you want to run
multiple
multiple
Epoch per data batch but it's kind of so
Epoch per data batch but it's kind of so
fast at this point that you don't have
fast at this point that you don't have
to right you can just get fresh
to right you can just get fresh
data with large batch sizes torch well
data with large batch sizes torch well
yes this but this is the point right
yes this but this is the point right
like why are we running code that's just
like why are we running code that's just
not optimized for Hardware like why
not optimized for Hardware like why
don't we just run more environments and
don't we just run more environments and
then use the codebase that's
simple so I can say that with this snake
simple so I can say that with this snake
environment that I have I'll show you
environment that I have I'll show you
the batch sizes for that
the batch sizes for that
um let me go up in the dev
Branch so for the snake
Branch so for the snake
environment which I just ran this today
environment which I just ran this today
I ran 10 billion steps in about three
I ran 10 billion steps in about three
hours runs over a million steps per
hours runs over a million steps per
second I'm using a bat size of
second I'm using a bat size of
131k I'm using uh two environments which
131k I'm using uh two environments which
have have uh 4096 agents each so they're
have have uh 4096 agents each so they're
double buffered essentially so you have
double buffered essentially so you have
a mini batch or you have a Ford pass
a mini batch or you have a Ford pass
batch size of 496 you have a batch size
batch size of 496 you have a batch size
of 131k and then you have a mini batch
of 131k and then you have a mini batch
size of 32k was what hyperparameter
size of 32k was what hyperparameter
tuning got us so anything up from 4K
tuning got us so anything up from 4K
will be over a million steps per
will be over a million steps per
second you know we can just do this and
second you know we can just do this and
then you literally will get a decent
then you literally will get a decent
snake policy in 30 seconds flat and then
snake policy in 30 seconds flat and then
you get a pretty darn good snake policy
you get a pretty darn good snake policy
within a few
minutes so this is you know this is the
minutes so this is you know this is the
question I have for like for RL as a
question I have for like for RL as a
field like why do we move towards more
field like why do we move towards more
complicated and difficult to work with
complicated and difficult to work with
tools in the name of performance like
tools in the name of performance like
Jack's environments Jack's learning
Jack's environments Jack's learning
libraries when we can have dead simple
libraries when we can have dead simple
environment code I added a couple types
environment code I added a couple types
toonize it runs 14 million steps per
toonize it runs 14 million steps per
second per core dead simple
second per core dead simple
reinforcement learning code this is
reinforcement learning code this is
literally your clean rlpo code which is
literally your clean rlpo code which is
awesome that I just souped up with a
awesome that I just souped up with a
couple uh a couple optimizations and a
couple uh a couple optimizations and a
bunch of logging
bunch of logging
mostly and we can do billion scale
mostly and we can do billion scale
reinforcement learning on one card in
reinforcement learning on one card in
like hours in fact billion scale for a
like hours in fact billion scale for a
billion it's like 20 minutes or less
that's the real question I
have now if you want to talk about
have now if you want to talk about
distributed support right and like okay
distributed support right and like okay
pytorch has really bad distributed or
pytorch has really bad distributed or
something like that that's a totally
something like that that's a totally
different topic and like maybe there's a
different topic and like maybe there's a
thing there though probably it's still
thing there though probably it's still
easier to make pytorch distributed work
easier to make pytorch distributed work
well I I don't know I really don't know
well I I don't know I really don't know
there but
there but
everything outside of that it seems like
everything outside of that it seems like
it's just better to do in pytorch and
it's just better to do in pytorch and
write sane code that actually like runs
write sane code that actually like runs
reasonable batch sizes and
reasonable batch sizes and
such like I my 10 video right for puffer
such like I my 10 video right for puffer
was literally one of the things I did is
was literally one of the things I did is
I just took clean RL I increased the
I just took clean RL I increased the
batch size I already got it to be double
batch size I already got it to be double
or triple performance I added async and
or triple performance I added async and
a few additional tricks with a puffer
a few additional tricks with a puffer
especially puffer's VC and then it went
especially puffer's VC and then it went
to 16k
to 16k
Plus on Atari and nari is like the worst
Plus on Atari and nari is like the worst
optimized thing ever all the rappers are
optimized thing ever all the rappers are
garbage um the resize rapper in
garbage um the resize rapper in
gymnasium is absolute garbage
gymnasium is absolute garbage
um yeah like that could be made even
um yeah like that could be made even
much faster without any loss of learning
quality so I mean these are my thoughts
quality so I mean these are my thoughts
generally on the space at the moment um
generally on the space at the moment um
I think that send message
I send the
message was to
answer
answer
so I get that they're stored in agent
so I get that they're stored in agent
state. prams my point was that the way
state. prams my point was that the way
that the code is written it doesn't look
that the code is written it doesn't look
like they're stored there um the code is
like they're stored there um the code is
written in this really Jank way
here even here I'll look at even your
here even here I'll look at even your
code right I'll I'll literally look at
code right I'll I'll literally look at
the where is it your
code where's your
file all
file all
right
right
so right here there are no weights being
so right here there are no weights being
passed into this function right
passed into this function right
unless maybe are they they passed in on
unless maybe are they they passed in on
a nit but even if they're passed in on a
a nit but even if they're passed in on a
nit they're not being used here right
nit they're not being used here right
they're not being used here in fact it
they're not being used here in fact it
looks like this is the anit right here
looks like this is the anit right here
um so this code looks like it's using an
um so this code looks like it's using an
uninitialized Network every time like
uninitialized Network every time like
they're being cached or something but
they're being cached or something but
this is
this is
not like this is a weird objectoriented
not like this is a weird objectoriented
functional hybrid where this thing
functional hybrid where this thing
actually has state right or agent self.
actually has state right or agent self.
agent prems whatever has state but it
agent prems whatever has state but it
doesn't look like it has State that's
doesn't look like it has State that's
just Jank like this should not be
just Jank like this should not be
written this way this makes no
sense drives me
nuts Logics equals apply
well you're telling me that there's an
well you're telling me that there's an
apply
apply
function you're telling me that there's
function you're telling me that there's
an apply function this thing has a call
an apply function this thing has a call
right so this thing has a call you'd
right so this thing has a call you'd
expect to do you would not expect to do
expect to do you would not expect to do
actor. apply You' expect to do actor of
actor. apply You' expect to do actor of
thing because that's what underscore
thing because that's what underscore
call is for right but you're telling me
call is for right but you're telling me
that it it somehow takes an apply
that it it somehow takes an apply
function that uses this call which
function that uses this call which
doesn't even take parameters which very
doesn't even take parameters which very
clearly looks like it's initializing new
clearly looks like it's initializing new
parameters from Scrat
parameters from Scrat
and then somehow injects this agent
and then somehow injects this agent
state. prams actor
state. prams actor
prams like I'm not saying that it
prams like I'm not saying that it
doesn't work I'm sure it works but
doesn't work I'm sure it works but
that's just a ridiculous way to write
that's just a ridiculous way to write
code I mean that's like the exact that
code I mean that's like the exact that
looks like it's doing the opposite thing
looks like it's doing the opposite thing
and you're doing some weird injection
and you're doing some weird injection
thing
thing
right again for like no benefit as far
right again for like no benefit as far
as I can
tell this is what I say this is why like
tell this is what I say this is why like
I didn't look at any of the really early
I didn't look at any of the really early
Jack RL things and then like you Chris
Jack RL things and then like you Chris
Lou and Kevin have all done Jack RL
Lou and Kevin have all done Jack RL
libraries I know you all know how to
libraries I know you all know how to
write really good code I've seen you
write really good code I've seen you
write really good code so when I see
write really good code so when I see
stuff like this it's like oh well look
stuff like this it's like oh well look
if Jax is making the best people I know
if Jax is making the best people I know
in this space do weird things then Jax
in this space do weird things then Jax
is really
bad and yeah I'm sure that there are
bad and yeah I'm sure that there are
weird cases in which like Jax gets way
weird cases in which like Jax gets way
better perf when you try to do like
better perf when you try to do like
really small batches that gpus are not
really small batches that gpus are not
designed to do and it like compiles
designed to do and it like compiles
everything better or whatever sure but
everything better or whatever sure but
we could also just like not do RL like
we could also just like not do RL like
that right we can just use bigger
that right we can just use bigger
batches or bigger more M's like more
batches or bigger more M's like more
complex M's need bigger batch size
complex M's need bigger batch size
anyways we we know this
right so I don't know why we're building
right so I don't know why we're building
into a space where like for the sake of
into a space where like for the sake of
performance we're building towards like
performance we're building towards like
simpler and simpler environments and
simpler and simpler environments and
more and more Jank code like I like look
more and more Jank code like I like look
around nobody's doing reinforcement
around nobody's doing reinforcement
learning anymore everybody's doing
learning anymore everybody's doing
language models and yeah one of the
language models and yeah one of the
reasons for that is that all the funding
reasons for that is that all the funding
is on language models but the other
is on language models but the other
reason it's just a god- awful field to
reason it's just a god- awful field to
work in all the tools are complicated in
work in all the tools are complicated in
a pain in the ass and don't work and
a pain in the ass and don't work and
like this is making it not your code but
like this is making it not your code but
like Jax is making it more of a pain in
like Jax is making it more of a pain in
the
the
ass and the environments are getting
ass and the environments are getting
less and less interesting cuz they have
less and less interesting cuz they have
to now be written in Jack as well
to now be written in Jack as well
because that's the only way people can
because that's the only way people can
figure out how to make him fast like
figure out how to make him fast like
this is the exact opposite direction
this is the exact opposite direction
like how the heck are new PhD students
like how the heck are new PhD students
going to want to touch this field if
going to want to touch this field if
that's the state of things right they're
that's the state of things right they're
not they're going to go work on language
models you know this is one of the
models you know this is one of the
things that I was so proud of that I was
things that I was so proud of that I was
able to get done with the snake an
able to get done with the snake an
I did this in one week and it's like not
I did this in one week and it's like not
even that simple of an environment like
even that simple of an environment like
here I don't know I you haven't seen the
here I don't know I you haven't seen the
code for this I'm not going to go
code for this I'm not going to go
through all of it but
through all of it but
like okay this is the whole snake
like okay this is the whole snake
project it's a px this render I can
project it's a px this render I can
delete uh this is old and then it's a pi
delete uh this is old and then it's a pi
the pi file just has like API garbage in
the pi file just has like API garbage in
it this the logic of this environment is
it this the logic of this environment is
230 lines of scon uh it adds some types
230 lines of scon uh it adds some types
sure but then this codee is literally
sure but then this codee is literally
just python code it's python code with
just python code it's python code with
written out
written out
Loops written out Loops written out
Loops written out Loops written out
Loops pure python code 200 lines of it
Loops pure python code 200 lines of it
dead simple dead easy runs 14 million
dead simple dead easy runs 14 million
steps per
steps per
second well yeah there aren't a lot of
second well yeah there aren't a lot of
RL positions uh in Industry now but
RL positions uh in Industry now but
that's like a new feature of the last
that's like a new feature of the last
like two years literally right RL is
like two years literally right RL is
going to come back but for RL to come
going to come back but for RL to come
back it has to not be an unusable piece
back it has to not be an unusable piece
of garbage and my personal bet on how we
of garbage and my personal bet on how we
do that is we build dead simple High
do that is we build dead simple High
perform Sims for interesting
perform Sims for interesting
environments um we build like several of
environments um we build like several of
these we build really simple right
these we build really simple right
learning libraries clean RL is awesome I
learning libraries clean RL is awesome I
consider clean RL to be literally the
consider clean RL to be literally the
highest single individual contribution
highest single individual contribution
to the field I count your work that
to the field I count your work that
highly Costa
highly Costa
um like I kind of I've kind of made a of
um like I kind of I've kind of made a of
it with this file with a clean puff all
it with this file with a clean puff all
but it really it adds like a ton of
but it really it adds like a ton of
performance logging which I need to to
performance logging which I need to to
Really optimize stuff um all the codes
Really optimize stuff um all the codes
in here 750 lines most of it is logging
in here 750 lines most of it is logging
it's like 300 lines of actual core code
it's like 300 lines of actual core code
like that seems like a stack that could
like that seems like a stack that could
bring RL back right if we can just have
bring RL back right if we can just have
everything be that simple that seems
everything be that simple that seems
like a stack that could bring RL back I
like a stack that could bring RL back I
mean there's no thanks like you you've
mean there's no thanks like you you've
earned it like clean ARL makes
earned it like clean ARL makes
everything possible it's just like the
everything possible it's just like the
whole rest of what the field is doing is
whole rest of what the field is doing is
just it's
just it's
Madness anyways I didn't hop on here to
Madness anyways I didn't hop on here to
rant about um Jax for an hour I was
rant about um Jax for an hour I was
hoping that I was going to actually see
hoping that I was going to actually see
some good stuff coming out of Jax but it
some good stuff coming out of Jax but it
seems like really not and until somebody
seems like really not and until somebody
shows me like hey look we can get your
shows me like hey look we can get your
snake and running at 3 million steps per
snake and running at 3 million steps per
second or whatever it doesn't seem like
second or whatever it doesn't seem like
there should be any reason to care about
there should be any reason to care about
this
this
um snake en by the way the cool thing
um snake en by the way the cool thing
now I can't prove this yet I can I'll
now I can't prove this yet I can I'll
prove this with the next cool thing I
prove this with the next cool thing I
release but this snake EnV um that runs
release but this snake EnV um that runs
at 14 million steps per second like you
at 14 million steps per second like you
might say oh well okay cool you got
might say oh well okay cool you got
snake to run at 14 million steps per
snake to run at 14 million steps per
second it's not like you can make you
second it's not like you can make you
know much more interesting and complex
know much more interesting and complex
M's uh run at that speed right snake m
M's uh run at that speed right snake m
is pretty cool right it's like but it's
is pretty cool right it's like but it's
not the most complex and out there I
not the most complex and out there I
think it's on par with Atari right like
think it's on par with Atari right like
snake is very easily in Atari game it's
snake is very easily in Atari game it's
multi-agent it's 496 agents I built it
multi-agent it's 496 agents I built it
in a week like it's a reasonably
in a week like it's a reasonably
interesting and complex s but like a
interesting and complex s but like a
very common criticism would be okay you
very common criticism would be okay you
can't just do this and build much more
can't just do this and build much more
complex Ms like this but the thing is
complex Ms like this but the thing is
you can this exact Tech this exact Tech
you can this exact Tech this exact Tech
is going to scale to build anything I
is going to scale to build anything I
want at at least well over a million
want at at least well over a million
steps per second single core so that's
steps per second single core so that's
the next thing I'm going to show with
the next thing I'm going to show with
the release and I think that when people
the release and I think that when people
see that then they're going to realize
see that then they're going to realize
that the whole simulation stack just
that the whole simulation stack just
needs to be chucked out and Rewritten so
needs to be chucked out and Rewritten so
that's what I'm hoping the next thing
that's what I'm hoping the next thing
I'm going to be able to do is um very
I'm going to be able to do is um very
high bar have to finish a couple more
high bar have to finish a couple more
things but yeah yeah I wrote this SN and
things but yeah yeah I wrote this SN and
this is mine the original uh there was
this is mine the original uh there was
like an original that another guy wrote
like an original that another guy wrote
I saw like somebody was doing RL on
I saw like somebody was doing RL on
snake so I rewrote the thing uh it was
snake so I rewrote the thing uh it was
the original was just like a single
the original was just like a single
agent standard snake game I wrote wrote
agent standard snake game I wrote wrote
this multi-agent snake you can run
this multi-agent snake you can run
vectorized 4096 M's with one snake you
vectorized 4096 M's with one snake you
can run you know tons of different M
can run you know tons of different M
with different numbers of snakes in them
with different numbers of snakes in them
in the same core you can run 4096 snakes
in the same core you can run 4096 snakes
in one map there're three different
in one map there're three different
renderers it renders an asy IT renders a
renderers it renders an asy IT renders a
high level it renders a human playable
high level it renders a human playable
it's human playable and all of that code
it's human playable and all of that code
and all the
and all the
optimizations uh fits in around 460
optimizations uh fits in around 460
Total Lines this much logic and then
Total Lines this much logic and then
there's you know wrapper stuff and
there's you know wrapper stuff and
initialization in this file here another
initialization in this file here another
235 lines this includes three different
235 lines this includes three different
renderers and human
playable so dead simple
code you could delete this as well so
code you could delete this as well so
you know less than
450 so yeah that's that's my vision for
450 so yeah that's that's my vision for
the field these days um
the field these days um
um the thing I have to convince myself
um the thing I have to convince myself
not to do though I'm I'm kind of tempted
not to do though I'm I'm kind of tempted
to do
to do
this is what if I just made a miniature
this is what if I just made a miniature
mooba or like a miniature RTS next and I
mooba or like a miniature RTS next and I
did it like this and I gave myself like
did it like this and I gave myself like
two weeks to make like a pretty decent
two weeks to make like a pretty decent
strip down mooba maybe like thousand
strip down mooba maybe like thousand
lines of code Max for the environment
lines of code Max for the environment
Sim
Sim
um and I got it training at like a
um and I got it training at like a
million steps per second would that be
million steps per second would that be
would that be something worth
would that be something worth
doing or should I make you know a couple
doing or should I make you know a couple
not that crazy environments that are 500
not that crazy environments that are 500
lines each I don't
know I still figuring that out
okay
okay
well I am going to go get some food uh
well I am going to go get some food uh
This was meant to be a short stream just
This was meant to be a short stream just
to test out I am joint streaming to
to test out I am joint streaming to
Twitter and to YouTube so I wanted to
Twitter and to YouTube so I wanted to
make sure that that's working it seems
make sure that that's working it seems
like it is
like it is
um I am now just going to uh I'm going
um I am now just going to uh I'm going
to go get some food get some sleep and I
to go get some food get some sleep and I
might figure out some other stuff to do
might figure out some other stuff to do
tomorrow on this um I've got like a few
tomorrow on this um I've got like a few
side projects that are taking up a bunch
side projects that are taking up a bunch
of time and being very annoying and they
of time and being very annoying and they
I'm waiting for training runs on those
I'm waiting for training runs on those
at the moment so I might get stuck on
at the moment so I might get stuck on
that for another couple days but I
that for another couple days but I
really want to start a new simulation
really want to start a new simulation
project soon because they're really fun
project soon because they're really fun
and uh you know people watch them on uh
and uh you know people watch them on uh
people watch them online because it's
people watch them online because it's
cool to see how quickly you can build
cool to see how quickly you can build
like a high performance SIM from the
like a high performance SIM from the
ground up and thanks for dropping by
ground up and thanks for dropping by
Costa I'm gonna shut this off now night

Kind: captions
Language: en
cool let's see if this is
cool let's see if this is
working
working
uh it says the X1 is
uh it says the X1 is
streaming testing out the uh
multistream oh yeah
yeah why does it not
uh the updates button doesn't seem to do
uh the updates button doesn't seem to do
anything
let's see is this
let's see is this
live this says
Live Well if it's live then where's the
Live Well if it's live then where's the
stream
stream
right I don't know if the default
right I don't know if the default
recommendations
uh it automatically Subs you to this
uh it automatically Subs you to this
no thank
no thank
you kind of
you kind of
invasive I didn't like what they did
invasive I didn't like what they did
with their perms either oh okay wait
with their perms either oh okay wait
this does
work if I just type test
here oh yeah okay oh got to mute
here oh yeah okay oh got to mute
this um I got infinite window
this um I got infinite window
here but I get messages from
here but I get messages from
the YouTube
the YouTube
chat I don't get do I get watch
chat I don't get do I get watch
numbers I do get watch numbers okay
numbers I do get watch numbers okay
that's
that's
nice uh now where is the xtram is the
nice uh now where is the xtram is the
question oh
question oh
wait so the extrem is
here and I do get the chat messages
but hold on was the did the YouTube
but hold on was the did the YouTube
title update as
title update as
well there's an update button that
well there's an update button that
doesn't seem to
be update
separately what would you like to do
separately what would you like to do
hold on
stream
click
obnoxious edit destinations
maybe it's not letting me update the
maybe it's not letting me update the
darn uh the
darn uh the
titles and that's not great
edit
settings I don't know maybe somebody's
settings I don't know maybe somebody's
used uh restream
here hold on does this have
anything if I refresh this I'm sending
anything if I refresh this I'm sending
it through OBS which is nice
the title
is where the heck there was an update oh
is where the heck there was an update oh
update
titles what about this
titles what about this
button ah that one
button ah that one
works so that's somewhat inconvenient
works so that's somewhat inconvenient
um but I guess it's okay
um but I guess it's okay
like
like
there's there's a pop out that doesn't
there's there's a pop out that doesn't
work to
work to
update um nah that's okay though so let
update um nah that's okay though so let
me make sure that this
me make sure that this
actually this actually got it um yeah I
actually this actually got it um yeah I
see it here
see it here
perfect and if I check here
it didn't update this title as far as I
it didn't update this title as far as I
can
can
tell did
it okay that's really obnoxious
um
um
dude well I think I can just mess with
dude well I think I can just mess with
it and I can just um start doing a
it and I can just um start doing a
little bit of Dev for now maybe and then
little bit of Dev for now maybe and then
I'll see if this does
update here let me just uh let me repost
update here let me just uh let me repost
it at
it at
least
so okay
so okay
so I should actually just be able to
so I should actually just be able to
close this now which would be nice
close this now which would be nice
because usually I have to keep um chat
because usually I have to keep um chat
tabs open let's get this off the screen
tabs open let's get this off the screen
I usually have to keep the chat tabs
open and do a little bit of
Dev let's grab
Dev let's grab
this uh Kevin
this uh Kevin
friends
Twitter so buddy of mine
Twitter so buddy of mine
here release this cool
Library go ahead and give this a star
Library go ahead and give this a star
oops
oops
right go ahead and give that a
star and what we're going to do is
I actually don't want to mess up this
I actually don't want to mess up this
particular
container um so what I'm going to do is
container um so what I'm going to do is
I'm going to name this
ja and I think that I can just like
error what the
error what the
heck oh port is all all right that's
heck oh port is all all right that's
fine stop cuz I bound a port for some
fine stop cuz I bound a port for some
old thing that's no big deal so we're
old thing that's no big deal so we're
going to stop this
going to stop this
container and we're going to spin up a
container and we're going to spin up a
new one that I can just uh bum around
new one that I can just uh bum around
with with Jack
already
exists oh no it doesn't exist this is
exists oh no it doesn't exist this is
this is new I can see that this is new
this is new I can see that this is new
it just it made it before um and it just
it just it made it before um and it just
wouldn't start it that's
fine yeah
fine yeah
so uh what branch do I want to use for
so uh what branch do I want to use for
this I probably want to
this I probably want to
use Dev Branch right
use Dev Branch right
well first of all I'm going to need to
well first of all I'm going to need to
set some stuff up
anyways really weird
how okay no it's it's sort of
how okay no it's it's sort of
working I think the Twitter some of the
working I think the Twitter some of the
Twitter stuff doesn't work but the chat
Twitter stuff doesn't work but the chat
works right cuz Twitter doesn't have a
works right cuz Twitter doesn't have a
view count anyways like not a proper one
view count anyways like not a proper one
so it's just not showing it that's
fine I'm just going to do like an hour
fine I'm just going to do like an hour
hour and a half worth of Dev probably
hour and a half worth of Dev probably
we'll just get uh order food at some
we'll just get uh order food at some
point
point
and mainly just want to see if this is
and mainly just want to see if this is
quick to get working or not as I've put
quick to get working or not as I've put
off trying Jacks for a long
off trying Jacks for a long
time not a great start
well let's just grab
this everybody says stable and none of
this everybody says stable and none of
it actually is
it actually is
stable I will say though to preface this
stable I will say though to preface this
does look like very very good work so
does look like very very good work so
I'm critical of the whole Jack's
I'm critical of the whole Jack's
ecosystem and stuff but this does appear
ecosystem and stuff but this does appear
to be very good work and uh Kevin in
to be very good work and uh Kevin in
general does good work we're going to
general does good work we're going to
see how hamstring stuff is by Jax or
see how hamstring stuff is by Jax or
whether I suddenly decide that Jax is
whether I suddenly decide that Jax is
the greatest thing ever
now well I'm not going to copy this
now well I'm not going to copy this
right ye
right ye
yaml can you install a yaml with uh
wait let's try
this gy 0
this gy 0
23.1
okay D4 RL
little bit sketched that this
little bit sketched that this
is well hopefully it's gymnasium we'll
see offline
see offline
results they only have control
results they only have control
environments here
environments here
right that's sketchy
weird this file looks good
weird this file looks good
ooh that doesn't look good so I have to
ooh that doesn't look good so I have to
change some
change some
stuff what has happened
here
huh what dependency screwed this up
huh what dependency screwed this up
the DM
control does this just get
control does this just get
stuck oh
stuck oh
no plot L
no plot L
Jacks Jack lib
okay that looks
okay that looks
fine
llvm lot of random packages pie
llvm lot of random packages pie
bullet and I guess that's the control
bullet and I guess that's the control
ecosystem though
okay uninstalling
okay uninstalling
cython you can install some old
syon let me just check the uh the
syon let me just check the uh the
Twitter thing in the
Twitter thing in the
meantime does it
meantime does it
work yeah this works
this actually has the proper view count
this actually has the proper view count
on it I don't get it on my side we've
on it I don't get it on my side we've
also got the YouTube one of
course okay well this looks like it's
course okay well this looks like it's
relatively uh reasonable can I run
relatively uh reasonable can I run
something
already there is no file for
this this just a
main app.run
really
really
huh
huh
okay
okay
M or
online this
run
nope am I seriously going to do the cond
install that's really gross that it
install that's really gross that it
doesn't work without
cond where's the damn
download no Anaconda download no
download no Anaconda download no
yapping yada
yapping yada
yada I don't
yada I don't
want okay actually where's the damn
want okay actually where's the damn
download link they keep making the site
download link they keep making the site
like the site used to be okay and now
like the site used to be okay and now
it's literally it's
worse every single
worse every single
time x86
installer okay
installing condo on a
Docker let's
Docker let's
see and now that takes you know already
see and now that takes you know already
more time than it
should I thought I saw a container
should I thought I saw a container
didn't
didn't
I base container.
def what is a dode
well this is not an image this is just a
well this is not an image this is just a
container so this is going to be even
container so this is going to be even
slower if you're not going to release
slower if you're not going to release
um yeah this is just the worst of both
almost done though we're going to follow
almost done though we're going to follow
the re the um the repo instructions
the re the um the repo instructions
exactly this time since I wasn't
exactly this time since I wasn't
entirely fair to the Jack uh the Marl
entirely fair to the Jack uh the Marl
one cuz I didn't use the exact
one cuz I didn't use the exact
install um so I'm going to use their
install um so I'm going to use their
exact instructions inside of a clean
exact instructions inside of a clean
Docker and if this doesn't work I'm
Docker and if this doesn't work I'm
going to conclude that the Jack's
going to conclude that the Jack's
ecosystem is cursed and uh is not worth
ecosystem is cursed and uh is not worth
touching for a while it does work and we
touching for a while it does work and we
can run some stuff then we will be good
can run some stuff then we will be good
and I will see if I can get puffer bound
and I will see if I can get puffer bound
to
it it's
fine I hate Anaconda so much
like the install time to be fair is not
like the install time to be fair is not
terrible but
terrible but
um the spin up time for each new
um the spin up time for each new
environment is just not what you want it
environment is just not what you want it
to be only like base images
okay
now hopefully this will correctly
run how much stuff am I going to have to
run how much stuff am I going to have to
change for
change for
this because this is not I mean this is
this because this is not I mean this is
like way more control this is not like
like way more control this is not like
General RL this is specifically
General RL this is specifically
control is a much smaller set of stuff
control is a much smaller set of stuff
than the discret
than the discret
M's
M's
um I think we're going to have to are we
um I think we're going to have to are we
going to have to like mess with the
going to have to like mess with the
losses and
stuff J is the
stuff J is the
same calculate
loss use clipping
[Music]
[Music]
debugging
weird Okay sample
actions so it's
actions so it's
got act
got act
sample agent.
sample agent.
actor what's actor
this a train
this a train
State what's a train
State oh wait this is not um I thought
State oh wait this is not um I thought
this was a single file implementation
this was a single file implementation
this is not a single file
this is not a single file
implementation there's
implementation there's
um a bunch of other
stuff how much stuff do they have in
stuff how much stuff do they have in
utils
okay I'm substantially less impressed
okay I'm substantially less impressed
now because I thought this was the whole
now because I thought this was the whole
code so that some of it standard to be
code so that some of it standard to be
fair um but there's actually there is
fair um but there's actually there is
quite a a number of additional utilities
quite a a number of additional utilities
that are not included in the line
account the code the the code itself is
account the code the the code itself is
looks fairly clean though so Props for
that but I am not
that but I am not
sure how I'm going to update
sure how I'm going to update
the uh the actions to
the uh the actions to
be
discreet I technically don't have to if
discreet I technically don't have to if
I'm just trying to get a speed test do I
I'm just trying to get a speed test do I
I can just kind of post talk it
the fact that this uses gem as
well were uh performance metrics given
well were uh performance metrics given
with
with
this like performance numbers
anywhere x o
anywhere x o
[Music]
[Music]
RL no
oh wait they have WB reports okay so
oh wait they have WB reports okay so
I'll be able to get it from this
I'll be able to get it from this
probably
probably
right locked
let me DM
Kevin jeez this is like so
Kevin jeez this is like so
unbelievably slow
well I should be able to figure out
well I should be able to figure out
though if this is a good Library I
though if this is a good Library I
should be able to figure out where it is
should be able to figure out where it is
Computing the actions right
sample
actions agent.
actions agent.
actor and agent. actor
actor and agent. actor
is a train state that doesn't make any
is a train state that doesn't make any
sense
um this is train state right here's
um this is train state right here's
train
state which takes a model
def it takes a model de
def it takes a model de
call apply
call apply
function which is what gets past so I
function which is what gets past so I
have to see when the train States made
have to see when the train States made
somehow
so the actor gets passed to
PO which
is wait the actor gets passed
is wait the actor gets passed
to the the actor gets passed to the
to the the actor gets passed to the
agent um
agent um
agent actor equals actor so
agent actor equals actor so
where actor is train State
where actor is train State
create
create
actor which takes an actor
actor which takes an actor
defa which is a policy
where the hell's policy come
from is policy in
from is policy in
here okay
wait what the
[ __ ]
call but the where the hell are the
call but the where the hell are the
weights even stored for
this um
well here's the
well here's the
distribution but I have no idea how I'm
distribution but I have no idea how I'm
going to be how I'm supposed to be able
going to be how I'm supposed to be able
to edit any of this
to edit any of this
stuff um
and it doesn't
work setup does not work in a clean
environment do I have to cond oh wait
environment do I have to cond oh wait
cond right wait
okay hold on Maybe I'm
Wrong nope this was the error that I got
before so this two
now let's just before I blast this let
now let's just before I blast this let
me make sure I'm not being completely
me make sure I'm not being completely
stupid
stupid
here
here
um is this actually just supposed to be
um is this actually just supposed to be
run as po it is supposed to just be run
run as po it is supposed to just be run
as p.p though right
yeah this is totally it's just got a
yeah this is totally it's just got a
main
main
function maybe it takes pams but they
function maybe it takes pams but they
should have defaults
right yeah they've all got
defaults um
I don't know I can try
sa
sa
nope doesn't
nope doesn't
work config is
work config is
no same
no same
error
error
so I'm not going to be able to use this
so I'm not going to be able to use this
unfortunately um even if this had
unfortunately um even if this had
discret implementation I mean maybe then
discret implementation I mean maybe then
if it had a discret implementation
if it had a discret implementation
but
like man this is so sad like I can tell
like man this is so sad like I can tell
that this is like a good project written
that this is like a good project written
by somebody who knows what they're doing
by somebody who knows what they're doing
right I know Kevin Kevin does good work
right I know Kevin Kevin does good work
but like just the amount of stuff that's
but like just the amount of stuff that's
just Jax is causing like this whole like
just Jax is causing like this whole like
this shouldn't have to exist this whole
this shouldn't have to exist this whole
like for the online like the PO
like for the online like the PO
implementation
implementation
that's
that's
here this PO implementation should just
here this PO implementation should just
be this
length is there a clean
rl1 is there a Jack's one here yeah
rl1 is there a Jack's one here yeah
there is isn't there
[Music]
uh well maybe I can at least test
uh well maybe I can at least test
out but the thing is this is so
out but the thing is this is so
unoptimized like I know that this clean
unoptimized like I know that this clean
R this uh implementation here is so much
R this uh implementation here is so much
less optimized I mean the best thing I
less optimized I mean the best thing I
could do is potentially go find cost's
could do is potentially go find cost's
numbers that might tell me
numbers that might tell me
something but I don't even think that's
something but I don't even think that's
going to tell me anything
nope where is
nope where is
it clean our
else okay so here is
else okay so here is
clean
RLS oh he ran everything didn't he
RLS oh he ran everything didn't he
that's cool there's a breakout beam
that's cool there's a breakout beam
Rider will
Rider will
do so how
do so how
fast did he
get 40
get 40
minutes yeah that's not fast
40 minutes for 10 million steps is not
40 minutes for 10 million steps is not
fast puffer is faster than that and now
fast puffer is faster than that and now
not maybe not with these same settings
not maybe not with these same settings
but
but
um
um
yeah there's more that can be done for
sure so not sold on the speed thing
sure so not sold on the speed thing
yet
yet
oops black
okay wait he gave me a
thing comment out that
import where is
import where is
it from do configurations
import import checkpoints
checkpoints uh on Jack
Jack
Jack if they're breaking stuff on bug
Jack if they're breaking stuff on bug
fix versions
all
different error
jeez
um I mean this should be pretty
um I mean this should be pretty
indictive ative of the Jack
ecosystem should
ecosystem should
be did I maybe I screwed it up hold on I
be did I maybe I screwed it up hold on I
don't think I
don't think I
did let just check
Honda
Forge that's right
uh
it's all these random Jacks
packages
705 that's so
705 that's so
unfortunate the fact that they're
unfortunate the fact that they're
breaking stuff on bugs bug fix versions
breaking stuff on bugs bug fix versions
as well that I'm getting different
as well that I'm getting different
errors is insane
um none of these are like well these are
um none of these are like well these are
pinned right but some
pinned right but some
s scipi was not pinned in
here yeah this needs like more depths
pinned it's
pinned it's
annoying
TPU I could do Jack Cuda
maybe hold on
nope plus
CA maybe this
nope two updated
uh
okay let's
see all right
so I guess you're not supposed to run it
so I guess you're not supposed to run it
from
here you need to log in it doesn't work
here you need to log in it doesn't work
without Wan B
let me go grab my w b
key these are
key these are
settings where's this thing
yeah yeah yeah it's going to take a
yeah yeah yeah it's going to take a
second to give me my API
key give me the key
missing
maoko holy
cursed
cursed
god control ecosystem is cursed jym
god control ecosystem is cursed jym
ecosystem is cursed Jack ecosystem is
ecosystem is cursed Jack ecosystem is
cursed you're just
[ __ ] I mean I I don't know what
like what the heck is there a different
like what the heck is there a different
en I can
en I can
do namama Joko pie bullet Maybe
what's all this
H not
really every language has the same
problem so
is it easy to swap the N
here maybe you just Swap this thing
right which is most likely to work DMC
right which is most likely to work DMC
maybe cheetah
maybe cheetah
run maybe I do
this I didn't set up my uh I didn't
this I didn't set up my uh I didn't
bother setting up
Maven no chpu TPU found is gross
all
right so what's the Jax Cuda thing that
right so what's the Jax Cuda thing that
I
need c to 12 like
need c to 12 like
this all right let's
this all right let's
try yeah yeah yeah yeah yeah where's the
try yeah yeah yeah yeah yeah where's the
jack thing
Cuda
12 Jax does not provide
12 Jax does not provide
extra Q to
12 requirement already satisfied
GPU does not work
uh
uh
un activate
zeros yeah my torch
works ah crap what's the cond thing
works ah crap what's the cond thing
kinda activate something or
other
list now what's the
Honda what's the freaking
Honda what's the freaking
cond cond list uh
M
M
where list
where list
cond
cond
list
no cond of
info so it doesn't find my GPU for some
info so it doesn't find my GPU for some
reason this is gross
Nvidia
GPU ja just ships Cuda
GPU ja just ships Cuda
123 compatible with Cuda yeah I have
123 compatible with Cuda yeah I have
this
this should be what it was it should be
this should be what it was it should be
using the
using the
container
um so it runs at least but
is
is
this this is 1 million here
right 100 iterations per second what
is go
Max
steps really it's only trained for a
steps really it's only trained for a
million
steps I mean I guess I've got to um
well actually wait he might have made
well actually wait he might have made
this public by
now let me see how fast he
uh he has this where's the
notebook okay he made it public
notebook okay he made it public
good
so here's the half cheetah end right
right you don't have the do you not have
right you don't have the do you not have
the time on
this give me one of
this give me one of
these come on it's private
hi I'm from Ecuador what is Jax Jax is
hi I'm from Ecuador what is Jax Jax is
this
this
GPU accelerated learning library that is
GPU accelerated learning library that is
an alternative to pie torch as well as
an alternative to pie torch as well as
used in simulation I'm currently playing
used in simulation I'm currently playing
a lot of people have said it's very good
a lot of people have said it's very good
I'm playing around with it right now in
I'm playing around with it right now in
this new library and so far I completely
this new library and so far I completely
hate it um
hate it um
we're going to see whether it gets any
we're going to see whether it gets any
better and if it actually is giving as
better and if it actually is giving as
high performance as people say or
not but so far it looks to me like a
not but so far it looks to me like a
bunch of functional Bros who love their
bunch of functional Bros who love their
hasal decided to make a learning library
hasal decided to make a learning library
and that went as well about as well as
and that went as well about as well as
you'd
you'd
expect with all of the usual versioning
expect with all of the usual versioning
problems in python as well and
problems in python as well and
absolutely nothing uh pinned down and
absolutely nothing uh pinned down and
made more stable as you'd expect from
made more stable as you'd expect from
like a new library trying to get stuff
like a new library trying to get stuff
right so let me see is
right so let me see is
this can I get the run
this can I get the run
time wait this took an hour and 43
time wait this took an hour and 43
minutes for a million steps is that
minutes for a million steps is that
right is this a million episodes or a
right is this a million episodes or a
million steps I think this is a million
million steps I think this is a million
steps how could it possibly take an hour
steps how could it possibly take an hour
and 43 minutes
right there's just no way this should
right there's just no way this should
take like 5
Seconds episode
Seconds episode
return am I reading this wrong is it a
return am I reading this wrong is it a
million
million
episodes a million
batches
batches
wait maybe it's 16
wait maybe it's 16
million uh
so range
of we've got add
transitions I'm going to be generous I'm
transitions I'm going to be generous I'm
assuming that this is batched across the
assuming that this is batched across the
environments
um train model
wait flags. num steps per up
okay steps yeah yeah so this is the same
okay steps yeah yeah so this is the same
so this is 16 million steps right number
so this is 16 million steps right number
of Ms to run in parallel 16 let's just
of Ms to run in parallel 16 let's just
make sure cuz he had half cheetah as the
make sure cuz he had half cheetah as the
default let me make sure it's the same
default let me make sure it's the same
here
here
right yeah yeah yeah so 16 million steps
right yeah yeah yeah so 16 million steps
in an hour 43 Mill minutes is absolutely
in an hour 43 Mill minutes is absolutely
God awful so that's not fast whatsoever
God awful so that's not fast whatsoever
that's incredibly incredibly
that's incredibly incredibly
slow um so I don't think you can make
slow um so I don't think you can make
any perf claims about anything at that
speed how big is the
network this is 512 512
512 uh
let's
let's
see where's the freaking
policy it looks like it's just an MLP
right oh God this
code dance
code dance
oh there is support for discreet that's
oh there is support for discreet that's
nice yeah I didn't notice this so there
nice yeah I didn't notice this so there
is support for discreet here that's
good but yeah this looks like it's just
good but yeah this looks like it's just
let me think 512 512 is 500,000
let me think 512 512 is 500,000
parameter model CU it's 250 250k and
parameter model CU it's 250 250k and
then 250k so yeah that's a tiny I I
then 250k so yeah that's a tiny I I
don't know what is up with this this
don't know what is up with this this
something
something
is screwy
is screwy
let me go check on the
let me go check on the
whoops and check if I got any DMS from
him NOP
well there's really not much else to do
well there's really not much else to do
here unless I I would like to see if I
here unless I I would like to see if I
could get GPU working
maybe I mean I also wonder it does
maybe I mean I also wonder it does
doesn't it does depend kind
doesn't it does depend kind
of how many updates they're
running but if it's
running but if it's
like mini batch
size okay so this is
a Time 8 is five so this is a 1024 mini
a Time 8 is five so this is a 1024 mini
batch size which is small but not like
batch size which is small but not like
crazy small
two yeah this should be way faster this
two yeah this should be way faster this
no
no
excuse
um
yeah wait multiplied by number
yeah wait multiplied by number
M's batch
M's batch
size oh 64 mini batch that's
size oh 64 mini batch that's
insane yeah yeah that's that's just
insane yeah yeah that's that's just
absolutely insane
so this is
so this is
slow I don't know how slow the simulator
slow I don't know how slow the simulator
is though that's the
is though that's the
thing maybe I could just real quick just
thing maybe I could just real quick just
test
the maybe I can just hack this to test
the maybe I can just hack this to test
the simulator real quick right
where are the M's
where are the M's
made make ve
made make ve
M right here make V
and okay let's
and okay let's
do cheetah run
do cheetah run
num Ms equal
num Ms equal
right then we do I want to see how fast
right then we do I want to see how fast
this m
is and I will allocate for the fact that
is and I will allocate for the fact that
I am on my slower uh
I am on my slower uh
box
box
so all right I need to just see
so what we're going to do is actions
so what we're going to do is actions
equal action
equal action
space sample
this is a trick to make sure that you're
this is a trick to make sure that you're
not accidentally timing the sample time
not accidentally timing the sample time
for fast M which I don't think is going
for fast M which I don't think is going
to be relevant but we're going to give
to be relevant but we're going to give
it the benefit of the doubt
it the benefit of the doubt
so uh start time.
so uh start time.
time for
time for
time and what we're going to do
time and what we're going to do
is while uh I'm
is while uh I'm
time
time
start we're going to run this for 10
start we're going to run this for 10
seconds
seconds
and I'm going to just do pick is equal
and I'm going to just do pick is equal
to
to
zero we're going to do m. step actions
zero we're going to do m. step actions
of uh was it tick percent
print
print
time or was it
time or was it
SPS which is going to be
uh time
start no autocomplete is really clunky
start no autocomplete is really clunky
over uh the number of steps which is a
over uh the number of steps which is a
th000
no it steps per second so it's going to
no it steps per second so it's going to
be
be
tick uh
tick uh
times num M's which is 16 divided
times num M's which is 16 divided
by the
by the
time let's see if this
runs
what oh I'm dumb it's okay
okay you do need to reset it
apparently no big
deal looks like it's
running excuse
running excuse
me
me
oh it's been uh it's been a
day actually no we don't want to do that
day actually no we don't want to do that
was
was
dumb we want to do tick plus equals one
dumb we want to do tick plus equals one
yeah let's do it this way
7,000 steps per
second on this like not
second on this like not
great uh on this not great
desktop
right 8
right 8
core it would be more than twice as fast
core it would be more than twice as fast
on a real machine
so I it just
so I it just
like well actually wait back of the
like well actually wait back of the
envelope
envelope
right the way that you do this so 3600
right the way that you do this so 3600
seconds per hour
times
times
six 27 mil per hour yeah no this is slow
it took an hour 40 to run these
experiments uh times hour 40
experiments uh times hour 40
is uh
1.6 should have
1.6 should have
been two to three times that speed two
been two to three times that speed two
to three times that speed it is
to three times that speed it is
incredibly easy uh to get capped out
incredibly easy uh to get capped out
speeds as well
speeds as well
with uh environments that are only 7500
with uh environments that are only 7500
steps per second like
steps per second like
so uh basically no perf optimization
so uh basically no perf optimization
whatsoever um
yeah well it is uh 7:32 so I just wanted
yeah well it is uh 7:32 so I just wanted
to jump in and do a quick test stream
to jump in and do a quick test stream
and check out a Jax thing to see if I
and check out a Jax thing to see if I
was missing
was missing
out I'll give my brief summary of this
out I'll give my brief summary of this
overall U first of all Kevin France
overall U first of all Kevin France
incredibly incred L talented guy
incredibly incred L talented guy
actually knows how to write good code
actually knows how to write good code
does a ton of great research um so
does a ton of great research um so
basically anything that I say about this
basically anything that I say about this
project is going to be bad because Jax
project is going to be bad because Jax
is making it be bad not because of Kevin
is making it be bad not because of Kevin
so and the surrounding ecosystem so
so and the surrounding ecosystem so
control ecosystems old and bad um jimm
control ecosystems old and bad um jimm
ecosystem around that is outdated and
ecosystem around that is outdated and
bad right so so you're starting off like
bad right so so you're starting off like
that bad there's the npol info that has
that bad there's the npol info that has
to run on top of that that's complicated
to run on top of that that's complicated
right but then on top of all that the
right but then on top of all that the
jackon for is bad it has breaking
jackon for is bad it has breaking
updates in bug fix versions apparently
updates in bug fix versions apparently
so there're a bunch of dependency issues
so there're a bunch of dependency issues
and then once you actually get it
and then once you actually get it
running it seems like somehow the wrong
running it seems like somehow the wrong
metrics have been optimized for here um
metrics have been optimized for here um
because if the whole selling point of
because if the whole selling point of
Jack is speed and the code is undeniably
Jack is speed and the code is undeniably
inarguably more complicated and annoying
inarguably more complicated and annoying
to deal with than pytorch right so it's
to deal with than pytorch right so it's
got to have speed
got to have speed
um to even think about it this is an
um to even think about it this is an
environment that's running at 7500 steps
environment that's running at 7500 steps
per second on my you know not great
per second on my you know not great
local desktop while I'm streaming as
local desktop while I'm streaming as
well um that should be able to produce
well um that should be able to produce
in an hour 40 44 44 million steps worth
in an hour 40 44 44 million steps worth
of
of
data um if it's supposed to produce that
data um if it's supposed to produce that
much data that's not a lot of data for
much data that's not a lot of data for
an hour 40 you should be able to train
an hour 40 you should be able to train
44 mil but it's only training 16 mil in
44 mil but it's only training 16 mil in
that time now that's not necessarily
that time now that's not necessarily
Jack right that could be I see that the
Jack right that could be I see that the
mini batch sizes are way too small to be
mini batch sizes are way too small to be
even remotely reasonable I don't know
even remotely reasonable I don't know
why they're that small
why they're that small
um but if the selling point is like hey
um but if the selling point is like hey
use this library because it's Jack and
use this library because it's Jack and
Jax is fast this is like a third of the
Jax is fast this is like a third of the
speed that you would get out of puffer
speed that you would get out of puffer
lib while having everything be way
lib while having everything be way
easier and more stable with
torch hey
torch hey
siman yeah I I don't necessarily even
siman yeah I I don't necessarily even
think that it's slow right I'm not even
think that it's slow right I'm not even
saying that Jax is slow but if you're
saying that Jax is slow but if you're
saying that Jax based libraries are just
saying that Jax based libraries are just
so much faster than pytorch ones I'm not
so much faster than pytorch ones I'm not
seeing it right like you take a 7500
seeing it right like you take a 7500
step per second environment puffer lib
step per second environment puffer lib
will train it at 7500 steps per second
will train it at 7500 steps per second
in fact we do this with Pokémon which
in fact we do this with Pokémon which
has more data and is more annoying to
has more data and is more annoying to
transfer across and has a bigger policy
transfer across and has a bigger policy
and it trains at know 7,000 at least
and it trains at know 7,000 at least
steps per
steps per
second um
second um
so this should be very very easily
so this should be very very easily
attainable if Japs is remotely a
attainable if Japs is remotely a
performance dependent um
Library so yeah I
you know I was I always avoid checking
you know I was I always avoid checking
out the trendy stuff precisely for this
out the trendy stuff precisely for this
reason cuz like until the stuff has
reason cuz like until the stuff has
matured and has really like had time uh
matured and has really like had time uh
you end up just wasting a lot of time
you end up just wasting a lot of time
messing with stuff but in this case it
messing with stuff but in this case it
really seems like
really seems like
fundamentally the Jack's code base is
fundamentally the Jack's code base is
just in a weird way that nobody asked
just in a weird way that nobody asked
for like just look at this and this is
for like just look at this and this is
not a critique of Kevin's code Kevin
not a critique of Kevin's code Kevin
writes a really good
writes a really good
code it's like this is what Jax forces
code it's like this is what Jax forces
good programmers to
good programmers to
do look this is your network code where
do look this is your network code where
is
it uh data where the heck is it oh UT
it uh data where the heck is it oh UT
Tails Network okay just you can't
Tails Network okay just you can't
possibly tell me that this is like
possibly tell me that this is like
remotely reasonable and readable code
remotely reasonable and readable code
like look at this one here
so the weights of this thing are who
so the weights of this thing are who
knows where and despite the fact that
knows where and despite the fact that
like we don't even know where the
like we don't even know where the
weights are here like look on every
weights are here like look on every
call this thing is
call this thing is
making an
making an
MLP it's so it's making the network and
MLP it's so it's making the network and
then calling it on
then calling it on
observations this is not like I don't
observations this is not like I don't
see weights in here anywhere so like
see weights in here anywhere so like
this is doing some weird functional
this is doing some weird functional
caching [ __ ] where like it's
caching [ __ ] where like it's
injecting the weights or something I
injecting the weights or something I
don't know so it's like stateless but
don't know so it's like stateless but
not really and it's like still class
not really and it's like still class
syntax and then it's called on
syntax and then it's called on
observations and then you have the same
observations and then you have the same
exact thing with all these layers so
exact thing with all these layers so
this is like the worst of combining
this is like the worst of combining
functional and objectoriented
functional and objectoriented
programming you literally get the worst
programming you literally get the worst
of both and I'm not even seeing the
of both and I'm not even seeing the
speed like what is the point of this
hey Costa how's it going I'm having an
hey Costa how's it going I'm having an
absolutely terrible time of Jax at the
absolutely terrible time of Jax at the
moment and generally just [ __ ] on it
um and this is kind of like a different
um and this is kind of like a different
thing from before right cuz this is like
thing from before right cuz this is like
this is a jack based library from
this is a jack based library from
somebody I really respect after it's had
somebody I really respect after it's had
several iterations to cook right like
several iterations to cook right like
writes good
writes good
code okay wait let's see let's see your
code okay wait let's see let's see your
thing let's see if your jack is fast I
thing let's see if your jack is fast I
bet your jack isn't
fast actually Costa give me do you have
fast actually Costa give me do you have
a link to like a uh a report that you
a link to like a uh a report that you
think runs fast like do you have a steps
think runs fast like do you have a steps
per second on anything let me look at
per second on anything let me look at
your Jack's code here here like this is
your Jack's code here here like this is
another good thing cuz if I look at your
another good thing cuz if I look at your
code I know you write good code you
code I know you write good code you
write like the best code right so if I
write like the best code right so if I
don't like the code it means that it's
don't like the code it means that it's
Jack's making you write shitty stuff
Jack's making you write shitty stuff
like it's forcing you to this is
fine okay I hate this I hate the fact
fine okay I hate this I hate the fact
like yes this is technically shorter but
like yes this is technically shorter but
I hate the fact that it's like you're
I hate the fact that it's like you're
remaking this object every time you have
remaking this object every time you have
this class based syntax and then the
this class based syntax and then the
weights just magically I guess come out
weights just magically I guess come out
of nowhere
of nowhere
like this is bizarre to
like this is bizarre to
me like if you really want to save the
me like if you really want to save the
lines of the Declarations fine you use a
lines of the Declarations fine you use a
sequential
right but yeah it's nice and short so
right but yeah it's nice and short so
like uh okay I think it's really gross
like uh okay I think it's really gross
in more complicated networks because in
in more complicated networks because in
more complicated networks if you don't
more complicated networks if you don't
separate the Declaration you end up with
separate the Declaration you end up with
this
this
right so here you have a bunch of like
right so here you have a bunch of like
conditional logic
conditional logic
where you also have the syntax overhead
where you also have the syntax overhead
of having to redeclare this thing like
of having to redeclare this thing like
like this makes no sense to me so in
like this makes no sense to me so in
your case it actually looks fine but
your case it actually looks fine but
here it's a
here it's a
mess difficult to diagnose
mess difficult to diagnose
yeah
yeah
so yeah this is fine I actually yeah I
so yeah this is fine I actually yeah I
really wanted like strs like this is
really wanted like strs like this is
this is just a data class but fine
this is just a data class but fine
that's cool
why is this defined in in
main this is like a really common thing
main this is like a really common thing
I see in ja is like these scope captured
I see in ja is like these scope captured
functions
um too many damn third party libraries
um too many damn third party libraries
weights and stuff is because the weights
weights and stuff is because the weights
is separate from the neuronet function
is separate from the neuronet function
but like where are they they're nowhere
but like where are they they're nowhere
right like where do the weights get
right like where do the weights get
added
added
nowhere like I know that they get added
nowhere like I know that they get added
in the main or whatever that calls this
in the main or whatever that calls this
but like it's not in the code so it's
but like it's not in the code so it's
like this weird functional class-based
like this weird functional class-based
hybrid thing that has state but you
hybrid thing that has state but you
don't see the
state but where where do they get made
state but where where do they get made
right like look it's yeah I know that
right like look it's yeah I know that
this technically has them if they get
this technically has them if they get
made by the class though then or the
made by the class though then or the
optimizer right like where where do they
optimizer right like where where do they
get added to this thing and then like
get added to this thing and then like
you're remaking this it looks like
you're remaking this it looks like
you're remaking this call every time so
you're remaking this call every time so
like how does this know where to get its
like how does this know where to get its
weights from it's really
Jank this is like this bizarre like look
Jank this is like this bizarre like look
if you were to tell me that this is
if you were to tell me that this is
going to be like neuronet DOD lowercase
going to be like neuronet DOD lowercase
right that takes weights as a parameter
right that takes weights as a parameter
like weights and bias as a parameter I'd
like weights and bias as a parameter I'd
say it's clunky but okay fine like
say it's clunky but okay fine like
that's functional like that makes sense
that's functional like that makes sense
sure you can do it functional I don't
sure you can do it functional I don't
like it but I'd like it more than
this more functions inside of main that
this more functions inside of main that
are scope captured this is not bad it's
are scope captured this is not bad it's
only one nested deep but it I shouldn't
only one nested deep but it I shouldn't
need to be nested in the first
need to be nested in the first
place
place
um storage.
um storage.
replace good code right you write good
replace good code right you write good
code the fact that it's has to be scope
code the fact that it's has to be scope
captured like this is
captured like this is
janky um
janky um
yep good
code good
code good
code the hell is this now we're inside
code the hell is this now we're inside
of Maine we're two nested deep right why
of Maine we're two nested deep right why
the hell are we two two nested deep with
the hell are we two two nested deep with
scope capture
some logging so like this is good code
some logging so like this is good code
right you write good code but
right you write good code but
like it would be way better code if it
like it would be way better code if it
were not Jack and the proof of that is
were not Jack and the proof of that is
we can just open up the P the torch po
we can just open up the P the torch po
file and it's way better and doesn't
file and it's way better and doesn't
have all this janky scope capture stuff
have all this janky scope capture stuff
in it
in it
right so the second question is is it
right so the second question is is it
even fast like people say it's fast but
even fast like people say it's fast but
where how is it fast I haven't seen any
where how is it fast I haven't seen any
like I haven't seen anybody show that
like I haven't seen anybody show that
it's actually fast I'm training snake it
it's actually fast I'm training snake it
over a million steps per second in P
over a million steps per second in P
torch where's the speed on
ja I don't understand as well when you
ja I don't understand as well when you
say the neural net sta is just a
say the neural net sta is just a
function
function
because it needs weights right and I'm
because it needs weights right and I'm
not seeing weights anywhere here
not seeing weights anywhere here
unless it's this default in
unless it's this default in
it but like this gets cached or
it but like this gets cached or
something because you're not like
something because you're not like
updating the
weights where is it much faster though
weights where is it much faster though
like I haven't
like I haven't
seen I haven't seen where it's faster
seen I haven't seen where it's faster
right like is this just a case of people
right like is this just a case of people
writing horribly optimized pytorch code
writing horribly optimized pytorch code
and then well optimized Jack's code
yeah I I still don't see where they get
yeah I I still don't see where they get
set though agent State
set though agent State
like they're not in the point is they're
like they're not in the point is they're
not in the function
not in the function
call right so this is supposed to be
call right so this is supposed to be
like stateless but it is actually taking
like stateless but it is actually taking
state so like from there it's just not
state so like from there it's just not
here it's weird anyways that like that
here it's weird anyways that like that
like we can argue that d dets of this I
like we can argue that d dets of this I
think it's generally like much wonkier
think it's generally like much wonkier
code um but the main thing is like I
code um but the main thing is like I
don't even see it being fast um I did
don't even see it being fast um I did
back of the envelope math on cheetah it
back of the envelope math on cheetah it
was really slow like three times slower
was really slow like three times slower
than it should be that I could get in P
than it should be that I could get in P
torch
torch
um and I don't
um and I don't
see yeah like if you write the same
see yeah like if you write the same
really weird like poorly GPU optimized
really weird like poorly GPU optimized
code in Jackson p tortured they might
code in Jackson p tortured they might
like one might be faster than the other
like one might be faster than the other
but
but
like do you have notebooks that are like
like do you have notebooks that are like
hey look Jack gets good steps per second
here qar is a slow environment so we're
here qar is a slow environment so we're
not going to see anything there
right I mean I guess I could look at
right I mean I guess I could look at
your PO Atari stuff but I think I've
your PO Atari stuff but I think I've
gotten it faster I've gotten like 16
gotten it faster I've gotten like 16
20,000 steps per
20,000 steps per
second on uh clean RL like on clean RL
second on uh clean RL like on clean RL
with po uh in
with po uh in
torch like you can get 16k on Atari
torch like you can get 16k on Atari
pretty
easily okay so yeah there
easily okay so yeah there
is uh I should get a chat plugin so I
is uh I should get a chat plugin so I
can see the chat on the screen because
can see the chat on the screen because
otherwise I'm just talking to yeah I'll
otherwise I'm just talking to yeah I'll
I'll work on that
but basically what I would want is I'd
but basically what I would want is I'd
want like a fast environment where JX is
want like a fast environment where JX is
really fast
um okay let's
see
see
okay so you have the same environment as
okay so you have the same environment as
Chris Lou here
do you have
the
the
okay so you
okay so you
have right
have right
here this is what looks to be about six
here this is what looks to be about six
minutes for six so a million steps per
minutes for six so a million steps per
minute 1 million steps per
minute 1 million steps per
minute um
minute um
I'm assuming the environment is fast
I'm assuming the environment is fast
then and is not the bottleneck if it is
then and is not the bottleneck if it is
a million steps per minute I'm assuming
a million steps per minute I'm assuming
the environment is fast
the environment is fast
um oh let's see
there's let's
there's let's
see where's time
there
there
is 41 minutes
for 41 minutes for 10 mil is not
for 41 minutes for 10 mil is not
particularly
particularly
fast like we can absolutely get I'd have
fast like we can absolutely get I'd have
to see if the hyper parameters tune out
to see if the hyper parameters tune out
to be as good but um
to be as good but um
if I've gotten 16k I think it was like
if I've gotten 16k I think it was like
20 minutes or something for 10 mil 15 20
20 minutes or something for 10 mil 15 20
minutes for 10 mil let me
minutes for 10 mil let me
see so you have uh 40 minutes so 66 or
see so you have uh 40 minutes so 66 or
actually it's just 2400
actually it's just 2400
seconds
seconds
um so let's see steps per second times
um so let's see steps per second times
is it 10 million yeah
it's only 4,000 steps per second isn't
it but like why are we running 8 M's
it but like why are we running 8 M's
right Costa like why why are we going to
right Costa like why why are we going to
compare numbers between like things that
compare numbers between like things that
are just absolutely horribly optimized
are just absolutely horribly optimized
for GPU batch size right like you why
for GPU batch size right like you why
why would we ever have eight
why would we ever have eight
environments
like I can find the
config I'm going to move the chat window
config I'm going to move the chat window
onto the the stream so I can if you
onto the the stream so I can if you
don't mind so I can because otherwise
don't mind so I can because otherwise
I'm just like talking into the
I'm just like talking into the
air
air
um so here let's look at puffer right so
um so here let's look at puffer right so
on puffer
on puffer
10 I have this config file right and I
10 I have this config file right and I
have
have
Atari and if you look down to the max
Atari and if you look down to the max
configs
I have 96 environments or 144 depending
I have 96 environments or 144 depending
right and I have a batch size of 48 so
right and I have a batch size of 48 so
by going from eight up to 48
by going from eight up to 48
environments with proper EnV pool and
environments with proper EnV pool and
then using like Sayan mini batch sizes
then using like Sayan mini batch sizes
you want like 2K or 4K or something like
you want like 2K or 4K or something like
that um this thing will train at 16,000
that um this thing will train at 16,000
steps per second and then you know
steps per second and then you know
you'll take a small hit
you'll take a small hit
12 or 10K whatever if you want to run
12 or 10K whatever if you want to run
multiple
multiple
Epoch per data batch but it's kind of so
Epoch per data batch but it's kind of so
fast at this point that you don't have
fast at this point that you don't have
to right you can just get fresh
to right you can just get fresh
data with large batch sizes torch well
data with large batch sizes torch well
yes this but this is the point right
yes this but this is the point right
like why are we running code that's just
like why are we running code that's just
not optimized for Hardware like why
not optimized for Hardware like why
don't we just run more environments and
don't we just run more environments and
then use the codebase that's
simple so I can say that with this snake
simple so I can say that with this snake
environment that I have I'll show you
environment that I have I'll show you
the batch sizes for that
the batch sizes for that
um let me go up in the dev
Branch so for the snake
Branch so for the snake
environment which I just ran this today
environment which I just ran this today
I ran 10 billion steps in about three
I ran 10 billion steps in about three
hours runs over a million steps per
hours runs over a million steps per
second I'm using a bat size of
second I'm using a bat size of
131k I'm using uh two environments which
131k I'm using uh two environments which
have have uh 4096 agents each so they're
have have uh 4096 agents each so they're
double buffered essentially so you have
double buffered essentially so you have
a mini batch or you have a Ford pass
a mini batch or you have a Ford pass
batch size of 496 you have a batch size
batch size of 496 you have a batch size
of 131k and then you have a mini batch
of 131k and then you have a mini batch
size of 32k was what hyperparameter
size of 32k was what hyperparameter
tuning got us so anything up from 4K
tuning got us so anything up from 4K
will be over a million steps per
will be over a million steps per
second you know we can just do this and
second you know we can just do this and
then you literally will get a decent
then you literally will get a decent
snake policy in 30 seconds flat and then
snake policy in 30 seconds flat and then
you get a pretty darn good snake policy
you get a pretty darn good snake policy
within a few
minutes so this is you know this is the
minutes so this is you know this is the
question I have for like for RL as a
question I have for like for RL as a
field like why do we move towards more
field like why do we move towards more
complicated and difficult to work with
complicated and difficult to work with
tools in the name of performance like
tools in the name of performance like
Jack's environments Jack's learning
Jack's environments Jack's learning
libraries when we can have dead simple
libraries when we can have dead simple
environment code I added a couple types
environment code I added a couple types
toonize it runs 14 million steps per
toonize it runs 14 million steps per
second per core dead simple
second per core dead simple
reinforcement learning code this is
reinforcement learning code this is
literally your clean rlpo code which is
literally your clean rlpo code which is
awesome that I just souped up with a
awesome that I just souped up with a
couple uh a couple optimizations and a
couple uh a couple optimizations and a
bunch of logging
bunch of logging
mostly and we can do billion scale
mostly and we can do billion scale
reinforcement learning on one card in
reinforcement learning on one card in
like hours in fact billion scale for a
like hours in fact billion scale for a
billion it's like 20 minutes or less
that's the real question I
have now if you want to talk about
have now if you want to talk about
distributed support right and like okay
distributed support right and like okay
pytorch has really bad distributed or
pytorch has really bad distributed or
something like that that's a totally
something like that that's a totally
different topic and like maybe there's a
different topic and like maybe there's a
thing there though probably it's still
thing there though probably it's still
easier to make pytorch distributed work
easier to make pytorch distributed work
well I I don't know I really don't know
well I I don't know I really don't know
there but
there but
everything outside of that it seems like
everything outside of that it seems like
it's just better to do in pytorch and
it's just better to do in pytorch and
write sane code that actually like runs
write sane code that actually like runs
reasonable batch sizes and
reasonable batch sizes and
such like I my 10 video right for puffer
such like I my 10 video right for puffer
was literally one of the things I did is
was literally one of the things I did is
I just took clean RL I increased the
I just took clean RL I increased the
batch size I already got it to be double
batch size I already got it to be double
or triple performance I added async and
or triple performance I added async and
a few additional tricks with a puffer
a few additional tricks with a puffer
especially puffer's VC and then it went
especially puffer's VC and then it went
to 16k
to 16k
Plus on Atari and nari is like the worst
Plus on Atari and nari is like the worst
optimized thing ever all the rappers are
optimized thing ever all the rappers are
garbage um the resize rapper in
garbage um the resize rapper in
gymnasium is absolute garbage
gymnasium is absolute garbage
um yeah like that could be made even
um yeah like that could be made even
much faster without any loss of learning
quality so I mean these are my thoughts
quality so I mean these are my thoughts
generally on the space at the moment um
generally on the space at the moment um
I think that send message
I send the
message was to
answer
answer
so I get that they're stored in agent
so I get that they're stored in agent
state. prams my point was that the way
state. prams my point was that the way
that the code is written it doesn't look
that the code is written it doesn't look
like they're stored there um the code is
like they're stored there um the code is
written in this really Jank way
here even here I'll look at even your
here even here I'll look at even your
code right I'll I'll literally look at
code right I'll I'll literally look at
the where is it your
code where's your
file all
file all
right
right
so right here there are no weights being
so right here there are no weights being
passed into this function right
passed into this function right
unless maybe are they they passed in on
unless maybe are they they passed in on
a nit but even if they're passed in on a
a nit but even if they're passed in on a
nit they're not being used here right
nit they're not being used here right
they're not being used here in fact it
they're not being used here in fact it
looks like this is the anit right here
looks like this is the anit right here
um so this code looks like it's using an
um so this code looks like it's using an
uninitialized Network every time like
uninitialized Network every time like
they're being cached or something but
they're being cached or something but
this is
this is
not like this is a weird objectoriented
not like this is a weird objectoriented
functional hybrid where this thing
functional hybrid where this thing
actually has state right or agent self.
actually has state right or agent self.
agent prems whatever has state but it
agent prems whatever has state but it
doesn't look like it has State that's
doesn't look like it has State that's
just Jank like this should not be
just Jank like this should not be
written this way this makes no
sense drives me
nuts Logics equals apply
well you're telling me that there's an
well you're telling me that there's an
apply
apply
function you're telling me that there's
function you're telling me that there's
an apply function this thing has a call
an apply function this thing has a call
right so this thing has a call you'd
right so this thing has a call you'd
expect to do you would not expect to do
expect to do you would not expect to do
actor. apply You' expect to do actor of
actor. apply You' expect to do actor of
thing because that's what underscore
thing because that's what underscore
call is for right but you're telling me
call is for right but you're telling me
that it it somehow takes an apply
that it it somehow takes an apply
function that uses this call which
function that uses this call which
doesn't even take parameters which very
doesn't even take parameters which very
clearly looks like it's initializing new
clearly looks like it's initializing new
parameters from Scrat
parameters from Scrat
and then somehow injects this agent
and then somehow injects this agent
state. prams actor
state. prams actor
prams like I'm not saying that it
prams like I'm not saying that it
doesn't work I'm sure it works but
doesn't work I'm sure it works but
that's just a ridiculous way to write
that's just a ridiculous way to write
code I mean that's like the exact that
code I mean that's like the exact that
looks like it's doing the opposite thing
looks like it's doing the opposite thing
and you're doing some weird injection
and you're doing some weird injection
thing
thing
right again for like no benefit as far
right again for like no benefit as far
as I can
tell this is what I say this is why like
tell this is what I say this is why like
I didn't look at any of the really early
I didn't look at any of the really early
Jack RL things and then like you Chris
Jack RL things and then like you Chris
Lou and Kevin have all done Jack RL
Lou and Kevin have all done Jack RL
libraries I know you all know how to
libraries I know you all know how to
write really good code I've seen you
write really good code I've seen you
write really good code so when I see
write really good code so when I see
stuff like this it's like oh well look
stuff like this it's like oh well look
if Jax is making the best people I know
if Jax is making the best people I know
in this space do weird things then Jax
in this space do weird things then Jax
is really
bad and yeah I'm sure that there are
bad and yeah I'm sure that there are
weird cases in which like Jax gets way
weird cases in which like Jax gets way
better perf when you try to do like
better perf when you try to do like
really small batches that gpus are not
really small batches that gpus are not
designed to do and it like compiles
designed to do and it like compiles
everything better or whatever sure but
everything better or whatever sure but
we could also just like not do RL like
we could also just like not do RL like
that right we can just use bigger
that right we can just use bigger
batches or bigger more M's like more
batches or bigger more M's like more
complex M's need bigger batch size
complex M's need bigger batch size
anyways we we know this
right so I don't know why we're building
right so I don't know why we're building
into a space where like for the sake of
into a space where like for the sake of
performance we're building towards like
performance we're building towards like
simpler and simpler environments and
simpler and simpler environments and
more and more Jank code like I like look
more and more Jank code like I like look
around nobody's doing reinforcement
around nobody's doing reinforcement
learning anymore everybody's doing
learning anymore everybody's doing
language models and yeah one of the
language models and yeah one of the
reasons for that is that all the funding
reasons for that is that all the funding
is on language models but the other
is on language models but the other
reason it's just a god- awful field to
reason it's just a god- awful field to
work in all the tools are complicated in
work in all the tools are complicated in
a pain in the ass and don't work and
a pain in the ass and don't work and
like this is making it not your code but
like this is making it not your code but
like Jax is making it more of a pain in
like Jax is making it more of a pain in
the
the
ass and the environments are getting
ass and the environments are getting
less and less interesting cuz they have
less and less interesting cuz they have
to now be written in Jack as well
to now be written in Jack as well
because that's the only way people can
because that's the only way people can
figure out how to make him fast like
figure out how to make him fast like
this is the exact opposite direction
this is the exact opposite direction
like how the heck are new PhD students
like how the heck are new PhD students
going to want to touch this field if
going to want to touch this field if
that's the state of things right they're
that's the state of things right they're
not they're going to go work on language
models you know this is one of the
models you know this is one of the
things that I was so proud of that I was
things that I was so proud of that I was
able to get done with the snake an
able to get done with the snake an
I did this in one week and it's like not
I did this in one week and it's like not
even that simple of an environment like
even that simple of an environment like
here I don't know I you haven't seen the
here I don't know I you haven't seen the
code for this I'm not going to go
code for this I'm not going to go
through all of it but
through all of it but
like okay this is the whole snake
like okay this is the whole snake
project it's a px this render I can
project it's a px this render I can
delete uh this is old and then it's a pi
delete uh this is old and then it's a pi
the pi file just has like API garbage in
the pi file just has like API garbage in
it this the logic of this environment is
it this the logic of this environment is
230 lines of scon uh it adds some types
230 lines of scon uh it adds some types
sure but then this codee is literally
sure but then this codee is literally
just python code it's python code with
just python code it's python code with
written out
written out
Loops written out Loops written out
Loops written out Loops written out
Loops pure python code 200 lines of it
Loops pure python code 200 lines of it
dead simple dead easy runs 14 million
dead simple dead easy runs 14 million
steps per
steps per
second well yeah there aren't a lot of
second well yeah there aren't a lot of
RL positions uh in Industry now but
RL positions uh in Industry now but
that's like a new feature of the last
that's like a new feature of the last
like two years literally right RL is
like two years literally right RL is
going to come back but for RL to come
going to come back but for RL to come
back it has to not be an unusable piece
back it has to not be an unusable piece
of garbage and my personal bet on how we
of garbage and my personal bet on how we
do that is we build dead simple High
do that is we build dead simple High
perform Sims for interesting
perform Sims for interesting
environments um we build like several of
environments um we build like several of
these we build really simple right
these we build really simple right
learning libraries clean RL is awesome I
learning libraries clean RL is awesome I
consider clean RL to be literally the
consider clean RL to be literally the
highest single individual contribution
highest single individual contribution
to the field I count your work that
to the field I count your work that
highly Costa
highly Costa
um like I kind of I've kind of made a of
um like I kind of I've kind of made a of
it with this file with a clean puff all
it with this file with a clean puff all
but it really it adds like a ton of
but it really it adds like a ton of
performance logging which I need to to
performance logging which I need to to
Really optimize stuff um all the codes
Really optimize stuff um all the codes
in here 750 lines most of it is logging
in here 750 lines most of it is logging
it's like 300 lines of actual core code
it's like 300 lines of actual core code
like that seems like a stack that could
like that seems like a stack that could
bring RL back right if we can just have
bring RL back right if we can just have
everything be that simple that seems
everything be that simple that seems
like a stack that could bring RL back I
like a stack that could bring RL back I
mean there's no thanks like you you've
mean there's no thanks like you you've
earned it like clean ARL makes
earned it like clean ARL makes
everything possible it's just like the
everything possible it's just like the
whole rest of what the field is doing is
whole rest of what the field is doing is
just it's
just it's
Madness anyways I didn't hop on here to
Madness anyways I didn't hop on here to
rant about um Jax for an hour I was
rant about um Jax for an hour I was
hoping that I was going to actually see
hoping that I was going to actually see
some good stuff coming out of Jax but it
some good stuff coming out of Jax but it
seems like really not and until somebody
seems like really not and until somebody
shows me like hey look we can get your
shows me like hey look we can get your
snake and running at 3 million steps per
snake and running at 3 million steps per
second or whatever it doesn't seem like
second or whatever it doesn't seem like
there should be any reason to care about
there should be any reason to care about
this
this
um snake en by the way the cool thing
um snake en by the way the cool thing
now I can't prove this yet I can I'll
now I can't prove this yet I can I'll
prove this with the next cool thing I
prove this with the next cool thing I
release but this snake EnV um that runs
release but this snake EnV um that runs
at 14 million steps per second like you
at 14 million steps per second like you
might say oh well okay cool you got
might say oh well okay cool you got
snake to run at 14 million steps per
snake to run at 14 million steps per
second it's not like you can make you
second it's not like you can make you
know much more interesting and complex
know much more interesting and complex
M's uh run at that speed right snake m
M's uh run at that speed right snake m
is pretty cool right it's like but it's
is pretty cool right it's like but it's
not the most complex and out there I
not the most complex and out there I
think it's on par with Atari right like
think it's on par with Atari right like
snake is very easily in Atari game it's
snake is very easily in Atari game it's
multi-agent it's 496 agents I built it
multi-agent it's 496 agents I built it
in a week like it's a reasonably
in a week like it's a reasonably
interesting and complex s but like a
interesting and complex s but like a
very common criticism would be okay you
very common criticism would be okay you
can't just do this and build much more
can't just do this and build much more
complex Ms like this but the thing is
complex Ms like this but the thing is
you can this exact Tech this exact Tech
you can this exact Tech this exact Tech
is going to scale to build anything I
is going to scale to build anything I
want at at least well over a million
want at at least well over a million
steps per second single core so that's
steps per second single core so that's
the next thing I'm going to show with
the next thing I'm going to show with
the release and I think that when people
the release and I think that when people
see that then they're going to realize
see that then they're going to realize
that the whole simulation stack just
that the whole simulation stack just
needs to be chucked out and Rewritten so
needs to be chucked out and Rewritten so
that's what I'm hoping the next thing
that's what I'm hoping the next thing
I'm going to be able to do is um very
I'm going to be able to do is um very
high bar have to finish a couple more
high bar have to finish a couple more
things but yeah yeah I wrote this SN and
things but yeah yeah I wrote this SN and
this is mine the original uh there was
this is mine the original uh there was
like an original that another guy wrote
like an original that another guy wrote
I saw like somebody was doing RL on
I saw like somebody was doing RL on
snake so I rewrote the thing uh it was
snake so I rewrote the thing uh it was
the original was just like a single
the original was just like a single
agent standard snake game I wrote wrote
agent standard snake game I wrote wrote
this multi-agent snake you can run
this multi-agent snake you can run
vectorized 4096 M's with one snake you
vectorized 4096 M's with one snake you
can run you know tons of different M
can run you know tons of different M
with different numbers of snakes in them
with different numbers of snakes in them
in the same core you can run 4096 snakes
in the same core you can run 4096 snakes
in one map there're three different
in one map there're three different
renderers it renders an asy IT renders a
renderers it renders an asy IT renders a
high level it renders a human playable
high level it renders a human playable
it's human playable and all of that code
it's human playable and all of that code
and all the
and all the
optimizations uh fits in around 460
optimizations uh fits in around 460
Total Lines this much logic and then
Total Lines this much logic and then
there's you know wrapper stuff and
there's you know wrapper stuff and
initialization in this file here another
initialization in this file here another
235 lines this includes three different
235 lines this includes three different
renderers and human
playable so dead simple
code you could delete this as well so
code you could delete this as well so
you know less than
450 so yeah that's that's my vision for
450 so yeah that's that's my vision for
the field these days um
the field these days um
um the thing I have to convince myself
um the thing I have to convince myself
not to do though I'm I'm kind of tempted
not to do though I'm I'm kind of tempted
to do
to do
this is what if I just made a miniature
this is what if I just made a miniature
mooba or like a miniature RTS next and I
mooba or like a miniature RTS next and I
did it like this and I gave myself like
did it like this and I gave myself like
two weeks to make like a pretty decent
two weeks to make like a pretty decent
strip down mooba maybe like thousand
strip down mooba maybe like thousand
lines of code Max for the environment
lines of code Max for the environment
Sim
Sim
um and I got it training at like a
um and I got it training at like a
million steps per second would that be
million steps per second would that be
would that be something worth
would that be something worth
doing or should I make you know a couple
doing or should I make you know a couple
not that crazy environments that are 500
not that crazy environments that are 500
lines each I don't
know I still figuring that out
okay
okay
well I am going to go get some food uh
well I am going to go get some food uh
This was meant to be a short stream just
This was meant to be a short stream just
to test out I am joint streaming to
to test out I am joint streaming to
Twitter and to YouTube so I wanted to
Twitter and to YouTube so I wanted to
make sure that that's working it seems
make sure that that's working it seems
like it is
like it is
um I am now just going to uh I'm going
um I am now just going to uh I'm going
to go get some food get some sleep and I
to go get some food get some sleep and I
might figure out some other stuff to do
might figure out some other stuff to do
tomorrow on this um I've got like a few
tomorrow on this um I've got like a few
side projects that are taking up a bunch
side projects that are taking up a bunch
of time and being very annoying and they
of time and being very annoying and they
I'm waiting for training runs on those
I'm waiting for training runs on those
at the moment so I might get stuck on
at the moment so I might get stuck on
that for another couple days but I
that for another couple days but I
really want to start a new simulation
really want to start a new simulation
project soon because they're really fun
project soon because they're really fun
and uh you know people watch them on uh
and uh you know people watch them on uh
people watch them online because it's
people watch them online because it's
cool to see how quickly you can build
cool to see how quickly you can build
like a high performance SIM from the
like a high performance SIM from the
ground up and thanks for dropping by
ground up and thanks for dropping by
Costa I'm gonna shut this off now night
