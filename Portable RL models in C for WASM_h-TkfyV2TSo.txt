Kind: captions
Language: en
okay we are
live
live
cool we're going to see if we can get a
cool we're going to see if we can get a
few cool things done
few cool things done
today it's been hectic it's been
today it's been hectic it's been
hectic but um we're at the point where
hectic but um we're at the point where
we've got these guys running around
we've got these guys running around
doing stuff right
doing stuff right
we've got all sorts of fun stuff and
we've got all sorts of fun stuff and
really at this
really at this
point I think we just have to figure out
point I think we just have to figure out
how to clean up the environment so it um
how to clean up the environment so it um
it plays nice with puffer lib and a few
it plays nice with puffer lib and a few
other things and we'll be able to
other things and we'll be able to
train that's what we're going to start
train that's what we're going to start
on today
all
right let me take a look at how we left
right let me take a look at how we left
this
thing so right now we have two different
thing so right now we have two different
versions of this this
versions of this this
environment there's a syon version and
environment there's a syon version and
there's a native C
there's a native C
version
version
[Music]
[Music]
and pretty much all we have to figure
and pretty much all we have to figure
out is how to make the native C
out is how to make the native C
version uh play nice with
version uh play nice with
puffer and we will be good to go
puffer and we will be good to go
there easiest way to do that should be
there easiest way to do that should be
to
to
just from here
let's see what this
does okay we get some failed to open
does okay we get some failed to open
file stuff that's
file stuff that's
fine we just have to change this up so
fine we just have to change this up so
that we are
loading right we just have to change
loading right we just have to change
this up a little
bit I'm trying to think
bit I'm trying to think
how we should go about doing
this this is definitely the thing to do
this this is definitely the thing to do
today though
okay
okay
um I'll tell you what we're going to do
um I'll tell you what we're going to do
I know I just started this but this is
I know I just started this but this is
going to be a little bit of a a little
going to be a little bit of a a little
bit of heavier work today I think so I'm
bit of heavier work today I think so I'm
going to go put the kettle on for a cup
going to go put the kettle on for a cup
of
of
coffee uh and then we're going to dive
coffee uh and then we're going to dive
into all the different stuff here and I
into all the different stuff here and I
think that if I if I'm able to just
think that if I if I'm able to just
buckle down and do this today we should
buckle down and do this today we should
be able to have something training end
be able to have something training end
to end on the C version of the Moa and
to end on the C version of the Moa and
then the project will just solve itself
then the project will just solve itself
from there I'm going to be right back
from there I'm going to be right back
give me one second
so let's do the easy parts of this first
so let's do the easy parts of this first
and then we'll do the heavier uh port
and then we'll do the heavier uh port
portions that will require some actual
portions that will require some actual
engineering thinking in a
bit so all we'll do
is I don't even think I need to do any
is I don't even think I need to do any
of this
of this
right we just comment this
client hi
client hi
Adam computer science major in my second
Adam computer science major in my second
year feel like a grasp of some things
year feel like a grasp of some things
well but when it comes to
well but when it comes to
coding mechanics or difficult technical
coding mechanics or difficult technical
stuff I freeze up and can't solve a lot
stuff I freeze up and can't solve a lot
of issues without external help you're
of issues without external help you're
over complicating things I almost
over complicating things I almost
guarantee you you're over complicating
guarantee you you're over complicating
things
things
um so one of the things that I I see a
um so one of the things that I I see a
lot of new
lot of new
programmers uh struggle with and I did a
programmers uh struggle with and I did a
lot as well for many years is like you
lot as well for many years is like you
get taught all this like object oriented
get taught all this like object oriented
like design and you get taught all these
like design and you get taught all these
like highle things that require you to
like highle things that require you to
exercise like a lot of subjective
exercise like a lot of subjective
judgment about like how to lay things
judgment about like how to lay things
out they don't tell you that there
out they don't tell you that there
there's another option which is to just
there's another option which is to just
not do any of that
not do any of that
so I will point you to the code for this
so I will point you to the code for this
project I want you to take a look at
project I want you to take a look at
like here I don't know if you've been
like here I don't know if you've been
following any of this stuff but this is
following any of this stuff but this is
what we
what we
have right now this is like a fairly
have right now this is like a fairly
substantial MOA it's ultra high
substantial MOA it's ultra high
performance engineered for reinforcement
performance engineered for reinforcement
learning it runs at like a million steps
learning it runs at like a million steps
per second it's got a bunch of unique
per second it's got a bunch of unique
characters it's like miniature version
characters it's like miniature version
of DOTA
right do
right do
this
this
uh I want you to see how simple the code
uh I want you to see how simple the code
is like yeah it's in pure SA but ignore
is like yeah it's in pure SA but ignore
that just look at how simple it's laid
that just look at how simple it's laid
out and how simply it's
out and how simply it's
[Music]
designed let me find the code it's all
designed let me find the code it's all
it's one file as
it's one file as
well MOA
well MOA
H okay like read through
H okay like read through
this let's see where I paste this yeah
this let's see where I paste this yeah
so read through this and you'll see what
so read through this and you'll see what
I mean
like you'll see what I mean by like over
like you'll see what I mean by like over
complicating stuff this is
complicating stuff this is
like you don't have to think about like
like you don't have to think about like
the right abstractions and the right way
the right abstractions and the right way
to do the stuff because there just
to do the stuff because there just
aren't
any and aside from that aside from like
any and aside from that aside from like
just not over complicating things and
just not over complicating things and
making your life harder than it needs to
making your life harder than it needs to
be uh you need to just build some stuff
be uh you need to just build some stuff
of your own that's the main thing you
of your own that's the main thing you
just need to get out there and build
just need to get out there and build
some stuff side projects are mandatory
some stuff side projects are mandatory
CS curriculum does not teach you how to
CS curriculum does not teach you how to
build stuff you need to be like doing
build stuff you need to be like doing
you know your own side projects and
things don't get too hung up with like
things don't get too hung up with like
no fancy text stacks and stuff either
no fancy text stacks and stuff either
right this freaking over complicated
right this freaking over complicated
JavaScript framework like that you know
JavaScript framework like that you know
obnoxious desktop app framework you
obnoxious desktop app framework you
don't need any of
it keep it simple
I think my mic is picking up that
I think my mic is picking up that
horrible noise um I'm hoping that that
horrible noise um I'm hoping that that
will stop at some point soon we've got a
will stop at some point soon we've got a
little bit of construction going on here
little bit of construction going on here
let me see if I can just change the
let me see if I can just change the
Noise Gate on
this I assume that it is coming
through yeah that's coming through
through yeah that's coming through
that's awful let me
that's awful let me
noise suppression hold
noise suppression hold
on what do I put on here so that this
on what do I put on here so that this
doesn't do
this noise
this noise
suppression Noise
Gate oh that solves
it you guys can tell me if that fixes it
it you guys can tell me if that fixes it
or if there's still background noise op
or if there's still background noise op
does make sense but but when I actually
does make sense but but when I actually
sit down try to get everything working
sit down try to get everything working
recoding yes exactly that's the problem
recoding yes exactly that's the problem
with oop just
with oop just
don't just stop like you're making your
don't just stop like you're making your
life hard
life hard
right I would just generally like and
right I would just generally like and
this is something I wish I'd caught on
this is something I wish I'd caught on
to a lot earlier like it's not like O is
to a lot earlier like it's not like O is
just bad or you know this way of doing
just bad or you know this way of doing
things is bad it's that the thing that's
things is bad it's that the thing that's
bad is trying to have a framework rather
bad is trying to have a framework rather
than trying to solve a problem um and
than trying to solve a problem um and
like what I generally suggest is like
like what I generally suggest is like
try to solve the problem first and add
try to solve the problem first and add
structure only when you're absolutely
structure only when you're absolutely
sure that you need
sure that you need
it so the easiest way to do that is just
it so the easiest way to do that is just
simple procedural code right you just
simple procedural code right you just
like write the thing from top to bottom
like write the thing from top to bottom
in the simplest way
possible let me see can I crank that
possible let me see can I crank that
noise gate up cuz I know it's really
noise gate up cuz I know it's really
obnoxious all the stuff in the
obnoxious all the stuff in the
background let me see if I can fix that
test
test
test
hammering
hammering
okay uh you guys can let me know if mic
okay uh you guys can let me know if mic
sounds good
sounds good
here I I'll have to talk a little bit
here I I'll have to talk a little bit
louder but uh I think it should filter
louder but uh I think it should filter
out the hammering at least when I'm not
out the hammering at least when I'm not
talking
and you're also free to just stick
and you're also free to just stick
around and like see the way that I build
around and like see the way that I build
stuff generally right I am very very
stuff generally right I am very very
slow to add structure to stuff
the other thing that I will say that's
the other thing that I will say that's
controversial is
controversial is
like you probably want to avoid like
like you probably want to avoid like
heavily functional code as much as
heavily functional code as much as
heavily object or code all like
heavily object or code all like
principle over practice
where is this
where is this
getting getting like messed up from
getting getting like messed up from
somewhere here
presumably I have
presumably I have
to I have to do something about
to I have to do something about
rendering here don't
I dip to bed understand a lot of what
I dip to bed understand a lot of what
you do but coming here and chatting
you do but coming here and chatting
sounds like yeah I mean you should not
sounds like yeah I mean you should not
be scared of like doing new stuff for
be scared of like doing new stuff for
sure
sure
um if second year like you've already
um if second year like you've already
done some stuff for brand new program I
done some stuff for brand new program I
tell them to not try to take on crazy
tell them to not try to take on crazy
ambitious progress cuz projects cuz
ambitious progress cuz projects cuz
they'll get discouraged but yeah it's
they'll get discouraged but yeah it's
second year you should be able to do
second year you should be able to do
like some medium scope
like some medium scope
stuff get used to
stuff get used to
that I will also tell you
that I will also tell you
like use GPT and stuff for learning uh I
like use GPT and stuff for learning uh I
will tell you to avoid using GPT to
will tell you to avoid using GPT to
think for you like the plague though use
think for you like the plague though use
it for docs you can use it to like try
it for docs you can use it to like try
to figure out understand why bugs are
to figure out understand why bugs are
happening and stuff but like we're just
happening and stuff but like we're just
like you know here write this function
like you know here write this function
that does this I say avoid that like the
that does this I say avoid that like the
play cuz you won't learn
anything you can see that I do use auto
anything you can see that I do use auto
complete but I use it for like single
complete but I use it for like single
line stuff I use it to save typing not
line stuff I use it to save typing not
thinking
speaking of
thinking stepping on your voice a bit
thinking stepping on your voice a bit
too much okay hold
too much okay hold
on yeah sorry about that folks
on yeah sorry about that folks
it's what can I say this is this is just
it's what can I say this is this is just
the week that I have all the maintenance
the week that I have all the maintenance
going on let me see if I can uh fix that
how's that let me know if it's still
how's that let me know if it's still
clipping
clipping
me I'll try to just talk
louder so the thing I'm having to figure
louder so the thing I'm having to figure
out here is I have this environment in C
out here is I have this environment in C
and I have a binding for python but it's
and I have a binding for python but it's
not properly fully configured yet and uh
not properly fully configured yet and uh
I want to make this thing not I want to
I want to make this thing not I want to
not add a bunch of overhead essentially
not add a bunch of overhead essentially
in the process of doing this
in the process of doing this
binding me see what it says Happening
Here interesting for some reason this
Here interesting for some reason this
like bols what about here
why does rayb get
why does rayb get
initialized where does RB get
initialized mean I have all this saved
initialized mean I have all this saved
so I can literally just cut
so I can literally just cut
out all of this stuff
right cuz this whole client has been ped
right cuz this whole client has been ped
to see
now have this exact same code but
faster maybe it's the import that loads
it oh it's also just possible that the
it oh it's also just possible that the
The Binding is bad now right
we have this binding
here
right this is the tricky thing about
right this is the tricky thing about
having to integrate uh lower level stuff
having to integrate uh lower level stuff
with
with
python and this obnoxious binding layer
python and this obnoxious binding layer
right
and this init mobile function is
and this init mobile function is
not init mobile function is probably not
not init mobile function is probably not
what we
what we
want what are we doing we're binding the
want what are we doing we're binding the
uh the Coba to the python Library so we
uh the Coba to the python Library so we
can actually train directly on the C
can actually train directly on the C
version of the code um that way we can
version of the code um that way we can
have one to one the same training
have one to one the same training
environment so this will replace the
environment so this will replace the
scyon code that we were using before for
scyon code that we were using before for
training um but we have to get a couple
training um but we have to get a couple
things right and I'm realizing now that
things right and I'm realizing now that
the way that I did this is
the way that I did this is
not the issue here is probably
that it's kind of an interesting little
that it's kind of an interesting little
uh technical
uh technical
thing the right here this is how you
thing the right here this is how you
create the environment in C and you can
create the environment in C and you can
see that I allocate a bunch of memory
see that I allocate a bunch of memory
here right uh but the thing is we don't
here right uh but the thing is we don't
necessarily want to allocate a bunch of
necessarily want to allocate a bunch of
memory
memory
because in the python version these are
because in the python version these are
buffers that get passed in from
buffers that get passed in from
python
python
so
yeah trying to think how I would like to
yeah trying to think how I would like to
make this
MOA and most of the code is going to be
MOA and most of the code is going to be
the
the
same almost all the code really it's
same almost all the code really it's
just the initialization of
buffers I suppose here that I can just
like if I just pass in the buffers as
like if I just pass in the buffers as
args and I just set them to like null or
args and I just set them to like null or
whatever right
but that's kind of
gross we'll do it like this for now I
guess wordss
really bothers me
though guess it's going to be like
though guess it's going to be like
reward star
reward star
rewards
rewards
um
um
star rewards Norm
star rewards Norm
rewards what else gets allocated
the game
the game
map that's kind of okay
right the PID map
here that's kind of okay as well isn't
here that's kind of okay as well isn't
it I think the AI paths here need to get
yeah the AI paths need to get
um they need to get
set the heck is the AI path buffer
set the heck is the AI path buffer
[Music]
for oh right yeah that's rough
for oh right yeah that's rough
so this is what I did to make it run on
so this is what I did to make it run on
web we're going to need like two
web we're going to need like two
versions of this init code
unfortunately do AI
paths if it's unsigned charar or
paths if it's unsigned charar or
whatever
there's just so much stuff that we
there's just so much stuff that we
allocate
allocate
here I almost want to just like do this
here I almost want to just like do this
right the first
right the first
time
time
yeah this is
yeah this is
tricky uh
I didn't I do this with the snake
environment I thought I did this with
environment I thought I did this with
the snake
environment how did I do
environment how did I do
it okay so I made an anip function and I
it okay so I made an anip function and I
made an allocate function right
oh yeah that's way
better yeah that's way
better so the only thing that's slightly
better so the only thing that's slightly
annoying is
annoying is
uh the amount of stuff in here but we'll
uh the amount of stuff in here but we'll
show you how we're going to do
this just
this just
copy we're going to copy most of this
function I think this is all the
function I think this is all the
allocations
right you can see how long this
is and then we'll make an allocate ver
version which also returns you the Moa
version which also returns you the Moa
like
like
this um but now this version
here basically just does the allocations
I'm understanding more the steps to Port
I'm understanding more the steps to Port
game
game
yeah yeah that's the idea here so the
yeah yeah that's the idea here so the
key portion here right is that when I
key portion here right is that when I
Dev this I want to be able to run it as
Dev this I want to be able to run it as
a c stand alone which means that you're
a c stand alone which means that you're
running one of these environments at a
running one of these environments at a
time and it's allocating all its own
time and it's allocating all its own
memory but when you bind from python
memory but when you bind from python
what's very nice is to be able to
what's very nice is to be able to
actually allocate the memory in Python
actually allocate the memory in Python
and then pass it to uh to your C code
and then pass it to uh to your C code
because then you can do stuff like give
because then you can do stuff like give
it shared buffers shared memory buffers
it shared buffers shared memory buffers
so your simulation is writing
so your simulation is writing
observations directly into shared memory
observations directly into shared memory
you can do all sorts of cool stuff and
you can do all sorts of cool stuff and
the only thing that you have to do for
the only thing that you have to do for
that is you just have to have a version
that is you just have to have a version
of your make function that says here use
of your make function that says here use
this memory as your buffers instead of
this memory as your buffers instead of
allocating it yourself so the allocate
allocating it yourself so the allocate
version is what's going to be called
version is what's going to be called
from C uh and that's what's going to be
from C uh and that's what's going to be
you know doing all these calex the Alex
you know doing all these calex the Alex
uh and then there's an init function
uh and then there's an init function
where if we're calling from python we'll
where if we're calling from python we'll
just call the init and we'll pass all
just call the init and we'll pass all
the buffers that we've allocated from
Python and what I was sort of hesitating
Python and what I was sort of hesitating
there over for a little bit was just
there over for a little bit was just
trying to figure out you know nice ways
trying to figure out you know nice ways
of doing all that of course the one
of doing all that of course the one
thing that's really gross is that you do
thing that's really gross is that you do
end up with these giant function
end up with these giant function
signatures but um I haven't found a good
signatures but um I haven't found a good
way around that
like it's kind of dumb to make a struct
like it's kind of dumb to make a struct
MOA args just to get around function
MOA args just to get around function
signatures
right and speaking of porting stuff
right and speaking of porting stuff
here's a little bit of incentive for
here's a little bit of incentive for
people who are thinking about um adding
people who are thinking about um adding
uh like making games and like porting
uh like making games and like porting
stuff for Puffer
stuff for Puffer
this exists now we actually have a
this exists now we actually have a
showcase site where we're going to be
showcase site where we're going to be
adding a whole bunch of M's including
adding a whole bunch of M's including
ones that have been contributed by
ones that have been contributed by
people we're going to have all these
people we're going to have all these
things playable online now now you can
things playable online now now you can
just click around and like yeah here I'm
just click around and like yeah here I'm
just playing the Moa now
just playing the Moa now
right or now I'm playing snake right
right or now I'm playing snake right
really
easy probably just put one of these in
easy probably just put one of these in
the background so people will have some
the background so people will have some
reference for what I'm doing
reference for what I'm doing
[Music]
[Music]
here here you know what we'll like we'll
here here you know what we'll like we'll
kind of like thumbnail bait just a
kind of like thumbnail bait just a
little
little
bit we'll go like this and then I'll
bit we'll go like this and then I'll
like I'll put us up here and then I'll
like I'll put us up here and then I'll
go like this behind my camera
think I use this original grid thing do
think I use this original grid thing do
I I don't think I need it
either
either
right yeah no I don't need this
that's actually an efficiency
that's actually an efficiency
optimization I've made is no longer
optimization I've made is no longer
needing to copy the whole map every time
needing to copy the whole map every time
you reset the
you reset the
end so these are allocated
end so these are allocated
now what about the
now what about the
map I don't need to allocate the map
map I don't need to allocate the map
itself here do
I um
um I think this can go inside of a
net this can go inside
net this can go inside
of uh this can go inside of a
of uh this can go inside of a
net get rid of
this m
this m
withd right
withd right
well yeah we'll just do like that
well yeah we'll just do like that
don't need
don't need
this don't need
this don't need
this oh wait no we do need this
this oh wait no we do need this
right yeah we need all this
stuff actually hold on do we need this
stuff actually hold on do we need this
pit stuff
pit stuff
here yeah we do what am I talking
about yeah cuz if we're not okay yeah we
about yeah cuz if we're not okay yeah we
do need
do need
this e
and then we have these buffers
here or we can just leave this like
so these pre-compute versions
we need
we need
this now we shouldn't need these
because need
because need
this zero outs scanned
this zero outs scanned
targets they should go
into yeah this should go into the inet
the observation map to get initialized
the observation map to get initialized
here all this stuff is
valid what about the
RNG 10
RNG 10
kilobytes do I care about 10
kilobytes do I care about 10
kilobytes no I
kilobytes no I
don't I don't need to pre-allocate this
don't I don't need to pre-allocate this
here
right okay so this is all of the
right okay so this is all of the
stuff uh that we want to
stuff uh that we want to
have only be allocated if we're going to
have only be allocated if we're going to
call the C version of the environment so
call the C version of the environment so
all these things are going to get passed
all these things are going to get passed
in from python if we're making the
in from python if we're making the
environment from python all these memory
environment from python all these memory
buffers but if we calling from C we need
buffers but if we calling from C we need
to make them
to make them
ourselves now what we do is we call init
mooba we also don't need this one
here this actually just
here this actually just
be W star rewards like this
you have all these
things then they get passed in
now we just go from top to bottom right
now we just go from top to bottom right
so this is
so this is
rewards some
rewards some
rewards HDs AI path pass
buffer pass buffer thing is a little
weird I think of it
how big is
how big is
that and a
large but we'll do it like that for
now extra action entities perfect so now
now extra action entities perfect so now
we get to the actual signature
we get to the actual signature
is all this additional
is all this additional
stuff weit
stuff weit
MOA return
MOA return
it there you
it there you
go there's your
go there's your
allocation and then all we do is we
allocation and then all we do is we
modify to modify the signature up
top we do end up with a couple chunky
top we do end up with a couple chunky
signatures but that's basically the only
signatures but that's basically the only
price of doing this
which is a very I think that's a very
which is a very I think that's a very
reasonable uh a very reasonable price
right see whether this got all the types
right see whether this got all the types
right or not or whether I get burned for
right or not or whether I get burned for
accepting the
accepting the
autogen probably I do
autogen probably I do
but
but
now the cool thing is going to be that
now the cool thing is going to be that
we no longer have to
we no longer have to
do the alic is just
rewards
rewards
WS
WS
it's to make sure that we're actually
it's to make sure that we're actually
copying the right stuff so the norm
copying the right stuff so the norm
rewards pids then AI
paths
paths buffer like
this we don't need these reset things
this we don't need these reset things
these uh these Setters here
no longer care about these right you
no longer care about these right you
already have
these leave these
these leave these
L we still
L we still
zero now this is observations
zero now this is observations
map very
map very
simple RNG still gets allocated
yeah so just like that we now should
yeah so just like that we now should
have two different
have two different
functions now of course we uh the one
functions now of course we uh the one
slightly obnoxious thing right when you
slightly obnoxious thing right when you
do it this way you have to do free
do it this way you have to do free
MOA and then you have to do preallocated
MOA and then you have to do preallocated
oh
oh
right
right
really all this stuff goes into free
allocated see what's not actually
allocated see what's not actually
allocated
allocated
so allocated
you have to just cut these things
you have to just cut these things
out
map need two different freze
map need two different freze
unfortunately one for if you construct
unfortunately one for if you construct
from C and then one from you construct
from C and then one from you construct
from python because if you construct
from python because if you construct
from python you're not going to free
from python you're not going to free
python buffers from
C that should be fine for
that and now what I will
do nice trick so we're doing uh we're
do nice trick so we're doing uh we're
doing this for the python code but I'm
doing this for the python code but I'm
going to build it from C because I have
going to build it from C because I have
better faster compilation and better
better faster compilation and better
debugging
debugging
here or C I can get the initial errors
here or C I can get the initial errors
out from here
I don't know what this first one
I don't know what this first one
is why does it not like
this oh I just have a typo
hi Joseph guy from Discord having issues
hi Joseph guy from Discord having issues
with puffer you're working on MOBA oh
with puffer you're working on MOBA oh
that's fine no no no you're you're
that's fine no no no you're you're
allowed to ask random stuff on uh on
allowed to ask random stuff on uh on
stream that's kind of the point right is
stream that's kind of the point right is
that it doubles as
that it doubles as
support uh were you asking about were
support uh were you asking about were
you the one asking about um
you the one asking about um
DMC by any chance
part of the point of streaming in the
part of the point of streaming in the
first place is to help all the puffer
users and this now builds
I am amazed that this actually appears
I am amazed that this actually appears
to work on the first
try we leaked a lot of memory though
try we leaked a lot of memory though
didn't we
didn't we
because this needs to be free Al
MOA perfect these memory leaks are uh
MOA perfect these memory leaks are uh
internal system stuff this is the
internal system stuff this is the
normal so we're good now we can work on
normal so we're good now we can work on
this binding me go get that guy back I
this binding me go get that guy back I
think he just like open stream type that
think he just like open stream type that
and close stream
oh no here he's here
oh no here he's here
cool um I think YouTube ate one of your
cool um I think YouTube ate one of your
messages
messages
here let me uh let me you can type stuff
here let me uh let me you can type stuff
in the Discord it won't censor you and
in the Discord it won't censor you and
I'll respond live that's usually the
I'll respond live that's usually the
easiest if you want lower latency as
easiest if you want lower latency as
well it's jars 5341 on Twitch twitch
well it's jars 5341 on Twitch twitch
streams with lower delay um if that's
streams with lower delay um if that's
easier either way I'll help
name space no attribute batch
rows well I'll I'll reply live here
rows well I'll I'll reply live here
right because I can give you a better
right because I can give you a better
response than just via typing because I
response than just via typing because I
can try stuff out live for you but like
can try stuff out live for you but like
if you just type there won't be a delay
if you just type there won't be a delay
and you won't get censored by the
and you won't get censored by the
YouTube chat but yeah leave stream open
YouTube chat but yeah leave stream open
I'll put this
I'll put this
uh okay here I
uh okay here I
see H okay so you're trying the SP sp3
see H okay so you're trying the SP sp3
okay but you weren't just trying sp sp3
okay but you weren't just trying sp sp3
Let me see
well that's not good now is
well that's not good now is
it looks like I made uh some bug here
it looks like I made uh some bug here
hold
on was this what you got or did you get
on was this what you got or did you get
a different error
different error okay let me get to this
different error okay let me get to this
to see if we well this is training now
to see if we well this is training now
are you on the master Branch or
are you on the master Branch or
Dev put this on the side are you on a
Dev put this on the side are you on a
master or
master or
Dev other questions yeah I'll answer
Dev other questions yeah I'll answer
I'll answer everything you got here this
I'll answer everything you got here this
is the point of me doing this stuff
is the point of me doing this stuff
live master I think okay
uh let me think how I do
uh let me think how I do
this let me just make sure I commit
stuff I'm going to just open I'm going
stuff I'm going to just open I'm going
to make a different a different clone of
to make a different a different clone of
popper so I don't have to mess with
popper so I don't have to mess with
Branch stuff hold on
main should be stable so if you're
main should be stable so if you're
having errors on Main that don't involve
having errors on Main that don't involve
a Dev feature then I will fix them right
a Dev feature then I will fix them right
if the error is like yeah it's just the
if the error is like yeah it's just the
feature is not there yet then I don't
feature is not there yet then I don't
fix that on Main but uh if like
fix that on Main but uh if like
something is something standard doesn't
something is something standard doesn't
work on Main it
should e
right so training works on Main single
core if it
core if it
works
multicore okay so training does seem to
multicore okay so training does seem to
work did you try uh the clean RL one or
work did you try uh the clean RL one or
do you really want to use the SP sp3 one
do you really want to use the SP sp3 one
cuz I'll help you if you want to use the
cuz I'll help you if you want to use the
SP sp3 back end but I am warning you
SP sp3 back end but I am warning you
that like uh typically our vanilla demos
that like uh typically our vanilla demos
like our demos are dramatically faster
like our demos are dramatically faster
than uh stable Bas L 3 I'll help you
than uh stable Bas L 3 I'll help you
with it I'll help you get SP sp3 working
with it I'll help you get SP sp3 working
though if you
prefer I mean we say that we have the
prefer I mean we say that we have the
integration so
CLE
CLE
works3 used to it if you recommend yeah
works3 used to it if you recommend yeah
I highly highly recommend um so for
I highly highly recommend um so for
context here puffer is incredibly easy
context here puffer is incredibly easy
to use with vanilla clean RL if you just
to use with vanilla clean RL if you just
want like our environments and our
want like our environments and our
vectorization it's out of the box um
vectorization it's out of the box um
it'll work if you want even faster with
it'll work if you want even faster with
more logging and like hyperparameter
more logging and like hyperparameter
tuning and stuff that's what our demo
tuning and stuff that's what our demo
file is for cuz our demo file is built
file is for cuz our demo file is built
on top of clean RL and it has a whole
on top of clean RL and it has a whole
bunch of additional optimizations and
bunch of additional optimizations and
stuff um so you're free to use either of
stuff um so you're free to use either of
those I have a lot of these things
those I have a lot of these things
they're tuned so like the demo works out
they're tuned so like the demo works out
of the box with that at least with like
of the box with that at least with like
our default back end right now I can
our default back end right now I can
looking at that error that you see that
looking at that error that you see that
I see right there I can tell you that
I see right there I can tell you that
the uh the issue is
the uh the issue is
that you have to like for sp3 you would
that you have to like for sp3 you would
have to make a custom policy uh and
have to make a custom policy uh and
you'd have to call like puffer li.
you'd have to call like puffer li.
nativized tensor or whatever on the
nativized tensor or whatever on the
observations because what puffer does is
observations because what puffer does is
when you have fancy observation spaces
when you have fancy observation spaces
it packs them into flat data buffers
it packs them into flat data buffers
because essentially like sp3 and other
because essentially like sp3 and other
Frameworks will screw up you give them
Frameworks will screw up you give them
structured data so anything that is
structured data so anything that is
structured data
structured data
we just give to you flat and then you
we just give to you flat and then you
can unpack yourself um with that
can unpack yourself um with that
function but you know with SP sp3 that
function but you know with SP sp3 that
means that you have to have like the
means that you have to have like the
custom forward function in order to do
custom forward function in order to do
that but the plus side is it means that
that but the plus side is it means that
you can use know net hack you can use
you can use know net hack you can use
nuro you can use all sorts of fancy
nuro you can use all sorts of fancy
environments with just about
anything last hold on the Wasa model is
anything last hold on the Wasa model is
meant for learning or just inference the
meant for learning or just inference the
Wasa model is for inference uh it loads
Wasa model is for inference uh it loads
trained networks from pytorch and then
trained networks from pytorch and then
it does inference in
PC and you can see that demoed online as
PC and you can see that demoed online as
well it's on puffer Dogg right now
well it's on puffer Dogg right now
though we have to retrain our models
though we have to retrain our models
I'll get deep into clean R anyways my
I'll get deep into clean R anyways my
other question is
other question is
following check out the C code by the
following check out the C code by the
way it's really like it's like 100 lines
way it's really like it's like 100 lines
for all the common layers that you would
for all the common layers that you would
need and then there a couple hundred
need and then there a couple hundred
lines convenience bindings but it's very
nice when I pulled the puffer lib I ran
nice when I pulled the puffer lib I ran
just like you did
yeah oh yeah you had issues with
yeah oh yeah you had issues with
resuming
right restart the
right restart the
train let me see about that I haven't
train let me see about that I haven't
messed with resuming recently cuz
messed with resuming recently cuz
frankly puffer is so fast that like the
frankly puffer is so fast that like the
thing just trains instant
thing just trains instant
anyways is the domain one time
anyways is the domain one time
pay it's got a renewal thing but it was
pay it's got a renewal thing but it was
cheap what do you mean is it one
cheap what do you mean is it one
like it was
cheap it was really funny cuz some
cheap it was really funny cuz some
[ __ ] tried to sell me puffer doio
[ __ ] tried to sell me puffer doio
for 15 grand so then I went and I bought
for 15 grand so then I went and I bought
puffer Ai and puffer GG for like a few
puffer Ai and puffer GG for like a few
hundreds
bucks Trad yeah so Trad checkpoint that
bucks Trad yeah so Trad checkpoint that
is that is legitimate bug let me fix
is that is legitimate bug let me fix
that for you right now uh cuz I was just
that for you right now uh cuz I was just
told this the other day that apparently
told this the other day that apparently
we're not using this correctly
yeah you're right it's not actually
yeah you're right it's not actually
called anywhere cuz was like I I broke
called anywhere cuz was like I I broke
this feature at some point nobody's
this feature at some point nobody's
asked me about it until just now but
asked me about it until just now but
let's uh let's fix that for you
X
X
byd okay so it passes ar. X ID
here
here
then it'ss called in train I
assume it's called in train
this already got a xide degenerated
this already got a xide degenerated
somewhere
I see so this thing just doesn't have a
I see so this thing just doesn't have a
good way of telling if you uh if you
good way of telling if you uh if you
want to resume at the moment I think was
want to resume at the moment I think was
the
issue e
about
this I think I have to like return
this I think I have to like return
whether you're resuming from
here lightly obnoxious
if this is
none so basically I have the function to
none so basically I have the function to
resume it's just like when I redid the
resume it's just like when I redid the
config system um apparently I I messed
config system um apparently I I messed
with the way things are done
there I'm in the right Branch right I
there I'm in the right Branch right I
hope hold on let me make
hope hold on let me make
sure yeah I am in the right brand okay
yeah okay
see if I go into
see if I go into
train see if we get
a this
okay ARG to resume is
false AR resume is
true and right there is where we're
true and right there is where we're
going to use this
by load
checkpoint
checkpoint
if
if
mars.
Zoom I
no checkpoint I found found assuming no
no checkpoint I found found assuming no
experiment
experiment
okay now what we'll do is we'll just do
okay now what we'll do is we'll just do
track run and experiment for a minute
track run and experiment for a minute
and then I'll see if I can load from it
for what it's worth clean RL like
for what it's worth clean RL like
Vanilla Clean RL does not have
Vanilla Clean RL does not have
checkpointing by default we had to add
this you can see though that this is
this you can see though that this is
currently running at 10K steps per
currently running at 10K steps per
second on my like really old
second on my like really old
desktop um it should be much faster than
desktop um it should be much faster than
that in fact if you tune like batch
that in fact if you tune like batch
sizes and
stuff I remember we can run the
stuff I remember we can run the
environment itself at like
200k good
200k good
desktop I mean but regardless you know
desktop I mean but regardless you know
two minutes for your million step
experiment funny enough is this is mini
experiment funny enough is this is mini
grid right really simple and our MOBA
grid right really simple and our MOBA
this training would take like less than
this training would take like less than
two
seconds I think our batch size is bigger
seconds I think our batch size is bigger
than a
million you can see the task is being
million you can see the task is being
solved there episode return
actually if an academic lab really wants
actually if an academic lab really wants
it I will probably just end up redoing
it I will probably just end up redoing
minig grid uh in puffer relatively soon
minig grid uh in puffer relatively soon
you guys can have like a ultra high
you guys can have like a ultra high
performance version of minig grid that
performance version of minig grid that
sound
good would people like care about that
good would people like care about that
cuz if people actually use it and like
cuz if people actually use it and like
will care about it I will do that it'll
will care about it I will do that it'll
only take me a few days at most
I already have like a grid engine all I
I already have like a grid engine all I
need to do is add like the keys and
need to do is add like the keys and
doors and stuff and maybe some graphics
no attribute compiled any grid changes
no attribute compiled any grid changes
like scenarios randomly or they they're
like scenarios randomly or they they're
predefined
predefined
scenarios we could do it so that they
scenarios we could do it so that they
change randomly I mean we can pretty
change randomly I mean we can pretty
much do anything we want at this point
much do anything we want at this point
in the environment Sim Space like with
in the environment Sim Space like with
the stuff I've built now we've gone so
the stuff I've built now we've gone so
far beyond the typical like toy Ms that
far beyond the typical like toy Ms that
are used in RL that it's essentially
are used in RL that it's essentially
trivial to implement any of the existing
trivial to implement any of the existing
little grid Ms at a thousand times
little grid Ms at a thousand times
faster than they are
faster than they are
currently that's just
currently that's just
solved takes me a few days to write the
solved takes me a few days to write the
code for anything specific but that's
code for anything specific but that's
basically it
this got renamed at some point
[ __ ] there not a load that map
location oh there's no map device that's
location oh there's no map device that's
weird
see if that does something
weird ring
hey
t. load
do
is oh wait this is model
path there's something weird that I was
path there's something weird that I was
doing here let me see what it is
of model
of model
half eight
load
I forget why I did it this way been a
I forget why I did it this way been a
while since I wrote
this wandb needs to seriously like fix
this wandb needs to seriously like fix
this thing where they spam the
console fix this
okay I see I have I just have two
okay I see I have I just have two
different um model path this is fine
different um model path this is fine
this is correct
di to dict
di to dict
like
yep w b needs to not spam
console uh
but this should be loading
it should be starting from a million
it should be starting from a million
right what we'd
expect didn't need this Dash D track
expect didn't need this Dash D track
either works I think well it didn't say
either works I think well it didn't say
it said it it didn't say starting from a
it said it it didn't say starting from a
million
right oh episode yeah but it should give
right oh episode yeah but it should give
you the correct numbers we don't write
you the correct numbers we don't write
No Mediocre code around here right
No Mediocre code around here right
it should
uh so the resume State here needs to get
uh so the resume State here needs to get
applied
correctly let do
there I think that's all we
need it started out higher there
90 I don't know how often this how
90 I don't know how often this how
frequently the default
frequently the default
saves but like let's say that I uh I
saves but like let's say that I uh I
kill it
here it's not saving the
model we'll let it finish training cuz
model we'll let it finish training cuz
then it'll definitely save the model but
then it'll definitely save the model but
as you say it's it's definitely loading
as you say it's it's definitely loading
the policy it's just I want to make sure
the policy it's just I want to make sure
that you have your correct numeric
stats want to make sure that we have you
stats want to make sure that we have you
set up before I go back to the MOBA
set up before I go back to the MOBA
code and then if you have any more
code and then if you have any more
issues with this please do report them
issues with this please do report them
like this is a two-way street right I'm
like this is a two-way street right I'm
happy to help with stuff but also I need
happy to help with stuff but also I need
the user reports in order to know what
the user reports in order to know what
to fix like cuz that's the easiest way
to fix like cuz that's the easiest way
for me to improv puffer right if people
for me to improv puffer right if people
tell me hey this doesn't work then
tell me hey this doesn't work then
that's a lot easier than me just like
that's a lot easier than me just like
looking around blindly for things that
looking around blindly for things that
don't
don't
work Dev moves very fast that means I
work Dev moves very fast that means I
occasionally break things like
this CU this was a working feature
this CU this was a working feature
before one last thing yeah no worries
see what this
does I don't like that it's not um
why is it not
why is it not
saving more
stuff the trainer State should have
stuff the trainer State should have
gotten updated
go ahead and ask though I'll start
go ahead and ask though I'll start
thinking about it while I fix this
interestingly this doesn't seem to
update one pop for Crea python file
update one pop for Crea python file
creating blocks of code
okay I will I will check on that in a
okay I will I will check on that in a
second because that should definitely
work well unless there's like something
work well unless there's like something
missing at the top but I will check on
missing at the top but I will check on
that in a second let me figure out why
that in a second let me figure out why
this stage isn't getting updated for you
this stage isn't getting updated for you
first
oh this is
gross mod path
save this should go here
save this should go here
right yeah it should save even when
right yeah it should save even when
you're not doing um one
B try it like
this well I'll rerun this
this
work yeah that looks like I might have
work yeah that looks like I might have
messed with a rapper since I wrote these
messed with a rapper since I wrote these
these tutorials are so obnoxious to like
these tutorials are so obnoxious to like
because they get stuff gets outdated and
because they get stuff gets outdated and
stuff and I only know that they're like
stuff and I only know that they're like
outdated when people say Hey you know
automated test would fix this but then I
automated test would fix this but then I
have to maintain automated tests
right and at this scale it's way easier
right and at this scale it's way easier
to just fix things like this for people
okay now if I run this again
okay now if I run this again
the intended thing is it actually should
the intended thing is it actually should
refuse to
refuse to
train still not saving
train still not saving
really why is it still not
saving oh I shouldn't even have
to I see why why this was here
to I see why why this was here
right because it's supposed to
right because it's supposed to
be it's supposed to be like
this but it's not actually giving me
this but it's not actually giving me
this checkpoint message
trying to know where to start and it
trying to know where to start and it
kind of scared me yeah no it's this
kind of scared me yeah no it's this
should this should be much easier and
should this should be much easier and
this is why I provide support right
this is why I provide support right
because like I'm one person and uh I'm
because like I'm one person and uh I'm
usually quite busy developing all sorts
usually quite busy developing all sorts
of new stuff right occasionally I will
of new stuff right occasionally I will
like make little tweaks to things uh and
like make little tweaks to things uh and
I'll not realize that I've broken like
I'll not realize that I've broken like
some demo
some demo
somewhere but I think that generally
somewhere but I think that generally
like if you start playing around with
like if you start playing around with
puffer and this you know the other users
puffer and this you know the other users
can attest to this you'll find that like
can attest to this you'll find that like
things are things generally are much
things are things generally are much
easier to have working and like when
easier to have working and like when
things do break it is way easier to fix
things do break it is way easier to fix
stuff than in any other Library cuz I
stuff than in any other Library cuz I
don't have like giant Stacks and stacks
don't have like giant Stacks and stacks
and stacks of like abstracted blackbox
and stacks of like abstracted blackbox
code it's very very simple the
code it's very very simple the
implementation of
implementation of
stuff like you can actually read the
stuff like you can actually read the
entire Puffer for Liv stack end to end
entire Puffer for Liv stack end to end
in a couple of hours and have a good
in a couple of hours and have a good
understanding of exactly how puffer is
understanding of exactly how puffer is
doing everything which is not you can't
doing everything which is not you can't
say that for any other Library other
say that for any other Library other
than like clean RL which is well clean
than like clean RL which is well clean
RL doesn't do the lower level infra
RL doesn't do the lower level infra
right it just does the uh the train Loop
right it just does the uh the train Loop
but like you can go through the whole
but like you can go through the whole
lower level infra Huffer in like a
lower level infra Huffer in like a
couple of hours it's only a couple
couple of hours it's only a couple
thousand lines of code
ah so it doesn't save over here
I can get rid of this
I can get rid of this
check I don't think it's needed
yeah should not be
needed right here
all right third time's a
charm that looks to me like I messed
charm that looks to me like I messed
with one of the rappers and broke
with one of the rappers and broke
something most
something most
likely we'll
see make sure that this works for you
see make sure that this works for you
first I need puffer Li stack visualized
first I need puffer Li stack visualized
in my mind well I have a white paper I
in my mind well I have a white paper I
have the stuff on the website I have a
have the stuff on the website I have a
26 minute video going through the entire
26 minute video going through the entire
RL stack and I have a hour and a half
RL stack and I have a hour and a half
video of me reading the archive paper
video of me reading the archive paper
and giving all my thoughts on it I have
and giving all my thoughts on it I have
content out there for you
right I do have content for this
I watch it all well thank
you I'm glad to see people actually like
you I'm glad to see people actually like
getting engaged with uh know engaging
getting engaged with uh know engaging
with the library and using stuff and
with the library and using stuff and
like no it's actually it's worth making
like no it's actually it's worth making
the content right if people actually use
the content right if people actually use
it uh watch it and learn from
it let me know if there's other stuff
it let me know if there's other stuff
that would be useful to have that's like
that would be useful to have that's like
you know decently able to
make just need to put the hours
make just need to put the hours
in yeah it's probably like a good four
in yeah it's probably like a good four
hours or so to like understand
hours or so to like understand
everything but that's more than you even
everything but that's more than you even
need to start using it right that's like
need to start using it right that's like
4 hours to understand the entire
4 hours to understand the entire
architecture of a library and also like
architecture of a library and also like
my plans on exactly what I'm doing with
my plans on exactly what I'm doing with
the whole future of RL should be pretty
the whole future of RL should be pretty
good okay so this is actually the
good okay so this is actually the
correct
correct
uh this is the intended Behavior here
uh this is the intended Behavior here
because it just should it should refuse
because it just should it should refuse
to train because it's done with the
to train because it's done with the
training steps so if I just open real
training steps so if I just open real
quick config
quick config
yaml where is it config
yaml where is it config
yaml and I just increase this to
2 you can see now it'll keep training
2 you can see now it'll keep training
right I fixed it for you
I'm going to push
this really liked the section that on
this really liked the section that on
Academia finishing PhD and can't talk
Academia finishing PhD and can't talk
about this yeah I I know your
about this yeah I I know your
pain I went through there was much
pain I went through there was much
suffering and none of it was my
suffering and none of it was my
advisor's fault my advisor was great but
advisor's fault my advisor was great but
like you want to you if you want to have
like you want to you if you want to have
a fun time I I should show the uh I
a fun time I I should show the uh I
should post the puffer lib paper reviews
should post the puffer lib paper reviews
like this is like a thousand star
like this is like a thousand star
insanely fast growing project with
insanely fast growing project with
full-time support and I got one of the
full-time support and I got one of the
reviewers said that it would be damaging
reviewers said that it would be damaging
to The credibility of nurs as a venue to
to The credibility of nurs as a venue to
publish puffer lip how's that is a thank
publish puffer lip how's that is a thank
you for doing uh know free full-time
you for doing uh know free full-time
open source work for the community
open source work for the community
right [ __ ]
[ __ ] like what
is going to be real damaging to the uh
is going to be real damaging to the uh
credibility of nurs as a conference when
credibility of nurs as a conference when
like puffer gets even bigger and this
like puffer gets even bigger and this
review is on her own page it's like
well I am that petty I will put it on
well I am that petty I will put it on
the front page after uh the deadline for
the front page after uh the deadline for
first
stuff all right I'm going to push this
stuff all right I'm going to push this
to main uh but you're going to have to
to main uh but you're going to have to
make me a deal okay I'm going to put
make me a deal okay I'm going to put
this I'm going to push this to main I
this I'm going to push this to main I
have not tested all the M's and stuff so
have not tested all the M's and stuff so
if you get any weird bugs with loading
if you get any weird bugs with loading
or you get weird training bugs that mean
or you get weird training bugs that mean
I probably broke something else really
I probably broke something else really
important by pushing this to main for
important by pushing this to main for
you you have to tell me that's the deal
you you have to tell me that's the deal
okay can we agree to
that I'll push this to main right now if
that I'll push this to main right now if
you're
agree okay got a
agree okay got a
deal there you go there's your fix
hey Nathan
welcome I've been looking for you you
welcome I've been looking for you you
know
know
I got uh some incentive for you to do
I got uh some incentive for you to do
some environment
work puffer
work puffer
Dogg your environment
Dogg your environment
here click
here click
Play Click play loads
Play Click play loads
instantly runs neural nuts and browser
instantly runs neural nuts and browser
now capable of running Comet lstm
now capable of running Comet lstm
policies in browser too
you can do all
this let me just make sure that that
this let me just make sure that that
wasn't a problem hold on I'll be back in
wasn't a problem hold on I'll be back in
one minute
guys
e
e
e e
all
all
[Music]
[Music]
right hey
folks trying to understand paper right
folks trying to understand paper right
now so I'll get to anything that's
now so I'll get to anything that's
broken perfect and I can also remove
broken perfect and I can also remove
this noise filter now and talk
this noise filter now and talk
normally because the maintenance for the
normally because the maintenance for the
day is done
yeah there we go
cool perfect
if those are the questions for now then
if those are the questions for now then
I I'll get back to the MOBA stuff for
I I'll get back to the MOBA stuff for
the time
being ping me on the YouTube chat or
being ping me on the YouTube chat or
whatever if I missed up but I'll try to
whatever if I missed up but I'll try to
put this window up
here all
right
for for
okay let me remember what the heck we
okay let me remember what the heck we
were doing here right we were fixing the
were doing here right we were fixing the
python
python
bindings
so it's going to have to rebuild all the
so it's going to have to rebuild all the
scon stuff uh what we were doing now is
scon stuff uh what we were doing now is
we were taking the C implementation
we were taking the C implementation
of the Moa environment and where we were
of the Moa environment and where we were
adding a code Pathway to bind it to the
adding a code Pathway to bind it to the
python uh the python hooks for puffer so
python uh the python hooks for puffer so
that we can train directly on the C
that we can train directly on the C
version of the environment and then once
version of the environment and then once
we retrain
we retrain
correctly we will
correctly we will
um well we will be able to take
um well we will be able to take
the the new policies and put them
the the new policies and put them
directly onto the C version of the MOBA
directly onto the C version of the MOBA
and then it'll be trained and evaluated
and then it'll be trained and evaluated
in the same version of the environment
in the same version of the environment
so it won't get stuck on walls and do
so it won't get stuck on walls and do
weird things like it's happening
now I have a quick question yeah no
now I have a quick question yeah no
worries uh okay I did not miss a Discord
worries uh okay I did not miss a Discord
thing
sure speaking of which if you're in a
sure speaking of which if you're in a
lab that does a bunch of RL like we do
lab that does a bunch of RL like we do
provide extend support for free to
provide extend support for free to
academic Labs so that's a
academic Labs so that's a
thing I understand that the syon M are
thing I understand that the syon M are
much faster and it's easier to build one
much faster and it's easier to build one
with all that you've done as you
with all that you've done as you
mentioned with rebuilding minig grid
y I assume the question is coming
y I assume the question is coming
next I plan to use puffer with an
next I plan to use puffer with an
environment using Unreal or RL in games
environment using Unreal or RL in games
sure you can do that
gymnasium environment using puffers
gymnasium environment using puffers
gymnasium rapper yep that's
fine do you recommend something
fine do you recommend something
else uh I mean there really
else uh I mean there really
isn't there really aren't great tools uh
isn't there really aren't great tools uh
outside of that uh as far as I'm aware
outside of that uh as far as I'm aware
not open sourced at least so yeah if the
not open sourced at least so yeah if the
easiest way is going to be to just have
easiest way is going to be to just have
something that exports uh state right if
something that exports uh state right if
you can get the game to if you can run
you can get the game to if you can run
the game headless and get it to export
the game headless and get it to export
local state into like a reasonable
local state into like a reasonable
observation space right and then just
observation space right and then just
like ideally for train time if you can
like ideally for train time if you can
just like cut down on any portions of
just like cut down on any portions of
the game computation that are really
the game computation that are really
slow but uh are completely irrelevant to
slow but uh are completely irrelevant to
training right you know maybe you have
training right you know maybe you have
just like some extra stuff for visuals
just like some extra stuff for visuals
or whatever some pre-computation or like
or whatever some pre-computation or like
some some uh non pre visual stuff like
some some uh non pre visual stuff like
anything you can cut down to make the
anything you can cut down to make the
environment really fast is going to be
environment really fast is going to be
helpful to you but yeah you can just use
helpful to you but yeah you can just use
puffer gymnasium wrapper for uh for sure
puffer gymnasium wrapper for uh for sure
like we have this Advanced API that I
like we have this Advanced API that I
use for uh the sea environments but
use for uh the sea environments but
that's only relevant when your
that's only relevant when your
environment gets to be really really
environment gets to be really really
fast if you're not running it at like
fast if you're not running it at like
you know well into the tens of thousands
you know well into the tens of thousands
of steps per second you can just use the
of steps per second you can just use the
gymnasium wrapper and there's going to
gymnasium wrapper and there's going to
be zero noticeable overhead
that's what it is there for right that
that's what it is there for right that
is what it is there
for hold
on let me just double
check okay so yeah this is still
check okay so yeah this is still
academic work you're
good can continue discovery of puffer
good can continue discovery of puffer
tomorrow sure thanks for dropping
[Music]
by seg
by seg
fault right let's see why this thing
fault right let's see why this thing
segals probably wrong dimensions of
something
for e
oh wow we got a lot of YouTube folks
oh wow we got a lot of YouTube folks
welcome everyone
why is this thing seg fating doesn't seg
why is this thing seg fating doesn't seg
fault when we run it in pure
C well this function is totally
C well this function is totally
wrong oh that's so gross it just segals
wrong oh that's so gross it just segals
if you have the function with the wrong
if you have the function with the wrong
definition I guess
definition I guess
instead of giving you a reasonable error
instead of giving you a reasonable error
message that's
disgusting no the C is fine the python
disgusting no the C is fine the python
is fine it's the bindings when you go
is fine it's the bindings when you go
between the two of them that's really
between the two of them that's really
obnoxious every time
obnoxious every time
every
time but I think all I have to do is
time but I think all I have to do is
grab this function signature which we've
grab this function signature which we've
tested in
C and now this has to go here
right so now we have our uh our full
right so now we have our uh our full
signature and then
we have to make sure that we're matching
we have to make sure that we're matching
this as
this as
all though really this should not
all though really this should not
seg maybe just seg fed because I didn't
seg maybe just seg fed because I didn't
Define the uh the Prototype correctly
I see the way that these are being
I see the way that these are being
assigned is not good
assigned is not good
either now that I'm looking at this
here yeah I think that we need to like
here yeah I think that we need to like
do this like one
line oh that's not bad
data then we don't need any of this
anymore this is just s.
end so that's actually much nicer like
end so that's actually much nicer like
yeah the uh the signatures are gross but
yeah the uh the signatures are gross but
you can clearly see this is just like
you can clearly see this is just like
passing a bunch of data to the
passing a bunch of data to the
underlying in
net that should not have compiled that
net that should not have compiled that
quickly I can only assume it's um not
quickly I can only assume it's um not
compiling the correct
stuff ah right
stuff ah right
here for
and then it just needs AI path
and then it just needs AI path
buffer this was something that we
added really shouldn't need this
technically We'll add it just in case I
technically We'll add it just in case I
guess really shouldn't be necessary
guess really shouldn't be necessary
though
but this is
but this is
good and then we have to to
pass this to the inet
okay
okay
and can't include
R.H
R.H
right I remember this being a pain
do I have to just set this in LD Library
do I have to just set this in LD Library
path
and that's really obnoxious that it
and that's really obnoxious that it
can't find
um the
um the
RB
code I thought I'd messed with this
code I thought I'd messed with this
before and I'd found a good way around
before and I'd found a good way around
this didn't I
when I was doing like the sea snake
when I was doing like the sea snake
stuff I do
this or did I
not include D
not include D
here hang on maybe I can add it to
here and I do like
rayb do
that
that
ooh that works
interesting it says that it finds
it does it need to have a is there an
additional there might be an additional
additional there might be an additional
include let's look at setup pi
Library
D what if I do
this still
no well it didn't re it didn't trigger a
no well it didn't re it didn't trigger a
rebuild right
it's just copying though
see if this actually reg yeah this so
see if this actually reg yeah this so
This
This
rebuilds do I
see I rib okay I see the include here
right yeah I see the
include but I don't see SL
include but I don't see SL
lib
lib
wait there should be a slash lib here
oh wait wait maybe this is the one that
oh wait wait maybe this is the one that
needs the run time okay hold on I have
needs the run time okay hold on I have
an
an
idea yeah so this this one needs LD
idea yeah so this this one needs LD
Library half equal
Library half equal
RB
RB
right still
right still
no could have sworn that would work
it's got to be some way of building
this and no chat
this and no chat
jity chat jippy
time I don't freaking know maybe this
time I don't freaking know maybe this
will maybe this will have a summary of
will maybe this will have a summary of
docks
see include for
yeah so Library dur is what I
expected maybe you need this libraries
expected maybe you need this libraries
flag
does that do
anything kind of weird that you
would but sure why not we'll uh we'll
would but sure why not we'll uh we'll
try
try
it each element in libraries must be a
it each element in libraries must be a
twole what
huh it just said like yeah this aor
huh it just said like yeah this aor
shouldn't be there
okay so they're just like there a bunch
okay so they're just like there a bunch
of annoying Flags apparently
here each element of Library should be a
here each element of Library should be a
twole okay set up. P do
wow look at this this sample project
wow look at this this sample project
doesn't include all of the
doesn't include all of the
stuff that you would actually need
this is not
it extension
modules includers
oh I guess it's
oh I guess it's
uh no I have it
uh no I have it
correct what the hell is this this is
correct what the hell is this this is
like not the same as the
like not the same as the
docks I mean this extra compile zard
docks I mean this extra compile zard
thing doesn't exist right
Library
Library
dur unknown distribution
dur unknown distribution
option this is an option in
extensions I see so this is
not do I really need to use this
not do I really need to use this
extensions thing
everything gets dice here if I have to
everything gets dice here if I have to
um use the like the official like the
um use the like the official like the
extension thing because it starts moving
extension thing because it starts moving
your build files to dumb places
maybe it's in scon I
where's the docks for this
where's the docks for this
function why are there no docks
for so this is what we want
for so this is what we want
here I guess we have to do it this way
but it's very obnoxious because I'll
but it's very obnoxious because I'll
show you what happens
I do not know why it does
but literally like why don't they have
but literally like why don't they have
docks for this stuff like why is it so
docks for this stuff like why is it so
hard to find the
hard to find the
docks for
extensions Bo
okay here it
okay here it
is
name not a file name but a python dotted
name not a file name but a python dotted
name okay
and then it says that we don't
and then it says that we don't
need says we can't use this right it's
fine
o error opening
o error opening
file message file or directory but we
file message file or directory but we
actually got
somewhere now seg faults
so is this now um is this a path error
is this going to be a path error
here don't we load stuff here
I guess these are like these paths are
I guess these are like these paths are
done properly Maybe
maybe we have the reset args
wrong no the reset looks good
I mean there are only so many places
I mean there are only so many places
that can go wrong
right we can just go like
right we can just go like
this it would be really nice actually if
this it would be really nice actually if
we could compile hold on instead of
we could compile hold on instead of
doing this Jank stuff here
doing this Jank stuff here
right I have one
idea is there a way to pass compile
Flags oh wait but it compiles with GCC
it looks like we can do
it looks like we can do
it extra compile arcs
right what if we do it like
this dasf sanitizer dress
does this actually tell us now where SE
does this actually tell us now where SE
bolts
are that would be nice
why is this taking so
why is this taking so
long oh jeez cuz it's going to run the
long oh jeez cuz it's going to run the
address sanitizer
address sanitizer
on it's going to run the address
on it's going to run the address
sanitizer on the scon file right
that's not what we
want oh it did
want oh it did
build I think it did
build I think it did
build so let's let's see if it at least
build so let's let's see if it at least
does something for us now
what
is obnoxious
scon let's see if anybody's done
this oh yeah literally here's our exact
thing e
let's see so this is they have extra
let's see so this is they have extra
link
ARS well maybe they have extra link CS
ARS well maybe they have extra link CS
let's see if this is
real and let's see if it's actually
real and let's see if it's actually
going to take forever to compile
going to take forever to compile
still because that's really
obnoxious I mean what's the alternative
obnoxious I mean what's the alternative
to this though
to this though
right it's obnoxious how much code syon
generates I don't know
shared
shared
leisan I think we might not need this
leisan I think we might not need this
one I think they said that you just
one I think they said that you just
need F share to dress
need F share to dress
maybe these compile times are just God
maybe these compile times are just God
awful
awful
though I mean at least I do all the
though I mean at least I do all the
debugging for the most part in C
at least maybe this will actually give
at least maybe this will actually give
me
something as soon as we fix this
something as soon as we fix this
compilation stuff I'm sure that the um
compilation stuff I'm sure that the um
the actual like python binding is going
the actual like python binding is going
to be very very
to be very very
simple for
not this where did the where did the
not this where did the where did the
other one
go this is compiled
go this is compiled
time for
is there no simpler way to do this
I just do this
I just do this does it do it I doubt
it
it
yeah oh I have to do
export
export
oh that does
oh that does
something hold on that actually did
something hold on that actually did
something
oh the M the leaks are in the freaking
oh the M the leaks are in the freaking
alligator itself what the heck
yeah no this is trying to run it on the
yeah no this is trying to run it on the
entire program let's not do
entire program let's not do
this let's just not do
this let's just not do
this unfortunately this is like too slow
this unfortunately this is like too slow
and too clunky to deal with doing it
and too clunky to deal with doing it
this way
we'll just do normal
build and we'll do some
build and we'll do some
prints sadly that's going to be the
prints sadly that's going to be the
easiest way of doing it with um how
easiest way of doing it with um how
obnoxious the uh buffer bindings or the
obnoxious the uh buffer bindings or the
the python bindings are
we'll just go to reset here and we'll
we'll just go to reset here and we'll
just add some print outs
okay perfect
okay perfect
so we get a resetting
so we get a resetting
towers and then it fails in res setting
towers and then it fails in res setting
Towers interesting
so what do we pass for
entities we do pass entities
right do we pass these in the uh in this
right do we pass these in the uh in this
order
though maybe we don't pass the buffers
though maybe we don't pass the buffers
in the right order
grid AI paths AI path
grid AI paths AI path
buffer pids
entities entity
entities entity
data
OBS
OBS
map
map
extra or summer of wordss
extra or summer of wordss
Norm
Norm
actions that looks good to me
so why would this be the
case let's see if we can find anything
200 by
206 yeah that's correct
just put some more
prints essentially what I think is
prints essentially what I think is
happening here is uh one of the
happening here is uh one of the
variables is not the size that I think
variables is not the size that I think
it
is okay address
and then grid here is not good
and then grid here is not good
right the grid is not good yes this is
right the grid is not good yes this is
what
happens and then the address here
is
14370 that's a valid
address power
address power
one
F oh yeah that's fine so this is
F oh yeah that's fine so this is
correct and
correct and
then the issue looks like it's with the
then the issue looks like it's with the
map
map
grid so why would there be an issue with
grid so why would there be an issue with
the map
the map
grid let us see
the map grid gets read from
file I bet you the path is
wrong
right I'm going to paste the hard I'm
right I'm going to paste the hard I'm
going to hard code the path for now just
going to hard code the path for now just
to see
to see
to
confirm and
confirm and
uh actually you know what the easiest
uh actually you know what the easiest
way to do
way to do
this is to
just
just
if is there an exit there's no exit like
if is there an exit there's no exit like
this and see is
this and see is
there turn
there turn
one right
program is there an exit thing oh there
program is there an exit thing oh there
is an
exit there is an exit
function is it one
build the load game
build the load game
map ah and we actually have error
map ah and we actually have error
opening
file kind of silly how that happens
that's
gross yeah that's gross
it's 16,000
it's 16,000
characters how much is
that that's a lot right yeah that would
that that's a lot right yeah that would
be2 200 lines I don't want to just paste
be2 200 lines I don't want to just paste
that into the
that into the
file but like do don't
file but like do don't
I imagine that I just pasted all that
I imagine that I just pasted all that
data into the
data into the
file and then I never have to worry
file and then I never have to worry
about this path
issue I think what we'll do is for now
issue I think what we'll do is for now
we'll just put the absolute path or
we'll just put the absolute path or
whatever but the thing is like I know
whatever but the thing is like I know
it's going to mess up
it's going to mess up
I know this is going to mess stuff
up wait you can just Tash include it
up wait you can just Tash include it
right
yeah for
not doing
this
xxd that's funny
oh that's so funny
this is a
this is a
thing look at that that's freaking
hilarious yeah look at
hilarious yeah look at
that that's so
funny for
G that's really so
G that's really so
funny let's see do you think this
funny let's see do you think this
actually
actually
works that's like kind of hilarious if
works that's like kind of hilarious if
you think about it
you just convert the map data like
this I mean on a scale of stupid to very
this I mean on a scale of stupid to very
stupid I think that this is only like
stupid I think that this is only like
somewhat
[Applause]
[Applause]
stupid and in fact what we can do what
stupid and in fact what we can do what
we'll probably do is we'll take all
we'll probably do is we'll take all
these constants that are at the top and
these constants that are at the top and
we'll like figure out how to get them
we'll like figure out how to get them
into one file eventually for
this is I just I just have to specify
this is I just I just have to specify
the extra source file
right presumably
really build
now
for e
need to add it to sources
maybe is it game data NP or
numpy sure I'm not being dumb
just gam m.h I'm just being dumb right
game
game
map that age like this
oh that just
oh that just
works I don't need to do
anything look at
anything look at
that works
now
now
oops now we can get rid of all these
oops now we can get rid of all these
garbage prints
[Applause]
[Applause]
right it's kind of funny just to include
right it's kind of funny just to include
the uh the constants or whatever
randomized Tower
HP do I need to call
HP do I need to call
this hold
on yeah so I do need to call this I
on yeah so I do need to call this I
believe all I have to do this is easy
believe all I have to do this is easy
though this is what syon is
though this is what syon is
for this is very very
easy all I have to do is add the
easy all I have to do is add the
signature of the exposed method
here like
this and then I should be able to use
this and then I should be able to use
this method from
this method from
syon uh do I have to I think I have to
syon uh do I have to I think I have to
Define it here as well technically
Define it here as well technically
technically
technically
right maybe not I might just be able to
right maybe not I might just be able to
do
do
this let me
see I might have to add like a
see I might have to add like a
little yeah I might have to add a little
little yeah I might have to add a little
binding here so because it's it's
uh yeah the reason I have to do this is
uh yeah the reason I have to do this is
just because it's the object oriented
just because it's the object oriented
API which frankly there's Absolut no
API which frankly there's Absolut no
reason to need it's just that like
reason to need it's just that like
python
programmers I don't know objects are
dumb not really
though I doing stuff
let's see what happens if I have it to
let's see what happens if I have it to
set till one end instead of having 200
set till one end instead of having 200
freaking
environments probably that's like
environments probably that's like
driving it
nuts there we go
nuts there we go
puffer mode but has no attribute render
puffer mode but has no attribute render
mode okay
you know what attribute okay there's no
render I guess I didn't add
render so I have to add the client here
render so I have to add the client here
then don't
I I think I have to add the client
and we have to add the
client map
client map
renderer game
renderer game
renderer just do like this
this is C type stff
then we need init game renderer
we will
we will
need render
game and we also need the
free y this
free y this
one game render
and now all I have to do is we
and now all I have to do is we
add uh game
renderer well to this environment
renderer well to this environment
really we just
really we just
add be def game renderer renderer right
add be def game renderer renderer right
and then on a knit here
and then on a knit here
we do self.
render none or null I should
render none or null I should
say and then when we do
say and then when we do
render reset step def render don't need
render reset step def render don't need
the sub
scale we do if render is null then we
scale we do if render is null then we
init it
init it
render render game S.M
frame ah
frame mildly awkward but let's see if
frame mildly awkward but let's see if
this gets us
something okay cannot convert return
something okay cannot convert return
self. renderer well we don't need
this Shader not a type identify
just have to
do well actually do I not I only
need literally I only need the uh I only
need literally I only need the uh I only
need the Prototype don't
need the Prototype don't
I hold on I think it's the case that if
I hold on I think it's the case that if
you just I think you can just literally
you just I think you can just literally
do it like
do it like
this because the thing is like I don't
this because the thing is like I don't
need to know it doesn't need to know
need to know it doesn't need to know
what that renderer
what that renderer
has right cuz I'm not actually like
has right cuz I'm not actually like
making a game renderer in
here
yeah oh Rend mode perfect I saw it it it
yeah oh Rend mode perfect I saw it it it
popped up on my other screen hold
on P
my God
yeah this is
interesting oh but this is out of bound
interesting oh but this is out of bound
stuff
okay so apparently the obser ations have
okay so apparently the obser ations have
some weird data in
them so we'll have to fix that you know
them so we'll have to fix that you know
we have a couple little bugs uh to fix
we have a couple little bugs uh to fix
delt so here's what I'm going to do I'm
delt so here's what I'm going to do I'm
going to use the restro real quick I'm
going to use the restro real quick I'm
going to take a few minutes here I got
going to take a few minutes here I got
to make myself a shake and do a couple
to make myself a shake and do a couple
of things I'll be right back and then uh
of things I'll be right back and then uh
we'll have like a good solid 3 hours in
we'll have like a good solid 3 hours in
which to try to get this thing to work
which to try to get this thing to work
and uh we'll see how fast it is as well
and uh we'll see how fast it is as well
I'm curious to see if it's fast already
I'm curious to see if it's fast already
or if I'm going to have to do similar
or if I'm going to have to do similar
optimiz ations as I did before so I'll
optimiz ations as I did before so I'll
be right
back
e
e
e
e
e
e
e
e
e
e
e
e
e e
okay okay
so why is there garbage data in
so why is there garbage data in
observations why is the garbage
observations why is the garbage
data let's see
so let me also double check this slack
so let me also double check this slack
thing
whoops let me just check this real
whoops let me just check this real
quick
messages for
all
right GPU Drive folks were like ah it's
right GPU Drive folks were like ah it's
you know three years on one sim as well
you know three years on one sim as well
seven on neural MMO
Jesus s on one
sim this shouldn't be that bad
right yeah I mean all we got to do here
right yeah I mean all we got to do here
is um see if it sets the data at any
is um see if it sets the data at any
point to something stupid
point to something stupid
right which
like oh which is right here right uh
like oh which is right here right uh
this can't be negative
one do we zero this
one do we zero this
somewhere yeah we zero this at the top
somewhere yeah we zero this at the top
so all I got to do is move this
right cuz you don't want the negative
right cuz you don't want the negative
one that'll just be zero
one that'll just be zero
right and
right and
the
the
player empty
zero
right
right
oops also is this even putting the right
oops also is this even putting the right
thing into the
thing into the
OBS it isn't right yeah it's got to be
OBS it isn't right yeah it's got to be
map grid of address this was correct to
map grid of address this was correct to
begin
begin
with but
with but
oh wait
no map grid
Adder yeah yeah yeah
Adder yeah yeah yeah
because this this should be this way I
because this this should be this way I
believe I'm pretty
sure well no wait
sure well no wait
when it should have been fine to begin
when it should have been fine to begin
with right
maybe we just do
maybe we just do
this it is rendering on the side screen
this it is rendering on the side screen
though it's just it's not rendering for
though it's just it's not rendering for
long enough for me to show you all yet
okay so
okay so
here we get Cuda
assert and we didn't trigger the
assert and we didn't trigger the
environment uh we didn't trigger the
environment uh we didn't trigger the
environment print which is weird
environment print which is weird
right
right
so I don't know let's just go look at
so I don't know let's just go look at
the data Maybe
TCH and
TCH and
then one
then one
hot if CNN
features z.
Max break point here
oops
okay there's some 255s in
here oh there's a bunch of garbage in
here oh there's a bunch of garbage in
here
here
look at
that
uh presumably these are player IDs or
uh presumably these are player IDs or
something right
empty
position grid ID radiant
dire so I don't see any
dire so I don't see any
way I don't see any way that they should
way I don't see any way that they should
be able to
be able to
be garbage
data let me see if it even makes
sense so we get zero and
sense so we get zero and
one and then yeah on the reset we're not
one and then yeah on the reset we're not
going to see Towers or creeps or
going to see Towers or creeps or
anything like
anything like
this uh we get
this uh we get
six I don't know why seven isn't
six I don't know why seven isn't
here eight
10 15 and then 34
randomly why would it be like 34
what if we do like
this this is reasonable right you can
this this is reasonable right you can
actually see kind of right that this is
actually see kind of right that this is
the centered
the centered
agent and here are some other
agent and here are some other
agents it's got It's carry here it sees
agents it's got It's carry here it sees
its teammates
right one
right one
uh this one se's
garbage why does this one see
garbage two
garbage two
again this one is now this is correct
again this one is now this is correct
right well hang
right well hang
on is this correct I don't see a
on is this correct I don't see a
centered agent on
here
garbage definitely something
weird is there like a sign issue or
weird is there like a sign issue or
something dumb
unsign Char star observations
unsign Char star observations
map unsign Char star observations map
right you
and8 and then what's
see num M's
see what happens in the reset
here 1 by 10 by 11 by 11x 4 and it's all
zero that looks correct to me
I mean could it be in the wrong
I mean could it be in the wrong
order is this like a wrong order thing
order is this like a wrong order thing
maybe
don't think
so it's also very weird to me that
so it's also very weird to me that
like you don't ever see the data being
like you don't ever see the data being
written
in e
oh wait hold
oh wait hold
on
DX plus
viz
viz
oh now this is good isn't
it 11 by 11
it 11 by 11
by4 observations map
this could also be a memory
this could also be a memory
thing which we'd be able to check for in
thing which we'd be able to check for in
purec
I'm trying to think like what this would
I'm trying to think like what this would
even
be okay wait hold on a
second I have an
second I have an
idea I have an
idea I have an
idea if I do
idea if I do
this is it still broken
Bren cuz this is the only other place
Bren cuz this is the only other place
I'm setting map data
yeah still getting all this
yeah still getting all this
garbage wait did I
garbage wait did I
recompile I don't think I recompiled did
recompile I don't think I recompiled did
I yeah I did
I yeah I did
[Music]
[Music]
okay so that doesn't
help okay what if I don't set
anything
anything
right for
well this definitely changes the
data but there's a bunch of garbage in
data but there's a bunch of garbage in
here and I'm not even setting it right
oh wait hold
oh wait hold
on
um if this is what I think it is I'm
um if this is what I think it is I'm
going to be really very quite irritable
going to be really very quite irritable
I'm going to be very very
I'm going to be very very
irritable and I think we're all going to
irritable and I think we're all going to
learn
learn
something we're going all learn
something we're going all learn
something very
something very
silly I could be wrong if I'm wrong here
silly I could be wrong if I'm wrong here
though I have no idea what the hell it
though I have no idea what the hell it
would be
yep that fixes
yep that fixes
her
her
so God how do I even explain what this
so God how do I even explain what this
mess is
mess is
so maybe I should just go to the file
so maybe I should just go to the file
and show you
okay
okay
so where the hell's the
data okay so right here was the
data okay so right here was the
problem I didn't even know that this was
problem I didn't even know that this was
remotely possible for what it's worth
so what appears to be happening here
so what appears to be happening here
right is
right is
that I split this data along the last
that I split this data along the last
axis
axis
here so basically I split the data along
here so basically I split the data along
columns and then I pass these pointers
columns and then I pass these pointers
separately into the
environment uh the issue with doing that
environment uh the issue with doing that
though is that those are actually not
though is that those are actually not
contiguous chunks of memory
so when you give it the pointer to the
so when you give it the pointer to the
map there's like some data in the first
map there's like some data in the first
row but then it's not contiguous and
row but then it's not contiguous and
then you right into the next data so by
then you right into the next data so by
setting the extra data I was overflowing
setting the extra data I was overflowing
into the map
into the map
data which is very
data which is very
silly very
silly and actually now that I'm thinking
silly and actually now that I'm thinking
about it very very difficult to avoid
properly how do you avoid
that I mean I guess technically
like I'm going to have to make
like I'm going to have to make
this just be flat buffer data right
this just be flat buffer data right
that's
irritating all right I know how to do it
irritating all right I know how to do it
it's going to be obnoxious though so I'm
it's going to be obnoxious though so I'm
going to take a quick
going to take a quick
second check a couple things finish the
second check a couple things finish the
shake and then we'll get into
that really cool to see the amount of
that really cool to see the amount of
support on this
very cool to
see so what we're essentially we're
see so what we're essentially we're
going to have to do is we're going to
going to have to do is we're going to
have to ocate just one observation
have to ocate just one observation
tensor and we're not going to be allowed
tensor and we're not going to be allowed
to slice it we're going to just have to
to slice it we're going to just have to
pass that big block of contiguous memory
pass that big block of contiguous memory
into C and then we're going to have to
into C and then we're going to have to
manage it
ourselves obnoxious veryy but um I mean
ourselves obnoxious veryy but um I mean
the cool thing with
this this means that our
this this means that our
simulation this when we run this
simulation this when we run this
distributed the C code it's going to
distributed the C code it's going to
literally from C it's going to be
literally from C it's going to be
writing data observation data directly
writing data observation data directly
into big shared memory buffers so like
into big shared memory buffers so like
you instantly have access to data from
you instantly have access to data from
all the different simulators on the main
all the different simulators on the main
process which is very very
cool it's also something that
cool it's also something that
is completely
is completely
impossible um if a simulator has not
impossible um if a simulator has not
been designed with that in mind at least
been designed with that in mind at least
to some extent like you need to have the
to some extent like you need to have the
output buffer be an argument to the
output buffer be an argument to the
program
essentially
essentially
okay 5:00 p.m. I've got two and a half
okay 5:00 p.m. I've got two and a half
hours to get this
hours to get this
done this and several other things
done this and several other things
and this is what we're going to
do self. buff.
observations goodbye
this is now just
observations cify this a little
bit yeah there we
go we have to change the signature as
go we have to change the signature as
well
this is the one downside of having
this is the one downside of having
um you know these bindings look like
um you know these bindings look like
this you do get these at least I mean I
this you do get these at least I mean I
can't even really say that this is like
can't even really say that this is like
a downside of The Binding as much as
a downside of The Binding as much as
just like this is a very fancy
just like this is a very fancy
environment that has a lot of different
environment that has a lot of different
types of fancy data in it probably by
types of fancy data in it probably by
the end of this we're going to discover
the end of this we're going to discover
that some of these are redundant we'll
that some of these are redundant we'll
be able to pair it down at least a
be able to pair it down at least a
little bit but but for now you know we
little bit but but for now you know we
do our we do our little bit of
do our we do our little bit of
formatting here and
there there so we got rid of the
there there so we got rid of the
OBS now here this is just observations.
OBS now here this is just observations.
data no longer need
this and we are going to now be fully
this and we are going to now be fully
responsible for managing this giant
responsible for managing this giant
obnoxious block of contiguous
memory uh which now that I'm thinking of
memory uh which now that I'm thinking of
it is going to be even less fun than I
it is going to be even less fun than I
originally
originally
anticipated oh
anticipated oh
joy yeah that's going to be even less
joy yeah that's going to be even less
fun than I originally
fun than I originally
anticipated that's okay
though we'll do what we have to do
so
here we have to be very
careful have to be very careful
it is actually going to look a little
it is actually going to look a little
simpler when we're done it's just going
simpler when we're done it's just going
to hurt my brain a little
bit it's
bit it's
pids and now right here
I think what we how we can do this which
I think what we how we can do this which
will be a little bit nicer
maybe you can do unsign
Char this will be 11 * 11 * 4 + 26
so now we get a 2d array with this nice
so now we get a 2d array with this nice
view and
then we can do OBS map
then we can do OBS map
right is going to be equal
you have to cut this Dimension off
though
Pati what I'm doing here is I'm grabbing
Pati what I'm doing here is I'm grabbing
the first uh the first bites of the
the first uh the first bites of the
current row of the array and I'm going
current row of the array and I'm going
to put them into this OBS map and then
to put them into this OBS map and then
OBS xra
here this one doesn't need to be
here this one doesn't need to be
multi-dimensional because it's just it's
multi-dimensional because it's just it's
a a flat buffer like
this this is just and uh
this this is just and uh
obser vations
obser vations
of 11 * 11 *
4 and I think that this will allow us to
4 and I think that this will allow us to
do I mean we're going to have to figure
do I mean we're going to have to figure
out this intax here but I'm pretty sure
out this intax here but I'm pretty sure
that with this we can leave everything
that with this we can leave everything
else exactly the way it was and it'll
else exactly the way it was and it'll
work uh of course in order to confirm
work uh of course in order to confirm
this now I I'm going to have to mess
this now I I'm going to have to mess
with the Moa C
with the Moa C
code which is a bit
obnoxious and also now we have to do
obnoxious and also now we have to do
some data splitting [ __ ] I
think which will make our C forward pass
think which will make our C forward pass
uh slightly
uh slightly
slower not really actually not really at
slower not really actually not really at
all I think it'll be about the same
all I think it'll be about the same
speed
oh yeah look so we have this net OBS 2D
oh yeah look so we have this net OBS 2D
this is totally
fine here this is going to be
fine here this is going to be
observations start
observations start
actions okay
I think literally all I have to do is
I think literally all I have to do is
add 26 to
add 26 to
this we're going to get rid of all these
this we're going to get rid of all these
magic numbers at some point obviously
magic numbers at some point obviously
but I think in the meantime literally
but I think in the meantime literally
all I have to do is add 26 to
this yeah
B *
B *
26 what the
heck B time
26 how did I get
this oh because it's n OBS one
this oh because it's n OBS one
which no longer exists so this is
observations we'll have to do a little
observations we'll have to do a little
bit more
indexing uh and now this is B
offset Plus
11 * 11 * 4 plus I I'm fairly confident
11 * 11 * 4 plus I I'm fairly confident
that's
that's
correct not
correct not
positive but fairly
confident and actually in some ways this
confident and actually in some ways this
simplifies the code it makes the
simplifies the code it makes the
indexing slightly more
obnoxious makes the indexing slightly
obnoxious makes the indexing slightly
more
more
obnoxious but that's okay
obnoxious but that's okay
it does actually reduce some
code what the
code what the
heck invalid decimal L
what uh did I corrupt my build file
what uh did I corrupt my build file
somehow
oh I'm
oh I'm
dumb
there
there
okay then we have to
okay then we have to
go get some basic
bugs this is n of observations not
bugs this is n of observations not
observations map
UND
declared subscripted value is not an
declared subscripted value is not an
array pointer or vector
yeah cuz I no longer need the PID
right I'm doing
this I have no idea whether this is
this I have no idea whether this is
efficient we're going to I suspect this
efficient we're going to I suspect this
function is going to need some perf
function is going to need some perf
optimizing so probably we're going to
optimizing so probably we're going to
get stuck doing perf optimization
get stuck doing perf optimization
tomorrow for be decent chunk of
time but uh I mean there's no reason why
time but uh I mean there's no reason why
it should be slower in C than cython
it should be slower in C than cython
obviously it should be a little bit
obviously it should be a little bit
faster in fact
so we should be able to hit well over a
so we should be able to hit well over a
million steps per
million steps per
second million agent steps per
second million agent steps per
second and see maybe
faster obervations
and we forgot that we have more
and we forgot that we have more
signatures to adjust I really don't like
signatures to adjust I really don't like
the number of times you have to uh have
the number of times you have to uh have
like the top level boiler plate but like
like the top level boiler plate but like
some of that is a little outside of my
some of that is a little outside of my
control because like scon mandates a
control because like scon mandates a
little bit of it and like without scyon
little bit of it and like without scyon
we'd be having to write
we'd be having to write
um like the python
um like the python
API which you clutter up your
API which you clutter up your
C I don't know maybe I'll try but I
C I don't know maybe I'll try but I
definitely wouldn't put it in the same
file it
file it
mobile observations map so this is
mobile observations map so this is
observations yeah there's so many
observations yeah there's so many
different places where you have to do
different places where you have to do
this stuff kind of
disappointing allocate
disappointing allocate
MOA all right and then
then oh well this is
gross * 4
gross * 4
plus6 like this is what it should be now
plus6 like this is what it should be now
this is just observations
getting
close idx
uh okay the policy actually work it
uh okay the policy actually work it
seems like they do the same thing as
seems like they do the same thing as
before I mean they're not amazing but
before I mean they're not amazing but
they weren't amazing to begin with
they weren't amazing to begin with
right and he's still doing his
right and he's still doing his
thing let's see if he goes and uses some
thing let's see if he goes and uses some
abilities
abilities
yeah look at
yeah look at
that
that
cool so this guy is
solid now let's see if we can get the
solid now let's see if we can get the
python version
working we did all of this so that the
working we did all of this so that the
python version would actually have the
python version would actually have the
correct memory addresses and the
correct memory addresses and the
observations so we would get correct
observations so we would get correct
observation data
okay there we
go very nice
all I got to do is delete
all I got to do is delete
uh a bunch of garbage
here really just these
here really just these
ones let's you know let's leave them for
ones let's you know let's leave them for
now cuz I might need them let's just
now cuz I might need them let's just
comment
comment
them cuz I did just mess with the neural
them cuz I did just mess with the neural
net
so there is a chance I break
yet oops
should be pretty close to
working welcome YouTube
folks now this is a little concerning to
folks now this is a little concerning to
me that it hasn't done stuff yet
why would this be the
case it worked before is it just not
uh oh wait there's a
uh oh wait there's a
window but it's not working
kind of confused what's
happening I swear this never works the
happening I swear this never works the
only thing that actually ever works is
only thing that actually ever works is
this like Overkill
command that doesn't work that's scary
let's see if that was just something
weird uhoh can't get into my container
there where's the
there where's the
process right here 88
77 why can't I kill this process
yeah this is just not responding
right I don't know how that's even
right I don't know how that's even
possible
literally it's like freezing up my uh my
literally it's like freezing up my uh my
terminal
terminal
here I'm trying to think how that's even
here I'm trying to think how that's even
possible
here can I see this in task
manager no I can't even see it
manager no I can't even see it
here I can see it here but it's just in
VM I'm curious to how that even happens
right python binding to uh C program is
right python binding to uh C program is
unkillable
well kill dash9 does not actually
well kill dash9 does not actually
work let's I get the PID wrong or
work let's I get the PID wrong or
something oh it says it's
gone but I still see it I see it in the
gone but I still see it I see it in the
taskar
oh okay there it goes I guess it just
oh okay there it goes I guess it just
took a
took a
second uh of course now I have to
second uh of course now I have to
immediately run it again
immediately run it again
which is not
which is not
amazing but I mean what else am I
amazing but I mean what else am I
supposed to do except hope that was just
supposed to do except hope that was just
a
weirdo
ah I don't even know how that's
possible 9139
I
bound that a break point
bound that a break point
there for when we eventually figure out
there for when we eventually figure out
how to kill this
thing got to hate unkillable processes
yeah see it like it gets this it's
stuck how is there this thing like this
stuck how is there this thing like this
unreadable
window
window
right that shouldn't be a thing
what if I
what if I
se
se
it that
work
no literally unkillable
no literally unkillable
process kill all all
process kill all all
Ray yeah I've had to do a lot of kill
Ray yeah I've had to do a lot of kill
all Ray in my
time incredibly weird though this is not
time incredibly weird though this is not
even being
even being
multiprocess it's just for whatever
multiprocess it's just for whatever
reason like I have this python binding
reason like I have this python binding
to this C code and I don't know how but
to this C code and I don't know how but
it's like
it's like
unkillable it does eventually
unkillable it does eventually
stop failed to resize TTY
what but uh yeah very
weird okay there we go so now I'm I have
weird okay there we go so now I'm I have
a breakpoint set at least so we'll see
a breakpoint set at least so we'll see
when this happens
does it happen immediately
really that doesn't make sense to me it
really that doesn't make sense to me it
should not be able to happen
immediately I mean we've made some code
immediately I mean we've made some code
changes I
changes I
guess here we'll mess with the c version
guess here we'll mess with the c version
that doesn't do this as soon as I fix
that doesn't do this as soon as I fix
this one
it stops using memory immediately it
it stops using memory immediately it
stops like using compute but it just
stops like using compute but it just
sticks around
there and now it is lagging my auntu
lovely oh yeah my Linux subsystem is
lovely oh yeah my Linux subsystem is
locked up
locked up
completely so I guess we're going to sit
completely so I guess we're going to sit
here waiting for it to decide to fix
here waiting for it to decide to fix
itself otherwise I'm going to have to
itself otherwise I'm going to have to
reboot the whole
reboot the whole
machine well I guess I could reboot WSL
machine well I guess I could reboot WSL
as well couldn't I I'm going to give it
as well couldn't I I'm going to give it
a second
first let me give it a second first to
first let me give it a second first to
see if it just decides to to figure
see if it just decides to to figure
that doesn't look like
it uh
Power okay there we go
it's
it's
stuck can it literally not shut down
WSL I've seen a lot of crazy things in
WSL I've seen a lot of crazy things in
my time I haven't seen that
well folks I'm going to have to
well folks I'm going to have to
oh there we
oh there we
go
go
works just as I was about to say I had
works just as I was about to say I had
to reboot the
machine so this time we're going to mess
machine so this time we're going to mess
around in the C version for a bit and
around in the C version for a bit and
see if we can figure out what the heck
see if we can figure out what the heck
is happening before we do that
is happening before we do that
again but sometimes development be like
again but sometimes development be like
this
now don't run the demo script
okay so we can see right
okay so we can see right
here this version is
here this version is
fine right this version here is fine
so the underlying C code is
so the underlying C code is
good uh hold
on there's a weird
on there's a weird
free I wouldn't think that that would do
free I wouldn't think that that would do
anything but we can go check it out
yeah so
this doesn't need to be
this doesn't need to be
freed
oops and there we go this is back to the
oops and there we go this is back to the
correct memory profile these are
correct memory profile these are
internal meem leaks can't do anything
internal meem leaks can't do anything
about
those and
I mean I don't want to run the python
I mean I don't want to run the python
because we know what happens but like
because we know what happens but like
you know what else do I do in this
you know what else do I do in this
situation
situation
right why the heck does the python do
this I can make a standalone script I
this I can make a standalone script I
guess to try to test it
it's just very odd to me like what the
it's just very odd to me like what the
heck would cause this
right there really shouldn't
right there really shouldn't
be there shouldn't be anything capable
be there shouldn't be anything capable
of causing
this I mean I can try to run it without
this I mean I can try to run it without
rendering
rendering
on if I think it's the
on if I think it's the
rendering but I don't know if I think it
rendering but I don't know if I think it
is the rendering
I guess Standalone script it is
right it's so sketchy though because
like man I should at the very least be
like man I should at the very least be
able to uh to just instantiate this
able to uh to just instantiate this
thing
right I'm have to do everything fully
right I'm have to do everything fully
from scratch
oops
okay okay let's see if this does
okay okay let's see if this does
anything
you even uh wait how do I even do
this yeah so so here it's just m.
actions
right so it's
right so it's
like
or see does this do anything
or see does this do anything
yeah so that
yeah so that
runs
step oh you do give it to actions like
step oh you do give it to actions like
this
right hold on there's this like weird
right hold on there's this like weird
gross thing here
right equals
three this could be causing
it well this should cause a seg fold it
it well this should cause a seg fold it
shouldn't cause
shouldn't cause
this I guess it's undefined
Behavior still shouldn't be able to do
Behavior still shouldn't be able to do
this
so we just do like this right
so we just do like this right
um that
um that
back and then we
back and then we
do 9 *
zero all right this is fine
and it's Nots type float
and it's Nots type float
32 we can just do like this right we do
32 we can just do like this right we do
step all
step all could be
weird right we can do like this
weird right we can do like this
instead that should maximize the chance
instead that should maximize the chance
of us not getting get
of us not getting get
controlled by uh whatever the hell this
controlled by uh whatever the hell this
bug
is missing all right we give it actions
is missing all right we give it actions
here we not
here we not
get could not broadcast
pi and then you actually don't have to
pi and then you actually don't have to
give this any
give this any
ARS it has the
data very
data very
nice that's
nice that's
[Music]
[Music]
MOA okay so what we can do is let's do
MOA okay so what we can do is let's do
like you know for Iron Range of like
like you know for Iron Range of like
30 we'll see how this
works works very nicely right doesn't
works works very nicely right doesn't
crash doesn't do anything
stupid point
Point Let's see about this now this is
Point Let's see about this now this is
where the things can get
stupid let me show you that we have we
stupid let me show you that we have we
have a frame right this is a
frame okay
frame okay
if we don't put this break point what
happens if we don't put this break
point okay it like renders and then it
point okay it like renders and then it
goes
right so we have something uh it's not
right so we have something uh it's not
loading the shaders and stuff which is
loading the shaders and stuff which is
why you can't see anything so uh we'll
why you can't see anything so uh we'll
have to fix the asset paths and
have to fix the asset paths and
such but uh yeah I will be I'll be right
such but uh yeah I will be I'll be right
back and then we'll try to figure that
back and then we'll try to figure that
out we're making some decent progress
out we're making some decent progress
for
sure
e
e e
okay
well we know why the uh the paths are
well we know why the uh the paths are
wrong here
right the question is just
um why is it like this right
get well duh that's get current working
get well duh that's get current working
directory for
not current working
not current working
directory I'm just trying to figure out
directory I'm just trying to figure out
like what's the easiest way
to to load
to to load
files from the uh the directory that
files from the uh the directory that
this thing is
this thing is
in
right without messing stuff up
uh e
yeah that's
silly maybe I do want
this maybe we do want this
read
read
link the hell is
this no I don't like this at all
let's see
this is relative to the current working
this is relative to the current working
directory is the annoying thing
right why does it do
this and why is this so obnoxiously
this and why is this so obnoxiously
silly shell out to
silly shell out to
Python and read standard wait
Python and read standard wait
what what are you talking about that
what what are you talking about that
guy I the issue at the moment is just
guy I the issue at the moment is just
that I
that I
have I mean it's really
dumb I was going to say that didn't seem
dumb I was going to say that didn't seem
to make any
to make any
sense like the issue here is I have the
sense like the issue here is I have the
C right and I have the Assets in the
C right and I have the Assets in the
same folder but then when it gets
same folder but then when it gets
compiled by setup.py it gets compiled
compiled by setup.py it gets compiled
from like the root directory of puffer
from like the root directory of puffer
LI or whatever is really
obnoxious I mean yeah you can
obnoxious I mean yeah you can
technically do that but then this file
technically do that but then this file
doesn't like this thing doesn't build
doesn't like this thing doesn't build
and unless you like [ __ ] with the
and unless you like [ __ ] with the
paths the easiest thing would just be to
paths the easiest thing would just be to
have like the
have like the
uh well actually no the easiest thing
uh well actually no the easiest thing
wouldn't be to have uh the absolute path
wouldn't be to have uh the absolute path
if you think about it right
if you think about it right
because hold
because hold
on yeah no it's the absolute path that
on yeah no it's the absolute path that
works easiest thing is to get the
works easiest thing is to get the
absolute path to the current directory
what's the
what's the
issue so I have a C file right it loads
issue so I have a C file right it loads
some assets some pngs and stuff and it
some assets some pngs and stuff and it
works fine but then when you run this uh
works fine but then when you run this uh
when you compile this and run it from
when you compile this and run it from
python the working directory is
python the working directory is
different because you're running from
different because you're running from
like wherever the hell the python is um
like wherever the hell the python is um
so then it's not finding those folders
so then it's not finding those folders
right it's not finding those assets so
right it's not finding those assets so
like the easiest thing I could think to
like the easiest thing I could think to
do would be to have the
uh I mean it should be the absolute
uh I mean it should be the absolute
path
right can you
right can you
pass file is an argument
technically I
guess it's kind of silly though isn't it
not
CWD that shouldn't be a thing you should
CWD that shouldn't be a thing you should
just be able to get the path to the
just be able to get the path to the
current f while
very
very
silly I mean I have like there are
silly I mean I have like there are
functions for this I just think that
functions for this I just think that
they're too complicated for what they
do like
here like what the hell is this
yeah I don't know it's doing weird stuff
yeah I don't know it's doing weird stuff
and what it
is it's quite
silly I'm trying to think what I would
silly I'm trying to think what I would
want to do for this
I mean even if I pass the
I mean even if I pass the
path I guess I have a text format thing
path I guess I have a text format thing
that makes it slightly
easier can I hold
easier can I hold
on let's say I do want to pass
on let's say I do want to pass
the the path right
the the path right
right let me see how obnoxious it
is or wrong
file where am I
answer OS
dependent I mean by OS dependent you
dependent I mean by OS dependent you
mean Windows versus literally anything
mean Windows versus literally anything
else
I mean I could just use
I mean I could just use
this and pass the path through
this and pass the path through
this it's very
obnoxious no I mean really should I want
obnoxious no I mean really should I want
you should be able to run the SE stand
you should be able to run the SE stand
alone from any directory so I don't want
alone from any directory so I don't want
to depend on this
to depend on this
[ __ ] we need to really just figure
[ __ ] we need to really just figure
this stupid thing out and see
the
hell oh I guess this is a thing right e
this is so
silly those are just
silly those are just
so it can't be this [ __ ] stupid to
so it can't be this [ __ ] stupid to
have to load a file right it can't
have to load a file right it can't
possibly be this stupid there's got to
possibly be this stupid there's got to
be a way that doesn't make you look like
be a way that doesn't make you look like
an imbecile
and come on running a file from a
and come on running a file from a
different directory
change the
current yeah so you do that and then you
current yeah so you do that and then you
[ __ ] over your
[ __ ] over your
packages like you [ __ ] over all your
packages like you [ __ ] over all your
other python code
like GPU Drive does this and it makes it
like GPU Drive does this and it makes it
uninstallable with
Pip I guess technically you're not going
Pip I guess technically you're not going
to
to
run you're not going to run the program
run you're not going to run the program
from a different directory
from a different directory
right can't adust python or assist path
right can't adust python or assist path
as
as
needed and
yeah does that even propagate to uh the
yeah does that even propagate to uh the
C
C
code I don't know if that even
code I don't know if that even
propagates to the C code
I'll try assis path the pentant real
quick are you running from subprocess or
quick are you running from subprocess or
multiprocessing I it might
can we not just do this hold
on what if I do this
right um
self.
module what if I do this
nope why doesn't that
work say path
[ __ ]
I thought you could do that
yeah that we're not doing this this is
disgusting plus Ultra can we do this
disgusting plus Ultra can we do this
though
that still doesn't do
[ __ ] little black screen
how obnoxious can this be
right that's just incredibly
obnoxious do I really just I guess I
obnoxious do I really just I guess I
have to just pass the [ __ ] directory
have to just pass the [ __ ] directory
to
to
see
see
right and then I have to conditionally
right and then I have to conditionally
apply it if I'm
apply it if I'm
like CIS path
okay I just
okay I just
add the
folder finding
this is
disgusting yeah this is just spamming
disgusting yeah this is just spamming
garbage don't bother checking chat GPT
garbage don't bother checking chat GPT
it's always wrong
literally always
wrong man I didn't expect this to be the
wrong man I didn't expect this to be the
thing to get stuck on right
it really doesn't feel good either to
it really doesn't feel good either to
like have to change the uh the C code
like have to change the uh the C code
the C is nice and
simple it should just
be
be
huh
for e
now this is not it
can we do like
can we do like
this oh I know what happened
what how does this still not
work I guess this is like
yeah this is not path it's like it's
yeah this is not path it's like it's
basically you need like a [ __ ] Sim
basically you need like a [ __ ] Sim
link or something don't you
now this is brainless
I mean
I mean
technically if we're going to be just
technically if we're going to be just
really stupid about things
right if we just want to be really
right if we just want to be really
stupid
stupid
here can't we just
like work
like work
for I can't freaking pay stuff from
this if we're going to be just really
this if we're going to be just really
dumb
[Music]
oops can't we do
this why I use path Li does that help
this why I use path Li does that help
you when you're loading stuff in
C that's Set current working
directory there is it CH d
can I do this be really
stupid for
how do you get the current module from
syon that should work in
Python for
don't have full docks or
don't have full docks or
stuff like it's ridiculous the chat
stuff like it's ridiculous the chat
jippy has like better docks because
jippy has like better docks because
they're just not anywhere they're like
they're just not anywhere they're like
some obscure page on the internet
underscore
file what we just do underscore file
right
that's what in
what the
hell is what you're trying to do get the
hell is what you're trying to do get the
ABS well what I'm trying to do is
ABS well what I'm trying to do is
I have assets that need to be loaded in
I have assets that need to be loaded in
C and in C you know you specify the
C and in C you know you specify the
relative path to them which is what you
relative path to them which is what you
would always do uh but because this
would always do uh but because this
thing gets built by Python and it gets
thing gets built by Python and it gets
imported and like called from separate
imported and like called from separate
places it doesn't work so I'm trying to
places it doesn't work so I'm trying to
make the C path actually work it's
make the C path actually work it's
driving me
driving me
nuts what the hell is this
nuts what the hell is this
right for
oh this thing just screwed up as
well gra me
nuts
for e
grab me
nuts you get stuck on the simplest
nuts you get stuck on the simplest
things right
so
this do
it not
function how is this still not loading
function how is this still not loading
successfully
wait we're loading the
shaders how wait we're loading stuff
shaders how wait we're loading stuff
successfully now but it's not showing
up oh wait hold on am I just like
up oh wait hold on am I just like
incredibly dumb wait hold on let me just
incredibly dumb wait hold on let me just
try something
something maybe this is something
something maybe this is something
completely
different no that did make a
different no that did make a
difference so here it failed to open
difference so here it failed to open
everything
everything
and then when I did this stuff here
right it just screws up on the shaders
map
map
Shader why is it loading the wrong
Shader oh the platform variable is not
defined hold on we know how to fix
this for
and see if this does
it
it
finally [ __ ] a
that is so
that is so
stupid that is just so stupid how long
stupid that is just so stupid how long
that
that
took cool
take and
take and
take take
we
compile then we'll actually get to clean
compile then we'll actually get to clean
this stuff up a
bit all
bit all
so here's the
N oh it's random action so that's
N oh it's random action so that's
fine yeah but you can see it's
smooth which is very nice
how fast is this I
wonder we'll have to do perf test later
wonder we'll have to do perf test later
but
but
um yeah that gives us the environment
um yeah that gives us the environment
rendering now we had some uh some
rendering now we had some uh some
bug some odd weird reports of stuff I
bug some odd weird reports of stuff I
think in the compute OBS functions
let's go see if we can actually run the
let's go see if we can actually run the
demo
okay well I don't know what was cursed
okay well I don't know what was cursed
with
this but it seems like whatever we just
this but it seems like whatever we just
did fix some
stuff so let's try this again
maybe seems we don't have control
we got to expose variables and stuff but
we got to expose variables and stuff but
yeah that is kind of
bound Mak
sense for
now they move at the correct speed as
well and
well and
then total tow is taken
I think the only stats that you really
I think the only stats that you really
need is uh the only stats you really
need is uh the only stats you really
need
need
here from the environment itself are
here from the environment itself are
this right you just need these
we just do
like at
like at
property
total like this
close this is not an allocated MOA this
close this is not an allocated MOA this
is
is
just
MOA we also haven't defined it here so
MOA we also haven't defined it here so
we need to
we need to
Define
yeah so much work on this
all right
all right
so here's our
environment running random actions
if we can load a
policy look at
policy look at
that and we load the
that and we load the
policy they don't look particularly
smart but they do do things
oh these buttons do
oh these buttons do
work so our view buttons work we can
work so our view buttons work we can
look at any of
look at any of
them that's cool they just need to be
them that's cool they just need to be
doing stuff
I call that a
I call that a
success I call that a success for
sure we really need to train some new
sure we really need to train some new
policies on
policies on
this I think the Clusters still down
this I think the Clusters still down
right it came back
up oh what Nathan posted new
up oh what Nathan posted new
M what is
this wait what
Highway
huh coding some random things
cool that's was cool to see I have no
cool that's was cool to see I have no
idea what that is
but so uh we should probably figure out
but so uh we should probably figure out
how fast this thing is
huh let's do
that
for
e e
hell's wrong with
this
for e
why can't I see the freaking syntax
why can't I see the freaking syntax
error
stupid
stupid
there we go
all right right
I don't like that it loads RB even when
I don't like that it loads RB even when
I don't render
okay so according to this this runs at
okay so according to this this runs at
240,000 steps per sec uh
240,000 steps per sec uh
204,000 steps per second on my
204,000 steps per second on my
desktop which I believe is quite a bit
desktop which I believe is quite a bit
slower than the um the scon version so
slower than the um the scon version so
we'll have to figure out where I'm
we'll have to figure out where I'm
dropping performance
there let me
there let me
think yeah I have to figure out where
think yeah I have to figure out where
we're dropping performance
uh oh also though technically is
uh oh also though technically is
this No it should be faster than that I
this No it should be faster than that I
believe should be faster than
believe should be faster than
that so we'll have to profile and do
that so we'll have to profile and do
stuff on that but it's not
stuff on that but it's not
horrid it's not horrible
let see if my cluster is up or
not let me see if the cluster is
open oh yeah wait the cluster is
open oh yeah wait the cluster is
up so we should be able to do some stuff
let me make sure we can actually train
let me make sure we can actually train
on this
how big is
how big is
this we
this we
do 8 by 8 so600
M seems like that's a
lot what happen if I do
30 let's see what
happens e
takes forever to initialize which it
shouldn't we might have to initialize
shouldn't we might have to initialize
render at
um and we might have to do some stuff
um and we might have to do some stuff
here
it's funny I'm like very dissatisfied
it's funny I'm like very dissatisfied
with the bindings between Python and C
with the bindings between Python and C
I'm very happy with the python and
I'm very happy with the python and
puffer I'm very happy with the c and
puffer I'm very happy with the c and
Puffer not happy with the
Puffer not happy with the
interoperability of the
interoperability of the
two like what is this
right I assume it's like making the
right I assume it's like making the
environments or something right
okay one
okay one
n let see what happens
there we go
3.1k steps per second is too
slow they fourm
and
then what do we say
so
64m takes too long to
64m takes too long to
initialize no reason that the M should
initialize no reason that the M should
take any real amount of time to
take any real amount of time to
initialize like this
I guess it's having to do
I guess it's having to do
um well no it shouldn't have to do any
um well no it shouldn't have to do any
file IO
right should be no file.io
involved very awkward that it's like
involved very awkward that it's like
it's still
it's still
not
really may be
32 we're going to have to look at the
32 we're going to have to look at the
initialization time
initialization time
now and figure out what's happening
now and figure out what's happening
because this doesn't make any
because this doesn't make any
sense hey
welcome for
yes why
yes why
Linux yeah I mean that's got to be a
Linux yeah I mean that's got to be a
joke
joke
right yeah got to be nuts doing stuff
right yeah got to be nuts doing stuff
not on Linux
well this is
well this is
weird it
initializes one two four or eight
initializes one two four or eight
environments fast and then it just hangs
environments fast and then it just hangs
on
16 how's that make any sense for
I think what this would even
I think what this would even
be you make more than 8 m it just
be you make more than 8 m it just
doesn't work
what data are they sharing
I mean I'm technically giving them the
I mean I'm technically giving them the
same AI pathing
same AI pathing
data but they're not writing to it it
data but they're not writing to it it
shouldn't be locked or anything
right and plus they're on a single
process oh wait buff observations right
process oh wait buff observations right
here yeah this is wrong isn't it
where this is pointer colon
end it's got to be this
right so I don't know why that would
right so I don't know why that would
make it
fail yeah no
that doesn't make it
that doesn't make it
fail
okay e
interesting so it gets 14 M's
interesting so it gets 14 M's
in and then it
in and then it
breaks on the reset
that's very
weird I'm trying to think if there's
weird I'm trying to think if there's
anything where I could have like the
anything where I could have like the
indices
indices
wrong mm's no I
wrong mm's no I
have I'm agents
I mean I would get like a bounds error
I mean I would get like a bounds error
in Python if I gave it the wrong
index is this like memory somehow it
index is this like memory somehow it
can't it shouldn't be able to be
right for
I don't know why these processes get
I don't know why these processes get
like backgrounded either
where's the obnoxious one I swear this
where's the obnoxious one I swear this
is the only one that ever works and it's
is the only one that ever works and it's
too obnoxious to
remember see
remember see
works
so
100 is there a while loop somewhere that
100 is there a while loop somewhere that
can be
infinite oh I
infinite oh I
know that's really awkward isn't
know that's really awkward isn't
it I know what it
is yeah that's
silly
for e
I was overwriting the same map
repeatedly so there's a rare condition
repeatedly so there's a rare condition
you can technically infinite Loop in the
you can technically infinite Loop in the
environment if there's nowhere to spawn
environment if there's nowhere to spawn
and I was filling up all the spawn
and I was filling up all the spawn
positions because I was writing
positions because I was writing
everything all the different
everything all the different
environments onto the same
environments onto the same
map I'm pretty
map I'm pretty
sure
sure
no it says no where still looping
no it says no where still looping
here I could have sworn that would have
here I could have sworn that would have
been
it oh wait wait it errored so it didn't
okay we'll try this
there we
go
perfect so now we no longer have the
issue and we can do
crazy
fast2 seconds for even 512 of
them what do we think about memory
usage let's take a look at memory usage
right 1.6
right s
n like they use like no
n like they use like no
memory they're
memory they're
great we are perfectly set up
here they really shouldn't consume much
here they really shouldn't consume much
memory nice to see that they actually
memory nice to see that they actually
don't uh so now I should be able
don't uh so now I should be able
to first of all
um M's
200 oops
M right and then this is going to be 10
M right and then this is going to be 10
* m
* m
time
I let's see if this is
faster okay there we go that's a lot
faster okay there we go that's a lot
closer to the original performance
closer to the original performance
um typically the uh the puffer boxes are
um typically the uh the puffer boxes are
like a good 2 and 1 half times faster
like a good 2 and 1 half times faster
than this box so this is about close to
than this box so this is about close to
the original million steps per second
the original million steps per second
we'll have a couple little optimizations
we'll have a couple little optimizations
to do you know I'm probably I missed a
to do you know I'm probably I missed a
couple things while doing the port but
couple things while doing the port but
uh yeah there we go
uh yeah there we go
right that is fast that is like
right that is fast that is like
incredibly fast that's like you know how
incredibly fast that's like you know how
is the environment that fast right
[Music]
let's order some food real quick on the
let's order some food real quick on the
side and uh then I will keep working on
side and uh then I will keep working on
this until it gets
this until it gets
here that's what we'll do
here that's what we'll do
today I want to check one thing on
today I want to check one thing on
Twitter
first we got any cool
messages nothing crazy
some
some
food uh what do I get here
we're
good
so let's go back to the train
config cuz now we know we can do some
config cuz now we know we can do some
crazy things
right see can we run the full config
right see can we run the full config
already or are we going to O ourselves
already or are we going to O ourselves
we probably shouldn't right we just
we probably shouldn't right we just
confirmed that they're like they take no
memory the default config is like 200
memory the default config is like 200
per core
200 m is like .1 seconds to initialize
200 m is like .1 seconds to initialize
on each core
independently oh look at
independently oh look at
that that is the startup time for
that that is the startup time for
running a million steps as
running a million steps as
well 130k local
boom run C now very nice
so there are a couple things that we
so there are a couple things that we
want to do
here first of
all there's a lot of stuff to commit
all there's a lot of stuff to commit
isn't
there let's do this first so we don't
there let's do this first so we don't
lose stuff
I'm pretty happy with that
I think what we need to do is
where's the
ELO there was something I messed up when
ELO there was something I messed up when
I did these ELO
I did these ELO
CS believe
double check one
thing I want to check that uh I think
thing I want to check that uh I think
there was a PR that I got to merge one
there was a PR that I got to merge one
second
looks like they added a couple
things I'll get up it's fine for
now we'll just fix there's one thing I
now we'll just fix there's one thing I
wanted to fix which is that I wanted to
wanted to fix which is that I wanted to
randomize the team that this is on right
randomize the team that this is on right
now it's just like it puts your team on
now it's just like it puts your team on
radiant 100% of the
time I think that that is going to
time I think that that is going to
be h
that might be a thing for tomorrow
that might be a thing for tomorrow
though I think we just get this thing
though I think we just get this thing
running for
running for
now here
lines need game
m.h for
the heck was puffer net.
the heck was puffer net.
PX I wasn't ciz
that is there a puffet px I guess there
that is there a puffet px I guess there
is actually isn't there
we just do a little bit of
hygiene we not have ra up here
I guess we got to download
Raab until we make it um a
standalone e
1.6
1.6
megabytes that's so funny
I do this in the wrong one I totally
I do this in the wrong one I totally
just did this in the wrong
just did this in the wrong
one damn
it
hello you trained the strongest model
hello you trained the strongest model
and loaded it into 10 bot in the demo
and loaded it into 10 bot in the demo
even the red team so here's the thing
even the red team so here's the thing
um we've had better models one the last
um we've had better models one the last
experiment sweep had a couple janky
experiment sweep had a couple janky
things that we need to fix and two
things that we need to fix and two
there's some minor differences between
there's some minor differences between
uh the N before and after I ported it
uh the N before and after I ported it
and probably a couple unintentional
and probably a couple unintentional
differences so it's technically being
differences so it's technically being
put into an environment that's not
put into an environment that's not
exactly matching the one it was trained
exactly matching the one it was trained
in and they're probably some weird bugs
in and they're probably some weird bugs
so yeah the models in there at the
so yeah the models in there at the
moment they're not very good at all uh
moment they're not very good at all uh
we will be upgrading them and I just now
we will be upgrading them and I just now
like literally right now I got it to the
like literally right now I got it to the
point where we can train uh ostensibly
point where we can train uh ostensibly
at least we should be able to train
at least we should be able to train
directly on the C version of the
directly on the C version of the
environment so we're going to train some
environment so we're going to train some
models we're going to run some hyper
models we're going to run some hyper
parameter sweeps and we're going to
parameter sweeps and we're going to
refine our training pipeline a little
refine our training pipeline a little
bit and then we'll get better and better
bit and then we'll get better and better
models but the cool thing is now that
models but the cool thing is now that
this envis in C
this envis in C
um it's very very quick for us to Port
um it's very very quick for us to Port
new models over to the seu which is
new models over to the seu which is
pretty cool whereas before it was like I
pretty cool whereas before it was like I
couldn't put them online or you know it
couldn't put them online or you know it
was completely
separate now if you want to do
separate now if you want to do
um if you take the blue models by the
um if you take the blue models by the
way so if you take the blue agents and
way so if you take the blue agents and
if you just get them unstuck here let me
if you just get them unstuck here let me
show you something so first of all we've
show you something so first of all we've
we've got this new
we've got this new
site. for this and if I get the agents
site. for this and if I get the agents
unstuck right so here we'll follow this
unstuck right so here we'll follow this
one and you'll see that they get
one and you'll see that they get
stuck but like if I just switch to this
stuck but like if I just switch to this
agent
agent
here and now you can see I got this one
here and now you can see I got this one
unstuck watch they actually do
unstuck watch they actually do
reasonable things like they just don't
reasonable things like they just don't
know that the terrain is where it
know that the terrain is where it
is so like you see it just dashed it
is so like you see it just dashed it
just dashed in and now it's going to use
just dashed in and now it's going to use
its AOE tock clear these minions and
its AOE tock clear these minions and
clear the
tower so like it's learned to do a
tower so like it's learned to do a
couple things like they actually do
couple things like they actually do
learn to use their abilities and stuff
learn to use their abilities and stuff
and I have charts from the hyper pram
and I have charts from the hyper pram
sweeps that can show you that like
sweeps that can show you that like
they're actually effectively learning to
they're actually effectively learning to
use all their abilities and such but
use all their abilities and such but
like there are some bugs and some things
like there are some bugs and some things
that are going to need to be fixed for
that are going to need to be fixed for
this
also the snake model the snake model on
also the snake model the snake model on
the website is really stupid I dumbed
the website is really stupid I dumbed
that one down because I didn't have
that one down because I didn't have
convnets and lstms implemented in C when
convnets and lstms implemented in C when
I made that so we're going to upgrade
I made that so we're going to upgrade
the AI for the snake as well pretty
the AI for the snake as well pretty
soon I got to figure out like a cleaner
soon I got to figure out like a cleaner
way of doing this like you know python
way of doing this like you know python
like C to scon to python binding stuff
like C to scon to python binding stuff
though because right now there's a lot
though because right now there's a lot
of just Jank overhead associated with
of just Jank overhead associated with
like getting the EnV to play nice with
like getting the EnV to play nice with
puffer and also run a native c um like
puffer and also run a native c um like
the python stuff super simple and easy
the python stuff super simple and easy
the C stuff super simple and easy
the C stuff super simple and easy
getting those two things to work
getting those two things to work
together is a
together is a
pain that's the current state of
pain that's the current state of
things and hey we're looking for people
things and hey we're looking for people
to build more of these environments if
to build more of these environments if
anybody if you know if you want to like
anybody if you know if you want to like
build some cool stuff learn some AI
build some cool stuff learn some AI
learn well I don't know what your
learn well I don't know what your
experience is with RL but like if you
experience is with RL but like if you
want to like learn some cool hyperf Sim
want to like learn some cool hyperf Sim
Dev uh we have people building like
Dev uh we have people building like
building and contributing a few of these
building and contributing a few of these
at the moment in the Discord it's a good
at the moment in the Discord it's a good
time
let's see how fast this
goes ah I gotta add
this wait
this wait
what uh
did not build or something what's
wrong
builds okay here we go
builds okay here we go
so now we have it
so now we have it
training on the C version of the
training on the C version of the
environment at
environment at
400k 400k steps per
second should be about the same as what
second should be about the same as what
it was
before you can see it's learning as
well very nice
well very nice
so uh we're GNA
risk we're going to risk doing this
see cool this probably won't be an
see cool this probably won't be an
amazing sweep but I figured we'd just
amazing sweep but I figured we'd just
get something R running today
get something R running today
uh most likely it'll crash on some like
uh most likely it'll crash on some like
weird edge condition but at least
weird edge condition but at least
that'll help us find one bug and uh you
that'll help us find one bug and uh you
know maybe that'll help us find one bug
know maybe that'll help us find one bug
or
or
something so we'll
something so we'll
see very unlikely that I've just made
see very unlikely that I've just made
this port perfectly uh on the first
this port perfectly uh on the first
training
training
run but hey who knows maybe it's
good I think we should be fairly happy
good I think we should be fairly happy
overall with this
though I think we're going to call it
though I think we're going to call it
for tonight cuz my food's going to be
for tonight cuz my food's going to be
here in a bit I got a couple quick
here in a bit I got a couple quick
little things to do around the house
little things to do around the house
uh and I'll be back
uh and I'll be back
tomorrow and tomorrow I think we get to
tomorrow and tomorrow I think we get to
do more experimental side stuff and we
do more experimental side stuff and we
also get to we'll also get to figure out
also get to we'll also get to figure out
if we can clean stuff up uh and like I
if we can clean stuff up uh and like I
really want to make it easy for people
really want to make it easy for people
to make and bind these
to make and bind these
environments so I really want to clean
environments so I really want to clean
that up and make it very simple um like
that up and make it very simple um like
this site needs to have like I want this
this site needs to have like I want this
site to be the go-to place for RL
site to be the go-to place for RL
environments
environments
you know like we have these couple I
you know like we have these couple I
want to add a few like Atari remakes
want to add a few like Atari remakes
that are way faster I want to add some
that are way faster I want to add some
grid environments I just want to add
grid environments I just want to add
tons of stuff here it's like hey all the
tons of stuff here it's like hey all the
environments that you would ever want
environments that you would ever want
for reinforcement learning research they
for reinforcement learning research they
run at a million St million plus steps
run at a million St million plus steps
per second per core uh they run on the
per second per core uh they run on the
web if you want them to they're
web if you want them to they're
incredibly easy to use and install
incredibly easy to use and install
right this should just be the state of
right this should just be the state of
research and we're very very close to
research and we're very very close to
making that happen and I think once we
making that happen and I think once we
do that like the field is just going to
do that like the field is just going to
accelerate so so so quickly just based
accelerate so so so quickly just based
off of that speed difference and that
off of that speed difference and that
usability
difference so anyways thanks for
difference so anyways thanks for
dropping by and uh yeah I'll be back
dropping by and uh yeah I'll be back
tomorrow good night

Kind: captions
Language: en
okay we are
live
live
cool we're going to see if we can get a
cool we're going to see if we can get a
few cool things done
few cool things done
today it's been hectic it's been
today it's been hectic it's been
hectic but um we're at the point where
hectic but um we're at the point where
we've got these guys running around
we've got these guys running around
doing stuff right
doing stuff right
we've got all sorts of fun stuff and
we've got all sorts of fun stuff and
really at this
really at this
point I think we just have to figure out
point I think we just have to figure out
how to clean up the environment so it um
how to clean up the environment so it um
it plays nice with puffer lib and a few
it plays nice with puffer lib and a few
other things and we'll be able to
other things and we'll be able to
train that's what we're going to start
train that's what we're going to start
on today
all
right let me take a look at how we left
right let me take a look at how we left
this
thing so right now we have two different
thing so right now we have two different
versions of this this
versions of this this
environment there's a syon version and
environment there's a syon version and
there's a native C
there's a native C
version
version
[Music]
[Music]
and pretty much all we have to figure
and pretty much all we have to figure
out is how to make the native C
out is how to make the native C
version uh play nice with
version uh play nice with
puffer and we will be good to go
puffer and we will be good to go
there easiest way to do that should be
there easiest way to do that should be
to
to
just from here
let's see what this
does okay we get some failed to open
does okay we get some failed to open
file stuff that's
file stuff that's
fine we just have to change this up so
fine we just have to change this up so
that we are
loading right we just have to change
loading right we just have to change
this up a little
bit I'm trying to think
bit I'm trying to think
how we should go about doing
this this is definitely the thing to do
this this is definitely the thing to do
today though
okay
okay
um I'll tell you what we're going to do
um I'll tell you what we're going to do
I know I just started this but this is
I know I just started this but this is
going to be a little bit of a a little
going to be a little bit of a a little
bit of heavier work today I think so I'm
bit of heavier work today I think so I'm
going to go put the kettle on for a cup
going to go put the kettle on for a cup
of
of
coffee uh and then we're going to dive
coffee uh and then we're going to dive
into all the different stuff here and I
into all the different stuff here and I
think that if I if I'm able to just
think that if I if I'm able to just
buckle down and do this today we should
buckle down and do this today we should
be able to have something training end
be able to have something training end
to end on the C version of the Moa and
to end on the C version of the Moa and
then the project will just solve itself
then the project will just solve itself
from there I'm going to be right back
from there I'm going to be right back
give me one second
so let's do the easy parts of this first
so let's do the easy parts of this first
and then we'll do the heavier uh port
and then we'll do the heavier uh port
portions that will require some actual
portions that will require some actual
engineering thinking in a
bit so all we'll do
is I don't even think I need to do any
is I don't even think I need to do any
of this
of this
right we just comment this
client hi
client hi
Adam computer science major in my second
Adam computer science major in my second
year feel like a grasp of some things
year feel like a grasp of some things
well but when it comes to
well but when it comes to
coding mechanics or difficult technical
coding mechanics or difficult technical
stuff I freeze up and can't solve a lot
stuff I freeze up and can't solve a lot
of issues without external help you're
of issues without external help you're
over complicating things I almost
over complicating things I almost
guarantee you you're over complicating
guarantee you you're over complicating
things
things
um so one of the things that I I see a
um so one of the things that I I see a
lot of new
lot of new
programmers uh struggle with and I did a
programmers uh struggle with and I did a
lot as well for many years is like you
lot as well for many years is like you
get taught all this like object oriented
get taught all this like object oriented
like design and you get taught all these
like design and you get taught all these
like highle things that require you to
like highle things that require you to
exercise like a lot of subjective
exercise like a lot of subjective
judgment about like how to lay things
judgment about like how to lay things
out they don't tell you that there
out they don't tell you that there
there's another option which is to just
there's another option which is to just
not do any of that
not do any of that
so I will point you to the code for this
so I will point you to the code for this
project I want you to take a look at
project I want you to take a look at
like here I don't know if you've been
like here I don't know if you've been
following any of this stuff but this is
following any of this stuff but this is
what we
what we
have right now this is like a fairly
have right now this is like a fairly
substantial MOA it's ultra high
substantial MOA it's ultra high
performance engineered for reinforcement
performance engineered for reinforcement
learning it runs at like a million steps
learning it runs at like a million steps
per second it's got a bunch of unique
per second it's got a bunch of unique
characters it's like miniature version
characters it's like miniature version
of DOTA
right do
right do
this
this
uh I want you to see how simple the code
uh I want you to see how simple the code
is like yeah it's in pure SA but ignore
is like yeah it's in pure SA but ignore
that just look at how simple it's laid
that just look at how simple it's laid
out and how simply it's
out and how simply it's
[Music]
designed let me find the code it's all
designed let me find the code it's all
it's one file as
it's one file as
well MOA
well MOA
H okay like read through
H okay like read through
this let's see where I paste this yeah
this let's see where I paste this yeah
so read through this and you'll see what
so read through this and you'll see what
I mean
like you'll see what I mean by like over
like you'll see what I mean by like over
complicating stuff this is
complicating stuff this is
like you don't have to think about like
like you don't have to think about like
the right abstractions and the right way
the right abstractions and the right way
to do the stuff because there just
to do the stuff because there just
aren't
any and aside from that aside from like
any and aside from that aside from like
just not over complicating things and
just not over complicating things and
making your life harder than it needs to
making your life harder than it needs to
be uh you need to just build some stuff
be uh you need to just build some stuff
of your own that's the main thing you
of your own that's the main thing you
just need to get out there and build
just need to get out there and build
some stuff side projects are mandatory
some stuff side projects are mandatory
CS curriculum does not teach you how to
CS curriculum does not teach you how to
build stuff you need to be like doing
build stuff you need to be like doing
you know your own side projects and
things don't get too hung up with like
things don't get too hung up with like
no fancy text stacks and stuff either
no fancy text stacks and stuff either
right this freaking over complicated
right this freaking over complicated
JavaScript framework like that you know
JavaScript framework like that you know
obnoxious desktop app framework you
obnoxious desktop app framework you
don't need any of
it keep it simple
I think my mic is picking up that
I think my mic is picking up that
horrible noise um I'm hoping that that
horrible noise um I'm hoping that that
will stop at some point soon we've got a
will stop at some point soon we've got a
little bit of construction going on here
little bit of construction going on here
let me see if I can just change the
let me see if I can just change the
Noise Gate on
this I assume that it is coming
through yeah that's coming through
through yeah that's coming through
that's awful let me
that's awful let me
noise suppression hold
noise suppression hold
on what do I put on here so that this
on what do I put on here so that this
doesn't do
this noise
this noise
suppression Noise
Gate oh that solves
it you guys can tell me if that fixes it
it you guys can tell me if that fixes it
or if there's still background noise op
or if there's still background noise op
does make sense but but when I actually
does make sense but but when I actually
sit down try to get everything working
sit down try to get everything working
recoding yes exactly that's the problem
recoding yes exactly that's the problem
with oop just
with oop just
don't just stop like you're making your
don't just stop like you're making your
life hard
life hard
right I would just generally like and
right I would just generally like and
this is something I wish I'd caught on
this is something I wish I'd caught on
to a lot earlier like it's not like O is
to a lot earlier like it's not like O is
just bad or you know this way of doing
just bad or you know this way of doing
things is bad it's that the thing that's
things is bad it's that the thing that's
bad is trying to have a framework rather
bad is trying to have a framework rather
than trying to solve a problem um and
than trying to solve a problem um and
like what I generally suggest is like
like what I generally suggest is like
try to solve the problem first and add
try to solve the problem first and add
structure only when you're absolutely
structure only when you're absolutely
sure that you need
sure that you need
it so the easiest way to do that is just
it so the easiest way to do that is just
simple procedural code right you just
simple procedural code right you just
like write the thing from top to bottom
like write the thing from top to bottom
in the simplest way
possible let me see can I crank that
possible let me see can I crank that
noise gate up cuz I know it's really
noise gate up cuz I know it's really
obnoxious all the stuff in the
obnoxious all the stuff in the
background let me see if I can fix that
test
test
test
hammering
hammering
okay uh you guys can let me know if mic
okay uh you guys can let me know if mic
sounds good
sounds good
here I I'll have to talk a little bit
here I I'll have to talk a little bit
louder but uh I think it should filter
louder but uh I think it should filter
out the hammering at least when I'm not
out the hammering at least when I'm not
talking
and you're also free to just stick
and you're also free to just stick
around and like see the way that I build
around and like see the way that I build
stuff generally right I am very very
stuff generally right I am very very
slow to add structure to stuff
the other thing that I will say that's
the other thing that I will say that's
controversial is
controversial is
like you probably want to avoid like
like you probably want to avoid like
heavily functional code as much as
heavily functional code as much as
heavily object or code all like
heavily object or code all like
principle over practice
where is this
where is this
getting getting like messed up from
getting getting like messed up from
somewhere here
presumably I have
presumably I have
to I have to do something about
to I have to do something about
rendering here don't
I dip to bed understand a lot of what
I dip to bed understand a lot of what
you do but coming here and chatting
you do but coming here and chatting
sounds like yeah I mean you should not
sounds like yeah I mean you should not
be scared of like doing new stuff for
be scared of like doing new stuff for
sure
sure
um if second year like you've already
um if second year like you've already
done some stuff for brand new program I
done some stuff for brand new program I
tell them to not try to take on crazy
tell them to not try to take on crazy
ambitious progress cuz projects cuz
ambitious progress cuz projects cuz
they'll get discouraged but yeah it's
they'll get discouraged but yeah it's
second year you should be able to do
second year you should be able to do
like some medium scope
like some medium scope
stuff get used to
stuff get used to
that I will also tell you
that I will also tell you
like use GPT and stuff for learning uh I
like use GPT and stuff for learning uh I
will tell you to avoid using GPT to
will tell you to avoid using GPT to
think for you like the plague though use
think for you like the plague though use
it for docs you can use it to like try
it for docs you can use it to like try
to figure out understand why bugs are
to figure out understand why bugs are
happening and stuff but like we're just
happening and stuff but like we're just
like you know here write this function
like you know here write this function
that does this I say avoid that like the
that does this I say avoid that like the
play cuz you won't learn
anything you can see that I do use auto
anything you can see that I do use auto
complete but I use it for like single
complete but I use it for like single
line stuff I use it to save typing not
line stuff I use it to save typing not
thinking
speaking of
thinking stepping on your voice a bit
thinking stepping on your voice a bit
too much okay hold
too much okay hold
on yeah sorry about that folks
on yeah sorry about that folks
it's what can I say this is this is just
it's what can I say this is this is just
the week that I have all the maintenance
the week that I have all the maintenance
going on let me see if I can uh fix that
how's that let me know if it's still
how's that let me know if it's still
clipping
clipping
me I'll try to just talk
louder so the thing I'm having to figure
louder so the thing I'm having to figure
out here is I have this environment in C
out here is I have this environment in C
and I have a binding for python but it's
and I have a binding for python but it's
not properly fully configured yet and uh
not properly fully configured yet and uh
I want to make this thing not I want to
I want to make this thing not I want to
not add a bunch of overhead essentially
not add a bunch of overhead essentially
in the process of doing this
in the process of doing this
binding me see what it says Happening
Here interesting for some reason this
Here interesting for some reason this
like bols what about here
why does rayb get
why does rayb get
initialized where does RB get
initialized mean I have all this saved
initialized mean I have all this saved
so I can literally just cut
so I can literally just cut
out all of this stuff
right cuz this whole client has been ped
right cuz this whole client has been ped
to see
now have this exact same code but
faster maybe it's the import that loads
it oh it's also just possible that the
it oh it's also just possible that the
The Binding is bad now right
we have this binding
here
right this is the tricky thing about
right this is the tricky thing about
having to integrate uh lower level stuff
having to integrate uh lower level stuff
with
with
python and this obnoxious binding layer
python and this obnoxious binding layer
right
and this init mobile function is
and this init mobile function is
not init mobile function is probably not
not init mobile function is probably not
what we
what we
want what are we doing we're binding the
want what are we doing we're binding the
uh the Coba to the python Library so we
uh the Coba to the python Library so we
can actually train directly on the C
can actually train directly on the C
version of the code um that way we can
version of the code um that way we can
have one to one the same training
have one to one the same training
environment so this will replace the
environment so this will replace the
scyon code that we were using before for
scyon code that we were using before for
training um but we have to get a couple
training um but we have to get a couple
things right and I'm realizing now that
things right and I'm realizing now that
the way that I did this is
the way that I did this is
not the issue here is probably
that it's kind of an interesting little
that it's kind of an interesting little
uh technical
uh technical
thing the right here this is how you
thing the right here this is how you
create the environment in C and you can
create the environment in C and you can
see that I allocate a bunch of memory
see that I allocate a bunch of memory
here right uh but the thing is we don't
here right uh but the thing is we don't
necessarily want to allocate a bunch of
necessarily want to allocate a bunch of
memory
memory
because in the python version these are
because in the python version these are
buffers that get passed in from
buffers that get passed in from
python
python
so
yeah trying to think how I would like to
yeah trying to think how I would like to
make this
MOA and most of the code is going to be
MOA and most of the code is going to be
the
the
same almost all the code really it's
same almost all the code really it's
just the initialization of
buffers I suppose here that I can just
like if I just pass in the buffers as
like if I just pass in the buffers as
args and I just set them to like null or
args and I just set them to like null or
whatever right
but that's kind of
gross we'll do it like this for now I
guess wordss
really bothers me
though guess it's going to be like
though guess it's going to be like
reward star
reward star
rewards
rewards
um
um
star rewards Norm
star rewards Norm
rewards what else gets allocated
the game
the game
map that's kind of okay
right the PID map
here that's kind of okay as well isn't
here that's kind of okay as well isn't
it I think the AI paths here need to get
yeah the AI paths need to get
um they need to get
set the heck is the AI path buffer
set the heck is the AI path buffer
[Music]
for oh right yeah that's rough
for oh right yeah that's rough
so this is what I did to make it run on
so this is what I did to make it run on
web we're going to need like two
web we're going to need like two
versions of this init code
unfortunately do AI
paths if it's unsigned charar or
paths if it's unsigned charar or
whatever
there's just so much stuff that we
there's just so much stuff that we
allocate
allocate
here I almost want to just like do this
here I almost want to just like do this
right the first
right the first
time
time
yeah this is
yeah this is
tricky uh
I didn't I do this with the snake
environment I thought I did this with
environment I thought I did this with
the snake
environment how did I do
environment how did I do
it okay so I made an anip function and I
it okay so I made an anip function and I
made an allocate function right
oh yeah that's way
better yeah that's way
better so the only thing that's slightly
better so the only thing that's slightly
annoying is
annoying is
uh the amount of stuff in here but we'll
uh the amount of stuff in here but we'll
show you how we're going to do
this just
this just
copy we're going to copy most of this
function I think this is all the
function I think this is all the
allocations
right you can see how long this
is and then we'll make an allocate ver
version which also returns you the Moa
version which also returns you the Moa
like
like
this um but now this version
here basically just does the allocations
I'm understanding more the steps to Port
I'm understanding more the steps to Port
game
game
yeah yeah that's the idea here so the
yeah yeah that's the idea here so the
key portion here right is that when I
key portion here right is that when I
Dev this I want to be able to run it as
Dev this I want to be able to run it as
a c stand alone which means that you're
a c stand alone which means that you're
running one of these environments at a
running one of these environments at a
time and it's allocating all its own
time and it's allocating all its own
memory but when you bind from python
memory but when you bind from python
what's very nice is to be able to
what's very nice is to be able to
actually allocate the memory in Python
actually allocate the memory in Python
and then pass it to uh to your C code
and then pass it to uh to your C code
because then you can do stuff like give
because then you can do stuff like give
it shared buffers shared memory buffers
it shared buffers shared memory buffers
so your simulation is writing
so your simulation is writing
observations directly into shared memory
observations directly into shared memory
you can do all sorts of cool stuff and
you can do all sorts of cool stuff and
the only thing that you have to do for
the only thing that you have to do for
that is you just have to have a version
that is you just have to have a version
of your make function that says here use
of your make function that says here use
this memory as your buffers instead of
this memory as your buffers instead of
allocating it yourself so the allocate
allocating it yourself so the allocate
version is what's going to be called
version is what's going to be called
from C uh and that's what's going to be
from C uh and that's what's going to be
you know doing all these calex the Alex
you know doing all these calex the Alex
uh and then there's an init function
uh and then there's an init function
where if we're calling from python we'll
where if we're calling from python we'll
just call the init and we'll pass all
just call the init and we'll pass all
the buffers that we've allocated from
Python and what I was sort of hesitating
Python and what I was sort of hesitating
there over for a little bit was just
there over for a little bit was just
trying to figure out you know nice ways
trying to figure out you know nice ways
of doing all that of course the one
of doing all that of course the one
thing that's really gross is that you do
thing that's really gross is that you do
end up with these giant function
end up with these giant function
signatures but um I haven't found a good
signatures but um I haven't found a good
way around that
like it's kind of dumb to make a struct
like it's kind of dumb to make a struct
MOA args just to get around function
MOA args just to get around function
signatures
right and speaking of porting stuff
right and speaking of porting stuff
here's a little bit of incentive for
here's a little bit of incentive for
people who are thinking about um adding
people who are thinking about um adding
uh like making games and like porting
uh like making games and like porting
stuff for Puffer
stuff for Puffer
this exists now we actually have a
this exists now we actually have a
showcase site where we're going to be
showcase site where we're going to be
adding a whole bunch of M's including
adding a whole bunch of M's including
ones that have been contributed by
ones that have been contributed by
people we're going to have all these
people we're going to have all these
things playable online now now you can
things playable online now now you can
just click around and like yeah here I'm
just click around and like yeah here I'm
just playing the Moa now
just playing the Moa now
right or now I'm playing snake right
right or now I'm playing snake right
really
easy probably just put one of these in
easy probably just put one of these in
the background so people will have some
the background so people will have some
reference for what I'm doing
reference for what I'm doing
[Music]
[Music]
here here you know what we'll like we'll
here here you know what we'll like we'll
kind of like thumbnail bait just a
kind of like thumbnail bait just a
little
little
bit we'll go like this and then I'll
bit we'll go like this and then I'll
like I'll put us up here and then I'll
like I'll put us up here and then I'll
go like this behind my camera
think I use this original grid thing do
think I use this original grid thing do
I I don't think I need it
either
either
right yeah no I don't need this
that's actually an efficiency
that's actually an efficiency
optimization I've made is no longer
optimization I've made is no longer
needing to copy the whole map every time
needing to copy the whole map every time
you reset the
you reset the
end so these are allocated
end so these are allocated
now what about the
now what about the
map I don't need to allocate the map
map I don't need to allocate the map
itself here do
I um
um I think this can go inside of a
net this can go inside
net this can go inside
of uh this can go inside of a
of uh this can go inside of a
net get rid of
this m
this m
withd right
withd right
well yeah we'll just do like that
well yeah we'll just do like that
don't need
don't need
this don't need
this don't need
this oh wait no we do need this
this oh wait no we do need this
right yeah we need all this
stuff actually hold on do we need this
stuff actually hold on do we need this
pit stuff
pit stuff
here yeah we do what am I talking
about yeah cuz if we're not okay yeah we
about yeah cuz if we're not okay yeah we
do need
do need
this e
and then we have these buffers
here or we can just leave this like
so these pre-compute versions
we need
we need
this now we shouldn't need these
because need
because need
this zero outs scanned
this zero outs scanned
targets they should go
into yeah this should go into the inet
the observation map to get initialized
the observation map to get initialized
here all this stuff is
valid what about the
RNG 10
RNG 10
kilobytes do I care about 10
kilobytes do I care about 10
kilobytes no I
kilobytes no I
don't I don't need to pre-allocate this
don't I don't need to pre-allocate this
here
right okay so this is all of the
right okay so this is all of the
stuff uh that we want to
stuff uh that we want to
have only be allocated if we're going to
have only be allocated if we're going to
call the C version of the environment so
call the C version of the environment so
all these things are going to get passed
all these things are going to get passed
in from python if we're making the
in from python if we're making the
environment from python all these memory
environment from python all these memory
buffers but if we calling from C we need
buffers but if we calling from C we need
to make them
to make them
ourselves now what we do is we call init
mooba we also don't need this one
here this actually just
here this actually just
be W star rewards like this
you have all these
things then they get passed in
now we just go from top to bottom right
now we just go from top to bottom right
so this is
so this is
rewards some
rewards some
rewards HDs AI path pass
buffer pass buffer thing is a little
weird I think of it
how big is
how big is
that and a
large but we'll do it like that for
now extra action entities perfect so now
now extra action entities perfect so now
we get to the actual signature
we get to the actual signature
is all this additional
is all this additional
stuff weit
stuff weit
MOA return
MOA return
it there you
it there you
go there's your
go there's your
allocation and then all we do is we
allocation and then all we do is we
modify to modify the signature up
top we do end up with a couple chunky
top we do end up with a couple chunky
signatures but that's basically the only
signatures but that's basically the only
price of doing this
which is a very I think that's a very
which is a very I think that's a very
reasonable uh a very reasonable price
right see whether this got all the types
right see whether this got all the types
right or not or whether I get burned for
right or not or whether I get burned for
accepting the
accepting the
autogen probably I do
autogen probably I do
but
but
now the cool thing is going to be that
now the cool thing is going to be that
we no longer have to
we no longer have to
do the alic is just
rewards
rewards
WS
WS
it's to make sure that we're actually
it's to make sure that we're actually
copying the right stuff so the norm
copying the right stuff so the norm
rewards pids then AI
paths
paths buffer like
this we don't need these reset things
this we don't need these reset things
these uh these Setters here
no longer care about these right you
no longer care about these right you
already have
these leave these
these leave these
L we still
L we still
zero now this is observations
zero now this is observations
map very
map very
simple RNG still gets allocated
yeah so just like that we now should
yeah so just like that we now should
have two different
have two different
functions now of course we uh the one
functions now of course we uh the one
slightly obnoxious thing right when you
slightly obnoxious thing right when you
do it this way you have to do free
do it this way you have to do free
MOA and then you have to do preallocated
MOA and then you have to do preallocated
oh
oh
right
right
really all this stuff goes into free
allocated see what's not actually
allocated see what's not actually
allocated
allocated
so allocated
you have to just cut these things
you have to just cut these things
out
map need two different freze
map need two different freze
unfortunately one for if you construct
unfortunately one for if you construct
from C and then one from you construct
from C and then one from you construct
from python because if you construct
from python because if you construct
from python you're not going to free
from python you're not going to free
python buffers from
C that should be fine for
that and now what I will
do nice trick so we're doing uh we're
do nice trick so we're doing uh we're
doing this for the python code but I'm
doing this for the python code but I'm
going to build it from C because I have
going to build it from C because I have
better faster compilation and better
better faster compilation and better
debugging
debugging
here or C I can get the initial errors
here or C I can get the initial errors
out from here
I don't know what this first one
I don't know what this first one
is why does it not like
this oh I just have a typo
hi Joseph guy from Discord having issues
hi Joseph guy from Discord having issues
with puffer you're working on MOBA oh
with puffer you're working on MOBA oh
that's fine no no no you're you're
that's fine no no no you're you're
allowed to ask random stuff on uh on
allowed to ask random stuff on uh on
stream that's kind of the point right is
stream that's kind of the point right is
that it doubles as
that it doubles as
support uh were you asking about were
support uh were you asking about were
you the one asking about um
you the one asking about um
DMC by any chance
part of the point of streaming in the
part of the point of streaming in the
first place is to help all the puffer
users and this now builds
I am amazed that this actually appears
I am amazed that this actually appears
to work on the first
try we leaked a lot of memory though
try we leaked a lot of memory though
didn't we
didn't we
because this needs to be free Al
MOA perfect these memory leaks are uh
MOA perfect these memory leaks are uh
internal system stuff this is the
internal system stuff this is the
normal so we're good now we can work on
normal so we're good now we can work on
this binding me go get that guy back I
this binding me go get that guy back I
think he just like open stream type that
think he just like open stream type that
and close stream
oh no here he's here
oh no here he's here
cool um I think YouTube ate one of your
cool um I think YouTube ate one of your
messages
messages
here let me uh let me you can type stuff
here let me uh let me you can type stuff
in the Discord it won't censor you and
in the Discord it won't censor you and
I'll respond live that's usually the
I'll respond live that's usually the
easiest if you want lower latency as
easiest if you want lower latency as
well it's jars 5341 on Twitch twitch
well it's jars 5341 on Twitch twitch
streams with lower delay um if that's
streams with lower delay um if that's
easier either way I'll help
name space no attribute batch
rows well I'll I'll reply live here
rows well I'll I'll reply live here
right because I can give you a better
right because I can give you a better
response than just via typing because I
response than just via typing because I
can try stuff out live for you but like
can try stuff out live for you but like
if you just type there won't be a delay
if you just type there won't be a delay
and you won't get censored by the
and you won't get censored by the
YouTube chat but yeah leave stream open
YouTube chat but yeah leave stream open
I'll put this
I'll put this
uh okay here I
uh okay here I
see H okay so you're trying the SP sp3
see H okay so you're trying the SP sp3
okay but you weren't just trying sp sp3
okay but you weren't just trying sp sp3
Let me see
well that's not good now is
well that's not good now is
it looks like I made uh some bug here
it looks like I made uh some bug here
hold
on was this what you got or did you get
on was this what you got or did you get
a different error
different error okay let me get to this
different error okay let me get to this
to see if we well this is training now
to see if we well this is training now
are you on the master Branch or
are you on the master Branch or
Dev put this on the side are you on a
Dev put this on the side are you on a
master or
master or
Dev other questions yeah I'll answer
Dev other questions yeah I'll answer
I'll answer everything you got here this
I'll answer everything you got here this
is the point of me doing this stuff
is the point of me doing this stuff
live master I think okay
uh let me think how I do
uh let me think how I do
this let me just make sure I commit
stuff I'm going to just open I'm going
stuff I'm going to just open I'm going
to make a different a different clone of
to make a different a different clone of
popper so I don't have to mess with
popper so I don't have to mess with
Branch stuff hold on
main should be stable so if you're
main should be stable so if you're
having errors on Main that don't involve
having errors on Main that don't involve
a Dev feature then I will fix them right
a Dev feature then I will fix them right
if the error is like yeah it's just the
if the error is like yeah it's just the
feature is not there yet then I don't
feature is not there yet then I don't
fix that on Main but uh if like
fix that on Main but uh if like
something is something standard doesn't
something is something standard doesn't
work on Main it
should e
right so training works on Main single
core if it
core if it
works
multicore okay so training does seem to
multicore okay so training does seem to
work did you try uh the clean RL one or
work did you try uh the clean RL one or
do you really want to use the SP sp3 one
do you really want to use the SP sp3 one
cuz I'll help you if you want to use the
cuz I'll help you if you want to use the
SP sp3 back end but I am warning you
SP sp3 back end but I am warning you
that like uh typically our vanilla demos
that like uh typically our vanilla demos
like our demos are dramatically faster
like our demos are dramatically faster
than uh stable Bas L 3 I'll help you
than uh stable Bas L 3 I'll help you
with it I'll help you get SP sp3 working
with it I'll help you get SP sp3 working
though if you
prefer I mean we say that we have the
prefer I mean we say that we have the
integration so
CLE
CLE
works3 used to it if you recommend yeah
works3 used to it if you recommend yeah
I highly highly recommend um so for
I highly highly recommend um so for
context here puffer is incredibly easy
context here puffer is incredibly easy
to use with vanilla clean RL if you just
to use with vanilla clean RL if you just
want like our environments and our
want like our environments and our
vectorization it's out of the box um
vectorization it's out of the box um
it'll work if you want even faster with
it'll work if you want even faster with
more logging and like hyperparameter
more logging and like hyperparameter
tuning and stuff that's what our demo
tuning and stuff that's what our demo
file is for cuz our demo file is built
file is for cuz our demo file is built
on top of clean RL and it has a whole
on top of clean RL and it has a whole
bunch of additional optimizations and
bunch of additional optimizations and
stuff um so you're free to use either of
stuff um so you're free to use either of
those I have a lot of these things
those I have a lot of these things
they're tuned so like the demo works out
they're tuned so like the demo works out
of the box with that at least with like
of the box with that at least with like
our default back end right now I can
our default back end right now I can
looking at that error that you see that
looking at that error that you see that
I see right there I can tell you that
I see right there I can tell you that
the uh the issue is
the uh the issue is
that you have to like for sp3 you would
that you have to like for sp3 you would
have to make a custom policy uh and
have to make a custom policy uh and
you'd have to call like puffer li.
you'd have to call like puffer li.
nativized tensor or whatever on the
nativized tensor or whatever on the
observations because what puffer does is
observations because what puffer does is
when you have fancy observation spaces
when you have fancy observation spaces
it packs them into flat data buffers
it packs them into flat data buffers
because essentially like sp3 and other
because essentially like sp3 and other
Frameworks will screw up you give them
Frameworks will screw up you give them
structured data so anything that is
structured data so anything that is
structured data
structured data
we just give to you flat and then you
we just give to you flat and then you
can unpack yourself um with that
can unpack yourself um with that
function but you know with SP sp3 that
function but you know with SP sp3 that
means that you have to have like the
means that you have to have like the
custom forward function in order to do
custom forward function in order to do
that but the plus side is it means that
that but the plus side is it means that
you can use know net hack you can use
you can use know net hack you can use
nuro you can use all sorts of fancy
nuro you can use all sorts of fancy
environments with just about
anything last hold on the Wasa model is
anything last hold on the Wasa model is
meant for learning or just inference the
meant for learning or just inference the
Wasa model is for inference uh it loads
Wasa model is for inference uh it loads
trained networks from pytorch and then
trained networks from pytorch and then
it does inference in
PC and you can see that demoed online as
PC and you can see that demoed online as
well it's on puffer Dogg right now
well it's on puffer Dogg right now
though we have to retrain our models
though we have to retrain our models
I'll get deep into clean R anyways my
I'll get deep into clean R anyways my
other question is
other question is
following check out the C code by the
following check out the C code by the
way it's really like it's like 100 lines
way it's really like it's like 100 lines
for all the common layers that you would
for all the common layers that you would
need and then there a couple hundred
need and then there a couple hundred
lines convenience bindings but it's very
nice when I pulled the puffer lib I ran
nice when I pulled the puffer lib I ran
just like you did
yeah oh yeah you had issues with
yeah oh yeah you had issues with
resuming
right restart the
right restart the
train let me see about that I haven't
train let me see about that I haven't
messed with resuming recently cuz
messed with resuming recently cuz
frankly puffer is so fast that like the
frankly puffer is so fast that like the
thing just trains instant
thing just trains instant
anyways is the domain one time
anyways is the domain one time
pay it's got a renewal thing but it was
pay it's got a renewal thing but it was
cheap what do you mean is it one
cheap what do you mean is it one
like it was
cheap it was really funny cuz some
cheap it was really funny cuz some
[ __ ] tried to sell me puffer doio
[ __ ] tried to sell me puffer doio
for 15 grand so then I went and I bought
for 15 grand so then I went and I bought
puffer Ai and puffer GG for like a few
puffer Ai and puffer GG for like a few
hundreds
bucks Trad yeah so Trad checkpoint that
bucks Trad yeah so Trad checkpoint that
is that is legitimate bug let me fix
is that is legitimate bug let me fix
that for you right now uh cuz I was just
that for you right now uh cuz I was just
told this the other day that apparently
told this the other day that apparently
we're not using this correctly
yeah you're right it's not actually
yeah you're right it's not actually
called anywhere cuz was like I I broke
called anywhere cuz was like I I broke
this feature at some point nobody's
this feature at some point nobody's
asked me about it until just now but
asked me about it until just now but
let's uh let's fix that for you
X
X
byd okay so it passes ar. X ID
here
here
then it'ss called in train I
assume it's called in train
this already got a xide degenerated
this already got a xide degenerated
somewhere
I see so this thing just doesn't have a
I see so this thing just doesn't have a
good way of telling if you uh if you
good way of telling if you uh if you
want to resume at the moment I think was
want to resume at the moment I think was
the
issue e
about
this I think I have to like return
this I think I have to like return
whether you're resuming from
here lightly obnoxious
if this is
none so basically I have the function to
none so basically I have the function to
resume it's just like when I redid the
resume it's just like when I redid the
config system um apparently I I messed
config system um apparently I I messed
with the way things are done
there I'm in the right Branch right I
there I'm in the right Branch right I
hope hold on let me make
hope hold on let me make
sure yeah I am in the right brand okay
yeah okay
see if I go into
see if I go into
train see if we get
a this
okay ARG to resume is
false AR resume is
true and right there is where we're
true and right there is where we're
going to use this
by load
checkpoint
checkpoint
if
if
mars.
Zoom I
no checkpoint I found found assuming no
no checkpoint I found found assuming no
experiment
experiment
okay now what we'll do is we'll just do
okay now what we'll do is we'll just do
track run and experiment for a minute
track run and experiment for a minute
and then I'll see if I can load from it
for what it's worth clean RL like
for what it's worth clean RL like
Vanilla Clean RL does not have
Vanilla Clean RL does not have
checkpointing by default we had to add
this you can see though that this is
this you can see though that this is
currently running at 10K steps per
currently running at 10K steps per
second on my like really old
second on my like really old
desktop um it should be much faster than
desktop um it should be much faster than
that in fact if you tune like batch
that in fact if you tune like batch
sizes and
stuff I remember we can run the
stuff I remember we can run the
environment itself at like
200k good
200k good
desktop I mean but regardless you know
desktop I mean but regardless you know
two minutes for your million step
experiment funny enough is this is mini
experiment funny enough is this is mini
grid right really simple and our MOBA
grid right really simple and our MOBA
this training would take like less than
this training would take like less than
two
seconds I think our batch size is bigger
seconds I think our batch size is bigger
than a
million you can see the task is being
million you can see the task is being
solved there episode return
actually if an academic lab really wants
actually if an academic lab really wants
it I will probably just end up redoing
it I will probably just end up redoing
minig grid uh in puffer relatively soon
minig grid uh in puffer relatively soon
you guys can have like a ultra high
you guys can have like a ultra high
performance version of minig grid that
performance version of minig grid that
sound
good would people like care about that
good would people like care about that
cuz if people actually use it and like
cuz if people actually use it and like
will care about it I will do that it'll
will care about it I will do that it'll
only take me a few days at most
I already have like a grid engine all I
I already have like a grid engine all I
need to do is add like the keys and
need to do is add like the keys and
doors and stuff and maybe some graphics
no attribute compiled any grid changes
no attribute compiled any grid changes
like scenarios randomly or they they're
like scenarios randomly or they they're
predefined
predefined
scenarios we could do it so that they
scenarios we could do it so that they
change randomly I mean we can pretty
change randomly I mean we can pretty
much do anything we want at this point
much do anything we want at this point
in the environment Sim Space like with
in the environment Sim Space like with
the stuff I've built now we've gone so
the stuff I've built now we've gone so
far beyond the typical like toy Ms that
far beyond the typical like toy Ms that
are used in RL that it's essentially
are used in RL that it's essentially
trivial to implement any of the existing
trivial to implement any of the existing
little grid Ms at a thousand times
little grid Ms at a thousand times
faster than they are
faster than they are
currently that's just
currently that's just
solved takes me a few days to write the
solved takes me a few days to write the
code for anything specific but that's
code for anything specific but that's
basically it
this got renamed at some point
[ __ ] there not a load that map
location oh there's no map device that's
location oh there's no map device that's
weird
see if that does something
weird ring
hey
t. load
do
is oh wait this is model
path there's something weird that I was
path there's something weird that I was
doing here let me see what it is
of model
of model
half eight
load
I forget why I did it this way been a
I forget why I did it this way been a
while since I wrote
this wandb needs to seriously like fix
this wandb needs to seriously like fix
this thing where they spam the
console fix this
okay I see I have I just have two
okay I see I have I just have two
different um model path this is fine
different um model path this is fine
this is correct
di to dict
di to dict
like
yep w b needs to not spam
console uh
but this should be loading
it should be starting from a million
it should be starting from a million
right what we'd
expect didn't need this Dash D track
expect didn't need this Dash D track
either works I think well it didn't say
either works I think well it didn't say
it said it it didn't say starting from a
it said it it didn't say starting from a
million
right oh episode yeah but it should give
right oh episode yeah but it should give
you the correct numbers we don't write
you the correct numbers we don't write
No Mediocre code around here right
No Mediocre code around here right
it should
uh so the resume State here needs to get
uh so the resume State here needs to get
applied
correctly let do
there I think that's all we
need it started out higher there
90 I don't know how often this how
90 I don't know how often this how
frequently the default
frequently the default
saves but like let's say that I uh I
saves but like let's say that I uh I
kill it
here it's not saving the
model we'll let it finish training cuz
model we'll let it finish training cuz
then it'll definitely save the model but
then it'll definitely save the model but
as you say it's it's definitely loading
as you say it's it's definitely loading
the policy it's just I want to make sure
the policy it's just I want to make sure
that you have your correct numeric
stats want to make sure that we have you
stats want to make sure that we have you
set up before I go back to the MOBA
set up before I go back to the MOBA
code and then if you have any more
code and then if you have any more
issues with this please do report them
issues with this please do report them
like this is a two-way street right I'm
like this is a two-way street right I'm
happy to help with stuff but also I need
happy to help with stuff but also I need
the user reports in order to know what
the user reports in order to know what
to fix like cuz that's the easiest way
to fix like cuz that's the easiest way
for me to improv puffer right if people
for me to improv puffer right if people
tell me hey this doesn't work then
tell me hey this doesn't work then
that's a lot easier than me just like
that's a lot easier than me just like
looking around blindly for things that
looking around blindly for things that
don't
don't
work Dev moves very fast that means I
work Dev moves very fast that means I
occasionally break things like
this CU this was a working feature
this CU this was a working feature
before one last thing yeah no worries
see what this
does I don't like that it's not um
why is it not
why is it not
saving more
stuff the trainer State should have
stuff the trainer State should have
gotten updated
go ahead and ask though I'll start
go ahead and ask though I'll start
thinking about it while I fix this
interestingly this doesn't seem to
update one pop for Crea python file
update one pop for Crea python file
creating blocks of code
okay I will I will check on that in a
okay I will I will check on that in a
second because that should definitely
work well unless there's like something
work well unless there's like something
missing at the top but I will check on
missing at the top but I will check on
that in a second let me figure out why
that in a second let me figure out why
this stage isn't getting updated for you
this stage isn't getting updated for you
first
oh this is
gross mod path
save this should go here
save this should go here
right yeah it should save even when
right yeah it should save even when
you're not doing um one
B try it like
this well I'll rerun this
this
work yeah that looks like I might have
work yeah that looks like I might have
messed with a rapper since I wrote these
messed with a rapper since I wrote these
these tutorials are so obnoxious to like
these tutorials are so obnoxious to like
because they get stuff gets outdated and
because they get stuff gets outdated and
stuff and I only know that they're like
stuff and I only know that they're like
outdated when people say Hey you know
automated test would fix this but then I
automated test would fix this but then I
have to maintain automated tests
right and at this scale it's way easier
right and at this scale it's way easier
to just fix things like this for people
okay now if I run this again
okay now if I run this again
the intended thing is it actually should
the intended thing is it actually should
refuse to
refuse to
train still not saving
train still not saving
really why is it still not
saving oh I shouldn't even have
to I see why why this was here
to I see why why this was here
right because it's supposed to
right because it's supposed to
be it's supposed to be like
this but it's not actually giving me
this but it's not actually giving me
this checkpoint message
trying to know where to start and it
trying to know where to start and it
kind of scared me yeah no it's this
kind of scared me yeah no it's this
should this should be much easier and
should this should be much easier and
this is why I provide support right
this is why I provide support right
because like I'm one person and uh I'm
because like I'm one person and uh I'm
usually quite busy developing all sorts
usually quite busy developing all sorts
of new stuff right occasionally I will
of new stuff right occasionally I will
like make little tweaks to things uh and
like make little tweaks to things uh and
I'll not realize that I've broken like
I'll not realize that I've broken like
some demo
some demo
somewhere but I think that generally
somewhere but I think that generally
like if you start playing around with
like if you start playing around with
puffer and this you know the other users
puffer and this you know the other users
can attest to this you'll find that like
can attest to this you'll find that like
things are things generally are much
things are things generally are much
easier to have working and like when
easier to have working and like when
things do break it is way easier to fix
things do break it is way easier to fix
stuff than in any other Library cuz I
stuff than in any other Library cuz I
don't have like giant Stacks and stacks
don't have like giant Stacks and stacks
and stacks of like abstracted blackbox
and stacks of like abstracted blackbox
code it's very very simple the
code it's very very simple the
implementation of
implementation of
stuff like you can actually read the
stuff like you can actually read the
entire Puffer for Liv stack end to end
entire Puffer for Liv stack end to end
in a couple of hours and have a good
in a couple of hours and have a good
understanding of exactly how puffer is
understanding of exactly how puffer is
doing everything which is not you can't
doing everything which is not you can't
say that for any other Library other
say that for any other Library other
than like clean RL which is well clean
than like clean RL which is well clean
RL doesn't do the lower level infra
RL doesn't do the lower level infra
right it just does the uh the train Loop
right it just does the uh the train Loop
but like you can go through the whole
but like you can go through the whole
lower level infra Huffer in like a
lower level infra Huffer in like a
couple of hours it's only a couple
couple of hours it's only a couple
thousand lines of code
ah so it doesn't save over here
I can get rid of this
I can get rid of this
check I don't think it's needed
yeah should not be
needed right here
all right third time's a
charm that looks to me like I messed
charm that looks to me like I messed
with one of the rappers and broke
with one of the rappers and broke
something most
something most
likely we'll
see make sure that this works for you
see make sure that this works for you
first I need puffer Li stack visualized
first I need puffer Li stack visualized
in my mind well I have a white paper I
in my mind well I have a white paper I
have the stuff on the website I have a
have the stuff on the website I have a
26 minute video going through the entire
26 minute video going through the entire
RL stack and I have a hour and a half
RL stack and I have a hour and a half
video of me reading the archive paper
video of me reading the archive paper
and giving all my thoughts on it I have
and giving all my thoughts on it I have
content out there for you
right I do have content for this
I watch it all well thank
you I'm glad to see people actually like
you I'm glad to see people actually like
getting engaged with uh know engaging
getting engaged with uh know engaging
with the library and using stuff and
with the library and using stuff and
like no it's actually it's worth making
like no it's actually it's worth making
the content right if people actually use
the content right if people actually use
it uh watch it and learn from
it let me know if there's other stuff
it let me know if there's other stuff
that would be useful to have that's like
that would be useful to have that's like
you know decently able to
make just need to put the hours
make just need to put the hours
in yeah it's probably like a good four
in yeah it's probably like a good four
hours or so to like understand
hours or so to like understand
everything but that's more than you even
everything but that's more than you even
need to start using it right that's like
need to start using it right that's like
4 hours to understand the entire
4 hours to understand the entire
architecture of a library and also like
architecture of a library and also like
my plans on exactly what I'm doing with
my plans on exactly what I'm doing with
the whole future of RL should be pretty
the whole future of RL should be pretty
good okay so this is actually the
good okay so this is actually the
correct
correct
uh this is the intended Behavior here
uh this is the intended Behavior here
because it just should it should refuse
because it just should it should refuse
to train because it's done with the
to train because it's done with the
training steps so if I just open real
training steps so if I just open real
quick config
quick config
yaml where is it config
yaml where is it config
yaml and I just increase this to
2 you can see now it'll keep training
2 you can see now it'll keep training
right I fixed it for you
I'm going to push
this really liked the section that on
this really liked the section that on
Academia finishing PhD and can't talk
Academia finishing PhD and can't talk
about this yeah I I know your
about this yeah I I know your
pain I went through there was much
pain I went through there was much
suffering and none of it was my
suffering and none of it was my
advisor's fault my advisor was great but
advisor's fault my advisor was great but
like you want to you if you want to have
like you want to you if you want to have
a fun time I I should show the uh I
a fun time I I should show the uh I
should post the puffer lib paper reviews
should post the puffer lib paper reviews
like this is like a thousand star
like this is like a thousand star
insanely fast growing project with
insanely fast growing project with
full-time support and I got one of the
full-time support and I got one of the
reviewers said that it would be damaging
reviewers said that it would be damaging
to The credibility of nurs as a venue to
to The credibility of nurs as a venue to
publish puffer lip how's that is a thank
publish puffer lip how's that is a thank
you for doing uh know free full-time
you for doing uh know free full-time
open source work for the community
open source work for the community
right [ __ ]
[ __ ] like what
is going to be real damaging to the uh
is going to be real damaging to the uh
credibility of nurs as a conference when
credibility of nurs as a conference when
like puffer gets even bigger and this
like puffer gets even bigger and this
review is on her own page it's like
well I am that petty I will put it on
well I am that petty I will put it on
the front page after uh the deadline for
the front page after uh the deadline for
first
stuff all right I'm going to push this
stuff all right I'm going to push this
to main uh but you're going to have to
to main uh but you're going to have to
make me a deal okay I'm going to put
make me a deal okay I'm going to put
this I'm going to push this to main I
this I'm going to push this to main I
have not tested all the M's and stuff so
have not tested all the M's and stuff so
if you get any weird bugs with loading
if you get any weird bugs with loading
or you get weird training bugs that mean
or you get weird training bugs that mean
I probably broke something else really
I probably broke something else really
important by pushing this to main for
important by pushing this to main for
you you have to tell me that's the deal
you you have to tell me that's the deal
okay can we agree to
that I'll push this to main right now if
that I'll push this to main right now if
you're
agree okay got a
agree okay got a
deal there you go there's your fix
hey Nathan
welcome I've been looking for you you
welcome I've been looking for you you
know
know
I got uh some incentive for you to do
I got uh some incentive for you to do
some environment
work puffer
work puffer
Dogg your environment
Dogg your environment
here click
here click
Play Click play loads
Play Click play loads
instantly runs neural nuts and browser
instantly runs neural nuts and browser
now capable of running Comet lstm
now capable of running Comet lstm
policies in browser too
you can do all
this let me just make sure that that
this let me just make sure that that
wasn't a problem hold on I'll be back in
wasn't a problem hold on I'll be back in
one minute
guys
e
e
e e
all
all
[Music]
[Music]
right hey
folks trying to understand paper right
folks trying to understand paper right
now so I'll get to anything that's
now so I'll get to anything that's
broken perfect and I can also remove
broken perfect and I can also remove
this noise filter now and talk
this noise filter now and talk
normally because the maintenance for the
normally because the maintenance for the
day is done
yeah there we go
cool perfect
if those are the questions for now then
if those are the questions for now then
I I'll get back to the MOBA stuff for
I I'll get back to the MOBA stuff for
the time
being ping me on the YouTube chat or
being ping me on the YouTube chat or
whatever if I missed up but I'll try to
whatever if I missed up but I'll try to
put this window up
here all
right
for for
okay let me remember what the heck we
okay let me remember what the heck we
were doing here right we were fixing the
were doing here right we were fixing the
python
python
bindings
so it's going to have to rebuild all the
so it's going to have to rebuild all the
scon stuff uh what we were doing now is
scon stuff uh what we were doing now is
we were taking the C implementation
we were taking the C implementation
of the Moa environment and where we were
of the Moa environment and where we were
adding a code Pathway to bind it to the
adding a code Pathway to bind it to the
python uh the python hooks for puffer so
python uh the python hooks for puffer so
that we can train directly on the C
that we can train directly on the C
version of the environment and then once
version of the environment and then once
we retrain
we retrain
correctly we will
correctly we will
um well we will be able to take
um well we will be able to take
the the new policies and put them
the the new policies and put them
directly onto the C version of the MOBA
directly onto the C version of the MOBA
and then it'll be trained and evaluated
and then it'll be trained and evaluated
in the same version of the environment
in the same version of the environment
so it won't get stuck on walls and do
so it won't get stuck on walls and do
weird things like it's happening
now I have a quick question yeah no
now I have a quick question yeah no
worries uh okay I did not miss a Discord
worries uh okay I did not miss a Discord
thing
sure speaking of which if you're in a
sure speaking of which if you're in a
lab that does a bunch of RL like we do
lab that does a bunch of RL like we do
provide extend support for free to
provide extend support for free to
academic Labs so that's a
academic Labs so that's a
thing I understand that the syon M are
thing I understand that the syon M are
much faster and it's easier to build one
much faster and it's easier to build one
with all that you've done as you
with all that you've done as you
mentioned with rebuilding minig grid
y I assume the question is coming
y I assume the question is coming
next I plan to use puffer with an
next I plan to use puffer with an
environment using Unreal or RL in games
environment using Unreal or RL in games
sure you can do that
gymnasium environment using puffers
gymnasium environment using puffers
gymnasium rapper yep that's
fine do you recommend something
fine do you recommend something
else uh I mean there really
else uh I mean there really
isn't there really aren't great tools uh
isn't there really aren't great tools uh
outside of that uh as far as I'm aware
outside of that uh as far as I'm aware
not open sourced at least so yeah if the
not open sourced at least so yeah if the
easiest way is going to be to just have
easiest way is going to be to just have
something that exports uh state right if
something that exports uh state right if
you can get the game to if you can run
you can get the game to if you can run
the game headless and get it to export
the game headless and get it to export
local state into like a reasonable
local state into like a reasonable
observation space right and then just
observation space right and then just
like ideally for train time if you can
like ideally for train time if you can
just like cut down on any portions of
just like cut down on any portions of
the game computation that are really
the game computation that are really
slow but uh are completely irrelevant to
slow but uh are completely irrelevant to
training right you know maybe you have
training right you know maybe you have
just like some extra stuff for visuals
just like some extra stuff for visuals
or whatever some pre-computation or like
or whatever some pre-computation or like
some some uh non pre visual stuff like
some some uh non pre visual stuff like
anything you can cut down to make the
anything you can cut down to make the
environment really fast is going to be
environment really fast is going to be
helpful to you but yeah you can just use
helpful to you but yeah you can just use
puffer gymnasium wrapper for uh for sure
puffer gymnasium wrapper for uh for sure
like we have this Advanced API that I
like we have this Advanced API that I
use for uh the sea environments but
use for uh the sea environments but
that's only relevant when your
that's only relevant when your
environment gets to be really really
environment gets to be really really
fast if you're not running it at like
fast if you're not running it at like
you know well into the tens of thousands
you know well into the tens of thousands
of steps per second you can just use the
of steps per second you can just use the
gymnasium wrapper and there's going to
gymnasium wrapper and there's going to
be zero noticeable overhead
that's what it is there for right that
that's what it is there for right that
is what it is there
for hold
on let me just double
check okay so yeah this is still
check okay so yeah this is still
academic work you're
good can continue discovery of puffer
good can continue discovery of puffer
tomorrow sure thanks for dropping
[Music]
by seg
by seg
fault right let's see why this thing
fault right let's see why this thing
segals probably wrong dimensions of
something
for e
oh wow we got a lot of YouTube folks
oh wow we got a lot of YouTube folks
welcome everyone
why is this thing seg fating doesn't seg
why is this thing seg fating doesn't seg
fault when we run it in pure
C well this function is totally
C well this function is totally
wrong oh that's so gross it just segals
wrong oh that's so gross it just segals
if you have the function with the wrong
if you have the function with the wrong
definition I guess
definition I guess
instead of giving you a reasonable error
instead of giving you a reasonable error
message that's
disgusting no the C is fine the python
disgusting no the C is fine the python
is fine it's the bindings when you go
is fine it's the bindings when you go
between the two of them that's really
between the two of them that's really
obnoxious every time
obnoxious every time
every
time but I think all I have to do is
time but I think all I have to do is
grab this function signature which we've
grab this function signature which we've
tested in
C and now this has to go here
right so now we have our uh our full
right so now we have our uh our full
signature and then
we have to make sure that we're matching
we have to make sure that we're matching
this as
this as
all though really this should not
all though really this should not
seg maybe just seg fed because I didn't
seg maybe just seg fed because I didn't
Define the uh the Prototype correctly
I see the way that these are being
I see the way that these are being
assigned is not good
assigned is not good
either now that I'm looking at this
here yeah I think that we need to like
here yeah I think that we need to like
do this like one
line oh that's not bad
data then we don't need any of this
anymore this is just s.
end so that's actually much nicer like
end so that's actually much nicer like
yeah the uh the signatures are gross but
yeah the uh the signatures are gross but
you can clearly see this is just like
you can clearly see this is just like
passing a bunch of data to the
passing a bunch of data to the
underlying in
net that should not have compiled that
net that should not have compiled that
quickly I can only assume it's um not
quickly I can only assume it's um not
compiling the correct
stuff ah right
stuff ah right
here for
and then it just needs AI path
and then it just needs AI path
buffer this was something that we
added really shouldn't need this
technically We'll add it just in case I
technically We'll add it just in case I
guess really shouldn't be necessary
guess really shouldn't be necessary
though
but this is
but this is
good and then we have to to
pass this to the inet
okay
okay
and can't include
R.H
R.H
right I remember this being a pain
do I have to just set this in LD Library
do I have to just set this in LD Library
path
and that's really obnoxious that it
and that's really obnoxious that it
can't find
um the
um the
RB
code I thought I'd messed with this
code I thought I'd messed with this
before and I'd found a good way around
before and I'd found a good way around
this didn't I
when I was doing like the sea snake
when I was doing like the sea snake
stuff I do
this or did I
not include D
not include D
here hang on maybe I can add it to
here and I do like
rayb do
that
that
ooh that works
interesting it says that it finds
it does it need to have a is there an
additional there might be an additional
additional there might be an additional
include let's look at setup pi
Library
D what if I do
this still
no well it didn't re it didn't trigger a
no well it didn't re it didn't trigger a
rebuild right
it's just copying though
see if this actually reg yeah this so
see if this actually reg yeah this so
This
This
rebuilds do I
see I rib okay I see the include here
right yeah I see the
include but I don't see SL
include but I don't see SL
lib
lib
wait there should be a slash lib here
oh wait wait maybe this is the one that
oh wait wait maybe this is the one that
needs the run time okay hold on I have
needs the run time okay hold on I have
an
an
idea yeah so this this one needs LD
idea yeah so this this one needs LD
Library half equal
Library half equal
RB
RB
right still
right still
no could have sworn that would work
it's got to be some way of building
this and no chat
this and no chat
jity chat jippy
time I don't freaking know maybe this
time I don't freaking know maybe this
will maybe this will have a summary of
will maybe this will have a summary of
docks
see include for
yeah so Library dur is what I
expected maybe you need this libraries
expected maybe you need this libraries
flag
does that do
anything kind of weird that you
would but sure why not we'll uh we'll
would but sure why not we'll uh we'll
try
try
it each element in libraries must be a
it each element in libraries must be a
twole what
huh it just said like yeah this aor
huh it just said like yeah this aor
shouldn't be there
okay so they're just like there a bunch
okay so they're just like there a bunch
of annoying Flags apparently
here each element of Library should be a
here each element of Library should be a
twole okay set up. P do
wow look at this this sample project
wow look at this this sample project
doesn't include all of the
doesn't include all of the
stuff that you would actually need
this is not
it extension
modules includers
oh I guess it's
oh I guess it's
uh no I have it
uh no I have it
correct what the hell is this this is
correct what the hell is this this is
like not the same as the
like not the same as the
docks I mean this extra compile zard
docks I mean this extra compile zard
thing doesn't exist right
Library
Library
dur unknown distribution
dur unknown distribution
option this is an option in
extensions I see so this is
not do I really need to use this
not do I really need to use this
extensions thing
everything gets dice here if I have to
everything gets dice here if I have to
um use the like the official like the
um use the like the official like the
extension thing because it starts moving
extension thing because it starts moving
your build files to dumb places
maybe it's in scon I
where's the docks for this
where's the docks for this
function why are there no docks
for so this is what we want
for so this is what we want
here I guess we have to do it this way
but it's very obnoxious because I'll
but it's very obnoxious because I'll
show you what happens
I do not know why it does
but literally like why don't they have
but literally like why don't they have
docks for this stuff like why is it so
docks for this stuff like why is it so
hard to find the
hard to find the
docks for
extensions Bo
okay here it
okay here it
is
name not a file name but a python dotted
name not a file name but a python dotted
name okay
and then it says that we don't
and then it says that we don't
need says we can't use this right it's
fine
o error opening
o error opening
file message file or directory but we
file message file or directory but we
actually got
somewhere now seg faults
so is this now um is this a path error
is this going to be a path error
here don't we load stuff here
I guess these are like these paths are
I guess these are like these paths are
done properly Maybe
maybe we have the reset args
wrong no the reset looks good
I mean there are only so many places
I mean there are only so many places
that can go wrong
right we can just go like
right we can just go like
this it would be really nice actually if
this it would be really nice actually if
we could compile hold on instead of
we could compile hold on instead of
doing this Jank stuff here
doing this Jank stuff here
right I have one
idea is there a way to pass compile
Flags oh wait but it compiles with GCC
it looks like we can do
it looks like we can do
it extra compile arcs
right what if we do it like
this dasf sanitizer dress
does this actually tell us now where SE
does this actually tell us now where SE
bolts
are that would be nice
why is this taking so
why is this taking so
long oh jeez cuz it's going to run the
long oh jeez cuz it's going to run the
address sanitizer
address sanitizer
on it's going to run the address
on it's going to run the address
sanitizer on the scon file right
that's not what we
want oh it did
want oh it did
build I think it did
build I think it did
build so let's let's see if it at least
build so let's let's see if it at least
does something for us now
what
is obnoxious
scon let's see if anybody's done
this oh yeah literally here's our exact
thing e
let's see so this is they have extra
let's see so this is they have extra
link
ARS well maybe they have extra link CS
ARS well maybe they have extra link CS
let's see if this is
real and let's see if it's actually
real and let's see if it's actually
going to take forever to compile
going to take forever to compile
still because that's really
obnoxious I mean what's the alternative
obnoxious I mean what's the alternative
to this though
to this though
right it's obnoxious how much code syon
generates I don't know
shared
shared
leisan I think we might not need this
leisan I think we might not need this
one I think they said that you just
one I think they said that you just
need F share to dress
need F share to dress
maybe these compile times are just God
maybe these compile times are just God
awful
awful
though I mean at least I do all the
though I mean at least I do all the
debugging for the most part in C
at least maybe this will actually give
at least maybe this will actually give
me
something as soon as we fix this
something as soon as we fix this
compilation stuff I'm sure that the um
compilation stuff I'm sure that the um
the actual like python binding is going
the actual like python binding is going
to be very very
to be very very
simple for
not this where did the where did the
not this where did the where did the
other one
go this is compiled
go this is compiled
time for
is there no simpler way to do this
I just do this
I just do this does it do it I doubt
it
it
yeah oh I have to do
export
export
oh that does
oh that does
something hold on that actually did
something hold on that actually did
something
oh the M the leaks are in the freaking
oh the M the leaks are in the freaking
alligator itself what the heck
yeah no this is trying to run it on the
yeah no this is trying to run it on the
entire program let's not do
entire program let's not do
this let's just not do
this let's just not do
this unfortunately this is like too slow
this unfortunately this is like too slow
and too clunky to deal with doing it
and too clunky to deal with doing it
this way
we'll just do normal
build and we'll do some
build and we'll do some
prints sadly that's going to be the
prints sadly that's going to be the
easiest way of doing it with um how
easiest way of doing it with um how
obnoxious the uh buffer bindings or the
obnoxious the uh buffer bindings or the
the python bindings are
we'll just go to reset here and we'll
we'll just go to reset here and we'll
just add some print outs
okay perfect
okay perfect
so we get a resetting
so we get a resetting
towers and then it fails in res setting
towers and then it fails in res setting
Towers interesting
so what do we pass for
entities we do pass entities
right do we pass these in the uh in this
right do we pass these in the uh in this
order
though maybe we don't pass the buffers
though maybe we don't pass the buffers
in the right order
grid AI paths AI path
grid AI paths AI path
buffer pids
entities entity
entities entity
data
OBS
OBS
map
map
extra or summer of wordss
extra or summer of wordss
Norm
Norm
actions that looks good to me
so why would this be the
case let's see if we can find anything
200 by
206 yeah that's correct
just put some more
prints essentially what I think is
prints essentially what I think is
happening here is uh one of the
happening here is uh one of the
variables is not the size that I think
variables is not the size that I think
it
is okay address
and then grid here is not good
and then grid here is not good
right the grid is not good yes this is
right the grid is not good yes this is
what
happens and then the address here
is
14370 that's a valid
address power
address power
one
F oh yeah that's fine so this is
F oh yeah that's fine so this is
correct and
correct and
then the issue looks like it's with the
then the issue looks like it's with the
map
map
grid so why would there be an issue with
grid so why would there be an issue with
the map
the map
grid let us see
the map grid gets read from
file I bet you the path is
wrong
right I'm going to paste the hard I'm
right I'm going to paste the hard I'm
going to hard code the path for now just
going to hard code the path for now just
to see
to see
to
confirm and
confirm and
uh actually you know what the easiest
uh actually you know what the easiest
way to do
way to do
this is to
just
just
if is there an exit there's no exit like
if is there an exit there's no exit like
this and see is
this and see is
there turn
there turn
one right
program is there an exit thing oh there
program is there an exit thing oh there
is an
exit there is an exit
function is it one
build the load game
build the load game
map ah and we actually have error
map ah and we actually have error
opening
file kind of silly how that happens
that's
gross yeah that's gross
it's 16,000
it's 16,000
characters how much is
that that's a lot right yeah that would
that that's a lot right yeah that would
be2 200 lines I don't want to just paste
be2 200 lines I don't want to just paste
that into the
that into the
file but like do don't
file but like do don't
I imagine that I just pasted all that
I imagine that I just pasted all that
data into the
data into the
file and then I never have to worry
file and then I never have to worry
about this path
issue I think what we'll do is for now
issue I think what we'll do is for now
we'll just put the absolute path or
we'll just put the absolute path or
whatever but the thing is like I know
whatever but the thing is like I know
it's going to mess up
it's going to mess up
I know this is going to mess stuff
up wait you can just Tash include it
up wait you can just Tash include it
right
yeah for
not doing
this
xxd that's funny
oh that's so funny
this is a
this is a
thing look at that that's freaking
hilarious yeah look at
hilarious yeah look at
that that's so
funny for
G that's really so
G that's really so
funny let's see do you think this
funny let's see do you think this
actually
actually
works that's like kind of hilarious if
works that's like kind of hilarious if
you think about it
you just convert the map data like
this I mean on a scale of stupid to very
this I mean on a scale of stupid to very
stupid I think that this is only like
stupid I think that this is only like
somewhat
[Applause]
[Applause]
stupid and in fact what we can do what
stupid and in fact what we can do what
we'll probably do is we'll take all
we'll probably do is we'll take all
these constants that are at the top and
these constants that are at the top and
we'll like figure out how to get them
we'll like figure out how to get them
into one file eventually for
this is I just I just have to specify
this is I just I just have to specify
the extra source file
right presumably
really build
now
for e
need to add it to sources
maybe is it game data NP or
numpy sure I'm not being dumb
just gam m.h I'm just being dumb right
game
game
map that age like this
oh that just
oh that just
works I don't need to do
anything look at
anything look at
that works
now
now
oops now we can get rid of all these
oops now we can get rid of all these
garbage prints
[Applause]
[Applause]
right it's kind of funny just to include
right it's kind of funny just to include
the uh the constants or whatever
randomized Tower
HP do I need to call
HP do I need to call
this hold
on yeah so I do need to call this I
on yeah so I do need to call this I
believe all I have to do this is easy
believe all I have to do this is easy
though this is what syon is
though this is what syon is
for this is very very
easy all I have to do is add the
easy all I have to do is add the
signature of the exposed method
here like
this and then I should be able to use
this and then I should be able to use
this method from
this method from
syon uh do I have to I think I have to
syon uh do I have to I think I have to
Define it here as well technically
Define it here as well technically
technically
technically
right maybe not I might just be able to
right maybe not I might just be able to
do
do
this let me
see I might have to add like a
see I might have to add like a
little yeah I might have to add a little
little yeah I might have to add a little
binding here so because it's it's
uh yeah the reason I have to do this is
uh yeah the reason I have to do this is
just because it's the object oriented
just because it's the object oriented
API which frankly there's Absolut no
API which frankly there's Absolut no
reason to need it's just that like
reason to need it's just that like
python
programmers I don't know objects are
dumb not really
though I doing stuff
let's see what happens if I have it to
let's see what happens if I have it to
set till one end instead of having 200
set till one end instead of having 200
freaking
environments probably that's like
environments probably that's like
driving it
nuts there we go
nuts there we go
puffer mode but has no attribute render
puffer mode but has no attribute render
mode okay
you know what attribute okay there's no
render I guess I didn't add
render so I have to add the client here
render so I have to add the client here
then don't
I I think I have to add the client
and we have to add the
client map
client map
renderer game
renderer game
renderer just do like this
this is C type stff
then we need init game renderer
we will
we will
need render
game and we also need the
free y this
free y this
one game render
and now all I have to do is we
and now all I have to do is we
add uh game
renderer well to this environment
renderer well to this environment
really we just
really we just
add be def game renderer renderer right
add be def game renderer renderer right
and then on a knit here
and then on a knit here
we do self.
render none or null I should
render none or null I should
say and then when we do
say and then when we do
render reset step def render don't need
render reset step def render don't need
the sub
scale we do if render is null then we
scale we do if render is null then we
init it
init it
render render game S.M
frame ah
frame mildly awkward but let's see if
frame mildly awkward but let's see if
this gets us
something okay cannot convert return
something okay cannot convert return
self. renderer well we don't need
this Shader not a type identify
just have to
do well actually do I not I only
need literally I only need the uh I only
need literally I only need the uh I only
need the Prototype don't
need the Prototype don't
I hold on I think it's the case that if
I hold on I think it's the case that if
you just I think you can just literally
you just I think you can just literally
do it like
do it like
this because the thing is like I don't
this because the thing is like I don't
need to know it doesn't need to know
need to know it doesn't need to know
what that renderer
what that renderer
has right cuz I'm not actually like
has right cuz I'm not actually like
making a game renderer in
here
yeah oh Rend mode perfect I saw it it it
yeah oh Rend mode perfect I saw it it it
popped up on my other screen hold
on P
my God
yeah this is
interesting oh but this is out of bound
interesting oh but this is out of bound
stuff
okay so apparently the obser ations have
okay so apparently the obser ations have
some weird data in
them so we'll have to fix that you know
them so we'll have to fix that you know
we have a couple little bugs uh to fix
we have a couple little bugs uh to fix
delt so here's what I'm going to do I'm
delt so here's what I'm going to do I'm
going to use the restro real quick I'm
going to use the restro real quick I'm
going to take a few minutes here I got
going to take a few minutes here I got
to make myself a shake and do a couple
to make myself a shake and do a couple
of things I'll be right back and then uh
of things I'll be right back and then uh
we'll have like a good solid 3 hours in
we'll have like a good solid 3 hours in
which to try to get this thing to work
which to try to get this thing to work
and uh we'll see how fast it is as well
and uh we'll see how fast it is as well
I'm curious to see if it's fast already
I'm curious to see if it's fast already
or if I'm going to have to do similar
or if I'm going to have to do similar
optimiz ations as I did before so I'll
optimiz ations as I did before so I'll
be right
back
e
e
e
e
e
e
e
e
e
e
e
e
e e
okay okay
so why is there garbage data in
so why is there garbage data in
observations why is the garbage
observations why is the garbage
data let's see
so let me also double check this slack
so let me also double check this slack
thing
whoops let me just check this real
whoops let me just check this real
quick
messages for
all
right GPU Drive folks were like ah it's
right GPU Drive folks were like ah it's
you know three years on one sim as well
you know three years on one sim as well
seven on neural MMO
Jesus s on one
sim this shouldn't be that bad
right yeah I mean all we got to do here
right yeah I mean all we got to do here
is um see if it sets the data at any
is um see if it sets the data at any
point to something stupid
point to something stupid
right which
like oh which is right here right uh
like oh which is right here right uh
this can't be negative
one do we zero this
one do we zero this
somewhere yeah we zero this at the top
somewhere yeah we zero this at the top
so all I got to do is move this
right cuz you don't want the negative
right cuz you don't want the negative
one that'll just be zero
one that'll just be zero
right and
right and
the
the
player empty
zero
right
right
oops also is this even putting the right
oops also is this even putting the right
thing into the
thing into the
OBS it isn't right yeah it's got to be
OBS it isn't right yeah it's got to be
map grid of address this was correct to
map grid of address this was correct to
begin
begin
with but
with but
oh wait
no map grid
Adder yeah yeah yeah
Adder yeah yeah yeah
because this this should be this way I
because this this should be this way I
believe I'm pretty
sure well no wait
sure well no wait
when it should have been fine to begin
when it should have been fine to begin
with right
maybe we just do
maybe we just do
this it is rendering on the side screen
this it is rendering on the side screen
though it's just it's not rendering for
though it's just it's not rendering for
long enough for me to show you all yet
okay so
okay so
here we get Cuda
assert and we didn't trigger the
assert and we didn't trigger the
environment uh we didn't trigger the
environment uh we didn't trigger the
environment print which is weird
environment print which is weird
right
right
so I don't know let's just go look at
so I don't know let's just go look at
the data Maybe
TCH and
TCH and
then one
then one
hot if CNN
features z.
Max break point here
oops
okay there's some 255s in
here oh there's a bunch of garbage in
here oh there's a bunch of garbage in
here
here
look at
that
uh presumably these are player IDs or
uh presumably these are player IDs or
something right
empty
position grid ID radiant
dire so I don't see any
dire so I don't see any
way I don't see any way that they should
way I don't see any way that they should
be able to
be able to
be garbage
data let me see if it even makes
sense so we get zero and
sense so we get zero and
one and then yeah on the reset we're not
one and then yeah on the reset we're not
going to see Towers or creeps or
going to see Towers or creeps or
anything like
anything like
this uh we get
this uh we get
six I don't know why seven isn't
six I don't know why seven isn't
here eight
10 15 and then 34
randomly why would it be like 34
what if we do like
this this is reasonable right you can
this this is reasonable right you can
actually see kind of right that this is
actually see kind of right that this is
the centered
the centered
agent and here are some other
agent and here are some other
agents it's got It's carry here it sees
agents it's got It's carry here it sees
its teammates
right one
right one
uh this one se's
garbage why does this one see
garbage two
garbage two
again this one is now this is correct
again this one is now this is correct
right well hang
right well hang
on is this correct I don't see a
on is this correct I don't see a
centered agent on
here
garbage definitely something
weird is there like a sign issue or
weird is there like a sign issue or
something dumb
unsign Char star observations
unsign Char star observations
map unsign Char star observations map
right you
and8 and then what's
see num M's
see what happens in the reset
here 1 by 10 by 11 by 11x 4 and it's all
zero that looks correct to me
I mean could it be in the wrong
I mean could it be in the wrong
order is this like a wrong order thing
order is this like a wrong order thing
maybe
don't think
so it's also very weird to me that
so it's also very weird to me that
like you don't ever see the data being
like you don't ever see the data being
written
in e
oh wait hold
oh wait hold
on
DX plus
viz
viz
oh now this is good isn't
it 11 by 11
it 11 by 11
by4 observations map
this could also be a memory
this could also be a memory
thing which we'd be able to check for in
thing which we'd be able to check for in
purec
I'm trying to think like what this would
I'm trying to think like what this would
even
be okay wait hold on a
second I have an
second I have an
idea I have an
idea I have an
idea if I do
idea if I do
this is it still broken
Bren cuz this is the only other place
Bren cuz this is the only other place
I'm setting map data
yeah still getting all this
yeah still getting all this
garbage wait did I
garbage wait did I
recompile I don't think I recompiled did
recompile I don't think I recompiled did
I yeah I did
I yeah I did
[Music]
[Music]
okay so that doesn't
help okay what if I don't set
anything
anything
right for
well this definitely changes the
data but there's a bunch of garbage in
data but there's a bunch of garbage in
here and I'm not even setting it right
oh wait hold
oh wait hold
on
um if this is what I think it is I'm
um if this is what I think it is I'm
going to be really very quite irritable
going to be really very quite irritable
I'm going to be very very
I'm going to be very very
irritable and I think we're all going to
irritable and I think we're all going to
learn
learn
something we're going all learn
something we're going all learn
something very
something very
silly I could be wrong if I'm wrong here
silly I could be wrong if I'm wrong here
though I have no idea what the hell it
though I have no idea what the hell it
would be
yep that fixes
yep that fixes
her
her
so God how do I even explain what this
so God how do I even explain what this
mess is
mess is
so maybe I should just go to the file
so maybe I should just go to the file
and show you
okay
okay
so where the hell's the
data okay so right here was the
data okay so right here was the
problem I didn't even know that this was
problem I didn't even know that this was
remotely possible for what it's worth
so what appears to be happening here
so what appears to be happening here
right is
right is
that I split this data along the last
that I split this data along the last
axis
axis
here so basically I split the data along
here so basically I split the data along
columns and then I pass these pointers
columns and then I pass these pointers
separately into the
environment uh the issue with doing that
environment uh the issue with doing that
though is that those are actually not
though is that those are actually not
contiguous chunks of memory
so when you give it the pointer to the
so when you give it the pointer to the
map there's like some data in the first
map there's like some data in the first
row but then it's not contiguous and
row but then it's not contiguous and
then you right into the next data so by
then you right into the next data so by
setting the extra data I was overflowing
setting the extra data I was overflowing
into the map
into the map
data which is very
data which is very
silly very
silly and actually now that I'm thinking
silly and actually now that I'm thinking
about it very very difficult to avoid
properly how do you avoid
that I mean I guess technically
like I'm going to have to make
like I'm going to have to make
this just be flat buffer data right
this just be flat buffer data right
that's
irritating all right I know how to do it
irritating all right I know how to do it
it's going to be obnoxious though so I'm
it's going to be obnoxious though so I'm
going to take a quick
going to take a quick
second check a couple things finish the
second check a couple things finish the
shake and then we'll get into
that really cool to see the amount of
that really cool to see the amount of
support on this
very cool to
see so what we're essentially we're
see so what we're essentially we're
going to have to do is we're going to
going to have to do is we're going to
have to ocate just one observation
have to ocate just one observation
tensor and we're not going to be allowed
tensor and we're not going to be allowed
to slice it we're going to just have to
to slice it we're going to just have to
pass that big block of contiguous memory
pass that big block of contiguous memory
into C and then we're going to have to
into C and then we're going to have to
manage it
ourselves obnoxious veryy but um I mean
ourselves obnoxious veryy but um I mean
the cool thing with
this this means that our
this this means that our
simulation this when we run this
simulation this when we run this
distributed the C code it's going to
distributed the C code it's going to
literally from C it's going to be
literally from C it's going to be
writing data observation data directly
writing data observation data directly
into big shared memory buffers so like
into big shared memory buffers so like
you instantly have access to data from
you instantly have access to data from
all the different simulators on the main
all the different simulators on the main
process which is very very
cool it's also something that
cool it's also something that
is completely
is completely
impossible um if a simulator has not
impossible um if a simulator has not
been designed with that in mind at least
been designed with that in mind at least
to some extent like you need to have the
to some extent like you need to have the
output buffer be an argument to the
output buffer be an argument to the
program
essentially
essentially
okay 5:00 p.m. I've got two and a half
okay 5:00 p.m. I've got two and a half
hours to get this
hours to get this
done this and several other things
done this and several other things
and this is what we're going to
do self. buff.
observations goodbye
this is now just
observations cify this a little
bit yeah there we
go we have to change the signature as
go we have to change the signature as
well
this is the one downside of having
this is the one downside of having
um you know these bindings look like
um you know these bindings look like
this you do get these at least I mean I
this you do get these at least I mean I
can't even really say that this is like
can't even really say that this is like
a downside of The Binding as much as
a downside of The Binding as much as
just like this is a very fancy
just like this is a very fancy
environment that has a lot of different
environment that has a lot of different
types of fancy data in it probably by
types of fancy data in it probably by
the end of this we're going to discover
the end of this we're going to discover
that some of these are redundant we'll
that some of these are redundant we'll
be able to pair it down at least a
be able to pair it down at least a
little bit but but for now you know we
little bit but but for now you know we
do our we do our little bit of
do our we do our little bit of
formatting here and
there there so we got rid of the
there there so we got rid of the
OBS now here this is just observations.
OBS now here this is just observations.
data no longer need
this and we are going to now be fully
this and we are going to now be fully
responsible for managing this giant
responsible for managing this giant
obnoxious block of contiguous
memory uh which now that I'm thinking of
memory uh which now that I'm thinking of
it is going to be even less fun than I
it is going to be even less fun than I
originally
originally
anticipated oh
anticipated oh
joy yeah that's going to be even less
joy yeah that's going to be even less
fun than I originally
fun than I originally
anticipated that's okay
though we'll do what we have to do
so
here we have to be very
careful have to be very careful
it is actually going to look a little
it is actually going to look a little
simpler when we're done it's just going
simpler when we're done it's just going
to hurt my brain a little
bit it's
bit it's
pids and now right here
I think what we how we can do this which
I think what we how we can do this which
will be a little bit nicer
maybe you can do unsign
Char this will be 11 * 11 * 4 + 26
so now we get a 2d array with this nice
so now we get a 2d array with this nice
view and
then we can do OBS map
then we can do OBS map
right is going to be equal
you have to cut this Dimension off
though
Pati what I'm doing here is I'm grabbing
Pati what I'm doing here is I'm grabbing
the first uh the first bites of the
the first uh the first bites of the
current row of the array and I'm going
current row of the array and I'm going
to put them into this OBS map and then
to put them into this OBS map and then
OBS xra
here this one doesn't need to be
here this one doesn't need to be
multi-dimensional because it's just it's
multi-dimensional because it's just it's
a a flat buffer like
this this is just and uh
this this is just and uh
obser vations
obser vations
of 11 * 11 *
4 and I think that this will allow us to
4 and I think that this will allow us to
do I mean we're going to have to figure
do I mean we're going to have to figure
out this intax here but I'm pretty sure
out this intax here but I'm pretty sure
that with this we can leave everything
that with this we can leave everything
else exactly the way it was and it'll
else exactly the way it was and it'll
work uh of course in order to confirm
work uh of course in order to confirm
this now I I'm going to have to mess
this now I I'm going to have to mess
with the Moa C
with the Moa C
code which is a bit
obnoxious and also now we have to do
obnoxious and also now we have to do
some data splitting [ __ ] I
think which will make our C forward pass
think which will make our C forward pass
uh slightly
uh slightly
slower not really actually not really at
slower not really actually not really at
all I think it'll be about the same
all I think it'll be about the same
speed
oh yeah look so we have this net OBS 2D
oh yeah look so we have this net OBS 2D
this is totally
fine here this is going to be
fine here this is going to be
observations start
observations start
actions okay
I think literally all I have to do is
I think literally all I have to do is
add 26 to
add 26 to
this we're going to get rid of all these
this we're going to get rid of all these
magic numbers at some point obviously
magic numbers at some point obviously
but I think in the meantime literally
but I think in the meantime literally
all I have to do is add 26 to
this yeah
B *
B *
26 what the
heck B time
26 how did I get
this oh because it's n OBS one
this oh because it's n OBS one
which no longer exists so this is
observations we'll have to do a little
observations we'll have to do a little
bit more
indexing uh and now this is B
offset Plus
11 * 11 * 4 plus I I'm fairly confident
11 * 11 * 4 plus I I'm fairly confident
that's
that's
correct not
correct not
positive but fairly
confident and actually in some ways this
confident and actually in some ways this
simplifies the code it makes the
simplifies the code it makes the
indexing slightly more
obnoxious makes the indexing slightly
obnoxious makes the indexing slightly
more
more
obnoxious but that's okay
obnoxious but that's okay
it does actually reduce some
code what the
code what the
heck invalid decimal L
what uh did I corrupt my build file
what uh did I corrupt my build file
somehow
oh I'm
oh I'm
dumb
there
there
okay then we have to
okay then we have to
go get some basic
bugs this is n of observations not
bugs this is n of observations not
observations map
UND
declared subscripted value is not an
declared subscripted value is not an
array pointer or vector
yeah cuz I no longer need the PID
right I'm doing
this I have no idea whether this is
this I have no idea whether this is
efficient we're going to I suspect this
efficient we're going to I suspect this
function is going to need some perf
function is going to need some perf
optimizing so probably we're going to
optimizing so probably we're going to
get stuck doing perf optimization
get stuck doing perf optimization
tomorrow for be decent chunk of
time but uh I mean there's no reason why
time but uh I mean there's no reason why
it should be slower in C than cython
it should be slower in C than cython
obviously it should be a little bit
obviously it should be a little bit
faster in fact
so we should be able to hit well over a
so we should be able to hit well over a
million steps per
million steps per
second million agent steps per
second million agent steps per
second and see maybe
faster obervations
and we forgot that we have more
and we forgot that we have more
signatures to adjust I really don't like
signatures to adjust I really don't like
the number of times you have to uh have
the number of times you have to uh have
like the top level boiler plate but like
like the top level boiler plate but like
some of that is a little outside of my
some of that is a little outside of my
control because like scon mandates a
control because like scon mandates a
little bit of it and like without scyon
little bit of it and like without scyon
we'd be having to write
we'd be having to write
um like the python
um like the python
API which you clutter up your
API which you clutter up your
C I don't know maybe I'll try but I
C I don't know maybe I'll try but I
definitely wouldn't put it in the same
file it
file it
mobile observations map so this is
mobile observations map so this is
observations yeah there's so many
observations yeah there's so many
different places where you have to do
different places where you have to do
this stuff kind of
disappointing allocate
disappointing allocate
MOA all right and then
then oh well this is
gross * 4
gross * 4
plus6 like this is what it should be now
plus6 like this is what it should be now
this is just observations
getting
close idx
uh okay the policy actually work it
uh okay the policy actually work it
seems like they do the same thing as
seems like they do the same thing as
before I mean they're not amazing but
before I mean they're not amazing but
they weren't amazing to begin with
they weren't amazing to begin with
right and he's still doing his
right and he's still doing his
thing let's see if he goes and uses some
thing let's see if he goes and uses some
abilities
abilities
yeah look at
yeah look at
that
that
cool so this guy is
solid now let's see if we can get the
solid now let's see if we can get the
python version
working we did all of this so that the
working we did all of this so that the
python version would actually have the
python version would actually have the
correct memory addresses and the
correct memory addresses and the
observations so we would get correct
observations so we would get correct
observation data
okay there we
go very nice
all I got to do is delete
all I got to do is delete
uh a bunch of garbage
here really just these
here really just these
ones let's you know let's leave them for
ones let's you know let's leave them for
now cuz I might need them let's just
now cuz I might need them let's just
comment
comment
them cuz I did just mess with the neural
them cuz I did just mess with the neural
net
so there is a chance I break
yet oops
should be pretty close to
working welcome YouTube
folks now this is a little concerning to
folks now this is a little concerning to
me that it hasn't done stuff yet
why would this be the
case it worked before is it just not
uh oh wait there's a
uh oh wait there's a
window but it's not working
kind of confused what's
happening I swear this never works the
happening I swear this never works the
only thing that actually ever works is
only thing that actually ever works is
this like Overkill
command that doesn't work that's scary
let's see if that was just something
weird uhoh can't get into my container
there where's the
there where's the
process right here 88
77 why can't I kill this process
yeah this is just not responding
right I don't know how that's even
right I don't know how that's even
possible
literally it's like freezing up my uh my
literally it's like freezing up my uh my
terminal
terminal
here I'm trying to think how that's even
here I'm trying to think how that's even
possible
here can I see this in task
manager no I can't even see it
manager no I can't even see it
here I can see it here but it's just in
VM I'm curious to how that even happens
right python binding to uh C program is
right python binding to uh C program is
unkillable
well kill dash9 does not actually
well kill dash9 does not actually
work let's I get the PID wrong or
work let's I get the PID wrong or
something oh it says it's
gone but I still see it I see it in the
gone but I still see it I see it in the
taskar
oh okay there it goes I guess it just
oh okay there it goes I guess it just
took a
took a
second uh of course now I have to
second uh of course now I have to
immediately run it again
immediately run it again
which is not
which is not
amazing but I mean what else am I
amazing but I mean what else am I
supposed to do except hope that was just
supposed to do except hope that was just
a
weirdo
ah I don't even know how that's
possible 9139
I
bound that a break point
bound that a break point
there for when we eventually figure out
there for when we eventually figure out
how to kill this
thing got to hate unkillable processes
yeah see it like it gets this it's
stuck how is there this thing like this
stuck how is there this thing like this
unreadable
window
window
right that shouldn't be a thing
what if I
what if I
se
se
it that
work
no literally unkillable
no literally unkillable
process kill all all
process kill all all
Ray yeah I've had to do a lot of kill
Ray yeah I've had to do a lot of kill
all Ray in my
time incredibly weird though this is not
time incredibly weird though this is not
even being
even being
multiprocess it's just for whatever
multiprocess it's just for whatever
reason like I have this python binding
reason like I have this python binding
to this C code and I don't know how but
to this C code and I don't know how but
it's like
it's like
unkillable it does eventually
unkillable it does eventually
stop failed to resize TTY
what but uh yeah very
weird okay there we go so now I'm I have
weird okay there we go so now I'm I have
a breakpoint set at least so we'll see
a breakpoint set at least so we'll see
when this happens
does it happen immediately
really that doesn't make sense to me it
really that doesn't make sense to me it
should not be able to happen
immediately I mean we've made some code
immediately I mean we've made some code
changes I
changes I
guess here we'll mess with the c version
guess here we'll mess with the c version
that doesn't do this as soon as I fix
that doesn't do this as soon as I fix
this one
it stops using memory immediately it
it stops using memory immediately it
stops like using compute but it just
stops like using compute but it just
sticks around
there and now it is lagging my auntu
lovely oh yeah my Linux subsystem is
lovely oh yeah my Linux subsystem is
locked up
locked up
completely so I guess we're going to sit
completely so I guess we're going to sit
here waiting for it to decide to fix
here waiting for it to decide to fix
itself otherwise I'm going to have to
itself otherwise I'm going to have to
reboot the whole
reboot the whole
machine well I guess I could reboot WSL
machine well I guess I could reboot WSL
as well couldn't I I'm going to give it
as well couldn't I I'm going to give it
a second
first let me give it a second first to
first let me give it a second first to
see if it just decides to to figure
see if it just decides to to figure
that doesn't look like
it uh
Power okay there we go
it's
it's
stuck can it literally not shut down
WSL I've seen a lot of crazy things in
WSL I've seen a lot of crazy things in
my time I haven't seen that
well folks I'm going to have to
well folks I'm going to have to
oh there we
oh there we
go
go
works just as I was about to say I had
works just as I was about to say I had
to reboot the
machine so this time we're going to mess
machine so this time we're going to mess
around in the C version for a bit and
around in the C version for a bit and
see if we can figure out what the heck
see if we can figure out what the heck
is happening before we do that
is happening before we do that
again but sometimes development be like
again but sometimes development be like
this
now don't run the demo script
okay so we can see right
okay so we can see right
here this version is
here this version is
fine right this version here is fine
so the underlying C code is
so the underlying C code is
good uh hold
on there's a weird
on there's a weird
free I wouldn't think that that would do
free I wouldn't think that that would do
anything but we can go check it out
yeah so
this doesn't need to be
this doesn't need to be
freed
oops and there we go this is back to the
oops and there we go this is back to the
correct memory profile these are
correct memory profile these are
internal meem leaks can't do anything
internal meem leaks can't do anything
about
those and
I mean I don't want to run the python
I mean I don't want to run the python
because we know what happens but like
because we know what happens but like
you know what else do I do in this
you know what else do I do in this
situation
situation
right why the heck does the python do
this I can make a standalone script I
this I can make a standalone script I
guess to try to test it
it's just very odd to me like what the
it's just very odd to me like what the
heck would cause this
right there really shouldn't
right there really shouldn't
be there shouldn't be anything capable
be there shouldn't be anything capable
of causing
this I mean I can try to run it without
this I mean I can try to run it without
rendering
rendering
on if I think it's the
on if I think it's the
rendering but I don't know if I think it
rendering but I don't know if I think it
is the rendering
I guess Standalone script it is
right it's so sketchy though because
like man I should at the very least be
like man I should at the very least be
able to uh to just instantiate this
able to uh to just instantiate this
thing
right I'm have to do everything fully
right I'm have to do everything fully
from scratch
oops
okay okay let's see if this does
okay okay let's see if this does
anything
you even uh wait how do I even do
this yeah so so here it's just m.
actions
right so it's
right so it's
like
or see does this do anything
or see does this do anything
yeah so that
yeah so that
runs
step oh you do give it to actions like
step oh you do give it to actions like
this
right hold on there's this like weird
right hold on there's this like weird
gross thing here
right equals
three this could be causing
it well this should cause a seg fold it
it well this should cause a seg fold it
shouldn't cause
shouldn't cause
this I guess it's undefined
Behavior still shouldn't be able to do
Behavior still shouldn't be able to do
this
so we just do like this right
so we just do like this right
um that
um that
back and then we
back and then we
do 9 *
zero all right this is fine
and it's Nots type float
and it's Nots type float
32 we can just do like this right we do
32 we can just do like this right we do
step all
step all could be
weird right we can do like this
weird right we can do like this
instead that should maximize the chance
instead that should maximize the chance
of us not getting get
of us not getting get
controlled by uh whatever the hell this
controlled by uh whatever the hell this
bug
is missing all right we give it actions
is missing all right we give it actions
here we not
here we not
get could not broadcast
pi and then you actually don't have to
pi and then you actually don't have to
give this any
give this any
ARS it has the
data very
data very
nice that's
nice that's
[Music]
[Music]
MOA okay so what we can do is let's do
MOA okay so what we can do is let's do
like you know for Iron Range of like
like you know for Iron Range of like
30 we'll see how this
works works very nicely right doesn't
works works very nicely right doesn't
crash doesn't do anything
stupid point
Point Let's see about this now this is
Point Let's see about this now this is
where the things can get
stupid let me show you that we have we
stupid let me show you that we have we
have a frame right this is a
frame okay
frame okay
if we don't put this break point what
happens if we don't put this break
point okay it like renders and then it
point okay it like renders and then it
goes
right so we have something uh it's not
right so we have something uh it's not
loading the shaders and stuff which is
loading the shaders and stuff which is
why you can't see anything so uh we'll
why you can't see anything so uh we'll
have to fix the asset paths and
have to fix the asset paths and
such but uh yeah I will be I'll be right
such but uh yeah I will be I'll be right
back and then we'll try to figure that
back and then we'll try to figure that
out we're making some decent progress
out we're making some decent progress
for
sure
e
e e
okay
well we know why the uh the paths are
well we know why the uh the paths are
wrong here
right the question is just
um why is it like this right
get well duh that's get current working
get well duh that's get current working
directory for
not current working
not current working
directory I'm just trying to figure out
directory I'm just trying to figure out
like what's the easiest way
to to load
to to load
files from the uh the directory that
files from the uh the directory that
this thing is
this thing is
in
right without messing stuff up
uh e
yeah that's
silly maybe I do want
this maybe we do want this
read
read
link the hell is
this no I don't like this at all
let's see
this is relative to the current working
this is relative to the current working
directory is the annoying thing
right why does it do
this and why is this so obnoxiously
this and why is this so obnoxiously
silly shell out to
silly shell out to
Python and read standard wait
Python and read standard wait
what what are you talking about that
what what are you talking about that
guy I the issue at the moment is just
guy I the issue at the moment is just
that I
that I
have I mean it's really
dumb I was going to say that didn't seem
dumb I was going to say that didn't seem
to make any
to make any
sense like the issue here is I have the
sense like the issue here is I have the
C right and I have the Assets in the
C right and I have the Assets in the
same folder but then when it gets
same folder but then when it gets
compiled by setup.py it gets compiled
compiled by setup.py it gets compiled
from like the root directory of puffer
from like the root directory of puffer
LI or whatever is really
obnoxious I mean yeah you can
obnoxious I mean yeah you can
technically do that but then this file
technically do that but then this file
doesn't like this thing doesn't build
doesn't like this thing doesn't build
and unless you like [ __ ] with the
and unless you like [ __ ] with the
paths the easiest thing would just be to
paths the easiest thing would just be to
have like the
have like the
uh well actually no the easiest thing
uh well actually no the easiest thing
wouldn't be to have uh the absolute path
wouldn't be to have uh the absolute path
if you think about it right
if you think about it right
because hold
because hold
on yeah no it's the absolute path that
on yeah no it's the absolute path that
works easiest thing is to get the
works easiest thing is to get the
absolute path to the current directory
what's the
what's the
issue so I have a C file right it loads
issue so I have a C file right it loads
some assets some pngs and stuff and it
some assets some pngs and stuff and it
works fine but then when you run this uh
works fine but then when you run this uh
when you compile this and run it from
when you compile this and run it from
python the working directory is
python the working directory is
different because you're running from
different because you're running from
like wherever the hell the python is um
like wherever the hell the python is um
so then it's not finding those folders
so then it's not finding those folders
right it's not finding those assets so
right it's not finding those assets so
like the easiest thing I could think to
like the easiest thing I could think to
do would be to have the
uh I mean it should be the absolute
uh I mean it should be the absolute
path
right can you
right can you
pass file is an argument
technically I
guess it's kind of silly though isn't it
not
CWD that shouldn't be a thing you should
CWD that shouldn't be a thing you should
just be able to get the path to the
just be able to get the path to the
current f while
very
very
silly I mean I have like there are
silly I mean I have like there are
functions for this I just think that
functions for this I just think that
they're too complicated for what they
do like
here like what the hell is this
yeah I don't know it's doing weird stuff
yeah I don't know it's doing weird stuff
and what it
is it's quite
silly I'm trying to think what I would
silly I'm trying to think what I would
want to do for this
I mean even if I pass the
I mean even if I pass the
path I guess I have a text format thing
path I guess I have a text format thing
that makes it slightly
easier can I hold
easier can I hold
on let's say I do want to pass
on let's say I do want to pass
the the path right
the the path right
right let me see how obnoxious it
is or wrong
file where am I
answer OS
dependent I mean by OS dependent you
dependent I mean by OS dependent you
mean Windows versus literally anything
mean Windows versus literally anything
else
I mean I could just use
I mean I could just use
this and pass the path through
this and pass the path through
this it's very
obnoxious no I mean really should I want
obnoxious no I mean really should I want
you should be able to run the SE stand
you should be able to run the SE stand
alone from any directory so I don't want
alone from any directory so I don't want
to depend on this
to depend on this
[ __ ] we need to really just figure
[ __ ] we need to really just figure
this stupid thing out and see
the
hell oh I guess this is a thing right e
this is so
silly those are just
silly those are just
so it can't be this [ __ ] stupid to
so it can't be this [ __ ] stupid to
have to load a file right it can't
have to load a file right it can't
possibly be this stupid there's got to
possibly be this stupid there's got to
be a way that doesn't make you look like
be a way that doesn't make you look like
an imbecile
and come on running a file from a
and come on running a file from a
different directory
change the
current yeah so you do that and then you
current yeah so you do that and then you
[ __ ] over your
[ __ ] over your
packages like you [ __ ] over all your
packages like you [ __ ] over all your
other python code
like GPU Drive does this and it makes it
like GPU Drive does this and it makes it
uninstallable with
Pip I guess technically you're not going
Pip I guess technically you're not going
to
to
run you're not going to run the program
run you're not going to run the program
from a different directory
from a different directory
right can't adust python or assist path
right can't adust python or assist path
as
as
needed and
yeah does that even propagate to uh the
yeah does that even propagate to uh the
C
C
code I don't know if that even
code I don't know if that even
propagates to the C code
I'll try assis path the pentant real
quick are you running from subprocess or
quick are you running from subprocess or
multiprocessing I it might
can we not just do this hold
on what if I do this
right um
self.
module what if I do this
nope why doesn't that
work say path
[ __ ]
I thought you could do that
yeah that we're not doing this this is
disgusting plus Ultra can we do this
disgusting plus Ultra can we do this
though
that still doesn't do
[ __ ] little black screen
how obnoxious can this be
right that's just incredibly
obnoxious do I really just I guess I
obnoxious do I really just I guess I
have to just pass the [ __ ] directory
have to just pass the [ __ ] directory
to
to
see
see
right and then I have to conditionally
right and then I have to conditionally
apply it if I'm
apply it if I'm
like CIS path
okay I just
okay I just
add the
folder finding
this is
disgusting yeah this is just spamming
disgusting yeah this is just spamming
garbage don't bother checking chat GPT
garbage don't bother checking chat GPT
it's always wrong
literally always
wrong man I didn't expect this to be the
wrong man I didn't expect this to be the
thing to get stuck on right
it really doesn't feel good either to
it really doesn't feel good either to
like have to change the uh the C code
like have to change the uh the C code
the C is nice and
simple it should just
be
be
huh
for e
now this is not it
can we do like
can we do like
this oh I know what happened
what how does this still not
work I guess this is like
yeah this is not path it's like it's
yeah this is not path it's like it's
basically you need like a [ __ ] Sim
basically you need like a [ __ ] Sim
link or something don't you
now this is brainless
I mean
I mean
technically if we're going to be just
technically if we're going to be just
really stupid about things
right if we just want to be really
right if we just want to be really
stupid
stupid
here can't we just
like work
like work
for I can't freaking pay stuff from
this if we're going to be just really
this if we're going to be just really
dumb
[Music]
oops can't we do
this why I use path Li does that help
this why I use path Li does that help
you when you're loading stuff in
C that's Set current working
directory there is it CH d
can I do this be really
stupid for
how do you get the current module from
syon that should work in
Python for
don't have full docks or
don't have full docks or
stuff like it's ridiculous the chat
stuff like it's ridiculous the chat
jippy has like better docks because
jippy has like better docks because
they're just not anywhere they're like
they're just not anywhere they're like
some obscure page on the internet
underscore
file what we just do underscore file
right
that's what in
what the
hell is what you're trying to do get the
hell is what you're trying to do get the
ABS well what I'm trying to do is
ABS well what I'm trying to do is
I have assets that need to be loaded in
I have assets that need to be loaded in
C and in C you know you specify the
C and in C you know you specify the
relative path to them which is what you
relative path to them which is what you
would always do uh but because this
would always do uh but because this
thing gets built by Python and it gets
thing gets built by Python and it gets
imported and like called from separate
imported and like called from separate
places it doesn't work so I'm trying to
places it doesn't work so I'm trying to
make the C path actually work it's
make the C path actually work it's
driving me
driving me
nuts what the hell is this
nuts what the hell is this
right for
oh this thing just screwed up as
well gra me
nuts
for e
grab me
nuts you get stuck on the simplest
nuts you get stuck on the simplest
things right
so
this do
it not
function how is this still not loading
function how is this still not loading
successfully
wait we're loading the
shaders how wait we're loading stuff
shaders how wait we're loading stuff
successfully now but it's not showing
up oh wait hold on am I just like
up oh wait hold on am I just like
incredibly dumb wait hold on let me just
incredibly dumb wait hold on let me just
try something
something maybe this is something
something maybe this is something
completely
different no that did make a
different no that did make a
difference so here it failed to open
difference so here it failed to open
everything
everything
and then when I did this stuff here
right it just screws up on the shaders
map
map
Shader why is it loading the wrong
Shader oh the platform variable is not
defined hold on we know how to fix
this for
and see if this does
it
it
finally [ __ ] a
that is so
that is so
stupid that is just so stupid how long
stupid that is just so stupid how long
that
that
took cool
take and
take and
take take
we
compile then we'll actually get to clean
compile then we'll actually get to clean
this stuff up a
bit all
bit all
so here's the
N oh it's random action so that's
N oh it's random action so that's
fine yeah but you can see it's
smooth which is very nice
how fast is this I
wonder we'll have to do perf test later
wonder we'll have to do perf test later
but
but
um yeah that gives us the environment
um yeah that gives us the environment
rendering now we had some uh some
rendering now we had some uh some
bug some odd weird reports of stuff I
bug some odd weird reports of stuff I
think in the compute OBS functions
let's go see if we can actually run the
let's go see if we can actually run the
demo
okay well I don't know what was cursed
okay well I don't know what was cursed
with
this but it seems like whatever we just
this but it seems like whatever we just
did fix some
stuff so let's try this again
maybe seems we don't have control
we got to expose variables and stuff but
we got to expose variables and stuff but
yeah that is kind of
bound Mak
sense for
now they move at the correct speed as
well and
well and
then total tow is taken
I think the only stats that you really
I think the only stats that you really
need is uh the only stats you really
need is uh the only stats you really
need
need
here from the environment itself are
here from the environment itself are
this right you just need these
we just do
like at
like at
property
total like this
close this is not an allocated MOA this
close this is not an allocated MOA this
is
is
just
MOA we also haven't defined it here so
MOA we also haven't defined it here so
we need to
we need to
Define
yeah so much work on this
all right
all right
so here's our
environment running random actions
if we can load a
policy look at
policy look at
that and we load the
that and we load the
policy they don't look particularly
smart but they do do things
oh these buttons do
oh these buttons do
work so our view buttons work we can
work so our view buttons work we can
look at any of
look at any of
them that's cool they just need to be
them that's cool they just need to be
doing stuff
I call that a
I call that a
success I call that a success for
sure we really need to train some new
sure we really need to train some new
policies on
policies on
this I think the Clusters still down
this I think the Clusters still down
right it came back
up oh what Nathan posted new
up oh what Nathan posted new
M what is
this wait what
Highway
huh coding some random things
cool that's was cool to see I have no
cool that's was cool to see I have no
idea what that is
but so uh we should probably figure out
but so uh we should probably figure out
how fast this thing is
huh let's do
that
for
e e
hell's wrong with
this
for e
why can't I see the freaking syntax
why can't I see the freaking syntax
error
stupid
stupid
there we go
all right right
I don't like that it loads RB even when
I don't like that it loads RB even when
I don't render
okay so according to this this runs at
okay so according to this this runs at
240,000 steps per sec uh
240,000 steps per sec uh
204,000 steps per second on my
204,000 steps per second on my
desktop which I believe is quite a bit
desktop which I believe is quite a bit
slower than the um the scon version so
slower than the um the scon version so
we'll have to figure out where I'm
we'll have to figure out where I'm
dropping performance
there let me
there let me
think yeah I have to figure out where
think yeah I have to figure out where
we're dropping performance
uh oh also though technically is
uh oh also though technically is
this No it should be faster than that I
this No it should be faster than that I
believe should be faster than
believe should be faster than
that so we'll have to profile and do
that so we'll have to profile and do
stuff on that but it's not
stuff on that but it's not
horrid it's not horrible
let see if my cluster is up or
not let me see if the cluster is
open oh yeah wait the cluster is
open oh yeah wait the cluster is
up so we should be able to do some stuff
let me make sure we can actually train
let me make sure we can actually train
on this
how big is
how big is
this we
this we
do 8 by 8 so600
M seems like that's a
lot what happen if I do
30 let's see what
happens e
takes forever to initialize which it
shouldn't we might have to initialize
shouldn't we might have to initialize
render at
um and we might have to do some stuff
um and we might have to do some stuff
here
it's funny I'm like very dissatisfied
it's funny I'm like very dissatisfied
with the bindings between Python and C
with the bindings between Python and C
I'm very happy with the python and
I'm very happy with the python and
puffer I'm very happy with the c and
puffer I'm very happy with the c and
Puffer not happy with the
Puffer not happy with the
interoperability of the
interoperability of the
two like what is this
right I assume it's like making the
right I assume it's like making the
environments or something right
okay one
okay one
n let see what happens
there we go
3.1k steps per second is too
slow they fourm
and
then what do we say
so
64m takes too long to
64m takes too long to
initialize no reason that the M should
initialize no reason that the M should
take any real amount of time to
take any real amount of time to
initialize like this
I guess it's having to do
I guess it's having to do
um well no it shouldn't have to do any
um well no it shouldn't have to do any
file IO
right should be no file.io
involved very awkward that it's like
involved very awkward that it's like
it's still
it's still
not
really may be
32 we're going to have to look at the
32 we're going to have to look at the
initialization time
initialization time
now and figure out what's happening
now and figure out what's happening
because this doesn't make any
because this doesn't make any
sense hey
welcome for
yes why
yes why
Linux yeah I mean that's got to be a
Linux yeah I mean that's got to be a
joke
joke
right yeah got to be nuts doing stuff
right yeah got to be nuts doing stuff
not on Linux
well this is
well this is
weird it
initializes one two four or eight
initializes one two four or eight
environments fast and then it just hangs
environments fast and then it just hangs
on
16 how's that make any sense for
I think what this would even
I think what this would even
be you make more than 8 m it just
be you make more than 8 m it just
doesn't work
what data are they sharing
I mean I'm technically giving them the
I mean I'm technically giving them the
same AI pathing
same AI pathing
data but they're not writing to it it
data but they're not writing to it it
shouldn't be locked or anything
right and plus they're on a single
process oh wait buff observations right
process oh wait buff observations right
here yeah this is wrong isn't it
where this is pointer colon
end it's got to be this
right so I don't know why that would
right so I don't know why that would
make it
fail yeah no
that doesn't make it
that doesn't make it
fail
okay e
interesting so it gets 14 M's
interesting so it gets 14 M's
in and then it
in and then it
breaks on the reset
that's very
weird I'm trying to think if there's
weird I'm trying to think if there's
anything where I could have like the
anything where I could have like the
indices
indices
wrong mm's no I
wrong mm's no I
have I'm agents
I mean I would get like a bounds error
I mean I would get like a bounds error
in Python if I gave it the wrong
index is this like memory somehow it
index is this like memory somehow it
can't it shouldn't be able to be
right for
I don't know why these processes get
I don't know why these processes get
like backgrounded either
where's the obnoxious one I swear this
where's the obnoxious one I swear this
is the only one that ever works and it's
is the only one that ever works and it's
too obnoxious to
remember see
remember see
works
so
100 is there a while loop somewhere that
100 is there a while loop somewhere that
can be
infinite oh I
infinite oh I
know that's really awkward isn't
know that's really awkward isn't
it I know what it
is yeah that's
silly
for e
I was overwriting the same map
repeatedly so there's a rare condition
repeatedly so there's a rare condition
you can technically infinite Loop in the
you can technically infinite Loop in the
environment if there's nowhere to spawn
environment if there's nowhere to spawn
and I was filling up all the spawn
and I was filling up all the spawn
positions because I was writing
positions because I was writing
everything all the different
everything all the different
environments onto the same
environments onto the same
map I'm pretty
map I'm pretty
sure
sure
no it says no where still looping
no it says no where still looping
here I could have sworn that would have
here I could have sworn that would have
been
it oh wait wait it errored so it didn't
okay we'll try this
there we
go
perfect so now we no longer have the
issue and we can do
crazy
fast2 seconds for even 512 of
them what do we think about memory
usage let's take a look at memory usage
right 1.6
right s
n like they use like no
n like they use like no
memory they're
memory they're
great we are perfectly set up
here they really shouldn't consume much
here they really shouldn't consume much
memory nice to see that they actually
memory nice to see that they actually
don't uh so now I should be able
don't uh so now I should be able
to first of all
um M's
200 oops
M right and then this is going to be 10
M right and then this is going to be 10
* m
* m
time
I let's see if this is
faster okay there we go that's a lot
faster okay there we go that's a lot
closer to the original performance
closer to the original performance
um typically the uh the puffer boxes are
um typically the uh the puffer boxes are
like a good 2 and 1 half times faster
like a good 2 and 1 half times faster
than this box so this is about close to
than this box so this is about close to
the original million steps per second
the original million steps per second
we'll have a couple little optimizations
we'll have a couple little optimizations
to do you know I'm probably I missed a
to do you know I'm probably I missed a
couple things while doing the port but
couple things while doing the port but
uh yeah there we go
uh yeah there we go
right that is fast that is like
right that is fast that is like
incredibly fast that's like you know how
incredibly fast that's like you know how
is the environment that fast right
[Music]
let's order some food real quick on the
let's order some food real quick on the
side and uh then I will keep working on
side and uh then I will keep working on
this until it gets
this until it gets
here that's what we'll do
here that's what we'll do
today I want to check one thing on
today I want to check one thing on
Twitter
first we got any cool
messages nothing crazy
some
some
food uh what do I get here
we're
good
so let's go back to the train
config cuz now we know we can do some
config cuz now we know we can do some
crazy things
right see can we run the full config
right see can we run the full config
already or are we going to O ourselves
already or are we going to O ourselves
we probably shouldn't right we just
we probably shouldn't right we just
confirmed that they're like they take no
memory the default config is like 200
memory the default config is like 200
per core
200 m is like .1 seconds to initialize
200 m is like .1 seconds to initialize
on each core
independently oh look at
independently oh look at
that that is the startup time for
that that is the startup time for
running a million steps as
running a million steps as
well 130k local
boom run C now very nice
so there are a couple things that we
so there are a couple things that we
want to do
here first of
all there's a lot of stuff to commit
all there's a lot of stuff to commit
isn't
there let's do this first so we don't
there let's do this first so we don't
lose stuff
I'm pretty happy with that
I think what we need to do is
where's the
ELO there was something I messed up when
ELO there was something I messed up when
I did these ELO
I did these ELO
CS believe
double check one
thing I want to check that uh I think
thing I want to check that uh I think
there was a PR that I got to merge one
there was a PR that I got to merge one
second
looks like they added a couple
things I'll get up it's fine for
now we'll just fix there's one thing I
now we'll just fix there's one thing I
wanted to fix which is that I wanted to
wanted to fix which is that I wanted to
randomize the team that this is on right
randomize the team that this is on right
now it's just like it puts your team on
now it's just like it puts your team on
radiant 100% of the
time I think that that is going to
time I think that that is going to
be h
that might be a thing for tomorrow
that might be a thing for tomorrow
though I think we just get this thing
though I think we just get this thing
running for
running for
now here
lines need game
m.h for
the heck was puffer net.
the heck was puffer net.
PX I wasn't ciz
that is there a puffet px I guess there
that is there a puffet px I guess there
is actually isn't there
we just do a little bit of
hygiene we not have ra up here
I guess we got to download
Raab until we make it um a
standalone e
1.6
1.6
megabytes that's so funny
I do this in the wrong one I totally
I do this in the wrong one I totally
just did this in the wrong
just did this in the wrong
one damn
it
hello you trained the strongest model
hello you trained the strongest model
and loaded it into 10 bot in the demo
and loaded it into 10 bot in the demo
even the red team so here's the thing
even the red team so here's the thing
um we've had better models one the last
um we've had better models one the last
experiment sweep had a couple janky
experiment sweep had a couple janky
things that we need to fix and two
things that we need to fix and two
there's some minor differences between
there's some minor differences between
uh the N before and after I ported it
uh the N before and after I ported it
and probably a couple unintentional
and probably a couple unintentional
differences so it's technically being
differences so it's technically being
put into an environment that's not
put into an environment that's not
exactly matching the one it was trained
exactly matching the one it was trained
in and they're probably some weird bugs
in and they're probably some weird bugs
so yeah the models in there at the
so yeah the models in there at the
moment they're not very good at all uh
moment they're not very good at all uh
we will be upgrading them and I just now
we will be upgrading them and I just now
like literally right now I got it to the
like literally right now I got it to the
point where we can train uh ostensibly
point where we can train uh ostensibly
at least we should be able to train
at least we should be able to train
directly on the C version of the
directly on the C version of the
environment so we're going to train some
environment so we're going to train some
models we're going to run some hyper
models we're going to run some hyper
parameter sweeps and we're going to
parameter sweeps and we're going to
refine our training pipeline a little
refine our training pipeline a little
bit and then we'll get better and better
bit and then we'll get better and better
models but the cool thing is now that
models but the cool thing is now that
this envis in C
this envis in C
um it's very very quick for us to Port
um it's very very quick for us to Port
new models over to the seu which is
new models over to the seu which is
pretty cool whereas before it was like I
pretty cool whereas before it was like I
couldn't put them online or you know it
couldn't put them online or you know it
was completely
separate now if you want to do
separate now if you want to do
um if you take the blue models by the
um if you take the blue models by the
way so if you take the blue agents and
way so if you take the blue agents and
if you just get them unstuck here let me
if you just get them unstuck here let me
show you something so first of all we've
show you something so first of all we've
we've got this new
we've got this new
site. for this and if I get the agents
site. for this and if I get the agents
unstuck right so here we'll follow this
unstuck right so here we'll follow this
one and you'll see that they get
one and you'll see that they get
stuck but like if I just switch to this
stuck but like if I just switch to this
agent
agent
here and now you can see I got this one
here and now you can see I got this one
unstuck watch they actually do
unstuck watch they actually do
reasonable things like they just don't
reasonable things like they just don't
know that the terrain is where it
know that the terrain is where it
is so like you see it just dashed it
is so like you see it just dashed it
just dashed in and now it's going to use
just dashed in and now it's going to use
its AOE tock clear these minions and
its AOE tock clear these minions and
clear the
tower so like it's learned to do a
tower so like it's learned to do a
couple things like they actually do
couple things like they actually do
learn to use their abilities and stuff
learn to use their abilities and stuff
and I have charts from the hyper pram
and I have charts from the hyper pram
sweeps that can show you that like
sweeps that can show you that like
they're actually effectively learning to
they're actually effectively learning to
use all their abilities and such but
use all their abilities and such but
like there are some bugs and some things
like there are some bugs and some things
that are going to need to be fixed for
that are going to need to be fixed for
this
also the snake model the snake model on
also the snake model the snake model on
the website is really stupid I dumbed
the website is really stupid I dumbed
that one down because I didn't have
that one down because I didn't have
convnets and lstms implemented in C when
convnets and lstms implemented in C when
I made that so we're going to upgrade
I made that so we're going to upgrade
the AI for the snake as well pretty
the AI for the snake as well pretty
soon I got to figure out like a cleaner
soon I got to figure out like a cleaner
way of doing this like you know python
way of doing this like you know python
like C to scon to python binding stuff
like C to scon to python binding stuff
though because right now there's a lot
though because right now there's a lot
of just Jank overhead associated with
of just Jank overhead associated with
like getting the EnV to play nice with
like getting the EnV to play nice with
puffer and also run a native c um like
puffer and also run a native c um like
the python stuff super simple and easy
the python stuff super simple and easy
the C stuff super simple and easy
the C stuff super simple and easy
getting those two things to work
getting those two things to work
together is a
together is a
pain that's the current state of
pain that's the current state of
things and hey we're looking for people
things and hey we're looking for people
to build more of these environments if
to build more of these environments if
anybody if you know if you want to like
anybody if you know if you want to like
build some cool stuff learn some AI
build some cool stuff learn some AI
learn well I don't know what your
learn well I don't know what your
experience is with RL but like if you
experience is with RL but like if you
want to like learn some cool hyperf Sim
want to like learn some cool hyperf Sim
Dev uh we have people building like
Dev uh we have people building like
building and contributing a few of these
building and contributing a few of these
at the moment in the Discord it's a good
at the moment in the Discord it's a good
time
let's see how fast this
goes ah I gotta add
this wait
this wait
what uh
did not build or something what's
wrong
builds okay here we go
builds okay here we go
so now we have it
so now we have it
training on the C version of the
training on the C version of the
environment at
environment at
400k 400k steps per
second should be about the same as what
second should be about the same as what
it was
before you can see it's learning as
well very nice
well very nice
so uh we're GNA
risk we're going to risk doing this
see cool this probably won't be an
see cool this probably won't be an
amazing sweep but I figured we'd just
amazing sweep but I figured we'd just
get something R running today
get something R running today
uh most likely it'll crash on some like
uh most likely it'll crash on some like
weird edge condition but at least
weird edge condition but at least
that'll help us find one bug and uh you
that'll help us find one bug and uh you
know maybe that'll help us find one bug
know maybe that'll help us find one bug
or
or
something so we'll
something so we'll
see very unlikely that I've just made
see very unlikely that I've just made
this port perfectly uh on the first
this port perfectly uh on the first
training
training
run but hey who knows maybe it's
good I think we should be fairly happy
good I think we should be fairly happy
overall with this
though I think we're going to call it
though I think we're going to call it
for tonight cuz my food's going to be
for tonight cuz my food's going to be
here in a bit I got a couple quick
here in a bit I got a couple quick
little things to do around the house
little things to do around the house
uh and I'll be back
uh and I'll be back
tomorrow and tomorrow I think we get to
tomorrow and tomorrow I think we get to
do more experimental side stuff and we
do more experimental side stuff and we
also get to we'll also get to figure out
also get to we'll also get to figure out
if we can clean stuff up uh and like I
if we can clean stuff up uh and like I
really want to make it easy for people
really want to make it easy for people
to make and bind these
to make and bind these
environments so I really want to clean
environments so I really want to clean
that up and make it very simple um like
that up and make it very simple um like
this site needs to have like I want this
this site needs to have like I want this
site to be the go-to place for RL
site to be the go-to place for RL
environments
environments
you know like we have these couple I
you know like we have these couple I
want to add a few like Atari remakes
want to add a few like Atari remakes
that are way faster I want to add some
that are way faster I want to add some
grid environments I just want to add
grid environments I just want to add
tons of stuff here it's like hey all the
tons of stuff here it's like hey all the
environments that you would ever want
environments that you would ever want
for reinforcement learning research they
for reinforcement learning research they
run at a million St million plus steps
run at a million St million plus steps
per second per core uh they run on the
per second per core uh they run on the
web if you want them to they're
web if you want them to they're
incredibly easy to use and install
incredibly easy to use and install
right this should just be the state of
right this should just be the state of
research and we're very very close to
research and we're very very close to
making that happen and I think once we
making that happen and I think once we
do that like the field is just going to
do that like the field is just going to
accelerate so so so quickly just based
accelerate so so so quickly just based
off of that speed difference and that
off of that speed difference and that
usability
difference so anyways thanks for
difference so anyways thanks for
dropping by and uh yeah I'll be back
dropping by and uh yeah I'll be back
tomorrow good night
