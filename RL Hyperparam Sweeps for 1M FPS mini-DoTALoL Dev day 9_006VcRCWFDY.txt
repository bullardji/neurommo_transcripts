Kind: captions
Language: en
we are
live fix
this
this
welcome got some really cool stuff today
welcome got some really cool stuff today
to share starting with an article that I
to share starting with an article that I
wrote on hyperparameter tuning that I'm
wrote on hyperparameter tuning that I'm
about to post and then I'm going to go
about to post and then I'm going to go
over it's going to be cool so
over it's going to be cool so
where is this
articles this should be all ready to go
articles this should be all ready to go
and then I'm going to go over it let me
and then I'm going to go over it let me
just make sure that my sleep deprived
just make sure that my sleep deprived
brain did not do anything stupid in here
brain did not do anything stupid in here
Benchmark code experiments
Benchmark code experiments
[Music]
random looks good
all
right and my stream I should be able to
right and my stream I should be able to
post the article link as well
post the article link as well
right yeah and then I'm going to go
right yeah and then I'm going to go
through this because it's uh it's pretty
cool for
cool
cool
so we've got some fun stuff um if I go
so we've got some fun stuff um if I go
grab the article real
quick I did this over the weekend um
quick I did this over the weekend um
basically what's going on here is
basically what's going on here is
I've been using carbs for a while now
I've been using carbs for a while now
carbs is this hyperparameter tuning
carbs is this hyperparameter tuning
algorithm from imbw um and it seems like
algorithm from imbw um and it seems like
it's been working very well but it's
it's been working very well but it's
kind of hard to get like comprehensive
kind of hard to get like comprehensive
comparisons to bayy and sweeps and
comparisons to bayy and sweeps and
stuff uh especially when like a lot of
stuff uh especially when like a lot of
the time we're just solving the
the time we're just solving the
environments with everything
environments with everything
anyways yeah so we needed more
anyways yeah so we needed more
comprehensive uh comparisons to
comprehensive uh comparisons to
stuff so I came came up with a test for
stuff so I came came up with a test for
this that's very very unfair to carbs I
this that's very very unfair to carbs I
came up with like the worst possible
came up with like the worst possible
Benchmark for carbs to see if it's still
Benchmark for carbs to see if it's still
better uh the idea being that if it
better uh the idea being that if it
works there then it's probably safe to
works there then it's probably safe to
use wherever and it just absolutely
use wherever and it just absolutely
shreds
shreds
so let me go through this
so let me go through this
so uh first of all if you'd like to
so uh first of all if you'd like to
support all this stuff Star Puffer lib
support all this stuff Star Puffer lib
this article's on X uh it helps me out a
this article's on X uh it helps me out a
whole bunch I'm going to put this in let
whole bunch I'm going to put this in let
me see can I put this in the
chat I'm going to put the article in the
chat I'm going to put the article in the
restream
chat so what is carbs um carbs is an
chat so what is carbs um carbs is an
algorithm that is based off of basy and
algorithm that is based off of basy and
hyperparameter tuning which attempts to
hyperparameter tuning which attempts to
uh maintain probability estimates that
uh maintain probability estimates that
tell you what hyper parameters you've
tell you what hyper parameters you've
explored are probably good uh it
explored are probably good uh it
augments that with the ability to
augments that with the ability to
maintain lots of different sets of hyper
maintain lots of different sets of hyper
parameters
parameters
that depend on how long the experiment
that depend on how long the experiment
took so like you could have an
took so like you could have an
experiment that gives you a decent set
experiment that gives you a decent set
of hyper parameters but it's very fast
of hyper parameters but it's very fast
to run that's just as promising as a
to run that's just as promising as a
candidate as something that gives you
candidate as something that gives you
very good hyper parameters but takes a
very good hyper parameters but takes a
really long time to run and it explores
really long time to run and it explores
in many different directions and as it
in many different directions and as it
hones in on what is good uh it will use
hones in on what is good uh it will use
more and more compute to try to get
more and more compute to try to get
better results on all of the good
better results on all of the good
different sets of hyperparameters that
different sets of hyperparameters that
is the main selling point of
is the main selling point of
carp and that is like unquestionably
carp and that is like unquestionably
good but that's not what I'm testing
good but that's not what I'm testing
today carbs also just has a bunch of
today carbs also just has a bunch of
extra tricks that have some heavy math
extra tricks that have some heavy math
in them that seems reasonable it all
in them that seems reasonable it all
seems reasonable but you know who knows
seems reasonable but you know who knows
if it actually works more broadly so
if it actually works more broadly so
what I did is I came up with a synthetic
what I did is I came up with a synthetic
task uh that should be very hard and
task uh that should be very hard and
should give carbs a really good
should give carbs a really good
opportunity to demonstrate whether it is
opportunity to demonstrate whether it is
good or
not so here's the Benchmark uh we do
not so here's the Benchmark uh we do
have results of real sweeps we use it
have results of real sweeps we use it
all over puffer lib this is not what
all over puffer lib this is not what
that's about hi Noah what's up we're
that's about hi Noah what's up we're
going through this new article I wrote
going through this new article I wrote
um so this is a controlled synthetic
um so this is a controlled synthetic
test what I did is I wrote an
test what I did is I wrote an
environment that just gives you 10
environment that just gives you 10
variables from a uniform normal
variables from a uniform normal
distribution these are secret and these
distribution these are secret and these
are considered the optimal hyper
are considered the optimal hyper
parameters
parameters
okay so you have like 10 optimal hyper
okay so you have like 10 optimal hyper
parameters that are sampled by this this
parameters that are sampled by this this
fake Benchmark this fake
fake Benchmark this fake
environment and then the hyperparameter
environment and then the hyperparameter
tuning algorithm instead of training
tuning algorithm instead of training
networks it's just going to tell you the
networks it's just going to tell you the
hyperparameters that it would use to
hyperparameters that it would use to
train a network and without having to
train a network and without having to
train a network at all I'm just going to
train a network at all I'm just going to
compute a reward based on how good your
compute a reward based on how good your
hyper parameters were how close they
hyper parameters were how close they
were to these these optimal heldout
were to these these optimal heldout
variables I designed this function below
variables I designed this function below
to be smooth and also to be very hard to
to be smooth and also to be very hard to
optimize because it goes to zero if you
optimize because it goes to zero if you
have a single hyper parameter that's
have a single hyper parameter that's
really really
really really
wrong uh you have code and math here
wrong uh you have code and math here
take your pick whatever is easier for
take your pick whatever is easier for
you to read uh the way that this works
you to read uh the way that this works
though is that you do a L2 distance so
though is that you do a L2 distance so
squared distance between uh the hyper
squared distance between uh the hyper
parameters well not quite L2 because I
parameters well not quite L2 because I
don't do a square root but um you take
don't do a square root but um you take
uh Square distance from the parameters
uh Square distance from the parameters
to the optimal hyper parameters and then
to the optimal hyper parameters and then
you take two to the power of negative
you take two to the power of negative
distance here which is this component
distance here which is this component
right here um and then you add a little
right here um and then you add a little
bit of noise and what this gives you is
bit of noise and what this gives you is
it gives you something that decays as
it gives you something that decays as
you go away from the optimal hyper
you go away from the optimal hyper
parameters uh but it never quite goes to
parameters uh but it never quite goes to
zero and then you multiply all the
zero and then you multiply all the
numbers together so if you have a single
numbers together so if you have a single
number that's really close to zero then
number that's really close to zero then
your reward is going to be basically
your reward is going to be basically
zero though it's not exactly zero which
zero though it's not exactly zero which
is important so this is The
is important so this is The
Benchmark for the experiments
Benchmark for the experiments
each algorithm gets 100 samples so 100
each algorithm gets 100 samples so 100
like trials in order to evaluate what it
like trials in order to evaluate what it
thinks the optimal hyper parameters
thinks the optimal hyper parameters
are I have the source code for
are I have the source code for
this I think I forgot to put it at the
this I think I forgot to put it at the
bottom of the post but I'll I'll edit
bottom of the post but I'll I'll edit
that in uh it's on the puffer GitHub
anyways I tested out random search very
anyways I tested out random search very
simple genetic algorithm wand be is
simple genetic algorithm wand be is
built-in basian search and carbs and the
built-in basian search and carbs and the
graphs are all public on wand b as well
graphs are all public on wand b as well
we have all these right here so you can
we have all these right here so you can
see that we
see that we
have okay apparently this needs to be I
have okay apparently this needs to be I
need to free up some storage but they
need to free up some storage but they
are all public
are all public
um first of all random search from want
um first of all random search from want
B doesn't do
B doesn't do
anything everything fails if one hyper
anything everything fails if one hyper
parameter is off by a lot then you're
parameter is off by a lot then you're
not going to get anywhere and since
not going to get anywhere and since
they're 10 hyper parameters that's
they're 10 hyper parameters that's
basically guaranteed so random search
basically guaranteed so random search
fails utterly
fails utterly
genetic algorithm I wrote this just for
genetic algorithm I wrote this just for
fun as like a little test it's actually
fun as like a little test it's actually
surprisingly good uh all this does is it
surprisingly good uh all this does is it
just picks a set of random parameters
just picks a set of random parameters
and then it will mutate them all by like
and then it will mutate them all by like
a small noise amount every single trial
a small noise amount every single trial
and if that does better than the
and if that does better than the
previous one it keeps the new ones so
previous one it keeps the new ones so
this takes a lot of Trials to get
this takes a lot of Trials to get
anywhere but once it starts taking off
anywhere but once it starts taking off
it actually starts going up quite nicely
it actually starts going up quite nicely
and it produces these really cool graphs
and it produces these really cool graphs
where like it's essentially all centered
where like it's essentially all centered
around and initial distribution and you
around and initial distribution and you
can actually kind of see the
can actually kind of see the
optimization process over time because
optimization process over time because
it's like it's one candidate set that
it's like it's one candidate set that
it's changed from which is
it's changed from which is
cool then we have wand B Bas it's
cool then we have wand B Bas it's
inconsistent it can perform better than
inconsistent it can perform better than
this but you know on the last set where
this but you know on the last set where
I just ran everything from scratch this
I just ran everything from scratch this
is the number I got I've seen it do like
is the number I got I've seen it do like
0 five before uh but this kind of a
0 five before uh but this kind of a
trend is very common where like it just
trend is very common where like it just
doesn't latch on to the good trial
doesn't latch on to the good trial
particular particularly well and uh it's
particular particularly well and uh it's
just it doesn't it's not particularly
just it doesn't it's not particularly
efficient so it gets a couple things
efficient so it gets a couple things
that have non-negligible performance the
that have non-negligible performance the
maximum is one 0.25 here we get 0.25 but
maximum is one 0.25 here we get 0.25 but
overall not great and then we have carbs
overall not great and then we have carbs
which just solves the problem like
which just solves the problem like
perfectly uh it just gets better and
perfectly uh it just gets better and
better over time and then there you go
better over time and then there you go
this is like 0.9 something and you can
this is like 0.9 something and you can
see over time all the different runs
see over time all the different runs
right you can see that it started out
right you can see that it started out
down here and stuff wasn't going very
down here and stuff wasn't going very
well and then it kind of found this
well and then it kind of found this
distribution over here so like because
distribution over here so like because
it can maintain multiple different
it can maintain multiple different
distributions so carbs just shred stuff
distributions so carbs just shred stuff
uh and this has been pretty consistent
uh and this has been pretty consistent
with what I have found using this
with what I have found using this
algorithm the fact that the genetic
algorithm the fact that the genetic
thing kind of works a little bit I
thing kind of works a little bit I
actually would really like to have a WB
actually would really like to have a WB
sweeps API where it's super easy to just
sweeps API where it's super easy to just
swap in your own sweep methods I think
swap in your own sweep methods I think
that that would be so much better for
that that would be so much better for
everybody because then we could just
everybody because then we could just
extensively validate all these things
extensively validate all these things
right like I could make a bunch of
right like I could make a bunch of
benchmarks like this and we could
benchmarks like this and we could
extensively validate hyper pram tuning
extensively validate hyper pram tuning
um but in the meantime carbs just shreds
um but in the meantime carbs just shreds
and that's it this is the worst possible
and that's it this is the worst possible
case for carbs this doesn't even allow
case for carbs this doesn't even allow
it to make use of its Dynamic compute
it to make use of its Dynamic compute
this is just the other tricks that it
this is just the other tricks that it
has and it still wins in the worst
has and it still wins in the worst
possible case I didn't game this I
possible case I didn't game this I
didn't spend a month doing this to make
didn't spend a month doing this to make
carbs look good I did this in like 5
carbs look good I did this in like 5
hours on Saturday and it just worked and
hours on Saturday and it just worked and
it's relatively consistent with
it's relatively consistent with
everything I've observed
everything I've observed
previously so there you go carbs
wins and the thing that I really really
wins and the thing that I really really
like about this there's this really nice
like about this there's this really nice
side effect when you have good
side effect when you have good
hyperparameter tuning algorithms this
hyperparameter tuning algorithms this
basically means that when I have an
basically means that when I have an
experiment and I run a full sweep like
experiment and I run a full sweep like
let's say I have an environment and I
let's say I have an environment and I
run a full hyperparameter sweep on it
run a full hyperparameter sweep on it
and it still doesn't
and it still doesn't
work uh will this be archived on YouTube
work uh will this be archived on YouTube
all of these streams are archived on
all of these streams are archived on
YouTube everything that I everything
YouTube everything that I everything
that you're seeing here is immediately
that you're seeing here is immediately
saved to YouTube as well it's live on
saved to YouTube as well it's live on
YouTube twitch and X at the same time
YouTube twitch and X at the same time
how do you do parallel coordinates with
how do you do parallel coordinates with
carbs I have an integration with wand B
carbs I have an integration with wand B
this is currently puffer exclusive until
this is currently puffer exclusive until
uh wandb integrates this natively I'm
uh wandb integrates this natively I'm
hoping that they do but you can get this
hoping that they do but you can get this
in the puffer Dev
in the puffer Dev
Branch there's a little hack that you
Branch there's a little hack that you
have to do like to trick WB into
have to do like to trick WB into
allowing you to update parameters at
runtime but there you go this is I mean
runtime but there you go this is I mean
this is so great for RL like the thing
this is so great for RL like the thing
that I like about this not only does
that I like about this not only does
this let you get a good set of hyper
this let you get a good set of hyper
parameters right that's obviously
parameters right that's obviously
important but think about it the other
important but think about it the other
way around like in reinforcement
way around like in reinforcement
learning if you have an environment that
learning if you have an environment that
you're trying to get working and you run
you're trying to get working and you run
this full sweep and it still doesn't
this full sweep and it still doesn't
work it means your problem is probably
work it means your problem is probably
not the hyper parameters right because
not the hyper parameters right because
if they're good hyper parameters it will
if they're good hyper parameters it will
find them
that's the really exciting piece for me
that's the really exciting piece for me
CU like I actually I think I have one of
CU like I actually I think I have one of
these where I got to delete something so
these where I got to delete something so
it lets me see my storage hold on um
it lets me see my storage hold on um
that's really
obnoxious screw it
obnoxious screw it
wanb you're worth some
money hold on let me just just put this
money hold on let me just just put this
in on the other
screen hold
screen hold
on let me let me give uh thank you let
on let me let me give uh thank you let
me give Wan B some money and then I'll
me give Wan B some money and then I'll
have uh more stuff they're worth some
have uh more stuff they're worth some
money anyways
okay
so hey thanks for dropping by I'm trying
so hey thanks for dropping by I'm trying
to make RL less cursed
overall I just paid you come
on let me see let me see my
on let me see let me see my
data this looks so good R GG basian
data this looks so good R GG basian
Twitter post should go I hope
Twitter post should go I hope
so I
so I
mean I have kind of been doing like some
mean I have kind of been doing like some
engagement optimization lately trying to
engagement optimization lately trying to
get some bigger posts but like the thing
get some bigger posts but like the thing
is it actually helps so much with my
is it actually helps so much with my
work because at the moment this is all
work because at the moment this is all
just open source offf right and like the
just open source offf right and like the
more people that see this the more I get
more people that see this the more I get
people interested in contributing to the
people interested in contributing to the
project the more I have people testing
project the more I have people testing
this and using it like the more like
this and using it like the more like
companies maybe start using it right
companies maybe start using it right
it's all just really really helpful and
it's all just really really helpful and
the more I have to like I get to not
the more I have to like I get to not
think about this stuff and get to just
think about this stuff and get to just
do Dev so yeah the promo helps a lot and
do Dev so yeah the promo helps a lot and
also speaking of which if you want to
also speaking of which if you want to
help me out a whole bunch puffer is
help me out a whole bunch puffer is
almost at 700
almost at 700
Stars almost at 700 so if you want to go
Stars almost at 700 so if you want to go
Star this repo helps me out a
ton let me show you some cool stuff
ton let me show you some cool stuff
providing this will let me access my
providing this will let me access my
data so I have a couple of sweeps from
data so I have a couple of sweeps from
here that I've been working on uh 3 days
here that I've been working on uh 3 days
hold on where is this
hold on where is this
thing this one any good no not this
thing this one any good no not this
one that's
one that's
old oh right I have a a carbs project
old oh right I have a a carbs project
that has all the carb sweeps in it
that has all the carb sweeps in it
perfect
perfect
so you can see the number of runs that
so you can see the number of runs that
we have here this is a MOBA sweep and I
we have here this is a MOBA sweep and I
think this one doesn't work particularly
think this one doesn't work particularly
well well yeah these rewards are very
well well yeah these rewards are very
low but basically what this means is the
low but basically what this means is the
fact that these rewards are low means
fact that these rewards are low means
that I have a problem with the
that I have a problem with the
environment or the reward function it's
environment or the reward function it's
not in the uh it's not in anywhere else
not in the uh it's not in anywhere else
and you can tell that just because like
and you can tell that just because like
look it's tried all sorts of different
look it's tried all sorts of different
things
things
um okay we have validation that carbs is
um okay we have validation that carbs is
a good sweep algorithm this is done like
a good sweep algorithm this is done like
let me think how much this is
let me think how much this is
done this is way over 30 billion steps
done this is way over 30 billion steps
worth of data right here cuz each of
worth of data right here cuz each of
these runs is at least 100 Mil I think
these runs is at least 100 Mil I think
actually they're like 200 mil most of
actually they're like 200 mil most of
them so yeah this is probably like 50
them so yeah this is probably like 50
billion steps worth of hyperparameter
billion steps worth of hyperparameter
tuning data on the MOBA so it looks like
tuning data on the MOBA so it looks like
I broke something with the reward but I
I broke something with the reward but I
can be very confident that I broke
can be very confident that I broke
something with the reward because
something with the reward because
otherwise right this would be uh
otherwise right this would be uh
otherwise this would be like this would
otherwise this would be like this would
work we know that carbs is super good uh
work we know that carbs is super good uh
I also tried something else this weekend
I also tried something else this weekend
I have another present for the RL
I have another present for the RL
Community exclusive preview here here uh
Community exclusive preview here here uh
though this is not fully Done
though this is not fully Done
Yet Wrong
Yet Wrong
[Music]
[Music]
One exclusive preview for uh stream
One exclusive preview for uh stream
viewers oh I guess we win haha um yeah
viewers oh I guess we win haha um yeah
what do you guys think about if I just
what do you guys think about if I just
make all of Atari twice as fast right
make all of Atari twice as fast right
what do you guys think if I just made
what do you guys think if I just made
all of Atari twice as fast and uh
all of Atari twice as fast and uh
actually what if we train pong in like
actually what if we train pong in like
two
minutes does that sound
minutes does that sound
cool what are we getting for training
cool what are we getting for training
steps per second
steps per second
here
here
30,000 how is uh how's 30,000 train
30,000 how is uh how's 30,000 train
steps per second do for Atari
steps per second do for Atari
Guys One
Guys One
desktop 24
course so I'll share this this is going
course so I'll share this this is going
to be another article in a few days once
to be another article in a few days once
I have this like fully like tuned and
I have this like fully like tuned and
solving pong perfectly um because this
solving pong perfectly um because this
is like a two-minute run I'm pretty sure
is like a two-minute run I'm pretty sure
like let's see if I do wall clock time
here relative time
wall okay like five minutes like five
wall okay like five minutes like five
minutes on pong here um I think we can
minutes on pong here um I think we can
get better than that but uh I have
get better than that but uh I have
30,000 train steps per second with Atari
30,000 train steps per second with Atari
for comparison like you're looking at
for comparison like you're looking at
low thousands with defaults for clean RL
low thousands with defaults for clean RL
and S sp3 like 2 or 3,000 uh if you
and S sp3 like 2 or 3,000 uh if you
optimize like up the batch size and
optimize like up the batch size and
stuff you can get like high single digit
stuff you can get like high single digit
thousands but you're not getting you're
thousands but you're not getting you're
not getting 30k that just doesn't happen
not getting 30k that just doesn't happen
um so it turns out we're all morons and
um so it turns out we're all morons and
uh we've been using garbage python
uh we've been using garbage python
rappers for like 10 years and uh they're
rappers for like 10 years and uh they're
just way better rappers for stuff I
just way better rappers for stuff I
actually I kind of found something like
actually I kind of found something like
this but I didn't didn't dig too much on
this but I didn't didn't dig too much on
it a while like a couple months
it a while like a couple months
ago let me show you the dev
Branch so like the most popular
Branch so like the most popular
Benchmark out there right is actually
Benchmark out there right is actually
not all that slow it's just that we
not all that slow it's just that we
completely screwed
up we as a field I
up we as a field I
mean okay
mean okay
so Al Pi which is the base package with
so Al Pi which is the base package with
Atari has built-in wrappers for frame uh
Atari has built-in wrappers for frame uh
frame Skip and grayscale
frame Skip and grayscale
okay and they're way faster because
okay and they're way faster because
they're not Python and then on top of
they're not Python and then on top of
that if I just go from Dev to 1.0 here
that if I just go from Dev to 1.0 here
this is it was as it was before uh we
this is it was as it was before uh we
have this resize observations this
have this resize observations this
wrapper is garbage this wrapper needs to
wrapper is garbage this wrapper needs to
be deleted from gymnasium and deleted
be deleted from gymnasium and deleted
from every codebase in existent this
from every codebase in existent this
rapper uses open CV for resizing and
rapper uses open CV for resizing and
this one rapper throws away 50% of your
this one rapper throws away 50% of your
compute doing a garbage optimized resize
compute doing a garbage optimized resize
so we've literally just been throwing
so we've literally just been throwing
away half of our CPU for the last 10
away half of our CPU for the last 10
years with this trash
wrapper isn't that
nuts but this is what I mean when like
nuts but this is what I mean when like
RL is cursed and there's no incentive to
RL is cursed and there's no incentive to
fix it like we've straight up we've just
fix it like we've straight up we've just
been being this stupid for 10 years just
been being this stupid for 10 years just
throwing away half of our computer to a
throwing away half of our computer to a
garbage wrapper and you want to see you
garbage wrapper and you want to see you
want to see the fix for this like this
want to see the fix for this like this
is not me being smart this is like us as
is not me being smart this is like us as
a field just screwing up this is the
a field just screwing up this is the
fix okay look all I did was where is it
fix okay look all I did was where is it
no not this one
no not this one
uh okay right
uh okay right
here one sec puffer lib postprocess I
here one sec puffer lib postprocess I
added the wrapper here okay this right
added the wrapper here okay this right
here is the fix I use numpy indexing to
here is the fix I use numpy indexing to
downscale a factor of two and it's 10
downscale a factor of two and it's 10
times faster like this specific rapper
times faster like this specific rapper
is like 10 times faster that's all I did
is like 10 times faster that's all I did
this is not me being smart this is like
this is not me being smart this is like
nobody having bothered to fix right
nobody having bothered to fix right
look at that isn't that
nuts so yeah this is the type of stuff
nuts so yeah this is the type of stuff
and uh you just do this and then you set
and uh you just do this and then you set
some good batch size you use puffer
some good batch size you use puffer
vectorization obviously and you hit
vectorization obviously and you hit
between 30 and 40 th000 steps per second
between 30 and 40 th000 steps per second
depending on your training uh depending
depending on your training uh depending
on your uh your settings your train
on your uh your settings your train
settings so so far it looks like this
settings so so far it looks like this
has gotten to 15 return overall I think
has gotten to 15 return overall I think
20 is the max so we got to do a little
20 is the max so we got to do a little
bit of looking into uh you know what
bit of looking into uh you know what
other things I might have changed
other things I might have changed
because I think that they're like I
because I think that they're like I
think the rappers do a couple weird
think the rappers do a couple weird
things with actions that make it like
things with actions that make it like
hard I think these are the Macado
hard I think these are the Macado
rappers so I think I have to like
rappers so I think I have to like
disable these at eval time because it
disable these at eval time because it
makes the paddle jiggle around a whole
makes the paddle jiggle around a whole
bunch like uncontrollably so I have to
bunch like uncontrollably so I have to
do a little bit of work on this which
do a little bit of work on this which
I'd be willing to do on stream maybe
I'd be willing to do on stream maybe
I'll do that tomorrow or something if
I'll do that tomorrow or something if
people aren't super into the mobidev um
people aren't super into the mobidev um
I do want to finish up the MOBA Dev
I do want to finish up the MOBA Dev
though and get some sweeps running but
though and get some sweeps running but
yeah we're going to have all of Atari
yeah we're going to have all of Atari
just like train five minutes per M Train
just like train five minutes per M Train
maybe 10 minutes per m one GPU standard
maybe 10 minutes per m one GPU standard
desktop heck
desktop heck
yeah I'm actually seeing some rewards
yeah I'm actually seeing some rewards
that are up by
that are up by
20 what happened here this actually
20 what happened here this actually
looks like it's up by 20
looks like it's up by 20
right why do I not see this on the
right why do I not see this on the
graph maybe it is
solved oh yeah solved why do this one
solved oh yeah solved why do this one
not show up wa why does this not show up
not show up wa why does this not show up
on the
graph does it only show you 100
runs uh w b why is my oh it does show up
runs uh w b why is my oh it does show up
I just I wasn't reading the axis right
I just I wasn't reading the axis right
okay so this is basically solved we got
okay so this is basically solved we got
to like disable the Mado wrapper at eval
to like disable the Mado wrapper at eval
time I think but this is
solved how long's this run take right
solved how long's this run take right
here let's do actually this one let's do
here let's do actually this one let's do
yeah this
yeah this
one
here stable by around here I think right
here stable by around here I think right
and this this is like tiny little bits
and this this is like tiny little bits
heck you could even take it right here
heck you could even take it right here
this is 18 which is probably without the
this is 18 which is probably without the
uh the eval like without the instability
uh the eval like without the instability
from the wrapper so this is like less
from the wrapper so this is like less
than 10 million frames basically sample
than 10 million frames basically sample
efficiency matched with the
original let's set this to wall
clock 5
clock 5
minutes five minutes to train
minutes five minutes to train
pong default settings are like an
pong default settings are like an
hour 10x speed up for
free I'm pretty happy with
free I'm pretty happy with
that also uh I did so I did something
that also uh I did so I did something
that's kind of good and kind of
that's kind of good and kind of
bad I just hard merged everything into
bad I just hard merged everything into
Dev so it's going to be a little less
Dev so it's going to be a little less
stable because you know not everything's
stable because you know not everything's
fully tested but if you want to get
fully tested but if you want to get
access to all the stuff you see on the
access to all the stuff you see on the
stream and all like these new things
stream and all like these new things
I've been talking about it's no longer
I've been talking about it's no longer
in like some obscure Branch that's going
in like some obscure Branch that's going
to get deleted everything's just in
Dev try it out let me know how it works
Dev try it out let me know how it works
we also we've got a discord.gg puffer
we also we've got a discord.gg puffer
which you can join if you want to
which you can join if you want to
contribute to the project in chat we can
contribute to the project in chat we can
definitely be looking for contributors I
definitely be looking for contributors I
got to get some more machines at some
got to get some more machines at some
point
point
soon I got to figure that out because
soon I got to figure that out because
I've got these eight and they're pretty
I've got these eight and they're pretty
nice but like I've had so many damn
nice but like I've had so many damn
issues with the Intel chips and these
issues with the Intel chips and these
things I just happen to get like bad
things I just happen to get like bad
chips in this batch on like the one
chips in this batch on like the one
generation in Which Intel has some
generation in Which Intel has some
instability issues um so I'm probably
instability issues um so I'm probably
going to look into like AMD build uh
going to look into like AMD build uh
builds for the next expansion to these
builds for the next expansion to these
uh for now they're okay they just need
uh for now they're okay they just need
to be rebooted once in a
while but yeah these types of like these
while but yeah these types of like these
types of hyper pram optimization graphs
types of hyper pram optimization graphs
where it just gets way better over time
where it just gets way better over time
like this this is going to be the new
Norm all right anybody have questions or
Norm all right anybody have questions or
stuff on uh the hyper pram stuff on the
stuff on uh the hyper pram stuff on the
article uh for folks that just joined we
article uh for folks that just joined we
just went through this
just went through this
article that I
article that I
wrote on hyperparameter tuning with
wrote on hyperparameter tuning with
carbs and how nothing else Works fail
carbs and how nothing else Works fail
fail and then carbs just solves
fail and then carbs just solves
everything anybody got questions or
everything anybody got questions or
should I move on to
should I move on to
madev because we're doing a relatively
madev because we're doing a relatively
short stream today by my standards I
short stream today by my standards I
think I've got I've got three and a half
think I've got I've got three and a half
hours from now uh to Dev and then I've
hours from now uh to Dev and then I've
got like couple hours worth of meetings
got like couple hours worth of meetings
and then I'll probably be back for like
and then I'll probably be back for like
another couple hours in the
evening so I'll give this the stream a
evening so I'll give this the stream a
second to sync up for any questions and
second to sync up for any questions and
if not I'll start on
Mev this is also going to be a
Mev this is also going to be a
relatively chill Dev day I am absolutely
relatively chill Dev day I am absolutely
not operating at 100% mental
not operating at 100% mental
capacity actually I do want to I want to
capacity actually I do want to I want to
brag about this a little
brag about this a little
bit because this is why I'm
bit because this is why I'm
exhausted uh yeah so this was
exhausted uh yeah so this was
my this was my yesterday so I'm still
my this was my yesterday so I'm still
pretty much fried from this uh this is
pretty much fried from this uh this is
3,000 ft elevation
22.5 so it's going to take a minute for
22.5 so it's going to take a minute for
uh it's going to take a day or two for
uh it's going to take a day or two for
me to get back from that
me to get back from that
but this is going to be a good Dev
but this is going to be a good Dev
week any situation where you wouldn't
week any situation where you wouldn't
use carbs in reinforcement
use carbs in reinforcement
learning I'm sure that there going to be
learning I'm sure that there going to be
some degenerate cases cuz there always
some degenerate cases cuz there always
are but like I don't think that there
are but like I don't think that there
are any cases where I wouldn't try carbs
are any cases where I wouldn't try carbs
from the GetGo the one thing I will say
from the GetGo the one thing I will say
is like for carbs to work you I do think
is like for carbs to work you I do think
that you generally need to have like a
that you generally need to have like a
reasonable set of starting hyper
reasonable set of starting hyper
parameters like if your starting hyper
parameters like if your starting hyper
parameters are way off and get zero
parameters are way off and get zero
reward the way that carbs work is it
reward the way that carbs work is it
defines a a normal distribution around
defines a a normal distribution around
the uh the center values that you give
the uh the center values that you give
for every parameter so if you're way off
for every parameter so if you're way off
it's going to be harder for carbs to
it's going to be harder for carbs to
find the initial like good solution even
find the initial like good solution even
compared to um like random random
search but that's like a really like
search but that's like a really like
that's just like a user error that's
that's just like a user error that's
basically a user error oh the other
basically a user error oh the other
thing I added one additional thing that
thing I added one additional thing that
I think is very good for carbs um and
I think is very good for carbs um and
this is a type of thing that we need
this is a type of thing that we need
more of so and I I I didn't have a great
more of so and I I I didn't have a great
way of doing this um
way of doing this um
but puffer lib has in Dev now if you
but puffer lib has in Dev now if you
look at the demo file this is just um
look at the demo file this is just um
you know where we have all our starter
you know where we have all our starter
code in the train
code in the train
function after I train I do 10
function after I train I do 10
additional evaluations so I do like 10
additional evaluations so I do like 10
additional data collection steps just to
additional data collection steps just to
collect stats and this is because I try
collect stats and this is because I try
to get a smooth estimate of the return
to get a smooth estimate of the return
so carbs is pretty sensitive to noise in
so carbs is pretty sensitive to noise in
the uh the return value so if you just
the uh the return value so if you just
give it like you know one environment
give it like you know one environment
return as the final metric like that's a
return as the final metric like that's a
really noisy estimate of how good your
really noisy estimate of how good your
uh your hyper parameters are so what you
uh your hyper parameters are so what you
want to do is you want to have like a
want to do is you want to have like a
pretty smooth uh estimate of the actual
pretty smooth uh estimate of the actual
return that this experiment got it's
return that this experiment got it's
pretty sensitive to that because of like
pretty sensitive to that because of like
it's an improvement overtime algorithm
it's an improvement overtime algorithm
so if you give it conflicting data
so if you give it conflicting data
points it gets
points it gets
confused and technically if carbs finds
confused and technically if carbs finds
that there like no good Solutions if
that there like no good Solutions if
nothing is parito optimal basically
nothing is parito optimal basically
which is I don't even know how that's
which is I don't even know how that's
possible but I've seen it happen then
possible but I've seen it happen then
it'll just like stop being able to run
it'll just like stop being able to run
it just won't be able to run trials
it just won't be able to run trials
because like it's it just throws its
because like it's it just throws its
hands up and says hey this looks like a
hands up and says hey this looks like a
nonsense
problem any other questions on this
problem any other questions on this
stuff or are we doing madev
okay thanks yeah the MOBA made some
okay thanks yeah the MOBA made some
progress we left it in a pretty good
progress we left it in a pretty good
spot on Friday we are only 1250 lines of
spot on Friday we are only 1250 lines of
scon for this entire
implementation this is all part of the
implementation this is all part of the
master plan right like in my mind you
master plan right like in my mind you
need ultra high perf simulations for
need ultra high perf simulations for
getting really fast feedback on how your
getting really fast feedback on how your
algorithms are doing you need really
algorithms are doing you need really
good hyperparameter sweeping for making
good hyperparameter sweeping for making
sure that you're actually evaluating the
sure that you're actually evaluating the
best possible version of the thing that
best possible version of the thing that
you're doing it's really hyperparameter
you're doing it's really hyperparameter
sensitive right and if you have all of
sensitive right and if you have all of
that then you're in a spot where you can
that then you're in a spot where you can
make really really fast experimental
make really really fast experimental
progress with
progress with
RL but we're missing all that in RL
RL but we're missing all that in RL
right it doesn't exist that's why you
right it doesn't exist that's why you
got to build
it perhaps I shouldn't advertise this
it perhaps I shouldn't advertise this
too heavily because um we are somewhat
too heavily because um we are somewhat
Hardware constrained we only have these
Hardware constrained we only have these
eight boxes until I get some more um but
eight boxes until I get some more um but
I do give Hardware access periodically
I do give Hardware access periodically
to um to contributors to puffer so if
to um to contributors to puffer so if
you have some stuff you want to do and
you have some stuff you want to do and
you need a box to run like some cool
you need a box to run like some cool
experiments on for uh you know that
experiments on for uh you know that
contribute to puffer in some way then I
contribute to puffer in some way then I
can potentially set you up with access
can potentially set you up with access
that's the one other AD did we hit let's
that's the one other AD did we hit let's
see have we hit
see have we hit
700 who wants to be 700 one Star come on
700 who wants to be 700 one Star come on
somebody do
it somebody do
it
it
[Music]
[Music]
hey that's awesome 700
puffers thank you so
much that's amazing
actually no again it was
always there you go thank you so much
always there you go thank you so much
guys for that that's
guys for that that's
awesome all right well I guess then
awesome all right well I guess then
we're starting on um on
we're starting on um on
mobidev which is is going to be a fun
mobidev which is is going to be a fun
time because when we left this thing
off when we left this thing off oops
off when we left this thing off oops
this is not my post
this is not my post
timeline where's the last demo I
timeline where's the last demo I
posted okay so I posted this
posted okay so I posted this
demo where you have like basic playable
demo where you have like basic playable
games you have RL uh teammates RL
games you have RL uh teammates RL
opponents 1250 lines
opponents 1250 lines
uh runs carb sweeps all of
uh runs carb sweeps all of
that oh yeah if you're looking for
that oh yeah if you're looking for
another fun article to read I recommend
another fun article to read I recommend
this one I got to repost this next week
this one I got to repost this next week
I think I posted this at a dumb time
I think I posted this at a dumb time
where nobody saw it
where nobody saw it
um here I'll give the link to this this
um here I'll give the link to this this
is just a really fun post where people
is just a really fun post where people
are saying dumb things about AGI this is
are saying dumb things about AGI this is
a fun
a fun
alternative um but yeah here's the
alternative um but yeah here's the
here's what the game looks like right uh
here's what the game looks like right uh
the darker blue ones or the brighter
the darker blue ones or the brighter
blue ones I should say are the RL agents
blue ones I should say are the RL agents
you can see the minion waves coming out
you can see the minion waves coming out
in front you see the towers in
in front you see the towers in
Orange and uh this whole Sim is like
Orange and uh this whole Sim is like
lines so when I ran this carb sweep this
lines so when I ran this carb sweep this
past week uh it didn't do that great and
past week uh it didn't do that great and
this is the same code base that you know
this is the same code base that you know
has done pong and has done everything
has done pong and has done everything
else so we know that the code is good
else so we know that the code is good
for that and the MOBA sweep if we look
for that and the MOBA sweep if we look
at it
nope other
one the MOBA sweep here
oops didn't do very well at all uh and
oops didn't do very well at all uh and
we can actually see here that the level
we can actually see here that the level
means basically aren't doing anything so
means basically aren't doing anything so
this is not really learning uh I left
this is not really learning uh I left
this running just because I can uh and
this running just because I can uh and
just to see in case it happened to find
just to see in case it happened to find
anything but yeah this is not learning
anything but yeah this is not learning
so what we're going to have to do today
so what we're going to have to do today
is we're going to have to get uh some
is we're going to have to get uh some
proper sweeps running we're going to
proper sweeps running we're going to
have to tune some various different
have to tune some various different
reward functions we're going to see
reward functions we're going to see
what's wrong we're going to make it so
what's wrong we're going to make it so
that the um the agents can use their
that the um the agents can use their
various different skills because those
various different skills because those
are disabled at the moment and basically
are disabled at the moment and basically
we're going to figure out what the heck
we're going to figure out what the heck
we broke in the last
we broke in the last
refactor uh because the environment is
refactor uh because the environment is
substantially cleaned up at this point
substantially cleaned up at this point
and really as soon as we start getting
and really as soon as we start getting
uh decent policies trained we're going
uh decent policies trained we're going
to be able to start balancing and stuff
to be able to start balancing and stuff
and then we'll pretty much have a final
and then we'll pretty much have a final
product done uh and then from there like
product done uh and then from there like
I'm open to spending a lot more time on
I'm open to spending a lot more time on
this and like making it way closer one
this and like making it way closer one
to one with actual DOTA instead of like
to one with actual DOTA instead of like
this kind of like very small toy mini
this kind of like very small toy mini
MOBA thing um that'll just depend on how
MOBA thing um that'll just depend on how
much people are interested in the
much people are interested in the
project right if so if I see a lot of
project right if so if I see a lot of
people uh if I see a lot of people like
people uh if I see a lot of people like
checking it out on Twitter if I see a
checking it out on Twitter if I see a
lot of people using it if people are
lot of people using it if people are
like interested in contributing to it
like interested in contributing to it
and using it then I'll go more after
and using it then I'll go more after
that but at the very least we're going
that but at the very least we're going
to get it to the point where it's like a
to get it to the point where it's like a
useful research en where agents are
useful research en where agents are
learning some cool stuff so let's start
learning some cool stuff so let's start
on that
let's add these tests so we don't lose
them see
test test files
all
right you can see that there's
right you can see that there's
been some changes there have been some
changes uh where are we here
um set up
build it's kind of cool that we're
build it's kind of cool that we're
starting to see some uh some actual like
starting to see some uh some actual like
contributors joining the Discord as well
contributors joining the Discord as well
it's going to make it way easier to get
it's going to make it way easier to get
going on this
going on this
stuff and uh one of my collaborators is
stuff and uh one of my collaborators is
back from vacation as well so we might
back from vacation as well so we might
see more stuff on the continuous control
see more stuff on the continuous control
side with puffer which I know there's
side with puffer which I know there's
some robotics folks around that like
some robotics folks around that like
that type of
thing
okay let's make sure that this all uh
okay let's make sure that this all uh
this runs to start
with this is how you would run it if you
with this is how you would run it if you
want to download it yourself
want to download it yourself
uh mode eval render mode Let's do
RB this is not loading up any policies I
RB this is not loading up any policies I
have it running too fast at the moment
have it running too fast at the moment
let me fix that
and let's just do eval model path
and let's just do eval model path
mob. PT I think that this is an updated
mob. PT I think that this is an updated
file we'll
see okay here you go here are these
see okay here you go here are these
trained Agents from before this is from
trained Agents from before this is from
before we like messed stuff up
before we like messed stuff up
apparently um so we must have just
apparently um so we must have just
messed up the data or the reward
messed up the data or the reward
function I suppose
the agents kind of filter towards the
the agents kind of filter towards the
center they'll fight some of the
center they'll fight some of the
neutrals they'll do whatever right I'm
neutrals they'll do whatever right I'm
noticing that they seem to be destroying
noticing that they seem to be destroying
the wall periodically which is kind of
the wall periodically which is kind of
weird so um first order of business is
weird so um first order of business is
going to
be if I just play this in human mode I
be if I just play this in human mode I
might be able to find some of the weird
might be able to find some of the weird
bugs right just by like playing this I
bugs right just by like playing this I
might be able to see like oh that's
might be able to see like oh that's
obviously wrong so let's see if this
obviously wrong so let's see if this
plays reasonably
plays reasonably
I can move around right what happens if
I can move around right what happens if
I go fight a neutral do I do damage to
I go fight a neutral do I do damage to
it yep if I get close it follows me
it yep if I get close it follows me
right I can L into the
right I can L into the
tower didn't seem like I could lure the
tower didn't seem like I could lure the
neutral into the
neutral into the
tower maybe that's not a thing
though I take damage
though I take damage
right if I get farther away do I still
right if I get farther away do I still
take damage
no we can see this one here is being
no we can see this one here is being
killed
killed
oops I see I've leveled up leveling
oops I see I've leveled up leveling
system appears to work my Max Health has
system appears to work my Max Health has
gone up so that appears to work as
gone up so that appears to work as
well and
well and
uh the wave comes to fight the wave gets
uh the wave comes to fight the wave gets
distracted by minions right
distracted by minions right
and then yeah there's a render bug here
and then yeah there's a render bug here
um eventually there's a render bug I got
um eventually there's a render bug I got
to fix but so far the Sim looks
reasonable do you think it would be nice
reasonable do you think it would be nice
if there were a verbo showing the stats
if there were a verbo showing the stats
of these DOTA agents level XP Etc
of these DOTA agents level XP Etc
watching reward uh there
is during well there's a there is this
is during well there's a there is this
for training we have log Time stuff for
for training we have log Time stuff for
training
training
so if you to go into WB here we have the
so if you to go into WB here we have the
level mean for radiant uh we've got the
level mean for radiant uh we've got the
reward for XP so we have like all the
reward for XP so we have like all the
different components of reward here's
different components of reward here's
the X the reward for getting XP the
the X the reward for getting XP the
reward for dying we've got the max Min
reward for dying we've got the max Min
and mean level for each team what else
and mean level for each team what else
do we have we've got a reward for
do we have we've got a reward for
destroying Towers we've got position X
destroying Towers we've got position X
and Y we've got reward for going towards
and Y we've got reward for going towards
the enemy
ancient and such like that so yeah we
ancient and such like that so yeah we
should probably add some of this as an
should probably add some of this as an
overlay like an optional overlay to the
overlay like an optional overlay to the
human gam playay that's something that
human gam playay that's something that
we're going to do while observing
we're going to do while observing
gameplay yeah I agree I agree that
gameplay yeah I agree I agree that
that's something that we're going to
that's something that we're going to
want for sure um though it does look to
want for sure um though it does look to
me that at the
moment this looks to me like a scaling
moment this looks to me like a scaling
issue at the moment because like the
issue at the moment because like the
reward is just super low
reward is just super low
right like the reward is too low for
right like the reward is too low for
this to be learning anything
meaningful um I wonder why that
is okay here's reward distance
is okay here's reward distance
o 07 so it looks like I I probably set
o 07 so it looks like I I probably set
the reward for just going towards the
the reward for just going towards the
enemy too low would be my initial
guess here's the reward for dying which
guess here's the reward for dying which
is like zero because they don't do
is like zero because they don't do
anything reward for
anything reward for
XP you know I could use this as an
XP you know I could use this as an
opportunity to do something really cool
opportunity to do something really cool
today um I've been thinking about this
today um I've been thinking about this
for a while so why don't I just expose
for a while so why don't I just expose
the weights for these rewards to carbs
the weights for these rewards to carbs
right so that carbs can actually sweep
right so that carbs can actually sweep
over these different rewards and then
over these different rewards and then
we'll use like a ground truth metric
we'll use like a ground truth metric
we'll use like you know a game length
we'll use like you know a game length
like we'll use like time to win or
like we'll use like time to win or
something like that in order to select
something like that in order to select
which of these is better or we'll like
which of these is better or we'll like
use like player level or something like
use like player level or something like
that in order to select which of these
that in order to select which of these
is
better there's a feature that I'm going
better there's a feature that I'm going
to have to add in which maybe we'll Dev
to have to add in which maybe we'll Dev
this this week but uh we need to have
this this week but uh we need to have
like a good ELO metric as well for uh
like a good ELO metric as well for uh
for our trained
for our trained
agents that's really what carbs needs is
agents that's really what carbs needs is
Elo Elo is a little hard to do
though hyper pram sweep for reward
though hyper pram sweep for reward
weightings given saved weight
weightings given saved weight
yeah so
yeah so
it's you would the hyper pram sweep
it's you would the hyper pram sweep
would set different weights for each
would set different weights for each
different component of the
different component of the
reward the hyper pram sweep would do is
reward the hyper pram sweep would do is
uh would set different weightings for
uh would set different weightings for
every different component of the reward
every different component of the reward
and then we would use something else
and then we would use something else
that's not just the reward As the metric
that's not just the reward As the metric
right so we like the metric for which
right so we like the metric for which
run is better would be something like
run is better would be something like
average level or something right
average level or something right
something that's not just immediate
something that's not just immediate
mediately dependent on the
mediately dependent on the
reward that would be the idea this type
reward that would be the idea this type
of thing has been done before you know
of thing has been done before you know
this type of thing has been done before
this type of thing has been done before
Deep Mind has this population Based
Deep Mind has this population Based
training paper where they did that like
training paper where they did that like
several years ago but there's required a
several years ago but there's required a
whole bunch of Hardware whereas this I
whole bunch of Hardware whereas this I
think we can just do this and have this
think we can just do this and have this
work that'll be fun let me see if
work that'll be fun let me see if
anything's blown up on X real
quick one second let me uh
let me see
uh what in the hell okay never mind all
uh what in the hell okay never mind all
these messages are just
these messages are just
Spam
cool nice uh Let's do let's do the thing
cool nice uh Let's do let's do the thing
that I just
that I just
said remove this let's add the rewards
said remove this let's add the rewards
in the reward weights in that'll be a
in the reward weights in that'll be a
fun thing to do so the way to do this uh
fun thing to do so the way to do this uh
they going to be two parts to
this the first is going to be to see uh
this the first is going to be to see uh
how we currently have
them okay so right here we have these as
them okay so right here we have these as
constants
right we're going to move these into the
right we're going to move these into the
init function of the environment
there we go reward XP reward distance
there we go reward XP reward distance
reward
Tower uh and then we will
Tower uh and then we will
do
reward okay we set the reward
components and then we look for reward
components and then we look for reward
underscore like this
any others nope that's
any others nope that's
it now we get to take these
out and we get to put them as arguments
out and we get to put them as arguments
to the
to the
environment so we'll do
discretize
discretize
Ward death equal
Ward death equal
1.0 3.0
okay these look
good so let's uh let's now pass these I
good so let's uh let's now pass these I
suppose to the the environment
yeah we'll pass all these to the
yeah we'll pass all these to the
environment and we'll see if it works
environment and we'll see if it works
and then we'll add them to the carb
sweep uh what order do I need to do that
in
in
so they're currently the last ARG so
so they're currently the last ARG so
after just
discretize discretize is just hard Cod
discretize discretize is just hard Cod
the true
the true
there all right there we go reward death
there all right there we go reward death
reward XP is this it death XP distance
reward XP is this it death XP distance
Tower yeah that's the right order cool
Tower yeah that's the right order cool
uh now we do python setup.py
no attribute reward death
really take this watch off
C MOA has no attribute reward dep
okay right I have to declare them up
okay right I have to declare them up
here as well no big
deal forgot to recompile
appears to
work that's probably reasonable right is
work that's probably reasonable right is
getting somewhere reward
getting somewhere reward
here actually notably this file that uh
here actually notably this file that uh
this oh wait
this oh wait
negative that's funky all
negative that's funky all
right it runs at least now how do we
right it runs at least now how do we
integrate this with carbs is going to be
integrate this with carbs is going to be
the question
um let me
think right now with carbs we
think right now with carbs we
have a sweep config which gets pulled
have a sweep config which gets pulled
out
out
[Music]
somewhere where's the sweep
config
config
sweep ah args of sweep is all it is so
sweep ah args of sweep is all it is so
config default do we have sweep oh yeah
config default do we have sweep oh yeah
perfect I think we literally just add
perfect I think we literally just add
this in
this in
here we're just going to have to make uh
here we're just going to have to make uh
yeah we're just going to have to make
yeah we're just going to have to make
like a a
like a a
reasonable setting for for this type of
reasonable setting for for this type of
stuff
so here are our Rewards
and we should just be able to add this
and we should just be able to add this
in here right like we just add like
in here right like we just add like
sweep parameters
sweep parameters
dot n. parameters dot reward
dot n. parameters dot reward
death
right now the way that this works is
right now the way that this works is
that it defines a normal distribution
that it defines a normal distribution
around the target
around the target
um that could be pretty aggressive
um that could be pretty aggressive
right if you define like a normal
right if you define like a normal
distribution around the
target so we're going to have to think
target so we're going to have to think
about how we handle
about how we handle
this we'll go look at the actual graphs
this we'll go look at the actual graphs
let me just put something for now uh
let me just put something for now uh
default
default
uniform let's do minus 5 to five or like
uniform let's do minus 5 to five or like
death
death
because those are like the max
because those are like the max
reasonable clipped rewards right reward
XP
XP
0.0
0.0
to
0.1 or something
0.1 or something
maybe Max
reasonable because it's per XP point so
reasonable because it's per XP point so
I think that that's like that's a lot we
I think that that's like that's a lot we
do
do
05 reward distance
0 to
0 to
five L
Tower there's no reason this should be a
Tower there's no reason this should be a
positive death
reward okay so now we have bindings for
reward okay so now we have bindings for
these at the very least um we're going
these at the very least um we're going
to want to Center these
which is one of the kind of the awkward
which is one of the kind of the awkward
things is like we need to be able to
things is like we need to be able to
define the search center for these and
define the search center for these and
uh we don't really have the ability to
uh we don't really have the ability to
do that
do that
with with wand be sweeps at the moment I
with with wand be sweeps at the moment I
don't think that's going to be one of
don't think that's going to be one of
the uh the smaller issues where we'll
the uh the smaller issues where we'll
have to hardcode
have to hardcode
maybe that's okay we can do that for now
maybe that's okay we can do that for now
um can we get reasonable ranges
let's see what this sweep
did so I gave this thing like logit
did so I gave this thing like logit
space j Lambda and it kind of stayed in
space j Lambda and it kind of stayed in
this
this
range so logit space is nice if I have
range so logit space is nice if I have
something that's going to be zero to one
something that's going to be zero to one
maybe
X space is kind of interesting or log
X space is kind of interesting or log
space is kind of
interesting I actually don't know how it
interesting I actually don't know how it
makes use of these spaces to be honest I
makes use of these spaces to be honest I
think we can just try this for now and
think we can just try this for now and
set like reasonable means
set like reasonable means
maybe it'll be somewhat inefficient but
maybe it'll be somewhat inefficient but
we'll be able to tune this later
on let me see how we're going to get
on let me see how we're going to get
this into the environment in the first
place I've got two big cookies and a
place I've got two big cookies and a
coffee to keep me awake for the next
coffee to keep me awake for the next
couple hours
okay so this is where we need to add
this e
I need to give re search center is
I need to give re search center is
negative
1.0 yeah so what I'm doing here is I'm
1.0 yeah so what I'm doing here is I'm
just like I'm adding some special case
just like I'm adding some special case
stuff for the Moa because we don't have
stuff for the Moa because we don't have
a way to do you can't specify search
a way to do you can't specify search
center in a config Wan B doesn't let you
center in a config Wan B doesn't let you
so we're just hacking around it for now
so we're just hacking around it for now
until Wan B gives us a native
integration I think these were the
integration I think these were the
values we
values we
had okay so now now we actually have all
had okay so now now we actually have all
these parameters which is very
these parameters which is very
nice
nice
and uh all we need to do is figure out
and uh all we need to do is figure out
how to pass them to the actual
environment arsof train. update
suggestion well this is now
suggestion well this is now
awkward
because we've got a bunch of awkward
because we've got a bunch of awkward
stuff going on essentially because uh of
stuff going on essentially because uh of
restriction of having to hack around Wan
restriction of having to hack around Wan
B's API
B's API
like if Wan had a a custom API for this
like if Wan had a a custom API for this
it would be way easier but since there
it would be way easier but since there
isn't one we're having to hack a bunch
isn't one we're having to hack a bunch
uh so we need to basically figure out
uh so we need to basically figure out
how to come up with groups of parameters
how to come up with groups of parameters
here let me think of a good way of doing
that e
I think I want to add a group here
I think I want to add a group here
right when I add this like this group
right when I add this like this group
thing cuz I have like carbs per am of
thing cuz I have like carbs per am of
reward
and what do you pass you pass train
and what do you pass you pass train
prams yeah
so I think you need to pass a
so I think you need to pass a
group right
group right
here so we'll
here so we'll
do en is the
group en
oops what did I do
wrong and we're going to make it so that
wrong and we're going to make it so that
uh so this thing can recognize multiple
uh so this thing can recognize multiple
different groups of parameters so this
different groups of parameters so this
will give us uh a nice
Improvement this will be
Improvement this will be
train in fact all these are going to be
train in fact all these are going to be
trained do I trust this thing to
trained do I trust this thing to
actually give me a good
correction let me make sure it didn't
correction let me make sure it didn't
make any
mistakes looks good to me
okay uh do we get rid of this
part we get rid of this for now so this
part we get rid of this for now so this
is these are the train prams and where
is these are the train prams and where
do we where did we Define WB train
do we where did we Define WB train
pams I think this is just sweep param
pams I think this is just sweep param
now all these places we have train prams
now all these places we have train prams
it's just going to be sweet
parameters e
perfect and now we have to modify this
perfect and now we have to modify this
carbs pram
carbs pram
function uh in order to take a group
function uh in order to take a group
group so one B parameter is going to be
group so one B parameter is going to be
WB crams of group parameters name like
WB crams of group parameters name like
this
this
value gives you yeah values this is
value gives you yeah values this is
fine and you get the
space uh this is kind of awkward here I
space uh this is kind of awkward here I
think you need to do like
group group
underscore yeah let's do group Dash
group Dash name like
this and
then here where we get the
suggestion now we'll get train
suggestion now we'll get train
suggestion
suggestion
equals
um I'm like doing it this
way yeah so
okay there you go so now we're going to
okay there you go so now we're going to
get the train suggestion and the
get the train suggestion and the
environment
environment
suggestion and then this is going to be
suggestion and then this is going to be
updated with train suggestion
right this is train suggestion
don't need this
don't need this
anymore and that's fine and now we
anymore and that's fine and now we
do ARS of
do ARS of
track that's
track that's
fine args of m. update M
suggestion uh and that should be it so
suggestion uh and that should be it so
now we should have access to args of
now we should have access to args of
N and then we call train with args like
N and then we call train with args like
this and we should should be able to do
this and we should should be able to do
yeah n keyword args is ARS of n right
yeah n keyword args is ARS of n right
like this so This should already work
like this so This should already work
um let's see if this works
locally mod
train does this give us correct
train does this give us correct
environment loading
looks like this does maybe
work let me make sure it's getting added
work let me make sure it's getting added
into the environment
so oh we didn't add it into the uh the
so oh we didn't add it into the uh the
train config let's do
that that would be an an interesting way
that that would be an an interesting way
of doing it as well let's
do
do
n
right so we have the N prams here
yeah and then this is going to give us
yeah and then this is going to give us
this should give us an error I believe
this should give us an error I believe
because these should be unexpected
parameters yep got
parameters yep got
unexpected keyword AR reward death now
unexpected keyword AR reward death now
we have to
go make
MOA Ward
or
death does it not
know uh it kind of
know uh it kind of
remembers oh yeah it does that's nice it
remembers oh yeah it does that's nice it
remembers uh remembers the args and
remembers uh remembers the args and
their
their
values
values
okay and now we just have to add them
okay and now we just have to add them
here reward
nice and if I just
nice and if I just
[Music]
[Music]
buffer ocean
MOBA
oops and we just like print
oops and we just like print
reward break point like
reward break point like
this we should see this passing correct
this we should see this passing correct
there are our correct
there are our correct
arguments and if I change one of
arguments and if I change one of
them we should
them we should
see we should see them
change yeah
change yeah
5.0 and go back to
three and if if I run this with
multiprocessing it still
work yep still
work yep still
works
works
cool um is it slower
that seems slow we'll have to see what
that seems slow we'll have to see what
happened there
some people are seeing
this can I just run sweep carbs and have
this can I just run sweep carbs and have
it work
missing w b
pams carbs Pam
of this is
of this is
train and then this is sweep pams
let's debug this and get this on the
let's debug this and get this on the
board so that we can um start automating
board so that we can um start automating
all of this runs all of this
all of this runs all of this
training I think this will be the thing
training I think this will be the thing
that really makes it work nicely is um
that really makes it work nicely is um
being able to just sweep the
being able to just sweep the
rewards tuning these is
rewards tuning these is
obnoxious and then what we'll do is like
obnoxious and then what we'll do is like
in future runs we'll just be able to
in future runs we'll just be able to
tune from the starting
tune from the starting
Point okay uh is this running hold on is
Point okay uh is this running hold on is
this already running let me
this already running let me
see carb
sweeps 37
sweeps 37
seconds
seconds
MOA I click overview
here we've got parameters
uh it's not logging this is
uh it's not logging this is
it train
it train
sweep oh yeah here it is
sweep oh yeah here it is
look we've got uh the rewards right here
look we've got uh the rewards right here
right so this actually
right so this actually
works let's push
this this is actually what I was going
this this is actually what I was going
to do with the tari as well that was
to do with the tari as well that was
going to mess with the uh some of the M
going to mess with the uh some of the M
parameters so I think that we're going
parameters so I think that we're going
to do both of those today maybe that
to do both of those today maybe that
would be
fun fig ocean mobile
we'll do
update add and rewards
s uh I'm realizing now that we
s uh I'm realizing now that we
we need to change the metric then don't
we need to change the metric then don't
we yeah we need to change the
metric because okay so the issue at the
metric because okay so the issue at the
moment is we can't if we're changing the
moment is we can't if we're changing the
reward
reward
magnitudes we can't then like optimize
magnitudes we can't then like optimize
for higher and higher reward right
for higher and higher reward right
like we need to have something else so
like we need to have something else so
let me let me figure out what we're
let me let me figure out what we're
going to change I can just make it like
going to change I can just make it like
radiant Team level or
something radiant level mean for
now I think that's really unstable
now I think that's really unstable
though the way I'm logging it
what if I make a norm
what if I make a norm
reward what if I just make like a
reward what if I just make like a
normalized reward metric
right so I was thinking of like dividing
right so I was thinking of like dividing
the rewards by their weights or
the rewards by their weights or
something but that's also kind of janky
something but that's also kind of janky
isn't it
[Music]
H oh I I have an
H oh I I have an
idea I got a cool
idea what if I were to make a metric
idea what if I were to make a metric
that's like total Towers taken over the
that's like total Towers taken over the
course of
course of
training right so we just directly
training right so we just directly
optimize
for like maximum game
for like maximum game
progress the game doesn't reset until
progress the game doesn't reset until
you
win that seems good
yeah that seems
yeah that seems
good I'm GNA have to code that
good I'm GNA have to code that
in but that seems like a good metric to
use sparse reward like achievement yeah
use sparse reward like achievement yeah
so achievement is
so achievement is
the achievement's like the always the
the achievement's like the always the
type of reward you want right
type of reward you want right
achievement is just like can I have some
achievement is just like can I have some
like breadcrumb trail that tells you how
like breadcrumb trail that tells you how
many breadcrumbs you've gotten towards
many breadcrumbs you've gotten towards
the thing you care about right uh you
the thing you care about right uh you
don't always have that
don't always have that
though right I mean I I could Define
though right I mean I I could Define
that
like for DOTA it would probably just be
like for DOTA it would probably just be
like Towers taken
right and this this is not a matter of
right and this this is not a matter of
the reward this is independent from the
the reward this is independent from the
reward this is so the reward is what you
reward this is so the reward is what you
train on right the metric we care about
train on right the metric we care about
now this is for evaluating how well a
now this is for evaluating how well a
specific run has done because like if I
specific run has done because like if I
double the reward right then you'd
double the reward right then you'd
expect that it would be twice as high
expect that it would be twice as high
total reward on average what we care
total reward on average what we care
about is like game progress so we want
about is like game progress so we want
like number of towers taken
that'll be
good upper lib
how do I want to expose
this well the thing is the tower taken
this well the thing is the tower taken
metric is also kind of awkward because
metric is also kind of awkward because
it optimizes for short games doesn't
it it just optimizes for like you both
it it just optimizes for like you both
Rush past each
other really what you want is you want
ELO so
okay let's look at this another
okay let's look at this another
way we know that we're going to need ELO
way we know that we're going to need ELO
at some point in here because ELO has to
at some point in here because ELO has to
be the metric that you optimize for it's
be the metric that you optimize for it's
an adversarial game you have to have
an adversarial game you have to have
ELO I have an implementation of Elo it's
ELO I have an implementation of Elo it's
just that like evaluating versus past
just that like evaluating versus past
agents or whatever is kind of
agents or whatever is kind of
complicated that's not happening today
complicated that's not happening today
I'm too tired to implement that today um
I'm too tired to implement that today um
possibly later in the
possibly later in the
week so in the meantime can I just come
week so in the meantime can I just come
up with something
reasonable you know why not let's let's
reasonable you know why not let's let's
just optimize for Towers Tak in that
just optimize for Towers Tak in that
seems it's better than
nothing um
public total Towers
taken
taken
oops zero it's not going to ever get
oops zero it's not going to ever get
reset
right
right
here total Towers taken plus equals
1 and then we will do total Towers
taken in the
taken in the
infos which is
numpy
mean where do we get this
from radiant levels
radiant oh you have to
radiant oh you have to
iterate that's
fine you have to put this in a list as
fine you have to put this in a list as
well cool so let's see if this now works
uh config MOA ocean
uh config MOA ocean
MOA environment slash
MOA environment slash
total Towers
total Towers
taken
okay and we're going to get this running
okay and we're going to get this running
on the big box
this might even incentivize uh playing
this might even incentivize uh playing
in multiple Lanes who
knows what happened oh I already pushed
knows what happened oh I already pushed
okay okay we're
good I just do not feel great today
dang Vision sharing between
dang Vision sharing between
agents that's
agents that's
harder oh wait did I miss I missed a
harder oh wait did I miss I missed a
message hold on
Vision sharing between
agents is much more of a pain
is absolutely much more of a pain um
is absolutely much more of a pain um
it's not as bad for DOTA as it is for
it's not as bad for DOTA as it is for
other
other
games but I like I can potentially do
games but I like I can potentially do
that that is not out of the question at
that that is not out of the question at
all like I actually I know how to do
all like I actually I know how to do
that as well it's just it would take
that as well it's just it would take
some
work let me think for a second what
today every agent for itself
yeah so it does have Vision
yeah so it does have Vision
sharing but
sharing but
like they are using an they are using an
like they are using an they are using an
independently acting
independently acting
model on each agent
it doesn't mean every agent for itself
it doesn't mean every agent for itself
it just means like yeah you don't get
it just means like yeah you don't get
like the shared Vision on the mini map
like the shared Vision on the mini map
like you do in Dota
right there's a lot of stuff that's not
right there's a lot of stuff that's not
one to one yet right we're trying to get
one to one yet right we're trying to get
the basics working
first e
what's running on this
box now this one's running
pong let's go to the other
box I suggested to somebody in here in
box I suggested to somebody in here in
the chat last week that um if they
the chat last week that um if they
wanted to learn how to write super high
wanted to learn how to write super high
per M and wanted to contribute to puffer
per M and wanted to contribute to puffer
they should do um like ultra high
they should do um like ultra high
performance breakout that would be cool
performance breakout that would be cool
we'll see if they actually do it that'
we'll see if they actually do it that'
be a nice
addition for
okay
okay
so first of all how fast is this train
so first of all how fast is this train
currently
I don't need this
anymore how fast is this
train oh well I've made a bug so
yeah this is now training way slower
yeah this is now training way slower
than it was training
than it was training
before so we'll have to figure out why
before so we'll have to figure out why
that
that
is I'll launch a little sweep in the
is I'll launch a little sweep in the
meantime and then I'll debug that
locally we'll run a little sweep in the
locally we'll run a little sweep in the
meantime
oh this one runs
oh this one runs
fast I guess it's just it I guess it's
fast I guess it's just it I guess it's
just hyper pram settings then
just hyper pram settings then
right what do you have uh what do we
right what do you have uh what do we
have as
defaults batch and mini
defaults batch and mini
batch I've got 64k mini batch by
batch I've got 64k mini batch by
default that's possibly just too big
default that's possibly just too big
right
yeah we're going to have to add gradient
yeah we're going to have to add gradient
accumulation and other things for this
accumulation and other things for this
project I'm sure this is going to be the
project I'm sure this is going to be the
first project that really needs the uh
first project that really needs the uh
much larger batch
sizes there's this fun blog post
really good blog post
really good blog post
so what this says is that when you're
so what this says is that when you're
training
training
pong you don't really get uh advantage
pong you don't really get uh advantage
over using mini batch size like a little
over using mini batch size like a little
over a thousand
over a thousand
here and when this is batch size if
here and when this is batch size if
you're not doing gradient accumulation
you're not doing gradient accumulation
this actually means mini batch
this actually means mini batch
size so that's important to know um some
size so that's important to know um some
of the atarian are higher but like
of the atarian are higher but like
mostly you know the most most of them
mostly you know the most most of them
are like under
are like under
10k breakout is up here whatever this is
10k breakout is up here whatever this is
like 7,000 I
like 7,000 I
guess
guess
um the DOTA 1v1 is over
here and then the DOTA 5v5 is over
here and then the DOTA 5v5 is over
here
here
so this says that you get like linearly
so this says that you get like linearly
better performance for a long time on
better performance for a long time on
complicated environments
good post where' the curves go oh they
good post where' the curves go oh they
used to have this really cool graphic on
here they redid the blog and they killed
here they redid the blog and they killed
like a lot of the cool features on the
like a lot of the cool features on the
Old Post there used to be like this
Old Post there used to be like this
interactive thing where you could like
interactive thing where you could like
slide a a loss
slide a a loss
curve this was one of the best posts
curve this was one of the best posts
that they had
it's funny how me posting about stars is
it's funny how me posting about stars is
better than me posting articles
better than me posting articles
apparently
apparently
uh but hey we're happy we're happy with
uh but hey we're happy we're happy with
the
puffers
701 welcome back will
oops let's check uh let's check on the
oops let's check uh let's check on the
sweep see if we have anything
cool yeah so this will probably take
cool yeah so this will probably take
forever to run
forever to run
sweeps uh we can optimize some other
sweeps uh we can optimize some other
stuff in the
meantime wait are these the exact same
meantime wait are these the exact same
curve oh yeah because it's only getting
curve oh yeah because it's only getting
a reward for distance at the moment that
a reward for distance at the moment that
makes
sense so in the meantime we can think
sense so in the meantime we can think
about like what other stuff we might
about like what other stuff we might
want to potentially optimize in
here I've got a little over two hours it
here I've got a little over two hours it
looks like jeez I'm just so freaking
looks like jeez I'm just so freaking
tired today it's
tired today it's
nuts don't feel great
nuts don't feel great
either
um let me think what we can do on this
um let me think what we can do on this
project to make this like really
solid I mean perf optimization is always
solid I mean perf optimization is always
nice right
because I want to I want to reenable
because I want to I want to reenable
skills and stuff but I don't necessarily
skills and stuff but I don't necessarily
want to do that until we have working
want to do that until we have working
models
models
so I'm going to bet that unless we made
so I'm going to bet that unless we made
like a major error
like a major error
somewhere probably it's just the reward
somewhere probably it's just the reward
function right probably it's just like
function right probably it's just like
the reward function being wrong is why
the reward function being wrong is why
it stopped learning so well compared to
it stopped learning so well compared to
previously
previously
and the fact that the old model file
and the fact that the old model file
still works well on the new version of
still works well on the new version of
the environment uh leads me to believe
the environment uh leads me to believe
that we probably didn't mess up the
that we probably didn't mess up the
observations because if we messed up the
observations because if we messed up the
observations the old model wouldn't work
observations the old model wouldn't work
right so I think it's just that we
right so I think it's just that we
changed the rewards we rescaled
changed the rewards we rescaled
everything and then the new scaling was
everything and then the new scaling was
bad that's my guess
so let's do a little basic per
optimization oh wait
um we could also do the thing that we
um we could also do the thing that we
just did for um for
just did for um for
breakout and see if that does way
breakout and see if that does way
better that's a thing we could do right
let's do that real
quick because if that works
quick because if that works
then I'll be able to um to do a little
then I'll be able to um to do a little
article on that midweek which would be
article on that midweek which would be
cool to
cool to
see and this would also help us validate
see and this would also help us validate
this idea of like n tuning in the first
this idea of like n tuning in the first
place
I know a bunch of people like this stuff
I know a bunch of people like this stuff
for curriculum
for curriculum
learning so let's do
that here are tari pams and we're going
that here are tari pams and we're going
to open up puffer
to open up puffer
lib
environments t
mops I see frame skip here I know
mops I see frame skip here I know
there's more than just that though let
there's more than just that though let
me go find the uh the ARG
name we're just doing this because it's
name we're just doing this because it's
like the same Technique we did for the
like the same Technique we did for the
mooba it's a nice thing to run in the
mooba it's a nice thing to run in the
background and then we'll do a little
background and then we'll do a little
bit of perf optimization and then uh
bit of perf optimization and then uh
I'll break for meetings because that'll
I'll break for meetings because that'll
probably take good couple hours to do
probably take good couple hours to do
the perf optimization this will probably
the perf optimization this will probably
only take like 20 minutes uh I'll do a
only take like 20 minutes uh I'll do a
little bit of perf optimization we'll
little bit of perf optimization we'll
see if we can get the environment
see if we can get the environment
comfortably you know above the million
comfortably you know above the million
step per second or whatever like fix
step per second or whatever like fix
some stuff up there and then uh I'll
some stuff up there and then uh I'll
break for meetings and I'll probably
break for meetings and I'll probably
come back in the evening afterward
come back in the evening afterward
depending how I'm
feeling okay so here are
feeling okay so here are
the
actions
actions
difficulty we leave difficulty off I
difficulty we leave difficulty off I
think I don't know if we want to mess
think I don't know if we want to mess
with that mode
it's just frame Skip and repeat action
it's just frame Skip and repeat action
prob I think is all we need to uh to
prob I think is all we need to uh to
care
about R
about R
skip repeat
skip repeat
action
probability 25
there's like something with sticky
there's like something with sticky
actions I think that we need to be
actions I think that we need to be
careful with before we post this stuff
careful with before we post this stuff
but
n okay
that's fine and now all we do is we grab
that's fine and now all we do is we grab
these
arcs uh I am I'm letting the MOBA run a
arcs uh I am I'm letting the MOBA run a
couple of sweeps so I just did this
couple of sweeps so I just did this
exact the exact thing I'm doing now I
exact the exact thing I'm doing now I
just did for the
just did for the
mooba um I'll show you right here
yeah so it just got to the second
yeah so it just got to the second
experiment so it's now sweeping over
experiment so it's now sweeping over
reward waiting so it's sweeping over
reward waiting so it's sweeping over
environment specific parameters this one
environment specific parameters this one
looks like it's already doing better uh
looks like it's already doing better uh
so I'm letting it do a couple little
so I'm letting it do a couple little
experiments in the background so I'm
experiments in the background so I'm
applying the exact thing that I just did
applying the exact thing that I just did
to breakout just as another test I'm
to breakout just as another test I'm
going to run this in the background then
going to run this in the background then
I'm going to do some perf optimization
I'm going to do some perf optimization
on the mooba and uh then by then we
on the mooba and uh then by then we
should have some runs done
should have some runs done
because what happened with the mooba is
because what happened with the mooba is
uh so I did this giant sweep over the
uh so I did this giant sweep over the
weekend and uh it didn't give us like
weekend and uh it didn't give us like
any good policies even though carbs is
any good policies even though carbs is
really good and we know that it works
really good and we know that it works
and the only thing that I changed was I
and the only thing that I changed was I
changed like some of the reward waiting
changed like some of the reward waiting
so what I do now is I added the reward
so what I do now is I added the reward
waiting into this sweep so it can
waiting into this sweep so it can
hopefully also figure that out for us uh
hopefully also figure that out for us uh
and I'm letting it collect some data
and I'm letting it collect some data
it's not going to take very long but I
it's not going to take very long but I
figured i' just add this to break out
figured i' just add this to break out
while I'm waiting just as another sanity
while I'm waiting just as another sanity
check on here and then I will go back
check on here and then I will go back
and do some perf optimization so that's
and do some perf optimization so that's
what's happening at the
what's happening at the
moment basically the same thing all I
moment basically the same thing all I
have to do
have to do
is distribution should
be uh what
uniform what did I do for like gamma in
uniform what did I do for like gamma in
uh Slash config slash uh oh
uh Slash config slash uh oh
default
default
gamma yeah uniform okay that's
fine let's check the demo file and just
fine let's check the demo file and just
do the exact same thing that we did for
Moa which is is right
Moa which is is right
here we just
add linear search center is four which
add linear search center is four which
is
good uh and what did we call it is
linear now this is logit
linear now this is logit
right for repeat action
right for repeat action
prob log it
0.25 and that should
0.25 and that should
work so let's see if uh whoops
let's add these as default see if it
works and I'm going to actually bump
works and I'm going to actually bump
this up so I can just test real quick
this up so I can just test real quick
but we're going to do
t let me make sure this
t let me make sure this
works be a good sanity check for the Moa
works be a good sanity check for the Moa
as
as
well python demo
well python demo
and
mode
mode
right and if this passes correctly then
right and if this passes correctly then
that should be a good sign we'll do
pong uh was it
repeat that's not good right
repeat that's not good right
right repeat action
right repeat action
prob why didn't this
pass okay so that's a good thing to know
pass okay so that's a good thing to know
so we potentially have some bug
here repeat
action repeat action
action repeat action
probability I have it right here don't I
probability I have it right here don't I
oh
oh
dumb like this I did that correctly for
dumb like this I did that correctly for
the MOBA though
yeah 0.5
yeah 0.5
perfect and now this goes to 0.25 which
perfect and now this goes to 0.25 which
is the
is the
normal uh normal
version and we should just be able to
version and we should just be able to
open that move the break point Commit
open that move the break point Commit
This
I have a spare box for this as
well e
and then we'll see if that sweep does
and then we'll see if that sweep does
any
any
better let's make sure this doesn't
better let's make sure this doesn't
error invalid type
error invalid type
float
float
okay we forgot one thing with
this is integer
and let's see if this
works looks like
works looks like
it that's uh 37k 35k at least train
it that's uh 37k 35k at least train
steps per second on Atari so that's a
steps per second on Atari so that's a
less than 5 minute train for Atari right
less than 5 minute train for Atari right
there
okay so now we're all set on our
okay so now we're all set on our
sweeps we have a third one on our mobile
sweeps we have a third one on our mobile
yet
anything anybody taking
Towers doesn't look like anybody's
Towers doesn't look like anybody's
taking Towers just yet
so it's going to take it a while to find
so it's going to take it a while to find
um reasonable train settings but you can
um reasonable train settings but you can
see
see
actually if I zoom in on this a little
actually if I zoom in on this a little
bit you see there's env. reward death m.
bit you see there's env. reward death m.
reward you know tower all these things
reward you know tower all these things
so the uh rewards are now in here as
so the uh rewards are now in here as
well which is pretty
cool so let's go back to some uh some
cool so let's go back to some uh some
perf optimization from here
on the desktop
yeah let's see what is breaking uh
yeah let's see what is breaking uh
what's breaking at the moment
see if we can find anything that's slow
well obviously this stuff calls back to
well obviously this stuff calls back to
python that's that's allowed
python that's that's allowed
too uh this is a line that I wish I
too uh this is a line that I wish I
could make not call back to Python and
could make not call back to Python and
it would help us quite a bit
but I really can't I wish I could but I
can't this is weird that this cast
can't this is weird that this cast
doesn't
work this does this calls back cuz it's
work this does this calls back cuz it's
public which is fine we know that's
public which is fine we know that's
going to
going to
happen this is all in a nit so we don't
happen this is all in a nit so we don't
care that this runs
python
oh well that's well that there's your
oh well that's well that there's your
problem
problem
uh yeah we have all the optimized we
uh yeah we have all the optimized we
have all the slow ass end flags
have all the slow ass end flags
on let's fix
on let's fix
that message do you think this could be
that message do you think this could be
expanded to discover new macro strats in
expanded to discover new macro strats in
League with each new
League with each new
update uh so the thing is yes but
update uh so the thing is yes but
like it would have to be pretty much one
like it would have to be pretty much one
to one with
to one with
league
league
and it would have to be way faster than
and it would have to be way faster than
league is now because otherwise you're
league is now because otherwise you're
looking at the scale of compute for
looking at the scale of compute for
DOTA I think that this could be done
DOTA I think that this could be done
like successfully at the scale that Riot
like successfully at the scale that Riot
would be willing to invest in and I know
would be willing to invest in and I know
actually has done a fair bit on the
actually has done a fair bit on the
reinforcement learning side I actually I
reinforcement learning side I actually I
offered to do some stuff like this uh
offered to do some stuff like this uh
with puffer for him but uh I think they
with puffer for him but uh I think they
were doing they were kind of doing their
were doing they were kind of doing their
own thing at the time um but yeah this
own thing at the time um but yeah this
is absolutely the type of thing that's
is absolutely the type of thing that's
going to just get easier in the future
going to just get easier in the future
and I don't know if game studios are
and I don't know if game studios are
going to be the first major adopters of
going to be the first major adopters of
this stuff but um they will be adopters
this stuff but um they will be adopters
of this when it's like more consistent
of this when it's like more consistent
and easy down the road which is stuff I
and easy down the road which is stuff I
building towards it's all stuff I'm
building towards it's all stuff I'm
building
towards I mean this is kind of the plan
towards I mean this is kind of the plan
with puffer right is that this Tech is
with puffer right is that this Tech is
just going to get way more stable as a
just going to get way more stable as a
result of all this stuff I'm building
result of all this stuff I'm building
and then companies are going to
and then companies are going to
hopefully want want to use that as it
hopefully want want to use that as it
becomes easier you can use it for free
becomes easier you can use it for free
and if you want you know extra features
and if you want you know extra features
or support then we can talk
right I actually think Riot would find
right I actually think Riot would find
it more useful
it more useful
because they'll be able to use it to
because they'll be able to use it to
prevent them from releasing broken
prevent them from releasing broken
with updates
with updates
right so it makes more sense from the
right so it makes more sense from the
game balance perspective to have the
game balance perspective to have the
game company using
it because you're not going to be able
it because you're not going to be able
to do something like this on League like
to do something like this on League like
one to
one to
one without deep cooperation from the
one without deep cooperation from the
game developer anyways and
game developer anyways and
like this stuff is intensive and
like this stuff is intensive and
expensive to do so like that that's just
expensive to do so like that that's just
never going to make sense
never going to make sense
but it's totally something that Riot
but it's totally something that Riot
could do know if they wanted to I
could do know if they wanted to I
wouldn't even necessarily recommend
wouldn't even necessarily recommend
doing that just yet because that's a
doing that just yet because that's a
really hard RL problem but it's
really hard RL problem but it's
definitely something that could be done
definitely something that could be done
you know cheaper and easier in the
you know cheaper and easier in the
future
okay way better so once I took all the
okay way better so once I took all the
dumb Flags
dumb Flags
off this function runs in pure C
off this function runs in pure C
why do I have this add Trace back Pi add
why do I have this add Trace back Pi add
Trace
Trace
back and why do I have this thing that
back and why do I have this thing that
looks like a function
call is just this is this just The
call is just this is this just The
annotation
itself or is this traceback saying that
itself or is this traceback saying that
wait line
wait line
number this has got to be like
the Pix add Trace back
h
so this could be spous
I don't know if this is a real I really
I don't know if this is a real I really
don't know if this is like a real error
don't know if this is like a real error
I this looks like it's adding
I this looks like it's adding
something for the scon it looks like
something for the scon it looks like
this is adding The annotation itself but
this is adding The annotation itself but
why would it be adding an annotation
why would it be adding an annotation
here like it shouldn't be right not all
here like it shouldn't be right not all
my functions have this right do I have
my functions have this right do I have
some functions that
some functions that
have yeah see like this one this one
have yeah see like this one this one
here doesn't
here doesn't
have
anything do I do I have any functions
anything do I do I have any functions
that don't
that don't
have
have
yellow they all have profile disabled on
them maybe I should do at profile off or
something okay so like aside from these
something okay so like aside from these
highle function calls which are for some
highle function calls which are for some
reason yeah so this one is
reason yeah so this one is
definitely like calling back to python
definitely like calling back to python
right
memory view
length yeah cuz I don't this is not uh
length yeah cuz I don't this is not uh
this is not typed is why so like there
this is not typed is why so like there
there are a few small things there I can
there are a few small things there I can
fix but then this is these are all just
fix but then this is these are all just
the function calls
the function calls
themselves uh this one is one that I can
themselves uh this one is one that I can
actually fix levels one I can actually
fix what in the
fix what in the
heck okay so this spawn function is
heck okay so this spawn function is
apparently
slow Pi in from
long I have it typed here right y
Pi int from
double I don't know why a cast like this
double I don't know why a cast like this
would
would
trigger a call back that's
weird scan AOE here
weird scan AOE here
is triggering
is triggering
this even though scan AOE is in pure oh
this even though scan AOE is in pure oh
it doesn't have a return type
okay we can uh we can work with this
right let's start making some basic
optimizations I'm kind of suspicious
optimizations I'm kind of suspicious
about this
one let's let's try
one let's let's try
this is this any different if I I do the
this is this any different if I I do the
cast in the C
syntax ah it
syntax ah it
is
is
int yeah so this actually look at that
int yeah so this actually look at that
this goes away
we don't care about stuff in that
we don't care about stuff in that
function we go to
level okay this is now going to
level okay this is now going to
be int XP I believe
yep int
yep int
XP and then this length thing doesn't
XP and then this length thing doesn't
work so there are 30
levels that ought to
work and now we'll have that function in
work and now we'll have that function in
C that's one other function call
avoided we haven't messed with like
avoided we haven't messed with like
compile Flags yet at
compile Flags yet at
all that can sometimes be useful okay
all that can sometimes be useful okay
this is now in pure c as we
expect these signatures are bothering me
expect these signatures are bothering me
like I don't know if these are actually
like I don't know if these are actually
calling back or not we'll have to check
calling back or not we'll have to check
this uh XP for player kill
how the hell is this calling back to
python I would love to know how the hell
python I would love to know how the hell
this is calling back to
this is calling back to
python Pi error
occurred what
How can there be a pi error on a c
function that shouldn't be possible
function that shouldn't be possible
Right
where did it
go if
unlikely it's like whenever you return
unlikely it's like whenever you return
an integer it decides that negative one
an integer it decides that negative one
could be an error
could be an error
code right
wait but isn't this short circuiting
wait but isn't this short circuiting
wait hold on
wait hold on
I think that this is actually okay isn't
I think that this is actually okay isn't
it because this is a compile time
it because this is a compile time
check oh oh actually wait this is cool
check oh oh actually wait this is cool
okay I actually learned something here
okay I actually learned something here
so look at look at how this works so
so look at look at how this works so
this is the return value here this is
this is the return value here this is
the int this is the generated name for
the int this is the generated name for
this XP for player kill function I wrote
this XP for player kill function I wrote
right and then
right and then
semicolon and then it checks the return
semicolon and then it checks the return
type if
unlikely the value is equal to
unlikely the value is equal to
to1 and Pi error occurred this is the
to1 and Pi error occurred this is the
part that calls back to python this
part that calls back to python this
value can never be
value can never be
ne1 so this short
ne1 so this short
circuits this never gets called so this
circuits this never gets called so this
is actually in pure C because what this
is actually in pure C because what this
annotation is saying is hey you know it
annotation is saying is hey you know it
looks like there's a branch of the code
looks like there's a branch of the code
that could possibly return to python but
that could possibly return to python but
because this function is never going to
because this function is never going to
be
be
ne1 that means that it's never actually
ne1 that means that it's never actually
going to call back to python so this is
fast that's
cool now this one is actually a
cool now this one is actually a
legitimate calls back to python here so
legitimate calls back to python here so
we got to fix
this I don't know what's up with these
this I don't know what's up with these
casts but it looks it looks like there
casts but it looks it looks like there
are certain types of casts that just
are certain types of casts that just
like don't play
like don't play
nice uh cast Bine tightly to variables
nice uh cast Bine tightly to variables
right so I can just do like this without
parents I like it I like it looking like
parents I like it I like it looking like
that that looks good
so move this window so it doesn't cover
chat pure
C uh scan AOE is missing a return type
C uh scan AOE is missing a return type
that's actually a really big one I don't
that's actually a really big one I don't
know how I screwed that up
there we go
give it a return type
mhm
PC what happened
here pix Pi int as
here pix Pi int as
int
dope what line is this
this is no big
this is no big
deal what's The Interpreter you're using
deal what's The Interpreter you're using
to ID these python
to ID these python
calls
so no you're you're good just stream
so no you're you're good just stream
like you're going to miss random things
like you're going to miss random things
it's good so
it's good so
um the this is not an IDE feature this
um the this is not an IDE feature this
is a built-in scon
is a built-in scon
feature if you just compile with uh
feature if you just compile with uh
annotate equals true
annotate equals true
which I have in the setup.py file then
which I have in the setup.py file then
it generates for you every time you
it generates for you every time you
compile it generates you this HTML that
compile it generates you this HTML that
tells you where stuff calls back to
tells you where stuff calls back to
Python and it shows you the generated
Python and it shows you the generated
code as
code as
well so that's what's going on here so
well so that's what's going on here so
I'm just looking for places where it
I'm just looking for places where it
calls back to Python and then
calls back to Python and then
eliminating them and it's like it's a
eliminating them and it's like it's a
slow process but not that
slow process but not that
slow and then I'm just moving this file
slow and then I'm just moving this file
up to where it's mounted on my local
up to where it's mounted on my local
machine so I can look at
machine so I can look at
it so like here I just added a type
it so like here I just added a type
right I added this missing type I'll
right I added this missing type I'll
refresh the page in radius right and now
refresh the page in radius right and now
there's no there's no issue here so I'll
see reset is going to call back to
see reset is going to call back to
python obviously
python obviously
because uh it's a defa
because uh it's a defa
oo I don't actually like that I think
oo I don't actually like that I think
this should be a CP
death yeah this should be a CP
death because you call this internally
death because you call this internally
as well
right actually let me
right actually let me
think yeah this CP
death and then for step step is in pure
death and then for step step is in pure
C
C
this path is
this path is
not wow that's incredibly helpful work
not wow that's incredibly helpful work
has pushed me to start using syon put it
has pushed me to start using syon put it
off for too long I mean scon is really
off for too long I mean scon is really
awesome I mean it's
awesome I mean it's
not the annoying thing with scon is that
not the annoying thing with scon is that
there are a few rough edges because it's
there are a few rough edges because it's
like it's not as big of a project as
like it's not as big of a project as
rust is for instance but it has it has
rust is for instance but it has it has
like such nice integration with python
like such nice integration with python
and it's so good for so many things that
and it's so good for so many things that
you almost can't not use it
um yeah it's just it's really nice for a
um yeah it's just it's really nice for a
lot of
lot of
stuff there's a bit of a learning curve
stuff there's a bit of a learning curve
there's like a bit of annoyingness with
there's like a bit of annoyingness with
the debugging of it I wish I had a
the debugging of it I wish I had a
little bit better like a few better
little bit better like a few better
tools with it but it is quite
nice and it's like it's if you're a comp
nice and it's like it's if you're a comp
competent programmer already maybe you
competent programmer already maybe you
don't have a ton of AI experience maybe
don't have a ton of AI experience maybe
you do but if you're just like a
you do but if you're just like a
competent engineer it's pretty easy to
competent engineer it's pretty easy to
just start building uh really really
just start building uh really really
fast simulations in scon and if you want
fast simulations in scon and if you want
to get into like RL stuff more that's a
to get into like RL stuff more that's a
huge way to contribute is if you just
huge way to contribute is if you just
like build some cool simulators that are
like build some cool simulators that are
Ultra fast and you know you submit them
Ultra fast and you know you submit them
to puffer like that's I mean that's
to puffer like that's I mean that's
driving the future of RL right there we
driving the future of RL right there we
have no good simulators right now that's
have no good simulators right now that's
that's why I've been building
them everybody says like oh we already
them everybody says like oh we already
have so many environments we already
have so many environments we already
have so many environments why do we need
have so many environments why do we need
more well because they're all slow right
simulator so slow looking at V would be
simulator so slow looking at V would be
better your simulator puffer has the
better your simulator puffer has the
best vectorization in existence by a
best vectorization in existence by a
huge margin um for like arbitrary M's so
huge margin um for like arbitrary M's so
you can do
you can do
both you can write this thing and then
both you can write this thing and then
you have a oneline modification like a
you have a oneline modification like a
oneline wrapper and then you can have it
oneline wrapper and then you can have it
work with puffers
factorization there's technically it's a
factorization there's technically it's a
little bit more annoying but there's an
little bit more annoying but there's an
advanced API as well that I use for my
advanced API as well that I use for my
Sims that like bypasses a bunch of the
Sims that like bypasses a bunch of the
like gymnasium petting zoo API
like gymnasium petting zoo API
and makes it even faster from there
well that's less slow now
well that's less slow now
right
right
cool um only thing I want to know is
cool um only thing I want to know is
whether or not all these headers here
whether or not all these headers here
are actually calling back to see or not
I figure that out
man so this adds a trace
back why does this one have a trace back
back why does this one have a trace back
right I got profile
right I got profile
false function L1 error
I really would like to know what these
I really would like to know what these
Trace backs
Trace backs
are and whether they're slowing me
are and whether they're slowing me
down pix add Trace
down pix add Trace
back on to C def with everything typed
I think this is just the annotate
I think this is just the annotate
overhead
right like these all look the
same this one we already went through is
same this one we already went through is
not a real so we know that there can be
spous so yeah this thing should be
spous so yeah this thing should be
running pure C let's do a little
running pure C let's do a little
benchmarking
let's recompile with uh well let's
let's recompile with uh well let's
actually see if that makes a difference
actually see if that makes a difference
if I do it with annotate on or
if I do it with annotate on or
off so we do could not broadcast
off so we do could not broadcast
wait a shape
wait a shape
40 it's annoying
what the heck is wrong with
this could not
broadcast into shape
why are there
40 oh numm is four I guess
oops I forgot to pull that modification
okay so this is 200,000 which is way
okay so this is 200,000 which is way
slower than
expected let's see if the annotate
expected let's see if the annotate
messes with
it you have to change the file just just
it you have to change the file just just
so it
so it
recompiles I don't know we'll do
this should be faster than 200k quite a
this should be faster than 200k quite a
lot
that's really
weird was very
weird was very
weird so uh I guess we got to do
weird so uh I guess we got to do
profiling
then let me
then let me
see let me make sure we're not missing
see let me make sure we're not missing
anything
10m
well that's
well that's
weird why is it suddenly faster
right I believe this is also eight or
right I believe this is also eight or
nine right nine valid actions Maybe
I set the device to
I set the device to
CPU so I don't know why it's trying to
CPU so I don't know why it's trying to
use
use
Cuda I don't know if you sent another
Cuda I don't know if you sent another
message but I don't know what you mean
message but I don't know what you mean
this is out of
context all right let's do some
context all right let's do some
profiling here let's see what it trying
profiling here let's see what it trying
to
do message
do message
disappeared now reset the first
one run this with C profile right
yeah let let's do
this it might be Auto sensoring links if
this it might be Auto sensoring links if
you're putting links in I don't know
you're putting links in I don't know
what what the default you YouTube
what what the default you YouTube
settings
are e
okay that's a lot of
okay that's a lot of
stuff
um this profile
run
wait C profile.
run huh
sort
key try this
this
this
is stats
is stats
STP think like you just do this maybe
okay so this now gives
okay so this now gives
us timings
this gives us some very weird
timings one second I got to go get
timings one second I got to go get
something I feel like God awful one sec
okay I think message got removed because
okay I think message got removed because
I pasted an error
I pasted an error
trying to set up puffer lib on my
trying to set up puffer lib on my
MacBook clone the
MacBook clone the
repo and installed the
repo and installed the
dependencies I set the device to
dependencies I set the device to
CPU I don't know why it's trying to use
CPU I don't know why it's trying to use
Cuda let me check that for you real
Cuda let me check that for you real
quick uh what's a really simple m
some reason I can't
some reason I can't
WR that's really
funny
weird let's do it
huh so I see the device CPU there not
huh so I see the device CPU there not
getting accounted for hold
on yeah that's weird let me fix that for
on yeah that's weird let me fix that for
you
see where it's overwriting this thing
CPU
let me see where it's leaking
Cuda e
let me see if this does
it I think it might just be the
monitoring no I still see GPU
monitoring no I still see GPU
utilization that's weird
I could just do Cuda here Cuda
visible
none okay that works
it's really weird I wonder why it's
it's really weird I wonder why it's
like I see the Cuda utilization as
well yeah it's not using it for learning
what happens if you do cud divisible
what happens if you do cud divisible
devices equals
none for
maybe the thing you fixed in
maybe the thing you fixed in
CLI that probably will
CLI that probably will
hold
on here oops get pull
okay here you can pull Dev and tell me
okay here you can pull Dev and tell me
if that
works e
and let me know if that fixes it Noah I
and let me know if that fixes it Noah I
think it probably
think it probably
should
should
um what were we doing right we were
um what were we doing right we were
trying to debug
trying to debug
the utilization here
utilization really didn't make any sense
right oh wait no because we I I remember
right oh wait no because we I I remember
so yeah it kind of does then um
so the thing is we need to have all
so the thing is we need to have all
these function that fixes it
these function that fixes it
great well there you go fixed in
great well there you go fixed in
Dev no problem I love being able to just
Dev no problem I love being able to just
fix stuff live
as you can probably tell I'm kind of out
as you can probably tell I'm kind of out
of it today my
of it today my
um like a bunch of stuff just really
um like a bunch of stuff just really
freaking hurts from the run yesterday so
freaking hurts from the run yesterday so
I'm trying to just make a little bit of
I'm trying to just make a little bit of
progress here and there today and
progress here and there today and
hopefully we'll be back tomorrow with
hopefully we'll be back tomorrow with
like
like
way way better Dev
but we can to get a little perf Dev done
but we can to get a little perf Dev done
today I
today I
think
um I'm trying to think which of these
um I'm trying to think which of these
functions I want
functions I want
to to remove because what's happening at
to to remove because what's happening at
the moment
the moment
is I've have all these like um profile
is I've have all these like um profile
false decorators on
false decorators on
functions and by doing that
um by having these like profile Falls
um by having these like profile Falls
I'm like not actually seeing where
I'm like not actually seeing where
computes being used because it's rolling
computes being used because it's rolling
it into the
step interesting that the creep Ai and
step interesting that the creep Ai and
the neutral AI aren't up there though
the neutral AI aren't up there though
does that make
sense doesn't make sense to me
so this numpy core record is really
so this numpy core record is really
slow and what other functions are
there this profile graph does not Mak
there this profile graph does not Mak
sense to
me oh this is because it's not actually
me oh this is because it's not actually
getting compiled with profiling on right
getting compiled with profiling on right
let me
see compiler directives profile equal
see compiler directives profile equal
through
oh I see half what this means is half of
oh I see half what this means is half of
the performance is being lost to numpy
the performance is being lost to numpy
record calls okay another
record calls okay another
that would do it
much better
so now we see that the
what's this numpy core records get
what's this numpy core records get
attribute thing where the heck is this
attribute thing where the heck is this
being called
from it's got to be being called for
from it's got to be being called for
MOBA step
right and all these other record
right and all these other record
functions that are being called that are
functions that are being called that are
slow yeah
and this has to just be the logging
and this has to just be the logging
right
do I need to do this this like self buff
do I need to do this this like self buff
rewards I don't need to do this do I
well I should put the reward somewhere
[Music]
get
reward Dot
okay just do
okay just do
this then have it be in
C I bet this is the slow bit right here
right e
yeah does this do any
better that should cut out a whole bunch
better that should cut out a whole bunch
of numpy
processing way better
processing way better
immediately immediately way better
we still have a fair bit of time being
we still have a fair bit of time being
wasted on this record processing
though night thanks for dropping
by oh what is that greeting or a goodbye
by oh what is that greeting or a goodbye
it's going well uh well enough at least
it's going well uh well enough at least
pretty tired today but we're making a
pretty tired today but we're making a
little bit of progress we've got some
little bit of progress we've got some
cool sweep experiments running and I
cool sweep experiments running and I
posted a couple cool
posted a couple cool
articles carbs does really
well how's this weep
well how's this weep
going I started with good night all
going I started with good night all
right funny
right funny
enough sweep doesn't seem to be doing
enough sweep doesn't seem to be doing
much is
it definitely something weird
it definitely something weird
here probably something with the EnV
here probably something with the EnV
what about the other
what about the other
one we did start a different
sweep oh yeah there we
sweep oh yeah there we
go yeah carbs is definitely working
you can see right here this one's
you can see right here this one's
already at 19
reward so carbs is working it's whatever
reward so carbs is working it's whatever
we're doing in the Moa that's
we're doing in the Moa that's
not we'll figure that out let's do a
not we'll figure that out let's do a
little bit more perf optimization first
little bit more perf optimization first
it'll be so much easier if it's just
it'll be so much easier if it's just
fast um
how often do we want to report
how often do we want to report
performance
that should just be fast if we do this
right yeah it's way
better just implemented random Force
better just implemented random Force
without using any library now I'm going
without using any library now I'm going
to learn some open
to learn some open
CV any advice on starting to
CV any advice on starting to
CV open CV is like the most cursed
CV open CV is like the most cursed
Library out there
Library out there
man open CV is a pain in the ass
man open CV is a pain in the ass
Library I mean it depends on what you're
Library I mean it depends on what you're
doing if you're trying to learn like
doing if you're trying to learn like
classic computer vision yeah that's what
classic computer vision yeah that's what
you use if you're trying to learn more
you use if you're trying to learn more
modern stuff I would
modern stuff I would
like I'd spend more not time on like
like I'd spend more not time on like
neuronet architectures and
neuronet architectures and
such cuz open TV is just a pain in the
such cuz open TV is just a pain in the
ass
Library go like Implement an amness
Library go like Implement an amness
classifier if you haven't done that
wait what's this SPS on this
wait what's this SPS on this
for 40
for 40
wait
wait
what how fast is this hold
on if I just turn this off
cannot assign type float to
reward right
I see okay I see how to do
I see okay I see how to do
this
um
e
e e
probably this works
right I gave it get the buffer
right I gave it get the buffer
[Music]
[Music]
rewards and mean s up buff rewards yeah
rewards and mean s up buff rewards yeah
let's see this does this do
anything the goal here is to just get as
anything the goal here is to just get as
much of the
much of the
numi processing that's in Python in DC
numi processing that's in Python in DC
or just like less frequent as possible
or just like less frequent as possible
because it's really slow and
bad e
from
from
file wait how the heck is from file
file wait how the heck is from file
being
called oh that's bad hold
on we
wa shud how do I do
this I guess global
do this do
it I just want to not time the init in
it I just want to not time the init in
this the init is
this the init is
slow doesn't
matter I'm still seeing functions that I
matter I'm still seeing functions that I
don't like to see
here put actions here as
well yeah we'll just do this for now
well yeah we'll just do this for now
whatever
okay that is substantially
better where's the C function
I can't see C MOA
step but I can see that there is
step but I can see that there is
basically no overhead from python
basically no overhead from python
because all the python functions are now
because all the python functions are now
uh
uh
negligible so that's perfect
and now if I run this without
and now if I run this without
um if I just like run
this what do we get
up to
300K that still seems
300K that still seems
slow only
300K why would it be only 300K didn't we
300K why would it be only 300K didn't we
have it at 500 or we had it at 600
have it at 500 or we had it at 600
before right
before right
something must have
changed possible this is too many
changed possible this is too many
environments does it change if I do like
environments does it change if I do like
environments that different
that is
faster which is
odd should not be that big of a
difference one
difference one
environment I think it's still slow with
environment I think it's still slow with
one we'll
see I had this running at a million
see I had this running at a million
before which was like 5 600k on this
before which was like 5 600k on this
machine
300K
H I'm not
H I'm not
sure I think we're going to have to do
sure I think we're going to have to do
some profiling back into the uh the C
some profiling back into the uh the C
code
code
then yeah
what time is
what time is
it 1:35 I'll do this another 25 minutes
it 1:35 I'll do this another 25 minutes
or so I want to give myself a bit of
or so I want to give myself a bit of
time before my meeting to like I don't
time before my meeting to like I don't
know figure out what's wrong because I
know figure out what's wrong because I
just have not felt great all day um
okay so we build this now with profiling
again maybe we can see where we're
again maybe we can see where we're
losing
losing
out for
h
so oh I see message where are you live
so oh I see message where are you live
I'm in paloalto for the time
being it looks like the main thing that
being it looks like the main thing that
happened since the last time I profiled
happened since the last time I profiled
this is that uh compute observations
this is that uh compute observations
just got way slower
right let me do this with like 20
M's it's like a good midpoint
oh jeez
wait what what happened
wait what what happened
here the time spent
here the time spent
in Step went way
in Step went way
down
down
how
wait 9 seconds what was it before
oh no that's
right this is good
actually it's all the AI the creep
actually it's all the AI the creep
neutral Ai and then the compute
neutral Ai and then the compute
observations it looks like right
observations it looks like right
let me see if I add these
up well no because there's also this so
up well no because there's also this so
I guess that's scan AOE or
something there's a lot of stuff to
something there's a lot of stuff to
potentially optimize
here it's a good good spread hey div
here it's a good good spread hey div
welcome
trying to figure out how to perf
trying to figure out how to perf
optimize this thing I have this running
optimize this thing I have this running
at 1.3 million steps per second and now
at 1.3 million steps per second and now
it's down to probably half
it's down to probably half
that what would you recommend after
that what would you recommend after
making an memus classifier for vision um
making an memus classifier for vision um
you kind of just want to do a few small
you kind of just want to do a few small
projects I mean it depends what you're
projects I mean it depends what you're
trying to do right like if you're trying
trying to do right like if you're trying
to get into research or more science
to get into research or more science
side like you do a couple of the classic
side like you do a couple of the classic
basic projects to get familiar with
basic projects to get familiar with
stuff and then you start like either
stuff and then you start like either
trying to reimplement papers or do like
trying to reimplement papers or do like
really narrowly scoped basic research
really narrowly scoped basic research
while reading papers like something like
while reading papers like something like
that I mean there's no there's no real
that I mean there's no there's no real
trick to getting into research other
trick to getting into research other
than doing
it and you're going to be woefully
it and you're going to be woefully
inefficient at first with your time
inefficient at first with your time
because like everything's going to be
because like everything's going to be
confusing but you know you just put in
confusing but you know you just put in
the time and you get better and you get
the time and you get better and you get
faster and you know more effici that
faster and you know more effici that
stuff that's literally the trick that
stuff that's literally the trick that
that there's no trick that's it
I'm trying to think what I can optimize
I'm trying to think what I can optimize
here
so half the time is being spent in
so half the time is being spent in
Step don't you think too much blue color
Step don't you think too much blue color
scheme is bad for your
eyes
um I think the blue light thing is
um I think the blue light thing is
probably
probably
frankly I think that's like a scheme to
frankly I think that's like a scheme to
sell those dumb glasses
want to be in research but I'm thinking
want to be in research but I'm thinking
about what if I
about what if I
cannot get a
job it's easier to go it's easier maybe
job it's easier to go it's easier maybe
to do like applied AI stuff for
to do like applied AI stuff for
sure I mean applied AI roles are
sure I mean applied AI roles are
basically well a lot of the applied AI
basically well a lot of the applied AI
roles are basically like you're a
roles are basically like you're a
software engineer and then you know some
software engineer and then you know some
AI
I'm trying to think where all the
I'm trying to think where all the
computes go in
computes go in
here so I should just look at
it I had to look at like what functions
it I had to look at like what functions
I've turned
I've turned
off
oops that's
fine nice to have Li support the MPS
fine nice to have Li support the MPS
torch back
torch back
end in CLI rendering for gpus on
end in CLI rendering for gpus on
MacBooks maybe I'll open it yeah go if
MacBooks maybe I'll open it yeah go if
you open a PR and it works I'll merge
it just make sure you PR it to Dev not
it just make sure you PR it to Dev not
10 not sure which way to go yet thank
10 not sure which way to go yet thank
you though yeah it takes time I mean I
you though yeah it takes time I mean I
started this stuff like literally when I
started this stuff like literally when I
was 16 and I mean it took me back then
was 16 and I mean it took me back then
it took me like a thousand hours to take
it took me like a thousand hours to take
to do what would take me like 10 hours
to do what would take me like 10 hours
now but that's how you
learn move to is not
learn move to is not
profiled move towards is not
profiled move towards is not
profiled basic attack is not profiled
profiled basic attack is not profiled
scan AOE is not profiled
I guess this whole Loop
I guess this whole Loop
isn't
profiled I'm kind of wondering if it
profiled I'm kind of wondering if it
makes sense to just put these blocks of
makes sense to just put these blocks of
code into separate functions for the
code into separate functions for the
purpose of profiling
purpose of profiling
right like if I just put these into
right like if I just put these into
separate code blocks it would be way
separate code blocks it would be way
easier to tell I it's kind of dumb to
easier to tell I it's kind of dumb to
have to do
that but it's really nice for the
that but it's really nice for the
profiling
right only got another 15 minutes or so
right only got another 15 minutes or so
here I can do
that c n
spawn entity neutral
that's
fine that creeps
leaving to work on Ms thank good yeah go
leaving to work on Ms thank good yeah go
ahead good
luck idx
luck idx
Lane entity
Lane entity
creep all right so this will be nice
creep all right so this will be nice
because we'll actually be able to get
because we'll actually be able to get
way better profiling
way better profiling
data I hate that I have to like break up
data I hate that I have to like break up
the code just for this reason because I
the code just for this reason because I
would normally never do
would normally never do
this like I generally will not make
this like I generally will not make
functions like for things that I'm going
functions like for things that I'm going
to use once like this I generally won't
to use once like this I generally won't
make
make
functions but for profiling it's kind of
functions but for profiling it's kind of
nice uh so you have tower idx
nice uh so you have tower idx
Tower and that's
it and then we do step players I guess
discovered your research I'll watch it
discovered your research I'll watch it
tomorrow pretty much pretty
tomorrow pretty much pretty
interesting uh depending on where you're
interesting uh depending on where you're
coming in from there's the thesis video
coming in from there's the thesis video
which is the big one on YouTube and then
which is the big one on YouTube and then
I also have I've got like a deep dive on
I also have I've got like a deep dive on
the tech of puffer 10 that's like more
the tech of puffer 10 that's like more
Technical and then I've got a bunch of
Technical and then I've got a bunch of
streams on like building stuff but yeah
streams on like building stuff but yeah
thank
you I'm going to be making more videos
you I'm going to be making more videos
as well
as well
I to start doing that for
sure and most of these variables are got
sure and most of these variables are got
to go over there
to go over there
right
right
yeah pretty much all this crap goes over
yeah pretty much all this crap goes over
there doesn't it
there doesn't it
step
step
[Music]
[Music]
players if I get this working real quick
players if I get this working real quick
though this will be nice for um well
though this will be nice for um well
this will be nice for figuring some
this will be nice for figuring some
stuff
out tune in again tomorrow great stuff
out tune in again tomorrow great stuff
we'll try the simple vectorization of my
we'll try the simple vectorization of my
M together with puffer syon stuff is a
M together with puffer syon stuff is a
deep rabbit hole but a great one yeah uh
deep rabbit hole but a great one yeah uh
I would just recommend like puffer we
I would just recommend like puffer we
try to make it really easy you just wrap
try to make it really easy you just wrap
your environment in if it's single agent
your environment in if it's single agent
gymnasium puff r it's multi-agent you do
gymnasium puff r it's multi-agent you do
um uh petting Zu puffer EnV and then you
um uh petting Zu puffer EnV and then you
just call like VEC make with that rapper
just call like VEC make with that rapper
and you're
and you're
good there plenty of examples and puffer
good there plenty of examples and puffer
with
with
that our VEC is usually the fastest by a
that our VEC is usually the fastest by a
wide margin
anything is going oh jeez if you're
anything is going oh jeez if you're
using rib that's the worst library in
using rib that's the worst library in
existence I fought that library for
existence I fought that library for
years I tried to contribute to that lot
years I tried to contribute to that lot
yeah that's going to be God awful yeah
yeah that's going to be God awful yeah
hit me up then in that case ly because
hit me up then in that case ly because
that's you're just not you're going to
that's you're just not you're going to
straight up just not have a good time
straight up just not have a good time
with
with
that puffer Li will seem like magic
that puffer Li will seem like magic
after that because it's like most of the
after that because it's like most of the
stuff that rib does but
stuff that rib does but
simple great to get spun up but time to
simple great to get spun up but time to
move
move
on
on
it's the thing is like the problem with
it's the thing is like the problem with
the with arib is like they're trying to
the with arib is like they're trying to
productionize a field that is
productionize a field that is
fundamentally finicky and requires you
fundamentally finicky and requires you
to be able to edit every level of the
to be able to edit every level of the
stack and they're like blackboxing every
stack and they're like blackboxing every
single level of the stack and then on
single level of the stack and then on
top of that they're like it the code is
top of that they're like it the code is
their rlb itself is just super buggy and
their rlb itself is just super buggy and
has bad error messages so you're just
has bad error messages so you're just
not going to have a good
time base Ray is really
awesome they've got five different AP
awesome they've got five different AP
yeah I've I've tried to help them
yeah I've I've tried to help them
several times I actually like
several times I actually like
I designed a couple of the things for
I designed a couple of the things for
them like they asked me for feedback on
them like they asked me for feedback on
their debugger and I gave them feedback
their debugger and I gave them feedback
on their debugger and said like hey this
on their debugger and said like hey this
doesn't make any sense just make remote
doesn't make any sense just make remote
pdb like pdb API but make it work on
pdb like pdb API but make it work on
remote processes and they didn't it was
remote processes and they didn't it was
actually really good I've tried with rib
actually really good I've tried with rib
several times I've like given them a
several times I've like given them a
bunch of feedback on stuff but it's just
bunch of feedback on stuff but it's just
like it's too much big engineering style
like it's too much big engineering style
put into reinforcement learning is the
put into reinforcement learning is the
problem and like you know I met Robert
problem and like you know I met Robert
at open AI he's a good guy right like I
at open AI he's a good guy right like I
like I respect all the stuff they're
like I respect all the stuff they're
trying to do and like I actually I spent
trying to do and like I actually I spent
like a couple years advocating rlb to
like a couple years advocating rlb to
everyone because I saw I thought it was
everyone because I saw I thought it was
going to be up and coming I thought it
going to be up and coming I thought it
was going to solve everything but I
was going to solve everything but I
really can't recommend it these days
really can't recommend it these days
it's just
it's just
rough and like I know a few of the devs
rough and like I know a few of the devs
on the team and it's like they're good
on the team and it's like they're good
it's just it like the thing that they're
it's just it like the thing that they're
trying to do fundamentally like rl's not
trying to do fundamentally like rl's not
ready
ready
for which is why I'm building puffer the
for which is why I'm building puffer the
way I'm building it right everything's
way I'm building it right everything's
compact it's all white box you can go
compact it's all white box you can go
open edit and like change stuff at any
open edit and like change stuff at any
level of the stack it's really simple
level of the stack it's really simple
that's what I'm trying to
build uh I probably need to run annotate
build uh I probably need to run annotate
on this don't
I after encounter in clean arale in your
I after encounter in clean arale in your
research being coming a convert I
research being coming a convert I
honestly think clean RL is the best
honestly think clean RL is the best
contribution to reinforcement learning
contribution to reinforcement learning
by a single individual like ever cost is
by a single individual like ever cost is
just
awesome and it's so funny because you
awesome and it's so funny because you
cannot explain clean RL to like a Fang
cannot explain clean RL to like a Fang
engineer they think it's the dumbest
engineer they think it's the dumbest
thing ever like it's just it's so hard
thing ever like it's just it's so hard
to shift the Paradigm and be like look
to shift the Paradigm and be like look
you can't build stuff the way you're
you can't build stuff the way you're
used to building it cuz this is an
used to building it cuz this is an
emerging scientific field you can't just
emerging scientific field you can't just
wrap every little feature into a nice
wrap every little feature into a nice
parcel and then just like blackbox it
parcel and then just like blackbox it
because need to edit every single layer
because need to edit every single layer
of the stack constantly because like we
of the stack constantly because like we
don't understand where and why stuff is
don't understand where and why stuff is
breaking so the goal is to keep
breaking so the goal is to keep
everything Compact and easy to edit not
everything Compact and easy to edit not
like you know uh like out of sight out
like you know uh like out of sight out
of
mind it's really hard to explain that as
mind it's really hard to explain that as
well
and like basically the reaction you get
and like basically the reaction you get
from almost every single one of them is
from almost every single one of them is
like oh ho I bet the other Fang
like oh ho I bet the other Fang
Engineers that tried this just weren't
Engineers that tried this just weren't
good enough and it's like no it's that's
good enough and it's like no it's that's
not the problem like kind of yes but
not the problem like kind of yes but
it's fundamentally the wrong approach
it's fundamentally the wrong approach
for this
time did I just did I just one shot
time did I just did I just one shot
this yeah I think I just one shot this
this yeah I think I just one shot this
all right that's
nice
nice
Segal well I one shot getting it to
Segal well I one shot getting it to
Segal so good on me I guess
probably just need to put the checks on
probably just need to put the checks on
right
huh now it's not seg
faulting going be really
slow I don't know why it doesn't seg
fault turn this one to false
we'll see how this sweep does how's the
we'll see how this sweep does how's the
other sweep doing
oh this is just failing is what's
oh this is just failing is what's
happening yeah yeah this is just
happening yeah yeah this is just
failing I can tell there too many jobs
failing I can tell there too many jobs
here okay so I'll have to fix that at
here okay so I'll have to fix that at
some point here
soon
oops what time is it okay it's it's 157
oops what time is it okay it's it's 157
I got to go get ready for another
I got to go get ready for another
meeting and I got to fix a couple of
meeting and I got to fix a couple of
things um I'm probably going to be back
things um I'm probably going to be back
in a few hours do another like a short
in a few hours do another like a short
evening stream if I'm able to fix some
evening stream if I'm able to fix some
things uh and then I will like f finish
things uh and then I will like f finish
the performance
the performance
optimization uh debug all the sweep
optimization uh debug all the sweep
stuff right and uh a few other things
stuff right and uh a few other things
from there now if you're new to this
from there now if you're new to this
place if you're new to the stream uh all
place if you're new to the stream uh all
this is open source it's all in the dev
this is open source it's all in the dev
branch of puffer lib right now if you
branch of puffer lib right now if you
want to help me out a whole bunch just
want to help me out a whole bunch just
go ahead and star it helps me a ton and
go ahead and star it helps me a ton and
uh yeah otherwise I'll be back fairly
uh yeah otherwise I'll be back fairly
soon so see you all

Kind: captions
Language: en
we are
live fix
this
this
welcome got some really cool stuff today
welcome got some really cool stuff today
to share starting with an article that I
to share starting with an article that I
wrote on hyperparameter tuning that I'm
wrote on hyperparameter tuning that I'm
about to post and then I'm going to go
about to post and then I'm going to go
over it's going to be cool so
over it's going to be cool so
where is this
articles this should be all ready to go
articles this should be all ready to go
and then I'm going to go over it let me
and then I'm going to go over it let me
just make sure that my sleep deprived
just make sure that my sleep deprived
brain did not do anything stupid in here
brain did not do anything stupid in here
Benchmark code experiments
Benchmark code experiments
[Music]
random looks good
all
right and my stream I should be able to
right and my stream I should be able to
post the article link as well
post the article link as well
right yeah and then I'm going to go
right yeah and then I'm going to go
through this because it's uh it's pretty
cool for
cool
cool
so we've got some fun stuff um if I go
so we've got some fun stuff um if I go
grab the article real
quick I did this over the weekend um
quick I did this over the weekend um
basically what's going on here is
basically what's going on here is
I've been using carbs for a while now
I've been using carbs for a while now
carbs is this hyperparameter tuning
carbs is this hyperparameter tuning
algorithm from imbw um and it seems like
algorithm from imbw um and it seems like
it's been working very well but it's
it's been working very well but it's
kind of hard to get like comprehensive
kind of hard to get like comprehensive
comparisons to bayy and sweeps and
comparisons to bayy and sweeps and
stuff uh especially when like a lot of
stuff uh especially when like a lot of
the time we're just solving the
the time we're just solving the
environments with everything
environments with everything
anyways yeah so we needed more
anyways yeah so we needed more
comprehensive uh comparisons to
comprehensive uh comparisons to
stuff so I came came up with a test for
stuff so I came came up with a test for
this that's very very unfair to carbs I
this that's very very unfair to carbs I
came up with like the worst possible
came up with like the worst possible
Benchmark for carbs to see if it's still
Benchmark for carbs to see if it's still
better uh the idea being that if it
better uh the idea being that if it
works there then it's probably safe to
works there then it's probably safe to
use wherever and it just absolutely
use wherever and it just absolutely
shreds
shreds
so let me go through this
so let me go through this
so uh first of all if you'd like to
so uh first of all if you'd like to
support all this stuff Star Puffer lib
support all this stuff Star Puffer lib
this article's on X uh it helps me out a
this article's on X uh it helps me out a
whole bunch I'm going to put this in let
whole bunch I'm going to put this in let
me see can I put this in the
chat I'm going to put the article in the
chat I'm going to put the article in the
restream
chat so what is carbs um carbs is an
chat so what is carbs um carbs is an
algorithm that is based off of basy and
algorithm that is based off of basy and
hyperparameter tuning which attempts to
hyperparameter tuning which attempts to
uh maintain probability estimates that
uh maintain probability estimates that
tell you what hyper parameters you've
tell you what hyper parameters you've
explored are probably good uh it
explored are probably good uh it
augments that with the ability to
augments that with the ability to
maintain lots of different sets of hyper
maintain lots of different sets of hyper
parameters
parameters
that depend on how long the experiment
that depend on how long the experiment
took so like you could have an
took so like you could have an
experiment that gives you a decent set
experiment that gives you a decent set
of hyper parameters but it's very fast
of hyper parameters but it's very fast
to run that's just as promising as a
to run that's just as promising as a
candidate as something that gives you
candidate as something that gives you
very good hyper parameters but takes a
very good hyper parameters but takes a
really long time to run and it explores
really long time to run and it explores
in many different directions and as it
in many different directions and as it
hones in on what is good uh it will use
hones in on what is good uh it will use
more and more compute to try to get
more and more compute to try to get
better results on all of the good
better results on all of the good
different sets of hyperparameters that
different sets of hyperparameters that
is the main selling point of
is the main selling point of
carp and that is like unquestionably
carp and that is like unquestionably
good but that's not what I'm testing
good but that's not what I'm testing
today carbs also just has a bunch of
today carbs also just has a bunch of
extra tricks that have some heavy math
extra tricks that have some heavy math
in them that seems reasonable it all
in them that seems reasonable it all
seems reasonable but you know who knows
seems reasonable but you know who knows
if it actually works more broadly so
if it actually works more broadly so
what I did is I came up with a synthetic
what I did is I came up with a synthetic
task uh that should be very hard and
task uh that should be very hard and
should give carbs a really good
should give carbs a really good
opportunity to demonstrate whether it is
opportunity to demonstrate whether it is
good or
not so here's the Benchmark uh we do
not so here's the Benchmark uh we do
have results of real sweeps we use it
have results of real sweeps we use it
all over puffer lib this is not what
all over puffer lib this is not what
that's about hi Noah what's up we're
that's about hi Noah what's up we're
going through this new article I wrote
going through this new article I wrote
um so this is a controlled synthetic
um so this is a controlled synthetic
test what I did is I wrote an
test what I did is I wrote an
environment that just gives you 10
environment that just gives you 10
variables from a uniform normal
variables from a uniform normal
distribution these are secret and these
distribution these are secret and these
are considered the optimal hyper
are considered the optimal hyper
parameters
parameters
okay so you have like 10 optimal hyper
okay so you have like 10 optimal hyper
parameters that are sampled by this this
parameters that are sampled by this this
fake Benchmark this fake
fake Benchmark this fake
environment and then the hyperparameter
environment and then the hyperparameter
tuning algorithm instead of training
tuning algorithm instead of training
networks it's just going to tell you the
networks it's just going to tell you the
hyperparameters that it would use to
hyperparameters that it would use to
train a network and without having to
train a network and without having to
train a network at all I'm just going to
train a network at all I'm just going to
compute a reward based on how good your
compute a reward based on how good your
hyper parameters were how close they
hyper parameters were how close they
were to these these optimal heldout
were to these these optimal heldout
variables I designed this function below
variables I designed this function below
to be smooth and also to be very hard to
to be smooth and also to be very hard to
optimize because it goes to zero if you
optimize because it goes to zero if you
have a single hyper parameter that's
have a single hyper parameter that's
really really
really really
wrong uh you have code and math here
wrong uh you have code and math here
take your pick whatever is easier for
take your pick whatever is easier for
you to read uh the way that this works
you to read uh the way that this works
though is that you do a L2 distance so
though is that you do a L2 distance so
squared distance between uh the hyper
squared distance between uh the hyper
parameters well not quite L2 because I
parameters well not quite L2 because I
don't do a square root but um you take
don't do a square root but um you take
uh Square distance from the parameters
uh Square distance from the parameters
to the optimal hyper parameters and then
to the optimal hyper parameters and then
you take two to the power of negative
you take two to the power of negative
distance here which is this component
distance here which is this component
right here um and then you add a little
right here um and then you add a little
bit of noise and what this gives you is
bit of noise and what this gives you is
it gives you something that decays as
it gives you something that decays as
you go away from the optimal hyper
you go away from the optimal hyper
parameters uh but it never quite goes to
parameters uh but it never quite goes to
zero and then you multiply all the
zero and then you multiply all the
numbers together so if you have a single
numbers together so if you have a single
number that's really close to zero then
number that's really close to zero then
your reward is going to be basically
your reward is going to be basically
zero though it's not exactly zero which
zero though it's not exactly zero which
is important so this is The
is important so this is The
Benchmark for the experiments
Benchmark for the experiments
each algorithm gets 100 samples so 100
each algorithm gets 100 samples so 100
like trials in order to evaluate what it
like trials in order to evaluate what it
thinks the optimal hyper parameters
thinks the optimal hyper parameters
are I have the source code for
are I have the source code for
this I think I forgot to put it at the
this I think I forgot to put it at the
bottom of the post but I'll I'll edit
bottom of the post but I'll I'll edit
that in uh it's on the puffer GitHub
anyways I tested out random search very
anyways I tested out random search very
simple genetic algorithm wand be is
simple genetic algorithm wand be is
built-in basian search and carbs and the
built-in basian search and carbs and the
graphs are all public on wand b as well
graphs are all public on wand b as well
we have all these right here so you can
we have all these right here so you can
see that we
see that we
have okay apparently this needs to be I
have okay apparently this needs to be I
need to free up some storage but they
need to free up some storage but they
are all public
are all public
um first of all random search from want
um first of all random search from want
B doesn't do
B doesn't do
anything everything fails if one hyper
anything everything fails if one hyper
parameter is off by a lot then you're
parameter is off by a lot then you're
not going to get anywhere and since
not going to get anywhere and since
they're 10 hyper parameters that's
they're 10 hyper parameters that's
basically guaranteed so random search
basically guaranteed so random search
fails utterly
fails utterly
genetic algorithm I wrote this just for
genetic algorithm I wrote this just for
fun as like a little test it's actually
fun as like a little test it's actually
surprisingly good uh all this does is it
surprisingly good uh all this does is it
just picks a set of random parameters
just picks a set of random parameters
and then it will mutate them all by like
and then it will mutate them all by like
a small noise amount every single trial
a small noise amount every single trial
and if that does better than the
and if that does better than the
previous one it keeps the new ones so
previous one it keeps the new ones so
this takes a lot of Trials to get
this takes a lot of Trials to get
anywhere but once it starts taking off
anywhere but once it starts taking off
it actually starts going up quite nicely
it actually starts going up quite nicely
and it produces these really cool graphs
and it produces these really cool graphs
where like it's essentially all centered
where like it's essentially all centered
around and initial distribution and you
around and initial distribution and you
can actually kind of see the
can actually kind of see the
optimization process over time because
optimization process over time because
it's like it's one candidate set that
it's like it's one candidate set that
it's changed from which is
it's changed from which is
cool then we have wand B Bas it's
cool then we have wand B Bas it's
inconsistent it can perform better than
inconsistent it can perform better than
this but you know on the last set where
this but you know on the last set where
I just ran everything from scratch this
I just ran everything from scratch this
is the number I got I've seen it do like
is the number I got I've seen it do like
0 five before uh but this kind of a
0 five before uh but this kind of a
trend is very common where like it just
trend is very common where like it just
doesn't latch on to the good trial
doesn't latch on to the good trial
particular particularly well and uh it's
particular particularly well and uh it's
just it doesn't it's not particularly
just it doesn't it's not particularly
efficient so it gets a couple things
efficient so it gets a couple things
that have non-negligible performance the
that have non-negligible performance the
maximum is one 0.25 here we get 0.25 but
maximum is one 0.25 here we get 0.25 but
overall not great and then we have carbs
overall not great and then we have carbs
which just solves the problem like
which just solves the problem like
perfectly uh it just gets better and
perfectly uh it just gets better and
better over time and then there you go
better over time and then there you go
this is like 0.9 something and you can
this is like 0.9 something and you can
see over time all the different runs
see over time all the different runs
right you can see that it started out
right you can see that it started out
down here and stuff wasn't going very
down here and stuff wasn't going very
well and then it kind of found this
well and then it kind of found this
distribution over here so like because
distribution over here so like because
it can maintain multiple different
it can maintain multiple different
distributions so carbs just shred stuff
distributions so carbs just shred stuff
uh and this has been pretty consistent
uh and this has been pretty consistent
with what I have found using this
with what I have found using this
algorithm the fact that the genetic
algorithm the fact that the genetic
thing kind of works a little bit I
thing kind of works a little bit I
actually would really like to have a WB
actually would really like to have a WB
sweeps API where it's super easy to just
sweeps API where it's super easy to just
swap in your own sweep methods I think
swap in your own sweep methods I think
that that would be so much better for
that that would be so much better for
everybody because then we could just
everybody because then we could just
extensively validate all these things
extensively validate all these things
right like I could make a bunch of
right like I could make a bunch of
benchmarks like this and we could
benchmarks like this and we could
extensively validate hyper pram tuning
extensively validate hyper pram tuning
um but in the meantime carbs just shreds
um but in the meantime carbs just shreds
and that's it this is the worst possible
and that's it this is the worst possible
case for carbs this doesn't even allow
case for carbs this doesn't even allow
it to make use of its Dynamic compute
it to make use of its Dynamic compute
this is just the other tricks that it
this is just the other tricks that it
has and it still wins in the worst
has and it still wins in the worst
possible case I didn't game this I
possible case I didn't game this I
didn't spend a month doing this to make
didn't spend a month doing this to make
carbs look good I did this in like 5
carbs look good I did this in like 5
hours on Saturday and it just worked and
hours on Saturday and it just worked and
it's relatively consistent with
it's relatively consistent with
everything I've observed
everything I've observed
previously so there you go carbs
wins and the thing that I really really
wins and the thing that I really really
like about this there's this really nice
like about this there's this really nice
side effect when you have good
side effect when you have good
hyperparameter tuning algorithms this
hyperparameter tuning algorithms this
basically means that when I have an
basically means that when I have an
experiment and I run a full sweep like
experiment and I run a full sweep like
let's say I have an environment and I
let's say I have an environment and I
run a full hyperparameter sweep on it
run a full hyperparameter sweep on it
and it still doesn't
and it still doesn't
work uh will this be archived on YouTube
work uh will this be archived on YouTube
all of these streams are archived on
all of these streams are archived on
YouTube everything that I everything
YouTube everything that I everything
that you're seeing here is immediately
that you're seeing here is immediately
saved to YouTube as well it's live on
saved to YouTube as well it's live on
YouTube twitch and X at the same time
YouTube twitch and X at the same time
how do you do parallel coordinates with
how do you do parallel coordinates with
carbs I have an integration with wand B
carbs I have an integration with wand B
this is currently puffer exclusive until
this is currently puffer exclusive until
uh wandb integrates this natively I'm
uh wandb integrates this natively I'm
hoping that they do but you can get this
hoping that they do but you can get this
in the puffer Dev
in the puffer Dev
Branch there's a little hack that you
Branch there's a little hack that you
have to do like to trick WB into
have to do like to trick WB into
allowing you to update parameters at
runtime but there you go this is I mean
runtime but there you go this is I mean
this is so great for RL like the thing
this is so great for RL like the thing
that I like about this not only does
that I like about this not only does
this let you get a good set of hyper
this let you get a good set of hyper
parameters right that's obviously
parameters right that's obviously
important but think about it the other
important but think about it the other
way around like in reinforcement
way around like in reinforcement
learning if you have an environment that
learning if you have an environment that
you're trying to get working and you run
you're trying to get working and you run
this full sweep and it still doesn't
this full sweep and it still doesn't
work it means your problem is probably
work it means your problem is probably
not the hyper parameters right because
not the hyper parameters right because
if they're good hyper parameters it will
if they're good hyper parameters it will
find them
that's the really exciting piece for me
that's the really exciting piece for me
CU like I actually I think I have one of
CU like I actually I think I have one of
these where I got to delete something so
these where I got to delete something so
it lets me see my storage hold on um
it lets me see my storage hold on um
that's really
obnoxious screw it
obnoxious screw it
wanb you're worth some
money hold on let me just just put this
money hold on let me just just put this
in on the other
screen hold
screen hold
on let me let me give uh thank you let
on let me let me give uh thank you let
me give Wan B some money and then I'll
me give Wan B some money and then I'll
have uh more stuff they're worth some
have uh more stuff they're worth some
money anyways
okay
so hey thanks for dropping by I'm trying
so hey thanks for dropping by I'm trying
to make RL less cursed
overall I just paid you come
on let me see let me see my
on let me see let me see my
data this looks so good R GG basian
data this looks so good R GG basian
Twitter post should go I hope
Twitter post should go I hope
so I
so I
mean I have kind of been doing like some
mean I have kind of been doing like some
engagement optimization lately trying to
engagement optimization lately trying to
get some bigger posts but like the thing
get some bigger posts but like the thing
is it actually helps so much with my
is it actually helps so much with my
work because at the moment this is all
work because at the moment this is all
just open source offf right and like the
just open source offf right and like the
more people that see this the more I get
more people that see this the more I get
people interested in contributing to the
people interested in contributing to the
project the more I have people testing
project the more I have people testing
this and using it like the more like
this and using it like the more like
companies maybe start using it right
companies maybe start using it right
it's all just really really helpful and
it's all just really really helpful and
the more I have to like I get to not
the more I have to like I get to not
think about this stuff and get to just
think about this stuff and get to just
do Dev so yeah the promo helps a lot and
do Dev so yeah the promo helps a lot and
also speaking of which if you want to
also speaking of which if you want to
help me out a whole bunch puffer is
help me out a whole bunch puffer is
almost at 700
almost at 700
Stars almost at 700 so if you want to go
Stars almost at 700 so if you want to go
Star this repo helps me out a
ton let me show you some cool stuff
ton let me show you some cool stuff
providing this will let me access my
providing this will let me access my
data so I have a couple of sweeps from
data so I have a couple of sweeps from
here that I've been working on uh 3 days
here that I've been working on uh 3 days
hold on where is this
hold on where is this
thing this one any good no not this
thing this one any good no not this
one that's
one that's
old oh right I have a a carbs project
old oh right I have a a carbs project
that has all the carb sweeps in it
that has all the carb sweeps in it
perfect
perfect
so you can see the number of runs that
so you can see the number of runs that
we have here this is a MOBA sweep and I
we have here this is a MOBA sweep and I
think this one doesn't work particularly
think this one doesn't work particularly
well well yeah these rewards are very
well well yeah these rewards are very
low but basically what this means is the
low but basically what this means is the
fact that these rewards are low means
fact that these rewards are low means
that I have a problem with the
that I have a problem with the
environment or the reward function it's
environment or the reward function it's
not in the uh it's not in anywhere else
not in the uh it's not in anywhere else
and you can tell that just because like
and you can tell that just because like
look it's tried all sorts of different
look it's tried all sorts of different
things
things
um okay we have validation that carbs is
um okay we have validation that carbs is
a good sweep algorithm this is done like
a good sweep algorithm this is done like
let me think how much this is
let me think how much this is
done this is way over 30 billion steps
done this is way over 30 billion steps
worth of data right here cuz each of
worth of data right here cuz each of
these runs is at least 100 Mil I think
these runs is at least 100 Mil I think
actually they're like 200 mil most of
actually they're like 200 mil most of
them so yeah this is probably like 50
them so yeah this is probably like 50
billion steps worth of hyperparameter
billion steps worth of hyperparameter
tuning data on the MOBA so it looks like
tuning data on the MOBA so it looks like
I broke something with the reward but I
I broke something with the reward but I
can be very confident that I broke
can be very confident that I broke
something with the reward because
something with the reward because
otherwise right this would be uh
otherwise right this would be uh
otherwise this would be like this would
otherwise this would be like this would
work we know that carbs is super good uh
work we know that carbs is super good uh
I also tried something else this weekend
I also tried something else this weekend
I have another present for the RL
I have another present for the RL
Community exclusive preview here here uh
Community exclusive preview here here uh
though this is not fully Done
though this is not fully Done
Yet Wrong
Yet Wrong
[Music]
[Music]
One exclusive preview for uh stream
One exclusive preview for uh stream
viewers oh I guess we win haha um yeah
viewers oh I guess we win haha um yeah
what do you guys think about if I just
what do you guys think about if I just
make all of Atari twice as fast right
make all of Atari twice as fast right
what do you guys think if I just made
what do you guys think if I just made
all of Atari twice as fast and uh
all of Atari twice as fast and uh
actually what if we train pong in like
actually what if we train pong in like
two
minutes does that sound
minutes does that sound
cool what are we getting for training
cool what are we getting for training
steps per second
steps per second
here
here
30,000 how is uh how's 30,000 train
30,000 how is uh how's 30,000 train
steps per second do for Atari
steps per second do for Atari
Guys One
Guys One
desktop 24
course so I'll share this this is going
course so I'll share this this is going
to be another article in a few days once
to be another article in a few days once
I have this like fully like tuned and
I have this like fully like tuned and
solving pong perfectly um because this
solving pong perfectly um because this
is like a two-minute run I'm pretty sure
is like a two-minute run I'm pretty sure
like let's see if I do wall clock time
here relative time
wall okay like five minutes like five
wall okay like five minutes like five
minutes on pong here um I think we can
minutes on pong here um I think we can
get better than that but uh I have
get better than that but uh I have
30,000 train steps per second with Atari
30,000 train steps per second with Atari
for comparison like you're looking at
for comparison like you're looking at
low thousands with defaults for clean RL
low thousands with defaults for clean RL
and S sp3 like 2 or 3,000 uh if you
and S sp3 like 2 or 3,000 uh if you
optimize like up the batch size and
optimize like up the batch size and
stuff you can get like high single digit
stuff you can get like high single digit
thousands but you're not getting you're
thousands but you're not getting you're
not getting 30k that just doesn't happen
not getting 30k that just doesn't happen
um so it turns out we're all morons and
um so it turns out we're all morons and
uh we've been using garbage python
uh we've been using garbage python
rappers for like 10 years and uh they're
rappers for like 10 years and uh they're
just way better rappers for stuff I
just way better rappers for stuff I
actually I kind of found something like
actually I kind of found something like
this but I didn't didn't dig too much on
this but I didn't didn't dig too much on
it a while like a couple months
it a while like a couple months
ago let me show you the dev
Branch so like the most popular
Branch so like the most popular
Benchmark out there right is actually
Benchmark out there right is actually
not all that slow it's just that we
not all that slow it's just that we
completely screwed
up we as a field I
up we as a field I
mean okay
mean okay
so Al Pi which is the base package with
so Al Pi which is the base package with
Atari has built-in wrappers for frame uh
Atari has built-in wrappers for frame uh
frame Skip and grayscale
frame Skip and grayscale
okay and they're way faster because
okay and they're way faster because
they're not Python and then on top of
they're not Python and then on top of
that if I just go from Dev to 1.0 here
that if I just go from Dev to 1.0 here
this is it was as it was before uh we
this is it was as it was before uh we
have this resize observations this
have this resize observations this
wrapper is garbage this wrapper needs to
wrapper is garbage this wrapper needs to
be deleted from gymnasium and deleted
be deleted from gymnasium and deleted
from every codebase in existent this
from every codebase in existent this
rapper uses open CV for resizing and
rapper uses open CV for resizing and
this one rapper throws away 50% of your
this one rapper throws away 50% of your
compute doing a garbage optimized resize
compute doing a garbage optimized resize
so we've literally just been throwing
so we've literally just been throwing
away half of our CPU for the last 10
away half of our CPU for the last 10
years with this trash
wrapper isn't that
nuts but this is what I mean when like
nuts but this is what I mean when like
RL is cursed and there's no incentive to
RL is cursed and there's no incentive to
fix it like we've straight up we've just
fix it like we've straight up we've just
been being this stupid for 10 years just
been being this stupid for 10 years just
throwing away half of our computer to a
throwing away half of our computer to a
garbage wrapper and you want to see you
garbage wrapper and you want to see you
want to see the fix for this like this
want to see the fix for this like this
is not me being smart this is like us as
is not me being smart this is like us as
a field just screwing up this is the
a field just screwing up this is the
fix okay look all I did was where is it
fix okay look all I did was where is it
no not this one
no not this one
uh okay right
uh okay right
here one sec puffer lib postprocess I
here one sec puffer lib postprocess I
added the wrapper here okay this right
added the wrapper here okay this right
here is the fix I use numpy indexing to
here is the fix I use numpy indexing to
downscale a factor of two and it's 10
downscale a factor of two and it's 10
times faster like this specific rapper
times faster like this specific rapper
is like 10 times faster that's all I did
is like 10 times faster that's all I did
this is not me being smart this is like
this is not me being smart this is like
nobody having bothered to fix right
nobody having bothered to fix right
look at that isn't that
nuts so yeah this is the type of stuff
nuts so yeah this is the type of stuff
and uh you just do this and then you set
and uh you just do this and then you set
some good batch size you use puffer
some good batch size you use puffer
vectorization obviously and you hit
vectorization obviously and you hit
between 30 and 40 th000 steps per second
between 30 and 40 th000 steps per second
depending on your training uh depending
depending on your training uh depending
on your uh your settings your train
on your uh your settings your train
settings so so far it looks like this
settings so so far it looks like this
has gotten to 15 return overall I think
has gotten to 15 return overall I think
20 is the max so we got to do a little
20 is the max so we got to do a little
bit of looking into uh you know what
bit of looking into uh you know what
other things I might have changed
other things I might have changed
because I think that they're like I
because I think that they're like I
think the rappers do a couple weird
think the rappers do a couple weird
things with actions that make it like
things with actions that make it like
hard I think these are the Macado
hard I think these are the Macado
rappers so I think I have to like
rappers so I think I have to like
disable these at eval time because it
disable these at eval time because it
makes the paddle jiggle around a whole
makes the paddle jiggle around a whole
bunch like uncontrollably so I have to
bunch like uncontrollably so I have to
do a little bit of work on this which
do a little bit of work on this which
I'd be willing to do on stream maybe
I'd be willing to do on stream maybe
I'll do that tomorrow or something if
I'll do that tomorrow or something if
people aren't super into the mobidev um
people aren't super into the mobidev um
I do want to finish up the MOBA Dev
I do want to finish up the MOBA Dev
though and get some sweeps running but
though and get some sweeps running but
yeah we're going to have all of Atari
yeah we're going to have all of Atari
just like train five minutes per M Train
just like train five minutes per M Train
maybe 10 minutes per m one GPU standard
maybe 10 minutes per m one GPU standard
desktop heck
desktop heck
yeah I'm actually seeing some rewards
yeah I'm actually seeing some rewards
that are up by
that are up by
20 what happened here this actually
20 what happened here this actually
looks like it's up by 20
looks like it's up by 20
right why do I not see this on the
right why do I not see this on the
graph maybe it is
solved oh yeah solved why do this one
solved oh yeah solved why do this one
not show up wa why does this not show up
not show up wa why does this not show up
on the
graph does it only show you 100
runs uh w b why is my oh it does show up
runs uh w b why is my oh it does show up
I just I wasn't reading the axis right
I just I wasn't reading the axis right
okay so this is basically solved we got
okay so this is basically solved we got
to like disable the Mado wrapper at eval
to like disable the Mado wrapper at eval
time I think but this is
solved how long's this run take right
solved how long's this run take right
here let's do actually this one let's do
here let's do actually this one let's do
yeah this
yeah this
one
here stable by around here I think right
here stable by around here I think right
and this this is like tiny little bits
and this this is like tiny little bits
heck you could even take it right here
heck you could even take it right here
this is 18 which is probably without the
this is 18 which is probably without the
uh the eval like without the instability
uh the eval like without the instability
from the wrapper so this is like less
from the wrapper so this is like less
than 10 million frames basically sample
than 10 million frames basically sample
efficiency matched with the
original let's set this to wall
clock 5
clock 5
minutes five minutes to train
minutes five minutes to train
pong default settings are like an
pong default settings are like an
hour 10x speed up for
free I'm pretty happy with
free I'm pretty happy with
that also uh I did so I did something
that also uh I did so I did something
that's kind of good and kind of
that's kind of good and kind of
bad I just hard merged everything into
bad I just hard merged everything into
Dev so it's going to be a little less
Dev so it's going to be a little less
stable because you know not everything's
stable because you know not everything's
fully tested but if you want to get
fully tested but if you want to get
access to all the stuff you see on the
access to all the stuff you see on the
stream and all like these new things
stream and all like these new things
I've been talking about it's no longer
I've been talking about it's no longer
in like some obscure Branch that's going
in like some obscure Branch that's going
to get deleted everything's just in
Dev try it out let me know how it works
Dev try it out let me know how it works
we also we've got a discord.gg puffer
we also we've got a discord.gg puffer
which you can join if you want to
which you can join if you want to
contribute to the project in chat we can
contribute to the project in chat we can
definitely be looking for contributors I
definitely be looking for contributors I
got to get some more machines at some
got to get some more machines at some
point
point
soon I got to figure that out because
soon I got to figure that out because
I've got these eight and they're pretty
I've got these eight and they're pretty
nice but like I've had so many damn
nice but like I've had so many damn
issues with the Intel chips and these
issues with the Intel chips and these
things I just happen to get like bad
things I just happen to get like bad
chips in this batch on like the one
chips in this batch on like the one
generation in Which Intel has some
generation in Which Intel has some
instability issues um so I'm probably
instability issues um so I'm probably
going to look into like AMD build uh
going to look into like AMD build uh
builds for the next expansion to these
builds for the next expansion to these
uh for now they're okay they just need
uh for now they're okay they just need
to be rebooted once in a
while but yeah these types of like these
while but yeah these types of like these
types of hyper pram optimization graphs
types of hyper pram optimization graphs
where it just gets way better over time
where it just gets way better over time
like this this is going to be the new
Norm all right anybody have questions or
Norm all right anybody have questions or
stuff on uh the hyper pram stuff on the
stuff on uh the hyper pram stuff on the
article uh for folks that just joined we
article uh for folks that just joined we
just went through this
just went through this
article that I
article that I
wrote on hyperparameter tuning with
wrote on hyperparameter tuning with
carbs and how nothing else Works fail
carbs and how nothing else Works fail
fail and then carbs just solves
fail and then carbs just solves
everything anybody got questions or
everything anybody got questions or
should I move on to
should I move on to
madev because we're doing a relatively
madev because we're doing a relatively
short stream today by my standards I
short stream today by my standards I
think I've got I've got three and a half
think I've got I've got three and a half
hours from now uh to Dev and then I've
hours from now uh to Dev and then I've
got like couple hours worth of meetings
got like couple hours worth of meetings
and then I'll probably be back for like
and then I'll probably be back for like
another couple hours in the
evening so I'll give this the stream a
evening so I'll give this the stream a
second to sync up for any questions and
second to sync up for any questions and
if not I'll start on
Mev this is also going to be a
Mev this is also going to be a
relatively chill Dev day I am absolutely
relatively chill Dev day I am absolutely
not operating at 100% mental
not operating at 100% mental
capacity actually I do want to I want to
capacity actually I do want to I want to
brag about this a little
brag about this a little
bit because this is why I'm
bit because this is why I'm
exhausted uh yeah so this was
exhausted uh yeah so this was
my this was my yesterday so I'm still
my this was my yesterday so I'm still
pretty much fried from this uh this is
pretty much fried from this uh this is
3,000 ft elevation
22.5 so it's going to take a minute for
22.5 so it's going to take a minute for
uh it's going to take a day or two for
uh it's going to take a day or two for
me to get back from that
me to get back from that
but this is going to be a good Dev
but this is going to be a good Dev
week any situation where you wouldn't
week any situation where you wouldn't
use carbs in reinforcement
use carbs in reinforcement
learning I'm sure that there going to be
learning I'm sure that there going to be
some degenerate cases cuz there always
some degenerate cases cuz there always
are but like I don't think that there
are but like I don't think that there
are any cases where I wouldn't try carbs
are any cases where I wouldn't try carbs
from the GetGo the one thing I will say
from the GetGo the one thing I will say
is like for carbs to work you I do think
is like for carbs to work you I do think
that you generally need to have like a
that you generally need to have like a
reasonable set of starting hyper
reasonable set of starting hyper
parameters like if your starting hyper
parameters like if your starting hyper
parameters are way off and get zero
parameters are way off and get zero
reward the way that carbs work is it
reward the way that carbs work is it
defines a a normal distribution around
defines a a normal distribution around
the uh the center values that you give
the uh the center values that you give
for every parameter so if you're way off
for every parameter so if you're way off
it's going to be harder for carbs to
it's going to be harder for carbs to
find the initial like good solution even
find the initial like good solution even
compared to um like random random
search but that's like a really like
search but that's like a really like
that's just like a user error that's
that's just like a user error that's
basically a user error oh the other
basically a user error oh the other
thing I added one additional thing that
thing I added one additional thing that
I think is very good for carbs um and
I think is very good for carbs um and
this is a type of thing that we need
this is a type of thing that we need
more of so and I I I didn't have a great
more of so and I I I didn't have a great
way of doing this um
way of doing this um
but puffer lib has in Dev now if you
but puffer lib has in Dev now if you
look at the demo file this is just um
look at the demo file this is just um
you know where we have all our starter
you know where we have all our starter
code in the train
code in the train
function after I train I do 10
function after I train I do 10
additional evaluations so I do like 10
additional evaluations so I do like 10
additional data collection steps just to
additional data collection steps just to
collect stats and this is because I try
collect stats and this is because I try
to get a smooth estimate of the return
to get a smooth estimate of the return
so carbs is pretty sensitive to noise in
so carbs is pretty sensitive to noise in
the uh the return value so if you just
the uh the return value so if you just
give it like you know one environment
give it like you know one environment
return as the final metric like that's a
return as the final metric like that's a
really noisy estimate of how good your
really noisy estimate of how good your
uh your hyper parameters are so what you
uh your hyper parameters are so what you
want to do is you want to have like a
want to do is you want to have like a
pretty smooth uh estimate of the actual
pretty smooth uh estimate of the actual
return that this experiment got it's
return that this experiment got it's
pretty sensitive to that because of like
pretty sensitive to that because of like
it's an improvement overtime algorithm
it's an improvement overtime algorithm
so if you give it conflicting data
so if you give it conflicting data
points it gets
points it gets
confused and technically if carbs finds
confused and technically if carbs finds
that there like no good Solutions if
that there like no good Solutions if
nothing is parito optimal basically
nothing is parito optimal basically
which is I don't even know how that's
which is I don't even know how that's
possible but I've seen it happen then
possible but I've seen it happen then
it'll just like stop being able to run
it'll just like stop being able to run
it just won't be able to run trials
it just won't be able to run trials
because like it's it just throws its
because like it's it just throws its
hands up and says hey this looks like a
hands up and says hey this looks like a
nonsense
problem any other questions on this
problem any other questions on this
stuff or are we doing madev
okay thanks yeah the MOBA made some
okay thanks yeah the MOBA made some
progress we left it in a pretty good
progress we left it in a pretty good
spot on Friday we are only 1250 lines of
spot on Friday we are only 1250 lines of
scon for this entire
implementation this is all part of the
implementation this is all part of the
master plan right like in my mind you
master plan right like in my mind you
need ultra high perf simulations for
need ultra high perf simulations for
getting really fast feedback on how your
getting really fast feedback on how your
algorithms are doing you need really
algorithms are doing you need really
good hyperparameter sweeping for making
good hyperparameter sweeping for making
sure that you're actually evaluating the
sure that you're actually evaluating the
best possible version of the thing that
best possible version of the thing that
you're doing it's really hyperparameter
you're doing it's really hyperparameter
sensitive right and if you have all of
sensitive right and if you have all of
that then you're in a spot where you can
that then you're in a spot where you can
make really really fast experimental
make really really fast experimental
progress with
progress with
RL but we're missing all that in RL
RL but we're missing all that in RL
right it doesn't exist that's why you
right it doesn't exist that's why you
got to build
it perhaps I shouldn't advertise this
it perhaps I shouldn't advertise this
too heavily because um we are somewhat
too heavily because um we are somewhat
Hardware constrained we only have these
Hardware constrained we only have these
eight boxes until I get some more um but
eight boxes until I get some more um but
I do give Hardware access periodically
I do give Hardware access periodically
to um to contributors to puffer so if
to um to contributors to puffer so if
you have some stuff you want to do and
you have some stuff you want to do and
you need a box to run like some cool
you need a box to run like some cool
experiments on for uh you know that
experiments on for uh you know that
contribute to puffer in some way then I
contribute to puffer in some way then I
can potentially set you up with access
can potentially set you up with access
that's the one other AD did we hit let's
that's the one other AD did we hit let's
see have we hit
see have we hit
700 who wants to be 700 one Star come on
700 who wants to be 700 one Star come on
somebody do
it somebody do
it
it
[Music]
[Music]
hey that's awesome 700
puffers thank you so
much that's amazing
actually no again it was
always there you go thank you so much
always there you go thank you so much
guys for that that's
guys for that that's
awesome all right well I guess then
awesome all right well I guess then
we're starting on um on
we're starting on um on
mobidev which is is going to be a fun
mobidev which is is going to be a fun
time because when we left this thing
off when we left this thing off oops
off when we left this thing off oops
this is not my post
this is not my post
timeline where's the last demo I
timeline where's the last demo I
posted okay so I posted this
posted okay so I posted this
demo where you have like basic playable
demo where you have like basic playable
games you have RL uh teammates RL
games you have RL uh teammates RL
opponents 1250 lines
opponents 1250 lines
uh runs carb sweeps all of
uh runs carb sweeps all of
that oh yeah if you're looking for
that oh yeah if you're looking for
another fun article to read I recommend
another fun article to read I recommend
this one I got to repost this next week
this one I got to repost this next week
I think I posted this at a dumb time
I think I posted this at a dumb time
where nobody saw it
where nobody saw it
um here I'll give the link to this this
um here I'll give the link to this this
is just a really fun post where people
is just a really fun post where people
are saying dumb things about AGI this is
are saying dumb things about AGI this is
a fun
a fun
alternative um but yeah here's the
alternative um but yeah here's the
here's what the game looks like right uh
here's what the game looks like right uh
the darker blue ones or the brighter
the darker blue ones or the brighter
blue ones I should say are the RL agents
blue ones I should say are the RL agents
you can see the minion waves coming out
you can see the minion waves coming out
in front you see the towers in
in front you see the towers in
Orange and uh this whole Sim is like
Orange and uh this whole Sim is like
lines so when I ran this carb sweep this
lines so when I ran this carb sweep this
past week uh it didn't do that great and
past week uh it didn't do that great and
this is the same code base that you know
this is the same code base that you know
has done pong and has done everything
has done pong and has done everything
else so we know that the code is good
else so we know that the code is good
for that and the MOBA sweep if we look
for that and the MOBA sweep if we look
at it
nope other
one the MOBA sweep here
oops didn't do very well at all uh and
oops didn't do very well at all uh and
we can actually see here that the level
we can actually see here that the level
means basically aren't doing anything so
means basically aren't doing anything so
this is not really learning uh I left
this is not really learning uh I left
this running just because I can uh and
this running just because I can uh and
just to see in case it happened to find
just to see in case it happened to find
anything but yeah this is not learning
anything but yeah this is not learning
so what we're going to have to do today
so what we're going to have to do today
is we're going to have to get uh some
is we're going to have to get uh some
proper sweeps running we're going to
proper sweeps running we're going to
have to tune some various different
have to tune some various different
reward functions we're going to see
reward functions we're going to see
what's wrong we're going to make it so
what's wrong we're going to make it so
that the um the agents can use their
that the um the agents can use their
various different skills because those
various different skills because those
are disabled at the moment and basically
are disabled at the moment and basically
we're going to figure out what the heck
we're going to figure out what the heck
we broke in the last
we broke in the last
refactor uh because the environment is
refactor uh because the environment is
substantially cleaned up at this point
substantially cleaned up at this point
and really as soon as we start getting
and really as soon as we start getting
uh decent policies trained we're going
uh decent policies trained we're going
to be able to start balancing and stuff
to be able to start balancing and stuff
and then we'll pretty much have a final
and then we'll pretty much have a final
product done uh and then from there like
product done uh and then from there like
I'm open to spending a lot more time on
I'm open to spending a lot more time on
this and like making it way closer one
this and like making it way closer one
to one with actual DOTA instead of like
to one with actual DOTA instead of like
this kind of like very small toy mini
this kind of like very small toy mini
MOBA thing um that'll just depend on how
MOBA thing um that'll just depend on how
much people are interested in the
much people are interested in the
project right if so if I see a lot of
project right if so if I see a lot of
people uh if I see a lot of people like
people uh if I see a lot of people like
checking it out on Twitter if I see a
checking it out on Twitter if I see a
lot of people using it if people are
lot of people using it if people are
like interested in contributing to it
like interested in contributing to it
and using it then I'll go more after
and using it then I'll go more after
that but at the very least we're going
that but at the very least we're going
to get it to the point where it's like a
to get it to the point where it's like a
useful research en where agents are
useful research en where agents are
learning some cool stuff so let's start
learning some cool stuff so let's start
on that
let's add these tests so we don't lose
them see
test test files
all
right you can see that there's
right you can see that there's
been some changes there have been some
changes uh where are we here
um set up
build it's kind of cool that we're
build it's kind of cool that we're
starting to see some uh some actual like
starting to see some uh some actual like
contributors joining the Discord as well
contributors joining the Discord as well
it's going to make it way easier to get
it's going to make it way easier to get
going on this
going on this
stuff and uh one of my collaborators is
stuff and uh one of my collaborators is
back from vacation as well so we might
back from vacation as well so we might
see more stuff on the continuous control
see more stuff on the continuous control
side with puffer which I know there's
side with puffer which I know there's
some robotics folks around that like
some robotics folks around that like
that type of
thing
okay let's make sure that this all uh
okay let's make sure that this all uh
this runs to start
with this is how you would run it if you
with this is how you would run it if you
want to download it yourself
want to download it yourself
uh mode eval render mode Let's do
RB this is not loading up any policies I
RB this is not loading up any policies I
have it running too fast at the moment
have it running too fast at the moment
let me fix that
and let's just do eval model path
and let's just do eval model path
mob. PT I think that this is an updated
mob. PT I think that this is an updated
file we'll
see okay here you go here are these
see okay here you go here are these
trained Agents from before this is from
trained Agents from before this is from
before we like messed stuff up
before we like messed stuff up
apparently um so we must have just
apparently um so we must have just
messed up the data or the reward
messed up the data or the reward
function I suppose
the agents kind of filter towards the
the agents kind of filter towards the
center they'll fight some of the
center they'll fight some of the
neutrals they'll do whatever right I'm
neutrals they'll do whatever right I'm
noticing that they seem to be destroying
noticing that they seem to be destroying
the wall periodically which is kind of
the wall periodically which is kind of
weird so um first order of business is
weird so um first order of business is
going to
be if I just play this in human mode I
be if I just play this in human mode I
might be able to find some of the weird
might be able to find some of the weird
bugs right just by like playing this I
bugs right just by like playing this I
might be able to see like oh that's
might be able to see like oh that's
obviously wrong so let's see if this
obviously wrong so let's see if this
plays reasonably
plays reasonably
I can move around right what happens if
I can move around right what happens if
I go fight a neutral do I do damage to
I go fight a neutral do I do damage to
it yep if I get close it follows me
it yep if I get close it follows me
right I can L into the
right I can L into the
tower didn't seem like I could lure the
tower didn't seem like I could lure the
neutral into the
neutral into the
tower maybe that's not a thing
though I take damage
though I take damage
right if I get farther away do I still
right if I get farther away do I still
take damage
no we can see this one here is being
no we can see this one here is being
killed
killed
oops I see I've leveled up leveling
oops I see I've leveled up leveling
system appears to work my Max Health has
system appears to work my Max Health has
gone up so that appears to work as
gone up so that appears to work as
well and
well and
uh the wave comes to fight the wave gets
uh the wave comes to fight the wave gets
distracted by minions right
distracted by minions right
and then yeah there's a render bug here
and then yeah there's a render bug here
um eventually there's a render bug I got
um eventually there's a render bug I got
to fix but so far the Sim looks
reasonable do you think it would be nice
reasonable do you think it would be nice
if there were a verbo showing the stats
if there were a verbo showing the stats
of these DOTA agents level XP Etc
of these DOTA agents level XP Etc
watching reward uh there
is during well there's a there is this
is during well there's a there is this
for training we have log Time stuff for
for training we have log Time stuff for
training
training
so if you to go into WB here we have the
so if you to go into WB here we have the
level mean for radiant uh we've got the
level mean for radiant uh we've got the
reward for XP so we have like all the
reward for XP so we have like all the
different components of reward here's
different components of reward here's
the X the reward for getting XP the
the X the reward for getting XP the
reward for dying we've got the max Min
reward for dying we've got the max Min
and mean level for each team what else
and mean level for each team what else
do we have we've got a reward for
do we have we've got a reward for
destroying Towers we've got position X
destroying Towers we've got position X
and Y we've got reward for going towards
and Y we've got reward for going towards
the enemy
ancient and such like that so yeah we
ancient and such like that so yeah we
should probably add some of this as an
should probably add some of this as an
overlay like an optional overlay to the
overlay like an optional overlay to the
human gam playay that's something that
human gam playay that's something that
we're going to do while observing
we're going to do while observing
gameplay yeah I agree I agree that
gameplay yeah I agree I agree that
that's something that we're going to
that's something that we're going to
want for sure um though it does look to
want for sure um though it does look to
me that at the
moment this looks to me like a scaling
moment this looks to me like a scaling
issue at the moment because like the
issue at the moment because like the
reward is just super low
reward is just super low
right like the reward is too low for
right like the reward is too low for
this to be learning anything
meaningful um I wonder why that
is okay here's reward distance
is okay here's reward distance
o 07 so it looks like I I probably set
o 07 so it looks like I I probably set
the reward for just going towards the
the reward for just going towards the
enemy too low would be my initial
guess here's the reward for dying which
guess here's the reward for dying which
is like zero because they don't do
is like zero because they don't do
anything reward for
anything reward for
XP you know I could use this as an
XP you know I could use this as an
opportunity to do something really cool
opportunity to do something really cool
today um I've been thinking about this
today um I've been thinking about this
for a while so why don't I just expose
for a while so why don't I just expose
the weights for these rewards to carbs
the weights for these rewards to carbs
right so that carbs can actually sweep
right so that carbs can actually sweep
over these different rewards and then
over these different rewards and then
we'll use like a ground truth metric
we'll use like a ground truth metric
we'll use like you know a game length
we'll use like you know a game length
like we'll use like time to win or
like we'll use like time to win or
something like that in order to select
something like that in order to select
which of these is better or we'll like
which of these is better or we'll like
use like player level or something like
use like player level or something like
that in order to select which of these
that in order to select which of these
is
better there's a feature that I'm going
better there's a feature that I'm going
to have to add in which maybe we'll Dev
to have to add in which maybe we'll Dev
this this week but uh we need to have
this this week but uh we need to have
like a good ELO metric as well for uh
like a good ELO metric as well for uh
for our trained
for our trained
agents that's really what carbs needs is
agents that's really what carbs needs is
Elo Elo is a little hard to do
though hyper pram sweep for reward
though hyper pram sweep for reward
weightings given saved weight
weightings given saved weight
yeah so
yeah so
it's you would the hyper pram sweep
it's you would the hyper pram sweep
would set different weights for each
would set different weights for each
different component of the
different component of the
reward the hyper pram sweep would do is
reward the hyper pram sweep would do is
uh would set different weightings for
uh would set different weightings for
every different component of the reward
every different component of the reward
and then we would use something else
and then we would use something else
that's not just the reward As the metric
that's not just the reward As the metric
right so we like the metric for which
right so we like the metric for which
run is better would be something like
run is better would be something like
average level or something right
average level or something right
something that's not just immediate
something that's not just immediate
mediately dependent on the
mediately dependent on the
reward that would be the idea this type
reward that would be the idea this type
of thing has been done before you know
of thing has been done before you know
this type of thing has been done before
this type of thing has been done before
Deep Mind has this population Based
Deep Mind has this population Based
training paper where they did that like
training paper where they did that like
several years ago but there's required a
several years ago but there's required a
whole bunch of Hardware whereas this I
whole bunch of Hardware whereas this I
think we can just do this and have this
think we can just do this and have this
work that'll be fun let me see if
work that'll be fun let me see if
anything's blown up on X real
quick one second let me uh
let me see
uh what in the hell okay never mind all
uh what in the hell okay never mind all
these messages are just
these messages are just
Spam
cool nice uh Let's do let's do the thing
cool nice uh Let's do let's do the thing
that I just
that I just
said remove this let's add the rewards
said remove this let's add the rewards
in the reward weights in that'll be a
in the reward weights in that'll be a
fun thing to do so the way to do this uh
fun thing to do so the way to do this uh
they going to be two parts to
this the first is going to be to see uh
this the first is going to be to see uh
how we currently have
them okay so right here we have these as
them okay so right here we have these as
constants
right we're going to move these into the
right we're going to move these into the
init function of the environment
there we go reward XP reward distance
there we go reward XP reward distance
reward
Tower uh and then we will
Tower uh and then we will
do
reward okay we set the reward
components and then we look for reward
components and then we look for reward
underscore like this
any others nope that's
any others nope that's
it now we get to take these
out and we get to put them as arguments
out and we get to put them as arguments
to the
to the
environment so we'll do
discretize
discretize
Ward death equal
Ward death equal
1.0 3.0
okay these look
good so let's uh let's now pass these I
good so let's uh let's now pass these I
suppose to the the environment
yeah we'll pass all these to the
yeah we'll pass all these to the
environment and we'll see if it works
environment and we'll see if it works
and then we'll add them to the carb
sweep uh what order do I need to do that
in
in
so they're currently the last ARG so
so they're currently the last ARG so
after just
discretize discretize is just hard Cod
discretize discretize is just hard Cod
the true
the true
there all right there we go reward death
there all right there we go reward death
reward XP is this it death XP distance
reward XP is this it death XP distance
Tower yeah that's the right order cool
Tower yeah that's the right order cool
uh now we do python setup.py
no attribute reward death
really take this watch off
C MOA has no attribute reward dep
okay right I have to declare them up
okay right I have to declare them up
here as well no big
deal forgot to recompile
appears to
work that's probably reasonable right is
work that's probably reasonable right is
getting somewhere reward
getting somewhere reward
here actually notably this file that uh
here actually notably this file that uh
this oh wait
this oh wait
negative that's funky all
negative that's funky all
right it runs at least now how do we
right it runs at least now how do we
integrate this with carbs is going to be
integrate this with carbs is going to be
the question
um let me
think right now with carbs we
think right now with carbs we
have a sweep config which gets pulled
have a sweep config which gets pulled
out
out
[Music]
somewhere where's the sweep
config
config
sweep ah args of sweep is all it is so
sweep ah args of sweep is all it is so
config default do we have sweep oh yeah
config default do we have sweep oh yeah
perfect I think we literally just add
perfect I think we literally just add
this in
this in
here we're just going to have to make uh
here we're just going to have to make uh
yeah we're just going to have to make
yeah we're just going to have to make
like a a
like a a
reasonable setting for for this type of
reasonable setting for for this type of
stuff
so here are our Rewards
and we should just be able to add this
and we should just be able to add this
in here right like we just add like
in here right like we just add like
sweep parameters
sweep parameters
dot n. parameters dot reward
dot n. parameters dot reward
death
right now the way that this works is
right now the way that this works is
that it defines a normal distribution
that it defines a normal distribution
around the target
around the target
um that could be pretty aggressive
um that could be pretty aggressive
right if you define like a normal
right if you define like a normal
distribution around the
target so we're going to have to think
target so we're going to have to think
about how we handle
about how we handle
this we'll go look at the actual graphs
this we'll go look at the actual graphs
let me just put something for now uh
let me just put something for now uh
default
default
uniform let's do minus 5 to five or like
uniform let's do minus 5 to five or like
death
death
because those are like the max
because those are like the max
reasonable clipped rewards right reward
XP
XP
0.0
0.0
to
0.1 or something
0.1 or something
maybe Max
reasonable because it's per XP point so
reasonable because it's per XP point so
I think that that's like that's a lot we
I think that that's like that's a lot we
do
do
05 reward distance
0 to
0 to
five L
Tower there's no reason this should be a
Tower there's no reason this should be a
positive death
reward okay so now we have bindings for
reward okay so now we have bindings for
these at the very least um we're going
these at the very least um we're going
to want to Center these
which is one of the kind of the awkward
which is one of the kind of the awkward
things is like we need to be able to
things is like we need to be able to
define the search center for these and
define the search center for these and
uh we don't really have the ability to
uh we don't really have the ability to
do that
do that
with with wand be sweeps at the moment I
with with wand be sweeps at the moment I
don't think that's going to be one of
don't think that's going to be one of
the uh the smaller issues where we'll
the uh the smaller issues where we'll
have to hardcode
have to hardcode
maybe that's okay we can do that for now
maybe that's okay we can do that for now
um can we get reasonable ranges
let's see what this sweep
did so I gave this thing like logit
did so I gave this thing like logit
space j Lambda and it kind of stayed in
space j Lambda and it kind of stayed in
this
this
range so logit space is nice if I have
range so logit space is nice if I have
something that's going to be zero to one
something that's going to be zero to one
maybe
X space is kind of interesting or log
X space is kind of interesting or log
space is kind of
interesting I actually don't know how it
interesting I actually don't know how it
makes use of these spaces to be honest I
makes use of these spaces to be honest I
think we can just try this for now and
think we can just try this for now and
set like reasonable means
set like reasonable means
maybe it'll be somewhat inefficient but
maybe it'll be somewhat inefficient but
we'll be able to tune this later
on let me see how we're going to get
on let me see how we're going to get
this into the environment in the first
place I've got two big cookies and a
place I've got two big cookies and a
coffee to keep me awake for the next
coffee to keep me awake for the next
couple hours
okay so this is where we need to add
this e
I need to give re search center is
I need to give re search center is
negative
1.0 yeah so what I'm doing here is I'm
1.0 yeah so what I'm doing here is I'm
just like I'm adding some special case
just like I'm adding some special case
stuff for the Moa because we don't have
stuff for the Moa because we don't have
a way to do you can't specify search
a way to do you can't specify search
center in a config Wan B doesn't let you
center in a config Wan B doesn't let you
so we're just hacking around it for now
so we're just hacking around it for now
until Wan B gives us a native
integration I think these were the
integration I think these were the
values we
values we
had okay so now now we actually have all
had okay so now now we actually have all
these parameters which is very
these parameters which is very
nice
nice
and uh all we need to do is figure out
and uh all we need to do is figure out
how to pass them to the actual
environment arsof train. update
suggestion well this is now
suggestion well this is now
awkward
because we've got a bunch of awkward
because we've got a bunch of awkward
stuff going on essentially because uh of
stuff going on essentially because uh of
restriction of having to hack around Wan
restriction of having to hack around Wan
B's API
B's API
like if Wan had a a custom API for this
like if Wan had a a custom API for this
it would be way easier but since there
it would be way easier but since there
isn't one we're having to hack a bunch
isn't one we're having to hack a bunch
uh so we need to basically figure out
uh so we need to basically figure out
how to come up with groups of parameters
how to come up with groups of parameters
here let me think of a good way of doing
that e
I think I want to add a group here
I think I want to add a group here
right when I add this like this group
right when I add this like this group
thing cuz I have like carbs per am of
thing cuz I have like carbs per am of
reward
and what do you pass you pass train
and what do you pass you pass train
prams yeah
so I think you need to pass a
so I think you need to pass a
group right
group right
here so we'll
here so we'll
do en is the
group en
oops what did I do
wrong and we're going to make it so that
wrong and we're going to make it so that
uh so this thing can recognize multiple
uh so this thing can recognize multiple
different groups of parameters so this
different groups of parameters so this
will give us uh a nice
Improvement this will be
Improvement this will be
train in fact all these are going to be
train in fact all these are going to be
trained do I trust this thing to
trained do I trust this thing to
actually give me a good
correction let me make sure it didn't
correction let me make sure it didn't
make any
mistakes looks good to me
okay uh do we get rid of this
part we get rid of this for now so this
part we get rid of this for now so this
is these are the train prams and where
is these are the train prams and where
do we where did we Define WB train
do we where did we Define WB train
pams I think this is just sweep param
pams I think this is just sweep param
now all these places we have train prams
now all these places we have train prams
it's just going to be sweet
parameters e
perfect and now we have to modify this
perfect and now we have to modify this
carbs pram
carbs pram
function uh in order to take a group
function uh in order to take a group
group so one B parameter is going to be
group so one B parameter is going to be
WB crams of group parameters name like
WB crams of group parameters name like
this
this
value gives you yeah values this is
value gives you yeah values this is
fine and you get the
space uh this is kind of awkward here I
space uh this is kind of awkward here I
think you need to do like
group group
underscore yeah let's do group Dash
group Dash name like
this and
then here where we get the
suggestion now we'll get train
suggestion now we'll get train
suggestion
suggestion
equals
um I'm like doing it this
way yeah so
okay there you go so now we're going to
okay there you go so now we're going to
get the train suggestion and the
get the train suggestion and the
environment
environment
suggestion and then this is going to be
suggestion and then this is going to be
updated with train suggestion
right this is train suggestion
don't need this
don't need this
anymore and that's fine and now we
anymore and that's fine and now we
do ARS of
do ARS of
track that's
track that's
fine args of m. update M
suggestion uh and that should be it so
suggestion uh and that should be it so
now we should have access to args of
now we should have access to args of
N and then we call train with args like
N and then we call train with args like
this and we should should be able to do
this and we should should be able to do
yeah n keyword args is ARS of n right
yeah n keyword args is ARS of n right
like this so This should already work
like this so This should already work
um let's see if this works
locally mod
train does this give us correct
train does this give us correct
environment loading
looks like this does maybe
work let me make sure it's getting added
work let me make sure it's getting added
into the environment
so oh we didn't add it into the uh the
so oh we didn't add it into the uh the
train config let's do
that that would be an an interesting way
that that would be an an interesting way
of doing it as well let's
do
do
n
right so we have the N prams here
yeah and then this is going to give us
yeah and then this is going to give us
this should give us an error I believe
this should give us an error I believe
because these should be unexpected
parameters yep got
parameters yep got
unexpected keyword AR reward death now
unexpected keyword AR reward death now
we have to
go make
MOA Ward
or
death does it not
know uh it kind of
know uh it kind of
remembers oh yeah it does that's nice it
remembers oh yeah it does that's nice it
remembers uh remembers the args and
remembers uh remembers the args and
their
their
values
values
okay and now we just have to add them
okay and now we just have to add them
here reward
nice and if I just
nice and if I just
[Music]
[Music]
buffer ocean
MOBA
oops and we just like print
oops and we just like print
reward break point like
reward break point like
this we should see this passing correct
this we should see this passing correct
there are our correct
there are our correct
arguments and if I change one of
arguments and if I change one of
them we should
them we should
see we should see them
change yeah
change yeah
5.0 and go back to
three and if if I run this with
multiprocessing it still
work yep still
work yep still
works
works
cool um is it slower
that seems slow we'll have to see what
that seems slow we'll have to see what
happened there
some people are seeing
this can I just run sweep carbs and have
this can I just run sweep carbs and have
it work
missing w b
pams carbs Pam
of this is
of this is
train and then this is sweep pams
let's debug this and get this on the
let's debug this and get this on the
board so that we can um start automating
board so that we can um start automating
all of this runs all of this
all of this runs all of this
training I think this will be the thing
training I think this will be the thing
that really makes it work nicely is um
that really makes it work nicely is um
being able to just sweep the
being able to just sweep the
rewards tuning these is
rewards tuning these is
obnoxious and then what we'll do is like
obnoxious and then what we'll do is like
in future runs we'll just be able to
in future runs we'll just be able to
tune from the starting
tune from the starting
Point okay uh is this running hold on is
Point okay uh is this running hold on is
this already running let me
this already running let me
see carb
sweeps 37
sweeps 37
seconds
seconds
MOA I click overview
here we've got parameters
uh it's not logging this is
uh it's not logging this is
it train
it train
sweep oh yeah here it is
sweep oh yeah here it is
look we've got uh the rewards right here
look we've got uh the rewards right here
right so this actually
right so this actually
works let's push
this this is actually what I was going
this this is actually what I was going
to do with the tari as well that was
to do with the tari as well that was
going to mess with the uh some of the M
going to mess with the uh some of the M
parameters so I think that we're going
parameters so I think that we're going
to do both of those today maybe that
to do both of those today maybe that
would be
fun fig ocean mobile
we'll do
update add and rewards
s uh I'm realizing now that we
s uh I'm realizing now that we
we need to change the metric then don't
we need to change the metric then don't
we yeah we need to change the
metric because okay so the issue at the
metric because okay so the issue at the
moment is we can't if we're changing the
moment is we can't if we're changing the
reward
reward
magnitudes we can't then like optimize
magnitudes we can't then like optimize
for higher and higher reward right
for higher and higher reward right
like we need to have something else so
like we need to have something else so
let me let me figure out what we're
let me let me figure out what we're
going to change I can just make it like
going to change I can just make it like
radiant Team level or
something radiant level mean for
now I think that's really unstable
now I think that's really unstable
though the way I'm logging it
what if I make a norm
what if I make a norm
reward what if I just make like a
reward what if I just make like a
normalized reward metric
right so I was thinking of like dividing
right so I was thinking of like dividing
the rewards by their weights or
the rewards by their weights or
something but that's also kind of janky
something but that's also kind of janky
isn't it
[Music]
H oh I I have an
H oh I I have an
idea I got a cool
idea what if I were to make a metric
idea what if I were to make a metric
that's like total Towers taken over the
that's like total Towers taken over the
course of
course of
training right so we just directly
training right so we just directly
optimize
for like maximum game
for like maximum game
progress the game doesn't reset until
progress the game doesn't reset until
you
win that seems good
yeah that seems
yeah that seems
good I'm GNA have to code that
good I'm GNA have to code that
in but that seems like a good metric to
use sparse reward like achievement yeah
use sparse reward like achievement yeah
so achievement is
so achievement is
the achievement's like the always the
the achievement's like the always the
type of reward you want right
type of reward you want right
achievement is just like can I have some
achievement is just like can I have some
like breadcrumb trail that tells you how
like breadcrumb trail that tells you how
many breadcrumbs you've gotten towards
many breadcrumbs you've gotten towards
the thing you care about right uh you
the thing you care about right uh you
don't always have that
don't always have that
though right I mean I I could Define
though right I mean I I could Define
that
like for DOTA it would probably just be
like for DOTA it would probably just be
like Towers taken
right and this this is not a matter of
right and this this is not a matter of
the reward this is independent from the
the reward this is independent from the
reward this is so the reward is what you
reward this is so the reward is what you
train on right the metric we care about
train on right the metric we care about
now this is for evaluating how well a
now this is for evaluating how well a
specific run has done because like if I
specific run has done because like if I
double the reward right then you'd
double the reward right then you'd
expect that it would be twice as high
expect that it would be twice as high
total reward on average what we care
total reward on average what we care
about is like game progress so we want
about is like game progress so we want
like number of towers taken
that'll be
good upper lib
how do I want to expose
this well the thing is the tower taken
this well the thing is the tower taken
metric is also kind of awkward because
metric is also kind of awkward because
it optimizes for short games doesn't
it it just optimizes for like you both
it it just optimizes for like you both
Rush past each
other really what you want is you want
ELO so
okay let's look at this another
okay let's look at this another
way we know that we're going to need ELO
way we know that we're going to need ELO
at some point in here because ELO has to
at some point in here because ELO has to
be the metric that you optimize for it's
be the metric that you optimize for it's
an adversarial game you have to have
an adversarial game you have to have
ELO I have an implementation of Elo it's
ELO I have an implementation of Elo it's
just that like evaluating versus past
just that like evaluating versus past
agents or whatever is kind of
agents or whatever is kind of
complicated that's not happening today
complicated that's not happening today
I'm too tired to implement that today um
I'm too tired to implement that today um
possibly later in the
possibly later in the
week so in the meantime can I just come
week so in the meantime can I just come
up with something
reasonable you know why not let's let's
reasonable you know why not let's let's
just optimize for Towers Tak in that
just optimize for Towers Tak in that
seems it's better than
nothing um
public total Towers
taken
taken
oops zero it's not going to ever get
oops zero it's not going to ever get
reset
right
right
here total Towers taken plus equals
1 and then we will do total Towers
taken in the
taken in the
infos which is
numpy
mean where do we get this
from radiant levels
radiant oh you have to
radiant oh you have to
iterate that's
fine you have to put this in a list as
fine you have to put this in a list as
well cool so let's see if this now works
uh config MOA ocean
uh config MOA ocean
MOA environment slash
MOA environment slash
total Towers
total Towers
taken
okay and we're going to get this running
okay and we're going to get this running
on the big box
this might even incentivize uh playing
this might even incentivize uh playing
in multiple Lanes who
knows what happened oh I already pushed
knows what happened oh I already pushed
okay okay we're
good I just do not feel great today
dang Vision sharing between
dang Vision sharing between
agents that's
agents that's
harder oh wait did I miss I missed a
harder oh wait did I miss I missed a
message hold on
Vision sharing between
agents is much more of a pain
is absolutely much more of a pain um
is absolutely much more of a pain um
it's not as bad for DOTA as it is for
it's not as bad for DOTA as it is for
other
other
games but I like I can potentially do
games but I like I can potentially do
that that is not out of the question at
that that is not out of the question at
all like I actually I know how to do
all like I actually I know how to do
that as well it's just it would take
that as well it's just it would take
some
work let me think for a second what
today every agent for itself
yeah so it does have Vision
yeah so it does have Vision
sharing but
sharing but
like they are using an they are using an
like they are using an they are using an
independently acting
independently acting
model on each agent
it doesn't mean every agent for itself
it doesn't mean every agent for itself
it just means like yeah you don't get
it just means like yeah you don't get
like the shared Vision on the mini map
like the shared Vision on the mini map
like you do in Dota
right there's a lot of stuff that's not
right there's a lot of stuff that's not
one to one yet right we're trying to get
one to one yet right we're trying to get
the basics working
first e
what's running on this
box now this one's running
pong let's go to the other
box I suggested to somebody in here in
box I suggested to somebody in here in
the chat last week that um if they
the chat last week that um if they
wanted to learn how to write super high
wanted to learn how to write super high
per M and wanted to contribute to puffer
per M and wanted to contribute to puffer
they should do um like ultra high
they should do um like ultra high
performance breakout that would be cool
performance breakout that would be cool
we'll see if they actually do it that'
we'll see if they actually do it that'
be a nice
addition for
okay
okay
so first of all how fast is this train
so first of all how fast is this train
currently
I don't need this
anymore how fast is this
train oh well I've made a bug so
yeah this is now training way slower
yeah this is now training way slower
than it was training
than it was training
before so we'll have to figure out why
before so we'll have to figure out why
that
that
is I'll launch a little sweep in the
is I'll launch a little sweep in the
meantime and then I'll debug that
locally we'll run a little sweep in the
locally we'll run a little sweep in the
meantime
oh this one runs
oh this one runs
fast I guess it's just it I guess it's
fast I guess it's just it I guess it's
just hyper pram settings then
just hyper pram settings then
right what do you have uh what do we
right what do you have uh what do we
have as
defaults batch and mini
defaults batch and mini
batch I've got 64k mini batch by
batch I've got 64k mini batch by
default that's possibly just too big
default that's possibly just too big
right
yeah we're going to have to add gradient
yeah we're going to have to add gradient
accumulation and other things for this
accumulation and other things for this
project I'm sure this is going to be the
project I'm sure this is going to be the
first project that really needs the uh
first project that really needs the uh
much larger batch
sizes there's this fun blog post
really good blog post
really good blog post
so what this says is that when you're
so what this says is that when you're
training
training
pong you don't really get uh advantage
pong you don't really get uh advantage
over using mini batch size like a little
over using mini batch size like a little
over a thousand
over a thousand
here and when this is batch size if
here and when this is batch size if
you're not doing gradient accumulation
you're not doing gradient accumulation
this actually means mini batch
this actually means mini batch
size so that's important to know um some
size so that's important to know um some
of the atarian are higher but like
of the atarian are higher but like
mostly you know the most most of them
mostly you know the most most of them
are like under
are like under
10k breakout is up here whatever this is
10k breakout is up here whatever this is
like 7,000 I
like 7,000 I
guess
guess
um the DOTA 1v1 is over
here and then the DOTA 5v5 is over
here and then the DOTA 5v5 is over
here
here
so this says that you get like linearly
so this says that you get like linearly
better performance for a long time on
better performance for a long time on
complicated environments
good post where' the curves go oh they
good post where' the curves go oh they
used to have this really cool graphic on
here they redid the blog and they killed
here they redid the blog and they killed
like a lot of the cool features on the
like a lot of the cool features on the
Old Post there used to be like this
Old Post there used to be like this
interactive thing where you could like
interactive thing where you could like
slide a a loss
slide a a loss
curve this was one of the best posts
curve this was one of the best posts
that they had
it's funny how me posting about stars is
it's funny how me posting about stars is
better than me posting articles
better than me posting articles
apparently
apparently
uh but hey we're happy we're happy with
uh but hey we're happy we're happy with
the
puffers
701 welcome back will
oops let's check uh let's check on the
oops let's check uh let's check on the
sweep see if we have anything
cool yeah so this will probably take
cool yeah so this will probably take
forever to run
forever to run
sweeps uh we can optimize some other
sweeps uh we can optimize some other
stuff in the
meantime wait are these the exact same
meantime wait are these the exact same
curve oh yeah because it's only getting
curve oh yeah because it's only getting
a reward for distance at the moment that
a reward for distance at the moment that
makes
sense so in the meantime we can think
sense so in the meantime we can think
about like what other stuff we might
about like what other stuff we might
want to potentially optimize in
here I've got a little over two hours it
here I've got a little over two hours it
looks like jeez I'm just so freaking
looks like jeez I'm just so freaking
tired today it's
tired today it's
nuts don't feel great
nuts don't feel great
either
um let me think what we can do on this
um let me think what we can do on this
project to make this like really
solid I mean perf optimization is always
solid I mean perf optimization is always
nice right
because I want to I want to reenable
because I want to I want to reenable
skills and stuff but I don't necessarily
skills and stuff but I don't necessarily
want to do that until we have working
want to do that until we have working
models
models
so I'm going to bet that unless we made
so I'm going to bet that unless we made
like a major error
like a major error
somewhere probably it's just the reward
somewhere probably it's just the reward
function right probably it's just like
function right probably it's just like
the reward function being wrong is why
the reward function being wrong is why
it stopped learning so well compared to
it stopped learning so well compared to
previously
previously
and the fact that the old model file
and the fact that the old model file
still works well on the new version of
still works well on the new version of
the environment uh leads me to believe
the environment uh leads me to believe
that we probably didn't mess up the
that we probably didn't mess up the
observations because if we messed up the
observations because if we messed up the
observations the old model wouldn't work
observations the old model wouldn't work
right so I think it's just that we
right so I think it's just that we
changed the rewards we rescaled
changed the rewards we rescaled
everything and then the new scaling was
everything and then the new scaling was
bad that's my guess
so let's do a little basic per
optimization oh wait
um we could also do the thing that we
um we could also do the thing that we
just did for um for
just did for um for
breakout and see if that does way
breakout and see if that does way
better that's a thing we could do right
let's do that real
quick because if that works
quick because if that works
then I'll be able to um to do a little
then I'll be able to um to do a little
article on that midweek which would be
article on that midweek which would be
cool to
cool to
see and this would also help us validate
see and this would also help us validate
this idea of like n tuning in the first
this idea of like n tuning in the first
place
I know a bunch of people like this stuff
I know a bunch of people like this stuff
for curriculum
for curriculum
learning so let's do
that here are tari pams and we're going
that here are tari pams and we're going
to open up puffer
to open up puffer
lib
environments t
mops I see frame skip here I know
mops I see frame skip here I know
there's more than just that though let
there's more than just that though let
me go find the uh the ARG
name we're just doing this because it's
name we're just doing this because it's
like the same Technique we did for the
like the same Technique we did for the
mooba it's a nice thing to run in the
mooba it's a nice thing to run in the
background and then we'll do a little
background and then we'll do a little
bit of perf optimization and then uh
bit of perf optimization and then uh
I'll break for meetings because that'll
I'll break for meetings because that'll
probably take good couple hours to do
probably take good couple hours to do
the perf optimization this will probably
the perf optimization this will probably
only take like 20 minutes uh I'll do a
only take like 20 minutes uh I'll do a
little bit of perf optimization we'll
little bit of perf optimization we'll
see if we can get the environment
see if we can get the environment
comfortably you know above the million
comfortably you know above the million
step per second or whatever like fix
step per second or whatever like fix
some stuff up there and then uh I'll
some stuff up there and then uh I'll
break for meetings and I'll probably
break for meetings and I'll probably
come back in the evening afterward
come back in the evening afterward
depending how I'm
feeling okay so here are
feeling okay so here are
the
actions
actions
difficulty we leave difficulty off I
difficulty we leave difficulty off I
think I don't know if we want to mess
think I don't know if we want to mess
with that mode
it's just frame Skip and repeat action
it's just frame Skip and repeat action
prob I think is all we need to uh to
prob I think is all we need to uh to
care
about R
about R
skip repeat
skip repeat
action
probability 25
there's like something with sticky
there's like something with sticky
actions I think that we need to be
actions I think that we need to be
careful with before we post this stuff
careful with before we post this stuff
but
n okay
that's fine and now all we do is we grab
that's fine and now all we do is we grab
these
arcs uh I am I'm letting the MOBA run a
arcs uh I am I'm letting the MOBA run a
couple of sweeps so I just did this
couple of sweeps so I just did this
exact the exact thing I'm doing now I
exact the exact thing I'm doing now I
just did for the
just did for the
mooba um I'll show you right here
yeah so it just got to the second
yeah so it just got to the second
experiment so it's now sweeping over
experiment so it's now sweeping over
reward waiting so it's sweeping over
reward waiting so it's sweeping over
environment specific parameters this one
environment specific parameters this one
looks like it's already doing better uh
looks like it's already doing better uh
so I'm letting it do a couple little
so I'm letting it do a couple little
experiments in the background so I'm
experiments in the background so I'm
applying the exact thing that I just did
applying the exact thing that I just did
to breakout just as another test I'm
to breakout just as another test I'm
going to run this in the background then
going to run this in the background then
I'm going to do some perf optimization
I'm going to do some perf optimization
on the mooba and uh then by then we
on the mooba and uh then by then we
should have some runs done
should have some runs done
because what happened with the mooba is
because what happened with the mooba is
uh so I did this giant sweep over the
uh so I did this giant sweep over the
weekend and uh it didn't give us like
weekend and uh it didn't give us like
any good policies even though carbs is
any good policies even though carbs is
really good and we know that it works
really good and we know that it works
and the only thing that I changed was I
and the only thing that I changed was I
changed like some of the reward waiting
changed like some of the reward waiting
so what I do now is I added the reward
so what I do now is I added the reward
waiting into this sweep so it can
waiting into this sweep so it can
hopefully also figure that out for us uh
hopefully also figure that out for us uh
and I'm letting it collect some data
and I'm letting it collect some data
it's not going to take very long but I
it's not going to take very long but I
figured i' just add this to break out
figured i' just add this to break out
while I'm waiting just as another sanity
while I'm waiting just as another sanity
check on here and then I will go back
check on here and then I will go back
and do some perf optimization so that's
and do some perf optimization so that's
what's happening at the
what's happening at the
moment basically the same thing all I
moment basically the same thing all I
have to do
have to do
is distribution should
be uh what
uniform what did I do for like gamma in
uniform what did I do for like gamma in
uh Slash config slash uh oh
uh Slash config slash uh oh
default
default
gamma yeah uniform okay that's
fine let's check the demo file and just
fine let's check the demo file and just
do the exact same thing that we did for
Moa which is is right
Moa which is is right
here we just
add linear search center is four which
add linear search center is four which
is
good uh and what did we call it is
linear now this is logit
linear now this is logit
right for repeat action
right for repeat action
prob log it
0.25 and that should
0.25 and that should
work so let's see if uh whoops
let's add these as default see if it
works and I'm going to actually bump
works and I'm going to actually bump
this up so I can just test real quick
this up so I can just test real quick
but we're going to do
t let me make sure this
t let me make sure this
works be a good sanity check for the Moa
works be a good sanity check for the Moa
as
as
well python demo
well python demo
and
mode
mode
right and if this passes correctly then
right and if this passes correctly then
that should be a good sign we'll do
pong uh was it
repeat that's not good right
repeat that's not good right
right repeat action
right repeat action
prob why didn't this
pass okay so that's a good thing to know
pass okay so that's a good thing to know
so we potentially have some bug
here repeat
action repeat action
action repeat action
probability I have it right here don't I
probability I have it right here don't I
oh
oh
dumb like this I did that correctly for
dumb like this I did that correctly for
the MOBA though
yeah 0.5
yeah 0.5
perfect and now this goes to 0.25 which
perfect and now this goes to 0.25 which
is the
is the
normal uh normal
version and we should just be able to
version and we should just be able to
open that move the break point Commit
open that move the break point Commit
This
I have a spare box for this as
well e
and then we'll see if that sweep does
and then we'll see if that sweep does
any
any
better let's make sure this doesn't
better let's make sure this doesn't
error invalid type
error invalid type
float
float
okay we forgot one thing with
this is integer
and let's see if this
works looks like
works looks like
it that's uh 37k 35k at least train
it that's uh 37k 35k at least train
steps per second on Atari so that's a
steps per second on Atari so that's a
less than 5 minute train for Atari right
less than 5 minute train for Atari right
there
okay so now we're all set on our
okay so now we're all set on our
sweeps we have a third one on our mobile
sweeps we have a third one on our mobile
yet
anything anybody taking
Towers doesn't look like anybody's
Towers doesn't look like anybody's
taking Towers just yet
so it's going to take it a while to find
so it's going to take it a while to find
um reasonable train settings but you can
um reasonable train settings but you can
see
see
actually if I zoom in on this a little
actually if I zoom in on this a little
bit you see there's env. reward death m.
bit you see there's env. reward death m.
reward you know tower all these things
reward you know tower all these things
so the uh rewards are now in here as
so the uh rewards are now in here as
well which is pretty
cool so let's go back to some uh some
cool so let's go back to some uh some
perf optimization from here
on the desktop
yeah let's see what is breaking uh
yeah let's see what is breaking uh
what's breaking at the moment
see if we can find anything that's slow
well obviously this stuff calls back to
well obviously this stuff calls back to
python that's that's allowed
python that's that's allowed
too uh this is a line that I wish I
too uh this is a line that I wish I
could make not call back to Python and
could make not call back to Python and
it would help us quite a bit
but I really can't I wish I could but I
can't this is weird that this cast
can't this is weird that this cast
doesn't
work this does this calls back cuz it's
work this does this calls back cuz it's
public which is fine we know that's
public which is fine we know that's
going to
going to
happen this is all in a nit so we don't
happen this is all in a nit so we don't
care that this runs
python
oh well that's well that there's your
oh well that's well that there's your
problem
problem
uh yeah we have all the optimized we
uh yeah we have all the optimized we
have all the slow ass end flags
have all the slow ass end flags
on let's fix
on let's fix
that message do you think this could be
that message do you think this could be
expanded to discover new macro strats in
expanded to discover new macro strats in
League with each new
League with each new
update uh so the thing is yes but
update uh so the thing is yes but
like it would have to be pretty much one
like it would have to be pretty much one
to one with
to one with
league
league
and it would have to be way faster than
and it would have to be way faster than
league is now because otherwise you're
league is now because otherwise you're
looking at the scale of compute for
looking at the scale of compute for
DOTA I think that this could be done
DOTA I think that this could be done
like successfully at the scale that Riot
like successfully at the scale that Riot
would be willing to invest in and I know
would be willing to invest in and I know
actually has done a fair bit on the
actually has done a fair bit on the
reinforcement learning side I actually I
reinforcement learning side I actually I
offered to do some stuff like this uh
offered to do some stuff like this uh
with puffer for him but uh I think they
with puffer for him but uh I think they
were doing they were kind of doing their
were doing they were kind of doing their
own thing at the time um but yeah this
own thing at the time um but yeah this
is absolutely the type of thing that's
is absolutely the type of thing that's
going to just get easier in the future
going to just get easier in the future
and I don't know if game studios are
and I don't know if game studios are
going to be the first major adopters of
going to be the first major adopters of
this stuff but um they will be adopters
this stuff but um they will be adopters
of this when it's like more consistent
of this when it's like more consistent
and easy down the road which is stuff I
and easy down the road which is stuff I
building towards it's all stuff I'm
building towards it's all stuff I'm
building
towards I mean this is kind of the plan
towards I mean this is kind of the plan
with puffer right is that this Tech is
with puffer right is that this Tech is
just going to get way more stable as a
just going to get way more stable as a
result of all this stuff I'm building
result of all this stuff I'm building
and then companies are going to
and then companies are going to
hopefully want want to use that as it
hopefully want want to use that as it
becomes easier you can use it for free
becomes easier you can use it for free
and if you want you know extra features
and if you want you know extra features
or support then we can talk
right I actually think Riot would find
right I actually think Riot would find
it more useful
it more useful
because they'll be able to use it to
because they'll be able to use it to
prevent them from releasing broken
prevent them from releasing broken
with updates
with updates
right so it makes more sense from the
right so it makes more sense from the
game balance perspective to have the
game balance perspective to have the
game company using
it because you're not going to be able
it because you're not going to be able
to do something like this on League like
to do something like this on League like
one to
one to
one without deep cooperation from the
one without deep cooperation from the
game developer anyways and
game developer anyways and
like this stuff is intensive and
like this stuff is intensive and
expensive to do so like that that's just
expensive to do so like that that's just
never going to make sense
never going to make sense
but it's totally something that Riot
but it's totally something that Riot
could do know if they wanted to I
could do know if they wanted to I
wouldn't even necessarily recommend
wouldn't even necessarily recommend
doing that just yet because that's a
doing that just yet because that's a
really hard RL problem but it's
really hard RL problem but it's
definitely something that could be done
definitely something that could be done
you know cheaper and easier in the
you know cheaper and easier in the
future
okay way better so once I took all the
okay way better so once I took all the
dumb Flags
dumb Flags
off this function runs in pure C
off this function runs in pure C
why do I have this add Trace back Pi add
why do I have this add Trace back Pi add
Trace
Trace
back and why do I have this thing that
back and why do I have this thing that
looks like a function
call is just this is this just The
call is just this is this just The
annotation
itself or is this traceback saying that
itself or is this traceback saying that
wait line
wait line
number this has got to be like
the Pix add Trace back
h
so this could be spous
I don't know if this is a real I really
I don't know if this is a real I really
don't know if this is like a real error
don't know if this is like a real error
I this looks like it's adding
I this looks like it's adding
something for the scon it looks like
something for the scon it looks like
this is adding The annotation itself but
this is adding The annotation itself but
why would it be adding an annotation
why would it be adding an annotation
here like it shouldn't be right not all
here like it shouldn't be right not all
my functions have this right do I have
my functions have this right do I have
some functions that
some functions that
have yeah see like this one this one
have yeah see like this one this one
here doesn't
here doesn't
have
anything do I do I have any functions
anything do I do I have any functions
that don't
that don't
have
have
yellow they all have profile disabled on
them maybe I should do at profile off or
something okay so like aside from these
something okay so like aside from these
highle function calls which are for some
highle function calls which are for some
reason yeah so this one is
reason yeah so this one is
definitely like calling back to python
definitely like calling back to python
right
memory view
length yeah cuz I don't this is not uh
length yeah cuz I don't this is not uh
this is not typed is why so like there
this is not typed is why so like there
there are a few small things there I can
there are a few small things there I can
fix but then this is these are all just
fix but then this is these are all just
the function calls
the function calls
themselves uh this one is one that I can
themselves uh this one is one that I can
actually fix levels one I can actually
fix what in the
fix what in the
heck okay so this spawn function is
heck okay so this spawn function is
apparently
slow Pi in from
long I have it typed here right y
Pi int from
double I don't know why a cast like this
double I don't know why a cast like this
would
would
trigger a call back that's
weird scan AOE here
weird scan AOE here
is triggering
is triggering
this even though scan AOE is in pure oh
this even though scan AOE is in pure oh
it doesn't have a return type
okay we can uh we can work with this
right let's start making some basic
optimizations I'm kind of suspicious
optimizations I'm kind of suspicious
about this
one let's let's try
one let's let's try
this is this any different if I I do the
this is this any different if I I do the
cast in the C
syntax ah it
syntax ah it
is
is
int yeah so this actually look at that
int yeah so this actually look at that
this goes away
we don't care about stuff in that
we don't care about stuff in that
function we go to
level okay this is now going to
level okay this is now going to
be int XP I believe
yep int
yep int
XP and then this length thing doesn't
XP and then this length thing doesn't
work so there are 30
levels that ought to
work and now we'll have that function in
work and now we'll have that function in
C that's one other function call
avoided we haven't messed with like
avoided we haven't messed with like
compile Flags yet at
compile Flags yet at
all that can sometimes be useful okay
all that can sometimes be useful okay
this is now in pure c as we
expect these signatures are bothering me
expect these signatures are bothering me
like I don't know if these are actually
like I don't know if these are actually
calling back or not we'll have to check
calling back or not we'll have to check
this uh XP for player kill
how the hell is this calling back to
python I would love to know how the hell
python I would love to know how the hell
this is calling back to
this is calling back to
python Pi error
occurred what
How can there be a pi error on a c
function that shouldn't be possible
function that shouldn't be possible
Right
where did it
go if
unlikely it's like whenever you return
unlikely it's like whenever you return
an integer it decides that negative one
an integer it decides that negative one
could be an error
could be an error
code right
wait but isn't this short circuiting
wait but isn't this short circuiting
wait hold on
wait hold on
I think that this is actually okay isn't
I think that this is actually okay isn't
it because this is a compile time
it because this is a compile time
check oh oh actually wait this is cool
check oh oh actually wait this is cool
okay I actually learned something here
okay I actually learned something here
so look at look at how this works so
so look at look at how this works so
this is the return value here this is
this is the return value here this is
the int this is the generated name for
the int this is the generated name for
this XP for player kill function I wrote
this XP for player kill function I wrote
right and then
right and then
semicolon and then it checks the return
semicolon and then it checks the return
type if
unlikely the value is equal to
unlikely the value is equal to
to1 and Pi error occurred this is the
to1 and Pi error occurred this is the
part that calls back to python this
part that calls back to python this
value can never be
value can never be
ne1 so this short
ne1 so this short
circuits this never gets called so this
circuits this never gets called so this
is actually in pure C because what this
is actually in pure C because what this
annotation is saying is hey you know it
annotation is saying is hey you know it
looks like there's a branch of the code
looks like there's a branch of the code
that could possibly return to python but
that could possibly return to python but
because this function is never going to
because this function is never going to
be
be
ne1 that means that it's never actually
ne1 that means that it's never actually
going to call back to python so this is
fast that's
cool now this one is actually a
cool now this one is actually a
legitimate calls back to python here so
legitimate calls back to python here so
we got to fix
this I don't know what's up with these
this I don't know what's up with these
casts but it looks it looks like there
casts but it looks it looks like there
are certain types of casts that just
are certain types of casts that just
like don't play
like don't play
nice uh cast Bine tightly to variables
nice uh cast Bine tightly to variables
right so I can just do like this without
parents I like it I like it looking like
parents I like it I like it looking like
that that looks good
so move this window so it doesn't cover
chat pure
C uh scan AOE is missing a return type
C uh scan AOE is missing a return type
that's actually a really big one I don't
that's actually a really big one I don't
know how I screwed that up
there we go
give it a return type
mhm
PC what happened
here pix Pi int as
here pix Pi int as
int
dope what line is this
this is no big
this is no big
deal what's The Interpreter you're using
deal what's The Interpreter you're using
to ID these python
to ID these python
calls
so no you're you're good just stream
so no you're you're good just stream
like you're going to miss random things
like you're going to miss random things
it's good so
it's good so
um the this is not an IDE feature this
um the this is not an IDE feature this
is a built-in scon
is a built-in scon
feature if you just compile with uh
feature if you just compile with uh
annotate equals true
annotate equals true
which I have in the setup.py file then
which I have in the setup.py file then
it generates for you every time you
it generates for you every time you
compile it generates you this HTML that
compile it generates you this HTML that
tells you where stuff calls back to
tells you where stuff calls back to
Python and it shows you the generated
Python and it shows you the generated
code as
code as
well so that's what's going on here so
well so that's what's going on here so
I'm just looking for places where it
I'm just looking for places where it
calls back to Python and then
calls back to Python and then
eliminating them and it's like it's a
eliminating them and it's like it's a
slow process but not that
slow process but not that
slow and then I'm just moving this file
slow and then I'm just moving this file
up to where it's mounted on my local
up to where it's mounted on my local
machine so I can look at
machine so I can look at
it so like here I just added a type
it so like here I just added a type
right I added this missing type I'll
right I added this missing type I'll
refresh the page in radius right and now
refresh the page in radius right and now
there's no there's no issue here so I'll
see reset is going to call back to
see reset is going to call back to
python obviously
python obviously
because uh it's a defa
because uh it's a defa
oo I don't actually like that I think
oo I don't actually like that I think
this should be a CP
death yeah this should be a CP
death because you call this internally
death because you call this internally
as well
right actually let me
right actually let me
think yeah this CP
death and then for step step is in pure
death and then for step step is in pure
C
C
this path is
this path is
not wow that's incredibly helpful work
not wow that's incredibly helpful work
has pushed me to start using syon put it
has pushed me to start using syon put it
off for too long I mean scon is really
off for too long I mean scon is really
awesome I mean it's
awesome I mean it's
not the annoying thing with scon is that
not the annoying thing with scon is that
there are a few rough edges because it's
there are a few rough edges because it's
like it's not as big of a project as
like it's not as big of a project as
rust is for instance but it has it has
rust is for instance but it has it has
like such nice integration with python
like such nice integration with python
and it's so good for so many things that
and it's so good for so many things that
you almost can't not use it
um yeah it's just it's really nice for a
um yeah it's just it's really nice for a
lot of
lot of
stuff there's a bit of a learning curve
stuff there's a bit of a learning curve
there's like a bit of annoyingness with
there's like a bit of annoyingness with
the debugging of it I wish I had a
the debugging of it I wish I had a
little bit better like a few better
little bit better like a few better
tools with it but it is quite
nice and it's like it's if you're a comp
nice and it's like it's if you're a comp
competent programmer already maybe you
competent programmer already maybe you
don't have a ton of AI experience maybe
don't have a ton of AI experience maybe
you do but if you're just like a
you do but if you're just like a
competent engineer it's pretty easy to
competent engineer it's pretty easy to
just start building uh really really
just start building uh really really
fast simulations in scon and if you want
fast simulations in scon and if you want
to get into like RL stuff more that's a
to get into like RL stuff more that's a
huge way to contribute is if you just
huge way to contribute is if you just
like build some cool simulators that are
like build some cool simulators that are
Ultra fast and you know you submit them
Ultra fast and you know you submit them
to puffer like that's I mean that's
to puffer like that's I mean that's
driving the future of RL right there we
driving the future of RL right there we
have no good simulators right now that's
have no good simulators right now that's
that's why I've been building
them everybody says like oh we already
them everybody says like oh we already
have so many environments we already
have so many environments we already
have so many environments why do we need
have so many environments why do we need
more well because they're all slow right
simulator so slow looking at V would be
simulator so slow looking at V would be
better your simulator puffer has the
better your simulator puffer has the
best vectorization in existence by a
best vectorization in existence by a
huge margin um for like arbitrary M's so
huge margin um for like arbitrary M's so
you can do
you can do
both you can write this thing and then
both you can write this thing and then
you have a oneline modification like a
you have a oneline modification like a
oneline wrapper and then you can have it
oneline wrapper and then you can have it
work with puffers
factorization there's technically it's a
factorization there's technically it's a
little bit more annoying but there's an
little bit more annoying but there's an
advanced API as well that I use for my
advanced API as well that I use for my
Sims that like bypasses a bunch of the
Sims that like bypasses a bunch of the
like gymnasium petting zoo API
like gymnasium petting zoo API
and makes it even faster from there
well that's less slow now
well that's less slow now
right
right
cool um only thing I want to know is
cool um only thing I want to know is
whether or not all these headers here
whether or not all these headers here
are actually calling back to see or not
I figure that out
man so this adds a trace
back why does this one have a trace back
back why does this one have a trace back
right I got profile
right I got profile
false function L1 error
I really would like to know what these
I really would like to know what these
Trace backs
Trace backs
are and whether they're slowing me
are and whether they're slowing me
down pix add Trace
down pix add Trace
back on to C def with everything typed
I think this is just the annotate
I think this is just the annotate
overhead
right like these all look the
same this one we already went through is
same this one we already went through is
not a real so we know that there can be
spous so yeah this thing should be
spous so yeah this thing should be
running pure C let's do a little
running pure C let's do a little
benchmarking
let's recompile with uh well let's
let's recompile with uh well let's
actually see if that makes a difference
actually see if that makes a difference
if I do it with annotate on or
if I do it with annotate on or
off so we do could not broadcast
off so we do could not broadcast
wait a shape
wait a shape
40 it's annoying
what the heck is wrong with
this could not
broadcast into shape
why are there
40 oh numm is four I guess
oops I forgot to pull that modification
okay so this is 200,000 which is way
okay so this is 200,000 which is way
slower than
expected let's see if the annotate
expected let's see if the annotate
messes with
it you have to change the file just just
it you have to change the file just just
so it
so it
recompiles I don't know we'll do
this should be faster than 200k quite a
this should be faster than 200k quite a
lot
that's really
weird was very
weird was very
weird so uh I guess we got to do
weird so uh I guess we got to do
profiling
then let me
then let me
see let me make sure we're not missing
see let me make sure we're not missing
anything
10m
well that's
well that's
weird why is it suddenly faster
right I believe this is also eight or
right I believe this is also eight or
nine right nine valid actions Maybe
I set the device to
I set the device to
CPU so I don't know why it's trying to
CPU so I don't know why it's trying to
use
use
Cuda I don't know if you sent another
Cuda I don't know if you sent another
message but I don't know what you mean
message but I don't know what you mean
this is out of
context all right let's do some
context all right let's do some
profiling here let's see what it trying
profiling here let's see what it trying
to
do message
do message
disappeared now reset the first
one run this with C profile right
yeah let let's do
this it might be Auto sensoring links if
this it might be Auto sensoring links if
you're putting links in I don't know
you're putting links in I don't know
what what the default you YouTube
what what the default you YouTube
settings
are e
okay that's a lot of
okay that's a lot of
stuff
um this profile
run
wait C profile.
run huh
sort
key try this
this
this
is stats
is stats
STP think like you just do this maybe
okay so this now gives
okay so this now gives
us timings
this gives us some very weird
timings one second I got to go get
timings one second I got to go get
something I feel like God awful one sec
okay I think message got removed because
okay I think message got removed because
I pasted an error
I pasted an error
trying to set up puffer lib on my
trying to set up puffer lib on my
MacBook clone the
MacBook clone the
repo and installed the
repo and installed the
dependencies I set the device to
dependencies I set the device to
CPU I don't know why it's trying to use
CPU I don't know why it's trying to use
Cuda let me check that for you real
Cuda let me check that for you real
quick uh what's a really simple m
some reason I can't
some reason I can't
WR that's really
funny
weird let's do it
huh so I see the device CPU there not
huh so I see the device CPU there not
getting accounted for hold
on yeah that's weird let me fix that for
on yeah that's weird let me fix that for
you
see where it's overwriting this thing
CPU
let me see where it's leaking
Cuda e
let me see if this does
it I think it might just be the
monitoring no I still see GPU
monitoring no I still see GPU
utilization that's weird
I could just do Cuda here Cuda
visible
none okay that works
it's really weird I wonder why it's
it's really weird I wonder why it's
like I see the Cuda utilization as
well yeah it's not using it for learning
what happens if you do cud divisible
what happens if you do cud divisible
devices equals
none for
maybe the thing you fixed in
maybe the thing you fixed in
CLI that probably will
CLI that probably will
hold
on here oops get pull
okay here you can pull Dev and tell me
okay here you can pull Dev and tell me
if that
works e
and let me know if that fixes it Noah I
and let me know if that fixes it Noah I
think it probably
think it probably
should
should
um what were we doing right we were
um what were we doing right we were
trying to debug
trying to debug
the utilization here
utilization really didn't make any sense
right oh wait no because we I I remember
right oh wait no because we I I remember
so yeah it kind of does then um
so the thing is we need to have all
so the thing is we need to have all
these function that fixes it
these function that fixes it
great well there you go fixed in
great well there you go fixed in
Dev no problem I love being able to just
Dev no problem I love being able to just
fix stuff live
as you can probably tell I'm kind of out
as you can probably tell I'm kind of out
of it today my
of it today my
um like a bunch of stuff just really
um like a bunch of stuff just really
freaking hurts from the run yesterday so
freaking hurts from the run yesterday so
I'm trying to just make a little bit of
I'm trying to just make a little bit of
progress here and there today and
progress here and there today and
hopefully we'll be back tomorrow with
hopefully we'll be back tomorrow with
like
like
way way better Dev
but we can to get a little perf Dev done
but we can to get a little perf Dev done
today I
today I
think
um I'm trying to think which of these
um I'm trying to think which of these
functions I want
functions I want
to to remove because what's happening at
to to remove because what's happening at
the moment
the moment
is I've have all these like um profile
is I've have all these like um profile
false decorators on
false decorators on
functions and by doing that
um by having these like profile Falls
um by having these like profile Falls
I'm like not actually seeing where
I'm like not actually seeing where
computes being used because it's rolling
computes being used because it's rolling
it into the
step interesting that the creep Ai and
step interesting that the creep Ai and
the neutral AI aren't up there though
the neutral AI aren't up there though
does that make
sense doesn't make sense to me
so this numpy core record is really
so this numpy core record is really
slow and what other functions are
there this profile graph does not Mak
there this profile graph does not Mak
sense to
me oh this is because it's not actually
me oh this is because it's not actually
getting compiled with profiling on right
getting compiled with profiling on right
let me
see compiler directives profile equal
see compiler directives profile equal
through
oh I see half what this means is half of
oh I see half what this means is half of
the performance is being lost to numpy
the performance is being lost to numpy
record calls okay another
record calls okay another
that would do it
much better
so now we see that the
what's this numpy core records get
what's this numpy core records get
attribute thing where the heck is this
attribute thing where the heck is this
being called
from it's got to be being called for
from it's got to be being called for
MOBA step
right and all these other record
right and all these other record
functions that are being called that are
functions that are being called that are
slow yeah
and this has to just be the logging
and this has to just be the logging
right
do I need to do this this like self buff
do I need to do this this like self buff
rewards I don't need to do this do I
well I should put the reward somewhere
[Music]
get
reward Dot
okay just do
okay just do
this then have it be in
C I bet this is the slow bit right here
right e
yeah does this do any
better that should cut out a whole bunch
better that should cut out a whole bunch
of numpy
processing way better
processing way better
immediately immediately way better
we still have a fair bit of time being
we still have a fair bit of time being
wasted on this record processing
though night thanks for dropping
by oh what is that greeting or a goodbye
by oh what is that greeting or a goodbye
it's going well uh well enough at least
it's going well uh well enough at least
pretty tired today but we're making a
pretty tired today but we're making a
little bit of progress we've got some
little bit of progress we've got some
cool sweep experiments running and I
cool sweep experiments running and I
posted a couple cool
posted a couple cool
articles carbs does really
well how's this weep
well how's this weep
going I started with good night all
going I started with good night all
right funny
right funny
enough sweep doesn't seem to be doing
enough sweep doesn't seem to be doing
much is
it definitely something weird
it definitely something weird
here probably something with the EnV
here probably something with the EnV
what about the other
what about the other
one we did start a different
sweep oh yeah there we
sweep oh yeah there we
go yeah carbs is definitely working
you can see right here this one's
you can see right here this one's
already at 19
reward so carbs is working it's whatever
reward so carbs is working it's whatever
we're doing in the Moa that's
we're doing in the Moa that's
not we'll figure that out let's do a
not we'll figure that out let's do a
little bit more perf optimization first
little bit more perf optimization first
it'll be so much easier if it's just
it'll be so much easier if it's just
fast um
how often do we want to report
how often do we want to report
performance
that should just be fast if we do this
right yeah it's way
better just implemented random Force
better just implemented random Force
without using any library now I'm going
without using any library now I'm going
to learn some open
to learn some open
CV any advice on starting to
CV any advice on starting to
CV open CV is like the most cursed
CV open CV is like the most cursed
Library out there
Library out there
man open CV is a pain in the ass
man open CV is a pain in the ass
Library I mean it depends on what you're
Library I mean it depends on what you're
doing if you're trying to learn like
doing if you're trying to learn like
classic computer vision yeah that's what
classic computer vision yeah that's what
you use if you're trying to learn more
you use if you're trying to learn more
modern stuff I would
modern stuff I would
like I'd spend more not time on like
like I'd spend more not time on like
neuronet architectures and
neuronet architectures and
such cuz open TV is just a pain in the
such cuz open TV is just a pain in the
ass
Library go like Implement an amness
Library go like Implement an amness
classifier if you haven't done that
wait what's this SPS on this
wait what's this SPS on this
for 40
for 40
wait
wait
what how fast is this hold
on if I just turn this off
cannot assign type float to
reward right
I see okay I see how to do
I see okay I see how to do
this
um
e
e e
probably this works
right I gave it get the buffer
right I gave it get the buffer
[Music]
[Music]
rewards and mean s up buff rewards yeah
rewards and mean s up buff rewards yeah
let's see this does this do
anything the goal here is to just get as
anything the goal here is to just get as
much of the
much of the
numi processing that's in Python in DC
numi processing that's in Python in DC
or just like less frequent as possible
or just like less frequent as possible
because it's really slow and
bad e
from
from
file wait how the heck is from file
file wait how the heck is from file
being
called oh that's bad hold
on we
wa shud how do I do
this I guess global
do this do
it I just want to not time the init in
it I just want to not time the init in
this the init is
this the init is
slow doesn't
matter I'm still seeing functions that I
matter I'm still seeing functions that I
don't like to see
here put actions here as
well yeah we'll just do this for now
well yeah we'll just do this for now
whatever
okay that is substantially
better where's the C function
I can't see C MOA
step but I can see that there is
step but I can see that there is
basically no overhead from python
basically no overhead from python
because all the python functions are now
because all the python functions are now
uh
uh
negligible so that's perfect
and now if I run this without
and now if I run this without
um if I just like run
this what do we get
up to
300K that still seems
300K that still seems
slow only
300K why would it be only 300K didn't we
300K why would it be only 300K didn't we
have it at 500 or we had it at 600
have it at 500 or we had it at 600
before right
before right
something must have
changed possible this is too many
changed possible this is too many
environments does it change if I do like
environments does it change if I do like
environments that different
that is
faster which is
odd should not be that big of a
difference one
difference one
environment I think it's still slow with
environment I think it's still slow with
one we'll
see I had this running at a million
see I had this running at a million
before which was like 5 600k on this
before which was like 5 600k on this
machine
300K
H I'm not
H I'm not
sure I think we're going to have to do
sure I think we're going to have to do
some profiling back into the uh the C
some profiling back into the uh the C
code
code
then yeah
what time is
what time is
it 1:35 I'll do this another 25 minutes
it 1:35 I'll do this another 25 minutes
or so I want to give myself a bit of
or so I want to give myself a bit of
time before my meeting to like I don't
time before my meeting to like I don't
know figure out what's wrong because I
know figure out what's wrong because I
just have not felt great all day um
okay so we build this now with profiling
again maybe we can see where we're
again maybe we can see where we're
losing
losing
out for
h
so oh I see message where are you live
so oh I see message where are you live
I'm in paloalto for the time
being it looks like the main thing that
being it looks like the main thing that
happened since the last time I profiled
happened since the last time I profiled
this is that uh compute observations
this is that uh compute observations
just got way slower
right let me do this with like 20
M's it's like a good midpoint
oh jeez
wait what what happened
wait what what happened
here the time spent
here the time spent
in Step went way
in Step went way
down
down
how
wait 9 seconds what was it before
oh no that's
right this is good
actually it's all the AI the creep
actually it's all the AI the creep
neutral Ai and then the compute
neutral Ai and then the compute
observations it looks like right
observations it looks like right
let me see if I add these
up well no because there's also this so
up well no because there's also this so
I guess that's scan AOE or
something there's a lot of stuff to
something there's a lot of stuff to
potentially optimize
here it's a good good spread hey div
here it's a good good spread hey div
welcome
trying to figure out how to perf
trying to figure out how to perf
optimize this thing I have this running
optimize this thing I have this running
at 1.3 million steps per second and now
at 1.3 million steps per second and now
it's down to probably half
it's down to probably half
that what would you recommend after
that what would you recommend after
making an memus classifier for vision um
making an memus classifier for vision um
you kind of just want to do a few small
you kind of just want to do a few small
projects I mean it depends what you're
projects I mean it depends what you're
trying to do right like if you're trying
trying to do right like if you're trying
to get into research or more science
to get into research or more science
side like you do a couple of the classic
side like you do a couple of the classic
basic projects to get familiar with
basic projects to get familiar with
stuff and then you start like either
stuff and then you start like either
trying to reimplement papers or do like
trying to reimplement papers or do like
really narrowly scoped basic research
really narrowly scoped basic research
while reading papers like something like
while reading papers like something like
that I mean there's no there's no real
that I mean there's no there's no real
trick to getting into research other
trick to getting into research other
than doing
it and you're going to be woefully
it and you're going to be woefully
inefficient at first with your time
inefficient at first with your time
because like everything's going to be
because like everything's going to be
confusing but you know you just put in
confusing but you know you just put in
the time and you get better and you get
the time and you get better and you get
faster and you know more effici that
faster and you know more effici that
stuff that's literally the trick that
stuff that's literally the trick that
that there's no trick that's it
I'm trying to think what I can optimize
I'm trying to think what I can optimize
here
so half the time is being spent in
so half the time is being spent in
Step don't you think too much blue color
Step don't you think too much blue color
scheme is bad for your
eyes
um I think the blue light thing is
um I think the blue light thing is
probably
probably
frankly I think that's like a scheme to
frankly I think that's like a scheme to
sell those dumb glasses
want to be in research but I'm thinking
want to be in research but I'm thinking
about what if I
about what if I
cannot get a
job it's easier to go it's easier maybe
job it's easier to go it's easier maybe
to do like applied AI stuff for
to do like applied AI stuff for
sure I mean applied AI roles are
sure I mean applied AI roles are
basically well a lot of the applied AI
basically well a lot of the applied AI
roles are basically like you're a
roles are basically like you're a
software engineer and then you know some
software engineer and then you know some
AI
I'm trying to think where all the
I'm trying to think where all the
computes go in
computes go in
here so I should just look at
it I had to look at like what functions
it I had to look at like what functions
I've turned
I've turned
off
oops that's
fine nice to have Li support the MPS
fine nice to have Li support the MPS
torch back
torch back
end in CLI rendering for gpus on
end in CLI rendering for gpus on
MacBooks maybe I'll open it yeah go if
MacBooks maybe I'll open it yeah go if
you open a PR and it works I'll merge
it just make sure you PR it to Dev not
it just make sure you PR it to Dev not
10 not sure which way to go yet thank
10 not sure which way to go yet thank
you though yeah it takes time I mean I
you though yeah it takes time I mean I
started this stuff like literally when I
started this stuff like literally when I
was 16 and I mean it took me back then
was 16 and I mean it took me back then
it took me like a thousand hours to take
it took me like a thousand hours to take
to do what would take me like 10 hours
to do what would take me like 10 hours
now but that's how you
learn move to is not
learn move to is not
profiled move towards is not
profiled move towards is not
profiled basic attack is not profiled
profiled basic attack is not profiled
scan AOE is not profiled
I guess this whole Loop
I guess this whole Loop
isn't
profiled I'm kind of wondering if it
profiled I'm kind of wondering if it
makes sense to just put these blocks of
makes sense to just put these blocks of
code into separate functions for the
code into separate functions for the
purpose of profiling
purpose of profiling
right like if I just put these into
right like if I just put these into
separate code blocks it would be way
separate code blocks it would be way
easier to tell I it's kind of dumb to
easier to tell I it's kind of dumb to
have to do
that but it's really nice for the
that but it's really nice for the
profiling
right only got another 15 minutes or so
right only got another 15 minutes or so
here I can do
that c n
spawn entity neutral
that's
fine that creeps
leaving to work on Ms thank good yeah go
leaving to work on Ms thank good yeah go
ahead good
luck idx
luck idx
Lane entity
Lane entity
creep all right so this will be nice
creep all right so this will be nice
because we'll actually be able to get
because we'll actually be able to get
way better profiling
way better profiling
data I hate that I have to like break up
data I hate that I have to like break up
the code just for this reason because I
the code just for this reason because I
would normally never do
would normally never do
this like I generally will not make
this like I generally will not make
functions like for things that I'm going
functions like for things that I'm going
to use once like this I generally won't
to use once like this I generally won't
make
make
functions but for profiling it's kind of
functions but for profiling it's kind of
nice uh so you have tower idx
nice uh so you have tower idx
Tower and that's
it and then we do step players I guess
discovered your research I'll watch it
discovered your research I'll watch it
tomorrow pretty much pretty
tomorrow pretty much pretty
interesting uh depending on where you're
interesting uh depending on where you're
coming in from there's the thesis video
coming in from there's the thesis video
which is the big one on YouTube and then
which is the big one on YouTube and then
I also have I've got like a deep dive on
I also have I've got like a deep dive on
the tech of puffer 10 that's like more
the tech of puffer 10 that's like more
Technical and then I've got a bunch of
Technical and then I've got a bunch of
streams on like building stuff but yeah
streams on like building stuff but yeah
thank
you I'm going to be making more videos
you I'm going to be making more videos
as well
as well
I to start doing that for
sure and most of these variables are got
sure and most of these variables are got
to go over there
to go over there
right
right
yeah pretty much all this crap goes over
yeah pretty much all this crap goes over
there doesn't it
there doesn't it
step
step
[Music]
[Music]
players if I get this working real quick
players if I get this working real quick
though this will be nice for um well
though this will be nice for um well
this will be nice for figuring some
this will be nice for figuring some
stuff
out tune in again tomorrow great stuff
out tune in again tomorrow great stuff
we'll try the simple vectorization of my
we'll try the simple vectorization of my
M together with puffer syon stuff is a
M together with puffer syon stuff is a
deep rabbit hole but a great one yeah uh
deep rabbit hole but a great one yeah uh
I would just recommend like puffer we
I would just recommend like puffer we
try to make it really easy you just wrap
try to make it really easy you just wrap
your environment in if it's single agent
your environment in if it's single agent
gymnasium puff r it's multi-agent you do
gymnasium puff r it's multi-agent you do
um uh petting Zu puffer EnV and then you
um uh petting Zu puffer EnV and then you
just call like VEC make with that rapper
just call like VEC make with that rapper
and you're
and you're
good there plenty of examples and puffer
good there plenty of examples and puffer
with
with
that our VEC is usually the fastest by a
that our VEC is usually the fastest by a
wide margin
anything is going oh jeez if you're
anything is going oh jeez if you're
using rib that's the worst library in
using rib that's the worst library in
existence I fought that library for
existence I fought that library for
years I tried to contribute to that lot
years I tried to contribute to that lot
yeah that's going to be God awful yeah
yeah that's going to be God awful yeah
hit me up then in that case ly because
hit me up then in that case ly because
that's you're just not you're going to
that's you're just not you're going to
straight up just not have a good time
straight up just not have a good time
with
with
that puffer Li will seem like magic
that puffer Li will seem like magic
after that because it's like most of the
after that because it's like most of the
stuff that rib does but
stuff that rib does but
simple great to get spun up but time to
simple great to get spun up but time to
move
move
on
on
it's the thing is like the problem with
it's the thing is like the problem with
the with arib is like they're trying to
the with arib is like they're trying to
productionize a field that is
productionize a field that is
fundamentally finicky and requires you
fundamentally finicky and requires you
to be able to edit every level of the
to be able to edit every level of the
stack and they're like blackboxing every
stack and they're like blackboxing every
single level of the stack and then on
single level of the stack and then on
top of that they're like it the code is
top of that they're like it the code is
their rlb itself is just super buggy and
their rlb itself is just super buggy and
has bad error messages so you're just
has bad error messages so you're just
not going to have a good
time base Ray is really
awesome they've got five different AP
awesome they've got five different AP
yeah I've I've tried to help them
yeah I've I've tried to help them
several times I actually like
several times I actually like
I designed a couple of the things for
I designed a couple of the things for
them like they asked me for feedback on
them like they asked me for feedback on
their debugger and I gave them feedback
their debugger and I gave them feedback
on their debugger and said like hey this
on their debugger and said like hey this
doesn't make any sense just make remote
doesn't make any sense just make remote
pdb like pdb API but make it work on
pdb like pdb API but make it work on
remote processes and they didn't it was
remote processes and they didn't it was
actually really good I've tried with rib
actually really good I've tried with rib
several times I've like given them a
several times I've like given them a
bunch of feedback on stuff but it's just
bunch of feedback on stuff but it's just
like it's too much big engineering style
like it's too much big engineering style
put into reinforcement learning is the
put into reinforcement learning is the
problem and like you know I met Robert
problem and like you know I met Robert
at open AI he's a good guy right like I
at open AI he's a good guy right like I
like I respect all the stuff they're
like I respect all the stuff they're
trying to do and like I actually I spent
trying to do and like I actually I spent
like a couple years advocating rlb to
like a couple years advocating rlb to
everyone because I saw I thought it was
everyone because I saw I thought it was
going to be up and coming I thought it
going to be up and coming I thought it
was going to solve everything but I
was going to solve everything but I
really can't recommend it these days
really can't recommend it these days
it's just
it's just
rough and like I know a few of the devs
rough and like I know a few of the devs
on the team and it's like they're good
on the team and it's like they're good
it's just it like the thing that they're
it's just it like the thing that they're
trying to do fundamentally like rl's not
trying to do fundamentally like rl's not
ready
ready
for which is why I'm building puffer the
for which is why I'm building puffer the
way I'm building it right everything's
way I'm building it right everything's
compact it's all white box you can go
compact it's all white box you can go
open edit and like change stuff at any
open edit and like change stuff at any
level of the stack it's really simple
level of the stack it's really simple
that's what I'm trying to
build uh I probably need to run annotate
build uh I probably need to run annotate
on this don't
I after encounter in clean arale in your
I after encounter in clean arale in your
research being coming a convert I
research being coming a convert I
honestly think clean RL is the best
honestly think clean RL is the best
contribution to reinforcement learning
contribution to reinforcement learning
by a single individual like ever cost is
by a single individual like ever cost is
just
awesome and it's so funny because you
awesome and it's so funny because you
cannot explain clean RL to like a Fang
cannot explain clean RL to like a Fang
engineer they think it's the dumbest
engineer they think it's the dumbest
thing ever like it's just it's so hard
thing ever like it's just it's so hard
to shift the Paradigm and be like look
to shift the Paradigm and be like look
you can't build stuff the way you're
you can't build stuff the way you're
used to building it cuz this is an
used to building it cuz this is an
emerging scientific field you can't just
emerging scientific field you can't just
wrap every little feature into a nice
wrap every little feature into a nice
parcel and then just like blackbox it
parcel and then just like blackbox it
because need to edit every single layer
because need to edit every single layer
of the stack constantly because like we
of the stack constantly because like we
don't understand where and why stuff is
don't understand where and why stuff is
breaking so the goal is to keep
breaking so the goal is to keep
everything Compact and easy to edit not
everything Compact and easy to edit not
like you know uh like out of sight out
like you know uh like out of sight out
of
mind it's really hard to explain that as
mind it's really hard to explain that as
well
and like basically the reaction you get
and like basically the reaction you get
from almost every single one of them is
from almost every single one of them is
like oh ho I bet the other Fang
like oh ho I bet the other Fang
Engineers that tried this just weren't
Engineers that tried this just weren't
good enough and it's like no it's that's
good enough and it's like no it's that's
not the problem like kind of yes but
not the problem like kind of yes but
it's fundamentally the wrong approach
it's fundamentally the wrong approach
for this
time did I just did I just one shot
time did I just did I just one shot
this yeah I think I just one shot this
this yeah I think I just one shot this
all right that's
nice
nice
Segal well I one shot getting it to
Segal well I one shot getting it to
Segal so good on me I guess
probably just need to put the checks on
probably just need to put the checks on
right
huh now it's not seg
faulting going be really
slow I don't know why it doesn't seg
fault turn this one to false
we'll see how this sweep does how's the
we'll see how this sweep does how's the
other sweep doing
oh this is just failing is what's
oh this is just failing is what's
happening yeah yeah this is just
happening yeah yeah this is just
failing I can tell there too many jobs
failing I can tell there too many jobs
here okay so I'll have to fix that at
here okay so I'll have to fix that at
some point here
soon
oops what time is it okay it's it's 157
oops what time is it okay it's it's 157
I got to go get ready for another
I got to go get ready for another
meeting and I got to fix a couple of
meeting and I got to fix a couple of
things um I'm probably going to be back
things um I'm probably going to be back
in a few hours do another like a short
in a few hours do another like a short
evening stream if I'm able to fix some
evening stream if I'm able to fix some
things uh and then I will like f finish
things uh and then I will like f finish
the performance
the performance
optimization uh debug all the sweep
optimization uh debug all the sweep
stuff right and uh a few other things
stuff right and uh a few other things
from there now if you're new to this
from there now if you're new to this
place if you're new to the stream uh all
place if you're new to the stream uh all
this is open source it's all in the dev
this is open source it's all in the dev
branch of puffer lib right now if you
branch of puffer lib right now if you
want to help me out a whole bunch just
want to help me out a whole bunch just
go ahead and star it helps me a ton and
go ahead and star it helps me a ton and
uh yeah otherwise I'll be back fairly
uh yeah otherwise I'll be back fairly
soon so see you all
