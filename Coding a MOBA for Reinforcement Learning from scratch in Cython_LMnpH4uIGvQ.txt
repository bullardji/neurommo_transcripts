Kind: captions
Language: en
fun stuff to do
today takes a second for all the streams
today takes a second for all the streams
to go
to go
up let's start with uh this crazy carb
up let's start with uh this crazy carb
sweep and then we'll start coding on the
sweep and then we'll start coding on the
mooba so I ran this
mooba so I ran this
overnight it's still actually running
overnight it's still actually running
and I'm going to let it keep running
and I'm going to let it keep running
while I uh I Dev on this a little bit
while I uh I Dev on this a little bit
because this did ridiculously well
because this did ridiculously well
it's funny that there's still some
it's funny that there's still some
trials that uh don't perform very well I
trials that uh don't perform very well I
think it's a little
think it's a little
noisy but this is just crushed previous
noisy but this is just crushed previous
baselines on this environment so this is
baselines on this environment so this is
awesome to
see posted this as well um the main
see posted this as well um the main
thing is that the graphs actually work
thing is that the graphs actually work
and we have some super high performance
and we have some super high performance
environments to test stuff on let me
environments to test stuff on let me
real quick tweet the stream out from
real quick tweet the stream out from
this and we'll just go straight into um
this and we'll just go straight into um
we'll go straight into uh coding on this
we'll go straight into uh coding on this
stuff so let's just
stuff so let's just
do
this br
okay that sounds
okay that sounds
good
good
perfect so let's go to uh write to
perfect so let's go to uh write to
code where we left this off
code where we left this off
yesterday we got right we got like the
yesterday we got right we got like the
basic Tower AI the really really basic
basic Tower AI the really really basic
Jank Tower AI to work we got agents that
Jank Tower AI to work we got agents that
can run around they can kind of fight
can run around they can kind of fight
each other a little bit
um oh this is fine this is just the I I
um oh this is fine this is just the I I
had a gift saving thing so yeah it it's
had a gift saving thing so yeah it it's
uh it works all fine so there's a lot of
uh it works all fine so there's a lot of
stuff we can do today I
stuff we can do today I
think I want to push the logic on this
think I want to push the logic on this
until it gets kind of
until it gets kind of
complicated right a little too
complicated right a little too
complicated to maintain Maybe
complicated to maintain Maybe
uh and then we will go from there uh
uh and then we will go from there uh
once the logic gets a little too
once the logic gets a little too
complicated to maintain we might switch
complicated to maintain we might switch
over to doing some cool render stuff all
over to doing some cool render stuff all
of the render stuff I've done before has
of the render stuff I've done before has
been tile based I don't know if I want
been tile based I don't know if I want
to make this tile based or not um yeah
to make this tile based or not um yeah
I'll have to think about that for
sure I don't want to commit too much to
sure I don't want to commit too much to
the render though because that takes
the render though because that takes
that's going to take longer so let's get
that's going to take longer so let's get
like some of the simulation stuff going
like some of the simulation stuff going
first and perfect I can tell the stream
first and perfect I can tell the stream
is up and is H starting to circulate on
is up and is H starting to circulate on
X at the very least the other two take a
X at the very least the other two take a
little longer to warm
up so let me just remind myself of where
up so let me just remind myself of where
we left
we left
off uh puffer lib environments ocean
off uh puffer lib environments ocean
MOA I think we had a whole bunch of
MOA I think we had a whole bunch of
really garbage uh scyon
code yeah I wonder who wrote this mess
right and we had basic attacks we had
right and we had basic attacks we had
basic damage uh the attacks had to
basic damage uh the attacks had to
be just like next to next to the agent
be just like next to next to the agent
so that's a big limitation we don't have
so that's a big limitation we don't have
ranged attack abilities on this and
ranged attack abilities on this and
ranged attack abilities are actually
ranged attack abilities are actually
really obnoxious to do uh with grids
really obnoxious to do uh with grids
so there's there's definitely that to
so there's there's definitely that to
think about
think about
um we don't have a direction that the
um we don't have a direction that the
player is facing we're really missing
player is facing we're really missing
quite a bit
quite a bit
here uh and then there's also no ability
here uh and then there's also no ability
to attack
to attack
Towers
Towers
so in something like this usually the
so in something like this usually the
most important thing is getting like a
most important thing is getting like a
smooth uh player controller and like the
smooth uh player controller and like the
smooth basics down uh however I think
smooth basics down uh however I think
that getting that to work is going to
that getting that to work is going to
require some form of better renderer
require some form of better renderer
than we have now so we might put that
than we have now so we might put that
off just a little bit until we at least
off just a little bit until we at least
get an idea for where we're going to go
get an idea for where we're going to go
with the
with the
game um I think I want to
start could make the towers attackable
start could make the towers attackable
right uh there's some just general code
right uh there's some just general code
hygiene that definitely needs to be
done but really everything is going to
done but really everything is going to
be limited by the player the player
be limited by the player the player
controller and
controller and
viz so maybe we will actually start with
viz so maybe we will actually start with
that you
that you
know maybe we will actually just start
know maybe we will actually just start
with
with
that yeah we'll make the agents a little
that yeah we'll make the agents a little
bit
bit
faster um yeah we'll make the agents a
faster um yeah we'll make the agents a
little bit faster and we'll try to come
little bit faster and we'll try to come
up with a little bit of a render
up with a little bit of a render
controller type thing
controller type thing
that seems
reasonable
so let's get the human controller to
so let's get the human controller to
work then in order to do
that Ender mode
that Ender mode
human we'll probably have to fix a few
human we'll probably have to fix a few
things
things
right yep
uh okay that's just an API thing from
uh okay that's just an API thing from
the uh the new we did some uh we made
the uh the new we did some uh we made
some
some
changes to the configuration system so
changes to the configuration system so
we're going to have a couple small
we're going to have a couple small
properties to fix in order to make all
properties to fix in order to make all
this work but then we'll actually this
this work but then we'll actually this
will be fun actually because that sort
will be fun actually because that sort
of tight development Loop that you get
of tight development Loop that you get
when you have um you have a renderer and
when you have um you have a renderer and
you're just trying to make like a player
you're just trying to make like a player
work it's actually very nice and it's
work it's actually very nice and it's
very easy to debug so that should
very easy to debug so that should
actually be pretty interesting to watch
actually be pretty interesting to watch
and pretty informative and should result
and pretty informative and should result
in some good progress on this today so
in some good progress on this today so
yeah I actually do like that even though
yeah I actually do like that even though
I was a little hesitant at first because
I was a little hesitant at first because
it's going to take me a little bit to
it's going to take me a little bit to
get it set up but uh I think it's going
get it set up but uh I think it's going
to be a very very worthwhile investment
to be a very very worthwhile investment
and probably not all that hard as long
and probably not all that hard as long
as I don't like go try to write a whole
as I don't like go try to write a whole
renderer from scratch
let's also get this background stuff out
let's also get this background stuff out
of the way because it makes the chat
of the way because it makes the chat
hard to uh hard to read
hard to uh hard to read
right that's
right that's
good okay so now we just have to update
good okay so now we just have to update
the renderer for the uh the mooba since
the renderer for the uh the mooba since
this was borrowed from my grid
this was borrowed from my grid
continuous grid
continuous grid
project so we've
project so we've
got agent positions right so there's no
got agent positions right so there's no
uh there's no concept of agent positions
uh there's no concept of agent positions
but we do have self.
agents and then if we go to the client
agents and then if we go to the client
here client render function this will
here client render function this will
now just take
now just take
agents
agents
and we'll do uh main R
agents zero
agents zero
doy
andx that might already be enough we'll
see int object has no attribute
y uh okay that's weird we should have
y uh okay that's weird we should have
this should be structured
data oops
uh okay something's getting passed wrong
uh okay something's getting passed wrong
because the the agent should be a
because the the agent should be a
structured a structured data type
here grid agents actions
discretize and if I look at the render
discretize and if I look at the render
function we have grid agents actions
function we have grid agents actions
discretize so that actually looks
discretize so that actually looks
right um am I not passing the
right um am I not passing the
correct agents here if I look for self
correct agents here if I look for self
dot self. agents oh it's self. players
dot self. agents oh it's self. players
that's
why agents is a annoying API thing
why agents is a annoying API thing
that's why that
that's why that
exists welcome I am coding a small MOBA
exists welcome I am coding a small MOBA
think like League or DOTA uh from
think like League or DOTA uh from
scratch
scratch
for the purposes of use in reinforcement
for the purposes of use in reinforcement
learning training AI at very very high
learning training AI at very very high
speed this is brand new so uh there's
speed this is brand new so uh there's
not a ton going on here just yet I just
not a ton going on here just yet I just
started this yesterday but the hope is
started this yesterday but the hope is
that by the end of today the next seven
that by the end of today the next seven
hours or so I'm going to have a high
hours or so I'm going to have a high
perf engine that like resembles a mooba
perf engine that like resembles a mooba
that you can play and that you have the
that you can play and that you have the
agents wandering around and that runs it
agents wandering around and that runs it
like I don't know a million steps per
like I don't know a million steps per
second minimum something like that
yesterday went pretty well uh a little
yesterday went pretty well uh a little
bit confusing because you know there are
bit confusing because you know there are
a lot of early decisions to make in a
a lot of early decisions to make in a
project like this but it went well it
project like this but it went well it
went well
overall actions of zero could not okay
overall actions of zero could not okay
so this is
just do I have actions allocated
somewhere num Pi Zer num
somewhere num Pi Zer num
agents well this is not going to work
agents well this is not going to work
right this has to be numb agents like
right this has to be numb agents like
three because there are three different
three because there are three different
types of actions here
types of actions here
they're two different movement actions
right
right
oops could not
oops could not
broadcast uh okay so the action
broadcast uh okay so the action
space I probably didn't update the
space I probably didn't update the
action space
action space
right now the action space actually
right now the action space actually
looks
fine didn't put array from shape
fine didn't put array from shape
two into shape
two into shape
three maybe I'm returning it
three maybe I'm returning it
wrong that's probably it
wrong that's probably it
right yeah right here
so what we'll do
is uh I think the attack is just fine
right uh let me think how we do
this key up key
this key up key
down I guess the way that we have a
down I guess the way that we have a
attack specifi doesn't make it a sense
right
right
well for now we'll just give it a like a
well for now we'll just give it a like a
one or whatever for
attack not enough values to unpack right
attack not enough values to unpack right
because I forgot to delete
this yeah we're going to very quickly
this yeah we're going to very quickly
run into the limitations of the grid
run into the limitations of the grid
engine which is exactly why I wanted to
engine which is exactly why I wanted to
do this project
do this project
I wanted to do this project to see you
I wanted to do this project to see you
know what happens when you get M's that
know what happens when you get M's that
don't like easily represent as
grids shape
grids shape
base okay so something weird happened
base okay so something weird happened
here we'll
here we'll
figure oh no this is fine this is just
figure oh no this is fine this is just
the uh so this this does work we just
the uh so this this does work we just
have to render the agent I was
have to render the agent I was
controlling it I could tell when I was
controlling it I could tell when I was
pressing keys that it was responding
pressing keys that it was responding
correctly all we have to do is uh save
correctly all we have to do is uh save
it a little different so
it a little different so
let's just make this actually render for
let's just make this actually render for
a reasonable period of
a reasonable period of
time
time
and next we have to
and next we have to
see how we can draw the
agents what do I have it drawing
agents what do I have it drawing
here oh I have it drawing the
here oh I have it drawing the
puffer yeah yeah so if I just um
puffer yeah yeah so if I just um
if I just copy the asset from the grid
if I just copy the asset from the grid
continuous project that I was using
continuous project that I was using
puffer
puffer
chars I think it'll actually just
render there we
render there we
go look at
go look at
this I'm a little puffer red puffer blue
this I'm a little puffer red puffer blue
puffer DARS or Towers I
puffer DARS or Towers I
guess and you can explore this little uh
guess and you can explore this little uh
you know this manually painted MOBA map
you know this manually painted MOBA map
with three
with three
lanes I don't know what killed me oh the
lanes I don't know what killed me oh the
tower killed me right if I go next to it
tower killed me right if I go next to it
yeah yeah Tower kills you okay so that
yeah yeah Tower kills you okay so that
Tower kills me does this Tower kill me
Tower kills me does this Tower kill me
no this one doesn't cuz this is my tower
no this one doesn't cuz this is my tower
so I can go here this is the what is
so I can go here this is the what is
this this is the I think I might have
this this is the I think I might have
done him backwards
no okay somebody will have to tell me if
no okay somebody will have to tell me if
this is the safe lane or what on bottom
this is the safe lane or what on bottom
I forget I haven't played DOTA in a
I forget I haven't played DOTA in a
while but this is my tower this is their
while but this is my tower this is their
T1
T1
Tower okay I actually should take a
Tower okay I actually should take a
screeny of this because this is kind of
screeny of this because this is kind of
cool looking
um where's like a cool spot to take a
screeny maybe here
yeah puffer
mooba got it engagement Farm the
Twitter helps get the open source work
Twitter helps get the open source work
out
there what is
there what is
this I don't know what this
this I don't know what this
is okay
we'll just post that with no
we'll just post that with no
context oh yeah this guy's
context oh yeah this guy's
cool guy's the the new ding board higher
right
right
anyways so now we have a really basic
anyways so now we have a really basic
little renderer um but the render is not
little renderer um but the render is not
fully set up for the type of stuff that
fully set up for the type of stuff that
we we are going to want to do with it
we we are going to want to do with it
right it's kind of like this grid like
right it's kind of like this grid like
movement and it doesn't like the
movement and it doesn't like the
character doesn't rotate
character doesn't rotate
reasonably and the really big thing is
reasonably and the really big thing is
that mobas are usually controlled with
that mobas are usually controlled with
the mouse uh that is not something that
the mouse uh that is not something that
we're going to be able to do
we're going to be able to do
unfortunately we're not going to be able
unfortunately we're not going to be able
to
to
have
well okay we might be able to make it
well okay we might be able to make it
human controlled with a mouse but like
human controlled with a mouse but like
the agent isn't going to be able to move
the agent isn't going to be able to move
a mouse around that can't be the way
a mouse around that can't be the way
they interact
they interact
with with the
with with the
environment
environment
um we could
um we could
do we could do attack is at a fixed
do we could do attack is at a fixed
range in front of
range in front of
you right we could do that so you when
you right we could do that so you when
you attack it's like a fixed range in
you attack it's like a fixed range in
front of
front of
you that's not really quite satisfying
you that's not really quite satisfying
though
though
right we could do
targeting is
targeting is
hard this was the problem that I ran
hard this was the problem that I ran
into really early in the development of
into really early in the development of
neural MMO actually that made neural MMO
neural MMO actually that made neural MMO
really hard so let let me sort of break
really hard so let let me sort of break
down this problem for you um this thing
down this problem for you um this thing
is the source of all evil in
is the source of all evil in
reinforcement learning because there's
reinforcement learning because there's
not really a good way to have an agent
not really a good way to have an agent
specify Mouse actions in a in any sort
specify Mouse actions in a in any sort
of way that they could remotely learn
of way that they could remotely learn
and having Mouse actions assumes that
and having Mouse actions assumes that
you're rendering the environment
you're rendering the environment
that's really really slow we don't want
that's really really slow we don't want
to render the environment at training so
to render the environment at training so
what we do is we typically use some sort
what we do is we typically use some sort
of local state-based
of local state-based
observations right so like you can see
observations right so like you can see
nearby stuff uh but then if you want to
nearby stuff uh but then if you want to
just not attack something next to you
just not attack something next to you
you want to actually select one of the
you want to actually select one of the
things that you can see you start to
things that you can see you start to
need different and more complicated
need different and more complicated
neural network architectures in order to
neural network architectures in order to
accomplish that they're kind of like
accomplish that they're kind of like
entity based architectures where instead
entity based architectures where instead
of being able to see a grid around you
of being able to see a grid around you
you get like a set of different entities
you get like a set of different entities
or players that you can see now we could
or players that you can see now we could
build towards that direction and try to
build towards that direction and try to
come up with like a cool entity type
come up with like a cool entity type
engine um that's probably going to be
engine um that's probably going to be
the best thing ultimately it's just
the best thing ultimately it's just
really really
really really
hard I mean I'm kind of down though I'm
hard I mean I'm kind of down though I'm
kind of down to do this because of all
kind of down to do this because of all
the stuff I could do in reinforcement
the stuff I could do in reinforcement
learning it's probably the most high
learning it's probably the most high
impact thing
impact thing
to be doing and there's been one really
to be doing and there's been one really
good project on this so that I know it
good project on this so that I know it
can be done it's just very difficult and
can be done it's just very difficult and
that one specific project is not uh
that one specific project is not uh
built in a way that's very easy to use
built in a way that's very easy to use
with other stuff
so screw it let's do it right let's
so screw it let's do it right let's
let's just do it
let's just do it
um first thing we're going to need for
um first thing we're going to need for
this is we're going to need to just
this is we're going to need to just
restructure the attack action and the
restructure the attack action and the
format of
observations it can keep a grid for now
observations it can keep a grid for now
it can keep the grid as like a nav mesh
it can keep the grid as like a nav mesh
or whatever uh so that it can see
or whatever uh so that it can see
obstacles cuz we're still going to use
obstacles cuz we're still going to use
the grid for
the grid for
collisions but maybe we're just going to
collisions but maybe we're just going to
use the grid for
use the grid for
collisions and that might just be the
collisions and that might just be the
only thing we need the grid for maybe
only thing we need the grid for maybe
like AOE targeting or something like
like AOE targeting or something like
that
can take me a second to figure out how I
can take me a second to figure out how I
want to structure
want to structure
this um I think that the way that you do
this and I don't need it in the
this and I don't need it in the
observations just yet because we're not
observations just yet because we're not
going to be training models for a while
going to be training models for a while
I just need to do it in a way that will
I just need to do it in a way that will
be easy to put into the observations
be easy to put into the observations
eventually if that makes
eventually if that makes
sense so let's do
entity observations any particular
entity observations any particular
neural architecture you have in mind for
neural architecture you have in mind for
the vision problem oh this has been very
the vision problem oh this has been very
well explored uh mainly in my own work
well explored uh mainly in my own work
on neural MMO but also in Dota and stuff
on neural MMO but also in Dota and stuff
the thing that I want to avoid let me
the thing that I want to avoid let me
just show you how complicated this can
just show you how complicated this can
get if you don't think about it very
get if you don't think about it very
very
carefully this is what I am trying to
carefully this is what I am trying to
avoid
is it actually not possible to find yeah
is it actually not possible to find yeah
here it
here it
is this is what I'm trying to avoid this
is this is what I'm trying to avoid this
gigantic architecture is the open ai5
gigantic architecture is the open ai5
model it has less than 200 million
model it has less than 200 million
parameters but it just has so much
parameters but it just has so much
complexity it's just a beast to deal
complexity it's just a beast to deal
with something like
with something like
this so I'm trying to make it simpler
this so I'm trying to make it simpler
than this um you know if I if you come
than this um you know if I if you come
up with something that this complicated
up with something that this complicated
that's this complicated that makes the
that's this complicated that makes the
environment too hard for people to use
environment too hard for people to use
they just won't use it so we're kind of
they just won't use it so we're kind of
constrained on that uh on that factor
alone let me fix this I always forget
alone let me fix this I always forget
that I have to like drag windows so that
that I have to like drag windows so that
they don't cover where my camera
they don't cover where my camera
is I also don't like that my mouse goes
is I also don't like that my mouse goes
behind the camera but I can't really do
behind the camera but I can't really do
anything about
that okay some sort of multimodal
that okay some sort of multimodal
approach yeah you could say it's
approach yeah you could say it's
multimodal it's really just like I guess
multimodal it's really just like I guess
that is the definition of of multimodal
that is the definition of of multimodal
yeah different types of local state data
yeah different types of local state data
it's different types of local state
it's different types of local state
data um we're going to just we're going
data um we're going to just we're going
to allocate uh this on the grid
side let me
side let me
see yes so we're going to allocate on
see yes so we're going to allocate on
the the python
side we're going to allocate OBS
side we're going to allocate OBS
players and OBS players is going to be
players and OBS players is going to be
self. OBS
self. OBS
players
players
zeros so self. num
agents uh we
need dype do item size * 10 10 * dtype
need dype do item size * 10 10 * dtype
do item size this is going to go right
do item size this is going to go right
up here so this means that you're going
up here so this means that you're going
to be able to see 10 players we're going
to be able to see 10 players we're going
to allocate this as
to allocate this as
bytes and
then this is actually OBS players flat
then this is actually OBS players flat
and then self. OBS players is going to
and then self. OBS players is going to
be from
buffer. viw numpy Rec
buffer. viw numpy Rec
array and then we're going to have to
array and then we're going to have to
pass this
to uh we're going to have to pass this
to uh we're going to have to pass this
to the
CN OBS
players
lat
yeah okay so now this has access to OBS
yeah okay so now this has access to OBS
players flat we have to add it to the C
players flat we have to add it to the C
environment and this is what's going to
environment and this is what's going to
allow us to uh see nearby
players so this has to
be what's the data type of this
it
complicated I've been
there been
there been
where uh this type of a
where uh this type of a
problem this needs to
problem this needs to
be it's is this just a player
star I don't want it to be a player uh
star I don't want it to be a player uh
player star I want it to be like a array
player star I want it to be like a array
of player Star right I don't think you
of player Star right I don't think you
can do that though cuz it's not a valid
can do that though cuz it's not a valid
numpy data type you can't map uh I don't
numpy data type you can't map uh I don't
think you can map
think you can map
this that's
obnoxious in C but
why it's uh it's scon technically not C
why it's uh it's scon technically not C
so I get C speed but I don't have to to
so I get C speed but I don't have to to
deal with a lot of a lot of C
deal with a lot of a lot of C
Shenanigans how did you learn this I've
Shenanigans how did you learn this I've
been doing reinforcement learning for
been doing reinforcement learning for
the past seven years it was my whole
PhD I work on high performance large
PhD I work on high performance large
scale simulations and reinforcement
scale simulations and reinforcement
learning really like the simulation part
learning really like the simulation part
is not that hard cuz if you think about
is not that hard cuz if you think about
it that's just Game Dev and yeah Game
it that's just Game Dev and yeah Game
Dev isn't easy but it's also not like
Dev isn't easy but it's also not like
Cutting Edge research
Cutting Edge research
right the hard part is making the game
right the hard part is making the game
in a way that makes sense to make it
in a way that makes sense to make it
easy to use with reinforcement learning
easy to use with reinforcement learning
and fast that's the hard part so a lot
and fast that's the hard part so a lot
of this like when I'm just like looking
of this like when I'm just like looking
up and thinking about stuff it's me like
up and thinking about stuff it's me like
crosschecking things that I know can
crosschecking things that I know can
potentially go wrong with RL if I do it
potentially go wrong with RL if I do it
weird some is just general engineering
weird some is just general engineering
as well though let's not be too too
as well though let's not be too too
ridiculous
ridiculous
um so what I want this to be right now
um so what I want this to be right now
and I'm I'm running into this issue
and I'm I'm running into this issue
because I just don't have a data type I
because I just don't have a data type I
don't think I have a data type that fits
don't think I have a data type that fits
this cleanly
this cleanly
um like this is technically a player
um like this is technically a player
star star I
star star I
think game industry for a while then
think game industry for a while then
defense yep very
defense yep very
cool
um I really don't want this to be a
um I really don't want this to be a
player star star but I think it has to
player star star but I think it has to
be for
be for
now I think
so then we do what is it
CNP this shouldn't be a player star star
CNP this shouldn't be a player star star
I have love for rust for scon though I'm
I have love for rust for scon though I'm
learning rust now I have not seen the
learning rust now I have not seen the
point of rust remotely for any of my
point of rust remotely for any of my
work the main thing that Russ gives you
work the main thing that Russ gives you
is memory safety I literally do not need
is memory safety I literally do not need
to maloc anything in this Sim everything
to maloc anything in this Sim everything
is fixed allocation if you're maling
is fixed allocation if you're maling
stuff you're being
slow so the main feature that Russ gives
slow so the main feature that Russ gives
you is not something I need
you is not something I need
and all it does is going to get all it
and all it does is going to get all it
will do is get in my way with a borrow
will do is get in my way with a borrow
Checker that is you know not
needed this the thing is what this thing
needed this the thing is what this thing
the thing that's giving me uh rust has a
the thing that's giving me uh rust has a
kickass
kickass
logo we got a we got a puffer
fish what I want this to do is I want
fish what I want this to do is I want
this to be like uh like a player array
this to be like uh like a player array
or
or
something but you can't do that because
something but you can't do that because
it has to be
it has to be
a specific memory view type
a specific memory view type
right view the
right view the
puffer puffer is very
puffer puffer is very
friendly all you got to do is feed the
friendly all you got to do is feed the
puffer a star on GitHub otherwise puffer
puffer a star on GitHub otherwise puffer
gets hungry you don't want the puffer to
gets hungry you don't want the puffer to
be
hungry okay
hungry okay
uh I'm going to just make this a player
uh I'm going to just make this a player
star for now and see what happens I have
star for now and see what happens I have
no idea what this will do
I
it
it
compiles um if I run this does it
compiles um if I run this does it
crash trial and errors is the basis of
crash trial and errors is the basis of
learning yeah you'd be surprised how
learning yeah you'd be surprised how
much of the time it's just I don't know
much of the time it's just I don't know
what this will do I'm going to play with
what this will do I'm going to play with
it for the next few hours and then I'll
it for the next few hours and then I'll
probably be able to get it to work and
probably be able to get it to work and
the skill just comes in knowing enough
the skill just comes in knowing enough
things that you can get it to work in
things that you can get it to work in
you know the next few hours instead of
you know the next few hours instead of
the next few
the next few
months okay so this did not break
months okay so this did not break
anything at the very least it still runs
rling yourself yeah
rling yourself yeah
seriously
um I think that this might be a bad
um I think that this might be a bad
pointer cast is the
pointer cast is the
thing well I know how I can do it for
thing well I know how I can do it for
sure
technically I know how I can do it for
technically I know how I can do it for
sure I don't get any memory bounce any
sure I don't get any memory bounce any
error bounce checking or anything
but it compiles as their worst
but it compiles as their worst
result
result
look if the key feature of rust were not
look if the key feature of rust were not
this borrow Checker that I don't need
this borrow Checker that I don't need
and that gets in my way like I literally
and that gets in my way like I literally
have no need for this thing this thing
have no need for this thing this thing
adds so much baggage and I just do not
adds so much baggage and I just do not
need it right I do not need the selling
need it right I do not need the selling
point of it yeah it's a very
point of it yeah it's a very
well-engineered language and there's a
well-engineered language and there's a
lot of great stuff it's just I wish that
lot of great stuff it's just I wish that
the all the effort were not being put
the all the effort were not being put
into something that very very many
into something that very very many
applications do not need right which is
applications do not need right which is
the the memory
the the memory
safety very very low down on the list of
problems what I really like about
problems what I really like about
cython um in addition to these memory
cython um in addition to these memory
views and compatibility with python is
views and compatibility with python is
that I have all these compile time
that I have all these compile time
checks that I can just switch on and off
checks that I can just switch on and off
so I can make make my Dev super fast and
so I can make make my Dev super fast and
I can actually get some reasonable error
I can actually get some reasonable error
messages um and I can just you know turn
messages um and I can just you know turn
them all off uh when I am ready to make
them all off uh when I am ready to make
it
it
fast my parallel
fast my parallel
programming have you seen poer Leb we
programming have you seen poer Leb we
have lots and lots of parallel
have lots and lots of parallel
programming we have actually the best
programming we have actually the best
the best CPU multiprocessing
the best CPU multiprocessing
implementation out there for
implementation out there for
reinforcement
reinforcement
learning and uh it's just python and a
learning and uh it's just python and a
bunch of shared memory
Shenanigans cool to see people finding
Shenanigans cool to see people finding
the stream on Twitch though and no
the stream on Twitch though and no
discoverability is harder there for new
stuff okay so what I'm going to do is
stuff okay so what I'm going to do is
I'm going to do the thing that I know is
I'm going to do the thing that I know is
going to work for now so that I'm not
going to work for now so that I'm not
here experimenting forever because
here experimenting forever because
that's going to be really boring um
that's going to be really boring um
the thing that I know will work is just
the thing that I know will work is just
treating this as a flat array of players
treating this as a flat array of players
and then writing a function to get the
and then writing a function to get the
specific player that I need uh for you
specific player that I need uh for you
know what whatever
thing and this is actually going to be a
thing and this is actually going to be a
class
class
function YouTube after a college
function YouTube after a college
football 25 video I have no idea how
football 25 video I have no idea how
that possible because I've not
that possible because I've not
had done I've have not had any
had done I've have not had any
engagement with football in my life
engagement with football in my life
whatsoever I'm using
algorithm idx so we're going to get uh
algorithm idx so we're going to get uh
self and this is a c Def and this is
self and this is a c Def and this is
going to return a player
going to return a player
star get player OB
turn PID
turn PID
times going to be 10 times PID we hard
times going to be 10 times PID we hard
code for now plus
code for now plus
idx this is
idx this is
fine so now we have access to this uh
fine so now we have access to this uh
observation and when we compute
observation and when we compute
observations we need to uh do something
observations we need to uh do something
about this so
this is going to add a lot of you know
this is going to add a lot of you know
slowdown to this but we can optimize
later the thesis vid I
later the thesis vid I
swear well it's funny because did you
swear well it's funny because did you
get you didn't find the thesis vid on TW
get you didn't find the thesis vid on TW
on Twitch right unless I guess you found
on Twitch right unless I guess you found
it from somewhere else
it from somewhere else
um I'm going to probably try to make
um I'm going to probably try to make
another couple of long form videos to
another couple of long form videos to
see if it was just like a onetime thing
see if it was just like a onetime thing
or uh if people actually will you know
or uh if people actually will you know
like the Deep dive technical content cuz
like the Deep dive technical content cuz
there are a few other things I can do I
there are a few other things I can do I
have an idea for one on just puffer lib
have an idea for one on just puffer lib
in general that's like an RL primer of
in general that's like an RL primer of
sort of how I see the whole landscape of
sort of how I see the whole landscape of
reinforcement learning right now and
reinforcement learning right now and
what are the major problems that need to
what are the major problems that need to
be solved for us to move forward as a
be solved for us to move forward as a
field and I can make that pretty
field and I can make that pretty
accessible and uh I also have one on
accessible and uh I also have one on
some of the Sim Tech that I've been
some of the Sim Tech that I've been
thinking about
so
transferred from YouTube twitch was hard
transferred from YouTube twitch was hard
to find link is on the YouTube page some
to find link is on the YouTube page some
mentioned that it was the same as your
mentioned that it was the same as your
ex yeah well I'm technically I'm live on
ex yeah well I'm technically I'm live on
uh Twitter Youtube and twitch so it
uh Twitter Youtube and twitch so it
really doesn't matter where where you
really doesn't matter where where you
watch it right as long as there're
watch it right as long as there're
people somewhere and I can see the
people somewhere and I can see the
metrics now on the only one I can't see
metrics now on the only one I can't see
is I can't see concurrent views on uh
is I can't see concurrent views on uh
Twitter Twitter only tells you total
Twitter Twitter only tells you total
views it doesn't tell you concurrent
views it doesn't tell you concurrent
viewers
okay so what I'm going to do here is I'm
okay so what I'm going to do here is I'm
going to find all of the agents that are
going to find all of the agents that are
in a crop around the current agent and
in a crop around the current agent and
I'm going to load them into uh this
I'm going to load them into uh this
observation buffer yeah that's how I'm
observation buffer yeah that's how I'm
going to try to do this
going to try to do this
and does this
solve we're going to have to do mouse
solve we're going to have to do mouse
based actions I guess for
based actions I guess for
we're going to have to do mouse based
we're going to have to do mouse based
actions for the human
client hey Will
client hey Will
welcome I honestly I got this idea from
welcome I honestly I got this idea from
you you were the only other person I saw
you you were the only other person I saw
ever streaming Dev so I figured hey why
ever streaming Dev so I figured hey why
not instead of letting will have all the
not instead of letting will have all the
fun you know co-opting agents with uh
fun you know co-opting agents with uh
with gp4 why don't we make some uh some
with gp4 why don't we make some uh some
real RL agents that have like a million
real RL agents that have like a million
parameters
here I'll show you something cool
here I'll show you something cool
scale-wise from uh last night so I got
scale-wise from uh last night so I got
carbs working this is like well over 50
carbs working this is like well over 50
billion uh simulation steps worth of
billion uh simulation steps worth of
data in one experiment overnight on one
data in one experiment overnight on one
GPU and it like this with carbs hyper
GPU and it like this with carbs hyper
pram sweep this just kicked ass this
pram sweep this just kicked ass this
like beat of my manually tuned baselines
like beat of my manually tuned baselines
by a huge margin um just essentially
by a huge margin um just essentially
Auto solves your environments this model
Auto solves your environments this model
has like 150,000 parameters but it
has like 150,000 parameters but it
trains at a million steps per second so
trains at a million steps per second so
who
cares lots of
data
data
anyways um this thing here so I need to
anyways um this thing here so I need to
figure
figure
out uh the PID I think in this
out uh the PID I think in this
position need to read carb stuff dude I
position need to read carb stuff dude I
can't read the carbs paper it's too much
can't read the carbs paper it's too much
math okay I understand that they did
math okay I understand that they did
some Pito optimality front thing on top
some Pito optimality front thing on top
of basian optimization and that's it uh
of basian optimization and that's it uh
I did integrate it with puffer lib
I did integrate it with puffer lib
though so I got that going for me which
though so I got that going for me which
is
nice carbs is
nice carbs is
awesome sucker for data
awesome sucker for data
quantity okay here's another cool stat
quantity okay here's another cool stat
right this is why I think RL is really
right this is why I think RL is really
cool and a lot of people don't
cool and a lot of people don't
necessarily get this um you know coming
necessarily get this um you know coming
from NLP so NLP like these giant
from NLP so NLP like these giant
Transformers with like thousands of
Transformers with like thousands of
hunds right they're trained on order of
hunds right they're trained on order of
terabytes maybe tens of terabytes of
terabytes maybe tens of terabytes of
data it's trillions of tokens right
data it's trillions of tokens right
token is like an INT four bytes
token is like an INT four bytes
something like that maybe you can pack
something like that maybe you can pack
it into a short depending um that's the
it into a short depending um that's the
amount of data like we can go through
amount of data like we can go through
that in a day on a GPU one GPU in
that in a day on a GPU one GPU in
reinforcement learn learning so just the
reinforcement learn learning so just the
data scale is so crazy with
data scale is so crazy with
RL um and there's been a little bit of
RL um and there's been a little bit of
theoretical work showing that RL scales
theoretical work showing that RL scales
way better with data than with model
way better with data than with model
size at least for a while so you need
size at least for a while so you need
way more data to saturate any fixed
way more data to saturate any fixed
model size so actually doing this High
model size so actually doing this High
perf Sim and high perf uh High perf
perf Sim and high perf uh High perf
engineering work it really makes a huge
engineering work it really makes a huge
difference
equals H did I mess this up do I need
equals H did I mess this up do I need
another variable
another variable
here I think this is DX
here I think this is DX
right
yeah DX
Dy d y DX
Dy d y DX
do you have a preferred
do you have a preferred
GPU uh I have I've got the puffer
cluster this is the puffer cluster right
cluster this is the puffer cluster right
here we've got eight desktops with 409s
here we've got eight desktops with 409s
in them this is where the experiments
in them this is where the experiments
all
all
run uh these two up top these run my own
run uh these two up top these run my own
experiments this one is a colleague of
experiments this one is a colleague of
mine friend who was using it for another
mine friend who was using it for another
cool RL
cool RL
and then these five right here are all
and then these five right here are all
dedicated to open source training on
dedicated to open source training on
Pokemon Red trying to get RL to solve
Pokemon Red trying to get RL to solve
Pokemon Red and then this is like an old
Pokemon Red and then this is like an old
this is an old box I'm using as a login
this is an old box I'm using as a login
node and this is a puffer
fish that's the
cluster very economical compared to an
cluster very economical compared to an
LP land
don't need this don't need this check um
don't need this don't need this check um
now what we need to do is we get the
now what we need to do is we get the
PID in
PID in
PID PID is going to be equal to PID map
PID PID is going to be equal to PID map
at y and x and then if it is let's do if
at y and x and then if it is let's do if
PID equals negative 1 you
PID equals negative 1 you
continue otherwise we do
we get the
we get the
observation at PID and
idx no that's not how we do
it we
do player star Target
Target is going to be equal to get
Target is going to be equal to get
player
player
OB and we need to figure
OB and we need to figure
out where the data is for that
out where the data is for that
so
so
uh I think it's
uh I think it's
actually Target equals to self. get
actually Target equals to self. get
player PID and then you have to load it
into and you copy the contents of one
into and you copy the contents of one
struct into
another that's a good question
another that's a good question
um I know how you do it from the python
side I wonder if I can just use the
side I wonder if I can just use the
colon like the bracket
indicator I don't know the Syntax for
indicator I don't know the Syntax for
this it should technically be something
this it should technically be something
like self. get player
like self. get player
OB
like Target something like
like Target something like
this I'm sure this doesn't
compile let's
compile let's
see invalid index for memory view
specified well this needs to be R I
specified well this needs to be R I
guess
guess
C thoughts on
C thoughts on
number in a lot of benchmarks it beats
number in a lot of benchmarks it beats
scon that's just people gaming
scon that's just people gaming
benchmarks like thing that generates C
benchmarks like thing that generates C
code is thing that generates C code it's
code is thing that generates C code it's
just how good your C code is and uh it
just how good your C code is and uh it
depends on what you're using
depends on what you're using
you absolutely cannot do the stuff I'm
you absolutely cannot do the stuff I'm
doing at the moment with number
doing at the moment with number
though this is a bit more than just
though this is a bit more than just
jitting your
python well let's see if this errors
okay that compiles but I don't trust
it well it doesn't seem to crash and it
it well it doesn't seem to crash and it
would be running this
code so maybe this is actually the
code so maybe this is actually the
correct maybe you can actually do this
correct maybe you can actually do this
that'd be sweet if you could if this is
that'd be sweet if you could if this is
all it takes to assign a struck to a
all it takes to assign a struck to a
struck that's
awesome let's just uh let's get on to
awesome let's just uh let's get on to
the interesting stuff here
the interesting stuff here
so we now have a way to get the
so we now have a way to get the
players
players
into uh into
this which will give you a way to do
this which will give you a way to do
attacks but I'm still going to have to
attacks but I'm still going to have to
do something with the uh the client like
do something with the uh the client like
you'd have to be able to click them I
you'd have to be able to click them I
think is there any other way I can do
think is there any other way I can do
this without like
clicks I don't think so
right I don't think
so let's do um
so let's do um
maybe let's figure out if there's a way
maybe let's figure out if there's a way
to do Clicks in uh in
rayb Clicks in like health bars maybe
rayb Clicks in like health bars maybe
that would be a decent spot to start
that would be a decent spot to start
that'll be pretty interesting I'd say
that'll be pretty interesting I'd say
and that'll help us
out okay so we need to be able to like
out okay so we need to be able to like
get mouse input I
get mouse input I
guess from this
yeah let's
yeah let's
do mouse RB
do mouse RB
mouse mouse
input they just have an is mouse button
input they just have an is mouse button
pressed
they don't have coordinates
they don't have coordinates
though oh wait get mouse
though oh wait get mouse
position so that's fine we can just do
position so that's fine we can just do
get mouse
get mouse
position uh it's probably is it X Y or Y
position uh it's probably is it X Y or Y
like it's probably XY
right okay Mouse
X Mouse Y is get mouse
X Mouse Y is get mouse
position Mouse X Mouse
position Mouse X Mouse
Y and then what we'll do is we will edit
Y and then what we'll do is we will edit
the actions
the actions
here
um we'll edit the actions to
um we'll edit the actions to
be something
this is so difficult to think about how
this is so difficult to think about how
to
to
represent that's the problem with
represent that's the problem with
this it's very difficult to think about
this it's very difficult to think about
how to represent the mouse Clicks in a
how to represent the mouse Clicks in a
way that's going like it's easy to think
way that's going like it's easy to think
about how to represent actions for
about how to represent actions for
agents or how to represent actions for a
agents or how to represent actions for a
game it's hard to do both at the same
time I mean the input mode of the the
time I mean the input mode of the the
input mode of um
input mode of um
the agent is going to be different so I
the agent is going to be different so I
think that the best thing we can do is
think that the best thing we can do is
just
just
convert right here
convert right here
maybe is we just do the calc in
here
yeah okay
yeah okay
so let's we'll have to what we're going
so let's we'll have to what we're going
to have to do is we're going to have to
to have to do is we're going to have to
set this to 10 which is the number of
set this to 10 which is the number of
agents that it can see and then we're
agents that it can see and then we're
going to rewrite the the C code just a
going to rewrite the the C code just a
little bit so that the targeting is
little bit so that the targeting is
based off of uh nearby
based off of uh nearby
agents
agents
so it does
so it does
step and then there's the tower thing
step and then there's the tower thing
and then where's the
attack okay so here's the adjacent
attack okay so here's the adjacent
attack code we're going to change this a
attack code we're going to change this a
little bit um so this is a
little bit um so this is a
attack ID I
attack ID I
guess
and we need to store the the ID I uh we
and we need to store the the ID I uh we
need to store the ID of the agent that
need to store the ID of the agent that
we are potentially
attacking
attacking
so I like this lesson
so I like this lesson
less but have to do it
let's just add like
let's just add like
in
PID player. PID gets that to
I and
now that we set PID to ey we do
attack uh and this is the now this is
attack uh and this is the now this is
not the PID but we can get PID equal to
not the PID but we can get PID equal to
do we have PID
do we have PID
defined yeah we have PID
defined yeah we have PID
defined so we can get PID equal
to
Target get
player agent idx and
player agent idx and
then
then
attack
no get player OB okay so the target so
no get player OB okay so the target so
the way that this works is you have the
the way that this works is you have the
attack the attacks is the index of the
attack the attacks is the index of the
agent that you can see that is nearby
agent that you can see that is nearby
you then we get your observation of that
you then we get your observation of that
player uh by looking at your index and
player uh by looking at your index and
then the attack
then the attack
offset and
offset and
then we get the PID of the target as
then we get the PID of the target as
target.
target.
PID right and then if the pit is
ne1 what happens if it's empty
yeah what happens if this is
empty we have to deal with
it system is very complicated to
design pit is negative
design pit is negative
one continue
we can't do this continue because
we can't do this continue because
there's more stuff down here right
yeah switch to Twitch
welcome yeah doesn't really matter which
welcome yeah doesn't really matter which
platform people watch on whatever is
platform people watch on whatever is
most convenient for you
I think the
I think the
uh I don't know how it works I think
uh I don't know how it works I think
it's like whichever if you have twitch
it's like whichever if you have twitch
turbo then you don't get ads on Twitch
turbo then you don't get ads on Twitch
and if you have YouTube premium you
and if you have YouTube premium you
don't get ads on YouTube and I think you
don't get ads on YouTube and I think you
just don't get ads on X no maybe you
just don't get ads on X no maybe you
need X premium to not get ads or maybe
need X premium to not get ads or maybe
you just never get ads but the quality
you just never get ads but the quality
is always 720p I don't know whatever you
is always 720p I don't know whatever you
guys like the most um I have not set any
guys like the most um I have not set any
ads that are not mandated by the
ads that are not mandated by the
platform forms
so okay so if the pit is not equal to
so okay so if the pit is not equal to
negative one then we need to do the
negative one then we need to do the
attack which
is just right here right
okay so this probably is good and then
okay so this probably is good and then
we need to just work on the data
we need to just work on the data
structure a little
bit coding MOBA from scratch are you a
bit coding MOBA from scratch are you a
single Dev on this project yeah I
single Dev on this project yeah I
started this yesterday um and hopefully
started this yesterday um and hopefully
this is not going to take particularly
this is not going to take particularly
long either we're going to see this is
long either we're going to see this is
not meant to be like a super fun MOA for
not meant to be like a super fun MOA for
people this is like a strip down MOBA
people this is like a strip down MOBA
that we're going to use for
that we're going to use for
reinforcement learning and the main
reinforcement learning and the main
technical complexity of this project is
technical complexity of this project is
making it relatively easy to use with
making it relatively easy to use with
reinforcement learning and making it run
reinforcement learning and making it run
it like a million steps per second these
it like a million steps per second these
are things that I know how to
are things that I know how to
do year I I'm a year 12 State student
do year I I'm a year 12 State student
11th grade for us basic knowledge in the
11th grade for us basic knowledge in the
field of machine learning I was
field of machine learning I was
wondering if you had any advice get more
wondering if you had any advice get more
experience with AI and ml uh that's
experience with AI and ml uh that's
pretty much when I started it took a lot
pretty much when I started it took a lot
of work programming resources beginner
of work programming resources beginner
projects I should do
projects I should do
uh you definitely want to learn basic
uh you definitely want to learn basic
like core programming that's very very
like core programming that's very very
important to do uh and you're going to
important to do uh and you're going to
want to do that in a way that is fun and
want to do that in a way that is fun and
does not bore you I got very very bored
does not bore you I got very very bored
very very quickly with my courses and I
very very quickly with my courses and I
just started doing a ton of projects so
just started doing a ton of projects so
I generally advise new people to spend
I generally advise new people to spend
like 90% of their time maybe if you're
like 90% of their time maybe if you're
really new like 80% of your time doing
really new like 80% of your time doing
projects that you find fun very small
projects that you find fun very small
scope stuff that you can finish and uh
scope stuff that you can finish and uh
20% of your time on like formal learning
20% of your time on like formal learning
uh a lot of the stuff nowadays is on
uh a lot of the stuff nowadays is on
YouTube uh the best resources for AI and
YouTube uh the best resources for AI and
ml are
ml are
cs231n the videos for that are uh online
cs231n the videos for that are uh online
it is a grad course but is a relatively
it is a grad course but is a relatively
accessible graduate
accessible graduate
course um
course um
and yeah outside of that it's it's a lot
and yeah outside of that it's it's a lot
of like I might I may have some things I
of like I might I may have some things I
can point you to that will save you some
can point you to that will save you some
time here and there if you ask specifics
time here and there if you ask specifics
but there is just a huge time investment
but there is just a huge time investment
to learn this stuff I started around
to learn this stuff I started around
that age I spent like I don't know
that age I spent like I don't know
probably 2,000 hours joint with
probably 2,000 hours joint with
everything else I was doing in my first
everything else I was doing in my first
year and a half like just getting the
year and a half like just getting the
very very Basics and uh I mean I've been
very very Basics and uh I mean I've been
doing it from there ever since for the
doing it from there ever since for the
last 10
last 10
years but you know you do get
there and really I think that the
there and really I think that the
biggest skill difference in
biggest skill difference in
uh in a lot of places in AI is not like
uh in a lot of places in AI is not like
hard math or anything that's really
hard math or anything that's really
difficult to wrap your head around it's
difficult to wrap your head around it's
just being a very good
engineer like the best thing that I do
engineer like the best thing that I do
that lets me do what I do here like yeah
that lets me do what I do here like yeah
there's a crucial science piece of it
there's a crucial science piece of it
that's very hard to go get without and
that's very hard to go get without and
they like yeah there's a little bit of
they like yeah there's a little bit of
math but it's just trying to be very
math but it's just trying to be very
good at making very complicated things
good at making very complicated things
simple and just being very very
simple and just being very very
persistent about trying to like write
persistent about trying to like write
good code uh to make complicated things
good code uh to make complicated things
simple um and that comes more from just
simple um and that comes more from just
having things being complicated
having things being complicated
bothering you a lot than
bothering you a lot than
anything this code is not an example of
anything this code is not an example of
good code don't do as I say not as I do
good code don't do as I say not as I do
this is shitty prototype
this is shitty prototype
code and this is me trying to do things
code and this is me trying to do things
quickly on stream because otherwise it's
quickly on stream because otherwise it's
very boring watching me like stare at if
very boring watching me like stare at if
statement for an hour trying to think if
statement for an hour trying to think if
I can save five
lines okay so we needed to fix the uh
lines okay so we needed to fix the uh
the compute observations functions right
the compute observations functions right
so what we do here is I think that this
so what we do here is I think that this
is self
is self
dot we have to clear self. player OBS
right so
for this is it is still good though
for this is it is still good though
seconde college students that just got
seconde college students that just got
really interested machine learning too
really interested machine learning too
is it better invest in Hardware or run
is it better invest in Hardware or run
the program on cloud uh I'm not going to
the program on cloud uh I'm not going to
tell you how to spend your money um and
tell you how to spend your money um and
it depends on what you're trying to do
it depends on what you're trying to do
uh a good desktop for reinforcement
uh a good desktop for reinforcement
learning specifically a good desktop
learning specifically a good desktop
takes you pretty far the one thing is
takes you pretty far the one thing is
that for most environments you want to
that for most environments you want to
have a pretty nice CPU that can keep up
have a pretty nice CPU that can keep up
with the GPU um if I were looking to
with the GPU um if I were looking to
build like a budget thing uh
build like a budget thing uh
actually can I no I can't move the
actually can I no I can't move the
camera uh I have a little mini ITX next
camera uh I have a little mini ITX next
to me on the desk that I'm using for
to me on the desk that I'm using for
this that has a 3080 and an 8 core
this that has a 3080 and an 8 core
processor I'd probably go for at least a
processor I'd probably go for at least a
12 core
12 core
processor um if I were going to you know
processor um if I were going to you know
go for like a little budget build uh you
go for like a little budget build uh you
there's also the like the higher end
there's also the like the higher end
stuff that I I've shown on my uh my site
stuff that I I've shown on my uh my site
where is it this is what I use this is
where is it this is what I use this is
the exact Hardware I use to run my stuff
the exact Hardware I use to run my stuff
but these boxes are like four grand a
but these boxes are like four grand a
piece um you can build something decent
piece um you can build something decent
for like half that or less to get
for like half that or less to get
started the cloud instances on vast are
started the cloud instances on vast are
fine uh but like mentally it's really
fine uh but like mentally it's really
obnoxious to like think about having to
obnoxious to like think about having to
spin something up every time and like
spin something up every time and like
knowing that you're constantly draining
knowing that you're constantly draining
the budget on that so I've always liked
the budget on that so I've always liked
having my Hardware but uh you know you
having my Hardware but uh you know you
can kind of do either definitely don't
can kind of do either definitely don't
go with like Google cloud or something
go with like Google cloud or something
that will suck that will just sap all
that will suck that will just sap all
your money very quickly
I think actually I just need this right
I think actually I just need this right
I just set the pit and then the rest of
I just set the pit and then the rest of
it can be garbage for
now yeah this is
now yeah this is
fine uh and
fine uh and
we
we
do if
do if
idx1
idx1
Rak ah such
Rak ah such
garbage so there's like all this check
garbage so there's like all this check
this checking and stuff I have to do to
this checking and stuff I have to do to
make sure I'm not overfilling these
make sure I'm not overfilling these
buffers these are raw pointers so
buffers these are raw pointers so
technically like if I screw this up I'm
technically like if I screw this up I'm
just going to get seg fols and I'm going
just going to get seg fols and I'm going
to be confused I think
oh I should have mentioned that the
oh I should have mentioned that the
answer was really for um RL specifically
answer was really for um RL specifically
for broader ml like if you're trying to
for broader ml like if you're trying to
do Transformers you're kind of just
do Transformers you're kind of just
screwed um yeah that's like that that's
screwed um yeah that's like that that's
just it it's not affordable even for
me to do like heavy stuff with
me to do like heavy stuff with
NLP if you're doing stuff outside of RL
NLP if you're doing stuff outside of RL
with like you know medium small size
with like you know medium small size
models for applications then you just
models for applications then you just
want the best GPU you can get and that's
want the best GPU you can get and that's
basically
yet maybe like 128 gigs of
RAM I'm pretty happy with my stack for
RAM I'm pretty happy with my stack for
RL
though oh geez Google cloud is so
though oh geez Google cloud is so
stupidly expensive you will pay the
stupidly expensive you will pay the
entire cost of your Hardware uh in two
entire cost of your Hardware uh in two
months so you used Google Cloud for two
months so you used Google Cloud for two
months you've basically bought the
months you've basically bought the
machine machine and their machines are
bad H
interesting oh right so we had to we got
interesting oh right so we had to we got
to do some stuff in Python on the python
to do some stuff in Python on the python
side
cool Dory that the stream is warming up
cool Dory that the stream is warming up
though
um kind of funny to me that people like
um kind of funny to me that people like
watching random Dev but hey works for
me okay it has an X in a why
um now I have to map this to something
right this mapping is kind of
right this mapping is kind of
hard not going to
hard not going to
lie what if I just punt on this for now
lie what if I just punt on this for now
right what if I just like hardcode this
right what if I just like hardcode this
to zero I think this will just be the
to zero I think this will just be the
first that you can see if I hardcode to
first that you can see if I hardcode to
zero for
zero for
now let's see if it works or if it
crashes so this is what I was warning
crashes so this is what I was warning
about this is one of the places where
about this is one of the places where
like I wish cython had way more tooling
like I wish cython had way more tooling
investment but because I'm using a
investment but because I'm using a
buffer
buffer
here I have to be very careful not to
here I have to be very careful not to
overrun any of my
overrun any of my
buffers otherwise you get no Reon a
buffers otherwise you get no Reon a
error message even with syon checks
on idx is equal to
10 well first of
10 well first of
all this is idx has to be incremented so
all this is idx has to be incremented so
I shouldn't be overrunning
I shouldn't be overrunning
it is a nice background signal during my
it is a nice background signal during my
own Dev I don't know how you Focus
own Dev I don't know how you Focus
listening to this but hey it's pretty
nice hopefully there's stuff to
learn it's 10 then you break if it's 10
learn it's 10 then you break if it's 10
then you
break but this wasn't it because we
break but this wasn't it because we
weren't incrementing
weren't incrementing
idx it could be this
what if I just pass here to
what if I just pass here to
something it could also be on the other
something it could also be on the other
side it could be on the um the
side it could be on the um the
computation of attacks I wouldn't be
computation of attacks I wouldn't be
surprised
okay so it's still seg fals meaning that
okay so it's still seg fals meaning that
it's not this um I think it's probably
it's not this um I think it's probably
right here
somewhere so get player
somewhere so get player
OB agent
OB agent
index and then the
attack let's
um and then you do get player of the
um and then you do get player of the
target pit
getting
Target okay so print this and let's do
Target okay so print this and let's do
got
got
Target maybe it's here
did it segul before anything
did it segul before anything
happened just checking when you
happened just checking when you
mentioned
mentioned
cs231n deep learning for computer yeah
cs231n deep learning for computer yeah
but it covers more than just computer
but it covers more than just computer
vision um go find either like Andre's
vision um go find either like Andre's
original lectures carpy's lectures or
original lectures carpy's lectures or
like Justin's lectures some of the
like Justin's lectures some of the
lectures are better than others the
lectures are better than others the
video should be pretty old at this point
video should be pretty old at this point
but they're very good uh the main thing
but they're very good uh the main thing
about that course compared to many of
about that course compared to many of
the other ones is that you will have a
the other ones is that you will have a
decent chance of following a lot of it
decent chance of following a lot of it
uh some of the other grad courses are
uh some of the other grad courses are
just very math heavy for no apparent
just very math heavy for no apparent
reason like you're not going to unless
reason like you're not going to unless
you have a very good grad math
you have a very good grad math
background you're not going to be able
background you're not going to be able
to follow cs229 for instance and it's
to follow cs229 for instance and it's
not going to be particularly useful so
not going to be particularly useful so
that's really the the good one that's
that's really the the good one that's
there
very weird that we're not even getting
very weird that we're not even getting
here that we're just seg faulting
right I know I'm just going to add some
right I know I'm just going to add some
prints we're going to be lazy
here I really wish we had a better
here I really wish we had a better
debugger for this
did I rebuild it what
happened well that doesn't make sense to
happened well that doesn't make sense to
me that it's it's seg faulting before
me that it's it's seg faulting before
it's printing
anything I guess it would have to be on
anything I guess it would have to be on
the compute observations huh
is scon as good as other
is scon as good as other
options so for this particular
options so for this particular
project like what other options would
project like what other options would
there be it would either be write it in
there be it would either be write it in
C++ and then nobody will ever bother
C++ and then nobody will ever bother
reading the source code and it will be a
reading the source code and it will be a
pain and I have to deal with
pain and I have to deal with
pbind or like anything else I have to
pbind or like anything else I have to
basically deal with annoying like cross
basically deal with annoying like cross
language
language
interfaces um sion's the only thing that
interfaces um sion's the only thing that
bypasses like pbind like annoyances with
bypasses like pbind like annoyances with
signatures and the like and that has a
signatures and the like and that has a
decent chance of being read and used by
decent chance of being read and used by
researchers because it's basically just
researchers because it's basically just
python
python
um yeah there there's really nothing
um yeah there there's really nothing
else I could think of that would be good
else I could think of that would be good
I mean I guess there's some new stuff
I mean I guess there's some new stuff
around but nothing that really fits this
around but nothing that really fits this
profile did it not give me did I just
profile did it not give me did I just
forget to recompile it no how is it seg
forget to recompile it no how is it seg
falting
falting
before Oh wait here it is so resetting
before Oh wait here it is so resetting
buffers yeah so it's failing here
buffers yeah so it's failing here
somehow resetting buffers for OBS
somehow resetting buffers for OBS
4 get player
4 get player
OB oh okay so yeah this function is just
OB oh okay so yeah this function is just
not working the way that I'm expecting
not working the way that I'm expecting
that's fine yeah that's we kind of
that's fine yeah that's we kind of
expected to do this so this is one of
expected to do this so this is one of
the limitations here uh what I would
the limitations here uh what I would
like to have is I would like to have
like to have is I would like to have
an array of player
an array of player
star or mem view of player
star or mem view of player
star I can't really do that
right I mean maybe because it's a se
right I mean maybe because it's a se
struct you can I don't think you can
struct you can I don't think you can
here let me let me see if I try to
here let me let me see if I try to
compile this as
like
like
player array player OBS this won't work
player array player OBS this won't work
right
wait are you actually allowed to do this
wait are you actually allowed to do this
am I just being
dumb so I have errors but I don't have
dumb so I have errors but I don't have
errors on this data
errors on this data
type if you can do this this is
type if you can do this this is
sweet we'll try it we will uh we will
sweet we'll try it we will uh we will
try
it cannot convert player to a memory
it cannot convert player to a memory
view
view
slice
um well you wouldn't have to right you
um well you wouldn't have to right you
would just
do I doubt this is going to work but if
do I doubt this is going to work but if
it does it actually makes our life way
it does it actually makes our life way
easier probably write a small test
easier probably write a small test
function you
function you
know you're probably right I hate
know you're probably right I hate
writing tests but that would be easier
writing tests but that would be easier
wouldn't it
let me go find there's a Syntax for
let me go find there's a Syntax for
importing scyon
files um I forget where it is I think I
files um I forget where it is I think I
have an example in clean pop
RL yeah so right
RL yeah so right
here technically I can do
that's probably a nice thing to have
that's probably a nice thing to have
because this is a complicated project so
because this is a complicated project so
we're probably going to want to be able
we're probably going to want to be able
to test some stuff
right
right
import test struct
import test struct
whatever test struct
I need to get the data type from the the
Moa so I want this like player D type
Moa so I want this like player D type
this type of a code right
here test.py
what is
ITX why why does it do this to
ITX why why does it do this to
me okay you know whatever super Maven
me okay you know whatever super Maven
will just do
will just do
it
nope I did not tell to auto
nope I did not tell to auto
complete yeah I love it once when yeah
complete yeah I love it once when yeah
player and
player and
PID now it'll do it
PID now it'll do it
right yeah now that just does
right yeah now that just does
it CP
it CP
death okay there it
death okay there it
works dumb very dumb
let's check the Twitter real quick to
let's check the Twitter real quick to
see if there's anything on
it I do have to uh see if there's any
it I do have to uh see if there's any
cool stuff going
cool stuff going
on H some
on H some
follows no uh no cool comments on wait
follows no uh no cool comments on wait
okay just
okay just
refreshed see it fallen out
refreshed see it fallen out
uh okay nothing
thesis defense was really cool presented
thesis defense was really cool presented
really well too thank you looking
really well too thank you looking
forward to your developments I've done
forward to your developments I've done
more in the last two months than I've
more in the last two months than I've
done in the last two years actually the
done in the last two years actually the
progress has been absolutely insane with
progress has been absolutely insane with
puffer lib
puffer lib
um it's just like as soon as the
um it's just like as soon as the
academic side got out of my way and I
academic side got out of my way and I
don't have to think about papers and I
don't have to think about papers and I
can just focus on like good highper
can just focus on like good highper
engineering stuff has started moving
engineering stuff has started moving
really really fast like I'm very very
really really fast like I'm very very
happy with how puffer be shaping
up okay so what we were trying to do is
up okay so what we were trying to do is
we were trying to figure out
um dtype
we want player dtype and then test
we want player dtype and then test
struct maybe player dtype
struct maybe player dtype
have I
seen.
seen.
0481 one
I think puffer lib should have a first
I think puffer lib should have a first
class oh was this the thing that was on
class oh was this the thing that was on
Twitter
Twitter
wait is this new was this the thing that
wait is this new was this the thing that
was on
Twitter so I saw the thing on
Twitter so I saw the thing on
Twitter
and let's see their
experiments I'm always so distrustful of
experiments I'm always so distrustful of
algorithm results
man clean RL DQ yeah I'm so distrustful
man clean RL DQ yeah I'm so distrustful
of algorithm
of algorithm
results um I've seen just I've wasted
results um I've seen just I've wasted
way too much of my time um like you know
way too much of my time um like you know
trying to like go like use new
trying to like go like use new
algorithms and stuff and the comparisons
algorithms and stuff and the comparisons
are just always always bad faith
are just always always bad faith
comparisons like for instance I know
comparisons like for instance I know
that the um the clean RL defaults are
that the um the clean RL defaults are
horribly horribly wall clock inefficient
horribly horribly wall clock inefficient
so like this type of a plot here this is
so like this type of a plot here this is
not remotely representative like I
not remotely representative like I
guarantee you they did not tune this
guarantee you they did not tune this
Baseline um or use like remotely
Baseline um or use like remotely
reasonable settings I have this video
reasonable settings I have this video
that's pinned to my Twitter where I make
that's pinned to my Twitter where I make
like clean RL first I make it like four
like clean RL first I make it like four
times faster as a comparison to the
times faster as a comparison to the
Baseline I optimize that and then I make
Baseline I optimize that and then I make
puffer like two or three times faster on
puffer like two or three times faster on
top of
that well I'm not using rainbow dqn
that well I'm not using rainbow dqn
right like I'm using PPO as my basis for
right like I'm using PPO as my basis for
everything at the moment
everything at the moment
and is this
simple very low
simple very low
memory only algorithm is
memory only algorithm is
po lower number of hyper
po lower number of hyper
parameters and provable
parameters and provable
stability provable stability
stability provable stability
I don't know about
that this is not exactly
that this is not exactly
true and did they
discount so the thing with puffer is I'm
discount so the thing with puffer is I'm
not actually puffer is not primarily in
not actually puffer is not primarily in
an algorithms Library if you've noticed
an algorithms Library if you've noticed
I only have I have one implementation in
I only have I have one implementation in
puffer um puffer is fast compatible M
puffer um puffer is fast compatible M
support like you could use puffer with
support like you could use puffer with
this whatever their code is if it has a
this whatever their code is if it has a
VEC interface for like Gym's you can use
VEC interface for like Gym's you can use
puffer with their thing and puffer will
puffer with their thing and puffer will
just instantly make this thing two to
just instantly make this thing two to
three times faster bare minimum
three times faster bare minimum
sometimes 10 times faster for certain
sometimes 10 times faster for certain
environments um
environments um
at the very least like more algorithm
at the very least like more algorithm
implementations is bottom of my priority
implementations is bottom of my priority
list because people have been doing this
list because people have been doing this
forever like there are a million
forever like there are a million
different algorithm
different algorithm
implementations and thus far nothing has
implementations and thus far nothing has
stood the test of time over
stood the test of time over
po maybe this will be the thing that's
po maybe this will be the thing that's
different and I do like that they have
different and I do like that they have
craft a as a baseline that's that's very
craft a as a baseline that's that's very
nice
nice
um it actually if you look at it it's
um it actually if you look at it it's
it's about the same here which is funny
it's about the same here which is funny
that they just have this different curve
that they just have this different curve
shape that's very
shape that's very
interesting
interesting
um
yeah they need to run this for longer as
yeah they need to run this for longer as
well craftex you can get way more than a
well craftex you can get way more than a
billion frames
on and then these are like tiny there's
on and then these are like tiny there's
so much stuff I can show like here for
so much stuff I can show like here for
instance this overcooked environment
instance this overcooked environment
they have like one E6 time steps cuz
they have like one E6 time steps cuz
this environment is so slow I messed
this environment is so slow I messed
with this and the code base for this
with this and the code base for this
environment is just God awful like this
environment is just God awful like this
environment should run at a million
environment should run at a million
steps per second and instead it runs at
steps per second and instead it runs at
like I don't know a hundred or a few
like I don't know a hundred or a few
hundred um
hundred um
yeah so like I would I don't even trust
yeah so like I would I don't even trust
this environment fundamentally because
this environment fundamentally because
of what a mess it is
of what a mess it is
uh smacks I'm not familiar with hanabe
uh smacks I'm not familiar with hanabe
okay
okay
cool
cool
yeah one10 is nice but these are you
yeah one10 is nice but these are you
know the very similar for these Ms I
know the very similar for these Ms I
don't know we'll see my general policy
don't know we'll see my general policy
with algorithms is I wait to see if they
with algorithms is I wait to see if they
stick around and if people actually like
stick around and if people actually like
them and then I look at them because
them and then I look at them because
I've literally wasted months before on
I've literally wasted months before on
things that looked promising like uh the
things that looked promising like uh the
dreamer V3 paper for instance that
dreamer V3 paper for instance that
looked super promising right well turns
looked super promising right well turns
out not really wasted 10,000 compute
out not really wasted 10,000 compute
hours on
it maybe some sort of dqn based thing
it maybe some sort of dqn based thing
maybe for
so data G
so data G
type yeah let let's get back to coding
type yeah let let's get back to coding
this thing
um now
Okay so we've got this
Okay so we've got this
now and then we have
cdef
cdef
layers
layers
uh let's do
zero dox
right so you can't have them be the same
name
name
okay we
okay we
have right we have to import
numpy if this works it'll be very
numpy if this works it'll be very
awesome I think it's pretty unlikely
awesome I think it's pretty unlikely
that it does um and then I'm going to
that it does um and then I'm going to
have to rethink a bunch of stuff if it
doesn't uh
H memory view
slice what about if I do this
memory view
slice what if I do
like this work
okay um if I
do
do
test.py if I go here and I try to
test.py if I go here and I try to
populate this with
something so like uh struct data
equals what is it it's uh nump
equals what is it it's uh nump
dot no wait how do you do this again
dot no wait how do you do this again
yeah you have to
do D type. item
do D type. item
size and then it's like equal numpy
size and then it's like equal numpy
doint
doint
8 and then it's going to be like data
8 and then it's going to be like data
struct data is going to
struct data is going to
be from
buffer of data no not
buffer of data no not
view view wreck
something like
this spend a lot of time on data types
this spend a lot of time on data types
here yeah so it's from buffer with the D
here yeah so it's from buffer with the D
type. view Rec
array uh and then what we do is we do
array uh and then what we do is we do
struct
struct
data dox equals nump a range 10 + three
data dox equals nump a range 10 + three
or plus yeah three so now we have
or plus yeah three so now we have
something to look
something to look
at um
test Ah that's interesting so yeah you
test Ah that's interesting so yeah you
can't
do you can't do it like this obviously
do you can't do it like this obviously
so it's going to be
so it's going to be
50 uh
50 uh
dot let's do like one
dot let's do like one
51 that reshape 10
five could not
broadcast into input from shape 105 into
broadcast into input from shape 105 into
shape 50 why
not 50
this not
this not
the is this not the shape that I think
the is this not the shape that I think
it
is if we can use this as the data
is if we can use this as the data
structure back end for our environment
structure back end for our environment
it's going to be very
nice struct data
well it shouldn't just be
50 we should be able to dot like reshape
50 we should be able to dot like reshape
right do reshape 105 Maybe
okay so this looks like it did
something buffer has the wrong number of
something buffer has the wrong number of
dimensions
dimensions
expected
expected
two got
three expected two got
three
oops how do I do this here need to do
oops how do I do this here need to do
dot data
you only need to do data on
pointers let me Google this real quick
pointers let me Google this real quick
just to see if there's an
just to see if there's an
obvious uh
obvious uh
memory slice of rock syon let me just
memory slice of rock syon let me just
see if there's a thing for this
it looks like you can do
this type to memory
view but it doesn't like that this is
2D and says it got the wrong number of
Dimensions I think you need to give it
Dimensions I think you need to give it
the right number of bites
maybe let's see if we give this the
maybe let's see if we give this the
right number of bites right here
does it say
does it say
expected expected two Dimensions got
expected expected two Dimensions got
three dimensions is that what it
said why does it
said why does it
expect two
expect two
Dimensions when it is a struct
uh 2D
uh 2D
typed memory view of struct
scon
now now this is the opposite
now now this is the opposite
problem 2D Plus plus memory
problem 2D Plus plus memory
views struct definition array of memory
views single continuous type memory
view nope this
view nope this
is not what we're looking
is not what we're looking
for um
you can technically create it from the
you can technically create it from the
scon side I'd rather not do that
though struct definition with typed
though struct definition with typed
memory view as member
no when you want to assign this to a
no when you want to assign this to a
struct
struct
right I don't want to cast it to a
right I don't want to cast it to a
pointer
can I do likees type player or
something I think even a 1D so if I just
something I think even a 1D so if I just
do like this I cut 2D I think I can
do like this I cut 2D I think I can
generalize it type memory view
obstruct no it's the opposite thing
what I'm trying to do here is I'm trying
what I'm trying to do here is I'm trying
to
to
get this
get this
data I'm trying to make this into a 2d
data I'm trying to make this into a 2d
array of strs so this extra Dimension
array of strs so this extra Dimension
here should get crunched into the
here should get crunched into the
struct but for some reason it's not it
struct but for some reason it's not it
is not
is not
cooperating and I can't find docks on
cooperating and I can't find docks on
how to do this but it does look like
how to do this but it does look like
it's
supported I thought I'd seen a post that
supported I thought I'd seen a post that
was
was
like reasonable before
array of
array of
structs like to fill a long array of
structs like to fill a long array of
strs from
C do you need to cast it like
this hold the character
this hold the character
array way to do this in
syon doesn't like mixing arrays with
syon doesn't like mixing arrays with
scalar
arrays well this one has without a
arrays well this one has without a
cast so here they passed a structured
cast so here they passed a structured
array and then they just assign
array and then they just assign
it so what if I do it this way what if I
it so what if I do it this way what if I
pass the structured array right
um I can do that right I can do struct
um I can do that right I can do struct
data Maybe This does it maybe that
data Maybe This does it maybe that
actually would save me some if this
actually would save me some if this
worked that would actually make it
worked that would actually make it
easier ooh this looks like it does
easier ooh this looks like it does
work
so and I'm learning more and more about
so and I'm learning more and more about
um the way to do stuff with syon and
um the way to do stuff with syon and
it's getting like increasingly Compact
it's getting like increasingly Compact
and
Powerful let's see see what this why
Powerful let's see see what this why
this doesn't like
this doesn't like
it cannot take the address of a memory
it cannot take the address of a memory
slice
okay cannot convert player slice to
okay cannot convert player slice to
player
player
star that's fine
right no attribute
X about like this
uh it's not giving me the
full
full
interesting let's uh let's do it right
interesting let's uh let's do it right
like this C
like this C
def player star player pointer
def player star player pointer
it's going to be like
it's going to be like
this and again we cast and then we print
this and again we cast and then we print
player pointer dot
player pointer dot
xes this give me an
error uh this terminal is not giving me
enough where is it I need more
enough where is it I need more
background on this
where is
where is
the the history of
it can I seriously not set the scroll
it can I seriously not set the scroll
history on this
thing windows
am I just not seeing it I could have
am I just not seeing it I could have
sworn I said this just the other
sworn I said this just the other
day green buffer
size this work now
no cannot convert point to a pointer
no cannot convert point to a pointer
type that might have
worked yeah yeah so that's it so now do
worked yeah yeah so that's it so now do
I get the full error
message this should give me the full
message this should give me the full
error
right cannot convert to a pointer type
okay so this
okay so this
is yeah it's giving me an internal
error which is kind of weird because
error which is kind of weird because
this should be able to be converted to a
this should be able to be converted to a
pointer type
right oh I think I know what it is
right oh I think I know what it is
um you just do
it's
it's
player star
player address of 0 0
player address of 0 0
right and then you get to print player
right and then you get to print player
dox I think that's how it works
okay so this only gets us one
value right because this is giving us an
value right because this is giving us an
individual player
okay I think I'm thinking this and this
is I'm overthinking
is I'm overthinking
this I only need vectorized
this I only need vectorized
access from the python side because I'm
access from the python side because I'm
going to be writing Loops in scon
going to be writing Loops in scon
anyways so the way that you would do
anyways so the way that you would do
this is just like
you just like
print like this
right and I just typo this
now we get out of bounds because I uh I
now we get out of bounds because I uh I
went well because I went out of
went well because I went out of
bounds but this is very nice because
bounds but this is very nice because
this will actually give you bounce
this will actually give you bounce
checks and stuff so I won't get any more
checks and stuff so I won't get any more
seg
seg
fults so I did not know that you could
fults so I did not know that you could
do
do
this this actually simplifies my scon a
this this actually simplifies my scon a
whole
lot I mean you still have to CL you
lot I mean you still have to CL you
still have to
you still have to cast it to a
you still have to cast it to a
pointer
pointer
but it's a lot
easier
easier
okay so let's go do this for the main
okay so let's go do this for the main
MOA and this is going to simplify stuff
MOA and this is going to simplify stuff
a lot actually going to be very
nice it's kind of annoying that I'm like
nice it's kind of annoying that I'm like
doing all these syon projects and only
doing all these syon projects and only
discovering these things later
discovering these things later
on because it means I'm going to have to
on because it means I'm going to have to
go back to all my earlier code and like
go back to all my earlier code and like
reformat it like this because this is so
reformat it like this because this is so
much better
right so all we have to do is we do
right so all we have to do is we do
self. players
self. players
equals numpy
do0 self. agents D type equal D
type that's literally it it's so much
simpler OBS players is going to be
num
num
agents
agents
10 D type is going to be dtype
don't need this mess
don't need this mess
right and then self do
right and then self do
creeps uh we don't need op creeps we
creeps uh we don't need op creeps we
just do creeps like
just do creeps like
this Towers is going to just be zeros
this Towers is going to just be zeros
again so much
again so much
easier so so much easier
and then when we make the
environment we just have to pass the
environment we just have to pass the
regular versions we no longer need these
regular versions we no longer need these
flattened annoying
copies and then we get to make stuff
copies and then we get to make stuff
memory views instead of pointers memory
memory views instead of pointers memory
views are way nicer to work with than
views are way nicer to work with than
pointers
oops way way nicer
oops way way nicer
so this player star is now a player
so this player star is now a player
array player memor view
array player memor view
rather and then this player OBS is now a
rather and then this player OBS is now a
player double M view like this 2D M View
player double M view like this 2D M View
and then we have creeps and
towers
towers
and you literally don't even need the
and you literally don't even need the
cast
cast
anymore and you don't even need the dot
anymore and you don't even need the dot
data anymore it's literally just this
data anymore it's literally just this
simple that's actually incredible
simple that's actually incredible
so your entity component system just got
so your entity component system just got
like I used to have to say hey it's kind
like I used to have to say hey it's kind
of hard to set up the entity component
of hard to set up the entity component
system you know you got to do a little
system you know you got to do a little
bit of memory management you got to do a
bit of memory management you got to do a
little bit of stuff and now it's just
little bit of stuff and now it's just
trivial now it's just
trivial now it's just
trivial we're going have to rewrite a
trivial we're going have to rewrite a
couple very uh very small functions here
couple very uh very small functions here
like this git
like this git
player looks more simplified
player looks more simplified
yeah um there definitely some rough
yeah um there definitely some rough
edges on scon but the more I use it the
edges on scon but the more I use it the
more I find stuff like this it's really
more I find stuff like this it's really
really nice what it gives you I mean
really nice what it gives you I mean
this is a trivial entity component
this is a trivial entity component
system that is shared memory between
system that is shared memory between
Python and scyon so you can do highle
Python and scyon so you can do highle
ops that are not performance critical in
ops that are not performance critical in
Python you know you can do your array
Python you know you can do your array
Ops or whatever and then you can do your
Ops or whatever and then you can do your
performance critical stuff in syon and
performance critical stuff in syon and
it runs at c-s speed and all the changes
it runs at c-s speed and all the changes
are immediately reflected to python
are immediately reflected to python
without pbind without anything it's just
without pbind without anything it's just
very transparent and lightweight
so we no longer have to do this array
so we no longer have to do this array
map it's just player OBS PID idx we
map it's just player OBS PID idx we
still have to remember this and Pand
still have to remember this and Pand
otherwise it'll copy but this is the
otherwise it'll copy but this is the
only little bit of
overhead I think that's it actually
because since it's a m view of player
because since it's a m view of player
you can still get the
pointer let's see what we have to
fix and the real nice big advantages of
fix and the real nice big advantages of
um instead of using a pointer uh like
um instead of using a pointer uh like
just a pointer type to represent what is
just a pointer type to represent what is
actually an array of pointers right cuz
actually an array of pointers right cuz
that's what you do you know charar is a
that's what you do you know charar is a
string it's just you just keep reading
string it's just you just keep reading
it now since we have a memory view we
it now since we have a memory view we
actually get bounds checking which means
actually get bounds checking which means
it's actually impossible for us to Segal
it's actually impossible for us to Segal
on uh on any of these data structures
on uh on any of these data structures
which is very very nice for debugging
which is very very nice for debugging
and Dev in
general so we didn't just fix the bug
general so we didn't just fix the bug
from before
from before
we made it literally
we made it literally
impossible for that bug to
impossible for that bug to
exist and now we get reasonable errors
exist and now we get reasonable errors
so we go fix some
so we go fix some
errors but they're like easy non-
errors but they're like easy non-
terrible errors
right um so there is still the matter of
right um so there is still the matter of
casting to a Rec array
right we do still need to cast to a Rec
right we do still need to cast to a Rec
array
H I wonder if I just pass it as a Rec
H I wonder if I just pass it as a Rec
Ray if it's still fine
right like maybe this is just
fine okay so we still get a seg fault
fine okay so we still get a seg fault
here we do have some data types that are
here we do have some data types that are
not
not
bounce
bounce
checked or do we let me
checked or do we let me
see where did we have those print
see where did we have those print
statements from before
very weird that we
very weird that we
are I mean we might be getting these
are I mean we might be getting these
Tech pts on a knit
Tech pts on a knit
right like maybe this
right like maybe this
um maybe it do doesn't know how to deal
um maybe it do doesn't know how to deal
with the rec
with the rec
array where's the first one we assign is
array where's the first one we assign is
it right
it right
here setting up
here setting up
arrays print
setup
setup
Players let's see if this
prints it's probably seg fting on the
prints it's probably seg fting on the
setup code actually
so I want to not just fix this seg fold
so I want to not just fix this seg fold
I want to figure out where it's coming
I want to figure out where it's coming
from and then restructure whatever piece
from and then restructure whatever piece
of code that is so it's impossible to
of code that is so it's impossible to
get Segal
Terrors oh we actually got
a for some reason we actually it didn't
a for some reason we actually it didn't
seg fold immediately and we got a
seg fold immediately and we got a
reasonable
reasonable
error which is from get player of
PID so that is interesting
PID so that is interesting
uh so we have that this thing here can
uh so we have that this thing here can
potentially uh be out of
potentially uh be out of
bounds this target
bounds this target
PID so we'll figure that out let me see
PID so we'll figure that out let me see
if uh it always does
if uh it always does
this yeah so no now we NE now we still
this yeah so no now we NE now we still
get a
get a
Segal and we get the
Segal we get the Segal very
Segal we get the Segal very
early I don't know how that's possible
in
in
it how do we how's it possible to get a
it how do we how's it possible to get a
Segal before we've done
anything well that's bizarre
anything well that's bizarre
right that we're getting a seg
fault is it possible we're getting it
fault is it possible we're getting it
from like somewhere else from RB or
something commment out the Mouse
stuff no
tile how is it that we're getting to
tile how is it that we're getting to
render but we're not getting to anit the
render but we're not getting to anit the
environment
environment
right is it clearing oh oh I think it's
right is it clearing oh oh I think it's
clearing the
clearing the
um I think it's
um I think it's
clearing yeah yeah yeah so if I just put
clearing yeah yeah yeah so if I just put
like here
Trace there we
go okay so this is actually fine um it
go okay so this is actually fine um it
does reset
does reset
correctly and then it's going to
correctly and then it's going to
clear later on so let's just
clear later on so let's just
do
do
clear uh pulse
something is still
clearing oh I just have a clear in the
clearing oh I just have a clear in the
system don't
I not this one
I not this one
yeah os. system clear right here so I
yeah os. system clear right here so I
was just clearing the data we should
was just clearing the data we should
probably not have that set that way for
probably not have that set that way for
debugging okay perfect so now we see
debugging okay perfect so now we see
that you do tile one tile One Source wck
right and then it
uh then it
uh then it
crashes
so I want to see if it gets to the end
so I want to see if it gets to the end
of the render Loop
no it does not get to the end of the
no it does not get to the end of the
render Loop that means something that is
render Loop that means something that is
happening in the render Loop is crashing
happening in the render Loop is crashing
it is quite
it is quite
odd
odd
um this render Loop
um this render Loop
goes R Min our
Max the only thing you're accessing here
Max the only thing you're accessing here
is G isn't
is G isn't
it I mean I actually it could be RB
it I mean I actually it could be RB
ulting
right Source rest Direct Des
re print
R corrupted size versus prev size
corrupted size versus prev
corrupted size versus prev
size
H
H
grid not out of bounding the
grid not out of bounding the
grid size versus PR size what if I just
grid size versus PR size what if I just
don't draw this does it still
crash yep
set map of
tile can I just run it non-human
tile can I just run it non-human
mode if I run
this uh so now we actually we get the
this uh so now we actually we get the
same error but we don't get this egg B
python
python
Malik it's very weird because I'm not
Malik it's very weird because I'm not
malaking
anything unsigned
anything unsigned
long unsigned long
long unsigned long
failed was this happening before I cast
failed was this happening before I cast
to recar
Ray if I
Ray if I
do Players
do Players
recck players. viw let's just try this
recck players. viw let's just try this
to see cuz it's possible that it's just
to see cuz it's possible that it's just
the memory views don't know how to
the memory views don't know how to
handle i' say it's even fairly likely
handle i' say it's even fairly likely
that the memory views just don't know
that the memory views just don't know
how to handle this
how to handle this
right and I actually think that this
right and I actually think that this
would be you go back
would be you go back
to players what is
to players what is
this
see see
see see
players so up
players so up
players C OBS players
players C OBS players
players and let's just
players and let's just
uh the
uh the
creeps
creeps okay and then we pass the C1
creeps okay and then we pass the C1
to
syon C
syon C
players see OBS
players see OBS
players nope
players nope
I don't know why it's uh it's so
I don't know why it's uh it's so
insistent on totally messing everything
insistent on totally messing everything
up bad bad
suggestions
suggestions
you
you uh I think that's correct
right puffer mooba has no attribute
right puffer mooba has no attribute
players help up
we do
we do
have this is supposed to be C
have this is supposed to be C
players the OBS
players sea creeps and sea
Towers we still get this weird
Towers we still get this weird
Malik thing and we just remember we
Malik thing and we just remember we
tested this is correct before
getting player OBS
getting player OBS
9 well maybe we can track it down
now getting player OBS
now getting player OBS
n reset
buffers computed
buffers computed
observations
observations
observation rebuild this oops
rebuild this
so it looks like it's happening on the
so it looks like it's happening on the
attacks
attacks
potentially because it computes all the
observations we have a very easy way to
observations we have a very easy way to
confirm this we can just comment out the
confirm this we can just comment out the
attack
attack
Loop and
Loop and
see what is potentially happening in
see what is potentially happening in
there remember this shouldn't be able to
there remember this shouldn't be able to
Segall
still s bols okay
computed
computed
observations segmentation
fault it doesn't even get to the start
fault it doesn't even get to the start
up here right
is this somehow it's like bolting and
render no it's not getting to
render is it it's resetting correctly
render is it it's resetting correctly
though
though
right no it's not resetting correctly
if I put a break
point okay so it's it's delaying the it
point okay so it's it's delaying the it
the problem is in
the problem is in
reset it looks like
well reset is where compute observations
happens even though it says it computed
happens even though it says it computed
all the
observations if I comment out compute
observations we're going to get there
okay so if I comment out compute
okay so if I comment out compute
observations uh it actually works and it
observations uh it actually works and it
it gets through the first step until I
it gets through the first step until I
assume it gets to compute observations
assume it gets to compute observations
again so if I comment out both compute
again so if I comment out both compute
observations right
observations right
I'm assuming that this will just
I'm assuming that this will just
work and somewhere there's a seg fold in
work and somewhere there's a seg fold in
compute observations that I'm
missing which could just be like weird
missing which could just be like weird
undefined behavior that is not cropping
undefined behavior that is not cropping
up until
later okay so yes this does in fact work
later okay so yes this does in fact work
the Segal is somewhere in compute
the Segal is somewhere in compute
observations so let's just go figure out
observations so let's just go figure out
what the heck
what the heck
I broke over
there so even though that is technically
there so even though that is technically
printing through all of
this I bet you it's this line right here
this I bet you it's this line right here
not working the way I think it
not working the way I think it
is let's just guess
yeah so it is this
yeah so it is this
line so I don't know what this line is
line so I don't know what this line is
doing but it's not doing what I was
doing but it's not doing what I was
intending to do
intending to do
um get player
OB yeah so this is I was trying to copy
I was trying to copy
here so get player OB hold
here so get player OB hold
on get player op gives you a player
on get player op gives you a player
star how do I copy one struct into
star how do I copy one struct into
another into
syon there C
syon there C
syntax you can assign from one to the
other yeah this is a shallow copy so
other yeah this is a shallow copy so
this
this
is not what I wanted
I'm going to do it the dumb way for now
I'm going to do it the dumb way for now
that I know will
work get player OB
player star Target
OB uh so we're going to do Target OB is
OB uh so we're going to do Target OB is
going to be this and then we do Target
going to be this and then we do Target
ob. PID Target ob. X Target ob. y Target
ob. PID Target ob. X Target ob. y Target
ob. health and Target ob.
ob. health and Target ob.
team we're just going to copy the
team we're just going to copy the
properties individually
okay and now this works as
okay and now this works as
intended and we
intended and we
have a very nice representation of our
have a very nice representation of our
data
we have a very
we have a very
nice uh ability now to start building
nice uh ability now to start building
the attack
operations I think we potentially have
operations I think we potentially have
some out of bounds stuff in
some out of bounds stuff in
here uh we will see when I build this
okay this actually runs without seg
okay this actually runs without seg
folting or or anything weird already
folting or or anything weird already
that's
that's
nice we'll do uh where is it render
nice we'll do uh where is it render
mode
mode
human and uh why don't we add like some
human and uh why don't we add like some
health bars and stuff
right so here's our better rendered
right so here's our better rendered
version of this environment we can
version of this environment we can
control our little
control our little
puffer and uh we probably don't want to
puffer and uh we probably don't want to
get too close to the tower because it
get too close to the tower because it
will Merc
you and we can move in eight directions
you and we can move in eight directions
movement could be smoother you know we
movement could be smoother you know we
can do some potentially other stuff uh
can do some potentially other stuff uh
particularly this movement of enemies
particularly this movement of enemies
looks very
looks very
choppy we could potentially render that
choppy we could potentially render that
continuous instead of
continuous instead of
discreet actually wouldn't that be
discreet actually wouldn't that be
ridiculously easy to
ridiculously easy to
do hold on I think that's like
do hold on I think that's like
ridiculously easy to do isn't
it uh it's not going to make a
it uh it's not going to make a
difference for now though because we
difference for now though because we
have the speed set to CLI we have the
have the speed set to CLI we have the
speeds clipped but in the future we will
speeds clipped but in the future we will
actually be able to do it that
way because we do have the position
way because we do have the position
saved as FL
Let's uh let's add some health bars
right we're going to need to get
right we're going to need to get
the player
the player
IDs and the like in order to do all of
this I do wonder if it would be easier
this I do wonder if it would be easier
for us
to the player ID thing
to the player ID thing
works I wish we could just store like
pointers a little bit easier
right the fundamental difficulty in this
right the fundamental difficulty in this
project comes from this mix of having
project comes from this mix of having
like a grid representation for things
like a grid representation for things
that need to be
that need to be
computed uh over things that are nearby
computed uh over things that are nearby
because a grid is more efficient for
because a grid is more efficient for
that
that
and having to have a representation for
and having to have a representation for
um well everything
else
well for now we can just expose the uh
well for now we can just expose the uh
the player IES and that will be
the player IES and that will be
sufficient to get us some health bars
right so what we're going to do is this
right so what we're going to do is this
grid here self.
grid here self.
pids going to be zeros with a 30 in
pids going to be zeros with a 30 in
32 and then it we'll just pass this pids
32 and then it we'll just pass this pids
to
to
CM right here
CM right here
uptp
uptp
pids Ste
MOA this will now take
MOA this will now take
grid
bids int PID map is going to just
be
be
pids we have to remember to subtract one
ni
ni
one and now we have access to
one and now we have access to
pids
pids
so in the render function
here what we can actually do
here what we can actually do
is's
grid yeah we need pids as well now pids
grid yeah we need pids as well now pids
right pids grid PS
right pids grid PS
agents
there let's do
there let's do
grid s.
pids okay so now what we do is we're
pids okay so now what we do is we're
going to do PID it's going to be pids
going to do PID it's going to be pids
of uh the p
of uh the p
position and the position is going to
be use an inj here
be use an inj here
for see we've got main
for see we've got main
R when you finish why don't you upload
R when you finish why don't you upload
this on get as an open source so
this on get as an open source so
everyone can contribute to this to
everyone can contribute to this to
something
something
um all of my work is immediately
um all of my work is immediately
uploaded to get as open source this is
uploaded to get as open source this is
in puffer lib already it's in one of the
in puffer lib already it's in one of the
it's in like a random Dev branch that
it's in like a random Dev branch that
I've been trying to like merge
I've been trying to like merge
technically it's in any config so
technically it's in any config so
everything up until this morning is
everything up until this morning is
already there and then you know as soon
already there and then you know as soon
as I get to a stable spot I'll you know
as I get to a stable spot I'll you know
I'll be making commits throughout the
I'll be making commits throughout the
day so yeah all of my stuff is
day so yeah all of my stuff is
immediately open source and you're more
immediately open source and you're more
than welcome to submit PRS discuss stuff
than welcome to submit PRS discuss stuff
on discord.gg Puffer and otherwise
on discord.gg Puffer and otherwise
contribute to the project that's the
contribute to the project that's the
name of the game
here in R main plus
r yeah so I mean
r yeah so I mean
it's I mean if you want to look at my
it's I mean if you want to look at my
track record of open sourcing stuff um
track record of open sourcing stuff um
so neural MMO is the thing that I've
so neural MMO is the thing that I've
worked on for the last like seven years
worked on for the last like seven years
before this uh this is the Discord this
before this uh this is the Discord this
is the repository right here literally
is the repository right here literally
all of my work from the last how however
all of my work from the last how however
many years all the way from 10 is open
many years all the way from 10 is open
source all of puffer lib so the thing
source all of puffer lib so the thing
that I'm building now full-time all of
that I'm building now full-time all of
puffer give it a star if you would is uh
puffer give it a star if you would is uh
open source from you know 01 wherever 01
open source from you know 01 wherever 01
is in here I guess O2 is the first thing
is in here I guess O2 is the first thing
um that's all open source and all the
um that's all open source and all the
dev branches even are open source uh I
dev branches even are open source uh I
generally don't have cloth Source stuff
generally don't have cloth Source stuff
there are a couple like side things I'm
there are a couple like side things I'm
working on that I don't want to just
working on that I don't want to just
announce just yet so that it'll be you
announce just yet so that it'll be you
know cooler when I finally show it off
know cooler when I finally show it off
but uh I think I'm going to be doing
but uh I think I'm going to be doing
less and less of that in the future I
less and less of that in the future I
think it's going to really just be
think it's going to really just be
everything immediately open source um
everything immediately open source um
because that's been working really well
because that's been working really well
for me so yeah we're definitely looking
for me so yeah we're definitely looking
for more people to get involved with
for more people to get involved with
this type of stuff because I can only do
this type of stuff because I can only do
so much you know I'm one guy
can only push so much
code okay so now we have the
code okay so now we have the
PID um
um which should not be negative one so
um which should not be negative one so
if
if
PID one
PID one
raise
PID
PID
um and then we're going to do
um and then we're going to do
so was it
so was it
player equals
player yeah player is going to be equal
player yeah player is going to be equal
to players
to players
PID or is it agents agents
PID or is it agents agents
PID health is going to be player
Health uh and then when we draw this
Health uh and then when we draw this
this
this
texture what we're going to do is let's
texture what we're going to do is let's
see if super Maven will do it draw a
see if super Maven will do it draw a
health bar
what the
heck oh I see what it's trying to
heck oh I see what it's trying to
do Max wait Min Health yeah it just
do Max wait Min Health yeah it just
needs to be
needs to be
three it's just health over
three it's just health over
three don't need this and then this is
three don't need this and then this is
red then this is what black
should be
green wait no wait
green wait no wait
R did this
backwards
backwards
wait wait TS Times health bar yeah this
wait wait TS Times health bar yeah this
should be
green let's see if the health bars work
green let's see if the health bars work
probably have to debug a couple things
buffer has wrong number of
buffer has wrong number of
Dimensions expected two got one
pids uh
pids uh
well yeah that would make sense this is
well yeah that would make sense this is
health. height health. width minus one
uh well this is passing the correct
uh well this is passing the correct
Dimensions now
Dimensions now
right
right
HS to
HS to
PS I not save the
file oh yeah I guess I just hadn't saved
file oh yeah I guess I just hadn't saved
the file
perfect okay so now we have an out of
perfect okay so now we have an out of
bounds
main R plus
main R plus
r uh it shouldn't be possible for there
r uh it shouldn't be possible for there
to be an out of bounds here
to be an out of bounds here
actually yeah that should not be
possible cuz this is drawing
possible cuz this is drawing
around the central agent
so in that case I'm
so in that case I'm
assuming that I'm using the wrong number
assuming that I'm using the wrong number
somewhere
somewhere
here but I don't see where that would
be R
be R
Min our Max
H do I somehow have the wrong
shape in r in
C let's see like Mayar
uh and then what's
uh and then what's
this r
uh try printing every time yeah I just
uh try printing every time yeah I just
did so it's there's some crazy value for
did so it's there's some crazy value for
uh RNC right now I'm trying to see if I
uh RNC right now I'm trying to see if I
over Road those values anywhere I don't
over Road those values anywhere I don't
see it
see it
though this is not inside of a
though this is not inside of a
loop why would R be
enumerate range R Min and R Max yeah
enumerate range R Min and R Max yeah
that doesn't make any sense to me
um I think I'm going to move this down
um I think I'm going to move this down
because this is you can't put break
because this is you can't put break
points inside of the ray draw Loop
points inside of the ray draw Loop
because
because
it's Raab does some magic under the hood
it's Raab does some magic under the hood
for that but I can put a loop here and I
for that but I can put a loop here and I
can say
height
height
what
huh oh I don't use um I'm not using R
huh oh I don't use um I'm not using R
here at all right
okay yeah I I wrote some really Jank
okay yeah I I wrote some really Jank
Loops here uh it's just supposed to
Loops here uh it's just supposed to
be yeah it's just supposed to be
be yeah it's just supposed to be
R so that's
R so that's
fine so it's just supposed to be R and
C this is what happens when you write
C this is what happens when you write
really garbage code trying to like make
really garbage code trying to like make
stuff fun live on stream
it's not going to be the normal Pace
it's not going to be the normal Pace
that I write stuff is like way slower
that I write stuff is like way slower
than this which would be less
than this which would be less
fun so I go a little faster on streamer
fun so I go a little faster on streamer
I try
I try
to okay invalid
to okay invalid
PID so now we have negative
1 which is weird because we have the
1 which is weird because we have the
grid
grid
tile saying that the uh the grid is not
tile saying that the uh the grid is not
negative
negative
one so this pit should not be negative
one so this pit should not be negative
one as far as I can
tell this is one of the very obnoxious
tell this is one of the very obnoxious
things about having like separate
things about having like separate
representations is you don't have like a
representations is you don't have like a
single known good source of
single known good source of
Truth um
okay
okay
well I guess I've got to figure that out
now
now
so you put it on the pit map here but
so you put it on the pit map here but
when you spawn these things
when you spawn these things
right did they not go on the
right did they not go on the
grid I'm not seeing them on the grid
this is very
this is very
weird speed and quality usually does
weird speed and quality usually does
help to get an MVP quicker if you build
help to get an MVP quicker if you build
publicly yeah I want this to at least be
publicly yeah I want this to at least be
something cool to look
something cool to look
at um the nice thing with snake was like
at um the nice thing with snake was like
while I was building snake I just leave
while I was building snake I just leave
an instance up of it running so like you
an instance up of it running so like you
could watch the really cool thing you
could watch the really cool thing you
know while I'm building
know while I'm building
stuff the snake project was like a
stuff the snake project was like a
really nice thing because it was just
really nice thing because it was just
that was such a small scale easy project
that was such a small scale easy project
by
by
comparison um you know it took this took
comparison um you know it took this took
a week right including like training
a week right including like training
agents and making it super fast and
agents and making it super fast and
everything and this GIF is down sampled
everything and this GIF is down sampled
it really doesn't do it
justice invalid PID
well you I did put pids on the map um
well you I did put pids on the map um
and then when I do move
to I'm always setting
to I'm always setting
PID whenever I'm setting the grid and
PID whenever I'm setting the grid and
I'm always remembering to
I'm always remembering to
oh is this
oh is this
bad into of player
doy know this is this would be different
doy know this is this would be different
so it's you're always setting the new
so it's you're always setting the new
position on the
position on the
grid to be the PID map so if there's
grid to be the PID map so if there's
something if there's an agent on the
something if there's an agent on the
grid it should have a
grid it should have a
PID uh maybe if uh if you like kill one
PID uh maybe if uh if you like kill one
of the agents it screws up or
of the agents it screws up or
something no because if you kill the
something no because if you kill the
agent it just calls
agent it just calls
respawn and when you respawn the pit it
respawn and when you respawn the pit it
moves the agent and when you move the
moves the agent and when you move the
agent it cleans up the
PID so I'm trying to see where what
PID so I'm trying to see where what
other sources of
other sources of
desync there could possibly be uh
desync there could possibly be uh
frankly probably the easiest thing to do
frankly probably the easiest thing to do
is just going to be
is just going to be
to look at these two maps
right I can like just look at the PID
right I can like just look at the PID
map and look at the
grid let's see yeah so I can do just
grid let's see yeah so I can do just
like numpy
where grid uh equal
where grid uh equal
equal I do
agent what's
agent what's
the agent one
right but what did I make the value for
right but what did I make the value for
agent one
three that's
weird feel scon makes it easy to follow
weird feel scon makes it easy to follow
to streamer even if you join Midway with
to streamer even if you join Midway with
C++ and rust and other low Lang B unless
C++ and rust and other low Lang B unless
you've been following for the bit you'd
you've been following for the bit you'd
be pretty lost yeah scon is just really
be pretty lost yeah scon is just really
nice
nice
um I the thing is I like systems and I
um I the thing is I like systems and I
like lowl code I do what I don't like is
like lowl code I do what I don't like is
I don't like the baggage that comes with
I don't like the baggage that comes with
it
it
I don't
I don't
like really shitty error messages with
like really shitty error messages with
no checking because you haven't done any
no checking because you haven't done any
like you just have no runtime checks to
like you just have no runtime checks to
make it fast I don't like the syntax
make it fast I don't like the syntax
overhead that comes with like
overhead that comes with like
nonperformance critical pieces of code
nonperformance critical pieces of code
still having to be strongly
still having to be strongly
typed um and I really don't like having
typed um and I really don't like having
to do a big chunky pbind layer cuz you
to do a big chunky pbind layer cuz you
know your R libraries are pretty much
know your R libraries are pretty much
always in Python so I don't like having
always in Python so I don't like having
to have a big chunky pbind layer in the
to have a big chunky pbind layer in the
middle so scon cuts out the pbind layer
middle so scon cuts out the pbind layer
not required whatsoever it allows you to
not required whatsoever it allows you to
Dev really fast because you can have
Dev really fast because you can have
non-performance critical things in
non-performance critical things in
Python and you can mirror the memory
Python and you can mirror the memory
back and forth and it allows you to do
back and forth and it allows you to do
Native c-speed engineering you have
Native c-speed engineering you have
access to the entire C standard library
access to the entire C standard library
and if you want at the C++ standard
and if you want at the C++ standard
Library as
Library as
well so uh and you have just cleaner tax
well so uh and you have just cleaner tax
for it there a few rough edges but it's
for it there a few rough edges but it's
a really really nice and
a really really nice and
underappreciated
underappreciated
tool definitely
that okay so this is telling me that for
that okay so this is telling me that for
some reason uh grid
some reason uh grid
is the agents aren't on the
is the agents aren't on the
grid I think we saw that at the start
grid I think we saw that at the start
though didn't we
what if I Advance One
what if I Advance One
Step oh if I Advance one step we get
Step oh if I Advance one step we get
invalid
PID 0
two maybe there's something that could
two maybe there's something that could
be other than zero or
two oh
two oh
well it could be a tower
duh Tower equals three or four then you
duh Tower equals three or four then you
do this health draw this health bar up
do this health draw this health bar up
here and then you do I think I can just
here and then you do I think I can just
unindent this
right asset
right asset
Maps Source
Maps Source
wck
yeah what I do
here oh LF
Okay cool so this now works um we just
Okay cool so this now works um we just
need to have this be an integer
need to have this be an integer
according to this
according to this
so yeah because this TS times tile uh TS
so yeah because this TS times tile uh TS
Times health bar is just going to
Times health bar is just going to
be this needs to be cast to an
be this needs to be cast to an
INT
INT
and
and
whoops well that's something we have
whoops well that's something we have
very green puffer fish
very green puffer fish
you like Green
you like Green
puffer and oh look uh so the health bar
puffer and oh look uh so the health bar
works it's just being drawn uh over the
works it's just being drawn uh over the
entire puffer fish so let's fix
that so this is X x chord is
that so this is X x chord is
fine uh this is the y coordinate which
fine uh this is the y coordinate which
is I think row going down maybe so I
is I think row going down maybe so I
times tile size minus
times tile size minus
eight eight or
eight eight or
something and then
something and then
the uh x coordinate is fine the y
the uh x coordinate is fine the y
coordinate should be like
four puffer with health
four puffer with health
bar look at the puffers with the health
bar look at the puffers with the health
bars
we've got the puffer with the health bar
we've got the puffer with the health bar
you can see if I just touch the tower
you can see if I just touch the tower
real
real
quick it'll attack
quick it'll attack
right so now we've got a little uh we've
right so now we've got a little uh we've
got our little MOA type
thing movement could feel a little bit
thing movement could feel a little bit
smoother you know we'll adjust stuff uh
smoother you know we'll adjust stuff uh
we'll adjust like speeds and stuff but
we'll adjust like speeds and stuff but
so far so good
let's see come friendship
s and uh I like to tweet something every
s and uh I like to tweet something every
couple hours while I'm live just so um
couple hours while I'm live just so um
you know it gets a little bit more
you know it gets a little bit more
engagement helps me
out see if there have been any like cool
out see if there have been any like cool
comments on stuff as
comments on stuff as
well very nice though streams work
getting pretty close to 4K
well yeah um the one thing I really like
well yeah um the one thing I really like
about this is just like I'm pretty much
about this is just like I'm pretty much
doing my normal work maybe with a couple
doing my normal work maybe with a couple
small modifications and just streaming
small modifications and just streaming
it and uh you know puffer is a new thing
it and uh you know puffer is a new thing
uh My Hope longer term is that companies
uh My Hope longer term is that companies
will start using it and that they'll
will start using it and that they'll
want support contracts or extras or
want support contracts or extras or
stuff like that things that will allow
stuff like that things that will allow
me to grow grow puffer even though
me to grow grow puffer even though
everything's free and open source um and
everything's free and open source um and
if I just keep streaming stuff like this
if I just keep streaming stuff like this
and uh people watch it and you know
and uh people watch it and you know
different people see and start using
different people see and start using
puffer I get to spend my time on dev
puffer I get to spend my time on dev
instead of on dumb business stuff uh and
instead of on dumb business stuff uh and
that's way more fun and that's way more
that's way more fun and that's way more
productive so that's the way I look at
productive so that's the way I look at
all this stuff and I have a lot of fun
all this stuff and I have a lot of fun
doing it so it's all good
maybe we should make this
um maybe we should start to make this
um maybe we should start to make this
feel smoother to
play I mean there are a lot of ways we
play I mean there are a lot of ways we
could make this potentially way smoother
could make this potentially way smoother
to play
that's going to require animation
that's going to require animation
smoothing though
smoothing though
um so I think we'll we'll wait a little
um so I think we'll we'll wait a little
bit longer on animation smoothing let's
bit longer on animation smoothing let's
add a couple more things first so these
add a couple more things first so these
things have health now um it would be
things have health now um it would be
nice if we could get them
nice if we could get them
to like click on stuff to attack it
to like click on stuff to attack it
maybe that would be cool
I think that's going to be
needed let me think how hard that would
be not that hard
right well I don't even know if the
right well I don't even know if the
players are attacking each other right
players are attacking each other right
now it doesn't look like they are
now it doesn't look like they are
attacking each other so maybe I should
attacking each other so maybe I should
fix that first and then I'll make sure
fix that first and then I'll make sure
that the uh we can click on the agents
that the uh we can click on the agents
to attack so you'll have like the MOBA
to attack so you'll have like the MOBA
style control and uh for humans we'll
style control and uh for humans we'll
give you the mouse control and then
give you the mouse control and then
obviously the RL agents aren't using a
obviously the RL agents aren't using a
mouse but it'll be very
mouse but it'll be very
similar even though I don't understand
similar even though I don't understand
most of it is pretty CH Vibes in here I
most of it is pretty CH Vibes in here I
got my own project that I'm working on
got my own project that I'm working on
as a watch yeah that's the idea I mean
as a watch yeah that's the idea I mean
this is just like chill
this is just like chill
Dev are you going to tackle creep
Dev are you going to tackle creep
mechanics today oh yeah I don't know
mechanics today oh yeah I don't know
about that the creep mechanics are going
about that the creep mechanics are going
to be the really hard thing I want to
to be the really hard thing I want to
get the um I want to get a lot of the
get the um I want to get a lot of the
core stuff down first right like I want
core stuff down first right like I want
to have a decent feeling character
to have a decent feeling character
controller you know so that they can go
controller you know so that they can go
around they can fight each other they
around they can fight each other they
can fight Towers uh stuff like that and
can fight Towers uh stuff like that and
then from there then we'll look at like
then from there then we'll look at like
creep mechanics and stuff but I want to
creep mechanics and stuff but I want to
get the base of it first um because the
get the base of it first um because the
creep mechanics are going to add like
creep mechanics are going to add like
400 lines of stuff I think to the code
400 lines of stuff I think to the code
base uh I think
base uh I think
probably probably the AI for the creeps
probably probably the AI for the creeps
is going to be like 400
is going to be like 400
um that's going to take a little bit of
um that's going to take a little bit of
thinking so I want to like get
thinking so I want to like get
everything good and clean it up and then
everything good and clean it up and then
add the Creeps in as the next the next
add the Creeps in as the next the next
thing uh all the stuff I'm doing now is
thing uh all the stuff I'm doing now is
going to help with that though because
going to help with that though because
we're getting the data structures into a
we're getting the data structures into a
better place that'll make that easier so
okay so the next thing that we want to
okay so the next thing that we want to
do
do
is write the attacks let's fix up the
is write the attacks let's fix up the
attacks with the new attack system
so Tower attacks
work so the target pit is
work so the target pit is
always it's always negative one
always it's always negative one
right let's comment these just to make
right let's comment these just to make
sure that we're not getting any
attacks and we'll uncommit the attacks
attacks and we'll uncommit the attacks
the Hits and The Kills
computed observation we need to get rid
computed observation we need to get rid
of all the other garbage prints as
well like these were just test
well like these were just test
prints see which of these do we actually
prints see which of these do we actually
need
Tower
Tower
attack need this one
okay so we
have I thought I saw killed in here
have I thought I saw killed in here
somewhere didn't
somewhere didn't
I
attacking I see this attacking team
at okay but is this
at okay but is this
the no attacking should
be this is where the attack print
is huh we have all these attacks and no
is huh we have all these attacks and no
hits that's weird
right let's mute the tower Prince as
right let's mute the tower Prince as
well
well
because there's too much
spam okay so we have
yeah so it's it's always just
yeah so it's it's always just
attacking
attacking
um so it's getting a Target pit it's
um so it's getting a Target pit it's
probably getting
probably getting
itself is what I'd imagine it's probably
itself is what I'd imagine it's probably
like zero is probably itself and it's
like zero is probably itself and it's
not seeing the other agents around it
not seeing the other agents around it
would be my
would be my
guess let me see if that makes
guess let me see if that makes
sense Target
pit1 so it's getting a valid Target pit
getting a Target but the team is the
getting a Target but the team is the
same as the own team so yeah I'd imagine
same as the own team so yeah I'd imagine
that this is probably something in
that this is probably something in
compute
observations let's
observations let's
see
see
so set idx to zero we Loop over this
so set idx to zero we Loop over this
range
uh right here this PID
is oh wait this pit is this pit should
is oh wait this pit is this pit should
be
fine get player PID and
fine get player PID and
idx Target ob. PID is equal to
idx Target ob. PID is equal to
PID I do set the team
H I am still suspicious though of
H I am still suspicious though of
this this
buffer it makes sense to be suspicious
buffer it makes sense to be suspicious
of this
buffer is it possible
that I am just not
that I am just not
passing reasonable actions in
let's see where do I get
attack actions discreete agent idx 2
attack actions discreete agent idx 2
this should be correct this is where I
this should be correct this is where I
would expect the attack to
be I can
be I can
print let's do
um let's do what like attack
see if it's giving me a correct random
data okay so this is giving me what I
data okay so this is giving me what I
would consider reasonable data right
would consider reasonable data right
it's saying
it's saying
that you're getting all sorts of
that you're getting all sorts of
different indices that are
different indices that are
attacking and it's
attacking various different
attacking various different
teams and various different
teams and various different
pids that are not the same as its own
pids that are not the same as its own
PID which is
good uh at 00 though is
weird
weird
dis oh well this is not
dis oh well this is not
assigned so that's just garbage data
assigned so that's just garbage data
that's
fine let's just get a reasonable uh a
fine let's just get a reasonable uh a
reasonable print on like the team so f
agent agent
agent agent
idx
idx
attacking Target
PID that's kind of all I need
right and we'll see if the teams look
right and we'll see if the teams look
reasonable
okay so we have lots of
okay so we have lots of
different uh so this is exactly what I
different uh so this is exactly what I
was expecting here
was expecting here
right it's always attacking itself
which
which
is quite
is quite
odd let's see um Target
odd let's see um Target
PID we've got player is get player of
PID we've got player is get player of
agent
agent
idx and the
idx and the
target to Target
target to Target
PID
PID
wait get player
wait get player
OB agent idx comma
OB agent idx comma
attack is the target
attack is the target
agent idx comma Tech
agent idx comma Tech
so
so
get get player
OB self. player OB of
OB self. player OB of
PID and index which is what we
PID and index which is what we
want so why is this always the same as
want so why is this always the same as
the
the
agent that we are currently getting
did I accidentally update player
somewhere no I don't reassign player
somewhere no I don't reassign player
accidentally anywhere in
accidentally anywhere in
here player is going to be get agent idx
here player is going to be get agent idx
and then I get
and then I get
the the
target wait this is compute
target wait this is compute
observation and we get the player
observation and we get the player
index set all the pids to negative 1
and pit is equal
and pit is equal
to hi map at row and
column get the
column get the
player we assign the target observation
player we assign the target observation
to get this player
to get this player
wa get
wa get
player
OB
OB
yes and then we assign the
PID
H quite odd
Target pit
is not equal to negative 1 it's always
is not equal to negative 1 it's always
the same as my own
pit I don't know
pit I don't know
this is why this like indirect pit
this is why this like indirect pit
manipulation stuff is so
annoying um I guess I should just start
annoying um I guess I should just start
putting some prints in computer
putting some prints in computer
observations um let's do
like if
PID let's see if we can see agent C's
PID let's see if we can see agent C's
PID like this
PID like this
let's see if that code ever
triggers you should definitely be able
triggers you should definitely be able
to see each
other okay they they all see each other
other okay they they all see each other
right this is not the issue
this is going to return you a player
this is going to return you a player
Star right it didn't mess up
somehow because this should still be a
reference yeah and this is valid because
reference yeah and this is valid because
I'm setting all of these
I should just be able to print like uh
I should just be able to print like uh
self.
self.
get uh. health maybe let's just make
get uh. health maybe let's just make
sure it's updating
correctly yeah so it is actually
correctly yeah so it is actually
correctly
updating it looks to me like
updating it looks to me like
this compute observation should be
this compute observation should be
fine uh get player
fine uh get player
OB oh
OB oh
wait this is
wait this is
it this is wrong right
it this is wrong right
here
here
it's agent idx
you want to get the observation of the
you want to get the observation of the
current
player it's the observation by the
player it's the observation by the
current player of the target that's
current player of the target that's
why let's see if this fixes it
perfect now they're attacking each other
perfect now they're attacking each other
you can
see very
see very
nice well I didn't show it on the screen
nice well I didn't show it on the screen
I'll show that in a second let me just
I'll show that in a second let me just
get rid of these prints and I'll show it
see now they're
see now they're
fighting and whenever they come into
fighting and whenever they come into
view of each other they can choose to
view of each other they can choose to
they can essentially choose to click on
they can essentially choose to click on
each other whenever they're in view of
each other whenever they're in view of
each
each
other and this is the puffer that I'm
other and this is the puffer that I'm
controlling right so I can move this
controlling right so I can move this
puffer around the map this is my tower
puffer around the map this is my tower
so it's fine I if I move to the enemy
so it's fine I if I move to the enemy
Tower not so
Tower not so
fine puffer MOBA
very nice um now what we can do is we
very nice um now what we can do is we
can make it so that I can click I guess
can make it so that I can click I guess
I can click on individual agents um one
I can click on individual agents um one
shouldn't be too
hard so we have the mouse position code
hard so we have the mouse position code
here
here
and uh I want to get mouse click
and uh I want to get mouse click
position
right Mouse
click you call this am MOA and yet you
click you call this am MOA and yet you
haven't been verbally assaulted yet
haven't been verbally assaulted yet
huh ever played
huh ever played
RuneScape the league and DOTA
RuneScape the league and DOTA
communities are the friendliest people
communities are the friendliest people
you'll ever meet after
that I come from
that I come from
MMOs what's the big hey I'm trying to
MMOs what's the big hey I'm trying to
follow along here and there what has
follow along here and there what has
been the biggest limiting variable in
been the biggest limiting variable in
your work hold on one second I dropped a
your work hold on one second I dropped a
chocolate
chip that's not
chip that's not
good that's it okay what's been the
good that's it okay what's been the
biggest limiting variable in your work
biggest limiting variable in your work
finacing academic papers dead inside
finacing academic papers dead inside
projects data
animations will POA be the answer to all
animations will POA be the answer to all
your prayers for
your prayers for
RL so I mean there have been several
um I'd say that there's a huge amount of
um I'd say that there's a huge amount of
friction between what the accademic Comm
friction between what the accademic Comm
Community considers to be like good
Community considers to be like good
publishable
publishable
work and what is actually important for
work and what is actually important for
RL to make
RL to make
progress there's just a lot of
progress there's just a lot of
pedantic
pedantic
gatekeeping and it really made it very
gatekeeping and it really made it very
hard during my PhD to do the type of
hard during my PhD to do the type of
work that I wanted and to publish the
work that I wanted and to publish the
type of work that I wanted I mean I got
type of work that I wanted I mean I got
to the point where basically I could
to the point where basically I could
consistently get papers published if I
consistently get papers published if I
wrote what I considered to be a bad
wrote what I considered to be a bad
paper emphasizing all the points that I
paper emphasizing all the points that I
didn't think were important um and if I
didn't think were important um and if I
wrote like the good paper I wanted to
wrote like the good paper I wanted to
write it wouldn't get
write it wouldn't get
accepted
accepted
so being out of Academia now I'm no
so being out of Academia now I'm no
longer in Academia right that's no
longer in Academia right that's no
longer an obstacle it's an obstacle to
longer an obstacle it's an obstacle to
promoting my work because it means it's
promoting my work because it means it's
harder to promote it to that community
harder to promote it to that community
but um the dev speed has just gone up so
but um the dev speed has just gone up so
fast like what puffer lib has done in
fast like what puffer lib has done in
the last two months I would have not
the last two months I would have not
expected to be remotely possible just
expected to be remotely possible just
like a year ago and we are rapidly
like a year ago and we are rapidly
getting to the point where RL is going
getting to the point where RL is going
to be a different field in a few months
to be a different field in a few months
actually if you look at what puffer lib
actually if you look at what puffer lib
is is now if you're actually using
is is now if you're actually using
puffer lib for Stuff RL is a different
puffer lib for Stuff RL is a different
game than it was two months ago
game than it was two months ago
completely different game um and it's
completely different game um and it's
just going to keep ramping up from here
just going to keep ramping up from here
because this is what now what I'm doing
because this is what now what I'm doing
full-time and I have I basically have no
full-time and I have I basically have no
other objectives that are impeding me
other objectives that are impeding me
from just making RL work that's just
from just making RL work that's just
what I'm doing is making RL
work let me show you the um the puffer
work let me show you the um the puffer
result from
result from
today this
today this
morning I posted this on Twitter so this
morning I posted this on Twitter so this
is is one of the environments I wrote it
is is one of the environments I wrote it
transs at a million steps per second I
transs at a million steps per second I
ran overnight over 100 experiments on it
ran overnight over 100 experiments on it
uh with carbs hyper pram sweep all
uh with carbs hyper pram sweep all
automated and it's just like decimated
automated and it's just like decimated
all of the best things that I could come
all of the best things that I could come
up with overnight completely
up with overnight completely
automatically this is the type of thing
automatically this is the type of thing
that happens when you combine good
that happens when you combine good
infrastructure with ultra high
infrastructure with ultra high
performance
performance
engineering um and it's just going to be
engineering um and it's just going to be
more and more of this you know right now
more and more of this you know right now
it's a million steps per second for this
it's a million steps per second for this
environment soon it'll be a million
environment soon it'll be a million
steps per second on like a full mobile
steps per second on like a full mobile
and on other environments I'm
and on other environments I'm
developing how to reform the academic
developing how to reform the academic
Community you can't I tried for years
Community you can't I tried for years
you can't
you can't
um it doesn't work you just you have to
um it doesn't work you just you have to
build the tools outside of Academia and
build the tools outside of Academia and
they'll gladly use all your tools you
they'll gladly use all your tools you
know they'll gladly use all your stuff
know they'll gladly use all your stuff
um but you really just have to wait for
um but you really just have to wait for
like the new generation of PhD students
like the new generation of PhD students
who use your stuff for years um to like
who use your stuff for years um to like
move into the positions you know move
move into the positions you know move
into those professorship and Industry
into those professorship and Industry
positions because at the moment it's
positions because at the moment it's
it's actually impossible to get stuff
it's actually impossible to get stuff
done
done
um I uh I'm not going at least at the
um I uh I'm not going at least at the
moment I have no plans to go to RL comp
moment I have no plans to go to RL comp
this year because my puffer paper which
this year because my puffer paper which
you know that's the result of well over
you know that's the result of well over
a thousand hours of work and I think my
a thousand hours of work and I think my
best work uh got rejected with one
best work uh got rejected with one
review by a language model review was
review by a language model review was
written by a language model that made
written by a language model that made
some stuff about my paper and then one
some stuff about my paper and then one
like kind of rambly senior review that
like kind of rambly senior review that
didn't really make any sense and uh you
didn't really make any sense and uh you
know no appeal no nothing it's insane
know no appeal no nothing it's insane
like the state of Academia is just
like the state of Academia is just
pathetic and you know there's no point
pathetic and you know there's no point
in me trying to reform it I'm just like
in me trying to reform it I'm just like
I've tried very hard I've already spent
I've tried very hard I've already spent
during my PhD I spent several hundred
during my PhD I spent several hundred
hours maybe thousand hours you know
hours maybe thousand hours you know
fighting this trying to do it trying
fighting this trying to do it trying
everything I could possibly think of I
everything I could possibly think of I
Ran competitions I ran like three
Ran competitions I ran like three
different competitions they took me
different competitions they took me
thousands of hours to run there was
thousands of hours to run there was
great personal expense involved in that
great personal expense involved in that
there was great financial expense um you
there was great financial expense um you
know there was a lot of coordination
know there was a lot of coordination
that was needed it took like open source
that was needed it took like open source
people I tried doing that I tried
people I tried doing that I tried
organizing a workshop that that didn't
organizing a workshop that that didn't
go through because you know freaking
go through because you know freaking
academic Community I tried uh you know
academic Community I tried uh you know
I've tried like organizing local stuff
I've tried like organizing local stuff
um I've talked to like many people at
um I've talked to like many people at
these places um I've like I put together
these places um I've like I put together
an open letter that kind of went through
an open letter that kind of went through
as well
as well
um and like I got I got one result I
um and like I got I got one result I
guess out of this but it's just so hard
guess out of this but it's just so hard
and so much time to do this I'll show
and so much time to do this I'll show
you one thing I'm really proud of that I
you one thing I'm really proud of that I
that I did get to happen so I I put this
that I did get to happen so I I put this
open to letter letter together
NPS I it really just pisses me off even
NPS I it really just pisses me off even
talking about it it's just like it's so
talking about it it's just like it's so
sad like I wrote this like super rambly
sad like I wrote this like super rambly
post like hey RL infrastructure sucks
post like hey RL infrastructure sucks
and it's our fault or something like
and it's our fault or something like
that and it really is like this is just
that and it really is like this is just
self it's this is own goal this whole
self it's this is own goal this whole
thing is just own
thing is just own
goal um okay so right here we have uh
goal um okay so right here we have uh
this track this is the nurs data sets
this track this is the nurs data sets
and benchmarks track so full paper track
and benchmarks track so full paper track
uh welcomes all work on Yad yada and
uh welcomes all work on Yad yada and
open source libraries and tools that
open source libraries and tools that
enable or accelerate RL uh ml research
enable or accelerate RL uh ml research
and then it's actually it's stated twice
and then it's actually it's stated twice
um it's it's also up here in the
um it's it's also up here in the
Preamble so uh this was the result of my
Preamble so uh this was the result of my
my open letters they directly added this
my open letters they directly added this
language into the call so hopefully it's
language into the call so hopefully it's
slightly easier to get these types of
slightly easier to get these types of
papers accepted under this um I mean but
papers accepted under this um I mean but
this is really just like it's still so
this is really just like it's still so
easy for entrenched reviewers to just
easy for entrenched reviewers to just
blatantly ignore the instructions so
blatantly ignore the instructions so
really you can't do anything uh
unfortunately and yeah literally
unfortunately and yeah literally
reviewer number two is now a language
reviewer number two is now a language
model my most recent one it like the
model my most recent one it like the
review was it made up four different
review was it made up four different
typos that were not in my paper and then
typos that were not in my paper and then
biased the rest of the review process
biased the rest of the review process
and there's still no appeal for
and there's still no appeal for
that it's just
pathetic complete own goal as well like
pathetic complete own goal as well like
this is our fault
um but I'm out of it now I'm no longer
um but I'm out of it now I'm no longer
trying to change Academia from Academia
trying to change Academia from Academia
I'm just going to build good tools
I'll write some blog posts and stuff not
I'll write some blog posts and stuff not
doing the paper game
anymore Mouse X Mouse y I have to
anymore Mouse X Mouse y I have to
convert this to a tile position I
convert this to a tile position I
believe so this is just going to be
this is R Min plus no yeah rmen and then
this is R Min plus no yeah rmen and then
this is no this is C this is
rmen okay now we have Mouse and mouse
y so now we can do
y so now we can do
Target PID is going to be pids of mouse
Target PID is going to be pids of mouse
Y and mouse
Y and mouse
X
um we can do if the target pit is equal
um we can do if the target pit is equal
to is not negative 1 then Target is
to is not negative 1 then Target is
going to be agents of Target
going to be agents of Target
pit
pit
and uh now we have to find it in our
and uh now we have to find it in our
observations
maybe
right index of or
something we'll do like attack equals
zero
zero
range and
range and
OBS
OBS
players zero I is equal to Target pit
players zero I is equal to Target pit
attch equals I break yeah this is just
attch equals I break yeah this is just
some garbage code to try to Target stuff
some garbage code to try to Target stuff
with the
with the
attacks we'll see if this
attacks we'll see if this
works and oh yeah we have to return the
works and oh yeah we have to return the
attack don't
attack don't
we uh where's
action actually equals
none I do like right here
right see if this works
only
only
integers okay I have to make this in one
integers okay I have to make this in one
second let me just turn the AC
down PE amazing work regardless the old
down PE amazing work regardless the old
gen will be forced to adapt and adopt
gen will be forced to adapt and adopt
the change or be repl yeah I mean that's
the change or be repl yeah I mean that's
kind of just the idea is just like stop
kind of just the idea is just like stop
trying to play a weird status game with
trying to play a weird status game with
like an entrenched Community start
like an entrenched Community start
building good stuff that people want to
building good stuff that people want to
use and you
use and you
know if people want to keep training
know if people want to keep training
Atari and like with increasingly fancy
Atari and like with increasingly fancy
math at 500 steps per second that's on
math at 500 steps per second that's on
them um we'll just be over here with a
them um we'll just be over here with a
really simple code training at like a
really simple code training at like a
100 times their speed very soon and you
100 times their speed very soon and you
know it's not going to matter
right these Sims are going to be a big
right these Sims are going to be a big
part of it as well because like you need
part of it as well because like you need
complex tasks that run fast right you
complex tasks that run fast right you
just really need complex tasks that run
just really need complex tasks that run
fast we can't be doing research on like
fast we can't be doing research on like
slow simple problems
okay so that emulation dopy looks simple
okay so that emulation dopy looks simple
you can go look at the revision history
you can go look at the revision history
of that file over the last like you know
of that file over the last like you know
all the different versions of perer that
all the different versions of perer that
concept and that implementation alone
concept and that implementation alone
was like hundreds of hours of work um
was like hundreds of hours of work um
because it didn't always use numpy
because it didn't always use numpy
structure data types it had like really
structure data types it had like really
customized scon stuff to do the same
customized scon stuff to do the same
thing and like it that went through
thing and like it that went through
several different iterations
several different iterations
um so yeah it's really simple now but
um so yeah it's really simple now but
and this is kind of what I pride myself
and this is kind of what I pride myself
on right like I work really hard to make
on right like I work really hard to make
stuff that simple now the problem is
stuff that simple now the problem is
when you submit stuff like that to
when you submit stuff like that to
Academia they go well that's so simple
Academia they go well that's so simple
it doesn't need to be published right
it doesn't need to be published right
it's like almost if you made it worse if
it's like almost if you made it worse if
you made it more complicated that's
better that one emulation file right
better that one emulation file right
there that one little uh that one little
there that one little uh that one little
feature Cuts Like thousands to tens of
feature Cuts Like thousands to tens of
thousands of lines of code out of every
thousands of lines of code out of every
reinforcement learning library in
reinforcement learning library in
existence like you can just delete all
existence like you can just delete all
of your code that is associated with
of your code that is associated with
structure data processing you don't need
structure data processing you don't need
it anymore emulation that emulation file
it anymore emulation that emulation file
does it and it does it faster and
better so it's pretty nice I'm pretty
better so it's pretty nice I'm pretty
happy with that
uh okay we got Target
PID right I just had to I just forgot a
PID right I just had to I just forgot a
cast that's
cast that's
all uh
all uh
cmen was
cmen was
this in something like
this in something like
this
yeah okay
yeah okay
so here's the puffer
MMO can I click the puffers oh wait you
MMO can I click the puffers oh wait you
have to be able to click the puffers to
have to be able to click the puffers to
to hit the
puffers
puffers
ah oh wait I did click the I clicked it
ah oh wait I did click the I clicked it
that's why it crashed okay so you need
that's why it crashed okay so you need
to
to
do okay you have to pass it OBS players
do okay you have to pass it OBS players
cool
oops it's hard to click stuff now cuz
oops it's hard to click stuff now cuz
everything's moving super fast right but
everything's moving super fast right but
like I just want to see if it
works okay
works okay
whoops
puffer cannot
puffer cannot
compare structured or void to non-void
compare structured or void to non-void
arrays
we're just going to put a break point in
here oh okay you literally just have to
here oh okay you literally just have to
hover their Mouse over them uh
PID okay so you just have to hover the
PID okay so you just have to hover the
mouse over them right now you don't
mouse over them right now you don't
actually have to click them that should
actually have to click them that should
make it
easier can we
easier can we
delete oh
we're hitting it aren't we yeah we're
we're hitting it aren't we yeah we're
hitting it right are we hitting it yeah
hitting it right are we hitting it yeah
we're we're totally hitting
we're we're totally hitting
it it's really hard to track it it's
it it's really hard to track it it's
really hard to track it I'm really bad
really hard to track it I'm really bad
at
at
tracking yeah yeah we got him okay so I
tracking yeah yeah we got him okay so I
think this works I think you actually
think this works I think you actually
can hit stuff obviously the UI like the
can hit stuff obviously the UI like the
ux is really Jank yeah that's totally us
ux is really Jank yeah that's totally us
hitting it uh the ux is really Jank
hitting it uh the ux is really Jank
but I think we have it um
but I think we have it um
cool
so that is the basic attack structure of
so that is the basic attack structure of
uh the basic basic basic element the
uh the basic basic basic element the
attack structure of am MOA
attack structure of am MOA
um got a lot more to do from here
um got a lot more to do from here
there's like the towers the towers need
there's like the towers the towers need
to be attackable um the movement needs
to be attackable um the movement needs
to make actual sense the render needs to
to make actual sense the render needs to
make actual sense so so much to do uh
make actual sense so so much to do uh
let's think what I want to do next I
let's think what I want to do next I
think I want to commit all this first of
all cmoa X
all cmoa X
mooba
mooba
and is this
and is this
it buffer
it buffer
chars and we going to add this test and
chars and we going to add this test and
the C test just so I have them
I'm refresh the experiment as well here
I'm refresh the experiment as well here
to see if it's done anything while I've
to see if it's done anything while I've
been
been
waiting so it goes from 112 experiments
waiting so it goes from 112 experiments
up to 131 experiments and we've got a
up to 131 experiments and we've got a
couple of them that are like
couple of them that are like
close
close
here uh I'd like to see it run longer
here uh I'd like to see it run longer
experiments but it just hasn't found a
experiments but it just hasn't found a
reason to yet these very cool
though
though
cool
um I'm going to use the restroom real
um I'm going to use the restroom real
quick and when I come back I'm going to
quick and when I come back I'm going to
think about what we're going to add next
think about what we're going to add next
to the uh the Moa I think I think it's
to the uh the Moa I think I think it's
probably going to
probably going to
be the ability to attack and Destroy
be the ability to attack and Destroy
Towers something like that now there's a
Towers something like that now there's a
lot of code cleanup that has to be done
lot of code cleanup that has to be done
but let's try to get like some of the
but let's try to get like some of the
basics with the tower Tower system done
basics with the tower Tower system done
first I think we'll add like health bars
first I think we'll add like health bars
to towers and uh we'll make them
to towers and uh we'll make them
attackable and stuff like that so I'll
attackable and stuff like that so I'll
be right
back
e
e
e
e for
Okay
Okay
so we've got some fun stuff to do
here let's add some health bars to the
here let's add some health bars to the
uh the
uh the
towers
and go from there
probably need to draw a health bar
probably need to draw a health bar
function right
yeah yeah
okay we do health over Max
okay we do health over Max
Health
uh size
uh size
whatever and then we will do
whatever and then we will do
draw a health
draw a health
bar something like this
bar something like this
maybe make sure I didn't break anything
maybe make sure I didn't break anything
and we'll add the health bar for Towers
and we'll add the health bar for Towers
oh obviously I did break something I
oh obviously I did break something I
need to add Max
Health C MOA X
the towers don't have pits though do
they that's very
they that's very
obnoxious I think we're going to have to
obnoxious I think we're going to have to
change either we're going to have to
change either we're going to have to
change the pit system to be
change the pit system to be
pointers or we're going to have to do
pointers or we're going to have to do
something with
something with
it we'll figure that out
PID map
players yeah let's let's add um pids for
players yeah let's let's add um pids for
the
the
towers that'll be a good
idea and then let's add the max health
idea and then let's add the max health
and stuff we're going to do
and stuff we're going to do
Max
Max
Health
Health
oops what the heck is
happening
happening
yeah Max
health and where do I said
health and where do I said
Health
Health
XL who has good RL cont content that you
XL who has good RL cont content that you
learned the most from on
learned the most from on
YouTube
YouTube
um I don't think I did my RL from
um I don't think I did my RL from
YouTube
YouTube
frankly
frankly
um because the thing is I when I started
um because the thing is I when I started
reinforcement learning it was like 2018
reinforcement learning it was like 2018
there really wasn't much out there um
there really wasn't much out there um
Kathy has a couple old blog posts that
Kathy has a couple old blog posts that
are nice if you're looking to learn
are nice if you're looking to learn
stuff I would recommend carpath has some
stuff I would recommend carpath has some
really old blog posts Costa has some
really old blog posts Costa has some
really really good blog posts um and
really really good blog posts um and
then there's like the old spinning up
then there's like the old spinning up
stuff from open AI it's kind of dated
stuff from open AI it's kind of dated
and it has more math than you need but
and it has more math than you need but
really it's just like um you know do the
really it's just like um you know do the
little tiny bit of math to understand
little tiny bit of math to understand
the basics of the algorithms and then
the basics of the algorithms and then
grab clean RL and start hacking on stuff
grab clean RL and start hacking on stuff
um clean RL or puffer lib has like a
um clean RL or puffer lib has like a
souped up version of clean RL as well
souped up version of clean RL as well
though maybe base cleaner all will be
though maybe base cleaner all will be
simpler just for very very simple
simpler just for very very simple
starting stuff um yeah I didn't like
starting stuff um yeah I didn't like
there's not a ton of stuff on YouTube
there's not a ton of stuff on YouTube
for like educational RL stuff that I
for like educational RL stuff that I
think is is super
amazing yeah Fair though
technically my stuff isn't intended to
technically my stuff isn't intended to
be educational it just happens to be
be educational it just happens to be
educational because of the way I build
educational because of the way I build
stuff and because I like answer
stuff and because I like answer
questions um this is really more of like
questions um this is really more of like
watch Cutting Edge RL progress happen
watch Cutting Edge RL progress happen
live um because that's what this is uh
live um because that's what this is uh
the types of Sims I'm building here have
the types of Sims I'm building here have
never been built before at least not
never been built before at least not
been built and made widely available um
been built and made widely available um
they've never been built in this way a
they've never been built in this way a
way this simple the infrastructure in
way this simple the infrastructure in
puffer lib has never been built before
puffer lib has never been built before
so like this is all basically new
so like this is all basically new
territory for RL and the field is very
territory for RL and the field is very
rapidly changing in a matter of months
rapidly changing in a matter of months
so that's kind of the idea behind
so that's kind of the idea behind
this plus it's fun it's fun to stream
this plus it's fun it's fun to stream
this
stuff a lot of the math in RL is like
stuff a lot of the math in RL is like
super overhyped it's not that hard um
like for instance did you know that the
like for instance did you know that the
main algorithm po it has this really
main algorithm po it has this really
fancy loss function but for like the
fancy loss function but for like the
most common use case all the terms
most common use case all the terms
cancel out and it it like reduces to
cancel out and it it like reduces to
something way
something way
simpler stuff like that
hard code some
hard code some
Towers it's not even a telescoping
Towers it's not even a telescoping
series it's way simpler than that it's
series it's way simpler than that it's
literally like Po the point of PO is
literally like Po the point of PO is
that like you can train using stale data
that like you can train using stale data
old data and it not blow up the learning
old data and it not blow up the learning
process but the thing is if your
process but the thing is if your
simulator is fast there's no need to
simulator is fast there's no need to
train with stale data you always have
train with stale data you always have
fresh data right so like half of the
fresh data right so like half of the
point of Po just goes out the window and
point of Po just goes out the window and
it's just called pop because like Po is
it's just called pop because like Po is
the algorithm that has the specific
the algorithm that has the specific
boltons like bolted on stuff that people
boltons like bolted on stuff that people
generally use like the main thing that
generally use like the main thing that
PO does is not even super critical um
PO does is not even super critical um
yeah it's pretty funny
wait is there a blog post for something
wait is there a blog post for something
what you're referencing with
what you're referencing with
po um it's something that I noticed a
po um it's something that I noticed a
long time ago and of course Costa has a
long time ago and of course Costa has a
paper on it because you know Costa does
paper on it because you know Costa does
Costa is awesome
Costa is awesome
um so like Costa po
um so like Costa po
special okay this is the awesome blog
special okay this is the awesome blog
post uh on PO itself and then I there's
post uh on PO itself and then I there's
some archive paper on it but
like like
like like
really the concept is very simple so
really the concept is very simple so
there's this I think I can even just
there's this I think I can even just
prove it in the math right here so not
prove it in the math right here so not
this not this is see
this
clipped where is this stupid thing
okay so I guess this is technically it
okay so I guess this is technically it
there's this KL term here between the
there's this KL term here between the
old weights this is Pi Pi Theta old this
old weights this is Pi Pi Theta old this
just says this is a Divergent so how
just says this is a Divergent so how
different is the old policy from the new
different is the old policy from the new
policy right
policy right
and yeah this is like a version of it so
and yeah this is like a version of it so
this is the KL so you have uh policy old
this is the KL so you have uh policy old
uh a policy and policy old so the old
uh a policy and policy old so the old
weights uh on the bottom and the new
weights uh on the bottom and the new
weights on the top but the thing is the
weights on the top but the thing is the
first time you take a step so the first
first time you take a step so the first
step that you take with
step that you take with
po po uh this the network hasn't been
po po uh this the network hasn't been
updated yet so the policy is the old
updated yet so the policy is the old
policy so this term is just
policy so this term is just
one um so this whole thing just cancels
one um so this whole thing just cancels
out uh and then this KL term cancels out
out uh and then this KL term cancels out
as well because the Divergence between
as well because the Divergence between
something in the exact same thing is
something in the exact same thing is
there there's no Divergence there um so
there there's no Divergence there um so
like this whole thing just cancels out
like this whole thing just cancels out
if you're essentially just taking one
if you're essentially just taking one
step per batch of fresh data that you
step per batch of fresh data that you
get now in practice sometimes you need
get now in practice sometimes you need
mini batches and there are like other
mini batches and there are like other
things that can happen but in principle
things that can happen but in principle
like this doesn't really do anything if
like this doesn't really do anything if
you have fresh data
constantly that's enough math for today
constantly that's enough math for today
my head hurts math is hard
math
bad since I see a couple new folks in
bad since I see a couple new folks in
here um if you haven't started puffer
here um if you haven't started puffer
lib the repository please go ahead and
lib the repository please go ahead and
do that it uh it helps me out a lot so
do that it uh it helps me out a lot so
I'll open source Dev puffer lib
I'll open source Dev puffer lib
repository right
repository right
here including the project I'm working
here including the project I'm working
now on now it's all open source in
there so I have to add Target pids
really obnoxious how this works I can do
really obnoxious how this works I can do
um I
um I
get
get
DF Tower get Tower
DF Tower get Tower
Min self.
agents think like this
losing a little bit of steam
here think I just have to add the towers
here think I just have to add the towers
to the pit map right
if I do yeah so let's just do like so I
if I do yeah so let's just do like so I
add to the Tower and then I do self. PID
add to the Tower and then I do self. PID
map tower. y Tower dox not equal to
map tower. y Tower dox not equal to
negative 1 it's equal to I plus s.
negative 1 it's equal to I plus s.
AG right
okay so the towers
okay so the towers
attack players and then the agents can
attack this is awkward because this is
attack this is awkward because this is
typed
kind of want like a union type thing
here let's do Tower
here let's do Tower
star no actually we already have a tower
star no actually we already have a tower
we can just reuse
it all right
so if we have less than numb agents then
so if we have less than numb agents then
we just use
we just use
this
this
else Tower is going to be get
Tower so we're attacking a tower say if
Tower so we're attacking a tower say if
tower. team is not equal to the player.
tower. team is not equal to the player.
team then we
team then we
do tower. Health minus equal 1
do tower. Health minus equal 1
and if it's less than
zero self.
zero self.
Grid it's going to be empty map is
Grid it's going to be empty map is
negative
negative
one I don't know maybe something like
one I don't know maybe something like
this will do it
we are not going to be able to see the
we are not going to be able to see the
health bars yet so let's let's fix that
health bars yet so let's let's fix that
let's add some health bars to these
let's add some health bars to these
towers
right
power need the tower struck as well now
power need the tower struck as well now
I'm just blowing up I mean we're going
I'm just blowing up I mean we're going
to have to do a big refactor at some
to have to do a big refactor at some
point because of this code is a mess
Towers right right here
right right after agents
right right after agents
So Soft do
Towers so and we do
Towers so and we do
towers and we
towers and we
do draw a health
do draw a health
bar I think
let's see how that
does index 20 is out of
bounds because I did the indexing
wrong uh numb agents is
wrong uh numb agents is
not provided so it's we're just going to
not provided so it's we're just going to
do players. shape
do players. shape
there is it
there is it
agents
attacking okay so we actually have it
attacking okay so we actually have it
oops get players now
wrong work for just a
moment get observations
okay LF pit is less than num
okay LF pit is less than num
agents then we do all this
agents then we do all this
right
right
else we get the
else we get the
tower and that's uh this is fine right
tower and that's uh this is fine right
tower
tower
PID
PID
to what does it have no it has
to what does it have no it has
team health max Health
team health max Health
damage probably have PID right
yeah it needs to have
PID so you can damage it
right PID team health
okay right
here so we do Target
OB let get player
OB oh yeah this is
fine get Tower PID minus num agents then
fine get Tower PID minus num agents then
it gets PID it gets Target OB
it gets PID it gets Target OB
dot uh team which is already has it gets
Health it
Health it
gets this is fine
okay so now we have the
Towers
oops few last bugs it looks
like we have
like we have
uh Target
uh Target
PID right so here uh this has to
PID right so here uh this has to
potentially
potentially
be if Target PID
we'll make it slightly nicer right
we'll make it slightly nicer right
equals
equals
1 then attack is going to be zero
oops
oops
LF Target pit is less than
LF Target pit is less than
agum then you do this you get the Agents
agum then you do this you get the Agents
of Target pit right and then uh
or
or
else you
else you
do uh you still have to do this Loop
right you have to
right you have to
nest because this nesting lets you pull
nest because this nesting lets you pull
this
this
back Target this is going to be
back Target this is going to be
Towers we'll see if this works
oh yeah we got the tower you see that we
oh yeah we got the tower you see that we
killed the
killed the
tower but the thing is the tower doesn't
tower but the thing is the tower doesn't
know it's dead so it's still killing me
know it's dead so it's still killing me
but we did Kill the
tower so that's nice
okay so we just say uh if the tower's
okay so we just say uh if the tower's
dead then the tower's dead
okay so we got uh we got the
tower local
tower local
variable let's see so I managed to break
variable let's see so I managed to break
it
try
this oops
uh it's not letting me move
now or it has my keys backwards or
now or it has my keys backwards or
something something weird just
happened
happened
okay yeah this is fine
okay yeah this is fine
weird how that happened that it
like does this die
eventually doesn't appear to which is
eventually doesn't appear to which is
very
odd I also don't understand how um it
odd I also don't understand how um it
like the tower died instantly when I hit
like the tower died instantly when I hit
it before right
tower. team Tower health is subtracted
tower. team Tower health is subtracted
one if the tower health is less than
one if the tower health is less than
equal zero then you remove
it maybe I can just hit it
once and also give them more Health that
once and also give them more Health that
might help
hold on I've got something at the
door
e
e
e
e
e
e
e e
okay
okay
um salesman but not a bad salesman
um salesman but not a bad salesman
apparently AT&T put one gig uh one gig
apparently AT&T put one gig uh one gig
in nearby so let's actually actually let
in nearby so let's actually actually let
me go check the Wi-Fi speeds here cuz I
me go check the Wi-Fi speeds here cuz I
could use a little upgrade for the
could use a little upgrade for the
stream mic still gone yeah mic's still
good yeah I'm supposed to have a gigabit
good yeah I'm supposed to have a gigabit
here so I don't know what the heck this
is yeah that's garbage okay we'll look
is yeah that's garbage okay we'll look
at that
cool
cool
um let's take us let's see if we can
um let's take us let's see if we can
figure out what's happened with our
figure out what's happened with our
Towers I see is that it's it's taken
Towers I see is that it's it's taken
down two of the towers it looks
down two of the towers it looks
like but
like but
um it's taking down two
towers e
health bar code looks
fine could be the damage code
I'm going try increasing the tower
I'm going try increasing the tower
Health a little bit will make the tier
Health a little bit will make the tier
ones have
five oops
oops we had to
recompile
okay and if this works then we have
okay and if this works then we have
basic uh defeatable Towers we've got
basic uh defeatable Towers we've got
really basic
really basic
characters Graphics are crap a
characters Graphics are crap a
movement's crap you know the characters
movement's crap you know the characters
don't even rotate yet but I mean heck I
don't even rotate yet but I mean heck I
could put a 3D render for this if I
could put a 3D render for this if I
wanted it's the same under the hood
wanted it's the same under the hood
right
okay I'm not seeing the health bar move
okay I'm not seeing the health bar move
but it seems like the first time I hover
but it seems like the first time I hover
it it doesn't happen like nothing
it it doesn't happen like nothing
happens so my guess is that it's uh it
happens so my guess is that it's uh it
is
is
actually yeah so right there I hovered
actually yeah so right there I hovered
it before and nothing happened and then
it before and nothing happened and then
it just deleted all at once
so I think that the health is
so I think that the health is
probably the health Cals are probably
probably the health Cals are probably
correct and then for some reason the
correct and then for some reason the
health bar is
health bar is
not
not
working maybe it's because they're both
working maybe it's because they're both
inss
inss
right
right
oops yeah let's do like float
right may be like it's because they're
right may be like it's because they're
both C integer types under the
hood nope that did not help
H tower. health and print the health out
here it says five Health
Right add a print and see what happened
Right add a print and see what happened
to Tower HP y That's what I'm doing
to Tower HP y That's what I'm doing
okay so all of a sudden it uh it went
okay so all of a sudden it uh it went
from five to zero all of a sudden
from five to zero all of a sudden
right it was at five five and it it
right it was at five five and it it
never decreased it just dropped all of a
never decreased it just dropped all of a
sudden which is very weird that it would
sudden which is very weird that it would
do that
do that
um I guess I don't need this float check
um I guess I don't need this float check
python should handle in just fine
anyways and know maybe you can see it my
anyways and know maybe you can see it my
eyes are getting tired uh in a few
eyes are getting tired uh in a few
minutes I'm going to have to go grab uh
minutes I'm going to have to go grab uh
well go make my shake for the
day this is where you do the tower
day this is where you do the tower
damage Cal
damage Cal
here get
Tower oh is this returning um
where's get Tower I mean I would be very
where's get Tower I mean I would be very
surprised if I'd messed this up right
surprised if I'd messed this up right
but where's the function
defined what where did I not to find
defined what where did I not to find
this somewhere oh here it is Tower
star PID minus self. n num
agents this is correct it' be very weird
agents this is correct it' be very weird
for this function to be
wrong oh I think I
wrong oh I think I
know uh did I not
pass no I did pass this correctly I
pass no I did pass this correctly I
thought I didn't provide the type on the
thought I didn't provide the type on the
tower so maybe it copied
wait player creeps Towers
right sea
Towers this created the exact same way
Towers this created the exact same way
that uh players is
created and then we pass out. sea Towers
created and then we pass out. sea Towers
after creeps right
wait towers
of thises health bar
of thises health bar
worked
worked
um the fact that this is
um the fact that this is
drawing it in the first
place I'm going to just do this for a
place I'm going to just do this for a
second I just want to see if it's
second I just want to see if it's
actually picking up the
health see if it's picking up
Health Okay so so right here it says I
Health Okay so so right here it says I
have very low Health right
because and now this one has more health
because and now this one has more health
because it's a stronger Tower
right so it means that the data actually
right so it means that the data actually
has to be
has to be
correctly added in
correctly added in
here it's weird though that you never
here it's weird though that you never
kill this
kill this
Tower I would expect you to eventually
Tower I would expect you to eventually
be able to kill it
you
you
don't you only kill oh wait you do kill
don't you only kill oh wait you do kill
it so it takes a while but you do kill
it so it takes a while but you do kill
it uh and then this one actually has the
it uh and then this one actually has the
wrong amount of
wrong amount of
HP we can see that this is not added
correctly so I'm setting the HP from the
correctly so I'm setting the HP from the
cide so the fact that I can see it means
cide so the fact that I can see it means
that the data is correctly synced
that the data is correctly synced
between Python and C so we don't need to
between Python and C so we don't need to
worry about that
the heck is wrong with it
then oh am I drawing the wrong health
then oh am I drawing the wrong health
bars above each of them that could be a
bars above each of them that could be a
thing right I could be drawing the wrong
thing right I could be drawing the wrong
health bar like it could be decreasing
health bar like it could be decreasing
the health bar of a different
the health bar of a different
one let me say PID minus agent. shape
let's print the
let's print the
PID let's see what this Tower's pit
is okay so this is pit
20 let's see if there's a ah this one
20 let's see if there's a ah this one
right here so this one got
right here so this one got
killed you see so it is just updating
killed you see so it is just updating
the wrong health bar
the wrong health bar
okay
so this is
so this is
ji this is
ji this is
fine PID 20
got all these
towers it's I plus numb
towers it's I plus numb
agents we get the
agents we get the
tower turn PID minus numb
agents maybe I'm decrementing the health
agents maybe I'm decrementing the health
of the wrong Tower let's
of the wrong Tower let's
see
so we get PID
so we get PID
map oh wait this is the player killing
map oh wait this is the player killing
the Tower or the tower killing the
the Tower or the tower killing the
player now the player Tower ah right
here this wrapped around somehow and I
here this wrapped around somehow and I
got negative
indexing let's check this out
so now we have the
so now we have the
puffer and can it attack the tower
whoops well that didn't
help so get Target pit is going to be
help so get Target pit is going to be
the
the
target.
target.
PID
PID
wait this is Tower
PID Tower PID
PID Tower PID
right get tower Tower
right get tower Tower
PID
no get Tower
no get Tower
of what did I have it as before Target P
of what did I have it as before Target P
minus num
minus num
agents where did I get Target PID from
agents where did I get Target PID from
get player
OB Target equal get player OB
I messed up some indexing here somewhere
I messed up some indexing here somewhere
I just don't see where I'm not seeing it
so I even though this is get player OBS
so I even though this is get player OBS
they should have the correct pit in it
they should have the correct pit in it
so is this not just Target
pit just add a print in see what it's
pit just add a print in see what it's
see what PID we're
getting see if it's something reasonable
okay so we
go
go
20 it's right there
wait where do I set the
wait where do I set the
pids oh I don't set the
pids
pids
right I set the pit map but I didn't set
right I set the pit map but I didn't set
the tower pit there we go Sprint
where is
it yeah we're
good it work
no it does not
work that's
bizarre I thought that I fixed it with
bizarre I thought that I fixed it with
that oh wait did maybe wait wait wait no
that oh wait did maybe wait wait wait no
no no hold
no no hold
on get
on get
Tower yeah you can't do get Tower of I
Tower yeah you can't do get Tower of I
right it's got to be I Plus
right it's got to be I Plus
I'm
agents H I'm going to have to refactor
agents H I'm going to have to refactor
this very very heavily probably off
this very very heavily probably off
stream because it'll be boring but um
stream because it'll be boring but um
yeah this
yeah this
like hopefully we just get it working
like hopefully we just get it working
for
for
now and make it
work ah there we go look we uh we I saw
work ah there we go look we uh we I saw
the tower take damage so here we're
the tower take damage so here we're
going to damage this Tower here it's got
going to damage this Tower here it's got
a little bit of Chip damage right we can
a little bit of Chip damage right we can
see it okay we're going to
attack you can actually see the chip
attack you can actually see the chip
damage that the tower takes
damage that the tower takes
right
right
boom then this we can go get ready to to
boom then this we can go get ready to to
attack this Tower except this is our
attack this Tower except this is our
Tower so we can't attack it obviously we
Tower so we can't attack it obviously we
got in range of the other one very nice
got in range of the other one very nice
so we have a very very basic like bare
so we have a very very basic like bare
bare minimum MOA type thing going on
bare minimum MOA type thing going on
here
here
um towers of Stars players are
um towers of Stars players are
puffers if I hover over these puffers
puffers if I hover over these puffers
here by the way they get hit so like you
here by the way they get hit so like you
actually can fight stuff it's just very
actually can fight stuff it's just very
awkward because like they're very
awkward because like they're very
spammy they're very very spammy and the
spammy they're very very spammy and the
movement's too
movement's too
fast but that'll be easy to solve um
fast but that'll be easy to solve um
we'll just like reduce the movement
we'll just like reduce the movement
speed or whatever and you don't have to
speed or whatever and you don't have to
render the you don't have to render the
render the you don't have to render the
puffer on a tile that's very easy to
solve maybe we want to do that right now
even let's do um
I think we don't even have to recompile
I think we don't even have to recompile
for that we can just do agent speed is
for that we can just do agent speed is
going to be 0.5
going to be 0.5
right and
then
then
here it actually might just be done for
here it actually might just be done for
us
us
because yeah main R main
because yeah main R main
C I think it just works for us right
so if I'm I'm holding the up key and
so if I'm I'm holding the up key and
nothing is
happening clearly the speed is applying
happening clearly the speed is applying
to the other puffers not to me though so
to the other puffers not to me though so
let's see what's wrong
when you think about all the things
when you think about all the things
you're going to
you're going to
solve you have like a project management
solve you have like a project management
thing that helps you visualize goals or
thing that helps you visualize goals or
you just go through the motions and like
you just go through the motions and like
oh I'll fix that
oh I'll fix that
next
next
um honestly the only thing that's really
um honestly the only thing that's really
important is getting the lowlevel data
important is getting the lowlevel data
structures
structures
right like everything else
right like everything else
is so this is more lines of code than it
is so this is more lines of code than it
should be by like almost double right
should be by like almost double right
now because I've just been lazy with the
now because I've just been lazy with the
way I've been writing it but the way I
way I've been writing it but the way I
think about things is I as long as I
think about things is I as long as I
keep a project under like 2,000 lines I
keep a project under like 2,000 lines I
can kind of just load the whole project
can kind of just load the whole project
into my head at once
into my head at once
right
right
um so I basically I just solve the next
um so I basically I just solve the next
thing because it doesn't need more
thing because it doesn't need more
structure the cost of adding the
structure the cost of adding the
structure outweighs the benefit
structure outweighs the benefit
doesn't mean that I'm going to keep the
doesn't mean that I'm going to keep the
code looking like this it's going to
code looking like this it's going to
look way nicer and be way more concise
look way nicer and be way more concise
but um I I just keep it short enough
but um I I just keep it short enough
that it's relatively easier to just
that it's relatively easier to just
solve the next thing solve the next
thing I don't
know did you know that if you just solve
know did you know that if you just solve
the next thing thing and you keep
the next thing thing and you keep
solving the next thing eventually all
solving the next thing eventually all
the things are solved
you ain't wrong when you're
you ain't wrong when you're
right
yeah I don't know I've never really
yeah I don't know I've never really
found structure to be useful
found structure to be useful
like the vast ma majority of the time
like the vast ma majority of the time
like when you try to create structure
like when you try to create structure
and you try to like you know put things
and you try to like you know put things
into boxes you're just wrong like you
into boxes you're just wrong like you
come up with stupid boxes you come up
come up with stupid boxes you come up
with stupid structure it's better to
with stupid structure it's better to
just solve the thing and not do the
just solve the thing and not do the
structure and try to like compactify and
structure and try to like compactify and
clean stuff up along the way like that's
clean stuff up along the way like that's
pretty much
it right where's movement and why is it
it right where's movement and why is it
only happening in discreet
only happening in discreet
chunks discretize
D
why I actually don't see why this
why I actually don't see why this
doesn't
doesn't
work like
work like
looks like it should
work doesn't move you on the grid right
work doesn't move you on the grid right
but
but
then this destination here is continuous
then this destination here is continuous
unless I messed that up
somehow player.
somehow player.
y plus agent speed times velocity y
the kicker should be that
the kicker should be that
um for whatever reason the scripted
um for whatever reason the scripted
agents or the the neural agents work and
agents or the the neural agents work and
mine
mine
doesn't let's see why that would
be discretize is true
I assume that the fact that the YouTube
I assume that the fact that the YouTube
counter keeps going to zero and then
counter keeps going to zero and then
going back to two means that like
going back to two means that like
YouTube C doesn't count T tabbed out
YouTube C doesn't count T tabbed out
users so
users so
um it just like whenever people Tab out
um it just like whenever people Tab out
it goes to zero and then whenever
it goes to zero and then whenever
something happens and they tab in it
something happens and they tab in it
goes back to like you know back to two
goes back to like you know back to two
or whatever that took me a second to
or whatever that took me a second to
figure out whereas I think that the
figure out whereas I think that the
twitch one is just Conant I think that
twitch one is just Conant I think that
the twitch one counts background or
something and then the X1 just makes
something and then the X1 just makes
absolutely no sense because it tells you
absolutely no sense because it tells you
total views not concurrent viewers
I really don't see anything that would
I really don't see anything that would
uh
uh
make this Mak sense let me just play
make this Mak sense let me just play
with it a little
bit oh wait no it's
so if I hit this I go left if I just
so if I hit this I go left if I just
keep tapping
keep tapping
left and if I keep tapping up do I go
up but if I hold
up but if I hold
it and just get stuck is that the
it and just get stuck is that the
case that's weird
is key
is key
down gives you the
axis either of them are
axis either of them are
none the action is
none the action is
none
none
print think though I can print my action
print think though I can print my action
out and I think it'll be reasonable
out and I think it'll be reasonable
right
I'm going to just hold the up
I'm going to just hold the up
key yeah so my upkey hold I can
key yeah so my upkey hold I can
see left key yeah so the I can see the
see left key yeah so the I can see the
printouts
printouts
here so it's getting reasonable actions
in and then what is it doing with the
actions it's getting the movement right
actions it's getting the movement right
where's the move thing
if
if
discretise actions
discret minus
discret minus
1.0 which is correct I
believe -
one dust y dust X gives you
agent
speed if uh agent let's just
speed if uh agent let's just
print
print
this let's just check the velocities
this let's just check the velocities
like this
okay oops
okay oops
so agent is moving
to is as soon as I hold down a key it
to is as soon as I hold down a key it
locks it and I have reasonable
locks it and I have reasonable
velocities
but it blocks me after a
but it blocks me after a
second so it's moving to a
second so it's moving to a
position with what looks like a
position with what looks like a
reasonable
velocity
to ah right here
to ah right here
this needs to be
this needs to be
here you
here you
always
always
no if it's
empty no that's not right um
so if the grid is not
so if the grid is not
empty
empty
and
and
PID is not equal to PID so you have to
PID is not equal to PID so you have to
check both
check both
that uh you you're allowed to move into
that uh you you're allowed to move into
your same cell
basically
yeah so if you would move into a cell
yeah so if you would move into a cell
that's occupied you're not allowed to do
that's occupied you're not allowed to do
that but you have to be able to check
that but you have to be able to check
against your own your own
movement that was the
issue also I screwed up this
issue also I screwed up this
indent this indent needs to be here
indent this indent needs to be here
and now we have these
puffers
puffers
uh now nobody can move
right that's weird
oh I did I delete the wait hold
oh I did I delete the wait hold
on I deleted the
original right
original right
yeah
there let's try this
okay so I'm moving at half speed but
okay so I'm moving at half speed but
it's not rendering the puffer smoothly
it's not rendering the puffer smoothly
enough you can see it's only moving it
enough you can see it's only moving it
it's rendering it in chunks of tiles so
it's rendering it in chunks of tiles so
let's fix that
where's the
where's the
move
move
H this is fine
ah
so grid R grid
C this is
C this is
correct um but then
correct um but then
this this is not necessarily correct
we need to figure out how to draw the
player this is Jay
what do we
do so we can do
we can't just add the whole player
position
no which got to be minus the Min
no which got to be minus the Min
right minus r
Armen yeah minus Armen I
guess so this is going to be
see if this does
it okay it actually works but the health
it okay it actually works but the health
bars are wrong let's fix the health bars
I'm actually surprised how wrong the
I'm actually surprised how wrong the
health bars
are or maybe it's not how wrong the
are or maybe it's not how wrong the
health bars are maybe it's how wrong the
health bars are maybe it's how wrong the
puffers
are we should probably get like an X Y
are we should probably get like an X Y
thing right so like let's go here
thing right so like let's go here
so we'll
do here we know we got a PID
right
oops
okay let's do
okay let's do
entity is equal to agents of
entity is equal to agents of
PID else entity is equal the towers of
PID else entity is equal the towers of
this okay and we'll get rid of this this
this okay and we'll get rid of this this
code here and we'll just
do entity dox entity
doy and what we're going to do is XX is
doy and what we're going to do is XX is
going to
going to
be
be
minus r min
maybe that
maybe that
works and we'll
do
do
minus oh this is C this is
minus oh this is C this is
rmen right and we'll do draw health bars
rmen right and we'll do draw health bars
this will be XX this will be y
this will be XX this will be y
y and then this will be D
y and then this will be D
direct like
direct like
this let's see how this
this let's see how this
works integer
works integer
required no
problemo and once this works it'll be a
problemo and once this works it'll be a
lot less
choppy uh it's still now it's still
choppy uh it's still now it's still
cropping me to
be yeah this is still
be yeah this is still
cropping let's see
why oh it's I think you need to apply
why oh it's I think you need to apply
this int
this int
times tile size yeah you have to do the
times tile size yeah you have to do the
multiplication by the tile size yeah and
multiplication by the tile size yeah and
then do the cast Okay so
then do the cast Okay so
draw health bars yeah so what we'll do
draw health bars yeah so what we'll do
is we'll just
is we'll just
do x y and this will just be we don't
do x y and this will just be we don't
need the tile size anymore in this
need the tile size anymore in this
function this will just
function this will just
be
be
X this will be
X this will be
y uh we do actually need the tile size
y uh we do actually need the tile size
that's
annoying x y
X Y yeah this is good
so XX y y death
so XX y y death
direct
cool this did not the puffer is not
cool this did not the puffer is not
pleased this did not work
pleased this did not work
um let's see what happened oh because I
um let's see what happened oh because I
forgot to remove this one here
forgot to remove this one here
we don't need this tile size
anymore so you can kind of go into
anymore so you can kind of go into
objects but
objects but
um you can see that it's
actually it moves by half steps
actually it moves by half steps
is it just me or is it
flickering why does it look to me like
flickering why does it look to me like
it's
it's
flickering it is right it's not it's
flickering it is right it's not it's
like going forward and then jumping back
like going forward and then jumping back
isn't
it it's not just me right
if I do it like really slow we should be
if I do it like really slow we should be
able to see the
flicker ah the flicker because the map
flicker ah the flicker because the map
is
is
snapped so we'll fix that
yeah to center it on the player
right kind of annoying
to do well I
mean
mean
one plus
one plus
one we'll just give it like a one tile
one we'll just give it like a one tile
buffer I
guess and then
this will be
I think you do I
I think you do I
minus got to be I minus one right I
minus got to be I minus one right I
where do we use
I oh it's just used
I oh it's just used
here right is this the only spot
yeah that's
one and actually we're going to do
I think this is
technically if I do like DX
technically if I do like DX
here
here
Dr is going to be
main minus
main minus
int
int
okay so you take off this portion
okay so you take off this portion
here and now you can
do I was it I plus - one plus
do I was it I plus - one plus
Dr
Dr
D yeah this is Dr
I don't know let's
see okay I think I got it backwards
see okay I think I got it backwards
right so let's try minus
okay so now the puffer
snaps but the screen is
smooth oh so I think now that you can
smooth oh so I think now that you can
just
do I think this is just our
right let's see can you just do like
right let's see can you just do like
this now
Absolut me
not
not
nope what did I have it as before this
nope what did I have it as before this
is J
is J
times tile
size do I just have it backwards isn't
size do I just have it backwards isn't
this J and this is
this J and this is
I
yeah okay so this is now
yeah okay so this is now
smooth um this is moving with me which
smooth um this is moving with me which
is not good
it's actually kind of gives you
it's actually kind of gives you
Collision detection for free as
well these moving around is very
obnoxious
obnoxious
so I think we need to do a little bit of
so I think we need to do a little bit of
math on
this I always hate having to do centered
this I always hate having to do centered
camera I always hate having to do
camera I always hate having to do
centered camera
there is technically a camera thing we
there is technically a camera thing we
could use with rayb I don't know if it's
could use with rayb I don't know if it's
worth
worth
it I don't think it's that bad to just
it I don't think it's that bad to just
do the math
so the way we want to do this
is I don't know how we want to do this
is I don't know how we want to do this
honestly
well I think the camera actually might
well I think the camera actually might
help let me go see if I can grab a
help let me go see if I can grab a
camera snippet this will take it a
camera snippet this will take it a
little bit but then the nice thing with
little bit but then the nice thing with
the camera is we can just draw
the camera is we can just draw
everything at its actual correct
everything at its actual correct
position on the board
position on the board
um and it'll work itself out from that
we don't have to do
we don't have to do
everything let me go find the uh let me
everything let me go find the uh let me
go find the thing oh anything on let me
go find the thing oh anything on let me
check Twitter real quick because I
check Twitter real quick because I
haven't checked that in a while
anything oh
yay
advertising cool
advertising cool
stream's actually doing quite
stream's actually doing quite
well uh it's uh
well uh it's uh
not oh no this is yesterday's stream
not oh no this is yesterday's stream
isn't it ah
isn't it ah
whatever this one's doing
okay let's go look for uh let me go grab
okay let's go look for uh let me go grab
the uh the code off screen one
the uh the code off screen one
second and we'll show you the rib camera
second and we'll show you the rib camera
system which if I recall it was a little
system which if I recall it was a little
bit annoying to get set up but uh wasn't
bit annoying to get set up but uh wasn't
that
bad there
okay so I think I found
it do I have pyr what is
it do I have pyr what is
it Ray Li okay so you need pyr for this
it Ray Li okay so you need pyr for this
which is slightly annoying but not too
which is slightly annoying but not too
bad
because the um this is one of the things
because the um this is one of the things
for which the CI is really
obnoxious so then what we do is I think
obnoxious so then what we do is I think
we just set the camera
Target yeah camera. Target
it's got Zoom as well very
nice so now that we have our
camera forget if we have to attach the
camera forget if we have to attach the
camera somehow I don't think so I think
camera somehow I don't think so I think
now what we get to do is we just get to
now what we get to do is we just get to
use the actual coordinates for
use the actual coordinates for
everything
and we will uh just we'll render so we
and we will uh just we'll render so we
don't need Dr don't need
don't need Dr don't need
DC we'll keep this Min and Max
DC we'll keep this Min and Max
thing uh we actually won't need this inj
thing uh we actually won't need this inj
anymore then either which is very nice
anymore then either which is very nice
because this was very obnoxious the way
because this was very obnoxious the way
that I wrote this it was quite
stupid
stupid
and now it is simp
L this is going to be
L this is going to be
y x
y x
right and if we
do uh y
do uh y
y
y
x
x
x GD
x GD
YX and then we just draw this
YX and then we just draw this
rectangle um this is going to just be
rectangle um this is going to just be
into this is just X time TI size right x
into this is just X time TI size right x
* TI size y * TI size very
* TI size y * TI size very
simple and just python I think you get
simple and just python I think you get
you just get ins back right if I do
you just get ins back right if I do
like type 3 * 5 just give you an INT
like type 3 * 5 just give you an INT
yeah it does give you an in
okay so this should be nice nicely done
okay so this should be nice nicely done
this is now y x this will clean up the
this is now y x this will clean up the
code quite a bit for
code quite a bit for
us uh and then the health bar
us uh and then the health bar
I think I can make uh we're going to
I think I can make uh we're going to
reuse this a bunch
reuse this a bunch
right I think I can do t t x it's x x
ts you just do TX Ty Y and easier TX
ts you just do TX Ty Y and easier TX
dy I need
dy I need
this TX Ty
this TX Ty
y TX Ty
y TX Ty
y okay
y okay
let's see what
happens wish it wouldn't spawn off
happens wish it wouldn't spawn off
screen but we have a spawns on an IT
screen but we have a spawns on an IT
spawns empty which I mean I'd assume
spawns empty which I mean I'd assume
mean that the camera Target was not
mean that the camera Target was not
set so we can
set so we can
do
um
um
camera Target dox is going to be
equal to main C time tile
equal to main C time tile
size self dot dot see how this
goes okay still
blank uh let me go pull up that other
blank uh let me go pull up that other
bit of
code uh you need to be begin mode 2D
code uh you need to be begin mode 2D
right so our ALB has this begin
right so our ALB has this begin
draw
draw
um and you need to begin the camera and
um and you need to begin the camera and
end the camera
mode yeah so I think
it's dot begin mode
it's dot begin mode
D then you end the draw and then you end
D then you end the draw and then you end
RL end mode
RL end mode
2D uh no other way around they need to
2D uh no other way around they need to
be sandwiched like
this wait did I do this right draw Tod
okay okay so this is something
okay okay so this is something
right something weird
right something weird
happened I don't exactly know what this
happened I don't exactly know what this
is maybe we can deduce what happened
here I think you have to add half of the
here I think you have to add half of the
uh the screen width to this
maybe do I have width and
maybe do I have width and
height yeah
height yeah
so plus self dot with over two it's
so plus self dot with over two it's
going to be time TI size height and uh
going to be time TI size height and uh
wait what did we specify width and
wait what did we specify width and
height this actually does have to be
height this actually does have to be
times tile size
times tile size
right so this is actually going to
right so this is actually going to
be m
r plus self. width over
two times tile
two times tile
size and then I can click this
okay I think this was minus I think that
okay I think this was minus I think that
the suggestion was correct because I
the suggestion was correct because I
don't see
anything okay so this is actually
anything okay so this is actually
correctly centered
now we can see that there's a little bit
now we can see that there's a little bit
of diverging
of diverging
here but the camera is smooth so it just
here but the camera is smooth so it just
means that the math on our objects is
means that the math on our objects is
wrong but we can see that the stationary
wrong but we can see that the stationary
objects are consistent with the
camera are either of these
camera are either of these
centered this health bar looks like it's
centered this health bar looks like it's
centered to me
right yeah this health bar is
right yeah this health bar is
centered and then there shouldn't be a
centered and then there shouldn't be a
star there which is
star there which is
weird possibly I flipped some
weird possibly I flipped some
coordinates
yeah uh well here's the
yeah uh well here's the
issue I just typoed Ty
TX this looks
promising okay so now the puffer is uh
promising okay so now the puffer is uh
the puffer is not moving smoothly but
the puffer is not moving smoothly but
everything else is moving smoothly so
so this should not be x * tile size
so this should not be x * tile size
right this should so I should put X time
right this should so I should put X time
tile size
tile size
here tile size this is y * tile
here tile size this is y * tile
size but then down
size but then down
lower I should
lower I should
do TX equal to
do TX equal to
entity
entity
dot int
dot int
entity dox time to size so now this
entity dox time to size so now this
should give you
should give you
smooth uh possibly smooth placement of
these oh
these oh
yeah let's speed it up so it looks a
yeah let's speed it up so it looks a
little bit better this is just uh a
little bit better this is just uh a
little bit too
slow oh yeah this is this is great look
slow oh yeah this is this is great look
at this
at this
so we have smooth movement can I still
so we have smooth movement can I still
hit stuff oh yeah I can still hit stuff
hit stuff oh yeah I can still hit stuff
perfect so we have smooth movement we've
perfect so we have smooth movement we've
got smooth movement in
got smooth movement in
combat um the puffer does not rotate
combat um the puffer does not rotate
towards the direction you're moving so
towards the direction you're moving so
we'll fix that I'm sure we'll do some
stuff it be nice to have like an
stuff it be nice to have like an
overhead puffer or
something but this is very nice
this is probably worth putting like a a
this is probably worth putting like a a
little update together
right overhead puffer would go
right overhead puffer would go
hard yeah it's kind of weird because
hard yeah it's kind of weird because
like if you think of the um the way
like if you think of the um the way
mobas do their characters I've never
mobas do their characters I've never
seen like a 2d mooba right like a top
seen like a 2d mooba right like a top
down I could do top down puffer it
down I could do top down puffer it
wouldn't be that hard I do have the 3D
wouldn't be that hard I do have the 3D
files for this
thing I mean it's also possible I could
thing I mean it's also possible I could
make a 3D client for this I don't know
make a 3D client for this I don't know
how I feel about doing that work but
how I feel about doing that work but
um technically something that could be
um technically something that could be
done
right but this is like this is pretty
right but this is like this is pretty
cool like this feels this feels pretty
cool like this feels this feels pretty
fluid
uh if you want it to be really
uh if you want it to be really
smooth I if you wanted it to be really
smooth I if you wanted it to be really
smooth what you would do is you would um
smooth what you would do is you would um
decrease the agent speed and up the
decrease the agent speed and up the
frame rate uh but that will make it
frame rate uh but that will make it
substantially harder for learning it
substantially harder for learning it
would make it substantially harder for
would make it substantially harder for
learning though I think that am MOA is
learning though I think that am MOA is
kind of fundamentally more real
time let me try
time let me try
something I'm going to do
0.2 and then if I do clean
puffer you
puffer you
human wait
FPS Target is only
FPS Target is only
10 we could do like 20 or no let's do 30
FPS movement rate of
o2 okay it's a kind of a jittery puff
o2 okay it's a kind of a jittery puff
puff Jitters a little bit because this
puff Jitters a little bit because this
is a highly unoptimized code but uh you
is a highly unoptimized code but uh you
can absolutely like you have like very
can absolutely like you have like very
smooth circular control
smooth circular control
now you
see but this is a little too
see but this is a little too
jittery a little too fast let me try 20
20 FPS 0.25
maybe okay that's
smooth so technically each of these
smooth so technically each of these
squares you have a resolution of four
squares you have a resolution of four
steps in each of these squares like you
steps in each of these squares like you
can move it's technically there's a grid
can move it's technically there's a grid
map thing but you you can move a
map thing but you you can move a
distance of a quarter of a square every
distance of a quarter of a square every
frame in any direction eight directional
frame in any direction eight directional
because I have this uh like this oh you
because I have this uh like this oh you
know what I can
know what I can
do I have a really good idea wait wait I
do I have a really good idea wait wait I
have a really good idea this is going to
have a really good idea this is going to
be
cool we're going to make it we're going
cool we're going to make it we're going
to make it real cool okay
it's going to be
it's going to be
fun so I'm going to ignore these key
fun so I'm going to ignore these key
presses
presses
here and I'm going to
do
a
equals clip
Mouse y
minus self. camera. Target
y
200 and I'm going to clip this to
200 and I'm going to clip this to
between negative 1 and
one I'm just I'm just doing things you
one I'm just I'm just doing things you
know it's no big deal hold on we just we
know it's no big deal hold on we just we
just uh there's there's just a little
just uh there's there's just a little
bit of stuff we got to do
okay don't be alarmed we're not we're
okay don't be alarmed we're not we're
not doing anything super cool or
not doing anything super cool or
anything like that right
okay so I was totally right because
okay so I was totally right because
people every time I say something
people every time I say something
interesting somebody will like speak up
interesting somebody will like speak up
in the chat even though that the view
in the chat even though that the view
counters are zero so it's totally just
counters are zero so it's totally just
not counting tabbed out people that's
not counting tabbed out people that's
how it is that's cool it's kind of cool
how it is that's cool it's kind of cool
to know that your view numbers are
to know that your view numbers are
actually higher than displayed
the one thing that's a little Annoying
the one thing that's a little Annoying
is I
is I
think do we need to change stuff a
think do we need to change stuff a
little bit for
little bit for
this let me see
got ax and a
got ax and a
y not
broadcast right I needed to
broadcast right I needed to
Define is equal to
three uh the
the attack is going to be a little bit
the attack is going to be a little bit
of an issue we we'll fix it up though
of an issue we we'll fix it up though
it'll be cool it'll be
it'll be cool it'll be
fine actions discreet
where is it
discreet the attack does get discretized
what where is
what where is
this oh this is
this oh this is
continuous
continuous hey buffer
continuous hey buffer
where you going
puffer wait do I have to
puffer wait do I have to
do
build hold
on come on Puffer
I like Puffer that follows your cursor
I like Puffer that follows your cursor
as an
environment you know technically if I
environment you know technically if I
wanted to make this 3D I do have the 3D
wanted to make this 3D I do have the 3D
model of the puffer and it does have one
model of the puffer and it does have one
animation and this would be a really
animation and this would be a really
really great excuse to commission more
really great excuse to commission more
puffer fish animations which I love to
puffer fish animations which I love to
do but the thing is they're very
do but the thing is they're very
expensive and very time consuming to
expensive and very time consuming to
have
made I do like them
made I do like them
though dude just upwork it okay that's
though dude just upwork it okay that's
what I did for the original puffer right
what I did for the original puffer right
and it took two artists about 600 bucks
and it took two artists about 600 bucks
and several hundred messages to get this
and several hundred messages to get this
puffer the way I want wanted
it is not
it is not
easy it's a very high quality
puffer it's very difficult to do
puffer it's very difficult to do
characters like animated characters like
characters like animated characters like
if you have one polygon off slightly
if you have one polygon off slightly
like the whole thing is messed up like I
like the whole thing is messed up like I
would I'd have to send back edits like
would I'd have to send back edits like
you know hey there's one polygon off on
you know hey there's one polygon off on
the mouth or like you know the fin is
the mouth or like you know the fin is
just clipping ever so slightly here or
just clipping ever so slightly here or
like the eyes are just like slightly
like the eyes are just like slightly
going to a weird angle that looks off
going to a weird angle that looks off
right stuff like
that for this
that for this
reason artist jobs are actually very
reason artist jobs are actually very
safe despite
GPT for the time
being plus as annoying as it is to send
being plus as annoying as it is to send
100 messages back and forth um they do
100 messages back and forth um they do
actually fix the things that you say
actually fix the things that you say
instead of just making more
issues and there the artists are
issues and there the artists are
credited on the puffer page as
well it's a great Puffer
wait am I not printing the action
wait am I not printing the action
already let's print the action as it
already let's print the action as it
goes in
not
working
oops
so Mouse
y okay so we have
Mouse oh oh did I already just divide
Mouse oh oh did I already just divide
the
the
mouse
yeah I don't know why I did
this pause.
this pause.
y pause. x
buer follow
buer follow
me no it
doesn't it's at least moving
doesn't it's at least moving
now uh
okay
okay
so this says that Mouse
so this says that Mouse
is very reasonable right so this
is very reasonable right so this
is Target is
is Target is
784 which
784 which
is here which is a little
is here which is a little
awkward but then there's
10,000 oh
10,000 oh
yeah duh um I have to do the center of
yeah duh um I have to do the center of
the screen not the mouse y so this is
the screen not the mouse y so this is
just pause y
just pause y
minus uh self.
height
height
uh super Maven I love you but your
uh super Maven I love you but your
suggestions are not always
suggestions are not always
amazing you are very fast though
oh okay so here's the
puffer
puffer
Mouse well we don't need this target
Mouse well we don't need this target
anymore right we need
okay on
puffer let me
puffer let me
through
through
puffers it's just a really bad seed okay
puffers it's just a really bad seed okay
well we'll have to look at it from here
well we'll have to look at it from here
so the mouse is 650
so the mouse is 650
Target
is ah it's times T it's TS
is ah it's times T it's TS
times T TS times
times T TS times
right
right
TS come on so
close oh look at this
you can navigate the
puffer what would you recommend a good
puffer what would you recommend a good
beginner project be for using clean RL
beginner project be for using clean RL
for the first time um well first of all
for the first time um well first of all
like just train some like train like one
like just train some like train like one
of the existing M to see how it works
of the existing M to see how it works
and set up like wand B and um it depends
and set up like wand B and um it depends
what you're focused on like I generally
what you're focused on like I generally
suggest like trying to make either make
suggest like trying to make either make
a new en and make RL work on it or get
a new en and make RL work on it or get
RL to work on like a simple existing
RL to work on like a simple existing
environment uh nothing as complex as
environment uh nothing as complex as
this thing but look at this you can
this thing but look at this you can
actually navigate your
actually navigate your
puffer you can navigate the puffer with
puffer you can navigate the puffer with
your cursor and if you put the cursor
your cursor and if you put the cursor
very close the puffer moves a little bit
very close the puffer moves a little bit
and if you put the cursor far it
and if you put the cursor far it
navigates a
lot look at that
artificial puffer
intelligence does it still kill
intelligence does it still kill
stuff oh yeah it does
look well this is
sweet I actually yeah I tweeted that
sweet I actually yeah I tweeted that
artificial puffer intelligence has been
artificial puffer intelligence has been
achieved internally
achieved internally
right that was a good one
artificial puffer
intelligence camera made this so yeah
intelligence camera made this so yeah
it's so smooth with the camera
it's so smooth with the camera
right I mean this is kind of like a
right I mean this is kind of like a
basic little
game this is a reasonable speed as well
game this is a reasonable speed as well
right little MOBA
we could do click movement click
we could do click movement click
movement would be harder to
movement would be harder to
implement
implement
um yeah click movement would be a fair
um yeah click movement would be a fair
bit harder to
implement we could do it
though but this like navigation feels
though but this like navigation feels
really smooth this actually like this
really smooth this actually like this
feels really good to play
with if we had a top down Puffer that
with if we had a top down Puffer that
like rotated in the direction as
well I don't know why these look so
well I don't know why these look so
jumpy well they're constantly modifying
jumpy well they're constantly modifying
their velocity like faster than I can I
their velocity like faster than I can I
can do it they're just acting randomly
can do it they're just acting randomly
so I guess makes sense that they're
jittery this is
smooth this is why I do this type of
smooth this is why I do this type of
stuff because like this is very
stuff because like this is very
satisfying and I'm going to tell you
satisfying and I'm going to tell you
it's going to be so much cooler as well
it's going to be so much cooler as well
when you have like these smooth moving
when you have like these smooth moving
puffers and like all of them are moving
puffers and like all of them are moving
and doing something coordinated looking
and doing something coordinated looking
it's actually going to look really
cool
attack o the puffers are too
attack o the puffers are too
strong can't get close to them oh you
strong can't get close to them oh you
know what it is it's that I clipped the
know what it is it's that I clipped the
action space yeah yeah yeah so we
action space yeah yeah yeah so we
actually have to mess with the action
actually have to mess with the action
space stuff because I can't hit them
so the funny thing about that is I
so the funny thing about that is I
actually there is already in open source
actually there is already in open source
mode I just haven't released it yet it's
mode I just haven't released it yet it's
like it's 90% done I just can't bring
like it's 90% done I just can't bring
myself to finish the thing because it
myself to finish the thing because it
requires a bunch of janky experiments
requires a bunch of janky experiments
but uh there's going to be something
but uh there's going to be something
really cool to share very
soon something that is at least as
soon something that is at least as
complicated as the finished game of this
complicated as the finished game of this
would be
but yeah it is kind of an open source
but yeah it is kind of an open source
Moe in the sense that like hey all these
Moe in the sense that like hey all these
M are in puffer lib right so like you
M are in puffer lib right so like you
may as well even if you're not going to
may as well even if you're not going to
use all the stuff in puffer lib like you
use all the stuff in puffer lib like you
may as well use puffer lib for for the
may as well use puffer lib for for the
environments and that's really all I
environments and that's really all I
care about is like if I have people
care about is like if I have people
using puffer lib for something and like
using puffer lib for something and like
enjoying it and like you know hanging
enjoying it and like you know hanging
out and giving feedback I'm happy I just
out and giving feedback I'm happy I just
want people using my stuff
and of course like you can hard Fork
and of course like you can hard Fork
stuff and vendor it or whatever but it's
stuff and vendor it or whatever but it's
it's bad etiquette and like there's not
it's bad etiquette and like there's not
really much reason to when it's being
really much reason to when it's being
actively maintained for free
okay um from
here right let's fix the AL space real
here right let's fix the AL space real
quick then we'll get it working discret
quick then we'll get it working discret
and continuous maybe a lot of things we
and continuous maybe a lot of things we
can do so
um low
1 1
1 1
0 high is equal to 1 1 and
10 let's see if this does
10 let's see if this does
it actions do not match the action
it actions do not match the action
space and
okay right because you need to have it
okay right because you need to have it
clipped it it needs to be low and high
clipped it it needs to be low and high
and then you need to clip it I think
and then you need to clip it I think
is that how it
works one
you need to clip stuff it's really
obnoxious okay
obnoxious okay
so we have the
so we have the
Papa we have uh Z
Papa we have uh Z
attack oh now it works
what was hitting
what was hitting
me can I hit you why it looks like I can
me can I hit you why it looks like I can
hit you
hit you
right I don't know how you're hitting me
right I don't know how you're hitting me
so
quickly oh I can't hit you that's why
okay yeah I can't actually hit all of
okay yeah I can't actually hit all of
them see if you go from the bottom here
them see if you go from the bottom here
you can see like they don't really hit
you can see like they don't really hit
you as much you can hit the one that's
you as much you can hit the one that's
like right above you I think but you
like right above you I think but you
can't hit the one below you
do you penalize the agents from being
do you penalize the agents from being
too jittery and is it a good idea these
too jittery and is it a good idea these
agents are not trained this is a new
agents are not trained this is a new
project I started it yesterday so these
project I started it yesterday so these
uh they are neural Nets we do have
uh they are neural Nets we do have
neural Nets running on it but um the
neural Nets running on it but um the
agents are random they're acting
agents are random they're acting
randomly so yeah they're going to Jitter
randomly so yeah they're going to Jitter
until uh either I could add a smoothness
until uh either I could add a smoothness
penalty to be fair during training might
penalty to be fair during training might
not be a terrible idea smoothness reward
not be a terrible idea smoothness reward
something like that
something like that
um or they might just learn it probably
um or they might just learn it probably
some sort of smoothness
some sort of smoothness
reward it's a fine
idea uh I would like to know why uh why
idea uh I would like to know why uh why
the attack is not working the attack
the attack is not working the attack
action is not
working Target
working Target
equals can I wait can I like hit I
equals can I wait can I like hit I
should be able to see the target change
should be able to see the target change
at least right oops
at least right oops
so let's say I go like this right
so let's say I go like this right
oops I should be able to see my
target I'm not seeing any Targets
target I'm not seeing any Targets
here am I hitting myself what the what
here am I hitting myself what the what
is going on here I think am I hitting
is going on here I think am I hitting
myself or something like
myself or something like
what is there's nothing that can damage
what is there's nothing that can damage
me here
yeah so why is action always
zero Mouse y Mouse
zero Mouse y Mouse
X
right PR
let's just print all of
let's just print all of
this reward Mouse looping
agents
agents
okay Mouse is at 50 Target is negative
okay Mouse is at 50 Target is negative
1 Target is
1 Target is
four Target is
four Target is
if I put my uh my mouse on my the own
if I put my uh my mouse on my the own
puffer fish
puffer fish
right this does not take it from
right this does not take it from
negative 1 to
negative 1 to
zero it should be zero right because I
zero it should be zero right because I
I'm not negative
one let I have a check against that but
one let I have a check against that but
no
no
I I
I I
don't
don't
um you can get some Targets in here
by mousing over random
stuff should be like especially up there
stuff should be like especially up there
yeah you can get targets
potentially h
oh wait is this
oh wait is this
backwards no
backwards no
R yeah this is correct
wait what do we have C
wait what do we have C
Min no C
Max we've got the Min
here plus the X
here plus the X
position I might be off by
position I might be off by
one is the mouse off by
one is the mouse off by
one I might have just added like a
one I might have just added like a
little off by one error let me see
little off by one error let me see
Target's Nega
1 no target appears to be negative one
1 no target appears to be negative one
everywhere
here
H yeah I just realized that yeah I
H yeah I just realized that yeah I
realized that in like surely audience I
realized that in like surely audience I
have on a reinforcement learning stream
have on a reinforcement learning stream
is not going to point that out but of
is not going to point that out but of
course it's the
internet well
done you lived up to the Internet
standard Mouse X Mouse
y I kind of just want to draw a circle
y I kind of just want to draw a circle
at Mouse X and Y
at Mouse X and Y
right uh probably super MAV will do it
right uh probably super MAV will do it
raw at Mouse x y
okay let's see
okay let's see
so okay so we can see that the the
so okay so we can see that the the
circle is
circle is
wrong and oh yeah I saw it it just it
wrong and oh yeah I saw it it just it
hit the puffer when I hit the when I had
hit the puffer when I hit the when I had
the circle over the puffer I saw it hit
the circle over the puffer I saw it hit
zero for a second
Okay so
weird how am I still off by two or by
one I don't know where there would be an
one I don't know where there would be an
off by two error
from oh there's not an off by to there's
from oh there's not an off by to there's
an off by 0.
five because it's half the
circle
circle
what I guess there's not an off by
what I guess there's not an off by
0.5 hold
0.5 hold
on
1.5 divide by tile size
I think you give it the center position
I think you give it the center position
right
it's plus tile size over two is the
it's plus tile size over two is the
corner plus tile size over
corner plus tile size over
two maybe this does it right if you div
two maybe this does it right if you div
it uh one
one maybe don't drop the pupper in the
one maybe don't drop the pupper in the
Okay so
Okay so
if you have your cursor on
here is it plus
here is it plus
two man I can't freaking
two man I can't freaking
tell I want to have the cursor be
tell I want to have the cursor be
I mean maybe I need to discretize after
I mean maybe I need to discretize after
all yeah but it's not plus
all yeah but it's not plus
two
it's why is the X1 the X1 appears
it's why is the X1 the X1 appears
correct and then the Y is wrong
correct and then the Y is wrong
right I messed that up
somehow look if I'm on this tile
somehow look if I'm on this tile
here oh no it's half tile off
here oh no it's half tile off
it's very
weird
um this is
awkward Target X Target y right
can I do it based off the
camera I think I could
camera I think I could
right so
so the camera Target
position do you add the
target I think so
right and then let's
right and then let's
do mouse X is going to
do mouse X is going to
be into of
be into of
the ra maybe this does
it oh
it oh
yeah
yeah
so this is pretty much spoton right as
so this is pretty much spoton right as
soon as you go to the next tile it flips
soon as you go to the next tile it flips
perfect so and if I put this cursor on
perfect so and if I put this cursor on
the puffer it does not do
the puffer it does not do
anything uh if I put the cursor
anything uh if I put the cursor
here ah here's where it says the puffer
here ah here's where it says the puffer
cursor must be so if I put it on the
puffer
puffer
no it's pretty much accurate
no it's pretty much accurate
right it says that I'm still on this
right it says that I'm still on this
tile and if I go over one I'm on this
tile and if I go over one I'm on this
tile so if this is accurate enough can I
tile so if this is accurate enough can I
kill stuff with
this looks like
it but I should be able to put my cursor
it but I should be able to put my cursor
on stuff right
like Target
19 Target is negative 1
19 Target is negative 1
7 so you're seeing stuff in
here I mean it's hard to catch them
here I mean it's hard to catch them
because they're like you know they're
because they're like you know they're
fiddly
I can't tell if I like how this is
working fact that you can still attack
this did I just do damage to it or did I
this did I just do damage to it or did I
not I can't tell because the cursor is
not I can't tell because the cursor is
like you can't tell what tile the thing
like you can't tell what tile the thing
is on
right well the agents can I just can't
right well the agents can I just can't
so I'll just probably have to implement
so I'll just probably have to implement
some like nearest like some like Grace
some like nearest like some like Grace
bubble or whatever on the cursor like
bubble or whatever on the cursor like
some click off Grace thing that's
fine good enough for the time being um I
fine good enough for the time being um I
I got to make myself a shake real quick
I got to make myself a shake real quick
so I'm going to commit this up I'm going
so I'm going to commit this up I'm going
to go make myself a shake and then I'm
to go make myself a shake and then I'm
going to be right back and we'll finish
going to be right back and we'll finish
uh some we'll figure out a couple other
uh some we'll figure out a couple other
fun things to do today with this
oops see moobile
and I I'll leave this up running as well
and I I'll leave this up running as well
because I may as
well all right be right
back
e
e
e
e
e
e
e
e
e
e
e
e e
okay we are
okay we are
back um I've decided what the next thing
back um I've decided what the next thing
is going to be I've got a little over an
is going to be I've got a little over an
hour we're going to implement the first
hour we're going to implement the first
skill in this game
skill in this game
we're going to implement the first
skill oops
skill oops
ah come on puffers
stop oh no I forgot that it's adding all
stop oh no I forgot that it's adding all
these frames to a
these frames to a
buffer okay
okay so we're gonna add the first skill
okay so we're gonna add the first skill
to the puffer game uh the first skill is
to the puffer game uh the first skill is
going to be puffer blast it's very
creative add puffer blast to the
game ready for puffer blast okay um
game ready for puffer blast okay um
puffer blast we need to add a two
puffer blast we need to add a two
to
to
this four
here and this is going to
be zero
one okay
a
a
skill
zero if
zero if
key uh space is
key uh space is
fine a scills equal to
fine a scills equal to
one and we where's the
action right here
action right here
skill
how we going to do this let's
do well initially we're just going to
do well initially we're just going to
make something
simple yeah
I should make like an attack function
I should make like an attack function
probably I'm going to just need to call
probably I'm going to just need to call
it a few times
uh yeah needs to be a attack like
this how do we do this attack
this whole thing right is attack
there whatever we'll do like this maybe
there whatever we'll do like this maybe
for now
and uh let's see if we can get this to
and uh let's see if we can get this to
work and then if we can get this to
work DX
okay does the attack function still work
okay does the attack function still work
yes it does that's very nice
nice
nice
skill
skill
attack
Sid
Sid
okay now what we do is
Target uh we
Target uh we
do
do
int r no int
int r no int
y
y
int target. y
int target. y
then we
do
yeah
yeah
int
int
D
D
Dy
DX WI range1
two and what we're going to do we do
attack PID
attack PID
equals PID
is1 no you can just do Pit is equal to
is1 no you can just do Pit is equal to
self. PID
map and attack right
Target PID this is Target
Target PID this is Target
PID so we're just going to make a little
PID so we're just going to make a little
simple
AOE this will be see that void
we'll do skill attack beant skill
we'll do skill attack beant skill
attack beant skill
attack use
skill okay and we'll do
cast to Bull and then we'll
cast to Bull and then we'll
do uh like this and we'll just say
do uh like this and we'll just say
greater than
greater than
0.5 it's greater than 0.5 you use the
0.5 it's greater than 0.5 you use the
skill
skill
for
for
continuous
continuous
and if
skill
skill
else attack
so we'll see if we can strike for
so we'll see if we can strike for
massive
damage okay so if I hold down
Q I'm having difficulty getting close to
Q I'm having difficulty getting close to
the puffers to even
see really should increase the HP huh
oops Max
Health let's do the player max health is
Health let's do the player max health is
going to be like 100
damage damage
damage damage
now
damage into
damage into
attack then damage is going to be
attack then damage is going to be
like lots 30 damage lots of damage
like lots 30 damage lots of damage
damage and then this one is going to
be where is
it like one
okay now we
have the
puffer it's done lots of damage to
puffer it's done lots of damage to
me can we do
me can we do
q
q
no they do damage very quickly though to
no they do damage very quickly though to
you don't they
let's do um let's make Dr and DC a
let's do um let's make Dr and DC a
little bit bigger so we can just tell a
little bit bigger so we can just tell a
little
easier skill attack
what so like
what so like
three four three
three four three
four oops we got to
four oops we got to
recompile so basically now
recompile so basically now
um this should just be blasting stuff
boom I can't tell if it's using the uh
boom I can't tell if it's using the uh
the blast thing I suspect it's not
the blast thing I suspect it's not
because they're not just like getting
because they're not just like getting
deleted so let's just
see oh I'm holding the wrong key I I
see oh I'm holding the wrong key I I
just instinctively held Q instead of the
just instinctively held Q instead of the
key that I B
okay oh yeah this is you can see the
okay oh yeah this is you can see the
damage here right it's
damage here right it's
like but they're using puffer strike
like but they're using puffer strike
back on me that's why I'm taking so much
back on me that's why I'm taking so much
damage that's so
damage that's so
funny so like yeah you get just
funny so like yeah you get just
absolutely shredded by this
absolutely shredded by this
thing yeah like you can see the like the
thing yeah like you can see the like the
big chunk of damage that's the puffer
strike uh does this let
strike uh does this let
me is my tower out of bounds okay I have
me is my tower out of bounds okay I have
to be careful with the bounds of the map
to be careful with the bounds of the map
I haven't solved that yet good to
know oh I guess not
wait Target
wait Target
doy
H the skill attack does uh doesn't seem
H the skill attack does uh doesn't seem
to work
to work
um -3 to
um -3 to
4 PID
4 PID
map y + Dy and X+
DX let's see was fine
right so when you do attack
oh this target
right h
how did this work
how did this work
before get player
OB PD index like
this player obs
what I do
wrong what I do
wrong oh this this is not uh yeah this
wrong oh this this is not uh yeah this
is not how it's supposed to work here
is not how it's supposed to work here
this
is yeah okay so I have to refactor stuff
is yeah okay so I have to refactor stuff
a little
bit Let's
do let's take like these lines back put
do let's take like these lines back put
these back into the loop right
these back into the loop right
and we'll do
and we'll do
like what is it
Target yeah let's put this up here
okay now we have the target PID
and now instead of attack we can just do
and now instead of attack we can just do
Target PID Target
Target PID Target
PID and Target PID now we refactor the
PID and Target PID now we refactor the
skill to take into account the target
skill to take into account the target
PID um so this is
PID um so this is
now was it Target PID
don't need this target thing
anymore I do need uh Y and X though
anymore I do need uh Y and X though
right I do need the player OB On Target
right I do need the player OB On Target
pit like
this and then you get Y and X right d y
this and then you get Y and X right d y
and DX
okay and then we do attack the target
okay and then we do attack the target
PID PID Target
PID PID Target
PID this is Target PID
PID this is Target PID
damage get this is now do not need this
anymore see death player star
anymore see death player star
player and then we do the target here
uh is no longer
needed but we do
need player star Target does not need to
need player star Target does not need to
be this and we need Tower Star
be this and we need Tower Star
Tower okay so now we have Target
Tower okay so now we have Target
Tower maybe this is enough let's
check even with the this file being
check even with the this file being
garbage by the way it's only 500
lines even with this file being complete
garbage all right let's see do we get uh
garbage all right let's see do we get uh
any attacks can I attack this
any attacks can I attack this
thing ah it's not letting me hit it and
thing ah it's not letting me hit it and
it's very very slowly killing me what
it's very very slowly killing me what
about if I hit space on it nope so I do
about if I hit space on it nope so I do
not do damage and it very slowly kills
not do damage and it very slowly kills
me let's see why that
is okay so you take Target pit
in
in
turn we can now unindent this stuff
you get the player from the target
pit how do I pass Target pit
here you get player
here you get player
OB and you get the pit from that that
OB and you get the pit from that that
looks is that correct
looks is that correct
wait not from attack
wait not from attack
right you know this is is correct cuz
right you know this is is correct cuz
this is attack is the index into your
this is attack is the index into your
observation you get the target from the
observation you get the target from the
observation you get the pit from the
observation you get the pit from the
target observation and then you pass the
target observation and then you pass the
target pit like
target pit like
this so that actually looks correct to
me Target pits less than num
me Target pits less than num
agents all this
agents all this
player start
Target get player
Target get player
PID uh did I give it the wrong pit to
PID uh did I give it the wrong pit to
begin
begin
with hold
with hold
on now agent idx is the right pit isn't
on now agent idx is the right pit isn't
it agent idx is the right
it agent idx is the right
pit weird
weird that it doesn't wait I just saw
weird that it doesn't wait I just saw
the target is
the target is
10 so it's getting
Target equal to
10 which is a PID right
so if I hit where is it attack
oops
okay
okay
so now
so now
we can see the target is
we can see the target is
10 it's attacking five attacking three
10 it's attacking five attacking three
attacking five attacking
attacking five attacking
three it's oscillating all over the
three it's oscillating all over the
place which is very
weird well could be this puffer right
weird well could be this puffer right
here
here
that's screwing it
that's screwing it
up but um if even if I go like way over
up but um if even if I go like way over
here
here
right target
is targets netive one targets
10 attacking
10 attacking
five five it looks like it's attacking
five five it looks like it's attacking
five okay um
so it's it is actually working but
it's I think it is wor is it does like
it's I think it is wor is it does like
the other puffers die when I do this
the other puffers die when I do this
yeah they actually do die very quickly
yeah they actually do die very quickly
it looks
it looks
like yeah look at that you can see at
like yeah look at that you can see at
the bottom of the screen so for some
the bottom of the screen so for some
reason the pit is wrong
how do I mess up the
PID
PID
so get player
OBS and then when you're attacking you
OBS and then when you're attacking you
get the
get the
target attacking five attacking five
target attacking five attacking five
attacking
attacking
five we know that's not the target
five we know that's not the target
pit
pit
because uh five is not the pit of a
because uh five is not the pit of a
tower so that's totally
tower so that's totally
wrong so of course it's attacking
wrong so of course it's attacking
something different that's not what it
something different that's not what it
should
should
be the question is where does five come
from five comes from
get player OB on
attack
attack
if agent idx is
zero we'll do
zero we'll do
this darn debugging
okay so raw attack is now
okay so raw attack is now
zero raw attack is still zero they can't
zero raw attack is still zero they can't
see it
see it
right raw attack I just saw
right raw attack I just saw
two two on this puffer Maybe
hold
hold
on and then raw attack is
on and then raw attack is
zero or
one ra attack is
one uh which makes
sense let
sense let
see attack is zero and then if I go here
see attack is zero and then if I go here
I think if you go above it it's one
I think if you go above it it's one
right yeah so the reason is that um it's
right yeah so the reason is that um it's
Computing a window of observations
Computing a window of observations
around the puffer and the puffer is in
around the puffer and the puffer is in
the center so if you
the center so if you
start up here this will be zero here but
start up here this will be zero here but
uh if you're up here it'll be
uh if you're up here it'll be
one yeah that's how that
one yeah that's how that
works um and that's actually fine
because you get the player
because you get the player
OB and then you give it the
OB and then you give it the
PID but then why do you get the wrong
PID but then why do you get the wrong
pit out of
pit out of
this why do you get do you get your own
this why do you get do you get your own
pit
pit
maybe five could be my own pit right no
maybe five could be my own pit right no
no five is not my own pit CU my own pit
no five is not my own pit CU my own pit
is zero your puffer
is zero your puffer
zero ah
dang I don't know what's wrong with
this this whole pit data structure is
this this whole pit data structure is
really obnoxious as
well for
okay
I would like this to be fixed but I am
stuck
wait well this one is
wait well this one is
wrong but this one looks like it should
wrong but this one looks like it should
be right
Target PID less than numb agents you get
Target PID less than numb agents you get
the target as Target
PID attacking Target
PID attacking Target
pit Target pit five
Okay so
it's very weird that I'm actually seeing
it's very weird that I'm actually seeing
attack numbers in
here there should absolutely not be any
here there should absolutely not be any
attack numbers in
here
here
attack right
attack right
attacking yeah this is only printed for
attacking yeah this is only printed for
pit
pit
zero so
oh well this one is because let's fix
oh well this one is because let's fix
this one this one needs to be get player
this one this one needs to be get player
not get player
not get player
OB um
OB um
and you know this is not even going to
and you know this is not even going to
necessarily work because the target
pit
pit
wait no it is get player OB
right you get the player op from the
right you get the player op from the
from here in order to get this target
from here in order to get this target
object and then you get this PID
map over which you can check coordinates
map over which you can check coordinates
I
guess maybe this will tell me
so we'll do
so we'll do
um
um
print skill
print skill
attacking
y Target Target
pit and we'll go just use this
pit and we'll go just use this
from I don't know wherever right
if P
zero come on I want to have this skill
zero come on I want to have this skill
thing done today the very least
okay so we have
okay so we have
reward and if I go up
here you can see
here you can see
the
the
oops 71
Target negative
one okay this is very
one okay this is very
odd if
I just doesn't attack does not apply
I just doesn't attack does not apply
attacks
something is
weird I just can't figure out what the
weird I just can't figure out what the
heck this is I'm like what would
heck this is I'm like what would
actually tell me for sure
actually tell me for sure
um what would tell me for sure what's
um what would tell me for sure what's
going
wrong there's really not much cuz like
wrong there's really not much cuz like
the stupid state based
the stupid state based
like this PID matching thing is so
obnoxious I had the attack working
obnoxious I had the attack working
before as well so I don't know what
before as well so I don't know what
happened like what did I do with it to
happened like what did I do with it to
mess it up actually that's a better
mess it up actually that's a better
question let's just go check the last
question let's just go check the last
commit and see what I changed that
commit and see what I changed that
probably I should have done that a while
probably I should have done that a while
ago right
perfect time to remind you to start the
perfect time to remind you to start the
puffer helps me out a whole
bunch puffer growth is very
important
for e
should be in
here
so Target is get player
so Target is get player
OB PID attack
OB PID attack
Target pit is target.
Target pit is target.
PID we on attack here agent idx Target
PID we on attack here agent idx Target
PID agent idx Target
PID agent idx Target
pit
pit
then we
then we
have player is get player of my own
have player is get player of my own
pit Target
pit Target
is Target PID right get player Target
is Target PID right get player Target
PID the track
Target
Target
PID
PID
yeah now where do I get the
Target right
Target right
here Target is get
here Target is get
player Target
player Target
ped and then this is the same right
ped and then this is the same right
target team Target
target team Target
Health SP Target pit
is it something with the way I like
is it something with the way I like
changed passing observations or
changed passing observations or
something
something
weird I mean passing actions to this
weird I mean passing actions to this
thing cuz I'm not seeing
it I mean this is
it I mean this is
so technically I did this
so technically I did this
above I put this up here I think right
above I put this up here I think right
would make a
would make a
difference oh does it no no it doesn't
difference oh does it no no it doesn't
doesn't make a
difference get player
difference get player
OBS PID and
OBS PID and
attack where's attack
yeah so we have
yeah so we have
attack which is
attack which is
from in agent can Yep this is the exact
from in agent can Yep this is the exact
same
thing yeah
players get player agent idx and I pass
players get player agent idx and I pass
agent
agent
idx it pass the target
idx it pass the target
PID to
this play get
this play get
pit player star Target
pit player star Target
Tower Target get player
Tower Target get player
this this really looked correct I don't
this this really looked correct I don't
know what the heck is wrong with
know what the heck is wrong with
it uh and there way there's way too much
it uh and there way there's way too much
printing going on as well let me let me
printing going on as well let me let me
see if I can just like thin down the
see if I can just like thin down the
print so I can maybe tell what's going
on so like print this is everything's
on so like print this is everything's
getting printed is too much too
getting printed is too much too
much
much
yeah and
okay looping agents raw attack is zero
raw Attack One
okay so I should be able to see the PID
okay so I should be able to see the PID
that I'm attacking whoops from
this they should at least clean it up
okay so
Target if I go over
here now I'm on target four
here now I'm on target four
right why is the target changing
right why is the target changing
there's absolutely no reason the target
there's absolutely no reason the target
should be
changing
right attack is zero
wait
wait
oh my
oh my
God damn
God damn
it right
it right
here code
here code
hygiene freaking code
hygiene what I get for hacking stuff
hygiene what I get for hacking stuff
fast for stream it's like you go fast
fast for stream it's like you go fast
and then you go slow because says you
and then you go slow because says you
wrote crap
wrote crap
code so we'll see I might just start by
code so we'll see I might just start by
cleaning this up for a few hours
tomorrow okay beautiful so now we have
tomorrow okay beautiful so now we have
the target
the target
correct does it attack this
correct does it attack this
thing yep it attacks this
thing yep it attacks this
thing um we can very very slowly attack
thing um we can very very slowly attack
it oops got to get ourselves killed here
it oops got to get ourselves killed here
or we can very very quickly
or we can very very quickly
well they're the thing is they're using
well they're the thing is they're using
the skill back on us so
um and we're getting out of bounds
um and we're getting out of bounds
here let's
here let's
see skill
attack and get player
OB Target
ID should tell me the Target ID
ID should tell me the Target ID
shouldn't it Target is
13 right so this get player OB is um
this is not what we need it's just get
this is not what we need it's just get
player Target
PID now this should
work and we'll add uh we'll add one more
work and we'll add uh we'll add one more
much easier to code skill than
this and then end
this okay so I'm not getting hit here
right out of bounds
right out of bounds
still oh right because the uh the target
still oh right because the uh the target
pit is a tower in this
pit is a tower in this
case
o Target pit is a
o Target pit is a
tower for
so first of all
so first of all
if Target
if Target
PID
one target
player
player
okay we get y we get
okay we get y we get
X try
X try
this garbage code
it's very difficult to actually hit the
it's very difficult to actually hit the
thing isn't it
thing isn't it
let me
see okay so I can hit it but I can't use
see okay so I can hit it but I can't use
the
spell
spell
heck get
heck get
Tower this stupid auto correct is just
Tower this stupid auto correct is just
bad sometimes super Maven needs to
bad sometimes super Maven needs to
update the
update the
model to be god tier just send me good
model to be god tier just send me good
code model that does a good
thing uh I should be dead right yeah
thing uh I should be dead right yeah
okay it's it's basically
dead okay we deleted that thing because
dead okay we deleted that thing because
we have the burst on
we have the burst on
it can we uh burst anything
it can we uh burst anything
boom yeah we can burst stuff I can tell
boom yeah we can burst stuff I can tell
we're we're doing damage here can we hit
we're we're doing damage here can we hit
uh one of these towers
like boom Oh yeah I just saw it we
like boom Oh yeah I just saw it we
deleted both of them at once okay
deleted both of them at once okay
great second puffer
skill C
skill C
def
def
skill heal
def player
oh let use skill
use skill attack use skill
heal okay and we need um need a trigger
heal okay and we need um need a trigger
for this right
for this right
is going to
be pack
be pack
skill skill
skill skill
attack skill
attack skill
heill skill
heill skill
attack L this should be L
attack L this should be L
Shi one
Shi one
okay and then we will add into the
okay and then we will add into the
attacks we'll
attacks we'll
add just watched your thesis defense
add just watched your thesis defense
came here to tune in thank you very much
came here to tune in thank you very much
yeah a lot of people have uh come from
yeah a lot of people have uh come from
there so uh this is now me graduated
there so uh this is now me graduated
live trying to fix the total mess that
live trying to fix the total mess that
RL is in by doing ultra high perf Dev uh
RL is in by doing ultra high perf Dev uh
if you just saw the stream the thing
if you just saw the stream the thing
that we did a couple weeks ago I built
that we did a couple weeks ago I built
this this is a 4096 snake environment
this this is a 4096 snake environment
that runs at 14 million uh steps per
that runs at 14 million uh steps per
second on one CPU core and trains it a
second on one CPU core and trains it a
million steps per second on one GPU so
million steps per second on one GPU so
it's going to be a lot of ultra high
it's going to be a lot of ultra high
performance Sim it's a lot of like cool
performance Sim it's a lot of like cool
RL infrastructure
RL infrastructure
Dev hold on let me find another cool
Dev hold on let me find another cool
thing got to sell the new
thing got to sell the new
viewers so here's uh a sweep that we
viewers so here's uh a sweep that we
have running right now with uh very
have running right now with uh very
fancy hyper parameter tuning this has
fancy hyper parameter tuning this has
run probably like 80 billion steps worth
run probably like 80 billion steps worth
of training by now overnight over the
of training by now overnight over the
last day uh so yeah a lot of just fixing
last day uh so yeah a lot of just fixing
RL Dev live and if you like what you see
RL Dev live and if you like what you see
stick around and of course uh feed the
stick around and of course uh feed the
puff or a star helps me out a
puff or a star helps me out a
bunch that's the pitch
currently building a little MOA for uh
currently building a little MOA for uh
reinforcement learning Dev reinforcement
reinforcement learning Dev reinforcement
learning
experiments skill attack skill
heal uh okay
let's go
let's go
here right
and let's see if this renders
and let's see if this renders
now no key lshift okay so it's a
now no key lshift okay so it's a
different key code
e
shift okay so there's no uh
shift okay so there's no uh
key shift
apparently I mean I can just do q and E
apparently I mean I can just do q and E
right or q and
right or q and
W this can be Q
W this can be Q
can be
W key
q
w could not broadcast so I have to
w could not broadcast so I have to
update this space I
update this space I
think action
think action
space space
two
five okay now we get to play the puffer
five okay now we get to play the puffer
Mo a little bit so oh there we go that's
Mo a little bit so oh there we go that's
the full heal spell we can burst this
the full heal spell we can burst this
yep we can just completely wreck this if
yep we can just completely wreck this if
we press uh w we full
we press uh w we full
heal we can delete that we can
heal we can delete that we can
heal uh what if we just press like Q
heal uh what if we just press like Q
Once on This
Once on This
oh we died because we were not fast
oh we died because we were not fast
enough
cool
okay solid
okay solid
enough basics of a puffer mooba coming
enough basics of a puffer mooba coming
along got our
along got our
Towers we can heal we can hit this Tower
Towers we can heal we can hit this Tower
yeah this is like reasonable
I mean this is kind of already to the
I mean this is kind of already to the
point where um if I were to like tune
point where um if I were to like tune
this a little bit we could probably even
this a little bit we could probably even
get some cool behaviors out of it of
get some cool behaviors out of it of
course it's still incredibly incredibly
course it's still incredibly incredibly
basic but um not bad for two days worth
basic but um not bad for two days worth
of Dev I'd
of Dev I'd
say the movement feels really good like
say the movement feels really good like
the fact that I have uh the Excel like
the fact that I have uh the Excel like
so you do little close movements like
so you do little close movements like
this and then you can go fast that feels
this and then you can go fast that feels
really good
and of course we can do like classes and
and of course we can do like classes and
stuff maybe so like I could make the the
stuff maybe so like I could make the the
heel be like an AOE that only one of
heel be like an AOE that only one of
them has or something and we'll add cool
them has or something and we'll add cool
Downs there's lots of cool stuff we can
Downs there's lots of cool stuff we can
do from here uh codes a mess definitely
do from here uh codes a mess definitely
needs to be cleaned up
let's make a commit while it
works uh basic skills
so many places we could go from
here I don't want to start on the
here I don't want to start on the
minions until much
minions until much
later I want to have like a relatively
later I want to have like a relatively
complete game without obviously the
complete game without obviously the
minions being a major major thing just
minions being a major major thing just
cuz they're going to be a pain to
cuz they're going to be a pain to
implement
let me think we could
do classes are also be tricky to be
fair classes will also be
tricky I mean we don't have like the
tricky I mean we don't have like the
armor Health like all like the uh the
armor Health like all like the uh the
main stuff that would make them truly
distinct we also don't have cooldowns on
distinct we also don't have cooldowns on
stuff or a UI we're missing all of
that um let me think if there's anything
that um let me think if there's anything
cool I can do in the next 15 20
minutes for
this it's kind of hard to add like
this it's kind of hard to add like
attack animations right you know
I mean I could you know what I want to
I mean I could you know what I want to
do is I just want to look through the
do is I just want to look through the
data
data
structures um so I can think about if
structures um so I can think about if
there's a better way of doing stuff that
there's a better way of doing stuff that
might be that might be a useful thing to
might be that might be a useful thing to
do um I'd also like to record a quick
do um I'd also like to record a quick
little demo for the
little demo for the
uh for Twitter let's record a quick
uh for Twitter let's record a quick
little
little
demo MOA gif
demo MOA gif
FPS
FPS
is uh 10 is fine no 20 I think we do 20
FPS and this is only 5
Seconds 50
Seconds 50
seconds 500 it'll be
it's not on screen hold on it's not even
it's not on screen hold on it's not even
on
screen for
okay I think that's the full demo let's
okay I think that's the full demo let's
see if we get a nice gift out of that
very
nice hello
welcome just got a nice demo of
welcome just got a nice demo of
this looks like it
works let's post this and go over some
works let's post this and go over some
uh some data structures in the project
uh some data structures in the project
so I can figure out some stuff to do
so I can figure out some stuff to do
with it tomorrow
oops oh yeah we got lots of cool
oops oh yeah we got lots of cool
environments around here got I have this
environments around here got I have this
one as
one as
well there
I have a hard time solving leak code and
I have a hard time solving leak code and
I'm a beginner in coding can you give me
I'm a beginner in coding can you give me
an advice please
an advice please
uh I am terrible at leak coding because
uh I am terrible at leak coding because
I've never bothered grinding it because
I've never bothered grinding it because
I've never done that type of job
I've never done that type of job
interview
interview
um solving leak code is absolutely
um solving leak code is absolutely
completely different from the ability to
completely different from the ability to
build stuff leak code is what you do for
build stuff leak code is what you do for
job
job
interviews uh in like General software
interviews uh in like General software
engineering um really the only thing you
engineering um really the only thing you
can do is go study basic data structures
can do is go study basic data structures
and algorithms and then do a bunch of
and algorithms and then do a bunch of
those problems because they're not the
those problems because they're not the
type of problem that anybody like nobody
type of problem that anybody like nobody
is solving well almost nobody is solving
is solving well almost nobody is solving
those problems without having seen them
those problems without having seen them
before like they literally will show up
before like they literally will show up
to the job interview having seen every
to the job interview having seen every
possible iteration of all of those
possible iteration of all of those
problems
it's a little bit better than this demo
it's a little bit better than this demo
isn't
it let's look at some data structures
it let's look at some data structures
for this uh this project before I close
for this uh this project before I close
out for
today you give me suggestions about
today you give me suggestions about
starting with coding if you want to
starting with coding if you want to
actually learn how to build stuff
actually learn how to build stuff
and not hate it um I suggest that you
and not hate it um I suggest that you
pick very very simple basic projects um
pick very very simple basic projects um
like with your ability okay if you're
like with your ability okay if you're
asking me what language I'm going to
asking me what language I'm going to
assume very simple
assume very simple
um you know if you're just getting into
um you know if you're just getting into
stuff python is a nice starting point
stuff python is a nice starting point
um it doesn't teach you a lot of the
um it doesn't teach you a lot of the
fundamental things that you will need
fundamental things that you will need
later on um even if you are working in
later on um even if you are working in
py on but it's it's a nice easy starting
py on but it's it's a nice easy starting
point and it will let you build very
point and it will let you build very
basic projects very soon
um there like I guess some cool stuff I
um there like I guess some cool stuff I
remember like one of the really basic
remember like one of the really basic
projects I would do is you could
projects I would do is you could
Implement image filters image filters
Implement image filters image filters
will teach you like basic loops and
will teach you like basic loops and
basic uh data manipulation and they're
basic uh data manipulation and they're
kind of cool cuz you can make like uh
kind of cool cuz you can make like uh
you know an edge filter in like 10 lines
you know an edge filter in like 10 lines
of code or you can Implement stuff like
of code or you can Implement stuff like
that
that
yeah python has a lot of learning
yeah python has a lot of learning
resources and it's the best supported
resources and it's the best supported
things by llms so you can probably ask
things by llms so you can probably ask
them for like advice kind of like a
them for like advice kind of like a
personalized tutor as long as stuff
personalized tutor as long as stuff
doesn't get too complicated um I think
doesn't get too complicated um I think
that that's probably a really good use
that that's probably a really good use
case for
it but yeah the content here
it but yeah the content here
is the content here is um
this is like brand new RL
research I mean I started when I started
research I mean I started when I started
programming I started programming by
programming I started programming by
like making Minecraft mods had no idea
like making Minecraft mods had no idea
what I was doing but it was fun so like
what I was doing but it was fun so like
I did a lot of it right and then after
I did a lot of it right and then after
that I started making my own little
that I started making my own little
projects I don't know I made like a
projects I don't know I made like a
couple little cool combat
couple little cool combat
simulators um I did a couple like really
simulators um I did a couple like really
basic AI things and then once I sort of
basic AI things and then once I sort of
got the ropes of that I started doing a
got the ropes of that I started doing a
basic AI research and then I got better
basic AI research and then I got better
at it and I started you know actually
at it and I started you know actually
doing cool stuff from
there I mean I can give you a couple
there I mean I can give you a couple
things the thing I'm using right now I
things the thing I'm using right now I
really like um rib for graphics if you
really like um rib for graphics if you
want to do anything with Graphics really
want to do anything with Graphics really
really simple and easy
really simple and easy
Library very
nice which coding Industries will solve
nice which coding Industries will solve
AI I mean shortterm or longterm right
AI I mean shortterm or longterm right
um like long-term nothing if you think
um like long-term nothing if you think
AI is going to solve everything but I
AI is going to solve everything but I
fail to see how there's a world in which
fail to see how there's a world in which
programming is not valuable and there
programming is not valuable and there
are other things that are valuable like
are other things that are valuable like
I think that programming is going to be
I think that programming is going to be
like one of the last things to actually
like one of the last things to actually
be fully
be fully
replaced like by the time programming is
replaced like by the time programming is
automated like programming solves
automated like programming solves
everything so that just means everything
everything so that just means everything
is
solved I started brain dead copying
solved I started brain dead copying
tensorflow 1.0 tutorials not knowing
tensorflow 1.0 tutorials not knowing
what the was happening oh man I
what the was happening oh man I
started you had it easy in tensorflow
started you had it easy in tensorflow
1.0 let me tell you back in my day we
1.0 let me tell you back in my day we
had Cafe 1.0 where you wrote These God
had Cafe 1.0 where you wrote These God
awul schema files or whatever like these
awul schema files or whatever like these
config files and it like came up with
config files and it like came up with
the neural net for you and you couldn't
the neural net for you and you couldn't
edit it or do anything with
it wait let me let me find let me find a
it wait let me let me find let me find a
fun sci-fi picture
yeah okay so by the time AI solves all
yeah okay so by the time AI solves all
of coding I think that uh civilization
of coding I think that uh civilization
looks like this so I think you're good
web development is probably going to be
web development is probably going to be
the first one getting
replaced I also tried to write a neural
replaced I also tried to write a neural
network in Java it was not a fun
network in Java it was not a fun
time
uh well if you want the really the
uh well if you want the really the
really amusing take is like you don't
really amusing take is like you don't
need AI replace the majority of
need AI replace the majority of
programmers right like the like the
programmers right like the like the
majority of programmers can be replaced
majority of programmers can be replaced
by simply not having them because
by simply not having them because
they're doing negative work
they're doing negative work
um yeah like you need to be when you're
um yeah like you need to be when you're
like working on a larger project or even
like working on a larger project or even
a medium-sized project like you need to
a medium-sized project like you need to
know what you're doing to actually be
know what you're doing to actually be
adding value to it um so that's the real
adding value to it um so that's the real
like you know what when will AI replace
like you know what when will AI replace
things um yeah
web dev is a nightmare I actually I've
web dev is a nightmare I actually I've
done zero web dev in my time because I
done zero web dev in my time because I
just I have a very low tolerance for
just I have a very low tolerance for
really terrible uh programming Stacks I
really terrible uh programming Stacks I
probably should do some so I can put all
probably should do some so I can put all
these cool environments on online
these cool environments on online
somehow
somehow
but I I can't deal with the stack the
but I I can't deal with the stack the
web stack gets worse every year it's
web stack gets worse every year it's
ridiculous somehow it gets worse every
year I was going to look at data
year I was going to look at data
structures
structures
here hey it's cool that I see four on
here hey it's cool that I see four on
Twitch so I guess there is some
Twitch so I guess there is some
discoverability there that's kind of
discoverability there that's kind of
cool
cool
I haven't even advertised anything with
I haven't even advertised anything with
the twitch that's kind of
the twitch that's kind of
nice
um so the thing what do you consider
um so the thing what do you consider
webd I picked your building WordPress
webd I picked your building WordPress
websites for people with minimal
websites for people with minimal
interaction with
plugins to be webbed
plugins to be webbed
of oh I don't know it's
you never make an the thing is you never
you never make an the thing is you never
make an engine to like
make an engine to like
do the thing that you want like the
do the thing that you want like the
engine for building your custom website
engine for building your custom website
is called code right that's that's the
is called code right that's that's the
engine for building your website Ian you
engine for building your website Ian you
can paper over it with like a whole
can paper over it with like a whole
bunch of things to write specific
bunch of things to write specific
code but it's really hard to replace
code but it's really hard to replace
just writing general purpose code
it's like it's like asking like when
it's like it's like asking like when
will you know here it's like asking when
will you know here it's like asking when
will uh AI replace math or English or
will uh AI replace math or English or
something
right or when will scratch replace you
right or when will scratch replace you
know meain actual languages it's yeah
and I wish it would replace everything
and I wish it would replace everything
because then you know if it replaced
because then you know if it replaced
everything then I wouldn't have to do
everything then I wouldn't have to do
all this I wouldn't have to work on all
all this I wouldn't have to work on all
these things everything would be solved
these things everything would be solved
and that would be great
I see a lot of people on uh on Twitter
I see a lot of people on uh on Twitter
working with these like these crazy AI
working with these like these crazy AI
workflows where they're basically just
workflows where they're basically just
like telling the AI fix the bugs yeah
like telling the AI fix the bugs yeah
there are more bugs fix those yep keep
there are more bugs fix those yep keep
fixing those and like they keep just
fixing those and like they keep just
hitting enter until it eventually kind
hitting enter until it eventually kind
of works and they have like some giant
of works and they have like some giant
garbage heap of code written by whatever
garbage heap of code written by whatever
llm and it that just does not sound like
llm and it that just does not sound like
a fun
time yeah it's
time yeah it's
nuts I mean there's this demo
nuts I mean there's this demo
online yeah like right how could you
online yeah like right how could you
possibly maintain that I mean I say that
possibly maintain that I mean I say that
having written this complete garbage
having written this complete garbage
script today but like I'm not it's not
script today but like I'm not it's not
going to stay this way it's getting
going to stay this way it's getting
refactored and it's going to get
refactored and it's going to get
refactored way better than llm could
refactored way better than llm could
refactor it right
the thing that's happened in AI that's
the thing that's happened in AI that's
really obnoxious know was having been in
really obnoxious know was having been in
this space for years like you saw all
this space for years like you saw all
the shields in web2 right all like the
the shields in web2 right all like the
Shields and scammers in web2 and then
Shields and scammers in web2 and then
they moved over to crypto and nfts and
they moved over to crypto and nfts and
like web 3 and like all these various
like web 3 and like all these various
different things oh yeah it was iot at
different things oh yeah it was iot at
one point right and now they've all
one point right and now they've all
moved into AI so like there are serious
moved into AI so like there are serious
people in AI that are like having fun
people in AI that are like having fun
spec ulating about where it might go
spec ulating about where it might go
right but then there are also a bunch of
right but then there are also a bunch of
shs that are like oh it's going to like
shs that are like oh it's going to like
everything is going to be solved next
everything is going to be solved next
year there'll be no programmers in two
year there'll be no programmers in two
years like don't listen to those
years like don't listen to those
people they're
nuts and again I would very much like it
nuts and again I would very much like it
if AI did solve everything I'd have a
if AI did solve everything I'd have a
lot less work to have to do right
I could come back from my run in the
I could come back from my run in the
morning and go take a 4our nap instead
morning and go take a 4our nap instead
of sitting here and writing code for
of sitting here and writing code for
four hours that would be
nice I'm trying to think if there's a
nice I'm trying to think if there's a
way to design this
way to design this
thing without needing
pids if you think about it the PID
pids if you think about it the PID
system is really just pointers to all
system is really just pointers to all
the entities in this
the entities in this
game like I've reinvented pointers but
game like I've reinvented pointers but
in a way that makes sense with
numpy underlying technology might be
numpy underlying technology might be
there in a matter of years mountain of
there in a matter of years mountain of
processing place that involve people
processing place that involve people
that won't
be the other thing is just like
be the other thing is just like
programming skill a programming skill is
programming skill a programming skill is
exponential like one really good Dev can
exponential like one really good Dev can
do exponentially more than you know a
do exponentially more than you know a
bunch of bunch of mediocre
bunch of bunch of mediocre
devs
right I know don't get too caught up in
right I know don't get too caught up in
the whole
the whole
like you can just like you can scroll
like you can just like you can scroll
Twitter all day and like follow a bunch
Twitter all day and like follow a bunch
of shills and have a bad time or you can
of shills and have a bad time or you can
like close Twitter and actually build
like close Twitter and actually build
stuff
right what are you thinking with your
right what are you thinking with your
player pointers yeah so it's really
player pointers yeah so it's really
obnoxious here because I know how to
obnoxious here because I know how to
build this in Python
build this in Python
right in Python I know how to build this
right in Python I know how to build this
crazy inefficiently right you just have
crazy inefficiently right you just have
your grid and you have this 2D grid
your grid and you have this 2D grid
right and it's just a list of lists and
right and it's just a list of lists and
then each element in this 2D grid will
then each element in this 2D grid will
just be your uh object which is like
just be your uh object which is like
your player or your Tower or whatever
your player or your Tower or whatever
and you just check if like it's empty
and you just check if like it's empty
the specific spot on the list is empty
the specific spot on the list is empty
in the grid and that will tell you um
in the grid and that will tell you um
whether you know you can move there or
whether you know you can move there or
not and then you don't have to worry
not and then you don't have to worry
about uh screwing up you know with this
about uh screwing up you know with this
these pids and like getting them wrong
these pids and like getting them wrong
and you know having them be out of sync
and you know having them be out of sync
and stuff because they're directly
and stuff because they're directly
references to the objects what I've done
references to the objects what I've done
is i' I've kind of reinvented pointers
is i' I've kind of reinvented pointers
with this PID system because I don't
with this PID system because I don't
think you can make you can't make like
think you can make you can't make like
an me map of pointers directly and even
an me map of pointers directly and even
if you did then you'd have to deal with
if you did then you'd have to deal with
like d reference checks and stuff so
like d reference checks and stuff so
that's essentially what python does
that's essentially what python does
right it like does avoid
right it like does avoid
star it's like a 2d array of void star
star it's like a 2d array of void star
that handles the D referencing for you
um but I'm not sure if there's a better
um but I'm not sure if there's a better
way to do it than I'm doing
way to do it than I'm doing
now that's the tricky thing because like
now that's the tricky thing because like
right now right I have to assign there's
right now right I have to assign there's
like a range of pids that is the Players
like a range of pids that is the Players
there's a range of pids that correspond
there's a range of pids that correspond
to Towers there's going to be like a
to Towers there's going to be like a
range of pids that corresponds to creeps
range of pids that corresponds to creeps
and like unless I'm going to do weird
and like unless I'm going to do weird
Union type things which I don't even
Union type things which I don't even
know how to do in C I can't write a
know how to do in C I can't write a
function that's like get object from PID
function that's like get object from PID
because that function needs to know
because that function needs to know
whether it returns a player a a tower or
whether it returns a player a a tower or
a creep or whatever else I decid to put
a creep or whatever else I decid to put
in the game right so like I can't return
in the game right so like I can't return
a generic a generic thing um I don't
a generic a generic thing um I don't
think you can sub I don't think there's
think you can sub I don't think there's
like any struct inheritance things pids
like any struct inheritance things pids
are essentially coordinates they are
are essentially coordinates they are
indices uh the pids tell you which it's
indices uh the pids tell you which it's
player ID so pit is it tells you like I
player ID so pit is it tells you like I
have a list of um or not a list I have
have a list of um or not a list I have
like in a big array of players so if I
like in a big array of players so if I
have like pit zero I go look into the
have like pit zero I go look into the
first row or whatever and that's where
first row or whatever and that's where
the players are it's like a pointer um
the players are it's like a pointer um
but I need it to work for I have
but I need it to work for I have
multiple different object types or
multiple different object types or
multiple different struct types because
multiple different struct types because
like I have this player struct here I've
like I have this player struct here I've
got this creep struct I've got this
got this creep struct I've got this
Tower struct and unless I can like
Tower struct and unless I can like
unless there's a union type in this that
unless there's a union type in this that
I can use which is still kind of garbage
I can use which is still kind of garbage
um there's not really a way to just
um there's not really a way to just
easily keep track of what is where on
easily keep track of what is where on
that grid and I mean at the same time
that grid and I mean at the same time
I've got I have like this actual thing
I've got I have like this actual thing
that's the environment grid that tells
that's the environment grid that tells
you what type of thing is
you what type of thing is
there so like the the grid tells you if
there so like the the grid tells you if
it's like a player a tower a creep but
it's like a player a tower a creep but
it doesn't tell you which one it is and
it doesn't tell you which one it is and
then I have this PID map that tells you
then I have this PID map that tells you
which one it is right but doesn't
which one it is right but doesn't
directly without looking it up tell you
directly without looking it up tell you
the material type or whatever so there's
the material type or whatever so there's
just all this stuff going on and like
just all this stuff going on and like
it's introducing these additional layers
it's introducing these additional layers
of indirection that are the main source
of indirection that are the main source
of bugs at the moment so I'm trying to
of bugs at the moment so I'm trying to
think if there's a way I can re-engineer
think if there's a way I can re-engineer
this thing somehow to be simpler on that
this thing somehow to be simpler on that
front I really like what I was able to
front I really like what I was able to
do with
do with
um uh player OBS here and creeps and
um uh player OBS here and creeps and
Towers like these are really simple cuz
Towers like these are really simple cuz
these are just m Maps over players
these are just m Maps over players
creeps and Towers right there's no
creeps and Towers right there's no
pointer Shenanigans here there no Segal
pointer Shenanigans here there no Segal
potential it's very nice
potential it's very nice
um but this PID thing this pit and this
um but this PID thing this pit and this
grid these are not nice
h
yeah I don't want to drink the O
yeah I don't want to drink the O
Kool-Aid it's a mess I mean the thing
Kool-Aid it's a mess I mean the thing
is okay so
is okay so
technically technically I could decide
technically technically I could decide
that I'm going to just have one struck
that I'm going to just have one struck
type right cuz they're pretty similar
type right cuz they're pretty similar
and then I could just end up with having
and then I could just end up with having
like some of these that have um know
like some of these that have um know
there could just be an INT entity type
there could just be an INT entity type
for instance so I have one struct and
for instance so I have one struct and
then there's like an entity type that is
then there's like an entity type that is
a part of the struct that tells you if
a part of the struct that tells you if
it's a player a creep a tower and stuff
it's a player a creep a tower and stuff
like that so I could do
like that so I could do
that and
then and then
then and then
what I still wouldn't be able to make
what I still wouldn't be able to make
like a 2d grid of these things
right would I
um I don't know how this would
um I don't know how this would
work so wait if I
work so wait if I
made so
complicated no this is a me
complicated no this is a me
map what are you going to do with the IL
map what are you going to do with the IL
Els checks all over the place to deal
Els checks all over the place to deal
with different entity types well I have
with different entity types well I have
those right now
those right now
right it's driving me nuts
so the whole reason that this stuff
so the whole reason that this stuff
exists right is to do um local like
exists right is to do um local like
local Collision checks and stuff like
local Collision checks and stuff like
the reason that there's a
the reason that there's a
grid is so that uh when you move a
grid is so that uh when you move a
player right you discretize the
player right you discretize the
positions and you can see if there's
positions and you can see if there's
something in what would be the
something in what would be the
discretized grid cell that you're moving
discretized grid cell that you're moving
into too so that's how I get Collision
into too so that's how I get Collision
checks for free and how they're
checks for free and how they're
incredibly efficient because it's just
incredibly efficient because it's just
is there something in the block that
is there something in the block that
you're in yes or no incredibly
you're in yes or no incredibly
incredibly efficient
um
um
similarly similarly right like when you
similarly similarly right like when you
make when you make an attack against
make when you make an attack against
something
well let's say for computing the
well let's say for computing the
observations right like when you need to
observations right like when you need to
see what agents are nearby you in order
see what agents are nearby you in order
to select one to attack or do something
to select one to attack or do something
like that um you need to know which
like that um you need to know which
agents are around you on a grid it needs
agents are around you on a grid it needs
to be a grid because otherwise you have
to be a grid because otherwise you have
to do the O of and squared check over
to do the O of and squared check over
all the entities in the scene and that
all the entities in the scene and that
scales absolutely terribly so unless I'm
scales absolutely terribly so unless I'm
going to commit to there being like you
going to commit to there being like you
know 100 total things and even that's
know 100 total things and even that's
probably too slow
probably too slow
um it's just not a good way of handling
um it's just not a good way of handling
it
right though I really don't like having
right though I really don't like having
to have a grid and entities it's really
to have a grid and entities it's really
obnoxious because like when you have a
obnoxious because like when you have a
grid uh grid scale very poorly with the
grid uh grid scale very poorly with the
size of the observation window right so
size of the observation window right so
like if you want to have a grid for what
like if you want to have a grid for what
would be a full-size game window in an
would be a full-size game window in an
actual like AAA game that you're playing
actual like AAA game that you're playing
um that doesn't work because you have to
um that doesn't work because you have to
partition the screen up into small
partition the screen up into small
enough grid cells and that ends up being
enough grid cells and that ends up being
way too much data to put into your
way too much data to put into your
neural network so entity based stuff is
neural network so entity based stuff is
incredibly incredibly efficient for that
incredibly incredibly efficient for that
because like there are five players on
because like there are five players on
your screen right they go into an
your screen right they go into an
array you can limit the amount of
array you can limit the amount of
neighbor St
neighbor St
by using something like quad yes so you
by using something like quad yes so you
can technically you can go from N2 to uh
can technically you can go from N2 to uh
n log n or whatever it is with quad
n log n or whatever it is with quad
trees
right but it's nlog again with a
right but it's nlog again with a
potentially big constant on it because
potentially big constant on it because
you have to get a really efficient quad
you have to get a really efficient quad
Tre
implementation right now it's 0 of
implementation right now it's 0 of
one right now the uh the neighbor check
one right now the uh the neighbor check
is O of
one you you do something like spatial
one you you do something like spatial
hashing which is also I think o of one
hashing which is also I think o of one
but
but
um if you do that then it it's 0 of one
um if you do that then it it's 0 of one
with a gigantic constant is the
thing willing to eat the cost of larger
thing willing to eat the cost of larger
data if it means
data if it means
faster data
faster data
access well I'm willing there I'm
access well I'm willing there I'm
willing for there to be larger data on
willing for there to be larger data on
the simulator right the simulator has
the simulator right the simulator has
lots of memory I don't care about that
lots of memory I don't care about that
uh I am not willing to eat the cost of
uh I am not willing to eat the cost of
larger data going into the neural
larger data going into the neural
network that's really
bad now I mean that said
bad now I mean that said
like it's really hard to think how you
like it's really hard to think how you
would get
would get
around um having at least some sort of
around um having at least some sort of
nav mesh right you probably need some
nav mesh right you probably need some
sort of nav mesh
sort of nav mesh
anyways cuz like you at least need to
anyways cuz like you at least need to
know like passible or not passible for
know like passible or not passible for
the
the
map data going into the neural network
map data going into the neural network
means the grid well if think about it
means the grid well if think about it
right so like let's look at
right so like let's look at
this it can be whatever you want it to
this it can be whatever you want it to
be like the way to think about this is
be like the way to think about this is
oops when I'm playing this game right I
oops when I'm playing this game right I
see the screen I see pixels that's a
see the screen I see pixels that's a
huge amount of data and not to mention
huge amount of data and not to mention
it's really slow to render all this so
it's really slow to render all this so
you can represent this to the neural
you can represent this to the neural
network however you want um one obvious
network however you want um one obvious
way is like each of these tiles here
way is like each of these tiles here
right you can see like the the part the
right you can see like the the part the
partitioning of this right it's really
partitioning of this right it's really
Jagged so you can give it a map in which
Jagged so you can give it a map in which
you have whoops not sure what happened
you have whoops not sure what happened
there oh it's just it's trying to render
it hold on
so you can give it um you can give it
so you can give it um you can give it
let's say like a binary map that just
let's say like a binary map that just
tells you which um like which tiles are
tells you which um like which tiles are
available you can do something like that
available you can do something like that
if I really wanted to go nuts with this
if I really wanted to go nuts with this
I could even pack it so that each like I
I could even pack it so that each like I
could pack it with just a binary map for
could pack it with just a binary map for
the nav mesh uh I could pack it into
the nav mesh uh I could pack it into
like eight tiles per bite or something
like eight tiles per bite or something
if I wanted to I don't know how bad
if I wanted to I don't know how bad
memory bandwidth is I think it's it's
memory bandwidth is I think it's it's
pretty pretty significant cuz it all has
pretty pretty significant cuz it all has
to go on the GPU which is pretty slow so
to go on the GPU which is pretty slow so
I could technically pack like 32 tiles
I could technically pack like 32 tiles
per uh per integer if I wanted to do it
per uh per integer if I wanted to do it
that way though that's kind of
that way though that's kind of
complicated um it would be really nice
complicated um it would be really nice
if I didn't have to do a nav mesh at all
if I didn't have to do a nav mesh at all
but I don't know how you represent the
but I don't know how you represent the
terrain without having a nav mesh now if
terrain without having a nav mesh now if
you ignore that everything except the
you ignore that everything except the
terrain doesn't have to be represented
terrain doesn't have to be represented
that way right like look even here I can
that way right like look even here I can
only see like 10 things on screen right
only see like 10 things on screen right
now so I can just give you you know my
now so I can just give you you know my
position their positions our healths
position their positions our healths
stuff like that and if that's like I
stuff like that and if that's like I
don't know U maybe five or 10 integers
don't know U maybe five or 10 integers
or floats per agent that's only like
or floats per agent that's only like
what 200 bytes that's reasonable you can
what 200 bytes that's reasonable you can
do
that but this dual representation is
that but this dual representation is
just really obnoxious
because it makes the neural network very
because it makes the neural network very
complicated and it makes writing the
complicated and it makes writing the
code very complicated
used to managing complexity through
used to managing complexity through
abstraction well like there's nothing to
abstraction well like there's nothing to
abstract here it's just like how do you
abstract here it's just like how do you
present your data
present your data
right I mean so this here this is like
right I mean so this here this is like
this is a quite substantial panel to add
this is a quite substantial panel to add
in this is like what is this 40 by 20 or
in this is like what is this 40 by 20 or
something
something
um so that's already that's like 800
um so that's already that's like 800
bits minimum with optimal compression
bits minimum with optimal compression
800 bits of
800 bits of
data um so 200 bytes not terrible but
data um so 200 bytes not terrible but
then you have to do the compression
then you have to do the compression
inside the neural network so it's
inside the neural network so it's
unclear whether you'd want to compress
unclear whether you'd want to compress
it in the first place so that could be
it in the first place so that could be
as much
as much
as uh 800 bytes of
as uh 800 bytes of
data uh this could be as much as 800
data uh this could be as much as 800
bytes of data which is like already a
bytes of data which is like already a
kind of substantial addition to your
kind of substantial addition to your
observations you could do it I guess um
observations you could do it I guess um
but then you have this giant map that
but then you have this giant map that
has to go into probably a convet which
has to go into probably a convet which
is going to going to be slow that
is going to going to be slow that
already just like that probably limits
already just like that probably limits
you to not being able to hit a million
you to not being able to hit a million
steps per
second I mean I could try to do
second I mean I could try to do
something with
like I could try to give you like a very
like I could try to give you like a very
local nav mesh or something or I could
local nav mesh or something or I could
like just give you if you're about to
like just give you if you're about to
hit a
hit a
wall but that doesn't seem like doesn't
wall but that doesn't seem like doesn't
seem like a great
seem like a great
option I could give you a coarser
option I could give you a coarser
version of this thing right like I could
version of this thing right like I could
uh I could like chunk this up so that
uh I could like chunk this up so that
each four blocks is one block maybe that
each four blocks is one block maybe that
would give you like a really coarse nav
would give you like a really coarse nav
mesh that might
work and then we use entity based
work and then we use entity based
observations for the rest of stuff but
observations for the rest of stuff but
it still doesn't make it any easier to
it still doesn't make it any easier to
do the representation
right so here technically right
right so here technically right
technically I could make a player M map
technically I could make a player M map
which is a 2d array of
which is a 2d array of
player and I could have one type for
player and I could have one type for
everything but then I'm pretty sure
everything but then I'm pretty sure
because this is a m map I'm pretty sure
because this is a m map I'm pretty sure
that the actual data structure is not
that the actual data structure is not
it's not a 2d array of pointers it's a
it's not a 2d array of pointers it's a
2d array of the actual data so whenever
2d array of the actual data so whenever
I move a player onto that I have to copy
I move a player onto that I have to copy
the whole player which is
the whole player which is
slow I don't want to have to do that
slow I don't want to have to do that
because moving pids around is actually
because moving pids around is actually
really really computationally efficient
really really computationally efficient
even though it's
obnoxious the only R the only reason
obnoxious the only R the only reason
that you would want to copy players
that you would want to copy players
around like I just mentioned is if
around like I just mentioned is if
you're going to compute observations by
you're going to compute observations by
just slicing directly into the player
just slicing directly into the player
map
map
which I guess you can
which I guess you can
do but it's a lot of
data it's
hard haven't even gotten to the
hard haven't even gotten to the
obnoxious neural networks that are
obnoxious neural networks that are
required to handle entity based data
required to handle entity based data
though they can be made very
efficient it's seven so I'm going to
efficient it's seven so I'm going to
think about this for a couple more
think about this for a couple more
minutes and then I'm going to go to
minutes and then I'm going to go to
dinner if anybody has any like random
dinner if anybody has any like random
generic RL questions I wouldn't mind
generic RL questions I wouldn't mind
answering a few of those but I'm
answering a few of those but I'm
probably just going to have to sleep on
this out of my wheelhouse I'm in watch
this out of my wheelhouse I'm in watch
mode
mode
yeah understandable I mean this is these
yeah understandable I mean this is these
are variations of the problems that have
are variations of the problems that have
just been always been difficult in the
just been always been difficult in the
field for years um it all comes down
field for years um it all comes down
to representing your game state or your
to representing your game state or your
simulator state in a way that is both
simulator state in a way that is both
good for the simulator being fast and
good for the simulator being fast and
good for the reinforcement learning and
good for the reinforcement learning and
that's very very hard to do well
very hard to do
well and the developer as well yes so
well and the developer as well yes so
it's not absolutely got awful to write
it's not absolutely got awful to write
um
I mean I could probably prettify the PID
I mean I could probably prettify the PID
thing so it's not too bad right um but
thing so it's not too bad right um but
yeah anytime you're doing anything with
yeah anytime you're doing anything with
an object right like anytime you have
an object right like anytime you have
something that just like function needs
something that just like function needs
to be applied over an object in the
to be applied over an object in the
space you're going to need to have paths
space you're going to need to have paths
for every single type of
for every single type of
object it's like an entity
unless of course right I make it just
unless of course right I make it just
one struct that's just
one struct that's just
entities I could just do entities like
that yeah code paths multiple code paths
that yeah code paths multiple code paths
like you're going to have to do some
like you're going to have to do some
conditional on the player ID and like if
conditional on the player ID and like if
the player ID is less than the number of
the player ID is less than the number of
players then it's a player otherwise if
players then it's a player otherwise if
it's less than the players plus creeps
it's less than the players plus creeps
it's going to be creep otherwise it's a
it's going to be creep otherwise it's a
tower um It's actually kind of cleaner
tower um It's actually kind of cleaner
to just have one struct type that is
to just have one struct type that is
entity kind of just cleaner to have one
entity kind of just cleaner to have one
struct type that is
struct type that is
entity and then because a lot of the
entity and then because a lot of the
time when you're getting an entity you
time when you're getting an entity you
don't care right you don't care about
don't care right you don't care about
what it is you just care like you want
what it is you just care like you want
the position or something so I think
the position or something so I think
that codewise if you can just get the
that codewise if you can just get the
entity and then you can get like entity
entity and then you can get like entity
y entity X or whatever and then if you
y entity X or whatever and then if you
need to know you can do like entity do
need to know you can do like entity do
you know type or whatever and you can
you know type or whatever and you can
get as player or creep or
get as player or creep or
Tower right as an enum something like
Tower right as an enum something like
that that's
that that's
good can python structs have behavior on
good can python structs have behavior on
them or just dat data uh these are not
them or just dat data uh these are not
python strs these are native C strs this
python strs these are native C strs this
is uh scon syntactic sugar over c
is uh scon syntactic sugar over c
structs
structs
um I guess technically they could
um I guess technically they could
probably have a function on them I think
probably have a function on them I think
it would be a void
it would be a void
star but it's like if you could do it
star but it's like if you could do it
the exact you'd do it the exact way as C
the exact you'd do it the exact way as C
so you'd be Reinventing stuff
yeah yeah python doesn't have a struct
yeah yeah python doesn't have a struct
keyword it's one of the things I really
keyword it's one of the things I really
really wish the language had was a
really wish the language had was a
proper struct keyword it drives me
proper struct keyword it drives me
nuts but hey it's in
scon yeah these are literally these are
scon yeah these are literally these are
one to one with
cs can you clean up The Code pth by
cs can you clean up The Code pth by
putting some of the branching behavior
putting some of the branching behavior
on the struct
on the struct
itself you are trying to do Dynamic
itself you are trying to do Dynamic
dispatch I think um you're trying to
dispatch I think um you're trying to
like have you're trying to do the
like have you're trying to do the
pattern
pattern
where you know you're so you're right
where you know you're so you're right
but that's like not something in this
but that's like not something in this
language um so you're trying to do
language um so you're trying to do
Dynamic dispatch where you have multiple
Dynamic dispatch where you have multiple
implementations and then you can like
implementations and then you can like
get entity right and then call entity
get entity right and then call entity
like entity. attack or whatever or
like entity. attack or whatever or
entity like. take damage or something
entity like. take damage or something
and have different implementations for
and have different implementations for
each of these um that does not really
each of these um that does not really
exist
here it does not really
exist or if you did exist you'd have to
exist or if you did exist you'd have to
implement it with like void Stars
I kind of do like flipping it it's it's
I kind of do like flipping it it's it's
kind of gross in some ways to
kind of gross in some ways to
have
have
um I guess in theory if there's a single
um I guess in theory if there's a single
entity you could at least hide some of
entity you could at least hide some of
the branching logic in the entity
the branching logic in the entity
instead of your simulation code well
instead of your simulation code well
it's not so much that you can hide the
it's not so much that you can hide the
branching logic in the entity because
branching logic in the entity because
the entity is still not going to have
the entity is still not going to have
methods um it's that like you don't
methods um it's that like you don't
always need to know what type of entity
always need to know what type of entity
it is right like a lot of the time you
it is right like a lot of the time you
just need to know the position of a
just need to know the position of a
thing
right especially like if all the
right especially like if all the
entities have health and stuff
that makes it really easy to do stuff
that makes it really easy to do stuff
because like all the functions can take
because like all the functions can take
either an ID a PID or they can just take
either an ID a PID or they can just take
like an entity star or an
like an entity star or an
entity entity
reference but the place where it's gross
reference but the place where it's gross
is like um you end up with like a lot of
is like um you end up with like a lot of
like Towers in that case like Tower is
like Towers in that case like Tower is
going to have like skill tags and stuff
going to have like skill tags and stuff
from players and they're just going to
from players and they're just going to
be
unused this is what people use like
unused this is what people use like
Union types
for though I don't really think the
for though I don't really think the
union type
union type
solve that problem so
solve that problem so
much problem gets worse as you introduce
much problem gets worse as you introduce
more entity types yeah it does I mean
more entity types yeah it does I mean
the thing is this is not like an
the thing is this is not like an
infinite scoped project right this is
infinite scoped project right this is
supposed to be a relatively small scoped
supposed to be a relatively small scoped
mini MOBA so like they're going the
mini MOBA so like they're going the
entities that they're going to be
entities that they're going to be
they're going to be Towers they're going
they're going to be Towers they're going
to be creeps there might be a few
to be creeps there might be a few
different types of creeps right which
different types of creeps right which
could just be you know creeps that have
could just be you know creeps that have
different attacks or whatever um maybe
different attacks or whatever um maybe
there'll be a few types who knows
there'll be a few types who knows
they're going to be
players what else is there in am MOA I
players what else is there in am MOA I
don't know maybe they'll be like a
don't know maybe they'll be like a
bounty Rune or like a neutral or
bounty Rune or like a neutral or
something like
something like
that but maybe those will just be
that but maybe those will just be
implemented as different sted creeps I
implemented as different sted creeps I
don't know depends if I want to have
don't know depends if I want to have
like a unique identifier so I can render
like a unique identifier so I can render
them
differently but even then it's not that
differently but even then it's not that
bad
because your logic kind of goes course
because your logic kind of goes course
to fine right because like first you
to fine right because like first you
know it's an entity The Entity has some
know it's an entity The Entity has some
properties right and then like you could
properties right and then like you could
check you can check like you know uh
check you can check like you know uh
type and you can see that it's like a
type and you can see that it's like a
player a creep or a tower
player a creep or a tower
maybe and then like maybe there's like a
maybe and then like maybe there's like a
creep type attribute or whatever that
creep type attribute or whatever that
only creeps use and if you really need
only creeps use and if you really need
to know what type of creep it is which
to know what type of creep it is which
you don't need to know for most things
you don't need to know for most things
right like maybe if you kill it and you
right like maybe if you kill it and you
get a different amount of XP or
get a different amount of XP or
something you need to know but most of
something you need to know but most of
the time you don't need to know so if
the time you don't need to know so if
you really need to know that you can
you really need to know that you can
check it and Branch the logic based on
check it and Branch the logic based on
that
that
um but when you at least if you like
um but when you at least if you like
Union all the
Union all the
strs together if you have like a union
strs together if you have like a union
all the trucks is not that bad
also means that when you add uh add no
also means that when you add uh add no
more types you don't have to add like
more types you don't have to add like
different stuff into the function
signatures it's not
signatures it's not
bad it's pretty darn efficient you don't
bad it's pretty darn efficient you don't
have to check against multiple types you
have to check against multiple types you
don't have to do branching Logic on PID
don't have to do branching Logic on PID
but you don't have to do branching Logic
but you don't have to do branching Logic
on pit at all in
on pit at all in
fact uh
fact uh
they they might not even need to have a
they they might not even need to have a
PID right in the struct I don't think
PID right in the struct I don't think
that they need to even have a pit in the
that they need to even have a pit in the
struct necessarily at that point because
struct necessarily at that point because
you know you know it has the type so you
you know you know it has the type so you
don't need to branch on
don't need to branch on
PID so that could be better
looking at this thing right now
looking at this thing right now
basically they're all the same
basically they're all the same
anyways gain the benefits of
anyways gain the benefits of
polymorphism it's not really
polymorphism it's not really
polymorphism it's very explicit and
polymorphism it's very explicit and
procedural um the one gross thing is
procedural um the one gross thing is
like having everything in the trucks but
like having everything in the trucks but
the thing is for reinforcement learning
the thing is for reinforcement learning
right
right
like because this is for reinforcement
like because this is for reinforcement
learning I kind of don't want to give
learning I kind of don't want to give
you like a sub dictionary that has
you like a sub dictionary that has
uh agents in a subdictionary with Creeps
uh agents in a subdictionary with Creeps
in a subdictionary like I don't want to
in a subdictionary like I don't want to
give you a bunch of different
give you a bunch of different
subdictionaries I probably just want to
subdictionaries I probably just want to
give you one big block of entities
give you one big block of entities
anyways because that will be more
anyways because that will be more
efficient to process with a neural
efficient to process with a neural
network does that make sense like if I
network does that make sense like if I
just give you all the entities in one
just give you all the entities in one
big block you run your neuronet forward
big block you run your neuronet forward
path parallelized over that whole big
path parallelized over that whole big
block whereas if I give you like three
block whereas if I give you like three
slightly different strs one for creeps
slightly different strs one for creeps
one for players one for Towers or
one for players one for Towers or
whatever then you need to have like
whatever then you need to have like
different modules in your neuronet to
different modules in your neuronet to
process all that stuff yeah neuron Nets
process all that stuff yeah neuron Nets
prefer flat data
prefer flat data
always and this is very compact data as
always and this is very compact data as
well because the way that this would
well because the way that this would
work so let's say you have this
work so let's say you have this
representation where your game
representation where your game
internally has this giant block of
internally has this giant block of
entities right then the way that it's
entities right then the way that it's
going to work in your neuronet is when
going to work in your neuronet is when
you compute observations you're just
you compute observations you're just
going to pick like the 10 nearest ones
going to pick like the 10 nearest ones
or like you're going to arbitrarily Pick
or like you're going to arbitrarily Pick
10 entities from the grid and you're
10 entities from the grid and you're
going to put them into those
going to put them into those
observations and then you're just going
observations and then you're just going
to observe those 10 right so you're
to observe those 10 right so you're
going to have a very small partiel of
going to have a very small partiel of
data you still have to keep the grid
data you still have to keep the grid
representation in order to quickly
representation in order to quickly
compute which agents are nearby and
compute which agents are nearby and
stuff but a lot of the logic does get
stuff but a lot of the logic does get
simple
simplified that's nice
there's a really good post on this by
there's a really good post on this by
the way by a friend of mine if you want
the way by a friend of mine if you want
to look at it
um you look up like entity gy clemens's
um you look up like entity gy clemens's
blog he's got this really amazing post
blog he's got this really amazing post
he wrote this crazy cracked engine in
he wrote this crazy cracked engine in
Rust for uh doing this type of
stuff not all of it is needed in
stuff not all of it is needed in
particular I don't think that the Ragged
particular I don't think that the Ragged
buffers I think that they add more
buffers I think that they add more
complexity than they're worth most of
complexity than they're worth most of
the time um but yeah this is the type of
the time um but yeah this is the type of
stuff do you end up with Edge case
stuff do you end up with Edge case
problems where a tower has a bunch of
problems where a tower has a bunch of
stuff around
stuff around
it and most of them are
it and most of them are
friendlies which should be ignoring them
friendlies which should be ignoring them
anyways
anyways
um since you don't have sub dictionaries
um since you don't have sub dictionaries
to filter
to filter
that you would end up with that problem
that you would end up with that problem
anyways because the way that you're
anyways because the way that you're
checking nearby stuff is by iterating
checking nearby stuff is by iterating
over um nearby
over um nearby
tiles now the thing is okay the other
tiles now the thing is okay the other
question right is like is that even
question right is like is that even
tenable because if you're iterating over
tenable because if you're iterating over
nearby tiles you fundamentally like you
nearby tiles you fundamentally like you
can't make the view range of stuff very
can't make the view range of stuff very
long so maybe you were right originally
long so maybe you were right originally
with your quad trees thing right
your sub dictionary doesn't filter by
your sub dictionary doesn't filter by
friendly well the thing is if you need
friendly well the thing is if you need
to know you just do like team right like
to know you just do like team right like
there'll just be like a do team
there'll just be like a do team
attribute that you can like that you can
attribute that you can like that you can
check uh and it's you're not filtering
check uh and it's you're not filtering
you're looping anyways and the loops are
you're looping anyways and the loops are
fast because it's cython their c-s
fast because it's cython their c-s
speed the question is just like the the
speed the question is just like the the
question is really just one of
question is really just one of
representation um grid based views scale
representation um grid based views scale
absolutely terribly over large
absolutely terribly over large
spaces um and uh pure entity based
spaces um and uh pure entity based
comparison scale absolutely terribly
comparison scale absolutely terribly
with number of entities so grid based
with number of entities so grid based
views are quadratic with size of window
views are quadratic with size of window
and entity based filters are quadratic
and entity based filters are quadratic
with number of entities with both of
with number of entities with both of
these potentially having options to uh
these potentially having options to uh
make it n log n with quad Tre like
stroks welcome and thank thank you I
suppose
um I don't know why I've got Politics on
um I don't know why I've got Politics on
my freaking feed it's supposed to be
Tech cool
stuff this is actually this is so crazy
stuff this is actually this is so crazy
this has been running now for almost
this has been running now for almost
here
wow okay I I'm going to take I I got to
wow okay I I'm going to take I I got to
go in a second but because I need dinner
go in a second but because I need dinner
but I just want to show you how insane
but I just want to show you how insane
this is so these runs
this is so these runs
here this is running now 150 experiments
here this is running now 150 experiments
of minimum 500 million steps each which
of minimum 500 million steps each which
is like I've seen experiments by
is like I've seen experiments by
researchers that go to like 10 million
researchers that go to like 10 million
very often right depending if you have
very often right depending if you have
slow environment so this is 150x between
slow environment so this is 150x between
500 mil and over a billion steps so this
500 mil and over a billion steps so this
is like at least 75 million step 75
is like at least 75 million step 75
billion steps worth of
billion steps worth of
data and this hyperparameter tuning
data and this hyperparameter tuning
algorithm is still discovering better
algorithm is still discovering better
and better
Solutions my manual one like from my
Solutions my manual one like from my
previous hyperparameter tuning run the
previous hyperparameter tuning run the
best thing that I found was like right
best thing that I found was like right
here
here
I don't even know if I found something
I don't even know if I found something
this
good this is insane I'm glad I left this
good this is insane I'm glad I left this
thing running carbs is an awesome
thing running carbs is an awesome
awesome algorithm holy hell
looks like it's upping the update Epoch
looks like it's upping the update Epoch
which is a little bit
which is a little bit
funny that's insane though how that
works good algorithm
we filter out the bad runs and look at
we filter out the bad runs and look at
that
well I think tomorrow I'll try out I'll
well I think tomorrow I'll try out I'll
at the very least I'll try out uh
at the very least I'll try out uh
switching this to be one entity type
switching this to be one entity type
unless I think of a dumb unless I figure
unless I think of a dumb unless I figure
out that that's a dumb idea um since it
out that that's a dumb idea um since it
produces data and then I will just think
produces data and then I will just think
about data structures a little bit for
about data structures a little bit for
grids
grids
versus uh
versus uh
entities
and yeah I'm just going to have to think
and yeah I'm just going to have to think
about how that
works I mean for this type of
works I mean for this type of
environment they're going to
be maybe at most like 200 entities ever
so the break even point for that
is probably like
uh like 13 or 14 by
uh like 13 or 14 by
14 observation range it's not very
far all right
far all right
well I'm stumped up for now um
well I'm stumped up for now um
so I'm going to sign off I'll be back
so I'm going to sign off I'll be back
tomorrow probably a little later than I
tomorrow probably a little later than I
started today I go for a slightly longer
started today I go for a slightly longer
run on Wednesdays and uh we'll be still
run on Wednesdays and uh we'll be still
working on this I've also I've got a few
working on this I've also I've got a few
side things that I've need to finish up
side things that I've need to finish up
as well I might do that before I hop on
as well I might do that before I hop on
we'll see thanks for stopping by and uh
we'll see thanks for stopping by and uh
yeah lots of cool progress on this
yeah lots of cool progress on this
project this is looking very very nice
project this is looking very very nice
for just two days of work um and I think
for just two days of work um and I think
in like a full week's worth of stuff
in like a full week's worth of stuff
this is going to going actually start
this is going to going actually start
looking like a proper mini
looking like a proper mini
MOBA uh the runs are brutal this is a 53
MOBA uh the runs are brutal this is a 53
mile week um while power lifting five
mile week um while power lifting five
days a week as well so anyways night

Kind: captions
Language: en
fun stuff to do
today takes a second for all the streams
today takes a second for all the streams
to go
to go
up let's start with uh this crazy carb
up let's start with uh this crazy carb
sweep and then we'll start coding on the
sweep and then we'll start coding on the
mooba so I ran this
mooba so I ran this
overnight it's still actually running
overnight it's still actually running
and I'm going to let it keep running
and I'm going to let it keep running
while I uh I Dev on this a little bit
while I uh I Dev on this a little bit
because this did ridiculously well
because this did ridiculously well
it's funny that there's still some
it's funny that there's still some
trials that uh don't perform very well I
trials that uh don't perform very well I
think it's a little
think it's a little
noisy but this is just crushed previous
noisy but this is just crushed previous
baselines on this environment so this is
baselines on this environment so this is
awesome to
see posted this as well um the main
see posted this as well um the main
thing is that the graphs actually work
thing is that the graphs actually work
and we have some super high performance
and we have some super high performance
environments to test stuff on let me
environments to test stuff on let me
real quick tweet the stream out from
real quick tweet the stream out from
this and we'll just go straight into um
this and we'll just go straight into um
we'll go straight into uh coding on this
we'll go straight into uh coding on this
stuff so let's just
stuff so let's just
do
this br
okay that sounds
okay that sounds
good
good
perfect so let's go to uh write to
perfect so let's go to uh write to
code where we left this off
code where we left this off
yesterday we got right we got like the
yesterday we got right we got like the
basic Tower AI the really really basic
basic Tower AI the really really basic
Jank Tower AI to work we got agents that
Jank Tower AI to work we got agents that
can run around they can kind of fight
can run around they can kind of fight
each other a little bit
um oh this is fine this is just the I I
um oh this is fine this is just the I I
had a gift saving thing so yeah it it's
had a gift saving thing so yeah it it's
uh it works all fine so there's a lot of
uh it works all fine so there's a lot of
stuff we can do today I
stuff we can do today I
think I want to push the logic on this
think I want to push the logic on this
until it gets kind of
until it gets kind of
complicated right a little too
complicated right a little too
complicated to maintain Maybe
complicated to maintain Maybe
uh and then we will go from there uh
uh and then we will go from there uh
once the logic gets a little too
once the logic gets a little too
complicated to maintain we might switch
complicated to maintain we might switch
over to doing some cool render stuff all
over to doing some cool render stuff all
of the render stuff I've done before has
of the render stuff I've done before has
been tile based I don't know if I want
been tile based I don't know if I want
to make this tile based or not um yeah
to make this tile based or not um yeah
I'll have to think about that for
sure I don't want to commit too much to
sure I don't want to commit too much to
the render though because that takes
the render though because that takes
that's going to take longer so let's get
that's going to take longer so let's get
like some of the simulation stuff going
like some of the simulation stuff going
first and perfect I can tell the stream
first and perfect I can tell the stream
is up and is H starting to circulate on
is up and is H starting to circulate on
X at the very least the other two take a
X at the very least the other two take a
little longer to warm
up so let me just remind myself of where
up so let me just remind myself of where
we left
we left
off uh puffer lib environments ocean
off uh puffer lib environments ocean
MOA I think we had a whole bunch of
MOA I think we had a whole bunch of
really garbage uh scyon
code yeah I wonder who wrote this mess
right and we had basic attacks we had
right and we had basic attacks we had
basic damage uh the attacks had to
basic damage uh the attacks had to
be just like next to next to the agent
be just like next to next to the agent
so that's a big limitation we don't have
so that's a big limitation we don't have
ranged attack abilities on this and
ranged attack abilities on this and
ranged attack abilities are actually
ranged attack abilities are actually
really obnoxious to do uh with grids
really obnoxious to do uh with grids
so there's there's definitely that to
so there's there's definitely that to
think about
think about
um we don't have a direction that the
um we don't have a direction that the
player is facing we're really missing
player is facing we're really missing
quite a bit
quite a bit
here uh and then there's also no ability
here uh and then there's also no ability
to attack
to attack
Towers
Towers
so in something like this usually the
so in something like this usually the
most important thing is getting like a
most important thing is getting like a
smooth uh player controller and like the
smooth uh player controller and like the
smooth basics down uh however I think
smooth basics down uh however I think
that getting that to work is going to
that getting that to work is going to
require some form of better renderer
require some form of better renderer
than we have now so we might put that
than we have now so we might put that
off just a little bit until we at least
off just a little bit until we at least
get an idea for where we're going to go
get an idea for where we're going to go
with the
with the
game um I think I want to
start could make the towers attackable
start could make the towers attackable
right uh there's some just general code
right uh there's some just general code
hygiene that definitely needs to be
done but really everything is going to
done but really everything is going to
be limited by the player the player
be limited by the player the player
controller and
controller and
viz so maybe we will actually start with
viz so maybe we will actually start with
that you
that you
know maybe we will actually just start
know maybe we will actually just start
with
with
that yeah we'll make the agents a little
that yeah we'll make the agents a little
bit
bit
faster um yeah we'll make the agents a
faster um yeah we'll make the agents a
little bit faster and we'll try to come
little bit faster and we'll try to come
up with a little bit of a render
up with a little bit of a render
controller type thing
controller type thing
that seems
reasonable
so let's get the human controller to
so let's get the human controller to
work then in order to do
that Ender mode
that Ender mode
human we'll probably have to fix a few
human we'll probably have to fix a few
things
things
right yep
uh okay that's just an API thing from
uh okay that's just an API thing from
the uh the new we did some uh we made
the uh the new we did some uh we made
some
some
changes to the configuration system so
changes to the configuration system so
we're going to have a couple small
we're going to have a couple small
properties to fix in order to make all
properties to fix in order to make all
this work but then we'll actually this
this work but then we'll actually this
will be fun actually because that sort
will be fun actually because that sort
of tight development Loop that you get
of tight development Loop that you get
when you have um you have a renderer and
when you have um you have a renderer and
you're just trying to make like a player
you're just trying to make like a player
work it's actually very nice and it's
work it's actually very nice and it's
very easy to debug so that should
very easy to debug so that should
actually be pretty interesting to watch
actually be pretty interesting to watch
and pretty informative and should result
and pretty informative and should result
in some good progress on this today so
in some good progress on this today so
yeah I actually do like that even though
yeah I actually do like that even though
I was a little hesitant at first because
I was a little hesitant at first because
it's going to take me a little bit to
it's going to take me a little bit to
get it set up but uh I think it's going
get it set up but uh I think it's going
to be a very very worthwhile investment
to be a very very worthwhile investment
and probably not all that hard as long
and probably not all that hard as long
as I don't like go try to write a whole
as I don't like go try to write a whole
renderer from scratch
let's also get this background stuff out
let's also get this background stuff out
of the way because it makes the chat
of the way because it makes the chat
hard to uh hard to read
hard to uh hard to read
right that's
right that's
good okay so now we just have to update
good okay so now we just have to update
the renderer for the uh the mooba since
the renderer for the uh the mooba since
this was borrowed from my grid
this was borrowed from my grid
continuous grid
continuous grid
project so we've
project so we've
got agent positions right so there's no
got agent positions right so there's no
uh there's no concept of agent positions
uh there's no concept of agent positions
but we do have self.
agents and then if we go to the client
agents and then if we go to the client
here client render function this will
here client render function this will
now just take
now just take
agents
agents
and we'll do uh main R
agents zero
agents zero
doy
andx that might already be enough we'll
see int object has no attribute
y uh okay that's weird we should have
y uh okay that's weird we should have
this should be structured
data oops
uh okay something's getting passed wrong
uh okay something's getting passed wrong
because the the agent should be a
because the the agent should be a
structured a structured data type
here grid agents actions
discretize and if I look at the render
discretize and if I look at the render
function we have grid agents actions
function we have grid agents actions
discretize so that actually looks
discretize so that actually looks
right um am I not passing the
right um am I not passing the
correct agents here if I look for self
correct agents here if I look for self
dot self. agents oh it's self. players
dot self. agents oh it's self. players
that's
why agents is a annoying API thing
why agents is a annoying API thing
that's why that
that's why that
exists welcome I am coding a small MOBA
exists welcome I am coding a small MOBA
think like League or DOTA uh from
think like League or DOTA uh from
scratch
scratch
for the purposes of use in reinforcement
for the purposes of use in reinforcement
learning training AI at very very high
learning training AI at very very high
speed this is brand new so uh there's
speed this is brand new so uh there's
not a ton going on here just yet I just
not a ton going on here just yet I just
started this yesterday but the hope is
started this yesterday but the hope is
that by the end of today the next seven
that by the end of today the next seven
hours or so I'm going to have a high
hours or so I'm going to have a high
perf engine that like resembles a mooba
perf engine that like resembles a mooba
that you can play and that you have the
that you can play and that you have the
agents wandering around and that runs it
agents wandering around and that runs it
like I don't know a million steps per
like I don't know a million steps per
second minimum something like that
yesterday went pretty well uh a little
yesterday went pretty well uh a little
bit confusing because you know there are
bit confusing because you know there are
a lot of early decisions to make in a
a lot of early decisions to make in a
project like this but it went well it
project like this but it went well it
went well
overall actions of zero could not okay
overall actions of zero could not okay
so this is
just do I have actions allocated
somewhere num Pi Zer num
somewhere num Pi Zer num
agents well this is not going to work
agents well this is not going to work
right this has to be numb agents like
right this has to be numb agents like
three because there are three different
three because there are three different
types of actions here
types of actions here
they're two different movement actions
right
right
oops could not
oops could not
broadcast uh okay so the action
broadcast uh okay so the action
space I probably didn't update the
space I probably didn't update the
action space
action space
right now the action space actually
right now the action space actually
looks
fine didn't put array from shape
fine didn't put array from shape
two into shape
two into shape
three maybe I'm returning it
three maybe I'm returning it
wrong that's probably it
wrong that's probably it
right yeah right here
so what we'll do
is uh I think the attack is just fine
right uh let me think how we do
this key up key
this key up key
down I guess the way that we have a
down I guess the way that we have a
attack specifi doesn't make it a sense
right
right
well for now we'll just give it a like a
well for now we'll just give it a like a
one or whatever for
attack not enough values to unpack right
attack not enough values to unpack right
because I forgot to delete
this yeah we're going to very quickly
this yeah we're going to very quickly
run into the limitations of the grid
run into the limitations of the grid
engine which is exactly why I wanted to
engine which is exactly why I wanted to
do this project
do this project
I wanted to do this project to see you
I wanted to do this project to see you
know what happens when you get M's that
know what happens when you get M's that
don't like easily represent as
grids shape
grids shape
base okay so something weird happened
base okay so something weird happened
here we'll
here we'll
figure oh no this is fine this is just
figure oh no this is fine this is just
the uh so this this does work we just
the uh so this this does work we just
have to render the agent I was
have to render the agent I was
controlling it I could tell when I was
controlling it I could tell when I was
pressing keys that it was responding
pressing keys that it was responding
correctly all we have to do is uh save
correctly all we have to do is uh save
it a little different so
it a little different so
let's just make this actually render for
let's just make this actually render for
a reasonable period of
a reasonable period of
time
time
and next we have to
and next we have to
see how we can draw the
agents what do I have it drawing
agents what do I have it drawing
here oh I have it drawing the
here oh I have it drawing the
puffer yeah yeah so if I just um
puffer yeah yeah so if I just um
if I just copy the asset from the grid
if I just copy the asset from the grid
continuous project that I was using
continuous project that I was using
puffer
puffer
chars I think it'll actually just
render there we
render there we
go look at
go look at
this I'm a little puffer red puffer blue
this I'm a little puffer red puffer blue
puffer DARS or Towers I
puffer DARS or Towers I
guess and you can explore this little uh
guess and you can explore this little uh
you know this manually painted MOBA map
you know this manually painted MOBA map
with three
with three
lanes I don't know what killed me oh the
lanes I don't know what killed me oh the
tower killed me right if I go next to it
tower killed me right if I go next to it
yeah yeah Tower kills you okay so that
yeah yeah Tower kills you okay so that
Tower kills me does this Tower kill me
Tower kills me does this Tower kill me
no this one doesn't cuz this is my tower
no this one doesn't cuz this is my tower
so I can go here this is the what is
so I can go here this is the what is
this this is the I think I might have
this this is the I think I might have
done him backwards
no okay somebody will have to tell me if
no okay somebody will have to tell me if
this is the safe lane or what on bottom
this is the safe lane or what on bottom
I forget I haven't played DOTA in a
I forget I haven't played DOTA in a
while but this is my tower this is their
while but this is my tower this is their
T1
T1
Tower okay I actually should take a
Tower okay I actually should take a
screeny of this because this is kind of
screeny of this because this is kind of
cool looking
um where's like a cool spot to take a
screeny maybe here
yeah puffer
mooba got it engagement Farm the
Twitter helps get the open source work
Twitter helps get the open source work
out
there what is
there what is
this I don't know what this
this I don't know what this
is okay
we'll just post that with no
we'll just post that with no
context oh yeah this guy's
context oh yeah this guy's
cool guy's the the new ding board higher
right
right
anyways so now we have a really basic
anyways so now we have a really basic
little renderer um but the render is not
little renderer um but the render is not
fully set up for the type of stuff that
fully set up for the type of stuff that
we we are going to want to do with it
we we are going to want to do with it
right it's kind of like this grid like
right it's kind of like this grid like
movement and it doesn't like the
movement and it doesn't like the
character doesn't rotate
character doesn't rotate
reasonably and the really big thing is
reasonably and the really big thing is
that mobas are usually controlled with
that mobas are usually controlled with
the mouse uh that is not something that
the mouse uh that is not something that
we're going to be able to do
we're going to be able to do
unfortunately we're not going to be able
unfortunately we're not going to be able
to
to
have
well okay we might be able to make it
well okay we might be able to make it
human controlled with a mouse but like
human controlled with a mouse but like
the agent isn't going to be able to move
the agent isn't going to be able to move
a mouse around that can't be the way
a mouse around that can't be the way
they interact
they interact
with with the
with with the
environment
environment
um we could
um we could
do we could do attack is at a fixed
do we could do attack is at a fixed
range in front of
range in front of
you right we could do that so you when
you right we could do that so you when
you attack it's like a fixed range in
you attack it's like a fixed range in
front of
front of
you that's not really quite satisfying
you that's not really quite satisfying
though
though
right we could do
targeting is
targeting is
hard this was the problem that I ran
hard this was the problem that I ran
into really early in the development of
into really early in the development of
neural MMO actually that made neural MMO
neural MMO actually that made neural MMO
really hard so let let me sort of break
really hard so let let me sort of break
down this problem for you um this thing
down this problem for you um this thing
is the source of all evil in
is the source of all evil in
reinforcement learning because there's
reinforcement learning because there's
not really a good way to have an agent
not really a good way to have an agent
specify Mouse actions in a in any sort
specify Mouse actions in a in any sort
of way that they could remotely learn
of way that they could remotely learn
and having Mouse actions assumes that
and having Mouse actions assumes that
you're rendering the environment
you're rendering the environment
that's really really slow we don't want
that's really really slow we don't want
to render the environment at training so
to render the environment at training so
what we do is we typically use some sort
what we do is we typically use some sort
of local state-based
of local state-based
observations right so like you can see
observations right so like you can see
nearby stuff uh but then if you want to
nearby stuff uh but then if you want to
just not attack something next to you
just not attack something next to you
you want to actually select one of the
you want to actually select one of the
things that you can see you start to
things that you can see you start to
need different and more complicated
need different and more complicated
neural network architectures in order to
neural network architectures in order to
accomplish that they're kind of like
accomplish that they're kind of like
entity based architectures where instead
entity based architectures where instead
of being able to see a grid around you
of being able to see a grid around you
you get like a set of different entities
you get like a set of different entities
or players that you can see now we could
or players that you can see now we could
build towards that direction and try to
build towards that direction and try to
come up with like a cool entity type
come up with like a cool entity type
engine um that's probably going to be
engine um that's probably going to be
the best thing ultimately it's just
the best thing ultimately it's just
really really
really really
hard I mean I'm kind of down though I'm
hard I mean I'm kind of down though I'm
kind of down to do this because of all
kind of down to do this because of all
the stuff I could do in reinforcement
the stuff I could do in reinforcement
learning it's probably the most high
learning it's probably the most high
impact thing
impact thing
to be doing and there's been one really
to be doing and there's been one really
good project on this so that I know it
good project on this so that I know it
can be done it's just very difficult and
can be done it's just very difficult and
that one specific project is not uh
that one specific project is not uh
built in a way that's very easy to use
built in a way that's very easy to use
with other stuff
so screw it let's do it right let's
so screw it let's do it right let's
let's just do it
let's just do it
um first thing we're going to need for
um first thing we're going to need for
this is we're going to need to just
this is we're going to need to just
restructure the attack action and the
restructure the attack action and the
format of
observations it can keep a grid for now
observations it can keep a grid for now
it can keep the grid as like a nav mesh
it can keep the grid as like a nav mesh
or whatever uh so that it can see
or whatever uh so that it can see
obstacles cuz we're still going to use
obstacles cuz we're still going to use
the grid for
the grid for
collisions but maybe we're just going to
collisions but maybe we're just going to
use the grid for
use the grid for
collisions and that might just be the
collisions and that might just be the
only thing we need the grid for maybe
only thing we need the grid for maybe
like AOE targeting or something like
like AOE targeting or something like
that
can take me a second to figure out how I
can take me a second to figure out how I
want to structure
want to structure
this um I think that the way that you do
this and I don't need it in the
this and I don't need it in the
observations just yet because we're not
observations just yet because we're not
going to be training models for a while
going to be training models for a while
I just need to do it in a way that will
I just need to do it in a way that will
be easy to put into the observations
be easy to put into the observations
eventually if that makes
eventually if that makes
sense so let's do
entity observations any particular
entity observations any particular
neural architecture you have in mind for
neural architecture you have in mind for
the vision problem oh this has been very
the vision problem oh this has been very
well explored uh mainly in my own work
well explored uh mainly in my own work
on neural MMO but also in Dota and stuff
on neural MMO but also in Dota and stuff
the thing that I want to avoid let me
the thing that I want to avoid let me
just show you how complicated this can
just show you how complicated this can
get if you don't think about it very
get if you don't think about it very
very
carefully this is what I am trying to
carefully this is what I am trying to
avoid
is it actually not possible to find yeah
is it actually not possible to find yeah
here it
here it
is this is what I'm trying to avoid this
is this is what I'm trying to avoid this
gigantic architecture is the open ai5
gigantic architecture is the open ai5
model it has less than 200 million
model it has less than 200 million
parameters but it just has so much
parameters but it just has so much
complexity it's just a beast to deal
complexity it's just a beast to deal
with something like
with something like
this so I'm trying to make it simpler
this so I'm trying to make it simpler
than this um you know if I if you come
than this um you know if I if you come
up with something that this complicated
up with something that this complicated
that's this complicated that makes the
that's this complicated that makes the
environment too hard for people to use
environment too hard for people to use
they just won't use it so we're kind of
they just won't use it so we're kind of
constrained on that uh on that factor
alone let me fix this I always forget
alone let me fix this I always forget
that I have to like drag windows so that
that I have to like drag windows so that
they don't cover where my camera
they don't cover where my camera
is I also don't like that my mouse goes
is I also don't like that my mouse goes
behind the camera but I can't really do
behind the camera but I can't really do
anything about
that okay some sort of multimodal
that okay some sort of multimodal
approach yeah you could say it's
approach yeah you could say it's
multimodal it's really just like I guess
multimodal it's really just like I guess
that is the definition of of multimodal
that is the definition of of multimodal
yeah different types of local state data
yeah different types of local state data
it's different types of local state
it's different types of local state
data um we're going to just we're going
data um we're going to just we're going
to allocate uh this on the grid
side let me
side let me
see yes so we're going to allocate on
see yes so we're going to allocate on
the the python
side we're going to allocate OBS
side we're going to allocate OBS
players and OBS players is going to be
players and OBS players is going to be
self. OBS
self. OBS
players
players
zeros so self. num
agents uh we
need dype do item size * 10 10 * dtype
need dype do item size * 10 10 * dtype
do item size this is going to go right
do item size this is going to go right
up here so this means that you're going
up here so this means that you're going
to be able to see 10 players we're going
to be able to see 10 players we're going
to allocate this as
to allocate this as
bytes and
then this is actually OBS players flat
then this is actually OBS players flat
and then self. OBS players is going to
and then self. OBS players is going to
be from
buffer. viw numpy Rec
buffer. viw numpy Rec
array and then we're going to have to
array and then we're going to have to
pass this
to uh we're going to have to pass this
to uh we're going to have to pass this
to the
CN OBS
players
lat
yeah okay so now this has access to OBS
yeah okay so now this has access to OBS
players flat we have to add it to the C
players flat we have to add it to the C
environment and this is what's going to
environment and this is what's going to
allow us to uh see nearby
players so this has to
be what's the data type of this
it
complicated I've been
there been
there been
where uh this type of a
where uh this type of a
problem this needs to
problem this needs to
be it's is this just a player
star I don't want it to be a player uh
star I don't want it to be a player uh
player star I want it to be like a array
player star I want it to be like a array
of player Star right I don't think you
of player Star right I don't think you
can do that though cuz it's not a valid
can do that though cuz it's not a valid
numpy data type you can't map uh I don't
numpy data type you can't map uh I don't
think you can map
think you can map
this that's
obnoxious in C but
why it's uh it's scon technically not C
why it's uh it's scon technically not C
so I get C speed but I don't have to to
so I get C speed but I don't have to to
deal with a lot of a lot of C
deal with a lot of a lot of C
Shenanigans how did you learn this I've
Shenanigans how did you learn this I've
been doing reinforcement learning for
been doing reinforcement learning for
the past seven years it was my whole
PhD I work on high performance large
PhD I work on high performance large
scale simulations and reinforcement
scale simulations and reinforcement
learning really like the simulation part
learning really like the simulation part
is not that hard cuz if you think about
is not that hard cuz if you think about
it that's just Game Dev and yeah Game
it that's just Game Dev and yeah Game
Dev isn't easy but it's also not like
Dev isn't easy but it's also not like
Cutting Edge research
Cutting Edge research
right the hard part is making the game
right the hard part is making the game
in a way that makes sense to make it
in a way that makes sense to make it
easy to use with reinforcement learning
easy to use with reinforcement learning
and fast that's the hard part so a lot
and fast that's the hard part so a lot
of this like when I'm just like looking
of this like when I'm just like looking
up and thinking about stuff it's me like
up and thinking about stuff it's me like
crosschecking things that I know can
crosschecking things that I know can
potentially go wrong with RL if I do it
potentially go wrong with RL if I do it
weird some is just general engineering
weird some is just general engineering
as well though let's not be too too
as well though let's not be too too
ridiculous
ridiculous
um so what I want this to be right now
um so what I want this to be right now
and I'm I'm running into this issue
and I'm I'm running into this issue
because I just don't have a data type I
because I just don't have a data type I
don't think I have a data type that fits
don't think I have a data type that fits
this cleanly
this cleanly
um like this is technically a player
um like this is technically a player
star star I
star star I
think game industry for a while then
think game industry for a while then
defense yep very
defense yep very
cool
um I really don't want this to be a
um I really don't want this to be a
player star star but I think it has to
player star star but I think it has to
be for
be for
now I think
so then we do what is it
CNP this shouldn't be a player star star
CNP this shouldn't be a player star star
I have love for rust for scon though I'm
I have love for rust for scon though I'm
learning rust now I have not seen the
learning rust now I have not seen the
point of rust remotely for any of my
point of rust remotely for any of my
work the main thing that Russ gives you
work the main thing that Russ gives you
is memory safety I literally do not need
is memory safety I literally do not need
to maloc anything in this Sim everything
to maloc anything in this Sim everything
is fixed allocation if you're maling
is fixed allocation if you're maling
stuff you're being
slow so the main feature that Russ gives
slow so the main feature that Russ gives
you is not something I need
you is not something I need
and all it does is going to get all it
and all it does is going to get all it
will do is get in my way with a borrow
will do is get in my way with a borrow
Checker that is you know not
needed this the thing is what this thing
needed this the thing is what this thing
the thing that's giving me uh rust has a
the thing that's giving me uh rust has a
kickass
kickass
logo we got a we got a puffer
fish what I want this to do is I want
fish what I want this to do is I want
this to be like uh like a player array
this to be like uh like a player array
or
or
something but you can't do that because
something but you can't do that because
it has to be
it has to be
a specific memory view type
a specific memory view type
right view the
right view the
puffer puffer is very
puffer puffer is very
friendly all you got to do is feed the
friendly all you got to do is feed the
puffer a star on GitHub otherwise puffer
puffer a star on GitHub otherwise puffer
gets hungry you don't want the puffer to
gets hungry you don't want the puffer to
be
hungry okay
hungry okay
uh I'm going to just make this a player
uh I'm going to just make this a player
star for now and see what happens I have
star for now and see what happens I have
no idea what this will do
I
it
it
compiles um if I run this does it
compiles um if I run this does it
crash trial and errors is the basis of
crash trial and errors is the basis of
learning yeah you'd be surprised how
learning yeah you'd be surprised how
much of the time it's just I don't know
much of the time it's just I don't know
what this will do I'm going to play with
what this will do I'm going to play with
it for the next few hours and then I'll
it for the next few hours and then I'll
probably be able to get it to work and
probably be able to get it to work and
the skill just comes in knowing enough
the skill just comes in knowing enough
things that you can get it to work in
things that you can get it to work in
you know the next few hours instead of
you know the next few hours instead of
the next few
the next few
months okay so this did not break
months okay so this did not break
anything at the very least it still runs
rling yourself yeah
rling yourself yeah
seriously
um I think that this might be a bad
um I think that this might be a bad
pointer cast is the
pointer cast is the
thing well I know how I can do it for
thing well I know how I can do it for
sure
technically I know how I can do it for
technically I know how I can do it for
sure I don't get any memory bounce any
sure I don't get any memory bounce any
error bounce checking or anything
but it compiles as their worst
but it compiles as their worst
result
result
look if the key feature of rust were not
look if the key feature of rust were not
this borrow Checker that I don't need
this borrow Checker that I don't need
and that gets in my way like I literally
and that gets in my way like I literally
have no need for this thing this thing
have no need for this thing this thing
adds so much baggage and I just do not
adds so much baggage and I just do not
need it right I do not need the selling
need it right I do not need the selling
point of it yeah it's a very
point of it yeah it's a very
well-engineered language and there's a
well-engineered language and there's a
lot of great stuff it's just I wish that
lot of great stuff it's just I wish that
the all the effort were not being put
the all the effort were not being put
into something that very very many
into something that very very many
applications do not need right which is
applications do not need right which is
the the memory
the the memory
safety very very low down on the list of
problems what I really like about
problems what I really like about
cython um in addition to these memory
cython um in addition to these memory
views and compatibility with python is
views and compatibility with python is
that I have all these compile time
that I have all these compile time
checks that I can just switch on and off
checks that I can just switch on and off
so I can make make my Dev super fast and
so I can make make my Dev super fast and
I can actually get some reasonable error
I can actually get some reasonable error
messages um and I can just you know turn
messages um and I can just you know turn
them all off uh when I am ready to make
them all off uh when I am ready to make
it
it
fast my parallel
fast my parallel
programming have you seen poer Leb we
programming have you seen poer Leb we
have lots and lots of parallel
have lots and lots of parallel
programming we have actually the best
programming we have actually the best
the best CPU multiprocessing
the best CPU multiprocessing
implementation out there for
implementation out there for
reinforcement
reinforcement
learning and uh it's just python and a
learning and uh it's just python and a
bunch of shared memory
Shenanigans cool to see people finding
Shenanigans cool to see people finding
the stream on Twitch though and no
the stream on Twitch though and no
discoverability is harder there for new
stuff okay so what I'm going to do is
stuff okay so what I'm going to do is
I'm going to do the thing that I know is
I'm going to do the thing that I know is
going to work for now so that I'm not
going to work for now so that I'm not
here experimenting forever because
here experimenting forever because
that's going to be really boring um
that's going to be really boring um
the thing that I know will work is just
the thing that I know will work is just
treating this as a flat array of players
treating this as a flat array of players
and then writing a function to get the
and then writing a function to get the
specific player that I need uh for you
specific player that I need uh for you
know what whatever
thing and this is actually going to be a
thing and this is actually going to be a
class
class
function YouTube after a college
function YouTube after a college
football 25 video I have no idea how
football 25 video I have no idea how
that possible because I've not
that possible because I've not
had done I've have not had any
had done I've have not had any
engagement with football in my life
engagement with football in my life
whatsoever I'm using
algorithm idx so we're going to get uh
algorithm idx so we're going to get uh
self and this is a c Def and this is
self and this is a c Def and this is
going to return a player
going to return a player
star get player OB
turn PID
turn PID
times going to be 10 times PID we hard
times going to be 10 times PID we hard
code for now plus
code for now plus
idx this is
idx this is
fine so now we have access to this uh
fine so now we have access to this uh
observation and when we compute
observation and when we compute
observations we need to uh do something
observations we need to uh do something
about this so
this is going to add a lot of you know
this is going to add a lot of you know
slowdown to this but we can optimize
later the thesis vid I
later the thesis vid I
swear well it's funny because did you
swear well it's funny because did you
get you didn't find the thesis vid on TW
get you didn't find the thesis vid on TW
on Twitch right unless I guess you found
on Twitch right unless I guess you found
it from somewhere else
it from somewhere else
um I'm going to probably try to make
um I'm going to probably try to make
another couple of long form videos to
another couple of long form videos to
see if it was just like a onetime thing
see if it was just like a onetime thing
or uh if people actually will you know
or uh if people actually will you know
like the Deep dive technical content cuz
like the Deep dive technical content cuz
there are a few other things I can do I
there are a few other things I can do I
have an idea for one on just puffer lib
have an idea for one on just puffer lib
in general that's like an RL primer of
in general that's like an RL primer of
sort of how I see the whole landscape of
sort of how I see the whole landscape of
reinforcement learning right now and
reinforcement learning right now and
what are the major problems that need to
what are the major problems that need to
be solved for us to move forward as a
be solved for us to move forward as a
field and I can make that pretty
field and I can make that pretty
accessible and uh I also have one on
accessible and uh I also have one on
some of the Sim Tech that I've been
some of the Sim Tech that I've been
thinking about
so
transferred from YouTube twitch was hard
transferred from YouTube twitch was hard
to find link is on the YouTube page some
to find link is on the YouTube page some
mentioned that it was the same as your
mentioned that it was the same as your
ex yeah well I'm technically I'm live on
ex yeah well I'm technically I'm live on
uh Twitter Youtube and twitch so it
uh Twitter Youtube and twitch so it
really doesn't matter where where you
really doesn't matter where where you
watch it right as long as there're
watch it right as long as there're
people somewhere and I can see the
people somewhere and I can see the
metrics now on the only one I can't see
metrics now on the only one I can't see
is I can't see concurrent views on uh
is I can't see concurrent views on uh
Twitter Twitter only tells you total
Twitter Twitter only tells you total
views it doesn't tell you concurrent
views it doesn't tell you concurrent
viewers
okay so what I'm going to do here is I'm
okay so what I'm going to do here is I'm
going to find all of the agents that are
going to find all of the agents that are
in a crop around the current agent and
in a crop around the current agent and
I'm going to load them into uh this
I'm going to load them into uh this
observation buffer yeah that's how I'm
observation buffer yeah that's how I'm
going to try to do this
going to try to do this
and does this
solve we're going to have to do mouse
solve we're going to have to do mouse
based actions I guess for
based actions I guess for
we're going to have to do mouse based
we're going to have to do mouse based
actions for the human
client hey Will
client hey Will
welcome I honestly I got this idea from
welcome I honestly I got this idea from
you you were the only other person I saw
you you were the only other person I saw
ever streaming Dev so I figured hey why
ever streaming Dev so I figured hey why
not instead of letting will have all the
not instead of letting will have all the
fun you know co-opting agents with uh
fun you know co-opting agents with uh
with gp4 why don't we make some uh some
with gp4 why don't we make some uh some
real RL agents that have like a million
real RL agents that have like a million
parameters
here I'll show you something cool
here I'll show you something cool
scale-wise from uh last night so I got
scale-wise from uh last night so I got
carbs working this is like well over 50
carbs working this is like well over 50
billion uh simulation steps worth of
billion uh simulation steps worth of
data in one experiment overnight on one
data in one experiment overnight on one
GPU and it like this with carbs hyper
GPU and it like this with carbs hyper
pram sweep this just kicked ass this
pram sweep this just kicked ass this
like beat of my manually tuned baselines
like beat of my manually tuned baselines
by a huge margin um just essentially
by a huge margin um just essentially
Auto solves your environments this model
Auto solves your environments this model
has like 150,000 parameters but it
has like 150,000 parameters but it
trains at a million steps per second so
trains at a million steps per second so
who
cares lots of
data
data
anyways um this thing here so I need to
anyways um this thing here so I need to
figure
figure
out uh the PID I think in this
out uh the PID I think in this
position need to read carb stuff dude I
position need to read carb stuff dude I
can't read the carbs paper it's too much
can't read the carbs paper it's too much
math okay I understand that they did
math okay I understand that they did
some Pito optimality front thing on top
some Pito optimality front thing on top
of basian optimization and that's it uh
of basian optimization and that's it uh
I did integrate it with puffer lib
I did integrate it with puffer lib
though so I got that going for me which
though so I got that going for me which
is
nice carbs is
nice carbs is
awesome sucker for data
awesome sucker for data
quantity okay here's another cool stat
quantity okay here's another cool stat
right this is why I think RL is really
right this is why I think RL is really
cool and a lot of people don't
cool and a lot of people don't
necessarily get this um you know coming
necessarily get this um you know coming
from NLP so NLP like these giant
from NLP so NLP like these giant
Transformers with like thousands of
Transformers with like thousands of
hunds right they're trained on order of
hunds right they're trained on order of
terabytes maybe tens of terabytes of
terabytes maybe tens of terabytes of
data it's trillions of tokens right
data it's trillions of tokens right
token is like an INT four bytes
token is like an INT four bytes
something like that maybe you can pack
something like that maybe you can pack
it into a short depending um that's the
it into a short depending um that's the
amount of data like we can go through
amount of data like we can go through
that in a day on a GPU one GPU in
that in a day on a GPU one GPU in
reinforcement learn learning so just the
reinforcement learn learning so just the
data scale is so crazy with
data scale is so crazy with
RL um and there's been a little bit of
RL um and there's been a little bit of
theoretical work showing that RL scales
theoretical work showing that RL scales
way better with data than with model
way better with data than with model
size at least for a while so you need
size at least for a while so you need
way more data to saturate any fixed
way more data to saturate any fixed
model size so actually doing this High
model size so actually doing this High
perf Sim and high perf uh High perf
perf Sim and high perf uh High perf
engineering work it really makes a huge
engineering work it really makes a huge
difference
equals H did I mess this up do I need
equals H did I mess this up do I need
another variable
another variable
here I think this is DX
here I think this is DX
right
yeah DX
Dy d y DX
Dy d y DX
do you have a preferred
do you have a preferred
GPU uh I have I've got the puffer
cluster this is the puffer cluster right
cluster this is the puffer cluster right
here we've got eight desktops with 409s
here we've got eight desktops with 409s
in them this is where the experiments
in them this is where the experiments
all
all
run uh these two up top these run my own
run uh these two up top these run my own
experiments this one is a colleague of
experiments this one is a colleague of
mine friend who was using it for another
mine friend who was using it for another
cool RL
cool RL
and then these five right here are all
and then these five right here are all
dedicated to open source training on
dedicated to open source training on
Pokemon Red trying to get RL to solve
Pokemon Red trying to get RL to solve
Pokemon Red and then this is like an old
Pokemon Red and then this is like an old
this is an old box I'm using as a login
this is an old box I'm using as a login
node and this is a puffer
fish that's the
cluster very economical compared to an
cluster very economical compared to an
LP land
don't need this don't need this check um
don't need this don't need this check um
now what we need to do is we get the
now what we need to do is we get the
PID in
PID in
PID PID is going to be equal to PID map
PID PID is going to be equal to PID map
at y and x and then if it is let's do if
at y and x and then if it is let's do if
PID equals negative 1 you
PID equals negative 1 you
continue otherwise we do
we get the
we get the
observation at PID and
idx no that's not how we do
it we
do player star Target
Target is going to be equal to get
Target is going to be equal to get
player
player
OB and we need to figure
OB and we need to figure
out where the data is for that
out where the data is for that
so
so
uh I think it's
uh I think it's
actually Target equals to self. get
actually Target equals to self. get
player PID and then you have to load it
into and you copy the contents of one
into and you copy the contents of one
struct into
another that's a good question
another that's a good question
um I know how you do it from the python
side I wonder if I can just use the
side I wonder if I can just use the
colon like the bracket
indicator I don't know the Syntax for
indicator I don't know the Syntax for
this it should technically be something
this it should technically be something
like self. get player
like self. get player
OB
like Target something like
like Target something like
this I'm sure this doesn't
compile let's
compile let's
see invalid index for memory view
specified well this needs to be R I
specified well this needs to be R I
guess
guess
C thoughts on
C thoughts on
number in a lot of benchmarks it beats
number in a lot of benchmarks it beats
scon that's just people gaming
scon that's just people gaming
benchmarks like thing that generates C
benchmarks like thing that generates C
code is thing that generates C code it's
code is thing that generates C code it's
just how good your C code is and uh it
just how good your C code is and uh it
depends on what you're using
depends on what you're using
you absolutely cannot do the stuff I'm
you absolutely cannot do the stuff I'm
doing at the moment with number
doing at the moment with number
though this is a bit more than just
though this is a bit more than just
jitting your
python well let's see if this errors
okay that compiles but I don't trust
it well it doesn't seem to crash and it
it well it doesn't seem to crash and it
would be running this
code so maybe this is actually the
code so maybe this is actually the
correct maybe you can actually do this
correct maybe you can actually do this
that'd be sweet if you could if this is
that'd be sweet if you could if this is
all it takes to assign a struck to a
all it takes to assign a struck to a
struck that's
awesome let's just uh let's get on to
awesome let's just uh let's get on to
the interesting stuff here
the interesting stuff here
so we now have a way to get the
so we now have a way to get the
players
players
into uh into
this which will give you a way to do
this which will give you a way to do
attacks but I'm still going to have to
attacks but I'm still going to have to
do something with the uh the client like
do something with the uh the client like
you'd have to be able to click them I
you'd have to be able to click them I
think is there any other way I can do
think is there any other way I can do
this without like
clicks I don't think so
right I don't think
so let's do um
so let's do um
maybe let's figure out if there's a way
maybe let's figure out if there's a way
to do Clicks in uh in
rayb Clicks in like health bars maybe
rayb Clicks in like health bars maybe
that would be a decent spot to start
that would be a decent spot to start
that'll be pretty interesting I'd say
that'll be pretty interesting I'd say
and that'll help us
out okay so we need to be able to like
out okay so we need to be able to like
get mouse input I
get mouse input I
guess from this
yeah let's
yeah let's
do mouse RB
do mouse RB
mouse mouse
input they just have an is mouse button
input they just have an is mouse button
pressed
they don't have coordinates
they don't have coordinates
though oh wait get mouse
though oh wait get mouse
position so that's fine we can just do
position so that's fine we can just do
get mouse
get mouse
position uh it's probably is it X Y or Y
position uh it's probably is it X Y or Y
like it's probably XY
right okay Mouse
X Mouse Y is get mouse
X Mouse Y is get mouse
position Mouse X Mouse
position Mouse X Mouse
Y and then what we'll do is we will edit
Y and then what we'll do is we will edit
the actions
the actions
here
um we'll edit the actions to
um we'll edit the actions to
be something
this is so difficult to think about how
this is so difficult to think about how
to
to
represent that's the problem with
represent that's the problem with
this it's very difficult to think about
this it's very difficult to think about
how to represent the mouse Clicks in a
how to represent the mouse Clicks in a
way that's going like it's easy to think
way that's going like it's easy to think
about how to represent actions for
about how to represent actions for
agents or how to represent actions for a
agents or how to represent actions for a
game it's hard to do both at the same
time I mean the input mode of the the
time I mean the input mode of the the
input mode of um
input mode of um
the agent is going to be different so I
the agent is going to be different so I
think that the best thing we can do is
think that the best thing we can do is
just
just
convert right here
convert right here
maybe is we just do the calc in
here
yeah okay
yeah okay
so let's we'll have to what we're going
so let's we'll have to what we're going
to have to do is we're going to have to
to have to do is we're going to have to
set this to 10 which is the number of
set this to 10 which is the number of
agents that it can see and then we're
agents that it can see and then we're
going to rewrite the the C code just a
going to rewrite the the C code just a
little bit so that the targeting is
little bit so that the targeting is
based off of uh nearby
based off of uh nearby
agents
agents
so it does
so it does
step and then there's the tower thing
step and then there's the tower thing
and then where's the
attack okay so here's the adjacent
attack okay so here's the adjacent
attack code we're going to change this a
attack code we're going to change this a
little bit um so this is a
little bit um so this is a
attack ID I
attack ID I
guess
and we need to store the the ID I uh we
and we need to store the the ID I uh we
need to store the ID of the agent that
need to store the ID of the agent that
we are potentially
attacking
attacking
so I like this lesson
so I like this lesson
less but have to do it
let's just add like
let's just add like
in
PID player. PID gets that to
I and
now that we set PID to ey we do
attack uh and this is the now this is
attack uh and this is the now this is
not the PID but we can get PID equal to
not the PID but we can get PID equal to
do we have PID
do we have PID
defined yeah we have PID
defined yeah we have PID
defined so we can get PID equal
to
Target get
player agent idx and
player agent idx and
then
then
attack
no get player OB okay so the target so
no get player OB okay so the target so
the way that this works is you have the
the way that this works is you have the
attack the attacks is the index of the
attack the attacks is the index of the
agent that you can see that is nearby
agent that you can see that is nearby
you then we get your observation of that
you then we get your observation of that
player uh by looking at your index and
player uh by looking at your index and
then the attack
then the attack
offset and
offset and
then we get the PID of the target as
then we get the PID of the target as
target.
target.
PID right and then if the pit is
ne1 what happens if it's empty
yeah what happens if this is
empty we have to deal with
it system is very complicated to
design pit is negative
design pit is negative
one continue
we can't do this continue because
we can't do this continue because
there's more stuff down here right
yeah switch to Twitch
welcome yeah doesn't really matter which
welcome yeah doesn't really matter which
platform people watch on whatever is
platform people watch on whatever is
most convenient for you
I think the
I think the
uh I don't know how it works I think
uh I don't know how it works I think
it's like whichever if you have twitch
it's like whichever if you have twitch
turbo then you don't get ads on Twitch
turbo then you don't get ads on Twitch
and if you have YouTube premium you
and if you have YouTube premium you
don't get ads on YouTube and I think you
don't get ads on YouTube and I think you
just don't get ads on X no maybe you
just don't get ads on X no maybe you
need X premium to not get ads or maybe
need X premium to not get ads or maybe
you just never get ads but the quality
you just never get ads but the quality
is always 720p I don't know whatever you
is always 720p I don't know whatever you
guys like the most um I have not set any
guys like the most um I have not set any
ads that are not mandated by the
ads that are not mandated by the
platform forms
so okay so if the pit is not equal to
so okay so if the pit is not equal to
negative one then we need to do the
negative one then we need to do the
attack which
is just right here right
okay so this probably is good and then
okay so this probably is good and then
we need to just work on the data
we need to just work on the data
structure a little
bit coding MOBA from scratch are you a
bit coding MOBA from scratch are you a
single Dev on this project yeah I
single Dev on this project yeah I
started this yesterday um and hopefully
started this yesterday um and hopefully
this is not going to take particularly
this is not going to take particularly
long either we're going to see this is
long either we're going to see this is
not meant to be like a super fun MOA for
not meant to be like a super fun MOA for
people this is like a strip down MOBA
people this is like a strip down MOBA
that we're going to use for
that we're going to use for
reinforcement learning and the main
reinforcement learning and the main
technical complexity of this project is
technical complexity of this project is
making it relatively easy to use with
making it relatively easy to use with
reinforcement learning and making it run
reinforcement learning and making it run
it like a million steps per second these
it like a million steps per second these
are things that I know how to
are things that I know how to
do year I I'm a year 12 State student
do year I I'm a year 12 State student
11th grade for us basic knowledge in the
11th grade for us basic knowledge in the
field of machine learning I was
field of machine learning I was
wondering if you had any advice get more
wondering if you had any advice get more
experience with AI and ml uh that's
experience with AI and ml uh that's
pretty much when I started it took a lot
pretty much when I started it took a lot
of work programming resources beginner
of work programming resources beginner
projects I should do
projects I should do
uh you definitely want to learn basic
uh you definitely want to learn basic
like core programming that's very very
like core programming that's very very
important to do uh and you're going to
important to do uh and you're going to
want to do that in a way that is fun and
want to do that in a way that is fun and
does not bore you I got very very bored
does not bore you I got very very bored
very very quickly with my courses and I
very very quickly with my courses and I
just started doing a ton of projects so
just started doing a ton of projects so
I generally advise new people to spend
I generally advise new people to spend
like 90% of their time maybe if you're
like 90% of their time maybe if you're
really new like 80% of your time doing
really new like 80% of your time doing
projects that you find fun very small
projects that you find fun very small
scope stuff that you can finish and uh
scope stuff that you can finish and uh
20% of your time on like formal learning
20% of your time on like formal learning
uh a lot of the stuff nowadays is on
uh a lot of the stuff nowadays is on
YouTube uh the best resources for AI and
YouTube uh the best resources for AI and
ml are
ml are
cs231n the videos for that are uh online
cs231n the videos for that are uh online
it is a grad course but is a relatively
it is a grad course but is a relatively
accessible graduate
accessible graduate
course um
course um
and yeah outside of that it's it's a lot
and yeah outside of that it's it's a lot
of like I might I may have some things I
of like I might I may have some things I
can point you to that will save you some
can point you to that will save you some
time here and there if you ask specifics
time here and there if you ask specifics
but there is just a huge time investment
but there is just a huge time investment
to learn this stuff I started around
to learn this stuff I started around
that age I spent like I don't know
that age I spent like I don't know
probably 2,000 hours joint with
probably 2,000 hours joint with
everything else I was doing in my first
everything else I was doing in my first
year and a half like just getting the
year and a half like just getting the
very very Basics and uh I mean I've been
very very Basics and uh I mean I've been
doing it from there ever since for the
doing it from there ever since for the
last 10
last 10
years but you know you do get
there and really I think that the
there and really I think that the
biggest skill difference in
biggest skill difference in
uh in a lot of places in AI is not like
uh in a lot of places in AI is not like
hard math or anything that's really
hard math or anything that's really
difficult to wrap your head around it's
difficult to wrap your head around it's
just being a very good
engineer like the best thing that I do
engineer like the best thing that I do
that lets me do what I do here like yeah
that lets me do what I do here like yeah
there's a crucial science piece of it
there's a crucial science piece of it
that's very hard to go get without and
that's very hard to go get without and
they like yeah there's a little bit of
they like yeah there's a little bit of
math but it's just trying to be very
math but it's just trying to be very
good at making very complicated things
good at making very complicated things
simple and just being very very
simple and just being very very
persistent about trying to like write
persistent about trying to like write
good code uh to make complicated things
good code uh to make complicated things
simple um and that comes more from just
simple um and that comes more from just
having things being complicated
having things being complicated
bothering you a lot than
bothering you a lot than
anything this code is not an example of
anything this code is not an example of
good code don't do as I say not as I do
good code don't do as I say not as I do
this is shitty prototype
this is shitty prototype
code and this is me trying to do things
code and this is me trying to do things
quickly on stream because otherwise it's
quickly on stream because otherwise it's
very boring watching me like stare at if
very boring watching me like stare at if
statement for an hour trying to think if
statement for an hour trying to think if
I can save five
lines okay so we needed to fix the uh
lines okay so we needed to fix the uh
the compute observations functions right
the compute observations functions right
so what we do here is I think that this
so what we do here is I think that this
is self
is self
dot we have to clear self. player OBS
right so
for this is it is still good though
for this is it is still good though
seconde college students that just got
seconde college students that just got
really interested machine learning too
really interested machine learning too
is it better invest in Hardware or run
is it better invest in Hardware or run
the program on cloud uh I'm not going to
the program on cloud uh I'm not going to
tell you how to spend your money um and
tell you how to spend your money um and
it depends on what you're trying to do
it depends on what you're trying to do
uh a good desktop for reinforcement
uh a good desktop for reinforcement
learning specifically a good desktop
learning specifically a good desktop
takes you pretty far the one thing is
takes you pretty far the one thing is
that for most environments you want to
that for most environments you want to
have a pretty nice CPU that can keep up
have a pretty nice CPU that can keep up
with the GPU um if I were looking to
with the GPU um if I were looking to
build like a budget thing uh
build like a budget thing uh
actually can I no I can't move the
actually can I no I can't move the
camera uh I have a little mini ITX next
camera uh I have a little mini ITX next
to me on the desk that I'm using for
to me on the desk that I'm using for
this that has a 3080 and an 8 core
this that has a 3080 and an 8 core
processor I'd probably go for at least a
processor I'd probably go for at least a
12 core
12 core
processor um if I were going to you know
processor um if I were going to you know
go for like a little budget build uh you
go for like a little budget build uh you
there's also the like the higher end
there's also the like the higher end
stuff that I I've shown on my uh my site
stuff that I I've shown on my uh my site
where is it this is what I use this is
where is it this is what I use this is
the exact Hardware I use to run my stuff
the exact Hardware I use to run my stuff
but these boxes are like four grand a
but these boxes are like four grand a
piece um you can build something decent
piece um you can build something decent
for like half that or less to get
for like half that or less to get
started the cloud instances on vast are
started the cloud instances on vast are
fine uh but like mentally it's really
fine uh but like mentally it's really
obnoxious to like think about having to
obnoxious to like think about having to
spin something up every time and like
spin something up every time and like
knowing that you're constantly draining
knowing that you're constantly draining
the budget on that so I've always liked
the budget on that so I've always liked
having my Hardware but uh you know you
having my Hardware but uh you know you
can kind of do either definitely don't
can kind of do either definitely don't
go with like Google cloud or something
go with like Google cloud or something
that will suck that will just sap all
that will suck that will just sap all
your money very quickly
I think actually I just need this right
I think actually I just need this right
I just set the pit and then the rest of
I just set the pit and then the rest of
it can be garbage for
now yeah this is
now yeah this is
fine uh and
fine uh and
we
we
do if
do if
idx1
idx1
Rak ah such
Rak ah such
garbage so there's like all this check
garbage so there's like all this check
this checking and stuff I have to do to
this checking and stuff I have to do to
make sure I'm not overfilling these
make sure I'm not overfilling these
buffers these are raw pointers so
buffers these are raw pointers so
technically like if I screw this up I'm
technically like if I screw this up I'm
just going to get seg fols and I'm going
just going to get seg fols and I'm going
to be confused I think
oh I should have mentioned that the
oh I should have mentioned that the
answer was really for um RL specifically
answer was really for um RL specifically
for broader ml like if you're trying to
for broader ml like if you're trying to
do Transformers you're kind of just
do Transformers you're kind of just
screwed um yeah that's like that that's
screwed um yeah that's like that that's
just it it's not affordable even for
me to do like heavy stuff with
me to do like heavy stuff with
NLP if you're doing stuff outside of RL
NLP if you're doing stuff outside of RL
with like you know medium small size
with like you know medium small size
models for applications then you just
models for applications then you just
want the best GPU you can get and that's
want the best GPU you can get and that's
basically
yet maybe like 128 gigs of
RAM I'm pretty happy with my stack for
RAM I'm pretty happy with my stack for
RL
though oh geez Google cloud is so
though oh geez Google cloud is so
stupidly expensive you will pay the
stupidly expensive you will pay the
entire cost of your Hardware uh in two
entire cost of your Hardware uh in two
months so you used Google Cloud for two
months so you used Google Cloud for two
months you've basically bought the
months you've basically bought the
machine machine and their machines are
bad H
interesting oh right so we had to we got
interesting oh right so we had to we got
to do some stuff in Python on the python
to do some stuff in Python on the python
side
cool Dory that the stream is warming up
cool Dory that the stream is warming up
though
um kind of funny to me that people like
um kind of funny to me that people like
watching random Dev but hey works for
me okay it has an X in a why
um now I have to map this to something
right this mapping is kind of
right this mapping is kind of
hard not going to
hard not going to
lie what if I just punt on this for now
lie what if I just punt on this for now
right what if I just like hardcode this
right what if I just like hardcode this
to zero I think this will just be the
to zero I think this will just be the
first that you can see if I hardcode to
first that you can see if I hardcode to
zero for
zero for
now let's see if it works or if it
crashes so this is what I was warning
crashes so this is what I was warning
about this is one of the places where
about this is one of the places where
like I wish cython had way more tooling
like I wish cython had way more tooling
investment but because I'm using a
investment but because I'm using a
buffer
buffer
here I have to be very careful not to
here I have to be very careful not to
overrun any of my
overrun any of my
buffers otherwise you get no Reon a
buffers otherwise you get no Reon a
error message even with syon checks
on idx is equal to
10 well first of
10 well first of
all this is idx has to be incremented so
all this is idx has to be incremented so
I shouldn't be overrunning
I shouldn't be overrunning
it is a nice background signal during my
it is a nice background signal during my
own Dev I don't know how you Focus
own Dev I don't know how you Focus
listening to this but hey it's pretty
nice hopefully there's stuff to
learn it's 10 then you break if it's 10
learn it's 10 then you break if it's 10
then you
break but this wasn't it because we
break but this wasn't it because we
weren't incrementing
weren't incrementing
idx it could be this
what if I just pass here to
what if I just pass here to
something it could also be on the other
something it could also be on the other
side it could be on the um the
side it could be on the um the
computation of attacks I wouldn't be
computation of attacks I wouldn't be
surprised
okay so it's still seg fals meaning that
okay so it's still seg fals meaning that
it's not this um I think it's probably
it's not this um I think it's probably
right here
somewhere so get player
somewhere so get player
OB agent
OB agent
index and then the
attack let's
um and then you do get player of the
um and then you do get player of the
target pit
getting
Target okay so print this and let's do
Target okay so print this and let's do
got
got
Target maybe it's here
did it segul before anything
did it segul before anything
happened just checking when you
happened just checking when you
mentioned
mentioned
cs231n deep learning for computer yeah
cs231n deep learning for computer yeah
but it covers more than just computer
but it covers more than just computer
vision um go find either like Andre's
vision um go find either like Andre's
original lectures carpy's lectures or
original lectures carpy's lectures or
like Justin's lectures some of the
like Justin's lectures some of the
lectures are better than others the
lectures are better than others the
video should be pretty old at this point
video should be pretty old at this point
but they're very good uh the main thing
but they're very good uh the main thing
about that course compared to many of
about that course compared to many of
the other ones is that you will have a
the other ones is that you will have a
decent chance of following a lot of it
decent chance of following a lot of it
uh some of the other grad courses are
uh some of the other grad courses are
just very math heavy for no apparent
just very math heavy for no apparent
reason like you're not going to unless
reason like you're not going to unless
you have a very good grad math
you have a very good grad math
background you're not going to be able
background you're not going to be able
to follow cs229 for instance and it's
to follow cs229 for instance and it's
not going to be particularly useful so
not going to be particularly useful so
that's really the the good one that's
that's really the the good one that's
there
very weird that we're not even getting
very weird that we're not even getting
here that we're just seg faulting
right I know I'm just going to add some
right I know I'm just going to add some
prints we're going to be lazy
here I really wish we had a better
here I really wish we had a better
debugger for this
did I rebuild it what
happened well that doesn't make sense to
happened well that doesn't make sense to
me that it's it's seg faulting before
me that it's it's seg faulting before
it's printing
anything I guess it would have to be on
anything I guess it would have to be on
the compute observations huh
is scon as good as other
is scon as good as other
options so for this particular
options so for this particular
project like what other options would
project like what other options would
there be it would either be write it in
there be it would either be write it in
C++ and then nobody will ever bother
C++ and then nobody will ever bother
reading the source code and it will be a
reading the source code and it will be a
pain and I have to deal with
pain and I have to deal with
pbind or like anything else I have to
pbind or like anything else I have to
basically deal with annoying like cross
basically deal with annoying like cross
language
language
interfaces um sion's the only thing that
interfaces um sion's the only thing that
bypasses like pbind like annoyances with
bypasses like pbind like annoyances with
signatures and the like and that has a
signatures and the like and that has a
decent chance of being read and used by
decent chance of being read and used by
researchers because it's basically just
researchers because it's basically just
python
python
um yeah there there's really nothing
um yeah there there's really nothing
else I could think of that would be good
else I could think of that would be good
I mean I guess there's some new stuff
I mean I guess there's some new stuff
around but nothing that really fits this
around but nothing that really fits this
profile did it not give me did I just
profile did it not give me did I just
forget to recompile it no how is it seg
forget to recompile it no how is it seg
falting
falting
before Oh wait here it is so resetting
before Oh wait here it is so resetting
buffers yeah so it's failing here
buffers yeah so it's failing here
somehow resetting buffers for OBS
somehow resetting buffers for OBS
4 get player
4 get player
OB oh okay so yeah this function is just
OB oh okay so yeah this function is just
not working the way that I'm expecting
not working the way that I'm expecting
that's fine yeah that's we kind of
that's fine yeah that's we kind of
expected to do this so this is one of
expected to do this so this is one of
the limitations here uh what I would
the limitations here uh what I would
like to have is I would like to have
like to have is I would like to have
an array of player
an array of player
star or mem view of player
star or mem view of player
star I can't really do that
right I mean maybe because it's a se
right I mean maybe because it's a se
struct you can I don't think you can
struct you can I don't think you can
here let me let me see if I try to
here let me let me see if I try to
compile this as
like
like
player array player OBS this won't work
player array player OBS this won't work
right
wait are you actually allowed to do this
wait are you actually allowed to do this
am I just being
dumb so I have errors but I don't have
dumb so I have errors but I don't have
errors on this data
errors on this data
type if you can do this this is
type if you can do this this is
sweet we'll try it we will uh we will
sweet we'll try it we will uh we will
try
it cannot convert player to a memory
it cannot convert player to a memory
view
view
slice
um well you wouldn't have to right you
um well you wouldn't have to right you
would just
do I doubt this is going to work but if
do I doubt this is going to work but if
it does it actually makes our life way
it does it actually makes our life way
easier probably write a small test
easier probably write a small test
function you
function you
know you're probably right I hate
know you're probably right I hate
writing tests but that would be easier
writing tests but that would be easier
wouldn't it
let me go find there's a Syntax for
let me go find there's a Syntax for
importing scyon
files um I forget where it is I think I
files um I forget where it is I think I
have an example in clean pop
RL yeah so right
RL yeah so right
here technically I can do
that's probably a nice thing to have
that's probably a nice thing to have
because this is a complicated project so
because this is a complicated project so
we're probably going to want to be able
we're probably going to want to be able
to test some stuff
right
right
import test struct
import test struct
whatever test struct
I need to get the data type from the the
Moa so I want this like player D type
Moa so I want this like player D type
this type of a code right
here test.py
what is
ITX why why does it do this to
ITX why why does it do this to
me okay you know whatever super Maven
me okay you know whatever super Maven
will just do
will just do
it
nope I did not tell to auto
nope I did not tell to auto
complete yeah I love it once when yeah
complete yeah I love it once when yeah
player and
player and
PID now it'll do it
PID now it'll do it
right yeah now that just does
right yeah now that just does
it CP
it CP
death okay there it
death okay there it
works dumb very dumb
let's check the Twitter real quick to
let's check the Twitter real quick to
see if there's anything on
it I do have to uh see if there's any
it I do have to uh see if there's any
cool stuff going
cool stuff going
on H some
on H some
follows no uh no cool comments on wait
follows no uh no cool comments on wait
okay just
okay just
refreshed see it fallen out
refreshed see it fallen out
uh okay nothing
thesis defense was really cool presented
thesis defense was really cool presented
really well too thank you looking
really well too thank you looking
forward to your developments I've done
forward to your developments I've done
more in the last two months than I've
more in the last two months than I've
done in the last two years actually the
done in the last two years actually the
progress has been absolutely insane with
progress has been absolutely insane with
puffer lib
puffer lib
um it's just like as soon as the
um it's just like as soon as the
academic side got out of my way and I
academic side got out of my way and I
don't have to think about papers and I
don't have to think about papers and I
can just focus on like good highper
can just focus on like good highper
engineering stuff has started moving
engineering stuff has started moving
really really fast like I'm very very
really really fast like I'm very very
happy with how puffer be shaping
up okay so what we were trying to do is
up okay so what we were trying to do is
we were trying to figure out
um dtype
we want player dtype and then test
we want player dtype and then test
struct maybe player dtype
struct maybe player dtype
have I
seen.
seen.
0481 one
I think puffer lib should have a first
I think puffer lib should have a first
class oh was this the thing that was on
class oh was this the thing that was on
Twitter
Twitter
wait is this new was this the thing that
wait is this new was this the thing that
was on
Twitter so I saw the thing on
Twitter so I saw the thing on
Twitter
and let's see their
experiments I'm always so distrustful of
experiments I'm always so distrustful of
algorithm results
man clean RL DQ yeah I'm so distrustful
man clean RL DQ yeah I'm so distrustful
of algorithm
of algorithm
results um I've seen just I've wasted
results um I've seen just I've wasted
way too much of my time um like you know
way too much of my time um like you know
trying to like go like use new
trying to like go like use new
algorithms and stuff and the comparisons
algorithms and stuff and the comparisons
are just always always bad faith
are just always always bad faith
comparisons like for instance I know
comparisons like for instance I know
that the um the clean RL defaults are
that the um the clean RL defaults are
horribly horribly wall clock inefficient
horribly horribly wall clock inefficient
so like this type of a plot here this is
so like this type of a plot here this is
not remotely representative like I
not remotely representative like I
guarantee you they did not tune this
guarantee you they did not tune this
Baseline um or use like remotely
Baseline um or use like remotely
reasonable settings I have this video
reasonable settings I have this video
that's pinned to my Twitter where I make
that's pinned to my Twitter where I make
like clean RL first I make it like four
like clean RL first I make it like four
times faster as a comparison to the
times faster as a comparison to the
Baseline I optimize that and then I make
Baseline I optimize that and then I make
puffer like two or three times faster on
puffer like two or three times faster on
top of
that well I'm not using rainbow dqn
that well I'm not using rainbow dqn
right like I'm using PPO as my basis for
right like I'm using PPO as my basis for
everything at the moment
everything at the moment
and is this
simple very low
simple very low
memory only algorithm is
memory only algorithm is
po lower number of hyper
po lower number of hyper
parameters and provable
parameters and provable
stability provable stability
stability provable stability
I don't know about
that this is not exactly
that this is not exactly
true and did they
discount so the thing with puffer is I'm
discount so the thing with puffer is I'm
not actually puffer is not primarily in
not actually puffer is not primarily in
an algorithms Library if you've noticed
an algorithms Library if you've noticed
I only have I have one implementation in
I only have I have one implementation in
puffer um puffer is fast compatible M
puffer um puffer is fast compatible M
support like you could use puffer with
support like you could use puffer with
this whatever their code is if it has a
this whatever their code is if it has a
VEC interface for like Gym's you can use
VEC interface for like Gym's you can use
puffer with their thing and puffer will
puffer with their thing and puffer will
just instantly make this thing two to
just instantly make this thing two to
three times faster bare minimum
three times faster bare minimum
sometimes 10 times faster for certain
sometimes 10 times faster for certain
environments um
environments um
at the very least like more algorithm
at the very least like more algorithm
implementations is bottom of my priority
implementations is bottom of my priority
list because people have been doing this
list because people have been doing this
forever like there are a million
forever like there are a million
different algorithm
different algorithm
implementations and thus far nothing has
implementations and thus far nothing has
stood the test of time over
stood the test of time over
po maybe this will be the thing that's
po maybe this will be the thing that's
different and I do like that they have
different and I do like that they have
craft a as a baseline that's that's very
craft a as a baseline that's that's very
nice
nice
um it actually if you look at it it's
um it actually if you look at it it's
it's about the same here which is funny
it's about the same here which is funny
that they just have this different curve
that they just have this different curve
shape that's very
shape that's very
interesting
interesting
um
yeah they need to run this for longer as
yeah they need to run this for longer as
well craftex you can get way more than a
well craftex you can get way more than a
billion frames
on and then these are like tiny there's
on and then these are like tiny there's
so much stuff I can show like here for
so much stuff I can show like here for
instance this overcooked environment
instance this overcooked environment
they have like one E6 time steps cuz
they have like one E6 time steps cuz
this environment is so slow I messed
this environment is so slow I messed
with this and the code base for this
with this and the code base for this
environment is just God awful like this
environment is just God awful like this
environment should run at a million
environment should run at a million
steps per second and instead it runs at
steps per second and instead it runs at
like I don't know a hundred or a few
like I don't know a hundred or a few
hundred um
hundred um
yeah so like I would I don't even trust
yeah so like I would I don't even trust
this environment fundamentally because
this environment fundamentally because
of what a mess it is
of what a mess it is
uh smacks I'm not familiar with hanabe
uh smacks I'm not familiar with hanabe
okay
okay
cool
cool
yeah one10 is nice but these are you
yeah one10 is nice but these are you
know the very similar for these Ms I
know the very similar for these Ms I
don't know we'll see my general policy
don't know we'll see my general policy
with algorithms is I wait to see if they
with algorithms is I wait to see if they
stick around and if people actually like
stick around and if people actually like
them and then I look at them because
them and then I look at them because
I've literally wasted months before on
I've literally wasted months before on
things that looked promising like uh the
things that looked promising like uh the
dreamer V3 paper for instance that
dreamer V3 paper for instance that
looked super promising right well turns
looked super promising right well turns
out not really wasted 10,000 compute
out not really wasted 10,000 compute
hours on
it maybe some sort of dqn based thing
it maybe some sort of dqn based thing
maybe for
so data G
so data G
type yeah let let's get back to coding
type yeah let let's get back to coding
this thing
um now
Okay so we've got this
Okay so we've got this
now and then we have
cdef
cdef
layers
layers
uh let's do
zero dox
right so you can't have them be the same
name
name
okay we
okay we
have right we have to import
numpy if this works it'll be very
numpy if this works it'll be very
awesome I think it's pretty unlikely
awesome I think it's pretty unlikely
that it does um and then I'm going to
that it does um and then I'm going to
have to rethink a bunch of stuff if it
doesn't uh
H memory view
slice what about if I do this
memory view
slice what if I do
like this work
okay um if I
do
do
test.py if I go here and I try to
test.py if I go here and I try to
populate this with
something so like uh struct data
equals what is it it's uh nump
equals what is it it's uh nump
dot no wait how do you do this again
dot no wait how do you do this again
yeah you have to
do D type. item
do D type. item
size and then it's like equal numpy
size and then it's like equal numpy
doint
doint
8 and then it's going to be like data
8 and then it's going to be like data
struct data is going to
struct data is going to
be from
buffer of data no not
buffer of data no not
view view wreck
something like
this spend a lot of time on data types
this spend a lot of time on data types
here yeah so it's from buffer with the D
here yeah so it's from buffer with the D
type. view Rec
array uh and then what we do is we do
array uh and then what we do is we do
struct
struct
data dox equals nump a range 10 + three
data dox equals nump a range 10 + three
or plus yeah three so now we have
or plus yeah three so now we have
something to look
something to look
at um
test Ah that's interesting so yeah you
test Ah that's interesting so yeah you
can't
do you can't do it like this obviously
do you can't do it like this obviously
so it's going to be
so it's going to be
50 uh
50 uh
dot let's do like one
dot let's do like one
51 that reshape 10
five could not
broadcast into input from shape 105 into
broadcast into input from shape 105 into
shape 50 why
not 50
this not
this not
the is this not the shape that I think
the is this not the shape that I think
it
is if we can use this as the data
is if we can use this as the data
structure back end for our environment
structure back end for our environment
it's going to be very
nice struct data
well it shouldn't just be
50 we should be able to dot like reshape
50 we should be able to dot like reshape
right do reshape 105 Maybe
okay so this looks like it did
something buffer has the wrong number of
something buffer has the wrong number of
dimensions
dimensions
expected
expected
two got
three expected two got
three
oops how do I do this here need to do
oops how do I do this here need to do
dot data
you only need to do data on
pointers let me Google this real quick
pointers let me Google this real quick
just to see if there's an
just to see if there's an
obvious uh
obvious uh
memory slice of rock syon let me just
memory slice of rock syon let me just
see if there's a thing for this
it looks like you can do
this type to memory
view but it doesn't like that this is
2D and says it got the wrong number of
Dimensions I think you need to give it
Dimensions I think you need to give it
the right number of bites
maybe let's see if we give this the
maybe let's see if we give this the
right number of bites right here
does it say
does it say
expected expected two Dimensions got
expected expected two Dimensions got
three dimensions is that what it
said why does it
said why does it
expect two
expect two
Dimensions when it is a struct
uh 2D
uh 2D
typed memory view of struct
scon
now now this is the opposite
now now this is the opposite
problem 2D Plus plus memory
problem 2D Plus plus memory
views struct definition array of memory
views single continuous type memory
view nope this
view nope this
is not what we're looking
is not what we're looking
for um
you can technically create it from the
you can technically create it from the
scon side I'd rather not do that
though struct definition with typed
though struct definition with typed
memory view as member
no when you want to assign this to a
no when you want to assign this to a
struct
struct
right I don't want to cast it to a
right I don't want to cast it to a
pointer
can I do likees type player or
something I think even a 1D so if I just
something I think even a 1D so if I just
do like this I cut 2D I think I can
do like this I cut 2D I think I can
generalize it type memory view
obstruct no it's the opposite thing
what I'm trying to do here is I'm trying
what I'm trying to do here is I'm trying
to
to
get this
get this
data I'm trying to make this into a 2d
data I'm trying to make this into a 2d
array of strs so this extra Dimension
array of strs so this extra Dimension
here should get crunched into the
here should get crunched into the
struct but for some reason it's not it
struct but for some reason it's not it
is not
is not
cooperating and I can't find docks on
cooperating and I can't find docks on
how to do this but it does look like
how to do this but it does look like
it's
supported I thought I'd seen a post that
supported I thought I'd seen a post that
was
was
like reasonable before
array of
array of
structs like to fill a long array of
structs like to fill a long array of
strs from
C do you need to cast it like
this hold the character
this hold the character
array way to do this in
syon doesn't like mixing arrays with
syon doesn't like mixing arrays with
scalar
arrays well this one has without a
arrays well this one has without a
cast so here they passed a structured
cast so here they passed a structured
array and then they just assign
array and then they just assign
it so what if I do it this way what if I
it so what if I do it this way what if I
pass the structured array right
um I can do that right I can do struct
um I can do that right I can do struct
data Maybe This does it maybe that
data Maybe This does it maybe that
actually would save me some if this
actually would save me some if this
worked that would actually make it
worked that would actually make it
easier ooh this looks like it does
easier ooh this looks like it does
work
so and I'm learning more and more about
so and I'm learning more and more about
um the way to do stuff with syon and
um the way to do stuff with syon and
it's getting like increasingly Compact
it's getting like increasingly Compact
and
Powerful let's see see what this why
Powerful let's see see what this why
this doesn't like
this doesn't like
it cannot take the address of a memory
it cannot take the address of a memory
slice
okay cannot convert player slice to
okay cannot convert player slice to
player
player
star that's fine
right no attribute
X about like this
uh it's not giving me the
full
full
interesting let's uh let's do it right
interesting let's uh let's do it right
like this C
like this C
def player star player pointer
def player star player pointer
it's going to be like
it's going to be like
this and again we cast and then we print
this and again we cast and then we print
player pointer dot
player pointer dot
xes this give me an
error uh this terminal is not giving me
enough where is it I need more
enough where is it I need more
background on this
where is
where is
the the history of
it can I seriously not set the scroll
it can I seriously not set the scroll
history on this
thing windows
am I just not seeing it I could have
am I just not seeing it I could have
sworn I said this just the other
sworn I said this just the other
day green buffer
size this work now
no cannot convert point to a pointer
no cannot convert point to a pointer
type that might have
worked yeah yeah so that's it so now do
worked yeah yeah so that's it so now do
I get the full error
message this should give me the full
message this should give me the full
error
right cannot convert to a pointer type
okay so this
okay so this
is yeah it's giving me an internal
error which is kind of weird because
error which is kind of weird because
this should be able to be converted to a
this should be able to be converted to a
pointer type
right oh I think I know what it is
right oh I think I know what it is
um you just do
it's
it's
player star
player address of 0 0
player address of 0 0
right and then you get to print player
right and then you get to print player
dox I think that's how it works
okay so this only gets us one
value right because this is giving us an
value right because this is giving us an
individual player
okay I think I'm thinking this and this
is I'm overthinking
is I'm overthinking
this I only need vectorized
this I only need vectorized
access from the python side because I'm
access from the python side because I'm
going to be writing Loops in scon
going to be writing Loops in scon
anyways so the way that you would do
anyways so the way that you would do
this is just like
you just like
print like this
right and I just typo this
now we get out of bounds because I uh I
now we get out of bounds because I uh I
went well because I went out of
went well because I went out of
bounds but this is very nice because
bounds but this is very nice because
this will actually give you bounce
this will actually give you bounce
checks and stuff so I won't get any more
checks and stuff so I won't get any more
seg
seg
fults so I did not know that you could
fults so I did not know that you could
do
do
this this actually simplifies my scon a
this this actually simplifies my scon a
whole
lot I mean you still have to CL you
lot I mean you still have to CL you
still have to
you still have to cast it to a
you still have to cast it to a
pointer
pointer
but it's a lot
easier
easier
okay so let's go do this for the main
okay so let's go do this for the main
MOA and this is going to simplify stuff
MOA and this is going to simplify stuff
a lot actually going to be very
nice it's kind of annoying that I'm like
nice it's kind of annoying that I'm like
doing all these syon projects and only
doing all these syon projects and only
discovering these things later
discovering these things later
on because it means I'm going to have to
on because it means I'm going to have to
go back to all my earlier code and like
go back to all my earlier code and like
reformat it like this because this is so
reformat it like this because this is so
much better
right so all we have to do is we do
right so all we have to do is we do
self. players
self. players
equals numpy
do0 self. agents D type equal D
type that's literally it it's so much
simpler OBS players is going to be
num
num
agents
agents
10 D type is going to be dtype
don't need this mess
don't need this mess
right and then self do
right and then self do
creeps uh we don't need op creeps we
creeps uh we don't need op creeps we
just do creeps like
just do creeps like
this Towers is going to just be zeros
this Towers is going to just be zeros
again so much
again so much
easier so so much easier
and then when we make the
environment we just have to pass the
environment we just have to pass the
regular versions we no longer need these
regular versions we no longer need these
flattened annoying
copies and then we get to make stuff
copies and then we get to make stuff
memory views instead of pointers memory
memory views instead of pointers memory
views are way nicer to work with than
views are way nicer to work with than
pointers
oops way way nicer
oops way way nicer
so this player star is now a player
so this player star is now a player
array player memor view
array player memor view
rather and then this player OBS is now a
rather and then this player OBS is now a
player double M view like this 2D M View
player double M view like this 2D M View
and then we have creeps and
towers
towers
and you literally don't even need the
and you literally don't even need the
cast
cast
anymore and you don't even need the dot
anymore and you don't even need the dot
data anymore it's literally just this
data anymore it's literally just this
simple that's actually incredible
simple that's actually incredible
so your entity component system just got
so your entity component system just got
like I used to have to say hey it's kind
like I used to have to say hey it's kind
of hard to set up the entity component
of hard to set up the entity component
system you know you got to do a little
system you know you got to do a little
bit of memory management you got to do a
bit of memory management you got to do a
little bit of stuff and now it's just
little bit of stuff and now it's just
trivial now it's just
trivial now it's just
trivial we're going have to rewrite a
trivial we're going have to rewrite a
couple very uh very small functions here
couple very uh very small functions here
like this git
like this git
player looks more simplified
player looks more simplified
yeah um there definitely some rough
yeah um there definitely some rough
edges on scon but the more I use it the
edges on scon but the more I use it the
more I find stuff like this it's really
more I find stuff like this it's really
really nice what it gives you I mean
really nice what it gives you I mean
this is a trivial entity component
this is a trivial entity component
system that is shared memory between
system that is shared memory between
Python and scyon so you can do highle
Python and scyon so you can do highle
ops that are not performance critical in
ops that are not performance critical in
Python you know you can do your array
Python you know you can do your array
Ops or whatever and then you can do your
Ops or whatever and then you can do your
performance critical stuff in syon and
performance critical stuff in syon and
it runs at c-s speed and all the changes
it runs at c-s speed and all the changes
are immediately reflected to python
are immediately reflected to python
without pbind without anything it's just
without pbind without anything it's just
very transparent and lightweight
so we no longer have to do this array
so we no longer have to do this array
map it's just player OBS PID idx we
map it's just player OBS PID idx we
still have to remember this and Pand
still have to remember this and Pand
otherwise it'll copy but this is the
otherwise it'll copy but this is the
only little bit of
overhead I think that's it actually
because since it's a m view of player
because since it's a m view of player
you can still get the
pointer let's see what we have to
fix and the real nice big advantages of
fix and the real nice big advantages of
um instead of using a pointer uh like
um instead of using a pointer uh like
just a pointer type to represent what is
just a pointer type to represent what is
actually an array of pointers right cuz
actually an array of pointers right cuz
that's what you do you know charar is a
that's what you do you know charar is a
string it's just you just keep reading
string it's just you just keep reading
it now since we have a memory view we
it now since we have a memory view we
actually get bounds checking which means
actually get bounds checking which means
it's actually impossible for us to Segal
it's actually impossible for us to Segal
on uh on any of these data structures
on uh on any of these data structures
which is very very nice for debugging
which is very very nice for debugging
and Dev in
general so we didn't just fix the bug
general so we didn't just fix the bug
from before
from before
we made it literally
we made it literally
impossible for that bug to
impossible for that bug to
exist and now we get reasonable errors
exist and now we get reasonable errors
so we go fix some
so we go fix some
errors but they're like easy non-
errors but they're like easy non-
terrible errors
right um so there is still the matter of
right um so there is still the matter of
casting to a Rec array
right we do still need to cast to a Rec
right we do still need to cast to a Rec
array
H I wonder if I just pass it as a Rec
H I wonder if I just pass it as a Rec
Ray if it's still fine
right like maybe this is just
fine okay so we still get a seg fault
fine okay so we still get a seg fault
here we do have some data types that are
here we do have some data types that are
not
not
bounce
bounce
checked or do we let me
checked or do we let me
see where did we have those print
see where did we have those print
statements from before
very weird that we
very weird that we
are I mean we might be getting these
are I mean we might be getting these
Tech pts on a knit
Tech pts on a knit
right like maybe this
right like maybe this
um maybe it do doesn't know how to deal
um maybe it do doesn't know how to deal
with the rec
with the rec
array where's the first one we assign is
array where's the first one we assign is
it right
it right
here setting up
here setting up
arrays print
setup
setup
Players let's see if this
prints it's probably seg fting on the
prints it's probably seg fting on the
setup code actually
so I want to not just fix this seg fold
so I want to not just fix this seg fold
I want to figure out where it's coming
I want to figure out where it's coming
from and then restructure whatever piece
from and then restructure whatever piece
of code that is so it's impossible to
of code that is so it's impossible to
get Segal
Terrors oh we actually got
a for some reason we actually it didn't
a for some reason we actually it didn't
seg fold immediately and we got a
seg fold immediately and we got a
reasonable
reasonable
error which is from get player of
PID so that is interesting
PID so that is interesting
uh so we have that this thing here can
uh so we have that this thing here can
potentially uh be out of
potentially uh be out of
bounds this target
bounds this target
PID so we'll figure that out let me see
PID so we'll figure that out let me see
if uh it always does
if uh it always does
this yeah so no now we NE now we still
this yeah so no now we NE now we still
get a
get a
Segal and we get the
Segal we get the Segal very
Segal we get the Segal very
early I don't know how that's possible
in
in
it how do we how's it possible to get a
it how do we how's it possible to get a
Segal before we've done
anything well that's bizarre
anything well that's bizarre
right that we're getting a seg
fault is it possible we're getting it
fault is it possible we're getting it
from like somewhere else from RB or
something commment out the Mouse
stuff no
tile how is it that we're getting to
tile how is it that we're getting to
render but we're not getting to anit the
render but we're not getting to anit the
environment
environment
right is it clearing oh oh I think it's
right is it clearing oh oh I think it's
clearing the
clearing the
um I think it's
um I think it's
clearing yeah yeah yeah so if I just put
clearing yeah yeah yeah so if I just put
like here
Trace there we
go okay so this is actually fine um it
go okay so this is actually fine um it
does reset
does reset
correctly and then it's going to
correctly and then it's going to
clear later on so let's just
clear later on so let's just
do
do
clear uh pulse
something is still
clearing oh I just have a clear in the
clearing oh I just have a clear in the
system don't
I not this one
I not this one
yeah os. system clear right here so I
yeah os. system clear right here so I
was just clearing the data we should
was just clearing the data we should
probably not have that set that way for
probably not have that set that way for
debugging okay perfect so now we see
debugging okay perfect so now we see
that you do tile one tile One Source wck
right and then it
uh then it
uh then it
crashes
so I want to see if it gets to the end
so I want to see if it gets to the end
of the render Loop
no it does not get to the end of the
no it does not get to the end of the
render Loop that means something that is
render Loop that means something that is
happening in the render Loop is crashing
happening in the render Loop is crashing
it is quite
it is quite
odd
odd
um this render Loop
um this render Loop
goes R Min our
Max the only thing you're accessing here
Max the only thing you're accessing here
is G isn't
is G isn't
it I mean I actually it could be RB
it I mean I actually it could be RB
ulting
right Source rest Direct Des
re print
R corrupted size versus prev size
corrupted size versus prev
corrupted size versus prev
size
H
H
grid not out of bounding the
grid not out of bounding the
grid size versus PR size what if I just
grid size versus PR size what if I just
don't draw this does it still
crash yep
set map of
tile can I just run it non-human
tile can I just run it non-human
mode if I run
this uh so now we actually we get the
this uh so now we actually we get the
same error but we don't get this egg B
python
python
Malik it's very weird because I'm not
Malik it's very weird because I'm not
malaking
anything unsigned
anything unsigned
long unsigned long
long unsigned long
failed was this happening before I cast
failed was this happening before I cast
to recar
Ray if I
Ray if I
do Players
do Players
recck players. viw let's just try this
recck players. viw let's just try this
to see cuz it's possible that it's just
to see cuz it's possible that it's just
the memory views don't know how to
the memory views don't know how to
handle i' say it's even fairly likely
handle i' say it's even fairly likely
that the memory views just don't know
that the memory views just don't know
how to handle this
how to handle this
right and I actually think that this
right and I actually think that this
would be you go back
would be you go back
to players what is
to players what is
this
see see
see see
players so up
players so up
players C OBS players
players C OBS players
players and let's just
players and let's just
uh the
uh the
creeps
creeps okay and then we pass the C1
creeps okay and then we pass the C1
to
syon C
syon C
players see OBS
players see OBS
players nope
players nope
I don't know why it's uh it's so
I don't know why it's uh it's so
insistent on totally messing everything
insistent on totally messing everything
up bad bad
suggestions
suggestions
you
you uh I think that's correct
right puffer mooba has no attribute
right puffer mooba has no attribute
players help up
we do
we do
have this is supposed to be C
have this is supposed to be C
players the OBS
players sea creeps and sea
Towers we still get this weird
Towers we still get this weird
Malik thing and we just remember we
Malik thing and we just remember we
tested this is correct before
getting player OBS
getting player OBS
9 well maybe we can track it down
now getting player OBS
now getting player OBS
n reset
buffers computed
buffers computed
observations
observations
observation rebuild this oops
rebuild this
so it looks like it's happening on the
so it looks like it's happening on the
attacks
attacks
potentially because it computes all the
observations we have a very easy way to
observations we have a very easy way to
confirm this we can just comment out the
confirm this we can just comment out the
attack
attack
Loop and
Loop and
see what is potentially happening in
see what is potentially happening in
there remember this shouldn't be able to
there remember this shouldn't be able to
Segall
still s bols okay
computed
computed
observations segmentation
fault it doesn't even get to the start
fault it doesn't even get to the start
up here right
is this somehow it's like bolting and
render no it's not getting to
render is it it's resetting correctly
render is it it's resetting correctly
though
though
right no it's not resetting correctly
if I put a break
point okay so it's it's delaying the it
point okay so it's it's delaying the it
the problem is in
the problem is in
reset it looks like
well reset is where compute observations
happens even though it says it computed
happens even though it says it computed
all the
observations if I comment out compute
observations we're going to get there
okay so if I comment out compute
okay so if I comment out compute
observations uh it actually works and it
observations uh it actually works and it
it gets through the first step until I
it gets through the first step until I
assume it gets to compute observations
assume it gets to compute observations
again so if I comment out both compute
again so if I comment out both compute
observations right
observations right
I'm assuming that this will just
I'm assuming that this will just
work and somewhere there's a seg fold in
work and somewhere there's a seg fold in
compute observations that I'm
missing which could just be like weird
missing which could just be like weird
undefined behavior that is not cropping
undefined behavior that is not cropping
up until
later okay so yes this does in fact work
later okay so yes this does in fact work
the Segal is somewhere in compute
the Segal is somewhere in compute
observations so let's just go figure out
observations so let's just go figure out
what the heck
what the heck
I broke over
there so even though that is technically
there so even though that is technically
printing through all of
this I bet you it's this line right here
this I bet you it's this line right here
not working the way I think it
not working the way I think it
is let's just guess
yeah so it is this
yeah so it is this
line so I don't know what this line is
line so I don't know what this line is
doing but it's not doing what I was
doing but it's not doing what I was
intending to do
intending to do
um get player
OB yeah so this is I was trying to copy
I was trying to copy
here so get player OB hold
here so get player OB hold
on get player op gives you a player
on get player op gives you a player
star how do I copy one struct into
star how do I copy one struct into
another into
syon there C
syon there C
syntax you can assign from one to the
other yeah this is a shallow copy so
other yeah this is a shallow copy so
this
this
is not what I wanted
I'm going to do it the dumb way for now
I'm going to do it the dumb way for now
that I know will
work get player OB
player star Target
OB uh so we're going to do Target OB is
OB uh so we're going to do Target OB is
going to be this and then we do Target
going to be this and then we do Target
ob. PID Target ob. X Target ob. y Target
ob. PID Target ob. X Target ob. y Target
ob. health and Target ob.
ob. health and Target ob.
team we're just going to copy the
team we're just going to copy the
properties individually
okay and now this works as
okay and now this works as
intended and we
intended and we
have a very nice representation of our
have a very nice representation of our
data
we have a very
we have a very
nice uh ability now to start building
nice uh ability now to start building
the attack
operations I think we potentially have
operations I think we potentially have
some out of bounds stuff in
some out of bounds stuff in
here uh we will see when I build this
okay this actually runs without seg
okay this actually runs without seg
folting or or anything weird already
folting or or anything weird already
that's
that's
nice we'll do uh where is it render
nice we'll do uh where is it render
mode
mode
human and uh why don't we add like some
human and uh why don't we add like some
health bars and stuff
right so here's our better rendered
right so here's our better rendered
version of this environment we can
version of this environment we can
control our little
control our little
puffer and uh we probably don't want to
puffer and uh we probably don't want to
get too close to the tower because it
get too close to the tower because it
will Merc
you and we can move in eight directions
you and we can move in eight directions
movement could be smoother you know we
movement could be smoother you know we
can do some potentially other stuff uh
can do some potentially other stuff uh
particularly this movement of enemies
particularly this movement of enemies
looks very
looks very
choppy we could potentially render that
choppy we could potentially render that
continuous instead of
continuous instead of
discreet actually wouldn't that be
discreet actually wouldn't that be
ridiculously easy to
ridiculously easy to
do hold on I think that's like
do hold on I think that's like
ridiculously easy to do isn't
it uh it's not going to make a
it uh it's not going to make a
difference for now though because we
difference for now though because we
have the speed set to CLI we have the
have the speed set to CLI we have the
speeds clipped but in the future we will
speeds clipped but in the future we will
actually be able to do it that
way because we do have the position
way because we do have the position
saved as FL
Let's uh let's add some health bars
right we're going to need to get
right we're going to need to get
the player
the player
IDs and the like in order to do all of
this I do wonder if it would be easier
this I do wonder if it would be easier
for us
to the player ID thing
to the player ID thing
works I wish we could just store like
pointers a little bit easier
right the fundamental difficulty in this
right the fundamental difficulty in this
project comes from this mix of having
project comes from this mix of having
like a grid representation for things
like a grid representation for things
that need to be
that need to be
computed uh over things that are nearby
computed uh over things that are nearby
because a grid is more efficient for
because a grid is more efficient for
that
that
and having to have a representation for
and having to have a representation for
um well everything
else
well for now we can just expose the uh
well for now we can just expose the uh
the player IES and that will be
the player IES and that will be
sufficient to get us some health bars
right so what we're going to do is this
right so what we're going to do is this
grid here self.
grid here self.
pids going to be zeros with a 30 in
pids going to be zeros with a 30 in
32 and then it we'll just pass this pids
32 and then it we'll just pass this pids
to
to
CM right here
CM right here
uptp
uptp
pids Ste
MOA this will now take
MOA this will now take
grid
bids int PID map is going to just
be
be
pids we have to remember to subtract one
ni
ni
one and now we have access to
one and now we have access to
pids
pids
so in the render function
here what we can actually do
here what we can actually do
is's
grid yeah we need pids as well now pids
grid yeah we need pids as well now pids
right pids grid PS
right pids grid PS
agents
there let's do
there let's do
grid s.
pids okay so now what we do is we're
pids okay so now what we do is we're
going to do PID it's going to be pids
going to do PID it's going to be pids
of uh the p
of uh the p
position and the position is going to
be use an inj here
be use an inj here
for see we've got main
for see we've got main
R when you finish why don't you upload
R when you finish why don't you upload
this on get as an open source so
this on get as an open source so
everyone can contribute to this to
everyone can contribute to this to
something
something
um all of my work is immediately
um all of my work is immediately
uploaded to get as open source this is
uploaded to get as open source this is
in puffer lib already it's in one of the
in puffer lib already it's in one of the
it's in like a random Dev branch that
it's in like a random Dev branch that
I've been trying to like merge
I've been trying to like merge
technically it's in any config so
technically it's in any config so
everything up until this morning is
everything up until this morning is
already there and then you know as soon
already there and then you know as soon
as I get to a stable spot I'll you know
as I get to a stable spot I'll you know
I'll be making commits throughout the
I'll be making commits throughout the
day so yeah all of my stuff is
day so yeah all of my stuff is
immediately open source and you're more
immediately open source and you're more
than welcome to submit PRS discuss stuff
than welcome to submit PRS discuss stuff
on discord.gg Puffer and otherwise
on discord.gg Puffer and otherwise
contribute to the project that's the
contribute to the project that's the
name of the game
here in R main plus
r yeah so I mean
r yeah so I mean
it's I mean if you want to look at my
it's I mean if you want to look at my
track record of open sourcing stuff um
track record of open sourcing stuff um
so neural MMO is the thing that I've
so neural MMO is the thing that I've
worked on for the last like seven years
worked on for the last like seven years
before this uh this is the Discord this
before this uh this is the Discord this
is the repository right here literally
is the repository right here literally
all of my work from the last how however
all of my work from the last how however
many years all the way from 10 is open
many years all the way from 10 is open
source all of puffer lib so the thing
source all of puffer lib so the thing
that I'm building now full-time all of
that I'm building now full-time all of
puffer give it a star if you would is uh
puffer give it a star if you would is uh
open source from you know 01 wherever 01
open source from you know 01 wherever 01
is in here I guess O2 is the first thing
is in here I guess O2 is the first thing
um that's all open source and all the
um that's all open source and all the
dev branches even are open source uh I
dev branches even are open source uh I
generally don't have cloth Source stuff
generally don't have cloth Source stuff
there are a couple like side things I'm
there are a couple like side things I'm
working on that I don't want to just
working on that I don't want to just
announce just yet so that it'll be you
announce just yet so that it'll be you
know cooler when I finally show it off
know cooler when I finally show it off
but uh I think I'm going to be doing
but uh I think I'm going to be doing
less and less of that in the future I
less and less of that in the future I
think it's going to really just be
think it's going to really just be
everything immediately open source um
everything immediately open source um
because that's been working really well
because that's been working really well
for me so yeah we're definitely looking
for me so yeah we're definitely looking
for more people to get involved with
for more people to get involved with
this type of stuff because I can only do
this type of stuff because I can only do
so much you know I'm one guy
can only push so much
code okay so now we have the
code okay so now we have the
PID um
um which should not be negative one so
um which should not be negative one so
if
if
PID one
PID one
raise
PID
PID
um and then we're going to do
um and then we're going to do
so was it
so was it
player equals
player yeah player is going to be equal
player yeah player is going to be equal
to players
to players
PID or is it agents agents
PID or is it agents agents
PID health is going to be player
Health uh and then when we draw this
Health uh and then when we draw this
this
this
texture what we're going to do is let's
texture what we're going to do is let's
see if super Maven will do it draw a
see if super Maven will do it draw a
health bar
what the
heck oh I see what it's trying to
heck oh I see what it's trying to
do Max wait Min Health yeah it just
do Max wait Min Health yeah it just
needs to be
needs to be
three it's just health over
three it's just health over
three don't need this and then this is
three don't need this and then this is
red then this is what black
should be
green wait no wait
green wait no wait
R did this
backwards
backwards
wait wait TS Times health bar yeah this
wait wait TS Times health bar yeah this
should be
green let's see if the health bars work
green let's see if the health bars work
probably have to debug a couple things
buffer has wrong number of
buffer has wrong number of
Dimensions expected two got one
pids uh
pids uh
well yeah that would make sense this is
well yeah that would make sense this is
health. height health. width minus one
uh well this is passing the correct
uh well this is passing the correct
Dimensions now
Dimensions now
right
right
HS to
HS to
PS I not save the
file oh yeah I guess I just hadn't saved
file oh yeah I guess I just hadn't saved
the file
perfect okay so now we have an out of
perfect okay so now we have an out of
bounds
main R plus
main R plus
r uh it shouldn't be possible for there
r uh it shouldn't be possible for there
to be an out of bounds here
to be an out of bounds here
actually yeah that should not be
possible cuz this is drawing
possible cuz this is drawing
around the central agent
so in that case I'm
so in that case I'm
assuming that I'm using the wrong number
assuming that I'm using the wrong number
somewhere
somewhere
here but I don't see where that would
be R
be R
Min our Max
H do I somehow have the wrong
shape in r in
C let's see like Mayar
uh and then what's
uh and then what's
this r
uh try printing every time yeah I just
uh try printing every time yeah I just
did so it's there's some crazy value for
did so it's there's some crazy value for
uh RNC right now I'm trying to see if I
uh RNC right now I'm trying to see if I
over Road those values anywhere I don't
over Road those values anywhere I don't
see it
see it
though this is not inside of a
though this is not inside of a
loop why would R be
enumerate range R Min and R Max yeah
enumerate range R Min and R Max yeah
that doesn't make any sense to me
um I think I'm going to move this down
um I think I'm going to move this down
because this is you can't put break
because this is you can't put break
points inside of the ray draw Loop
points inside of the ray draw Loop
because
because
it's Raab does some magic under the hood
it's Raab does some magic under the hood
for that but I can put a loop here and I
for that but I can put a loop here and I
can say
height
height
what
huh oh I don't use um I'm not using R
huh oh I don't use um I'm not using R
here at all right
okay yeah I I wrote some really Jank
okay yeah I I wrote some really Jank
Loops here uh it's just supposed to
Loops here uh it's just supposed to
be yeah it's just supposed to be
be yeah it's just supposed to be
R so that's
R so that's
fine so it's just supposed to be R and
C this is what happens when you write
C this is what happens when you write
really garbage code trying to like make
really garbage code trying to like make
stuff fun live on stream
it's not going to be the normal Pace
it's not going to be the normal Pace
that I write stuff is like way slower
that I write stuff is like way slower
than this which would be less
than this which would be less
fun so I go a little faster on streamer
fun so I go a little faster on streamer
I try
I try
to okay invalid
to okay invalid
PID so now we have negative
1 which is weird because we have the
1 which is weird because we have the
grid
grid
tile saying that the uh the grid is not
tile saying that the uh the grid is not
negative
negative
one so this pit should not be negative
one so this pit should not be negative
one as far as I can
tell this is one of the very obnoxious
tell this is one of the very obnoxious
things about having like separate
things about having like separate
representations is you don't have like a
representations is you don't have like a
single known good source of
single known good source of
Truth um
okay
okay
well I guess I've got to figure that out
now
now
so you put it on the pit map here but
so you put it on the pit map here but
when you spawn these things
when you spawn these things
right did they not go on the
right did they not go on the
grid I'm not seeing them on the grid
this is very
this is very
weird speed and quality usually does
weird speed and quality usually does
help to get an MVP quicker if you build
help to get an MVP quicker if you build
publicly yeah I want this to at least be
publicly yeah I want this to at least be
something cool to look
something cool to look
at um the nice thing with snake was like
at um the nice thing with snake was like
while I was building snake I just leave
while I was building snake I just leave
an instance up of it running so like you
an instance up of it running so like you
could watch the really cool thing you
could watch the really cool thing you
know while I'm building
know while I'm building
stuff the snake project was like a
stuff the snake project was like a
really nice thing because it was just
really nice thing because it was just
that was such a small scale easy project
that was such a small scale easy project
by
by
comparison um you know it took this took
comparison um you know it took this took
a week right including like training
a week right including like training
agents and making it super fast and
agents and making it super fast and
everything and this GIF is down sampled
everything and this GIF is down sampled
it really doesn't do it
justice invalid PID
well you I did put pids on the map um
well you I did put pids on the map um
and then when I do move
to I'm always setting
to I'm always setting
PID whenever I'm setting the grid and
PID whenever I'm setting the grid and
I'm always remembering to
I'm always remembering to
oh is this
oh is this
bad into of player
doy know this is this would be different
doy know this is this would be different
so it's you're always setting the new
so it's you're always setting the new
position on the
position on the
grid to be the PID map so if there's
grid to be the PID map so if there's
something if there's an agent on the
something if there's an agent on the
grid it should have a
grid it should have a
PID uh maybe if uh if you like kill one
PID uh maybe if uh if you like kill one
of the agents it screws up or
of the agents it screws up or
something no because if you kill the
something no because if you kill the
agent it just calls
agent it just calls
respawn and when you respawn the pit it
respawn and when you respawn the pit it
moves the agent and when you move the
moves the agent and when you move the
agent it cleans up the
PID so I'm trying to see where what
PID so I'm trying to see where what
other sources of
other sources of
desync there could possibly be uh
desync there could possibly be uh
frankly probably the easiest thing to do
frankly probably the easiest thing to do
is just going to be
is just going to be
to look at these two maps
right I can like just look at the PID
right I can like just look at the PID
map and look at the
grid let's see yeah so I can do just
grid let's see yeah so I can do just
like numpy
where grid uh equal
where grid uh equal
equal I do
agent what's
agent what's
the agent one
right but what did I make the value for
right but what did I make the value for
agent one
three that's
weird feel scon makes it easy to follow
weird feel scon makes it easy to follow
to streamer even if you join Midway with
to streamer even if you join Midway with
C++ and rust and other low Lang B unless
C++ and rust and other low Lang B unless
you've been following for the bit you'd
you've been following for the bit you'd
be pretty lost yeah scon is just really
be pretty lost yeah scon is just really
nice
nice
um I the thing is I like systems and I
um I the thing is I like systems and I
like lowl code I do what I don't like is
like lowl code I do what I don't like is
I don't like the baggage that comes with
I don't like the baggage that comes with
it
it
I don't
I don't
like really shitty error messages with
like really shitty error messages with
no checking because you haven't done any
no checking because you haven't done any
like you just have no runtime checks to
like you just have no runtime checks to
make it fast I don't like the syntax
make it fast I don't like the syntax
overhead that comes with like
overhead that comes with like
nonperformance critical pieces of code
nonperformance critical pieces of code
still having to be strongly
still having to be strongly
typed um and I really don't like having
typed um and I really don't like having
to do a big chunky pbind layer cuz you
to do a big chunky pbind layer cuz you
know your R libraries are pretty much
know your R libraries are pretty much
always in Python so I don't like having
always in Python so I don't like having
to have a big chunky pbind layer in the
to have a big chunky pbind layer in the
middle so scon cuts out the pbind layer
middle so scon cuts out the pbind layer
not required whatsoever it allows you to
not required whatsoever it allows you to
Dev really fast because you can have
Dev really fast because you can have
non-performance critical things in
non-performance critical things in
Python and you can mirror the memory
Python and you can mirror the memory
back and forth and it allows you to do
back and forth and it allows you to do
Native c-speed engineering you have
Native c-speed engineering you have
access to the entire C standard library
access to the entire C standard library
and if you want at the C++ standard
and if you want at the C++ standard
Library as
Library as
well so uh and you have just cleaner tax
well so uh and you have just cleaner tax
for it there a few rough edges but it's
for it there a few rough edges but it's
a really really nice and
a really really nice and
underappreciated
underappreciated
tool definitely
that okay so this is telling me that for
that okay so this is telling me that for
some reason uh grid
some reason uh grid
is the agents aren't on the
is the agents aren't on the
grid I think we saw that at the start
grid I think we saw that at the start
though didn't we
what if I Advance One
what if I Advance One
Step oh if I Advance one step we get
Step oh if I Advance one step we get
invalid
PID 0
two maybe there's something that could
two maybe there's something that could
be other than zero or
two oh
two oh
well it could be a tower
duh Tower equals three or four then you
duh Tower equals three or four then you
do this health draw this health bar up
do this health draw this health bar up
here and then you do I think I can just
here and then you do I think I can just
unindent this
right asset
right asset
Maps Source
Maps Source
wck
yeah what I do
here oh LF
Okay cool so this now works um we just
Okay cool so this now works um we just
need to have this be an integer
need to have this be an integer
according to this
according to this
so yeah because this TS times tile uh TS
so yeah because this TS times tile uh TS
Times health bar is just going to
Times health bar is just going to
be this needs to be cast to an
be this needs to be cast to an
INT
INT
and
and
whoops well that's something we have
whoops well that's something we have
very green puffer fish
very green puffer fish
you like Green
you like Green
puffer and oh look uh so the health bar
puffer and oh look uh so the health bar
works it's just being drawn uh over the
works it's just being drawn uh over the
entire puffer fish so let's fix
that so this is X x chord is
that so this is X x chord is
fine uh this is the y coordinate which
fine uh this is the y coordinate which
is I think row going down maybe so I
is I think row going down maybe so I
times tile size minus
times tile size minus
eight eight or
eight eight or
something and then
something and then
the uh x coordinate is fine the y
the uh x coordinate is fine the y
coordinate should be like
four puffer with health
four puffer with health
bar look at the puffers with the health
bar look at the puffers with the health
bars
we've got the puffer with the health bar
we've got the puffer with the health bar
you can see if I just touch the tower
you can see if I just touch the tower
real
real
quick it'll attack
quick it'll attack
right so now we've got a little uh we've
right so now we've got a little uh we've
got our little MOA type
thing movement could feel a little bit
thing movement could feel a little bit
smoother you know we'll adjust stuff uh
smoother you know we'll adjust stuff uh
we'll adjust like speeds and stuff but
we'll adjust like speeds and stuff but
so far so good
let's see come friendship
s and uh I like to tweet something every
s and uh I like to tweet something every
couple hours while I'm live just so um
couple hours while I'm live just so um
you know it gets a little bit more
you know it gets a little bit more
engagement helps me
out see if there have been any like cool
out see if there have been any like cool
comments on stuff as
comments on stuff as
well very nice though streams work
getting pretty close to 4K
well yeah um the one thing I really like
well yeah um the one thing I really like
about this is just like I'm pretty much
about this is just like I'm pretty much
doing my normal work maybe with a couple
doing my normal work maybe with a couple
small modifications and just streaming
small modifications and just streaming
it and uh you know puffer is a new thing
it and uh you know puffer is a new thing
uh My Hope longer term is that companies
uh My Hope longer term is that companies
will start using it and that they'll
will start using it and that they'll
want support contracts or extras or
want support contracts or extras or
stuff like that things that will allow
stuff like that things that will allow
me to grow grow puffer even though
me to grow grow puffer even though
everything's free and open source um and
everything's free and open source um and
if I just keep streaming stuff like this
if I just keep streaming stuff like this
and uh people watch it and you know
and uh people watch it and you know
different people see and start using
different people see and start using
puffer I get to spend my time on dev
puffer I get to spend my time on dev
instead of on dumb business stuff uh and
instead of on dumb business stuff uh and
that's way more fun and that's way more
that's way more fun and that's way more
productive so that's the way I look at
productive so that's the way I look at
all this stuff and I have a lot of fun
all this stuff and I have a lot of fun
doing it so it's all good
maybe we should make this
um maybe we should start to make this
um maybe we should start to make this
feel smoother to
play I mean there are a lot of ways we
play I mean there are a lot of ways we
could make this potentially way smoother
could make this potentially way smoother
to play
that's going to require animation
that's going to require animation
smoothing though
smoothing though
um so I think we'll we'll wait a little
um so I think we'll we'll wait a little
bit longer on animation smoothing let's
bit longer on animation smoothing let's
add a couple more things first so these
add a couple more things first so these
things have health now um it would be
things have health now um it would be
nice if we could get them
nice if we could get them
to like click on stuff to attack it
to like click on stuff to attack it
maybe that would be cool
I think that's going to be
needed let me think how hard that would
be not that hard
right well I don't even know if the
right well I don't even know if the
players are attacking each other right
players are attacking each other right
now it doesn't look like they are
now it doesn't look like they are
attacking each other so maybe I should
attacking each other so maybe I should
fix that first and then I'll make sure
fix that first and then I'll make sure
that the uh we can click on the agents
that the uh we can click on the agents
to attack so you'll have like the MOBA
to attack so you'll have like the MOBA
style control and uh for humans we'll
style control and uh for humans we'll
give you the mouse control and then
give you the mouse control and then
obviously the RL agents aren't using a
obviously the RL agents aren't using a
mouse but it'll be very
mouse but it'll be very
similar even though I don't understand
similar even though I don't understand
most of it is pretty CH Vibes in here I
most of it is pretty CH Vibes in here I
got my own project that I'm working on
got my own project that I'm working on
as a watch yeah that's the idea I mean
as a watch yeah that's the idea I mean
this is just like chill
this is just like chill
Dev are you going to tackle creep
Dev are you going to tackle creep
mechanics today oh yeah I don't know
mechanics today oh yeah I don't know
about that the creep mechanics are going
about that the creep mechanics are going
to be the really hard thing I want to
to be the really hard thing I want to
get the um I want to get a lot of the
get the um I want to get a lot of the
core stuff down first right like I want
core stuff down first right like I want
to have a decent feeling character
to have a decent feeling character
controller you know so that they can go
controller you know so that they can go
around they can fight each other they
around they can fight each other they
can fight Towers uh stuff like that and
can fight Towers uh stuff like that and
then from there then we'll look at like
then from there then we'll look at like
creep mechanics and stuff but I want to
creep mechanics and stuff but I want to
get the base of it first um because the
get the base of it first um because the
creep mechanics are going to add like
creep mechanics are going to add like
400 lines of stuff I think to the code
400 lines of stuff I think to the code
base uh I think
base uh I think
probably probably the AI for the creeps
probably probably the AI for the creeps
is going to be like 400
is going to be like 400
um that's going to take a little bit of
um that's going to take a little bit of
thinking so I want to like get
thinking so I want to like get
everything good and clean it up and then
everything good and clean it up and then
add the Creeps in as the next the next
add the Creeps in as the next the next
thing uh all the stuff I'm doing now is
thing uh all the stuff I'm doing now is
going to help with that though because
going to help with that though because
we're getting the data structures into a
we're getting the data structures into a
better place that'll make that easier so
okay so the next thing that we want to
okay so the next thing that we want to
do
do
is write the attacks let's fix up the
is write the attacks let's fix up the
attacks with the new attack system
so Tower attacks
work so the target pit is
work so the target pit is
always it's always negative one
always it's always negative one
right let's comment these just to make
right let's comment these just to make
sure that we're not getting any
attacks and we'll uncommit the attacks
attacks and we'll uncommit the attacks
the Hits and The Kills
computed observation we need to get rid
computed observation we need to get rid
of all the other garbage prints as
well like these were just test
well like these were just test
prints see which of these do we actually
prints see which of these do we actually
need
Tower
Tower
attack need this one
okay so we
have I thought I saw killed in here
have I thought I saw killed in here
somewhere didn't
somewhere didn't
I
attacking I see this attacking team
at okay but is this
at okay but is this
the no attacking should
be this is where the attack print
is huh we have all these attacks and no
is huh we have all these attacks and no
hits that's weird
right let's mute the tower Prince as
right let's mute the tower Prince as
well
well
because there's too much
spam okay so we have
yeah so it's it's always just
yeah so it's it's always just
attacking
attacking
um so it's getting a Target pit it's
um so it's getting a Target pit it's
probably getting
probably getting
itself is what I'd imagine it's probably
itself is what I'd imagine it's probably
like zero is probably itself and it's
like zero is probably itself and it's
not seeing the other agents around it
not seeing the other agents around it
would be my
would be my
guess let me see if that makes
guess let me see if that makes
sense Target
pit1 so it's getting a valid Target pit
getting a Target but the team is the
getting a Target but the team is the
same as the own team so yeah I'd imagine
same as the own team so yeah I'd imagine
that this is probably something in
that this is probably something in
compute
observations let's
observations let's
see
see
so set idx to zero we Loop over this
so set idx to zero we Loop over this
range
uh right here this PID
is oh wait this pit is this pit should
is oh wait this pit is this pit should
be
fine get player PID and
fine get player PID and
idx Target ob. PID is equal to
idx Target ob. PID is equal to
PID I do set the team
H I am still suspicious though of
H I am still suspicious though of
this this
buffer it makes sense to be suspicious
buffer it makes sense to be suspicious
of this
buffer is it possible
that I am just not
that I am just not
passing reasonable actions in
let's see where do I get
attack actions discreete agent idx 2
attack actions discreete agent idx 2
this should be correct this is where I
this should be correct this is where I
would expect the attack to
be I can
be I can
print let's do
um let's do what like attack
see if it's giving me a correct random
data okay so this is giving me what I
data okay so this is giving me what I
would consider reasonable data right
would consider reasonable data right
it's saying
it's saying
that you're getting all sorts of
that you're getting all sorts of
different indices that are
different indices that are
attacking and it's
attacking various different
attacking various different
teams and various different
teams and various different
pids that are not the same as its own
pids that are not the same as its own
PID which is
good uh at 00 though is
weird
weird
dis oh well this is not
dis oh well this is not
assigned so that's just garbage data
assigned so that's just garbage data
that's
fine let's just get a reasonable uh a
fine let's just get a reasonable uh a
reasonable print on like the team so f
agent agent
agent agent
idx
idx
attacking Target
PID that's kind of all I need
right and we'll see if the teams look
right and we'll see if the teams look
reasonable
okay so we have lots of
okay so we have lots of
different uh so this is exactly what I
different uh so this is exactly what I
was expecting here
was expecting here
right it's always attacking itself
which
which
is quite
is quite
odd let's see um Target
odd let's see um Target
PID we've got player is get player of
PID we've got player is get player of
agent
agent
idx and the
idx and the
target to Target
target to Target
PID
PID
wait get player
wait get player
OB agent idx comma
OB agent idx comma
attack is the target
attack is the target
agent idx comma Tech
agent idx comma Tech
so
so
get get player
OB self. player OB of
OB self. player OB of
PID and index which is what we
PID and index which is what we
want so why is this always the same as
want so why is this always the same as
the
the
agent that we are currently getting
did I accidentally update player
somewhere no I don't reassign player
somewhere no I don't reassign player
accidentally anywhere in
accidentally anywhere in
here player is going to be get agent idx
here player is going to be get agent idx
and then I get
and then I get
the the
target wait this is compute
target wait this is compute
observation and we get the player
observation and we get the player
index set all the pids to negative 1
and pit is equal
and pit is equal
to hi map at row and
column get the
column get the
player we assign the target observation
player we assign the target observation
to get this player
to get this player
wa get
wa get
player
OB
OB
yes and then we assign the
PID
H quite odd
Target pit
is not equal to negative 1 it's always
is not equal to negative 1 it's always
the same as my own
pit I don't know
pit I don't know
this is why this like indirect pit
this is why this like indirect pit
manipulation stuff is so
annoying um I guess I should just start
annoying um I guess I should just start
putting some prints in computer
putting some prints in computer
observations um let's do
like if
PID let's see if we can see agent C's
PID let's see if we can see agent C's
PID like this
PID like this
let's see if that code ever
triggers you should definitely be able
triggers you should definitely be able
to see each
other okay they they all see each other
other okay they they all see each other
right this is not the issue
this is going to return you a player
this is going to return you a player
Star right it didn't mess up
somehow because this should still be a
reference yeah and this is valid because
reference yeah and this is valid because
I'm setting all of these
I should just be able to print like uh
I should just be able to print like uh
self.
self.
get uh. health maybe let's just make
get uh. health maybe let's just make
sure it's updating
correctly yeah so it is actually
correctly yeah so it is actually
correctly
updating it looks to me like
updating it looks to me like
this compute observation should be
this compute observation should be
fine uh get player
fine uh get player
OB oh
OB oh
wait this is
wait this is
it this is wrong right
it this is wrong right
here
here
it's agent idx
you want to get the observation of the
you want to get the observation of the
current
player it's the observation by the
player it's the observation by the
current player of the target that's
current player of the target that's
why let's see if this fixes it
perfect now they're attacking each other
perfect now they're attacking each other
you can
see very
see very
nice well I didn't show it on the screen
nice well I didn't show it on the screen
I'll show that in a second let me just
I'll show that in a second let me just
get rid of these prints and I'll show it
see now they're
see now they're
fighting and whenever they come into
fighting and whenever they come into
view of each other they can choose to
view of each other they can choose to
they can essentially choose to click on
they can essentially choose to click on
each other whenever they're in view of
each other whenever they're in view of
each
each
other and this is the puffer that I'm
other and this is the puffer that I'm
controlling right so I can move this
controlling right so I can move this
puffer around the map this is my tower
puffer around the map this is my tower
so it's fine I if I move to the enemy
so it's fine I if I move to the enemy
Tower not so
Tower not so
fine puffer MOBA
very nice um now what we can do is we
very nice um now what we can do is we
can make it so that I can click I guess
can make it so that I can click I guess
I can click on individual agents um one
I can click on individual agents um one
shouldn't be too
hard so we have the mouse position code
hard so we have the mouse position code
here
here
and uh I want to get mouse click
and uh I want to get mouse click
position
right Mouse
click you call this am MOA and yet you
click you call this am MOA and yet you
haven't been verbally assaulted yet
haven't been verbally assaulted yet
huh ever played
huh ever played
RuneScape the league and DOTA
RuneScape the league and DOTA
communities are the friendliest people
communities are the friendliest people
you'll ever meet after
that I come from
that I come from
MMOs what's the big hey I'm trying to
MMOs what's the big hey I'm trying to
follow along here and there what has
follow along here and there what has
been the biggest limiting variable in
been the biggest limiting variable in
your work hold on one second I dropped a
your work hold on one second I dropped a
chocolate
chip that's not
chip that's not
good that's it okay what's been the
good that's it okay what's been the
biggest limiting variable in your work
biggest limiting variable in your work
finacing academic papers dead inside
finacing academic papers dead inside
projects data
animations will POA be the answer to all
animations will POA be the answer to all
your prayers for
your prayers for
RL so I mean there have been several
um I'd say that there's a huge amount of
um I'd say that there's a huge amount of
friction between what the accademic Comm
friction between what the accademic Comm
Community considers to be like good
Community considers to be like good
publishable
publishable
work and what is actually important for
work and what is actually important for
RL to make
RL to make
progress there's just a lot of
progress there's just a lot of
pedantic
pedantic
gatekeeping and it really made it very
gatekeeping and it really made it very
hard during my PhD to do the type of
hard during my PhD to do the type of
work that I wanted and to publish the
work that I wanted and to publish the
type of work that I wanted I mean I got
type of work that I wanted I mean I got
to the point where basically I could
to the point where basically I could
consistently get papers published if I
consistently get papers published if I
wrote what I considered to be a bad
wrote what I considered to be a bad
paper emphasizing all the points that I
paper emphasizing all the points that I
didn't think were important um and if I
didn't think were important um and if I
wrote like the good paper I wanted to
wrote like the good paper I wanted to
write it wouldn't get
write it wouldn't get
accepted
accepted
so being out of Academia now I'm no
so being out of Academia now I'm no
longer in Academia right that's no
longer in Academia right that's no
longer an obstacle it's an obstacle to
longer an obstacle it's an obstacle to
promoting my work because it means it's
promoting my work because it means it's
harder to promote it to that community
harder to promote it to that community
but um the dev speed has just gone up so
but um the dev speed has just gone up so
fast like what puffer lib has done in
fast like what puffer lib has done in
the last two months I would have not
the last two months I would have not
expected to be remotely possible just
expected to be remotely possible just
like a year ago and we are rapidly
like a year ago and we are rapidly
getting to the point where RL is going
getting to the point where RL is going
to be a different field in a few months
to be a different field in a few months
actually if you look at what puffer lib
actually if you look at what puffer lib
is is now if you're actually using
is is now if you're actually using
puffer lib for Stuff RL is a different
puffer lib for Stuff RL is a different
game than it was two months ago
game than it was two months ago
completely different game um and it's
completely different game um and it's
just going to keep ramping up from here
just going to keep ramping up from here
because this is what now what I'm doing
because this is what now what I'm doing
full-time and I have I basically have no
full-time and I have I basically have no
other objectives that are impeding me
other objectives that are impeding me
from just making RL work that's just
from just making RL work that's just
what I'm doing is making RL
work let me show you the um the puffer
work let me show you the um the puffer
result from
result from
today this
today this
morning I posted this on Twitter so this
morning I posted this on Twitter so this
is is one of the environments I wrote it
is is one of the environments I wrote it
transs at a million steps per second I
transs at a million steps per second I
ran overnight over 100 experiments on it
ran overnight over 100 experiments on it
uh with carbs hyper pram sweep all
uh with carbs hyper pram sweep all
automated and it's just like decimated
automated and it's just like decimated
all of the best things that I could come
all of the best things that I could come
up with overnight completely
up with overnight completely
automatically this is the type of thing
automatically this is the type of thing
that happens when you combine good
that happens when you combine good
infrastructure with ultra high
infrastructure with ultra high
performance
performance
engineering um and it's just going to be
engineering um and it's just going to be
more and more of this you know right now
more and more of this you know right now
it's a million steps per second for this
it's a million steps per second for this
environment soon it'll be a million
environment soon it'll be a million
steps per second on like a full mobile
steps per second on like a full mobile
and on other environments I'm
and on other environments I'm
developing how to reform the academic
developing how to reform the academic
Community you can't I tried for years
Community you can't I tried for years
you can't
you can't
um it doesn't work you just you have to
um it doesn't work you just you have to
build the tools outside of Academia and
build the tools outside of Academia and
they'll gladly use all your tools you
they'll gladly use all your tools you
know they'll gladly use all your stuff
know they'll gladly use all your stuff
um but you really just have to wait for
um but you really just have to wait for
like the new generation of PhD students
like the new generation of PhD students
who use your stuff for years um to like
who use your stuff for years um to like
move into the positions you know move
move into the positions you know move
into those professorship and Industry
into those professorship and Industry
positions because at the moment it's
positions because at the moment it's
it's actually impossible to get stuff
it's actually impossible to get stuff
done
done
um I uh I'm not going at least at the
um I uh I'm not going at least at the
moment I have no plans to go to RL comp
moment I have no plans to go to RL comp
this year because my puffer paper which
this year because my puffer paper which
you know that's the result of well over
you know that's the result of well over
a thousand hours of work and I think my
a thousand hours of work and I think my
best work uh got rejected with one
best work uh got rejected with one
review by a language model review was
review by a language model review was
written by a language model that made
written by a language model that made
some stuff about my paper and then one
some stuff about my paper and then one
like kind of rambly senior review that
like kind of rambly senior review that
didn't really make any sense and uh you
didn't really make any sense and uh you
know no appeal no nothing it's insane
know no appeal no nothing it's insane
like the state of Academia is just
like the state of Academia is just
pathetic and you know there's no point
pathetic and you know there's no point
in me trying to reform it I'm just like
in me trying to reform it I'm just like
I've tried very hard I've already spent
I've tried very hard I've already spent
during my PhD I spent several hundred
during my PhD I spent several hundred
hours maybe thousand hours you know
hours maybe thousand hours you know
fighting this trying to do it trying
fighting this trying to do it trying
everything I could possibly think of I
everything I could possibly think of I
Ran competitions I ran like three
Ran competitions I ran like three
different competitions they took me
different competitions they took me
thousands of hours to run there was
thousands of hours to run there was
great personal expense involved in that
great personal expense involved in that
there was great financial expense um you
there was great financial expense um you
know there was a lot of coordination
know there was a lot of coordination
that was needed it took like open source
that was needed it took like open source
people I tried doing that I tried
people I tried doing that I tried
organizing a workshop that that didn't
organizing a workshop that that didn't
go through because you know freaking
go through because you know freaking
academic Community I tried uh you know
academic Community I tried uh you know
I've tried like organizing local stuff
I've tried like organizing local stuff
um I've talked to like many people at
um I've talked to like many people at
these places um I've like I put together
these places um I've like I put together
an open letter that kind of went through
an open letter that kind of went through
as well
as well
um and like I got I got one result I
um and like I got I got one result I
guess out of this but it's just so hard
guess out of this but it's just so hard
and so much time to do this I'll show
and so much time to do this I'll show
you one thing I'm really proud of that I
you one thing I'm really proud of that I
that I did get to happen so I I put this
that I did get to happen so I I put this
open to letter letter together
NPS I it really just pisses me off even
NPS I it really just pisses me off even
talking about it it's just like it's so
talking about it it's just like it's so
sad like I wrote this like super rambly
sad like I wrote this like super rambly
post like hey RL infrastructure sucks
post like hey RL infrastructure sucks
and it's our fault or something like
and it's our fault or something like
that and it really is like this is just
that and it really is like this is just
self it's this is own goal this whole
self it's this is own goal this whole
thing is just own
thing is just own
goal um okay so right here we have uh
goal um okay so right here we have uh
this track this is the nurs data sets
this track this is the nurs data sets
and benchmarks track so full paper track
and benchmarks track so full paper track
uh welcomes all work on Yad yada and
uh welcomes all work on Yad yada and
open source libraries and tools that
open source libraries and tools that
enable or accelerate RL uh ml research
enable or accelerate RL uh ml research
and then it's actually it's stated twice
and then it's actually it's stated twice
um it's it's also up here in the
um it's it's also up here in the
Preamble so uh this was the result of my
Preamble so uh this was the result of my
my open letters they directly added this
my open letters they directly added this
language into the call so hopefully it's
language into the call so hopefully it's
slightly easier to get these types of
slightly easier to get these types of
papers accepted under this um I mean but
papers accepted under this um I mean but
this is really just like it's still so
this is really just like it's still so
easy for entrenched reviewers to just
easy for entrenched reviewers to just
blatantly ignore the instructions so
blatantly ignore the instructions so
really you can't do anything uh
unfortunately and yeah literally
unfortunately and yeah literally
reviewer number two is now a language
reviewer number two is now a language
model my most recent one it like the
model my most recent one it like the
review was it made up four different
review was it made up four different
typos that were not in my paper and then
typos that were not in my paper and then
biased the rest of the review process
biased the rest of the review process
and there's still no appeal for
and there's still no appeal for
that it's just
pathetic complete own goal as well like
pathetic complete own goal as well like
this is our fault
um but I'm out of it now I'm no longer
um but I'm out of it now I'm no longer
trying to change Academia from Academia
trying to change Academia from Academia
I'm just going to build good tools
I'll write some blog posts and stuff not
I'll write some blog posts and stuff not
doing the paper game
anymore Mouse X Mouse y I have to
anymore Mouse X Mouse y I have to
convert this to a tile position I
convert this to a tile position I
believe so this is just going to be
this is R Min plus no yeah rmen and then
this is R Min plus no yeah rmen and then
this is no this is C this is
rmen okay now we have Mouse and mouse
y so now we can do
y so now we can do
Target PID is going to be pids of mouse
Target PID is going to be pids of mouse
Y and mouse
Y and mouse
X
um we can do if the target pit is equal
um we can do if the target pit is equal
to is not negative 1 then Target is
to is not negative 1 then Target is
going to be agents of Target
going to be agents of Target
pit
pit
and uh now we have to find it in our
and uh now we have to find it in our
observations
maybe
right index of or
something we'll do like attack equals
zero
zero
range and
range and
OBS
OBS
players zero I is equal to Target pit
players zero I is equal to Target pit
attch equals I break yeah this is just
attch equals I break yeah this is just
some garbage code to try to Target stuff
some garbage code to try to Target stuff
with the
with the
attacks we'll see if this
attacks we'll see if this
works and oh yeah we have to return the
works and oh yeah we have to return the
attack don't
attack don't
we uh where's
action actually equals
none I do like right here
right see if this works
only
only
integers okay I have to make this in one
integers okay I have to make this in one
second let me just turn the AC
down PE amazing work regardless the old
down PE amazing work regardless the old
gen will be forced to adapt and adopt
gen will be forced to adapt and adopt
the change or be repl yeah I mean that's
the change or be repl yeah I mean that's
kind of just the idea is just like stop
kind of just the idea is just like stop
trying to play a weird status game with
trying to play a weird status game with
like an entrenched Community start
like an entrenched Community start
building good stuff that people want to
building good stuff that people want to
use and you
use and you
know if people want to keep training
know if people want to keep training
Atari and like with increasingly fancy
Atari and like with increasingly fancy
math at 500 steps per second that's on
math at 500 steps per second that's on
them um we'll just be over here with a
them um we'll just be over here with a
really simple code training at like a
really simple code training at like a
100 times their speed very soon and you
100 times their speed very soon and you
know it's not going to matter
right these Sims are going to be a big
right these Sims are going to be a big
part of it as well because like you need
part of it as well because like you need
complex tasks that run fast right you
complex tasks that run fast right you
just really need complex tasks that run
just really need complex tasks that run
fast we can't be doing research on like
fast we can't be doing research on like
slow simple problems
okay so that emulation dopy looks simple
okay so that emulation dopy looks simple
you can go look at the revision history
you can go look at the revision history
of that file over the last like you know
of that file over the last like you know
all the different versions of perer that
all the different versions of perer that
concept and that implementation alone
concept and that implementation alone
was like hundreds of hours of work um
was like hundreds of hours of work um
because it didn't always use numpy
because it didn't always use numpy
structure data types it had like really
structure data types it had like really
customized scon stuff to do the same
customized scon stuff to do the same
thing and like it that went through
thing and like it that went through
several different iterations
several different iterations
um so yeah it's really simple now but
um so yeah it's really simple now but
and this is kind of what I pride myself
and this is kind of what I pride myself
on right like I work really hard to make
on right like I work really hard to make
stuff that simple now the problem is
stuff that simple now the problem is
when you submit stuff like that to
when you submit stuff like that to
Academia they go well that's so simple
Academia they go well that's so simple
it doesn't need to be published right
it doesn't need to be published right
it's like almost if you made it worse if
it's like almost if you made it worse if
you made it more complicated that's
better that one emulation file right
better that one emulation file right
there that one little uh that one little
there that one little uh that one little
feature Cuts Like thousands to tens of
feature Cuts Like thousands to tens of
thousands of lines of code out of every
thousands of lines of code out of every
reinforcement learning library in
reinforcement learning library in
existence like you can just delete all
existence like you can just delete all
of your code that is associated with
of your code that is associated with
structure data processing you don't need
structure data processing you don't need
it anymore emulation that emulation file
it anymore emulation that emulation file
does it and it does it faster and
better so it's pretty nice I'm pretty
better so it's pretty nice I'm pretty
happy with that
uh okay we got Target
PID right I just had to I just forgot a
PID right I just had to I just forgot a
cast that's
cast that's
all uh
all uh
cmen was
cmen was
this in something like
this in something like
this
yeah okay
yeah okay
so here's the puffer
MMO can I click the puffers oh wait you
MMO can I click the puffers oh wait you
have to be able to click the puffers to
have to be able to click the puffers to
to hit the
puffers
puffers
ah oh wait I did click the I clicked it
ah oh wait I did click the I clicked it
that's why it crashed okay so you need
that's why it crashed okay so you need
to
to
do okay you have to pass it OBS players
do okay you have to pass it OBS players
cool
oops it's hard to click stuff now cuz
oops it's hard to click stuff now cuz
everything's moving super fast right but
everything's moving super fast right but
like I just want to see if it
works okay
works okay
whoops
puffer cannot
puffer cannot
compare structured or void to non-void
compare structured or void to non-void
arrays
we're just going to put a break point in
here oh okay you literally just have to
here oh okay you literally just have to
hover their Mouse over them uh
PID okay so you just have to hover the
PID okay so you just have to hover the
mouse over them right now you don't
mouse over them right now you don't
actually have to click them that should
actually have to click them that should
make it
easier can we
easier can we
delete oh
we're hitting it aren't we yeah we're
we're hitting it aren't we yeah we're
hitting it right are we hitting it yeah
hitting it right are we hitting it yeah
we're we're totally hitting
we're we're totally hitting
it it's really hard to track it it's
it it's really hard to track it it's
really hard to track it I'm really bad
really hard to track it I'm really bad
at
at
tracking yeah yeah we got him okay so I
tracking yeah yeah we got him okay so I
think this works I think you actually
think this works I think you actually
can hit stuff obviously the UI like the
can hit stuff obviously the UI like the
ux is really Jank yeah that's totally us
ux is really Jank yeah that's totally us
hitting it uh the ux is really Jank
hitting it uh the ux is really Jank
but I think we have it um
but I think we have it um
cool
so that is the basic attack structure of
so that is the basic attack structure of
uh the basic basic basic element the
uh the basic basic basic element the
attack structure of am MOA
attack structure of am MOA
um got a lot more to do from here
um got a lot more to do from here
there's like the towers the towers need
there's like the towers the towers need
to be attackable um the movement needs
to be attackable um the movement needs
to make actual sense the render needs to
to make actual sense the render needs to
make actual sense so so much to do uh
make actual sense so so much to do uh
let's think what I want to do next I
let's think what I want to do next I
think I want to commit all this first of
all cmoa X
all cmoa X
mooba
mooba
and is this
and is this
it buffer
it buffer
chars and we going to add this test and
chars and we going to add this test and
the C test just so I have them
I'm refresh the experiment as well here
I'm refresh the experiment as well here
to see if it's done anything while I've
to see if it's done anything while I've
been
been
waiting so it goes from 112 experiments
waiting so it goes from 112 experiments
up to 131 experiments and we've got a
up to 131 experiments and we've got a
couple of them that are like
couple of them that are like
close
close
here uh I'd like to see it run longer
here uh I'd like to see it run longer
experiments but it just hasn't found a
experiments but it just hasn't found a
reason to yet these very cool
though
though
cool
um I'm going to use the restroom real
um I'm going to use the restroom real
quick and when I come back I'm going to
quick and when I come back I'm going to
think about what we're going to add next
think about what we're going to add next
to the uh the Moa I think I think it's
to the uh the Moa I think I think it's
probably going to
probably going to
be the ability to attack and Destroy
be the ability to attack and Destroy
Towers something like that now there's a
Towers something like that now there's a
lot of code cleanup that has to be done
lot of code cleanup that has to be done
but let's try to get like some of the
but let's try to get like some of the
basics with the tower Tower system done
basics with the tower Tower system done
first I think we'll add like health bars
first I think we'll add like health bars
to towers and uh we'll make them
to towers and uh we'll make them
attackable and stuff like that so I'll
attackable and stuff like that so I'll
be right
back
e
e
e
e for
Okay
Okay
so we've got some fun stuff to do
here let's add some health bars to the
here let's add some health bars to the
uh the
uh the
towers
and go from there
probably need to draw a health bar
probably need to draw a health bar
function right
yeah yeah
okay we do health over Max
okay we do health over Max
Health
uh size
uh size
whatever and then we will do
whatever and then we will do
draw a health
draw a health
bar something like this
bar something like this
maybe make sure I didn't break anything
maybe make sure I didn't break anything
and we'll add the health bar for Towers
and we'll add the health bar for Towers
oh obviously I did break something I
oh obviously I did break something I
need to add Max
Health C MOA X
the towers don't have pits though do
they that's very
they that's very
obnoxious I think we're going to have to
obnoxious I think we're going to have to
change either we're going to have to
change either we're going to have to
change the pit system to be
change the pit system to be
pointers or we're going to have to do
pointers or we're going to have to do
something with
something with
it we'll figure that out
PID map
players yeah let's let's add um pids for
players yeah let's let's add um pids for
the
the
towers that'll be a good
idea and then let's add the max health
idea and then let's add the max health
and stuff we're going to do
and stuff we're going to do
Max
Max
Health
Health
oops what the heck is
happening
happening
yeah Max
health and where do I said
health and where do I said
Health
Health
XL who has good RL cont content that you
XL who has good RL cont content that you
learned the most from on
learned the most from on
YouTube
YouTube
um I don't think I did my RL from
um I don't think I did my RL from
YouTube
YouTube
frankly
frankly
um because the thing is I when I started
um because the thing is I when I started
reinforcement learning it was like 2018
reinforcement learning it was like 2018
there really wasn't much out there um
there really wasn't much out there um
Kathy has a couple old blog posts that
Kathy has a couple old blog posts that
are nice if you're looking to learn
are nice if you're looking to learn
stuff I would recommend carpath has some
stuff I would recommend carpath has some
really old blog posts Costa has some
really old blog posts Costa has some
really really good blog posts um and
really really good blog posts um and
then there's like the old spinning up
then there's like the old spinning up
stuff from open AI it's kind of dated
stuff from open AI it's kind of dated
and it has more math than you need but
and it has more math than you need but
really it's just like um you know do the
really it's just like um you know do the
little tiny bit of math to understand
little tiny bit of math to understand
the basics of the algorithms and then
the basics of the algorithms and then
grab clean RL and start hacking on stuff
grab clean RL and start hacking on stuff
um clean RL or puffer lib has like a
um clean RL or puffer lib has like a
souped up version of clean RL as well
souped up version of clean RL as well
though maybe base cleaner all will be
though maybe base cleaner all will be
simpler just for very very simple
simpler just for very very simple
starting stuff um yeah I didn't like
starting stuff um yeah I didn't like
there's not a ton of stuff on YouTube
there's not a ton of stuff on YouTube
for like educational RL stuff that I
for like educational RL stuff that I
think is is super
amazing yeah Fair though
technically my stuff isn't intended to
technically my stuff isn't intended to
be educational it just happens to be
be educational it just happens to be
educational because of the way I build
educational because of the way I build
stuff and because I like answer
stuff and because I like answer
questions um this is really more of like
questions um this is really more of like
watch Cutting Edge RL progress happen
watch Cutting Edge RL progress happen
live um because that's what this is uh
live um because that's what this is uh
the types of Sims I'm building here have
the types of Sims I'm building here have
never been built before at least not
never been built before at least not
been built and made widely available um
been built and made widely available um
they've never been built in this way a
they've never been built in this way a
way this simple the infrastructure in
way this simple the infrastructure in
puffer lib has never been built before
puffer lib has never been built before
so like this is all basically new
so like this is all basically new
territory for RL and the field is very
territory for RL and the field is very
rapidly changing in a matter of months
rapidly changing in a matter of months
so that's kind of the idea behind
so that's kind of the idea behind
this plus it's fun it's fun to stream
this plus it's fun it's fun to stream
this
stuff a lot of the math in RL is like
stuff a lot of the math in RL is like
super overhyped it's not that hard um
like for instance did you know that the
like for instance did you know that the
main algorithm po it has this really
main algorithm po it has this really
fancy loss function but for like the
fancy loss function but for like the
most common use case all the terms
most common use case all the terms
cancel out and it it like reduces to
cancel out and it it like reduces to
something way
something way
simpler stuff like that
hard code some
hard code some
Towers it's not even a telescoping
Towers it's not even a telescoping
series it's way simpler than that it's
series it's way simpler than that it's
literally like Po the point of PO is
literally like Po the point of PO is
that like you can train using stale data
that like you can train using stale data
old data and it not blow up the learning
old data and it not blow up the learning
process but the thing is if your
process but the thing is if your
simulator is fast there's no need to
simulator is fast there's no need to
train with stale data you always have
train with stale data you always have
fresh data right so like half of the
fresh data right so like half of the
point of Po just goes out the window and
point of Po just goes out the window and
it's just called pop because like Po is
it's just called pop because like Po is
the algorithm that has the specific
the algorithm that has the specific
boltons like bolted on stuff that people
boltons like bolted on stuff that people
generally use like the main thing that
generally use like the main thing that
PO does is not even super critical um
PO does is not even super critical um
yeah it's pretty funny
wait is there a blog post for something
wait is there a blog post for something
what you're referencing with
what you're referencing with
po um it's something that I noticed a
po um it's something that I noticed a
long time ago and of course Costa has a
long time ago and of course Costa has a
paper on it because you know Costa does
paper on it because you know Costa does
Costa is awesome
Costa is awesome
um so like Costa po
um so like Costa po
special okay this is the awesome blog
special okay this is the awesome blog
post uh on PO itself and then I there's
post uh on PO itself and then I there's
some archive paper on it but
like like
like like
really the concept is very simple so
really the concept is very simple so
there's this I think I can even just
there's this I think I can even just
prove it in the math right here so not
prove it in the math right here so not
this not this is see
this
clipped where is this stupid thing
okay so I guess this is technically it
okay so I guess this is technically it
there's this KL term here between the
there's this KL term here between the
old weights this is Pi Pi Theta old this
old weights this is Pi Pi Theta old this
just says this is a Divergent so how
just says this is a Divergent so how
different is the old policy from the new
different is the old policy from the new
policy right
policy right
and yeah this is like a version of it so
and yeah this is like a version of it so
this is the KL so you have uh policy old
this is the KL so you have uh policy old
uh a policy and policy old so the old
uh a policy and policy old so the old
weights uh on the bottom and the new
weights uh on the bottom and the new
weights on the top but the thing is the
weights on the top but the thing is the
first time you take a step so the first
first time you take a step so the first
step that you take with
step that you take with
po po uh this the network hasn't been
po po uh this the network hasn't been
updated yet so the policy is the old
updated yet so the policy is the old
policy so this term is just
policy so this term is just
one um so this whole thing just cancels
one um so this whole thing just cancels
out uh and then this KL term cancels out
out uh and then this KL term cancels out
as well because the Divergence between
as well because the Divergence between
something in the exact same thing is
something in the exact same thing is
there there's no Divergence there um so
there there's no Divergence there um so
like this whole thing just cancels out
like this whole thing just cancels out
if you're essentially just taking one
if you're essentially just taking one
step per batch of fresh data that you
step per batch of fresh data that you
get now in practice sometimes you need
get now in practice sometimes you need
mini batches and there are like other
mini batches and there are like other
things that can happen but in principle
things that can happen but in principle
like this doesn't really do anything if
like this doesn't really do anything if
you have fresh data
constantly that's enough math for today
constantly that's enough math for today
my head hurts math is hard
math
bad since I see a couple new folks in
bad since I see a couple new folks in
here um if you haven't started puffer
here um if you haven't started puffer
lib the repository please go ahead and
lib the repository please go ahead and
do that it uh it helps me out a lot so
do that it uh it helps me out a lot so
I'll open source Dev puffer lib
I'll open source Dev puffer lib
repository right
repository right
here including the project I'm working
here including the project I'm working
now on now it's all open source in
there so I have to add Target pids
really obnoxious how this works I can do
really obnoxious how this works I can do
um I
um I
get
get
DF Tower get Tower
DF Tower get Tower
Min self.
agents think like this
losing a little bit of steam
here think I just have to add the towers
here think I just have to add the towers
to the pit map right
if I do yeah so let's just do like so I
if I do yeah so let's just do like so I
add to the Tower and then I do self. PID
add to the Tower and then I do self. PID
map tower. y Tower dox not equal to
map tower. y Tower dox not equal to
negative 1 it's equal to I plus s.
negative 1 it's equal to I plus s.
AG right
okay so the towers
okay so the towers
attack players and then the agents can
attack this is awkward because this is
attack this is awkward because this is
typed
kind of want like a union type thing
here let's do Tower
here let's do Tower
star no actually we already have a tower
star no actually we already have a tower
we can just reuse
it all right
so if we have less than numb agents then
so if we have less than numb agents then
we just use
we just use
this
this
else Tower is going to be get
Tower so we're attacking a tower say if
Tower so we're attacking a tower say if
tower. team is not equal to the player.
tower. team is not equal to the player.
team then we
team then we
do tower. Health minus equal 1
do tower. Health minus equal 1
and if it's less than
zero self.
zero self.
Grid it's going to be empty map is
Grid it's going to be empty map is
negative
negative
one I don't know maybe something like
one I don't know maybe something like
this will do it
we are not going to be able to see the
we are not going to be able to see the
health bars yet so let's let's fix that
health bars yet so let's let's fix that
let's add some health bars to these
let's add some health bars to these
towers
right
power need the tower struck as well now
power need the tower struck as well now
I'm just blowing up I mean we're going
I'm just blowing up I mean we're going
to have to do a big refactor at some
to have to do a big refactor at some
point because of this code is a mess
Towers right right here
right right after agents
right right after agents
So Soft do
Towers so and we do
Towers so and we do
towers and we
towers and we
do draw a health
do draw a health
bar I think
let's see how that
does index 20 is out of
bounds because I did the indexing
wrong uh numb agents is
wrong uh numb agents is
not provided so it's we're just going to
not provided so it's we're just going to
do players. shape
do players. shape
there is it
there is it
agents
attacking okay so we actually have it
attacking okay so we actually have it
oops get players now
wrong work for just a
moment get observations
okay LF pit is less than num
okay LF pit is less than num
agents then we do all this
agents then we do all this
right
right
else we get the
else we get the
tower and that's uh this is fine right
tower and that's uh this is fine right
tower
tower
PID
PID
to what does it have no it has
to what does it have no it has
team health max Health
team health max Health
damage probably have PID right
yeah it needs to have
PID so you can damage it
right PID team health
okay right
here so we do Target
OB let get player
OB oh yeah this is
fine get Tower PID minus num agents then
fine get Tower PID minus num agents then
it gets PID it gets Target OB
it gets PID it gets Target OB
dot uh team which is already has it gets
Health it
Health it
gets this is fine
okay so now we have the
Towers
oops few last bugs it looks
like we have
like we have
uh Target
uh Target
PID right so here uh this has to
PID right so here uh this has to
potentially
potentially
be if Target PID
we'll make it slightly nicer right
we'll make it slightly nicer right
equals
equals
1 then attack is going to be zero
oops
oops
LF Target pit is less than
LF Target pit is less than
agum then you do this you get the Agents
agum then you do this you get the Agents
of Target pit right and then uh
or
or
else you
else you
do uh you still have to do this Loop
right you have to
right you have to
nest because this nesting lets you pull
nest because this nesting lets you pull
this
this
back Target this is going to be
back Target this is going to be
Towers we'll see if this works
oh yeah we got the tower you see that we
oh yeah we got the tower you see that we
killed the
killed the
tower but the thing is the tower doesn't
tower but the thing is the tower doesn't
know it's dead so it's still killing me
know it's dead so it's still killing me
but we did Kill the
tower so that's nice
okay so we just say uh if the tower's
okay so we just say uh if the tower's
dead then the tower's dead
okay so we got uh we got the
tower local
tower local
variable let's see so I managed to break
variable let's see so I managed to break
it
try
this oops
uh it's not letting me move
now or it has my keys backwards or
now or it has my keys backwards or
something something weird just
happened
happened
okay yeah this is fine
okay yeah this is fine
weird how that happened that it
like does this die
eventually doesn't appear to which is
eventually doesn't appear to which is
very
odd I also don't understand how um it
odd I also don't understand how um it
like the tower died instantly when I hit
like the tower died instantly when I hit
it before right
tower. team Tower health is subtracted
tower. team Tower health is subtracted
one if the tower health is less than
one if the tower health is less than
equal zero then you remove
it maybe I can just hit it
once and also give them more Health that
once and also give them more Health that
might help
hold on I've got something at the
door
e
e
e
e
e
e
e e
okay
okay
um salesman but not a bad salesman
um salesman but not a bad salesman
apparently AT&T put one gig uh one gig
apparently AT&T put one gig uh one gig
in nearby so let's actually actually let
in nearby so let's actually actually let
me go check the Wi-Fi speeds here cuz I
me go check the Wi-Fi speeds here cuz I
could use a little upgrade for the
could use a little upgrade for the
stream mic still gone yeah mic's still
good yeah I'm supposed to have a gigabit
good yeah I'm supposed to have a gigabit
here so I don't know what the heck this
is yeah that's garbage okay we'll look
is yeah that's garbage okay we'll look
at that
cool
cool
um let's take us let's see if we can
um let's take us let's see if we can
figure out what's happened with our
figure out what's happened with our
Towers I see is that it's it's taken
Towers I see is that it's it's taken
down two of the towers it looks
down two of the towers it looks
like but
like but
um it's taking down two
towers e
health bar code looks
fine could be the damage code
I'm going try increasing the tower
I'm going try increasing the tower
Health a little bit will make the tier
Health a little bit will make the tier
ones have
five oops
oops we had to
recompile
okay and if this works then we have
okay and if this works then we have
basic uh defeatable Towers we've got
basic uh defeatable Towers we've got
really basic
really basic
characters Graphics are crap a
characters Graphics are crap a
movement's crap you know the characters
movement's crap you know the characters
don't even rotate yet but I mean heck I
don't even rotate yet but I mean heck I
could put a 3D render for this if I
could put a 3D render for this if I
wanted it's the same under the hood
wanted it's the same under the hood
right
okay I'm not seeing the health bar move
okay I'm not seeing the health bar move
but it seems like the first time I hover
but it seems like the first time I hover
it it doesn't happen like nothing
it it doesn't happen like nothing
happens so my guess is that it's uh it
happens so my guess is that it's uh it
is
is
actually yeah so right there I hovered
actually yeah so right there I hovered
it before and nothing happened and then
it before and nothing happened and then
it just deleted all at once
so I think that the health is
so I think that the health is
probably the health Cals are probably
probably the health Cals are probably
correct and then for some reason the
correct and then for some reason the
health bar is
health bar is
not
not
working maybe it's because they're both
working maybe it's because they're both
inss
inss
right
right
oops yeah let's do like float
right may be like it's because they're
right may be like it's because they're
both C integer types under the
hood nope that did not help
H tower. health and print the health out
here it says five Health
Right add a print and see what happened
Right add a print and see what happened
to Tower HP y That's what I'm doing
to Tower HP y That's what I'm doing
okay so all of a sudden it uh it went
okay so all of a sudden it uh it went
from five to zero all of a sudden
from five to zero all of a sudden
right it was at five five and it it
right it was at five five and it it
never decreased it just dropped all of a
never decreased it just dropped all of a
sudden which is very weird that it would
sudden which is very weird that it would
do that
do that
um I guess I don't need this float check
um I guess I don't need this float check
python should handle in just fine
anyways and know maybe you can see it my
anyways and know maybe you can see it my
eyes are getting tired uh in a few
eyes are getting tired uh in a few
minutes I'm going to have to go grab uh
minutes I'm going to have to go grab uh
well go make my shake for the
day this is where you do the tower
day this is where you do the tower
damage Cal
damage Cal
here get
Tower oh is this returning um
where's get Tower I mean I would be very
where's get Tower I mean I would be very
surprised if I'd messed this up right
surprised if I'd messed this up right
but where's the function
defined what where did I not to find
defined what where did I not to find
this somewhere oh here it is Tower
star PID minus self. n num
agents this is correct it' be very weird
agents this is correct it' be very weird
for this function to be
wrong oh I think I
wrong oh I think I
know uh did I not
pass no I did pass this correctly I
pass no I did pass this correctly I
thought I didn't provide the type on the
thought I didn't provide the type on the
tower so maybe it copied
wait player creeps Towers
right sea
Towers this created the exact same way
Towers this created the exact same way
that uh players is
created and then we pass out. sea Towers
created and then we pass out. sea Towers
after creeps right
wait towers
of thises health bar
of thises health bar
worked
worked
um the fact that this is
um the fact that this is
drawing it in the first
place I'm going to just do this for a
place I'm going to just do this for a
second I just want to see if it's
second I just want to see if it's
actually picking up the
health see if it's picking up
Health Okay so so right here it says I
Health Okay so so right here it says I
have very low Health right
because and now this one has more health
because and now this one has more health
because it's a stronger Tower
right so it means that the data actually
right so it means that the data actually
has to be
has to be
correctly added in
correctly added in
here it's weird though that you never
here it's weird though that you never
kill this
kill this
Tower I would expect you to eventually
Tower I would expect you to eventually
be able to kill it
you
you
don't you only kill oh wait you do kill
don't you only kill oh wait you do kill
it so it takes a while but you do kill
it so it takes a while but you do kill
it uh and then this one actually has the
it uh and then this one actually has the
wrong amount of
wrong amount of
HP we can see that this is not added
correctly so I'm setting the HP from the
correctly so I'm setting the HP from the
cide so the fact that I can see it means
cide so the fact that I can see it means
that the data is correctly synced
that the data is correctly synced
between Python and C so we don't need to
between Python and C so we don't need to
worry about that
the heck is wrong with it
then oh am I drawing the wrong health
then oh am I drawing the wrong health
bars above each of them that could be a
bars above each of them that could be a
thing right I could be drawing the wrong
thing right I could be drawing the wrong
health bar like it could be decreasing
health bar like it could be decreasing
the health bar of a different
the health bar of a different
one let me say PID minus agent. shape
let's print the
let's print the
PID let's see what this Tower's pit
is okay so this is pit
20 let's see if there's a ah this one
20 let's see if there's a ah this one
right here so this one got
right here so this one got
killed you see so it is just updating
killed you see so it is just updating
the wrong health bar
the wrong health bar
okay
so this is
so this is
ji this is
ji this is
fine PID 20
got all these
towers it's I plus numb
towers it's I plus numb
agents we get the
agents we get the
tower turn PID minus numb
agents maybe I'm decrementing the health
agents maybe I'm decrementing the health
of the wrong Tower let's
of the wrong Tower let's
see
so we get PID
so we get PID
map oh wait this is the player killing
map oh wait this is the player killing
the Tower or the tower killing the
the Tower or the tower killing the
player now the player Tower ah right
here this wrapped around somehow and I
here this wrapped around somehow and I
got negative
indexing let's check this out
so now we have the
so now we have the
puffer and can it attack the tower
whoops well that didn't
help so get Target pit is going to be
help so get Target pit is going to be
the
the
target.
target.
PID
PID
wait this is Tower
PID Tower PID
PID Tower PID
right get tower Tower
right get tower Tower
PID
no get Tower
no get Tower
of what did I have it as before Target P
of what did I have it as before Target P
minus num
minus num
agents where did I get Target PID from
agents where did I get Target PID from
get player
OB Target equal get player OB
I messed up some indexing here somewhere
I messed up some indexing here somewhere
I just don't see where I'm not seeing it
so I even though this is get player OBS
so I even though this is get player OBS
they should have the correct pit in it
they should have the correct pit in it
so is this not just Target
pit just add a print in see what it's
pit just add a print in see what it's
see what PID we're
getting see if it's something reasonable
okay so we
go
go
20 it's right there
wait where do I set the
wait where do I set the
pids oh I don't set the
pids
pids
right I set the pit map but I didn't set
right I set the pit map but I didn't set
the tower pit there we go Sprint
where is
it yeah we're
good it work
no it does not
work that's
bizarre I thought that I fixed it with
bizarre I thought that I fixed it with
that oh wait did maybe wait wait wait no
that oh wait did maybe wait wait wait no
no no hold
no no hold
on get
on get
Tower yeah you can't do get Tower of I
Tower yeah you can't do get Tower of I
right it's got to be I Plus
right it's got to be I Plus
I'm
agents H I'm going to have to refactor
agents H I'm going to have to refactor
this very very heavily probably off
this very very heavily probably off
stream because it'll be boring but um
stream because it'll be boring but um
yeah this
yeah this
like hopefully we just get it working
like hopefully we just get it working
for
for
now and make it
work ah there we go look we uh we I saw
work ah there we go look we uh we I saw
the tower take damage so here we're
the tower take damage so here we're
going to damage this Tower here it's got
going to damage this Tower here it's got
a little bit of Chip damage right we can
a little bit of Chip damage right we can
see it okay we're going to
attack you can actually see the chip
attack you can actually see the chip
damage that the tower takes
damage that the tower takes
right
right
boom then this we can go get ready to to
boom then this we can go get ready to to
attack this Tower except this is our
attack this Tower except this is our
Tower so we can't attack it obviously we
Tower so we can't attack it obviously we
got in range of the other one very nice
got in range of the other one very nice
so we have a very very basic like bare
so we have a very very basic like bare
bare minimum MOA type thing going on
bare minimum MOA type thing going on
here
here
um towers of Stars players are
um towers of Stars players are
puffers if I hover over these puffers
puffers if I hover over these puffers
here by the way they get hit so like you
here by the way they get hit so like you
actually can fight stuff it's just very
actually can fight stuff it's just very
awkward because like they're very
awkward because like they're very
spammy they're very very spammy and the
spammy they're very very spammy and the
movement's too
movement's too
fast but that'll be easy to solve um
fast but that'll be easy to solve um
we'll just like reduce the movement
we'll just like reduce the movement
speed or whatever and you don't have to
speed or whatever and you don't have to
render the you don't have to render the
render the you don't have to render the
puffer on a tile that's very easy to
solve maybe we want to do that right now
even let's do um
I think we don't even have to recompile
I think we don't even have to recompile
for that we can just do agent speed is
for that we can just do agent speed is
going to be 0.5
going to be 0.5
right and
then
then
here it actually might just be done for
here it actually might just be done for
us
us
because yeah main R main
because yeah main R main
C I think it just works for us right
so if I'm I'm holding the up key and
so if I'm I'm holding the up key and
nothing is
happening clearly the speed is applying
happening clearly the speed is applying
to the other puffers not to me though so
to the other puffers not to me though so
let's see what's wrong
when you think about all the things
when you think about all the things
you're going to
you're going to
solve you have like a project management
solve you have like a project management
thing that helps you visualize goals or
thing that helps you visualize goals or
you just go through the motions and like
you just go through the motions and like
oh I'll fix that
oh I'll fix that
next
next
um honestly the only thing that's really
um honestly the only thing that's really
important is getting the lowlevel data
important is getting the lowlevel data
structures
structures
right like everything else
right like everything else
is so this is more lines of code than it
is so this is more lines of code than it
should be by like almost double right
should be by like almost double right
now because I've just been lazy with the
now because I've just been lazy with the
way I've been writing it but the way I
way I've been writing it but the way I
think about things is I as long as I
think about things is I as long as I
keep a project under like 2,000 lines I
keep a project under like 2,000 lines I
can kind of just load the whole project
can kind of just load the whole project
into my head at once
into my head at once
right
right
um so I basically I just solve the next
um so I basically I just solve the next
thing because it doesn't need more
thing because it doesn't need more
structure the cost of adding the
structure the cost of adding the
structure outweighs the benefit
structure outweighs the benefit
doesn't mean that I'm going to keep the
doesn't mean that I'm going to keep the
code looking like this it's going to
code looking like this it's going to
look way nicer and be way more concise
look way nicer and be way more concise
but um I I just keep it short enough
but um I I just keep it short enough
that it's relatively easier to just
that it's relatively easier to just
solve the next thing solve the next
thing I don't
know did you know that if you just solve
know did you know that if you just solve
the next thing thing and you keep
the next thing thing and you keep
solving the next thing eventually all
solving the next thing eventually all
the things are solved
you ain't wrong when you're
you ain't wrong when you're
right
yeah I don't know I've never really
yeah I don't know I've never really
found structure to be useful
found structure to be useful
like the vast ma majority of the time
like the vast ma majority of the time
like when you try to create structure
like when you try to create structure
and you try to like you know put things
and you try to like you know put things
into boxes you're just wrong like you
into boxes you're just wrong like you
come up with stupid boxes you come up
come up with stupid boxes you come up
with stupid structure it's better to
with stupid structure it's better to
just solve the thing and not do the
just solve the thing and not do the
structure and try to like compactify and
structure and try to like compactify and
clean stuff up along the way like that's
clean stuff up along the way like that's
pretty much
it right where's movement and why is it
it right where's movement and why is it
only happening in discreet
only happening in discreet
chunks discretize
D
why I actually don't see why this
why I actually don't see why this
doesn't
doesn't
work like
work like
looks like it should
work doesn't move you on the grid right
work doesn't move you on the grid right
but
but
then this destination here is continuous
then this destination here is continuous
unless I messed that up
somehow player.
somehow player.
y plus agent speed times velocity y
the kicker should be that
the kicker should be that
um for whatever reason the scripted
um for whatever reason the scripted
agents or the the neural agents work and
agents or the the neural agents work and
mine
mine
doesn't let's see why that would
be discretize is true
I assume that the fact that the YouTube
I assume that the fact that the YouTube
counter keeps going to zero and then
counter keeps going to zero and then
going back to two means that like
going back to two means that like
YouTube C doesn't count T tabbed out
YouTube C doesn't count T tabbed out
users so
users so
um it just like whenever people Tab out
um it just like whenever people Tab out
it goes to zero and then whenever
it goes to zero and then whenever
something happens and they tab in it
something happens and they tab in it
goes back to like you know back to two
goes back to like you know back to two
or whatever that took me a second to
or whatever that took me a second to
figure out whereas I think that the
figure out whereas I think that the
twitch one is just Conant I think that
twitch one is just Conant I think that
the twitch one counts background or
something and then the X1 just makes
something and then the X1 just makes
absolutely no sense because it tells you
absolutely no sense because it tells you
total views not concurrent viewers
I really don't see anything that would
I really don't see anything that would
uh
uh
make this Mak sense let me just play
make this Mak sense let me just play
with it a little
bit oh wait no it's
so if I hit this I go left if I just
so if I hit this I go left if I just
keep tapping
keep tapping
left and if I keep tapping up do I go
up but if I hold
up but if I hold
it and just get stuck is that the
it and just get stuck is that the
case that's weird
is key
is key
down gives you the
axis either of them are
axis either of them are
none the action is
none the action is
none
none
print think though I can print my action
print think though I can print my action
out and I think it'll be reasonable
out and I think it'll be reasonable
right
I'm going to just hold the up
I'm going to just hold the up
key yeah so my upkey hold I can
key yeah so my upkey hold I can
see left key yeah so the I can see the
see left key yeah so the I can see the
printouts
printouts
here so it's getting reasonable actions
in and then what is it doing with the
actions it's getting the movement right
actions it's getting the movement right
where's the move thing
if
if
discretise actions
discret minus
discret minus
1.0 which is correct I
believe -
one dust y dust X gives you
agent
speed if uh agent let's just
speed if uh agent let's just
print
print
this let's just check the velocities
this let's just check the velocities
like this
okay oops
okay oops
so agent is moving
to is as soon as I hold down a key it
to is as soon as I hold down a key it
locks it and I have reasonable
locks it and I have reasonable
velocities
but it blocks me after a
but it blocks me after a
second so it's moving to a
second so it's moving to a
position with what looks like a
position with what looks like a
reasonable
velocity
to ah right here
to ah right here
this needs to be
this needs to be
here you
here you
always
always
no if it's
empty no that's not right um
so if the grid is not
so if the grid is not
empty
empty
and
and
PID is not equal to PID so you have to
PID is not equal to PID so you have to
check both
check both
that uh you you're allowed to move into
that uh you you're allowed to move into
your same cell
basically
yeah so if you would move into a cell
yeah so if you would move into a cell
that's occupied you're not allowed to do
that's occupied you're not allowed to do
that but you have to be able to check
that but you have to be able to check
against your own your own
movement that was the
issue also I screwed up this
issue also I screwed up this
indent this indent needs to be here
indent this indent needs to be here
and now we have these
puffers
puffers
uh now nobody can move
right that's weird
oh I did I delete the wait hold
oh I did I delete the wait hold
on I deleted the
original right
original right
yeah
there let's try this
okay so I'm moving at half speed but
okay so I'm moving at half speed but
it's not rendering the puffer smoothly
it's not rendering the puffer smoothly
enough you can see it's only moving it
enough you can see it's only moving it
it's rendering it in chunks of tiles so
it's rendering it in chunks of tiles so
let's fix that
where's the
where's the
move
move
H this is fine
ah
so grid R grid
C this is
C this is
correct um but then
correct um but then
this this is not necessarily correct
we need to figure out how to draw the
player this is Jay
what do we
do so we can do
we can't just add the whole player
position
no which got to be minus the Min
no which got to be minus the Min
right minus r
Armen yeah minus Armen I
guess so this is going to be
see if this does
it okay it actually works but the health
it okay it actually works but the health
bars are wrong let's fix the health bars
I'm actually surprised how wrong the
I'm actually surprised how wrong the
health bars
are or maybe it's not how wrong the
are or maybe it's not how wrong the
health bars are maybe it's how wrong the
health bars are maybe it's how wrong the
puffers
are we should probably get like an X Y
are we should probably get like an X Y
thing right so like let's go here
thing right so like let's go here
so we'll
do here we know we got a PID
right
oops
okay let's do
okay let's do
entity is equal to agents of
entity is equal to agents of
PID else entity is equal the towers of
PID else entity is equal the towers of
this okay and we'll get rid of this this
this okay and we'll get rid of this this
code here and we'll just
do entity dox entity
doy and what we're going to do is XX is
doy and what we're going to do is XX is
going to
going to
be
be
minus r min
maybe that
maybe that
works and we'll
do
do
minus oh this is C this is
minus oh this is C this is
rmen right and we'll do draw health bars
rmen right and we'll do draw health bars
this will be XX this will be y
this will be XX this will be y
y and then this will be D
y and then this will be D
direct like
direct like
this let's see how this
this let's see how this
works integer
works integer
required no
problemo and once this works it'll be a
problemo and once this works it'll be a
lot less
choppy uh it's still now it's still
choppy uh it's still now it's still
cropping me to
be yeah this is still
be yeah this is still
cropping let's see
why oh it's I think you need to apply
why oh it's I think you need to apply
this int
this int
times tile size yeah you have to do the
times tile size yeah you have to do the
multiplication by the tile size yeah and
multiplication by the tile size yeah and
then do the cast Okay so
then do the cast Okay so
draw health bars yeah so what we'll do
draw health bars yeah so what we'll do
is we'll just
is we'll just
do x y and this will just be we don't
do x y and this will just be we don't
need the tile size anymore in this
need the tile size anymore in this
function this will just
function this will just
be
be
X this will be
X this will be
y uh we do actually need the tile size
y uh we do actually need the tile size
that's
annoying x y
X Y yeah this is good
so XX y y death
so XX y y death
direct
cool this did not the puffer is not
cool this did not the puffer is not
pleased this did not work
pleased this did not work
um let's see what happened oh because I
um let's see what happened oh because I
forgot to remove this one here
forgot to remove this one here
we don't need this tile size
anymore so you can kind of go into
anymore so you can kind of go into
objects but
objects but
um you can see that it's
actually it moves by half steps
actually it moves by half steps
is it just me or is it
flickering why does it look to me like
flickering why does it look to me like
it's
it's
flickering it is right it's not it's
flickering it is right it's not it's
like going forward and then jumping back
like going forward and then jumping back
isn't
it it's not just me right
if I do it like really slow we should be
if I do it like really slow we should be
able to see the
flicker ah the flicker because the map
flicker ah the flicker because the map
is
is
snapped so we'll fix that
yeah to center it on the player
right kind of annoying
to do well I
mean
mean
one plus
one plus
one we'll just give it like a one tile
one we'll just give it like a one tile
buffer I
guess and then
this will be
I think you do I
I think you do I
minus got to be I minus one right I
minus got to be I minus one right I
where do we use
I oh it's just used
I oh it's just used
here right is this the only spot
yeah that's
one and actually we're going to do
I think this is
technically if I do like DX
technically if I do like DX
here
here
Dr is going to be
main minus
main minus
int
int
okay so you take off this portion
okay so you take off this portion
here and now you can
do I was it I plus - one plus
do I was it I plus - one plus
Dr
Dr
D yeah this is Dr
I don't know let's
see okay I think I got it backwards
see okay I think I got it backwards
right so let's try minus
okay so now the puffer
snaps but the screen is
smooth oh so I think now that you can
smooth oh so I think now that you can
just
do I think this is just our
right let's see can you just do like
right let's see can you just do like
this now
Absolut me
not
not
nope what did I have it as before this
nope what did I have it as before this
is J
is J
times tile
size do I just have it backwards isn't
size do I just have it backwards isn't
this J and this is
this J and this is
I
yeah okay so this is now
yeah okay so this is now
smooth um this is moving with me which
smooth um this is moving with me which
is not good
it's actually kind of gives you
it's actually kind of gives you
Collision detection for free as
well these moving around is very
obnoxious
obnoxious
so I think we need to do a little bit of
so I think we need to do a little bit of
math on
this I always hate having to do centered
this I always hate having to do centered
camera I always hate having to do
camera I always hate having to do
centered camera
there is technically a camera thing we
there is technically a camera thing we
could use with rayb I don't know if it's
could use with rayb I don't know if it's
worth
worth
it I don't think it's that bad to just
it I don't think it's that bad to just
do the math
so the way we want to do this
is I don't know how we want to do this
is I don't know how we want to do this
honestly
well I think the camera actually might
well I think the camera actually might
help let me go see if I can grab a
help let me go see if I can grab a
camera snippet this will take it a
camera snippet this will take it a
little bit but then the nice thing with
little bit but then the nice thing with
the camera is we can just draw
the camera is we can just draw
everything at its actual correct
everything at its actual correct
position on the board
position on the board
um and it'll work itself out from that
we don't have to do
we don't have to do
everything let me go find the uh let me
everything let me go find the uh let me
go find the thing oh anything on let me
go find the thing oh anything on let me
check Twitter real quick because I
check Twitter real quick because I
haven't checked that in a while
anything oh
yay
advertising cool
advertising cool
stream's actually doing quite
stream's actually doing quite
well uh it's uh
well uh it's uh
not oh no this is yesterday's stream
not oh no this is yesterday's stream
isn't it ah
isn't it ah
whatever this one's doing
okay let's go look for uh let me go grab
okay let's go look for uh let me go grab
the uh the code off screen one
the uh the code off screen one
second and we'll show you the rib camera
second and we'll show you the rib camera
system which if I recall it was a little
system which if I recall it was a little
bit annoying to get set up but uh wasn't
bit annoying to get set up but uh wasn't
that
bad there
okay so I think I found
it do I have pyr what is
it do I have pyr what is
it Ray Li okay so you need pyr for this
it Ray Li okay so you need pyr for this
which is slightly annoying but not too
which is slightly annoying but not too
bad
because the um this is one of the things
because the um this is one of the things
for which the CI is really
obnoxious so then what we do is I think
obnoxious so then what we do is I think
we just set the camera
Target yeah camera. Target
it's got Zoom as well very
nice so now that we have our
camera forget if we have to attach the
camera forget if we have to attach the
camera somehow I don't think so I think
camera somehow I don't think so I think
now what we get to do is we just get to
now what we get to do is we just get to
use the actual coordinates for
use the actual coordinates for
everything
and we will uh just we'll render so we
and we will uh just we'll render so we
don't need Dr don't need
don't need Dr don't need
DC we'll keep this Min and Max
DC we'll keep this Min and Max
thing uh we actually won't need this inj
thing uh we actually won't need this inj
anymore then either which is very nice
anymore then either which is very nice
because this was very obnoxious the way
because this was very obnoxious the way
that I wrote this it was quite
stupid
stupid
and now it is simp
L this is going to be
L this is going to be
y x
y x
right and if we
do uh y
do uh y
y
y
x
x
x GD
x GD
YX and then we just draw this
YX and then we just draw this
rectangle um this is going to just be
rectangle um this is going to just be
into this is just X time TI size right x
into this is just X time TI size right x
* TI size y * TI size very
* TI size y * TI size very
simple and just python I think you get
simple and just python I think you get
you just get ins back right if I do
you just get ins back right if I do
like type 3 * 5 just give you an INT
like type 3 * 5 just give you an INT
yeah it does give you an in
okay so this should be nice nicely done
okay so this should be nice nicely done
this is now y x this will clean up the
this is now y x this will clean up the
code quite a bit for
code quite a bit for
us uh and then the health bar
us uh and then the health bar
I think I can make uh we're going to
I think I can make uh we're going to
reuse this a bunch
reuse this a bunch
right I think I can do t t x it's x x
ts you just do TX Ty Y and easier TX
ts you just do TX Ty Y and easier TX
dy I need
dy I need
this TX Ty
this TX Ty
y TX Ty
y TX Ty
y okay
y okay
let's see what
happens wish it wouldn't spawn off
happens wish it wouldn't spawn off
screen but we have a spawns on an IT
screen but we have a spawns on an IT
spawns empty which I mean I'd assume
spawns empty which I mean I'd assume
mean that the camera Target was not
mean that the camera Target was not
set so we can
set so we can
do
um
um
camera Target dox is going to be
equal to main C time tile
equal to main C time tile
size self dot dot see how this
goes okay still
blank uh let me go pull up that other
blank uh let me go pull up that other
bit of
code uh you need to be begin mode 2D
code uh you need to be begin mode 2D
right so our ALB has this begin
right so our ALB has this begin
draw
draw
um and you need to begin the camera and
um and you need to begin the camera and
end the camera
mode yeah so I think
it's dot begin mode
it's dot begin mode
D then you end the draw and then you end
D then you end the draw and then you end
RL end mode
RL end mode
2D uh no other way around they need to
2D uh no other way around they need to
be sandwiched like
this wait did I do this right draw Tod
okay okay so this is something
okay okay so this is something
right something weird
right something weird
happened I don't exactly know what this
happened I don't exactly know what this
is maybe we can deduce what happened
here I think you have to add half of the
here I think you have to add half of the
uh the screen width to this
maybe do I have width and
maybe do I have width and
height yeah
height yeah
so plus self dot with over two it's
so plus self dot with over two it's
going to be time TI size height and uh
going to be time TI size height and uh
wait what did we specify width and
wait what did we specify width and
height this actually does have to be
height this actually does have to be
times tile size
times tile size
right so this is actually going to
right so this is actually going to
be m
r plus self. width over
two times tile
two times tile
size and then I can click this
okay I think this was minus I think that
okay I think this was minus I think that
the suggestion was correct because I
the suggestion was correct because I
don't see
anything okay so this is actually
anything okay so this is actually
correctly centered
now we can see that there's a little bit
now we can see that there's a little bit
of diverging
of diverging
here but the camera is smooth so it just
here but the camera is smooth so it just
means that the math on our objects is
means that the math on our objects is
wrong but we can see that the stationary
wrong but we can see that the stationary
objects are consistent with the
camera are either of these
camera are either of these
centered this health bar looks like it's
centered this health bar looks like it's
centered to me
right yeah this health bar is
right yeah this health bar is
centered and then there shouldn't be a
centered and then there shouldn't be a
star there which is
star there which is
weird possibly I flipped some
weird possibly I flipped some
coordinates
yeah uh well here's the
yeah uh well here's the
issue I just typoed Ty
TX this looks
promising okay so now the puffer is uh
promising okay so now the puffer is uh
the puffer is not moving smoothly but
the puffer is not moving smoothly but
everything else is moving smoothly so
so this should not be x * tile size
so this should not be x * tile size
right this should so I should put X time
right this should so I should put X time
tile size
tile size
here tile size this is y * tile
here tile size this is y * tile
size but then down
size but then down
lower I should
lower I should
do TX equal to
do TX equal to
entity
entity
dot int
dot int
entity dox time to size so now this
entity dox time to size so now this
should give you
should give you
smooth uh possibly smooth placement of
these oh
these oh
yeah let's speed it up so it looks a
yeah let's speed it up so it looks a
little bit better this is just uh a
little bit better this is just uh a
little bit too
slow oh yeah this is this is great look
slow oh yeah this is this is great look
at this
at this
so we have smooth movement can I still
so we have smooth movement can I still
hit stuff oh yeah I can still hit stuff
hit stuff oh yeah I can still hit stuff
perfect so we have smooth movement we've
perfect so we have smooth movement we've
got smooth movement in
got smooth movement in
combat um the puffer does not rotate
combat um the puffer does not rotate
towards the direction you're moving so
towards the direction you're moving so
we'll fix that I'm sure we'll do some
stuff it be nice to have like an
stuff it be nice to have like an
overhead puffer or
something but this is very nice
this is probably worth putting like a a
this is probably worth putting like a a
little update together
right overhead puffer would go
right overhead puffer would go
hard yeah it's kind of weird because
hard yeah it's kind of weird because
like if you think of the um the way
like if you think of the um the way
mobas do their characters I've never
mobas do their characters I've never
seen like a 2d mooba right like a top
seen like a 2d mooba right like a top
down I could do top down puffer it
down I could do top down puffer it
wouldn't be that hard I do have the 3D
wouldn't be that hard I do have the 3D
files for this
thing I mean it's also possible I could
thing I mean it's also possible I could
make a 3D client for this I don't know
make a 3D client for this I don't know
how I feel about doing that work but
how I feel about doing that work but
um technically something that could be
um technically something that could be
done
right but this is like this is pretty
right but this is like this is pretty
cool like this feels this feels pretty
cool like this feels this feels pretty
fluid
uh if you want it to be really
uh if you want it to be really
smooth I if you wanted it to be really
smooth I if you wanted it to be really
smooth what you would do is you would um
smooth what you would do is you would um
decrease the agent speed and up the
decrease the agent speed and up the
frame rate uh but that will make it
frame rate uh but that will make it
substantially harder for learning it
substantially harder for learning it
would make it substantially harder for
would make it substantially harder for
learning though I think that am MOA is
learning though I think that am MOA is
kind of fundamentally more real
time let me try
time let me try
something I'm going to do
0.2 and then if I do clean
puffer you
puffer you
human wait
FPS Target is only
FPS Target is only
10 we could do like 20 or no let's do 30
FPS movement rate of
o2 okay it's a kind of a jittery puff
o2 okay it's a kind of a jittery puff
puff Jitters a little bit because this
puff Jitters a little bit because this
is a highly unoptimized code but uh you
is a highly unoptimized code but uh you
can absolutely like you have like very
can absolutely like you have like very
smooth circular control
smooth circular control
now you
see but this is a little too
see but this is a little too
jittery a little too fast let me try 20
20 FPS 0.25
maybe okay that's
smooth so technically each of these
smooth so technically each of these
squares you have a resolution of four
squares you have a resolution of four
steps in each of these squares like you
steps in each of these squares like you
can move it's technically there's a grid
can move it's technically there's a grid
map thing but you you can move a
map thing but you you can move a
distance of a quarter of a square every
distance of a quarter of a square every
frame in any direction eight directional
frame in any direction eight directional
because I have this uh like this oh you
because I have this uh like this oh you
know what I can
know what I can
do I have a really good idea wait wait I
do I have a really good idea wait wait I
have a really good idea this is going to
have a really good idea this is going to
be
cool we're going to make it we're going
cool we're going to make it we're going
to make it real cool okay
it's going to be
it's going to be
fun so I'm going to ignore these key
fun so I'm going to ignore these key
presses
presses
here and I'm going to
do
a
equals clip
Mouse y
minus self. camera. Target
y
200 and I'm going to clip this to
200 and I'm going to clip this to
between negative 1 and
one I'm just I'm just doing things you
one I'm just I'm just doing things you
know it's no big deal hold on we just we
know it's no big deal hold on we just we
just uh there's there's just a little
just uh there's there's just a little
bit of stuff we got to do
okay don't be alarmed we're not we're
okay don't be alarmed we're not we're
not doing anything super cool or
not doing anything super cool or
anything like that right
okay so I was totally right because
okay so I was totally right because
people every time I say something
people every time I say something
interesting somebody will like speak up
interesting somebody will like speak up
in the chat even though that the view
in the chat even though that the view
counters are zero so it's totally just
counters are zero so it's totally just
not counting tabbed out people that's
not counting tabbed out people that's
how it is that's cool it's kind of cool
how it is that's cool it's kind of cool
to know that your view numbers are
to know that your view numbers are
actually higher than displayed
the one thing that's a little Annoying
the one thing that's a little Annoying
is I
is I
think do we need to change stuff a
think do we need to change stuff a
little bit for
little bit for
this let me see
got ax and a
got ax and a
y not
broadcast right I needed to
broadcast right I needed to
Define is equal to
three uh the
the attack is going to be a little bit
the attack is going to be a little bit
of an issue we we'll fix it up though
of an issue we we'll fix it up though
it'll be cool it'll be
it'll be cool it'll be
fine actions discreet
where is it
discreet the attack does get discretized
what where is
what where is
this oh this is
this oh this is
continuous
continuous hey buffer
continuous hey buffer
where you going
puffer wait do I have to
puffer wait do I have to
do
build hold
on come on Puffer
I like Puffer that follows your cursor
I like Puffer that follows your cursor
as an
environment you know technically if I
environment you know technically if I
wanted to make this 3D I do have the 3D
wanted to make this 3D I do have the 3D
model of the puffer and it does have one
model of the puffer and it does have one
animation and this would be a really
animation and this would be a really
really great excuse to commission more
really great excuse to commission more
puffer fish animations which I love to
puffer fish animations which I love to
do but the thing is they're very
do but the thing is they're very
expensive and very time consuming to
expensive and very time consuming to
have
made I do like them
made I do like them
though dude just upwork it okay that's
though dude just upwork it okay that's
what I did for the original puffer right
what I did for the original puffer right
and it took two artists about 600 bucks
and it took two artists about 600 bucks
and several hundred messages to get this
and several hundred messages to get this
puffer the way I want wanted
it is not
it is not
easy it's a very high quality
puffer it's very difficult to do
puffer it's very difficult to do
characters like animated characters like
characters like animated characters like
if you have one polygon off slightly
if you have one polygon off slightly
like the whole thing is messed up like I
like the whole thing is messed up like I
would I'd have to send back edits like
would I'd have to send back edits like
you know hey there's one polygon off on
you know hey there's one polygon off on
the mouth or like you know the fin is
the mouth or like you know the fin is
just clipping ever so slightly here or
just clipping ever so slightly here or
like the eyes are just like slightly
like the eyes are just like slightly
going to a weird angle that looks off
going to a weird angle that looks off
right stuff like
that for this
that for this
reason artist jobs are actually very
reason artist jobs are actually very
safe despite
GPT for the time
being plus as annoying as it is to send
being plus as annoying as it is to send
100 messages back and forth um they do
100 messages back and forth um they do
actually fix the things that you say
actually fix the things that you say
instead of just making more
issues and there the artists are
issues and there the artists are
credited on the puffer page as
well it's a great Puffer
wait am I not printing the action
wait am I not printing the action
already let's print the action as it
already let's print the action as it
goes in
not
working
oops
so Mouse
y okay so we have
Mouse oh oh did I already just divide
Mouse oh oh did I already just divide
the
the
mouse
yeah I don't know why I did
this pause.
this pause.
y pause. x
buer follow
buer follow
me no it
doesn't it's at least moving
doesn't it's at least moving
now uh
okay
okay
so this says that Mouse
so this says that Mouse
is very reasonable right so this
is very reasonable right so this
is Target is
is Target is
784 which
784 which
is here which is a little
is here which is a little
awkward but then there's
10,000 oh
10,000 oh
yeah duh um I have to do the center of
yeah duh um I have to do the center of
the screen not the mouse y so this is
the screen not the mouse y so this is
just pause y
just pause y
minus uh self.
height
height
uh super Maven I love you but your
uh super Maven I love you but your
suggestions are not always
suggestions are not always
amazing you are very fast though
oh okay so here's the
puffer
puffer
Mouse well we don't need this target
Mouse well we don't need this target
anymore right we need
okay on
puffer let me
puffer let me
through
through
puffers it's just a really bad seed okay
puffers it's just a really bad seed okay
well we'll have to look at it from here
well we'll have to look at it from here
so the mouse is 650
so the mouse is 650
Target
is ah it's times T it's TS
is ah it's times T it's TS
times T TS times
times T TS times
right
right
TS come on so
close oh look at this
you can navigate the
puffer what would you recommend a good
puffer what would you recommend a good
beginner project be for using clean RL
beginner project be for using clean RL
for the first time um well first of all
for the first time um well first of all
like just train some like train like one
like just train some like train like one
of the existing M to see how it works
of the existing M to see how it works
and set up like wand B and um it depends
and set up like wand B and um it depends
what you're focused on like I generally
what you're focused on like I generally
suggest like trying to make either make
suggest like trying to make either make
a new en and make RL work on it or get
a new en and make RL work on it or get
RL to work on like a simple existing
RL to work on like a simple existing
environment uh nothing as complex as
environment uh nothing as complex as
this thing but look at this you can
this thing but look at this you can
actually navigate your
actually navigate your
puffer you can navigate the puffer with
puffer you can navigate the puffer with
your cursor and if you put the cursor
your cursor and if you put the cursor
very close the puffer moves a little bit
very close the puffer moves a little bit
and if you put the cursor far it
and if you put the cursor far it
navigates a
lot look at that
artificial puffer
intelligence does it still kill
intelligence does it still kill
stuff oh yeah it does
look well this is
sweet I actually yeah I tweeted that
sweet I actually yeah I tweeted that
artificial puffer intelligence has been
artificial puffer intelligence has been
achieved internally
achieved internally
right that was a good one
artificial puffer
intelligence camera made this so yeah
intelligence camera made this so yeah
it's so smooth with the camera
it's so smooth with the camera
right I mean this is kind of like a
right I mean this is kind of like a
basic little
game this is a reasonable speed as well
game this is a reasonable speed as well
right little MOBA
we could do click movement click
we could do click movement click
movement would be harder to
movement would be harder to
implement
implement
um yeah click movement would be a fair
um yeah click movement would be a fair
bit harder to
implement we could do it
though but this like navigation feels
though but this like navigation feels
really smooth this actually like this
really smooth this actually like this
feels really good to play
with if we had a top down Puffer that
with if we had a top down Puffer that
like rotated in the direction as
well I don't know why these look so
well I don't know why these look so
jumpy well they're constantly modifying
jumpy well they're constantly modifying
their velocity like faster than I can I
their velocity like faster than I can I
can do it they're just acting randomly
can do it they're just acting randomly
so I guess makes sense that they're
jittery this is
smooth this is why I do this type of
smooth this is why I do this type of
stuff because like this is very
stuff because like this is very
satisfying and I'm going to tell you
satisfying and I'm going to tell you
it's going to be so much cooler as well
it's going to be so much cooler as well
when you have like these smooth moving
when you have like these smooth moving
puffers and like all of them are moving
puffers and like all of them are moving
and doing something coordinated looking
and doing something coordinated looking
it's actually going to look really
cool
attack o the puffers are too
attack o the puffers are too
strong can't get close to them oh you
strong can't get close to them oh you
know what it is it's that I clipped the
know what it is it's that I clipped the
action space yeah yeah yeah so we
action space yeah yeah yeah so we
actually have to mess with the action
actually have to mess with the action
space stuff because I can't hit them
so the funny thing about that is I
so the funny thing about that is I
actually there is already in open source
actually there is already in open source
mode I just haven't released it yet it's
mode I just haven't released it yet it's
like it's 90% done I just can't bring
like it's 90% done I just can't bring
myself to finish the thing because it
myself to finish the thing because it
requires a bunch of janky experiments
requires a bunch of janky experiments
but uh there's going to be something
but uh there's going to be something
really cool to share very
soon something that is at least as
soon something that is at least as
complicated as the finished game of this
complicated as the finished game of this
would be
but yeah it is kind of an open source
but yeah it is kind of an open source
Moe in the sense that like hey all these
Moe in the sense that like hey all these
M are in puffer lib right so like you
M are in puffer lib right so like you
may as well even if you're not going to
may as well even if you're not going to
use all the stuff in puffer lib like you
use all the stuff in puffer lib like you
may as well use puffer lib for for the
may as well use puffer lib for for the
environments and that's really all I
environments and that's really all I
care about is like if I have people
care about is like if I have people
using puffer lib for something and like
using puffer lib for something and like
enjoying it and like you know hanging
enjoying it and like you know hanging
out and giving feedback I'm happy I just
out and giving feedback I'm happy I just
want people using my stuff
and of course like you can hard Fork
and of course like you can hard Fork
stuff and vendor it or whatever but it's
stuff and vendor it or whatever but it's
it's bad etiquette and like there's not
it's bad etiquette and like there's not
really much reason to when it's being
really much reason to when it's being
actively maintained for free
okay um from
here right let's fix the AL space real
here right let's fix the AL space real
quick then we'll get it working discret
quick then we'll get it working discret
and continuous maybe a lot of things we
and continuous maybe a lot of things we
can do so
um low
1 1
1 1
0 high is equal to 1 1 and
10 let's see if this does
10 let's see if this does
it actions do not match the action
it actions do not match the action
space and
okay right because you need to have it
okay right because you need to have it
clipped it it needs to be low and high
clipped it it needs to be low and high
and then you need to clip it I think
and then you need to clip it I think
is that how it
works one
you need to clip stuff it's really
obnoxious okay
obnoxious okay
so we have the
so we have the
Papa we have uh Z
Papa we have uh Z
attack oh now it works
what was hitting
what was hitting
me can I hit you why it looks like I can
me can I hit you why it looks like I can
hit you
hit you
right I don't know how you're hitting me
right I don't know how you're hitting me
so
quickly oh I can't hit you that's why
okay yeah I can't actually hit all of
okay yeah I can't actually hit all of
them see if you go from the bottom here
them see if you go from the bottom here
you can see like they don't really hit
you can see like they don't really hit
you as much you can hit the one that's
you as much you can hit the one that's
like right above you I think but you
like right above you I think but you
can't hit the one below you
do you penalize the agents from being
do you penalize the agents from being
too jittery and is it a good idea these
too jittery and is it a good idea these
agents are not trained this is a new
agents are not trained this is a new
project I started it yesterday so these
project I started it yesterday so these
uh they are neural Nets we do have
uh they are neural Nets we do have
neural Nets running on it but um the
neural Nets running on it but um the
agents are random they're acting
agents are random they're acting
randomly so yeah they're going to Jitter
randomly so yeah they're going to Jitter
until uh either I could add a smoothness
until uh either I could add a smoothness
penalty to be fair during training might
penalty to be fair during training might
not be a terrible idea smoothness reward
not be a terrible idea smoothness reward
something like that
something like that
um or they might just learn it probably
um or they might just learn it probably
some sort of smoothness
some sort of smoothness
reward it's a fine
idea uh I would like to know why uh why
idea uh I would like to know why uh why
the attack is not working the attack
the attack is not working the attack
action is not
working Target
working Target
equals can I wait can I like hit I
equals can I wait can I like hit I
should be able to see the target change
should be able to see the target change
at least right oops
at least right oops
so let's say I go like this right
so let's say I go like this right
oops I should be able to see my
target I'm not seeing any Targets
target I'm not seeing any Targets
here am I hitting myself what the what
here am I hitting myself what the what
is going on here I think am I hitting
is going on here I think am I hitting
myself or something like
myself or something like
what is there's nothing that can damage
what is there's nothing that can damage
me here
yeah so why is action always
zero Mouse y Mouse
zero Mouse y Mouse
X
right PR
let's just print all of
let's just print all of
this reward Mouse looping
agents
agents
okay Mouse is at 50 Target is negative
okay Mouse is at 50 Target is negative
1 Target is
1 Target is
four Target is
four Target is
if I put my uh my mouse on my the own
if I put my uh my mouse on my the own
puffer fish
puffer fish
right this does not take it from
right this does not take it from
negative 1 to
negative 1 to
zero it should be zero right because I
zero it should be zero right because I
I'm not negative
one let I have a check against that but
one let I have a check against that but
no
no
I I
I I
don't
don't
um you can get some Targets in here
by mousing over random
stuff should be like especially up there
stuff should be like especially up there
yeah you can get targets
potentially h
oh wait is this
oh wait is this
backwards no
backwards no
R yeah this is correct
wait what do we have C
wait what do we have C
Min no C
Max we've got the Min
here plus the X
here plus the X
position I might be off by
position I might be off by
one is the mouse off by
one is the mouse off by
one I might have just added like a
one I might have just added like a
little off by one error let me see
little off by one error let me see
Target's Nega
1 no target appears to be negative one
1 no target appears to be negative one
everywhere
here
H yeah I just realized that yeah I
H yeah I just realized that yeah I
realized that in like surely audience I
realized that in like surely audience I
have on a reinforcement learning stream
have on a reinforcement learning stream
is not going to point that out but of
is not going to point that out but of
course it's the
internet well
done you lived up to the Internet
standard Mouse X Mouse
y I kind of just want to draw a circle
y I kind of just want to draw a circle
at Mouse X and Y
at Mouse X and Y
right uh probably super MAV will do it
right uh probably super MAV will do it
raw at Mouse x y
okay let's see
okay let's see
so okay so we can see that the the
so okay so we can see that the the
circle is
circle is
wrong and oh yeah I saw it it just it
wrong and oh yeah I saw it it just it
hit the puffer when I hit the when I had
hit the puffer when I hit the when I had
the circle over the puffer I saw it hit
the circle over the puffer I saw it hit
zero for a second
Okay so
weird how am I still off by two or by
one I don't know where there would be an
one I don't know where there would be an
off by two error
from oh there's not an off by to there's
from oh there's not an off by to there's
an off by 0.
five because it's half the
circle
circle
what I guess there's not an off by
what I guess there's not an off by
0.5 hold
0.5 hold
on
1.5 divide by tile size
I think you give it the center position
I think you give it the center position
right
it's plus tile size over two is the
it's plus tile size over two is the
corner plus tile size over
corner plus tile size over
two maybe this does it right if you div
two maybe this does it right if you div
it uh one
one maybe don't drop the pupper in the
one maybe don't drop the pupper in the
Okay so
Okay so
if you have your cursor on
here is it plus
here is it plus
two man I can't freaking
two man I can't freaking
tell I want to have the cursor be
tell I want to have the cursor be
I mean maybe I need to discretize after
I mean maybe I need to discretize after
all yeah but it's not plus
all yeah but it's not plus
two
it's why is the X1 the X1 appears
it's why is the X1 the X1 appears
correct and then the Y is wrong
correct and then the Y is wrong
right I messed that up
somehow look if I'm on this tile
somehow look if I'm on this tile
here oh no it's half tile off
here oh no it's half tile off
it's very
weird
um this is
awkward Target X Target y right
can I do it based off the
camera I think I could
camera I think I could
right so
so the camera Target
position do you add the
target I think so
right and then let's
right and then let's
do mouse X is going to
do mouse X is going to
be into of
be into of
the ra maybe this does
it oh
it oh
yeah
yeah
so this is pretty much spoton right as
so this is pretty much spoton right as
soon as you go to the next tile it flips
soon as you go to the next tile it flips
perfect so and if I put this cursor on
perfect so and if I put this cursor on
the puffer it does not do
the puffer it does not do
anything uh if I put the cursor
anything uh if I put the cursor
here ah here's where it says the puffer
here ah here's where it says the puffer
cursor must be so if I put it on the
puffer
puffer
no it's pretty much accurate
no it's pretty much accurate
right it says that I'm still on this
right it says that I'm still on this
tile and if I go over one I'm on this
tile and if I go over one I'm on this
tile so if this is accurate enough can I
tile so if this is accurate enough can I
kill stuff with
this looks like
it but I should be able to put my cursor
it but I should be able to put my cursor
on stuff right
like Target
19 Target is negative 1
19 Target is negative 1
7 so you're seeing stuff in
here I mean it's hard to catch them
here I mean it's hard to catch them
because they're like you know they're
because they're like you know they're
fiddly
I can't tell if I like how this is
working fact that you can still attack
this did I just do damage to it or did I
this did I just do damage to it or did I
not I can't tell because the cursor is
not I can't tell because the cursor is
like you can't tell what tile the thing
like you can't tell what tile the thing
is on
right well the agents can I just can't
right well the agents can I just can't
so I'll just probably have to implement
so I'll just probably have to implement
some like nearest like some like Grace
some like nearest like some like Grace
bubble or whatever on the cursor like
bubble or whatever on the cursor like
some click off Grace thing that's
fine good enough for the time being um I
fine good enough for the time being um I
I got to make myself a shake real quick
I got to make myself a shake real quick
so I'm going to commit this up I'm going
so I'm going to commit this up I'm going
to go make myself a shake and then I'm
to go make myself a shake and then I'm
going to be right back and we'll finish
going to be right back and we'll finish
uh some we'll figure out a couple other
uh some we'll figure out a couple other
fun things to do today with this
oops see moobile
and I I'll leave this up running as well
and I I'll leave this up running as well
because I may as
well all right be right
back
e
e
e
e
e
e
e
e
e
e
e
e e
okay we are
okay we are
back um I've decided what the next thing
back um I've decided what the next thing
is going to be I've got a little over an
is going to be I've got a little over an
hour we're going to implement the first
hour we're going to implement the first
skill in this game
skill in this game
we're going to implement the first
skill oops
skill oops
ah come on puffers
stop oh no I forgot that it's adding all
stop oh no I forgot that it's adding all
these frames to a
these frames to a
buffer okay
okay so we're gonna add the first skill
okay so we're gonna add the first skill
to the puffer game uh the first skill is
to the puffer game uh the first skill is
going to be puffer blast it's very
creative add puffer blast to the
game ready for puffer blast okay um
game ready for puffer blast okay um
puffer blast we need to add a two
puffer blast we need to add a two
to
to
this four
here and this is going to
be zero
one okay
a
a
skill
zero if
zero if
key uh space is
key uh space is
fine a scills equal to
fine a scills equal to
one and we where's the
action right here
action right here
skill
how we going to do this let's
do well initially we're just going to
do well initially we're just going to
make something
simple yeah
I should make like an attack function
I should make like an attack function
probably I'm going to just need to call
probably I'm going to just need to call
it a few times
uh yeah needs to be a attack like
this how do we do this attack
this whole thing right is attack
there whatever we'll do like this maybe
there whatever we'll do like this maybe
for now
and uh let's see if we can get this to
and uh let's see if we can get this to
work and then if we can get this to
work DX
okay does the attack function still work
okay does the attack function still work
yes it does that's very nice
nice
nice
skill
skill
attack
Sid
Sid
okay now what we do is
Target uh we
Target uh we
do
do
int r no int
int r no int
y
y
int target. y
int target. y
then we
do
yeah
yeah
int
int
D
D
Dy
DX WI range1
two and what we're going to do we do
attack PID
attack PID
equals PID
is1 no you can just do Pit is equal to
is1 no you can just do Pit is equal to
self. PID
map and attack right
Target PID this is Target
Target PID this is Target
PID so we're just going to make a little
PID so we're just going to make a little
simple
AOE this will be see that void
we'll do skill attack beant skill
we'll do skill attack beant skill
attack beant skill
attack use
skill okay and we'll do
cast to Bull and then we'll
cast to Bull and then we'll
do uh like this and we'll just say
do uh like this and we'll just say
greater than
greater than
0.5 it's greater than 0.5 you use the
0.5 it's greater than 0.5 you use the
skill
skill
for
for
continuous
continuous
and if
skill
skill
else attack
so we'll see if we can strike for
so we'll see if we can strike for
massive
damage okay so if I hold down
Q I'm having difficulty getting close to
Q I'm having difficulty getting close to
the puffers to even
see really should increase the HP huh
oops Max
Health let's do the player max health is
Health let's do the player max health is
going to be like 100
damage damage
damage damage
now
damage into
damage into
attack then damage is going to be
attack then damage is going to be
like lots 30 damage lots of damage
like lots 30 damage lots of damage
damage and then this one is going to
be where is
it like one
okay now we
have the
puffer it's done lots of damage to
puffer it's done lots of damage to
me can we do
me can we do
q
q
no they do damage very quickly though to
no they do damage very quickly though to
you don't they
let's do um let's make Dr and DC a
let's do um let's make Dr and DC a
little bit bigger so we can just tell a
little bit bigger so we can just tell a
little
easier skill attack
what so like
what so like
three four three
three four three
four oops we got to
four oops we got to
recompile so basically now
recompile so basically now
um this should just be blasting stuff
boom I can't tell if it's using the uh
boom I can't tell if it's using the uh
the blast thing I suspect it's not
the blast thing I suspect it's not
because they're not just like getting
because they're not just like getting
deleted so let's just
see oh I'm holding the wrong key I I
see oh I'm holding the wrong key I I
just instinctively held Q instead of the
just instinctively held Q instead of the
key that I B
okay oh yeah this is you can see the
okay oh yeah this is you can see the
damage here right it's
damage here right it's
like but they're using puffer strike
like but they're using puffer strike
back on me that's why I'm taking so much
back on me that's why I'm taking so much
damage that's so
damage that's so
funny so like yeah you get just
funny so like yeah you get just
absolutely shredded by this
absolutely shredded by this
thing yeah like you can see the like the
thing yeah like you can see the like the
big chunk of damage that's the puffer
strike uh does this let
strike uh does this let
me is my tower out of bounds okay I have
me is my tower out of bounds okay I have
to be careful with the bounds of the map
to be careful with the bounds of the map
I haven't solved that yet good to
know oh I guess not
wait Target
wait Target
doy
H the skill attack does uh doesn't seem
H the skill attack does uh doesn't seem
to work
to work
um -3 to
um -3 to
4 PID
4 PID
map y + Dy and X+
DX let's see was fine
right so when you do attack
oh this target
right h
how did this work
how did this work
before get player
OB PD index like
this player obs
what I do
wrong what I do
wrong oh this this is not uh yeah this
wrong oh this this is not uh yeah this
is not how it's supposed to work here
is not how it's supposed to work here
this
is yeah okay so I have to refactor stuff
is yeah okay so I have to refactor stuff
a little
bit Let's
do let's take like these lines back put
do let's take like these lines back put
these back into the loop right
these back into the loop right
and we'll do
and we'll do
like what is it
Target yeah let's put this up here
okay now we have the target PID
and now instead of attack we can just do
and now instead of attack we can just do
Target PID Target
Target PID Target
PID and Target PID now we refactor the
PID and Target PID now we refactor the
skill to take into account the target
skill to take into account the target
PID um so this is
PID um so this is
now was it Target PID
don't need this target thing
anymore I do need uh Y and X though
anymore I do need uh Y and X though
right I do need the player OB On Target
right I do need the player OB On Target
pit like
this and then you get Y and X right d y
this and then you get Y and X right d y
and DX
okay and then we do attack the target
okay and then we do attack the target
PID PID Target
PID PID Target
PID this is Target PID
PID this is Target PID
damage get this is now do not need this
anymore see death player star
anymore see death player star
player and then we do the target here
uh is no longer
needed but we do
need player star Target does not need to
need player star Target does not need to
be this and we need Tower Star
be this and we need Tower Star
Tower okay so now we have Target
Tower okay so now we have Target
Tower maybe this is enough let's
check even with the this file being
check even with the this file being
garbage by the way it's only 500
lines even with this file being complete
garbage all right let's see do we get uh
garbage all right let's see do we get uh
any attacks can I attack this
any attacks can I attack this
thing ah it's not letting me hit it and
thing ah it's not letting me hit it and
it's very very slowly killing me what
it's very very slowly killing me what
about if I hit space on it nope so I do
about if I hit space on it nope so I do
not do damage and it very slowly kills
not do damage and it very slowly kills
me let's see why that
is okay so you take Target pit
in
in
turn we can now unindent this stuff
you get the player from the target
pit how do I pass Target pit
here you get player
here you get player
OB and you get the pit from that that
OB and you get the pit from that that
looks is that correct
looks is that correct
wait not from attack
wait not from attack
right you know this is is correct cuz
right you know this is is correct cuz
this is attack is the index into your
this is attack is the index into your
observation you get the target from the
observation you get the target from the
observation you get the pit from the
observation you get the pit from the
target observation and then you pass the
target observation and then you pass the
target pit like
target pit like
this so that actually looks correct to
me Target pits less than num
me Target pits less than num
agents all this
agents all this
player start
Target get player
Target get player
PID uh did I give it the wrong pit to
PID uh did I give it the wrong pit to
begin
begin
with hold
with hold
on now agent idx is the right pit isn't
on now agent idx is the right pit isn't
it agent idx is the right
it agent idx is the right
pit weird
weird that it doesn't wait I just saw
weird that it doesn't wait I just saw
the target is
the target is
10 so it's getting
Target equal to
10 which is a PID right
so if I hit where is it attack
oops
okay
okay
so now
so now
we can see the target is
we can see the target is
10 it's attacking five attacking three
10 it's attacking five attacking three
attacking five attacking
attacking five attacking
three it's oscillating all over the
three it's oscillating all over the
place which is very
weird well could be this puffer right
weird well could be this puffer right
here
here
that's screwing it
that's screwing it
up but um if even if I go like way over
up but um if even if I go like way over
here
here
right target
is targets netive one targets
10 attacking
10 attacking
five five it looks like it's attacking
five five it looks like it's attacking
five okay um
so it's it is actually working but
it's I think it is wor is it does like
it's I think it is wor is it does like
the other puffers die when I do this
the other puffers die when I do this
yeah they actually do die very quickly
yeah they actually do die very quickly
it looks
it looks
like yeah look at that you can see at
like yeah look at that you can see at
the bottom of the screen so for some
the bottom of the screen so for some
reason the pit is wrong
how do I mess up the
PID
PID
so get player
OBS and then when you're attacking you
OBS and then when you're attacking you
get the
get the
target attacking five attacking five
target attacking five attacking five
attacking
attacking
five we know that's not the target
five we know that's not the target
pit
pit
because uh five is not the pit of a
because uh five is not the pit of a
tower so that's totally
tower so that's totally
wrong so of course it's attacking
wrong so of course it's attacking
something different that's not what it
something different that's not what it
should
should
be the question is where does five come
from five comes from
get player OB on
attack
attack
if agent idx is
zero we'll do
zero we'll do
this darn debugging
okay so raw attack is now
okay so raw attack is now
zero raw attack is still zero they can't
zero raw attack is still zero they can't
see it
see it
right raw attack I just saw
right raw attack I just saw
two two on this puffer Maybe
hold
hold
on and then raw attack is
on and then raw attack is
zero or
one ra attack is
one uh which makes
sense let
sense let
see attack is zero and then if I go here
see attack is zero and then if I go here
I think if you go above it it's one
I think if you go above it it's one
right yeah so the reason is that um it's
right yeah so the reason is that um it's
Computing a window of observations
Computing a window of observations
around the puffer and the puffer is in
around the puffer and the puffer is in
the center so if you
the center so if you
start up here this will be zero here but
start up here this will be zero here but
uh if you're up here it'll be
uh if you're up here it'll be
one yeah that's how that
one yeah that's how that
works um and that's actually fine
because you get the player
because you get the player
OB and then you give it the
OB and then you give it the
PID but then why do you get the wrong
PID but then why do you get the wrong
pit out of
pit out of
this why do you get do you get your own
this why do you get do you get your own
pit
pit
maybe five could be my own pit right no
maybe five could be my own pit right no
no five is not my own pit CU my own pit
no five is not my own pit CU my own pit
is zero your puffer
is zero your puffer
zero ah
dang I don't know what's wrong with
this this whole pit data structure is
this this whole pit data structure is
really obnoxious as
well for
okay
I would like this to be fixed but I am
stuck
wait well this one is
wait well this one is
wrong but this one looks like it should
wrong but this one looks like it should
be right
Target PID less than numb agents you get
Target PID less than numb agents you get
the target as Target
PID attacking Target
PID attacking Target
pit Target pit five
Okay so
it's very weird that I'm actually seeing
it's very weird that I'm actually seeing
attack numbers in
here there should absolutely not be any
here there should absolutely not be any
attack numbers in
here
here
attack right
attack right
attacking yeah this is only printed for
attacking yeah this is only printed for
pit
pit
zero so
oh well this one is because let's fix
oh well this one is because let's fix
this one this one needs to be get player
this one this one needs to be get player
not get player
not get player
OB um
OB um
and you know this is not even going to
and you know this is not even going to
necessarily work because the target
pit
pit
wait no it is get player OB
right you get the player op from the
right you get the player op from the
from here in order to get this target
from here in order to get this target
object and then you get this PID
map over which you can check coordinates
map over which you can check coordinates
I
guess maybe this will tell me
so we'll do
so we'll do
um
um
print skill
print skill
attacking
y Target Target
pit and we'll go just use this
pit and we'll go just use this
from I don't know wherever right
if P
zero come on I want to have this skill
zero come on I want to have this skill
thing done today the very least
okay so we have
okay so we have
reward and if I go up
here you can see
here you can see
the
the
oops 71
Target negative
one okay this is very
one okay this is very
odd if
I just doesn't attack does not apply
I just doesn't attack does not apply
attacks
something is
weird I just can't figure out what the
weird I just can't figure out what the
heck this is I'm like what would
heck this is I'm like what would
actually tell me for sure
actually tell me for sure
um what would tell me for sure what's
um what would tell me for sure what's
going
wrong there's really not much cuz like
wrong there's really not much cuz like
the stupid state based
the stupid state based
like this PID matching thing is so
obnoxious I had the attack working
obnoxious I had the attack working
before as well so I don't know what
before as well so I don't know what
happened like what did I do with it to
happened like what did I do with it to
mess it up actually that's a better
mess it up actually that's a better
question let's just go check the last
question let's just go check the last
commit and see what I changed that
commit and see what I changed that
probably I should have done that a while
probably I should have done that a while
ago right
perfect time to remind you to start the
perfect time to remind you to start the
puffer helps me out a whole
bunch puffer growth is very
important
for e
should be in
here
so Target is get player
so Target is get player
OB PID attack
OB PID attack
Target pit is target.
Target pit is target.
PID we on attack here agent idx Target
PID we on attack here agent idx Target
PID agent idx Target
PID agent idx Target
pit
pit
then we
then we
have player is get player of my own
have player is get player of my own
pit Target
pit Target
is Target PID right get player Target
is Target PID right get player Target
PID the track
Target
Target
PID
PID
yeah now where do I get the
Target right
Target right
here Target is get
here Target is get
player Target
player Target
ped and then this is the same right
ped and then this is the same right
target team Target
target team Target
Health SP Target pit
is it something with the way I like
is it something with the way I like
changed passing observations or
changed passing observations or
something
something
weird I mean passing actions to this
weird I mean passing actions to this
thing cuz I'm not seeing
it I mean this is
it I mean this is
so technically I did this
so technically I did this
above I put this up here I think right
above I put this up here I think right
would make a
would make a
difference oh does it no no it doesn't
difference oh does it no no it doesn't
doesn't make a
difference get player
difference get player
OBS PID and
OBS PID and
attack where's attack
yeah so we have
yeah so we have
attack which is
attack which is
from in agent can Yep this is the exact
from in agent can Yep this is the exact
same
thing yeah
players get player agent idx and I pass
players get player agent idx and I pass
agent
agent
idx it pass the target
idx it pass the target
PID to
this play get
this play get
pit player star Target
pit player star Target
Tower Target get player
Tower Target get player
this this really looked correct I don't
this this really looked correct I don't
know what the heck is wrong with
know what the heck is wrong with
it uh and there way there's way too much
it uh and there way there's way too much
printing going on as well let me let me
printing going on as well let me let me
see if I can just like thin down the
see if I can just like thin down the
print so I can maybe tell what's going
on so like print this is everything's
on so like print this is everything's
getting printed is too much too
getting printed is too much too
much
much
yeah and
okay looping agents raw attack is zero
raw Attack One
okay so I should be able to see the PID
okay so I should be able to see the PID
that I'm attacking whoops from
this they should at least clean it up
okay so
Target if I go over
here now I'm on target four
here now I'm on target four
right why is the target changing
right why is the target changing
there's absolutely no reason the target
there's absolutely no reason the target
should be
changing
right attack is zero
wait
wait
oh my
oh my
God damn
God damn
it right
it right
here code
here code
hygiene freaking code
hygiene what I get for hacking stuff
hygiene what I get for hacking stuff
fast for stream it's like you go fast
fast for stream it's like you go fast
and then you go slow because says you
and then you go slow because says you
wrote crap
wrote crap
code so we'll see I might just start by
code so we'll see I might just start by
cleaning this up for a few hours
tomorrow okay beautiful so now we have
tomorrow okay beautiful so now we have
the target
the target
correct does it attack this
correct does it attack this
thing yep it attacks this
thing yep it attacks this
thing um we can very very slowly attack
thing um we can very very slowly attack
it oops got to get ourselves killed here
it oops got to get ourselves killed here
or we can very very quickly
or we can very very quickly
well they're the thing is they're using
well they're the thing is they're using
the skill back on us so
um and we're getting out of bounds
um and we're getting out of bounds
here let's
here let's
see skill
attack and get player
OB Target
ID should tell me the Target ID
ID should tell me the Target ID
shouldn't it Target is
13 right so this get player OB is um
this is not what we need it's just get
this is not what we need it's just get
player Target
PID now this should
work and we'll add uh we'll add one more
work and we'll add uh we'll add one more
much easier to code skill than
this and then end
this okay so I'm not getting hit here
right out of bounds
right out of bounds
still oh right because the uh the target
still oh right because the uh the target
pit is a tower in this
pit is a tower in this
case
o Target pit is a
o Target pit is a
tower for
so first of all
so first of all
if Target
if Target
PID
one target
player
player
okay we get y we get
okay we get y we get
X try
X try
this garbage code
it's very difficult to actually hit the
it's very difficult to actually hit the
thing isn't it
thing isn't it
let me
see okay so I can hit it but I can't use
see okay so I can hit it but I can't use
the
spell
spell
heck get
heck get
Tower this stupid auto correct is just
Tower this stupid auto correct is just
bad sometimes super Maven needs to
bad sometimes super Maven needs to
update the
update the
model to be god tier just send me good
model to be god tier just send me good
code model that does a good
thing uh I should be dead right yeah
thing uh I should be dead right yeah
okay it's it's basically
dead okay we deleted that thing because
dead okay we deleted that thing because
we have the burst on
we have the burst on
it can we uh burst anything
it can we uh burst anything
boom yeah we can burst stuff I can tell
boom yeah we can burst stuff I can tell
we're we're doing damage here can we hit
we're we're doing damage here can we hit
uh one of these towers
like boom Oh yeah I just saw it we
like boom Oh yeah I just saw it we
deleted both of them at once okay
deleted both of them at once okay
great second puffer
skill C
skill C
def
def
skill heal
def player
oh let use skill
use skill attack use skill
heal okay and we need um need a trigger
heal okay and we need um need a trigger
for this right
for this right
is going to
be pack
be pack
skill skill
skill skill
attack skill
attack skill
heill skill
heill skill
attack L this should be L
attack L this should be L
Shi one
Shi one
okay and then we will add into the
okay and then we will add into the
attacks we'll
attacks we'll
add just watched your thesis defense
add just watched your thesis defense
came here to tune in thank you very much
came here to tune in thank you very much
yeah a lot of people have uh come from
yeah a lot of people have uh come from
there so uh this is now me graduated
there so uh this is now me graduated
live trying to fix the total mess that
live trying to fix the total mess that
RL is in by doing ultra high perf Dev uh
RL is in by doing ultra high perf Dev uh
if you just saw the stream the thing
if you just saw the stream the thing
that we did a couple weeks ago I built
that we did a couple weeks ago I built
this this is a 4096 snake environment
this this is a 4096 snake environment
that runs at 14 million uh steps per
that runs at 14 million uh steps per
second on one CPU core and trains it a
second on one CPU core and trains it a
million steps per second on one GPU so
million steps per second on one GPU so
it's going to be a lot of ultra high
it's going to be a lot of ultra high
performance Sim it's a lot of like cool
performance Sim it's a lot of like cool
RL infrastructure
RL infrastructure
Dev hold on let me find another cool
Dev hold on let me find another cool
thing got to sell the new
thing got to sell the new
viewers so here's uh a sweep that we
viewers so here's uh a sweep that we
have running right now with uh very
have running right now with uh very
fancy hyper parameter tuning this has
fancy hyper parameter tuning this has
run probably like 80 billion steps worth
run probably like 80 billion steps worth
of training by now overnight over the
of training by now overnight over the
last day uh so yeah a lot of just fixing
last day uh so yeah a lot of just fixing
RL Dev live and if you like what you see
RL Dev live and if you like what you see
stick around and of course uh feed the
stick around and of course uh feed the
puff or a star helps me out a
puff or a star helps me out a
bunch that's the pitch
currently building a little MOA for uh
currently building a little MOA for uh
reinforcement learning Dev reinforcement
reinforcement learning Dev reinforcement
learning
experiments skill attack skill
heal uh okay
let's go
let's go
here right
and let's see if this renders
and let's see if this renders
now no key lshift okay so it's a
now no key lshift okay so it's a
different key code
e
shift okay so there's no uh
shift okay so there's no uh
key shift
apparently I mean I can just do q and E
apparently I mean I can just do q and E
right or q and
right or q and
W this can be Q
W this can be Q
can be
W key
q
w could not broadcast so I have to
w could not broadcast so I have to
update this space I
update this space I
think action
think action
space space
two
five okay now we get to play the puffer
five okay now we get to play the puffer
Mo a little bit so oh there we go that's
Mo a little bit so oh there we go that's
the full heal spell we can burst this
the full heal spell we can burst this
yep we can just completely wreck this if
yep we can just completely wreck this if
we press uh w we full
we press uh w we full
heal we can delete that we can
heal we can delete that we can
heal uh what if we just press like Q
heal uh what if we just press like Q
Once on This
Once on This
oh we died because we were not fast
oh we died because we were not fast
enough
cool
okay solid
okay solid
enough basics of a puffer mooba coming
enough basics of a puffer mooba coming
along got our
along got our
Towers we can heal we can hit this Tower
Towers we can heal we can hit this Tower
yeah this is like reasonable
I mean this is kind of already to the
I mean this is kind of already to the
point where um if I were to like tune
point where um if I were to like tune
this a little bit we could probably even
this a little bit we could probably even
get some cool behaviors out of it of
get some cool behaviors out of it of
course it's still incredibly incredibly
course it's still incredibly incredibly
basic but um not bad for two days worth
basic but um not bad for two days worth
of Dev I'd
of Dev I'd
say the movement feels really good like
say the movement feels really good like
the fact that I have uh the Excel like
the fact that I have uh the Excel like
so you do little close movements like
so you do little close movements like
this and then you can go fast that feels
this and then you can go fast that feels
really good
and of course we can do like classes and
and of course we can do like classes and
stuff maybe so like I could make the the
stuff maybe so like I could make the the
heel be like an AOE that only one of
heel be like an AOE that only one of
them has or something and we'll add cool
them has or something and we'll add cool
Downs there's lots of cool stuff we can
Downs there's lots of cool stuff we can
do from here uh codes a mess definitely
do from here uh codes a mess definitely
needs to be cleaned up
let's make a commit while it
works uh basic skills
so many places we could go from
here I don't want to start on the
here I don't want to start on the
minions until much
minions until much
later I want to have like a relatively
later I want to have like a relatively
complete game without obviously the
complete game without obviously the
minions being a major major thing just
minions being a major major thing just
cuz they're going to be a pain to
cuz they're going to be a pain to
implement
let me think we could
do classes are also be tricky to be
fair classes will also be
tricky I mean we don't have like the
tricky I mean we don't have like the
armor Health like all like the uh the
armor Health like all like the uh the
main stuff that would make them truly
distinct we also don't have cooldowns on
distinct we also don't have cooldowns on
stuff or a UI we're missing all of
that um let me think if there's anything
that um let me think if there's anything
cool I can do in the next 15 20
minutes for
this it's kind of hard to add like
this it's kind of hard to add like
attack animations right you know
I mean I could you know what I want to
I mean I could you know what I want to
do is I just want to look through the
do is I just want to look through the
data
data
structures um so I can think about if
structures um so I can think about if
there's a better way of doing stuff that
there's a better way of doing stuff that
might be that might be a useful thing to
might be that might be a useful thing to
do um I'd also like to record a quick
do um I'd also like to record a quick
little demo for the
little demo for the
uh for Twitter let's record a quick
uh for Twitter let's record a quick
little
little
demo MOA gif
demo MOA gif
FPS
FPS
is uh 10 is fine no 20 I think we do 20
FPS and this is only 5
Seconds 50
Seconds 50
seconds 500 it'll be
it's not on screen hold on it's not even
it's not on screen hold on it's not even
on
screen for
okay I think that's the full demo let's
okay I think that's the full demo let's
see if we get a nice gift out of that
very
nice hello
welcome just got a nice demo of
welcome just got a nice demo of
this looks like it
works let's post this and go over some
works let's post this and go over some
uh some data structures in the project
uh some data structures in the project
so I can figure out some stuff to do
so I can figure out some stuff to do
with it tomorrow
oops oh yeah we got lots of cool
oops oh yeah we got lots of cool
environments around here got I have this
environments around here got I have this
one as
one as
well there
I have a hard time solving leak code and
I have a hard time solving leak code and
I'm a beginner in coding can you give me
I'm a beginner in coding can you give me
an advice please
an advice please
uh I am terrible at leak coding because
uh I am terrible at leak coding because
I've never bothered grinding it because
I've never bothered grinding it because
I've never done that type of job
I've never done that type of job
interview
interview
um solving leak code is absolutely
um solving leak code is absolutely
completely different from the ability to
completely different from the ability to
build stuff leak code is what you do for
build stuff leak code is what you do for
job
job
interviews uh in like General software
interviews uh in like General software
engineering um really the only thing you
engineering um really the only thing you
can do is go study basic data structures
can do is go study basic data structures
and algorithms and then do a bunch of
and algorithms and then do a bunch of
those problems because they're not the
those problems because they're not the
type of problem that anybody like nobody
type of problem that anybody like nobody
is solving well almost nobody is solving
is solving well almost nobody is solving
those problems without having seen them
those problems without having seen them
before like they literally will show up
before like they literally will show up
to the job interview having seen every
to the job interview having seen every
possible iteration of all of those
possible iteration of all of those
problems
it's a little bit better than this demo
it's a little bit better than this demo
isn't
it let's look at some data structures
it let's look at some data structures
for this uh this project before I close
for this uh this project before I close
out for
today you give me suggestions about
today you give me suggestions about
starting with coding if you want to
starting with coding if you want to
actually learn how to build stuff
actually learn how to build stuff
and not hate it um I suggest that you
and not hate it um I suggest that you
pick very very simple basic projects um
pick very very simple basic projects um
like with your ability okay if you're
like with your ability okay if you're
asking me what language I'm going to
asking me what language I'm going to
assume very simple
assume very simple
um you know if you're just getting into
um you know if you're just getting into
stuff python is a nice starting point
stuff python is a nice starting point
um it doesn't teach you a lot of the
um it doesn't teach you a lot of the
fundamental things that you will need
fundamental things that you will need
later on um even if you are working in
later on um even if you are working in
py on but it's it's a nice easy starting
py on but it's it's a nice easy starting
point and it will let you build very
point and it will let you build very
basic projects very soon
um there like I guess some cool stuff I
um there like I guess some cool stuff I
remember like one of the really basic
remember like one of the really basic
projects I would do is you could
projects I would do is you could
Implement image filters image filters
Implement image filters image filters
will teach you like basic loops and
will teach you like basic loops and
basic uh data manipulation and they're
basic uh data manipulation and they're
kind of cool cuz you can make like uh
kind of cool cuz you can make like uh
you know an edge filter in like 10 lines
you know an edge filter in like 10 lines
of code or you can Implement stuff like
of code or you can Implement stuff like
that
that
yeah python has a lot of learning
yeah python has a lot of learning
resources and it's the best supported
resources and it's the best supported
things by llms so you can probably ask
things by llms so you can probably ask
them for like advice kind of like a
them for like advice kind of like a
personalized tutor as long as stuff
personalized tutor as long as stuff
doesn't get too complicated um I think
doesn't get too complicated um I think
that that's probably a really good use
that that's probably a really good use
case for
it but yeah the content here
it but yeah the content here
is the content here is um
this is like brand new RL
research I mean I started when I started
research I mean I started when I started
programming I started programming by
programming I started programming by
like making Minecraft mods had no idea
like making Minecraft mods had no idea
what I was doing but it was fun so like
what I was doing but it was fun so like
I did a lot of it right and then after
I did a lot of it right and then after
that I started making my own little
that I started making my own little
projects I don't know I made like a
projects I don't know I made like a
couple little cool combat
couple little cool combat
simulators um I did a couple like really
simulators um I did a couple like really
basic AI things and then once I sort of
basic AI things and then once I sort of
got the ropes of that I started doing a
got the ropes of that I started doing a
basic AI research and then I got better
basic AI research and then I got better
at it and I started you know actually
at it and I started you know actually
doing cool stuff from
there I mean I can give you a couple
there I mean I can give you a couple
things the thing I'm using right now I
things the thing I'm using right now I
really like um rib for graphics if you
really like um rib for graphics if you
want to do anything with Graphics really
want to do anything with Graphics really
really simple and easy
really simple and easy
Library very
nice which coding Industries will solve
nice which coding Industries will solve
AI I mean shortterm or longterm right
AI I mean shortterm or longterm right
um like long-term nothing if you think
um like long-term nothing if you think
AI is going to solve everything but I
AI is going to solve everything but I
fail to see how there's a world in which
fail to see how there's a world in which
programming is not valuable and there
programming is not valuable and there
are other things that are valuable like
are other things that are valuable like
I think that programming is going to be
I think that programming is going to be
like one of the last things to actually
like one of the last things to actually
be fully
be fully
replaced like by the time programming is
replaced like by the time programming is
automated like programming solves
automated like programming solves
everything so that just means everything
everything so that just means everything
is
solved I started brain dead copying
solved I started brain dead copying
tensorflow 1.0 tutorials not knowing
tensorflow 1.0 tutorials not knowing
what the was happening oh man I
what the was happening oh man I
started you had it easy in tensorflow
started you had it easy in tensorflow
1.0 let me tell you back in my day we
1.0 let me tell you back in my day we
had Cafe 1.0 where you wrote These God
had Cafe 1.0 where you wrote These God
awul schema files or whatever like these
awul schema files or whatever like these
config files and it like came up with
config files and it like came up with
the neural net for you and you couldn't
the neural net for you and you couldn't
edit it or do anything with
it wait let me let me find let me find a
it wait let me let me find let me find a
fun sci-fi picture
yeah okay so by the time AI solves all
yeah okay so by the time AI solves all
of coding I think that uh civilization
of coding I think that uh civilization
looks like this so I think you're good
web development is probably going to be
web development is probably going to be
the first one getting
replaced I also tried to write a neural
replaced I also tried to write a neural
network in Java it was not a fun
network in Java it was not a fun
time
uh well if you want the really the
uh well if you want the really the
really amusing take is like you don't
really amusing take is like you don't
need AI replace the majority of
need AI replace the majority of
programmers right like the like the
programmers right like the like the
majority of programmers can be replaced
majority of programmers can be replaced
by simply not having them because
by simply not having them because
they're doing negative work
they're doing negative work
um yeah like you need to be when you're
um yeah like you need to be when you're
like working on a larger project or even
like working on a larger project or even
a medium-sized project like you need to
a medium-sized project like you need to
know what you're doing to actually be
know what you're doing to actually be
adding value to it um so that's the real
adding value to it um so that's the real
like you know what when will AI replace
like you know what when will AI replace
things um yeah
web dev is a nightmare I actually I've
web dev is a nightmare I actually I've
done zero web dev in my time because I
done zero web dev in my time because I
just I have a very low tolerance for
just I have a very low tolerance for
really terrible uh programming Stacks I
really terrible uh programming Stacks I
probably should do some so I can put all
probably should do some so I can put all
these cool environments on online
these cool environments on online
somehow
somehow
but I I can't deal with the stack the
but I I can't deal with the stack the
web stack gets worse every year it's
web stack gets worse every year it's
ridiculous somehow it gets worse every
year I was going to look at data
year I was going to look at data
structures
structures
here hey it's cool that I see four on
here hey it's cool that I see four on
Twitch so I guess there is some
Twitch so I guess there is some
discoverability there that's kind of
discoverability there that's kind of
cool
cool
I haven't even advertised anything with
I haven't even advertised anything with
the twitch that's kind of
the twitch that's kind of
nice
um so the thing what do you consider
um so the thing what do you consider
webd I picked your building WordPress
webd I picked your building WordPress
websites for people with minimal
websites for people with minimal
interaction with
plugins to be webbed
plugins to be webbed
of oh I don't know it's
you never make an the thing is you never
you never make an the thing is you never
make an engine to like
make an engine to like
do the thing that you want like the
do the thing that you want like the
engine for building your custom website
engine for building your custom website
is called code right that's that's the
is called code right that's that's the
engine for building your website Ian you
engine for building your website Ian you
can paper over it with like a whole
can paper over it with like a whole
bunch of things to write specific
bunch of things to write specific
code but it's really hard to replace
code but it's really hard to replace
just writing general purpose code
it's like it's like asking like when
it's like it's like asking like when
will you know here it's like asking when
will you know here it's like asking when
will uh AI replace math or English or
will uh AI replace math or English or
something
right or when will scratch replace you
right or when will scratch replace you
know meain actual languages it's yeah
and I wish it would replace everything
and I wish it would replace everything
because then you know if it replaced
because then you know if it replaced
everything then I wouldn't have to do
everything then I wouldn't have to do
all this I wouldn't have to work on all
all this I wouldn't have to work on all
these things everything would be solved
these things everything would be solved
and that would be great
I see a lot of people on uh on Twitter
I see a lot of people on uh on Twitter
working with these like these crazy AI
working with these like these crazy AI
workflows where they're basically just
workflows where they're basically just
like telling the AI fix the bugs yeah
like telling the AI fix the bugs yeah
there are more bugs fix those yep keep
there are more bugs fix those yep keep
fixing those and like they keep just
fixing those and like they keep just
hitting enter until it eventually kind
hitting enter until it eventually kind
of works and they have like some giant
of works and they have like some giant
garbage heap of code written by whatever
garbage heap of code written by whatever
llm and it that just does not sound like
llm and it that just does not sound like
a fun
time yeah it's
time yeah it's
nuts I mean there's this demo
nuts I mean there's this demo
online yeah like right how could you
online yeah like right how could you
possibly maintain that I mean I say that
possibly maintain that I mean I say that
having written this complete garbage
having written this complete garbage
script today but like I'm not it's not
script today but like I'm not it's not
going to stay this way it's getting
going to stay this way it's getting
refactored and it's going to get
refactored and it's going to get
refactored way better than llm could
refactored way better than llm could
refactor it right
the thing that's happened in AI that's
the thing that's happened in AI that's
really obnoxious know was having been in
really obnoxious know was having been in
this space for years like you saw all
this space for years like you saw all
the shields in web2 right all like the
the shields in web2 right all like the
Shields and scammers in web2 and then
Shields and scammers in web2 and then
they moved over to crypto and nfts and
they moved over to crypto and nfts and
like web 3 and like all these various
like web 3 and like all these various
different things oh yeah it was iot at
different things oh yeah it was iot at
one point right and now they've all
one point right and now they've all
moved into AI so like there are serious
moved into AI so like there are serious
people in AI that are like having fun
people in AI that are like having fun
spec ulating about where it might go
spec ulating about where it might go
right but then there are also a bunch of
right but then there are also a bunch of
shs that are like oh it's going to like
shs that are like oh it's going to like
everything is going to be solved next
everything is going to be solved next
year there'll be no programmers in two
year there'll be no programmers in two
years like don't listen to those
years like don't listen to those
people they're
nuts and again I would very much like it
nuts and again I would very much like it
if AI did solve everything I'd have a
if AI did solve everything I'd have a
lot less work to have to do right
I could come back from my run in the
I could come back from my run in the
morning and go take a 4our nap instead
morning and go take a 4our nap instead
of sitting here and writing code for
of sitting here and writing code for
four hours that would be
nice I'm trying to think if there's a
nice I'm trying to think if there's a
way to design this
way to design this
thing without needing
pids if you think about it the PID
pids if you think about it the PID
system is really just pointers to all
system is really just pointers to all
the entities in this
the entities in this
game like I've reinvented pointers but
game like I've reinvented pointers but
in a way that makes sense with
numpy underlying technology might be
numpy underlying technology might be
there in a matter of years mountain of
there in a matter of years mountain of
processing place that involve people
processing place that involve people
that won't
be the other thing is just like
be the other thing is just like
programming skill a programming skill is
programming skill a programming skill is
exponential like one really good Dev can
exponential like one really good Dev can
do exponentially more than you know a
do exponentially more than you know a
bunch of bunch of mediocre
bunch of bunch of mediocre
devs
right I know don't get too caught up in
right I know don't get too caught up in
the whole
the whole
like you can just like you can scroll
like you can just like you can scroll
Twitter all day and like follow a bunch
Twitter all day and like follow a bunch
of shills and have a bad time or you can
of shills and have a bad time or you can
like close Twitter and actually build
like close Twitter and actually build
stuff
right what are you thinking with your
right what are you thinking with your
player pointers yeah so it's really
player pointers yeah so it's really
obnoxious here because I know how to
obnoxious here because I know how to
build this in Python
build this in Python
right in Python I know how to build this
right in Python I know how to build this
crazy inefficiently right you just have
crazy inefficiently right you just have
your grid and you have this 2D grid
your grid and you have this 2D grid
right and it's just a list of lists and
right and it's just a list of lists and
then each element in this 2D grid will
then each element in this 2D grid will
just be your uh object which is like
just be your uh object which is like
your player or your Tower or whatever
your player or your Tower or whatever
and you just check if like it's empty
and you just check if like it's empty
the specific spot on the list is empty
the specific spot on the list is empty
in the grid and that will tell you um
in the grid and that will tell you um
whether you know you can move there or
whether you know you can move there or
not and then you don't have to worry
not and then you don't have to worry
about uh screwing up you know with this
about uh screwing up you know with this
these pids and like getting them wrong
these pids and like getting them wrong
and you know having them be out of sync
and you know having them be out of sync
and stuff because they're directly
and stuff because they're directly
references to the objects what I've done
references to the objects what I've done
is i' I've kind of reinvented pointers
is i' I've kind of reinvented pointers
with this PID system because I don't
with this PID system because I don't
think you can make you can't make like
think you can make you can't make like
an me map of pointers directly and even
an me map of pointers directly and even
if you did then you'd have to deal with
if you did then you'd have to deal with
like d reference checks and stuff so
like d reference checks and stuff so
that's essentially what python does
that's essentially what python does
right it like does avoid
right it like does avoid
star it's like a 2d array of void star
star it's like a 2d array of void star
that handles the D referencing for you
um but I'm not sure if there's a better
um but I'm not sure if there's a better
way to do it than I'm doing
way to do it than I'm doing
now that's the tricky thing because like
now that's the tricky thing because like
right now right I have to assign there's
right now right I have to assign there's
like a range of pids that is the Players
like a range of pids that is the Players
there's a range of pids that correspond
there's a range of pids that correspond
to Towers there's going to be like a
to Towers there's going to be like a
range of pids that corresponds to creeps
range of pids that corresponds to creeps
and like unless I'm going to do weird
and like unless I'm going to do weird
Union type things which I don't even
Union type things which I don't even
know how to do in C I can't write a
know how to do in C I can't write a
function that's like get object from PID
function that's like get object from PID
because that function needs to know
because that function needs to know
whether it returns a player a a tower or
whether it returns a player a a tower or
a creep or whatever else I decid to put
a creep or whatever else I decid to put
in the game right so like I can't return
in the game right so like I can't return
a generic a generic thing um I don't
a generic a generic thing um I don't
think you can sub I don't think there's
think you can sub I don't think there's
like any struct inheritance things pids
like any struct inheritance things pids
are essentially coordinates they are
are essentially coordinates they are
indices uh the pids tell you which it's
indices uh the pids tell you which it's
player ID so pit is it tells you like I
player ID so pit is it tells you like I
have a list of um or not a list I have
have a list of um or not a list I have
like in a big array of players so if I
like in a big array of players so if I
have like pit zero I go look into the
have like pit zero I go look into the
first row or whatever and that's where
first row or whatever and that's where
the players are it's like a pointer um
the players are it's like a pointer um
but I need it to work for I have
but I need it to work for I have
multiple different object types or
multiple different object types or
multiple different struct types because
multiple different struct types because
like I have this player struct here I've
like I have this player struct here I've
got this creep struct I've got this
got this creep struct I've got this
Tower struct and unless I can like
Tower struct and unless I can like
unless there's a union type in this that
unless there's a union type in this that
I can use which is still kind of garbage
I can use which is still kind of garbage
um there's not really a way to just
um there's not really a way to just
easily keep track of what is where on
easily keep track of what is where on
that grid and I mean at the same time
that grid and I mean at the same time
I've got I have like this actual thing
I've got I have like this actual thing
that's the environment grid that tells
that's the environment grid that tells
you what type of thing is
you what type of thing is
there so like the the grid tells you if
there so like the the grid tells you if
it's like a player a tower a creep but
it's like a player a tower a creep but
it doesn't tell you which one it is and
it doesn't tell you which one it is and
then I have this PID map that tells you
then I have this PID map that tells you
which one it is right but doesn't
which one it is right but doesn't
directly without looking it up tell you
directly without looking it up tell you
the material type or whatever so there's
the material type or whatever so there's
just all this stuff going on and like
just all this stuff going on and like
it's introducing these additional layers
it's introducing these additional layers
of indirection that are the main source
of indirection that are the main source
of bugs at the moment so I'm trying to
of bugs at the moment so I'm trying to
think if there's a way I can re-engineer
think if there's a way I can re-engineer
this thing somehow to be simpler on that
this thing somehow to be simpler on that
front I really like what I was able to
front I really like what I was able to
do with
do with
um uh player OBS here and creeps and
um uh player OBS here and creeps and
Towers like these are really simple cuz
Towers like these are really simple cuz
these are just m Maps over players
these are just m Maps over players
creeps and Towers right there's no
creeps and Towers right there's no
pointer Shenanigans here there no Segal
pointer Shenanigans here there no Segal
potential it's very nice
potential it's very nice
um but this PID thing this pit and this
um but this PID thing this pit and this
grid these are not nice
h
yeah I don't want to drink the O
yeah I don't want to drink the O
Kool-Aid it's a mess I mean the thing
Kool-Aid it's a mess I mean the thing
is okay so
is okay so
technically technically I could decide
technically technically I could decide
that I'm going to just have one struck
that I'm going to just have one struck
type right cuz they're pretty similar
type right cuz they're pretty similar
and then I could just end up with having
and then I could just end up with having
like some of these that have um know
like some of these that have um know
there could just be an INT entity type
there could just be an INT entity type
for instance so I have one struct and
for instance so I have one struct and
then there's like an entity type that is
then there's like an entity type that is
a part of the struct that tells you if
a part of the struct that tells you if
it's a player a creep a tower and stuff
it's a player a creep a tower and stuff
like that so I could do
like that so I could do
that and
then and then
then and then
what I still wouldn't be able to make
what I still wouldn't be able to make
like a 2d grid of these things
right would I
um I don't know how this would
um I don't know how this would
work so wait if I
work so wait if I
made so
complicated no this is a me
complicated no this is a me
map what are you going to do with the IL
map what are you going to do with the IL
Els checks all over the place to deal
Els checks all over the place to deal
with different entity types well I have
with different entity types well I have
those right now
those right now
right it's driving me nuts
so the whole reason that this stuff
so the whole reason that this stuff
exists right is to do um local like
exists right is to do um local like
local Collision checks and stuff like
local Collision checks and stuff like
the reason that there's a
the reason that there's a
grid is so that uh when you move a
grid is so that uh when you move a
player right you discretize the
player right you discretize the
positions and you can see if there's
positions and you can see if there's
something in what would be the
something in what would be the
discretized grid cell that you're moving
discretized grid cell that you're moving
into too so that's how I get Collision
into too so that's how I get Collision
checks for free and how they're
checks for free and how they're
incredibly efficient because it's just
incredibly efficient because it's just
is there something in the block that
is there something in the block that
you're in yes or no incredibly
you're in yes or no incredibly
incredibly efficient
um
um
similarly similarly right like when you
similarly similarly right like when you
make when you make an attack against
make when you make an attack against
something
well let's say for computing the
well let's say for computing the
observations right like when you need to
observations right like when you need to
see what agents are nearby you in order
see what agents are nearby you in order
to select one to attack or do something
to select one to attack or do something
like that um you need to know which
like that um you need to know which
agents are around you on a grid it needs
agents are around you on a grid it needs
to be a grid because otherwise you have
to be a grid because otherwise you have
to do the O of and squared check over
to do the O of and squared check over
all the entities in the scene and that
all the entities in the scene and that
scales absolutely terribly so unless I'm
scales absolutely terribly so unless I'm
going to commit to there being like you
going to commit to there being like you
know 100 total things and even that's
know 100 total things and even that's
probably too slow
probably too slow
um it's just not a good way of handling
um it's just not a good way of handling
it
right though I really don't like having
right though I really don't like having
to have a grid and entities it's really
to have a grid and entities it's really
obnoxious because like when you have a
obnoxious because like when you have a
grid uh grid scale very poorly with the
grid uh grid scale very poorly with the
size of the observation window right so
size of the observation window right so
like if you want to have a grid for what
like if you want to have a grid for what
would be a full-size game window in an
would be a full-size game window in an
actual like AAA game that you're playing
actual like AAA game that you're playing
um that doesn't work because you have to
um that doesn't work because you have to
partition the screen up into small
partition the screen up into small
enough grid cells and that ends up being
enough grid cells and that ends up being
way too much data to put into your
way too much data to put into your
neural network so entity based stuff is
neural network so entity based stuff is
incredibly incredibly efficient for that
incredibly incredibly efficient for that
because like there are five players on
because like there are five players on
your screen right they go into an
your screen right they go into an
array you can limit the amount of
array you can limit the amount of
neighbor St
neighbor St
by using something like quad yes so you
by using something like quad yes so you
can technically you can go from N2 to uh
can technically you can go from N2 to uh
n log n or whatever it is with quad
n log n or whatever it is with quad
trees
right but it's nlog again with a
right but it's nlog again with a
potentially big constant on it because
potentially big constant on it because
you have to get a really efficient quad
you have to get a really efficient quad
Tre
implementation right now it's 0 of
implementation right now it's 0 of
one right now the uh the neighbor check
one right now the uh the neighbor check
is O of
one you you do something like spatial
one you you do something like spatial
hashing which is also I think o of one
hashing which is also I think o of one
but
but
um if you do that then it it's 0 of one
um if you do that then it it's 0 of one
with a gigantic constant is the
thing willing to eat the cost of larger
thing willing to eat the cost of larger
data if it means
data if it means
faster data
faster data
access well I'm willing there I'm
access well I'm willing there I'm
willing for there to be larger data on
willing for there to be larger data on
the simulator right the simulator has
the simulator right the simulator has
lots of memory I don't care about that
lots of memory I don't care about that
uh I am not willing to eat the cost of
uh I am not willing to eat the cost of
larger data going into the neural
larger data going into the neural
network that's really
bad now I mean that said
bad now I mean that said
like it's really hard to think how you
like it's really hard to think how you
would get
would get
around um having at least some sort of
around um having at least some sort of
nav mesh right you probably need some
nav mesh right you probably need some
sort of nav mesh
sort of nav mesh
anyways cuz like you at least need to
anyways cuz like you at least need to
know like passible or not passible for
know like passible or not passible for
the
the
map data going into the neural network
map data going into the neural network
means the grid well if think about it
means the grid well if think about it
right so like let's look at
right so like let's look at
this it can be whatever you want it to
this it can be whatever you want it to
be like the way to think about this is
be like the way to think about this is
oops when I'm playing this game right I
oops when I'm playing this game right I
see the screen I see pixels that's a
see the screen I see pixels that's a
huge amount of data and not to mention
huge amount of data and not to mention
it's really slow to render all this so
it's really slow to render all this so
you can represent this to the neural
you can represent this to the neural
network however you want um one obvious
network however you want um one obvious
way is like each of these tiles here
way is like each of these tiles here
right you can see like the the part the
right you can see like the the part the
partitioning of this right it's really
partitioning of this right it's really
Jagged so you can give it a map in which
Jagged so you can give it a map in which
you have whoops not sure what happened
you have whoops not sure what happened
there oh it's just it's trying to render
it hold on
so you can give it um you can give it
so you can give it um you can give it
let's say like a binary map that just
let's say like a binary map that just
tells you which um like which tiles are
tells you which um like which tiles are
available you can do something like that
available you can do something like that
if I really wanted to go nuts with this
if I really wanted to go nuts with this
I could even pack it so that each like I
I could even pack it so that each like I
could pack it with just a binary map for
could pack it with just a binary map for
the nav mesh uh I could pack it into
the nav mesh uh I could pack it into
like eight tiles per bite or something
like eight tiles per bite or something
if I wanted to I don't know how bad
if I wanted to I don't know how bad
memory bandwidth is I think it's it's
memory bandwidth is I think it's it's
pretty pretty significant cuz it all has
pretty pretty significant cuz it all has
to go on the GPU which is pretty slow so
to go on the GPU which is pretty slow so
I could technically pack like 32 tiles
I could technically pack like 32 tiles
per uh per integer if I wanted to do it
per uh per integer if I wanted to do it
that way though that's kind of
that way though that's kind of
complicated um it would be really nice
complicated um it would be really nice
if I didn't have to do a nav mesh at all
if I didn't have to do a nav mesh at all
but I don't know how you represent the
but I don't know how you represent the
terrain without having a nav mesh now if
terrain without having a nav mesh now if
you ignore that everything except the
you ignore that everything except the
terrain doesn't have to be represented
terrain doesn't have to be represented
that way right like look even here I can
that way right like look even here I can
only see like 10 things on screen right
only see like 10 things on screen right
now so I can just give you you know my
now so I can just give you you know my
position their positions our healths
position their positions our healths
stuff like that and if that's like I
stuff like that and if that's like I
don't know U maybe five or 10 integers
don't know U maybe five or 10 integers
or floats per agent that's only like
or floats per agent that's only like
what 200 bytes that's reasonable you can
what 200 bytes that's reasonable you can
do
that but this dual representation is
that but this dual representation is
just really obnoxious
because it makes the neural network very
because it makes the neural network very
complicated and it makes writing the
complicated and it makes writing the
code very complicated
used to managing complexity through
used to managing complexity through
abstraction well like there's nothing to
abstraction well like there's nothing to
abstract here it's just like how do you
abstract here it's just like how do you
present your data
present your data
right I mean so this here this is like
right I mean so this here this is like
this is a quite substantial panel to add
this is a quite substantial panel to add
in this is like what is this 40 by 20 or
in this is like what is this 40 by 20 or
something
something
um so that's already that's like 800
um so that's already that's like 800
bits minimum with optimal compression
bits minimum with optimal compression
800 bits of
800 bits of
data um so 200 bytes not terrible but
data um so 200 bytes not terrible but
then you have to do the compression
then you have to do the compression
inside the neural network so it's
inside the neural network so it's
unclear whether you'd want to compress
unclear whether you'd want to compress
it in the first place so that could be
it in the first place so that could be
as much
as much
as uh 800 bytes of
as uh 800 bytes of
data uh this could be as much as 800
data uh this could be as much as 800
bytes of data which is like already a
bytes of data which is like already a
kind of substantial addition to your
kind of substantial addition to your
observations you could do it I guess um
observations you could do it I guess um
but then you have this giant map that
but then you have this giant map that
has to go into probably a convet which
has to go into probably a convet which
is going to going to be slow that
is going to going to be slow that
already just like that probably limits
already just like that probably limits
you to not being able to hit a million
you to not being able to hit a million
steps per
second I mean I could try to do
second I mean I could try to do
something with
like I could try to give you like a very
like I could try to give you like a very
local nav mesh or something or I could
local nav mesh or something or I could
like just give you if you're about to
like just give you if you're about to
hit a
hit a
wall but that doesn't seem like doesn't
wall but that doesn't seem like doesn't
seem like a great
seem like a great
option I could give you a coarser
option I could give you a coarser
version of this thing right like I could
version of this thing right like I could
uh I could like chunk this up so that
uh I could like chunk this up so that
each four blocks is one block maybe that
each four blocks is one block maybe that
would give you like a really coarse nav
would give you like a really coarse nav
mesh that might
work and then we use entity based
work and then we use entity based
observations for the rest of stuff but
observations for the rest of stuff but
it still doesn't make it any easier to
it still doesn't make it any easier to
do the representation
right so here technically right
right so here technically right
technically I could make a player M map
technically I could make a player M map
which is a 2d array of
which is a 2d array of
player and I could have one type for
player and I could have one type for
everything but then I'm pretty sure
everything but then I'm pretty sure
because this is a m map I'm pretty sure
because this is a m map I'm pretty sure
that the actual data structure is not
that the actual data structure is not
it's not a 2d array of pointers it's a
it's not a 2d array of pointers it's a
2d array of the actual data so whenever
2d array of the actual data so whenever
I move a player onto that I have to copy
I move a player onto that I have to copy
the whole player which is
the whole player which is
slow I don't want to have to do that
slow I don't want to have to do that
because moving pids around is actually
because moving pids around is actually
really really computationally efficient
really really computationally efficient
even though it's
obnoxious the only R the only reason
obnoxious the only R the only reason
that you would want to copy players
that you would want to copy players
around like I just mentioned is if
around like I just mentioned is if
you're going to compute observations by
you're going to compute observations by
just slicing directly into the player
just slicing directly into the player
map
map
which I guess you can
which I guess you can
do but it's a lot of
data it's
hard haven't even gotten to the
hard haven't even gotten to the
obnoxious neural networks that are
obnoxious neural networks that are
required to handle entity based data
required to handle entity based data
though they can be made very
efficient it's seven so I'm going to
efficient it's seven so I'm going to
think about this for a couple more
think about this for a couple more
minutes and then I'm going to go to
minutes and then I'm going to go to
dinner if anybody has any like random
dinner if anybody has any like random
generic RL questions I wouldn't mind
generic RL questions I wouldn't mind
answering a few of those but I'm
answering a few of those but I'm
probably just going to have to sleep on
this out of my wheelhouse I'm in watch
this out of my wheelhouse I'm in watch
mode
mode
yeah understandable I mean this is these
yeah understandable I mean this is these
are variations of the problems that have
are variations of the problems that have
just been always been difficult in the
just been always been difficult in the
field for years um it all comes down
field for years um it all comes down
to representing your game state or your
to representing your game state or your
simulator state in a way that is both
simulator state in a way that is both
good for the simulator being fast and
good for the simulator being fast and
good for the reinforcement learning and
good for the reinforcement learning and
that's very very hard to do well
very hard to do
well and the developer as well yes so
well and the developer as well yes so
it's not absolutely got awful to write
it's not absolutely got awful to write
um
I mean I could probably prettify the PID
I mean I could probably prettify the PID
thing so it's not too bad right um but
thing so it's not too bad right um but
yeah anytime you're doing anything with
yeah anytime you're doing anything with
an object right like anytime you have
an object right like anytime you have
something that just like function needs
something that just like function needs
to be applied over an object in the
to be applied over an object in the
space you're going to need to have paths
space you're going to need to have paths
for every single type of
for every single type of
object it's like an entity
unless of course right I make it just
unless of course right I make it just
one struct that's just
one struct that's just
entities I could just do entities like
that yeah code paths multiple code paths
that yeah code paths multiple code paths
like you're going to have to do some
like you're going to have to do some
conditional on the player ID and like if
conditional on the player ID and like if
the player ID is less than the number of
the player ID is less than the number of
players then it's a player otherwise if
players then it's a player otherwise if
it's less than the players plus creeps
it's less than the players plus creeps
it's going to be creep otherwise it's a
it's going to be creep otherwise it's a
tower um It's actually kind of cleaner
tower um It's actually kind of cleaner
to just have one struct type that is
to just have one struct type that is
entity kind of just cleaner to have one
entity kind of just cleaner to have one
struct type that is
struct type that is
entity and then because a lot of the
entity and then because a lot of the
time when you're getting an entity you
time when you're getting an entity you
don't care right you don't care about
don't care right you don't care about
what it is you just care like you want
what it is you just care like you want
the position or something so I think
the position or something so I think
that codewise if you can just get the
that codewise if you can just get the
entity and then you can get like entity
entity and then you can get like entity
y entity X or whatever and then if you
y entity X or whatever and then if you
need to know you can do like entity do
need to know you can do like entity do
you know type or whatever and you can
you know type or whatever and you can
get as player or creep or
get as player or creep or
Tower right as an enum something like
Tower right as an enum something like
that that's
that that's
good can python structs have behavior on
good can python structs have behavior on
them or just dat data uh these are not
them or just dat data uh these are not
python strs these are native C strs this
python strs these are native C strs this
is uh scon syntactic sugar over c
is uh scon syntactic sugar over c
structs
structs
um I guess technically they could
um I guess technically they could
probably have a function on them I think
probably have a function on them I think
it would be a void
it would be a void
star but it's like if you could do it
star but it's like if you could do it
the exact you'd do it the exact way as C
the exact you'd do it the exact way as C
so you'd be Reinventing stuff
yeah yeah python doesn't have a struct
yeah yeah python doesn't have a struct
keyword it's one of the things I really
keyword it's one of the things I really
really wish the language had was a
really wish the language had was a
proper struct keyword it drives me
proper struct keyword it drives me
nuts but hey it's in
scon yeah these are literally these are
scon yeah these are literally these are
one to one with
cs can you clean up The Code pth by
cs can you clean up The Code pth by
putting some of the branching behavior
putting some of the branching behavior
on the struct
on the struct
itself you are trying to do Dynamic
itself you are trying to do Dynamic
dispatch I think um you're trying to
dispatch I think um you're trying to
like have you're trying to do the
like have you're trying to do the
pattern
pattern
where you know you're so you're right
where you know you're so you're right
but that's like not something in this
but that's like not something in this
language um so you're trying to do
language um so you're trying to do
Dynamic dispatch where you have multiple
Dynamic dispatch where you have multiple
implementations and then you can like
implementations and then you can like
get entity right and then call entity
get entity right and then call entity
like entity. attack or whatever or
like entity. attack or whatever or
entity like. take damage or something
entity like. take damage or something
and have different implementations for
and have different implementations for
each of these um that does not really
each of these um that does not really
exist
here it does not really
exist or if you did exist you'd have to
exist or if you did exist you'd have to
implement it with like void Stars
I kind of do like flipping it it's it's
I kind of do like flipping it it's it's
kind of gross in some ways to
kind of gross in some ways to
have
have
um I guess in theory if there's a single
um I guess in theory if there's a single
entity you could at least hide some of
entity you could at least hide some of
the branching logic in the entity
the branching logic in the entity
instead of your simulation code well
instead of your simulation code well
it's not so much that you can hide the
it's not so much that you can hide the
branching logic in the entity because
branching logic in the entity because
the entity is still not going to have
the entity is still not going to have
methods um it's that like you don't
methods um it's that like you don't
always need to know what type of entity
always need to know what type of entity
it is right like a lot of the time you
it is right like a lot of the time you
just need to know the position of a
just need to know the position of a
thing
right especially like if all the
right especially like if all the
entities have health and stuff
that makes it really easy to do stuff
that makes it really easy to do stuff
because like all the functions can take
because like all the functions can take
either an ID a PID or they can just take
either an ID a PID or they can just take
like an entity star or an
like an entity star or an
entity entity
reference but the place where it's gross
reference but the place where it's gross
is like um you end up with like a lot of
is like um you end up with like a lot of
like Towers in that case like Tower is
like Towers in that case like Tower is
going to have like skill tags and stuff
going to have like skill tags and stuff
from players and they're just going to
from players and they're just going to
be
unused this is what people use like
unused this is what people use like
Union types
for though I don't really think the
for though I don't really think the
union type
union type
solve that problem so
solve that problem so
much problem gets worse as you introduce
much problem gets worse as you introduce
more entity types yeah it does I mean
more entity types yeah it does I mean
the thing is this is not like an
the thing is this is not like an
infinite scoped project right this is
infinite scoped project right this is
supposed to be a relatively small scoped
supposed to be a relatively small scoped
mini MOBA so like they're going the
mini MOBA so like they're going the
entities that they're going to be
entities that they're going to be
they're going to be Towers they're going
they're going to be Towers they're going
to be creeps there might be a few
to be creeps there might be a few
different types of creeps right which
different types of creeps right which
could just be you know creeps that have
could just be you know creeps that have
different attacks or whatever um maybe
different attacks or whatever um maybe
there'll be a few types who knows
there'll be a few types who knows
they're going to be
players what else is there in am MOA I
players what else is there in am MOA I
don't know maybe they'll be like a
don't know maybe they'll be like a
bounty Rune or like a neutral or
bounty Rune or like a neutral or
something like
something like
that but maybe those will just be
that but maybe those will just be
implemented as different sted creeps I
implemented as different sted creeps I
don't know depends if I want to have
don't know depends if I want to have
like a unique identifier so I can render
like a unique identifier so I can render
them
differently but even then it's not that
differently but even then it's not that
bad
because your logic kind of goes course
because your logic kind of goes course
to fine right because like first you
to fine right because like first you
know it's an entity The Entity has some
know it's an entity The Entity has some
properties right and then like you could
properties right and then like you could
check you can check like you know uh
check you can check like you know uh
type and you can see that it's like a
type and you can see that it's like a
player a creep or a tower
player a creep or a tower
maybe and then like maybe there's like a
maybe and then like maybe there's like a
creep type attribute or whatever that
creep type attribute or whatever that
only creeps use and if you really need
only creeps use and if you really need
to know what type of creep it is which
to know what type of creep it is which
you don't need to know for most things
you don't need to know for most things
right like maybe if you kill it and you
right like maybe if you kill it and you
get a different amount of XP or
get a different amount of XP or
something you need to know but most of
something you need to know but most of
the time you don't need to know so if
the time you don't need to know so if
you really need to know that you can
you really need to know that you can
check it and Branch the logic based on
check it and Branch the logic based on
that
that
um but when you at least if you like
um but when you at least if you like
Union all the
Union all the
strs together if you have like a union
strs together if you have like a union
all the trucks is not that bad
also means that when you add uh add no
also means that when you add uh add no
more types you don't have to add like
more types you don't have to add like
different stuff into the function
signatures it's not
signatures it's not
bad it's pretty darn efficient you don't
bad it's pretty darn efficient you don't
have to check against multiple types you
have to check against multiple types you
don't have to do branching Logic on PID
don't have to do branching Logic on PID
but you don't have to do branching Logic
but you don't have to do branching Logic
on pit at all in
on pit at all in
fact uh
fact uh
they they might not even need to have a
they they might not even need to have a
PID right in the struct I don't think
PID right in the struct I don't think
that they need to even have a pit in the
that they need to even have a pit in the
struct necessarily at that point because
struct necessarily at that point because
you know you know it has the type so you
you know you know it has the type so you
don't need to branch on
don't need to branch on
PID so that could be better
looking at this thing right now
looking at this thing right now
basically they're all the same
basically they're all the same
anyways gain the benefits of
anyways gain the benefits of
polymorphism it's not really
polymorphism it's not really
polymorphism it's very explicit and
polymorphism it's very explicit and
procedural um the one gross thing is
procedural um the one gross thing is
like having everything in the trucks but
like having everything in the trucks but
the thing is for reinforcement learning
the thing is for reinforcement learning
right
right
like because this is for reinforcement
like because this is for reinforcement
learning I kind of don't want to give
learning I kind of don't want to give
you like a sub dictionary that has
you like a sub dictionary that has
uh agents in a subdictionary with Creeps
uh agents in a subdictionary with Creeps
in a subdictionary like I don't want to
in a subdictionary like I don't want to
give you a bunch of different
give you a bunch of different
subdictionaries I probably just want to
subdictionaries I probably just want to
give you one big block of entities
give you one big block of entities
anyways because that will be more
anyways because that will be more
efficient to process with a neural
efficient to process with a neural
network does that make sense like if I
network does that make sense like if I
just give you all the entities in one
just give you all the entities in one
big block you run your neuronet forward
big block you run your neuronet forward
path parallelized over that whole big
path parallelized over that whole big
block whereas if I give you like three
block whereas if I give you like three
slightly different strs one for creeps
slightly different strs one for creeps
one for players one for Towers or
one for players one for Towers or
whatever then you need to have like
whatever then you need to have like
different modules in your neuronet to
different modules in your neuronet to
process all that stuff yeah neuron Nets
process all that stuff yeah neuron Nets
prefer flat data
prefer flat data
always and this is very compact data as
always and this is very compact data as
well because the way that this would
well because the way that this would
work so let's say you have this
work so let's say you have this
representation where your game
representation where your game
internally has this giant block of
internally has this giant block of
entities right then the way that it's
entities right then the way that it's
going to work in your neuronet is when
going to work in your neuronet is when
you compute observations you're just
you compute observations you're just
going to pick like the 10 nearest ones
going to pick like the 10 nearest ones
or like you're going to arbitrarily Pick
or like you're going to arbitrarily Pick
10 entities from the grid and you're
10 entities from the grid and you're
going to put them into those
going to put them into those
observations and then you're just going
observations and then you're just going
to observe those 10 right so you're
to observe those 10 right so you're
going to have a very small partiel of
going to have a very small partiel of
data you still have to keep the grid
data you still have to keep the grid
representation in order to quickly
representation in order to quickly
compute which agents are nearby and
compute which agents are nearby and
stuff but a lot of the logic does get
stuff but a lot of the logic does get
simple
simplified that's nice
there's a really good post on this by
there's a really good post on this by
the way by a friend of mine if you want
the way by a friend of mine if you want
to look at it
um you look up like entity gy clemens's
um you look up like entity gy clemens's
blog he's got this really amazing post
blog he's got this really amazing post
he wrote this crazy cracked engine in
he wrote this crazy cracked engine in
Rust for uh doing this type of
stuff not all of it is needed in
stuff not all of it is needed in
particular I don't think that the Ragged
particular I don't think that the Ragged
buffers I think that they add more
buffers I think that they add more
complexity than they're worth most of
complexity than they're worth most of
the time um but yeah this is the type of
the time um but yeah this is the type of
stuff do you end up with Edge case
stuff do you end up with Edge case
problems where a tower has a bunch of
problems where a tower has a bunch of
stuff around
stuff around
it and most of them are
it and most of them are
friendlies which should be ignoring them
friendlies which should be ignoring them
anyways
anyways
um since you don't have sub dictionaries
um since you don't have sub dictionaries
to filter
to filter
that you would end up with that problem
that you would end up with that problem
anyways because the way that you're
anyways because the way that you're
checking nearby stuff is by iterating
checking nearby stuff is by iterating
over um nearby
over um nearby
tiles now the thing is okay the other
tiles now the thing is okay the other
question right is like is that even
question right is like is that even
tenable because if you're iterating over
tenable because if you're iterating over
nearby tiles you fundamentally like you
nearby tiles you fundamentally like you
can't make the view range of stuff very
can't make the view range of stuff very
long so maybe you were right originally
long so maybe you were right originally
with your quad trees thing right
your sub dictionary doesn't filter by
your sub dictionary doesn't filter by
friendly well the thing is if you need
friendly well the thing is if you need
to know you just do like team right like
to know you just do like team right like
there'll just be like a do team
there'll just be like a do team
attribute that you can like that you can
attribute that you can like that you can
check uh and it's you're not filtering
check uh and it's you're not filtering
you're looping anyways and the loops are
you're looping anyways and the loops are
fast because it's cython their c-s
fast because it's cython their c-s
speed the question is just like the the
speed the question is just like the the
question is really just one of
question is really just one of
representation um grid based views scale
representation um grid based views scale
absolutely terribly over large
absolutely terribly over large
spaces um and uh pure entity based
spaces um and uh pure entity based
comparison scale absolutely terribly
comparison scale absolutely terribly
with number of entities so grid based
with number of entities so grid based
views are quadratic with size of window
views are quadratic with size of window
and entity based filters are quadratic
and entity based filters are quadratic
with number of entities with both of
with number of entities with both of
these potentially having options to uh
these potentially having options to uh
make it n log n with quad Tre like
stroks welcome and thank thank you I
suppose
um I don't know why I've got Politics on
um I don't know why I've got Politics on
my freaking feed it's supposed to be
Tech cool
stuff this is actually this is so crazy
stuff this is actually this is so crazy
this has been running now for almost
this has been running now for almost
here
wow okay I I'm going to take I I got to
wow okay I I'm going to take I I got to
go in a second but because I need dinner
go in a second but because I need dinner
but I just want to show you how insane
but I just want to show you how insane
this is so these runs
this is so these runs
here this is running now 150 experiments
here this is running now 150 experiments
of minimum 500 million steps each which
of minimum 500 million steps each which
is like I've seen experiments by
is like I've seen experiments by
researchers that go to like 10 million
researchers that go to like 10 million
very often right depending if you have
very often right depending if you have
slow environment so this is 150x between
slow environment so this is 150x between
500 mil and over a billion steps so this
500 mil and over a billion steps so this
is like at least 75 million step 75
is like at least 75 million step 75
billion steps worth of
billion steps worth of
data and this hyperparameter tuning
data and this hyperparameter tuning
algorithm is still discovering better
algorithm is still discovering better
and better
Solutions my manual one like from my
Solutions my manual one like from my
previous hyperparameter tuning run the
previous hyperparameter tuning run the
best thing that I found was like right
best thing that I found was like right
here
here
I don't even know if I found something
I don't even know if I found something
this
good this is insane I'm glad I left this
good this is insane I'm glad I left this
thing running carbs is an awesome
thing running carbs is an awesome
awesome algorithm holy hell
looks like it's upping the update Epoch
looks like it's upping the update Epoch
which is a little bit
which is a little bit
funny that's insane though how that
works good algorithm
we filter out the bad runs and look at
we filter out the bad runs and look at
that
well I think tomorrow I'll try out I'll
well I think tomorrow I'll try out I'll
at the very least I'll try out uh
at the very least I'll try out uh
switching this to be one entity type
switching this to be one entity type
unless I think of a dumb unless I figure
unless I think of a dumb unless I figure
out that that's a dumb idea um since it
out that that's a dumb idea um since it
produces data and then I will just think
produces data and then I will just think
about data structures a little bit for
about data structures a little bit for
grids
grids
versus uh
versus uh
entities
and yeah I'm just going to have to think
and yeah I'm just going to have to think
about how that
works I mean for this type of
works I mean for this type of
environment they're going to
be maybe at most like 200 entities ever
so the break even point for that
is probably like
uh like 13 or 14 by
uh like 13 or 14 by
14 observation range it's not very
far all right
far all right
well I'm stumped up for now um
well I'm stumped up for now um
so I'm going to sign off I'll be back
so I'm going to sign off I'll be back
tomorrow probably a little later than I
tomorrow probably a little later than I
started today I go for a slightly longer
started today I go for a slightly longer
run on Wednesdays and uh we'll be still
run on Wednesdays and uh we'll be still
working on this I've also I've got a few
working on this I've also I've got a few
side things that I've need to finish up
side things that I've need to finish up
as well I might do that before I hop on
as well I might do that before I hop on
we'll see thanks for stopping by and uh
we'll see thanks for stopping by and uh
yeah lots of cool progress on this
yeah lots of cool progress on this
project this is looking very very nice
project this is looking very very nice
for just two days of work um and I think
for just two days of work um and I think
in like a full week's worth of stuff
in like a full week's worth of stuff
this is going to going actually start
this is going to going actually start
looking like a proper mini
looking like a proper mini
MOBA uh the runs are brutal this is a 53
MOBA uh the runs are brutal this is a 53
mile week um while power lifting five
mile week um while power lifting five
days a week as well so anyways night
