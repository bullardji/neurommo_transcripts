Kind: captions
Language: en
okay we're
live funny I'm not seeing it working
live funny I'm not seeing it working
hold
on oh there we
on oh there we
go cool this works um
go cool this works um
we have a lot of stuff to do we have a
we have a lot of stuff to do we have a
lot of stuff to
lot of stuff to
do so I guess let's just get started
do so I guess let's just get started
here
here
um first of all quick check on
puffer lots of stuff is down it seems
puffer lots of stuff is down it seems
there we
there we
go almost at 800 that's
awesome uh let's go check wand B
awesome uh let's go check wand B
so there were some experiments from last
so there were some experiments from last
week that I just didn't check on I got
week that I just didn't check on I got
distracted because of the
50k okay
50k okay
so right
here yeah
here yeah
here we have all of
here we have all of
our all of our
our all of our
runs these were the baselines that we
runs these were the baselines that we
set
set
so I suppose we
so I suppose we
should double check these versus the
should double check these versus the
original po
paper of course we're actually training
paper of course we're actually training
way way fewer time steps than they are
so we'll have to take that into
so we'll have to take that into
account let's
account let's
see how we're going to do
this okay let's do
this okay let's do
this and
then so this is cubert
cubert they get uh what is their one
cubert they get uh what is their one
which color
red so in 15 million steps of
red so in 15 million steps of
cubert we are at 2
cubert we are at 2
2600 I think that we do better than them
2600 I think that we do better than them
here it's hard to say because this is
here it's hard to say because this is
like a really long training run so we
like a really long training run so we
should probably do some much longer runs
should probably do some much longer runs
let's just I'm just trying to get a
let's just I'm just trying to get a
ballpark of if we did well or not so
ballpark of if we did well or not so
beam Rider
beam Rider
we've got
1500 yeah we crushed them in beam Rider
1500 yeah we crushed them in beam Rider
here this is like 160 200 million step
here this is like 160 200 million step
run or
run or
something so beam Rider is
something so beam Rider is
good breakout I think breakouts bad
good breakout I think breakouts bad
right H
right H
115 115 and only 10 mil is actually not
115 115 and only 10 mil is actually not
terrible yeah we uh we're fine
terrible yeah we uh we're fine
here and uh uh let's
here and uh uh let's
see
cubert what you say
cubert what you say
Enduro oh yeah we crushed them on
Enduro where the heck are the rest of
them sequ is not there
wait what oh well this is wait this is
wait what oh well this is wait this is
Enduro
Enduro
twice and then one two
twice and then one two
three what happened here something weird
three what happened here something weird
happened hold
on so we're missing Space Invaders and
on so we're missing Space Invaders and
sequ Quest I don't know what happened
sequ Quest I don't know what happened
here
assuming that this just didn't yeah this
assuming that this just didn't yeah this
just didn't run something weird
just didn't run something weird
happened
happened
oops okay so we'll figure that out but
oops okay so we'll figure that out but
these look so far so good um we should
these look so far so good um we should
cue up some of
cue up some of
those
what put like individual points on here
what put like individual points on here
this is the UI screwing up right
okay
so let me see if I can figure out why
so let me see if I can figure out why
this is uh what has happened here and
this is uh what has happened here and
then what I would like to do is I'd like
then what I would like to do is I'd like
to just run a longer
to just run a longer
experiment with some of
experiment with some of
these we also have the Moa
results I posted these on Twitter
results I posted these on Twitter
yesterday I didn't really get a chance
yesterday I didn't really get a chance
to look at them too much but we actually
to look at them too much but we actually
do have increasing ELO over
do have increasing ELO over
time so that's quite
good okay I think what we're going to do
good okay I think what we're going to do
then is let's figure out what's wrong
then is let's figure out what's wrong
with this and then we'll do the C stuff
with this and then we'll do the C stuff
and then we have other things to do from
and then we have other things to do from
there we have a whole bunch of projects
there we have a whole bunch of projects
that need my attention today
so this was the MOBA
sweep uh we can just run
sweep uh we can just run
this we can just just run this for
this we can just just run this for
longer right cuz we're not going to get
longer right cuz we're not going to get
to this otherwise
to this otherwise
today yeah let's just do that real quick
today yeah let's just do that real quick
so on this box we will just
do carb
sweeps
sweeps
oops just do a whole bunch of runs
here and hopefully it will start doing
here and hopefully it will start doing
longer runs over time as well we will
longer runs over time as well we will
see about that
okay and let's check puffer box
one and we'll see what went wrong
here hey
here hey
Nathan me get this off of the chat
welcome how's your uh how's your project
going okay so something weird happened
going okay so something weird happened
here
right Kung started using my box for Moko
right Kung started using my box for Moko
okay kyung that's fine I'll let you use
okay kyung that's fine I'll let you use
this box for a bit
this box for a bit
using it
still doesn't have anything running on
still doesn't have anything running on
it
now I did tell him he could take any
now I did tell him he could take any
box I didn't expect him to take my box
box I didn't expect him to take my box
but
okay wa is that message from today what
okay wa is that message from today what
are you studying at
are you studying at
Stamford I'm a Stanford Alum I graduated
Stamford I'm a Stanford Alum I graduated
in 2019
yeah that's from today
okay I finished uh a my undergrad in CS
okay I finished uh a my undergrad in CS
aai in
aai in
2019 and I just finished my PhD at MIT a
2019 and I just finished my PhD at MIT a
few months ago so now I'm doing this
few months ago so now I'm doing this
stuff
Entry Way on
Entry Way on
here one of the profiles you
here one of the profiles you
displayed oh that's funny
displayed oh that's funny
where I don't know where I had that it's
where I don't know where I had that it's
probably old from uh because I you know
probably old from uh because I you know
maybe something still has my old email
maybe something still has my old email
on it or whatever but yeah I'm in
on it or whatever but yeah I'm in
LM getting a pretty good pong agent but
LM getting a pretty good pong agent but
it takes a while got to tune some hyper
it takes a while got to tune some hyper
pram just do it automatically with carbs
pram just do it automatically with carbs
carbs will just do it for
you you can even use
you you can even use
um if you want some defaults to use here
um if you want some defaults to use here
I'll give you
I'll give you
them
uh is the cool thing about being able to
uh is the cool thing about being able to
do this
right is I can just go here I can
right is I can just go here I can
say look at this one this one's not
say look at this one this one's not
actually as good good as it should
actually as good good as it should
be I don't know what happened here it
be I don't know what happened here it
still it solves it in 5 million steps oh
still it solves it in 5 million steps oh
wait maybe it's that it's really fast in
wait maybe it's that it's really fast in
wall clock right there's the wrong
axis yeah okay so this is like 2 minutes
axis yeah okay so this is like 2 minutes
or whatever a little longer we have runs
or whatever a little longer we have runs
that are like sub 90 seconds so this one
that are like sub 90 seconds so this one
is not amazing but um here you can take
is not amazing but um here you can take
these you can take these parameters
these you can take these parameters
Nathan
starting
point oh yeah there it is this has my
point oh yeah there it is this has my
old Stanford email on it should change
that yeah let me look at them to make
that yeah let me look at them to make
sure that they're actually kind of
sure that they're actually kind of
reasonable for the pong let me just
reasonable for the pong let me just
double do a double check for
you they like pass the
you they like pass the
initial you also have to check the M
initial you also have to check the M
parameters here it's frame skip
parameters here it's frame skip
4 is this CNN OBS and score reward yep
4 is this CNN OBS and score reward yep
it's in the uh the dev Branch you can
it's in the uh the dev Branch you can
check exactly what I do with the Atari
check exactly what I do with the Atari
uh with like the Atari M binding in
uh with like the Atari M binding in
there you have all the prems in here
there you have all the prems in here
and 32k batch these are mostly
and 32k batch these are mostly
reasonable looking it's a it's a really
reasonable looking it's a it's a really
large number of updates on stale data
large number of updates on stale data
with a small mini batch size is the only
with a small mini batch size is the only
thing that looks a little weird um but
thing that looks a little weird um but
yeah this apparently does quite
well really we would like to be able to
well really we would like to be able to
average over R random seeds but WB
average over R random seeds but WB
doesn't make that easy
plain features now with tiny MLP that's
plain features now with tiny MLP that's
fine you can add an lstm for free puffer
fine you can add an lstm for free puffer
will just do that for
will just do that for
you I usually recommend
that two stars off
800 let me think what I want to run here
vitari
vitari
mode uh
train okay well kyung did some stuff
train okay well kyung did some stuff
here so I'll leave this alone for now
here so I'll leave this alone for now
you can use this box today
welcome 5x lower
welcome 5x lower
SPS on my little CPU with the L yeah you
SPS on my little CPU with the L yeah you
need a you need a GPU of
course how's the M Speed though with
course how's the M Speed though with
pong progress from yesterday I have sort
pong progress from yesterday I have sort
of thought about and I think it is worth
of thought about and I think it is worth
spending a little bit more time on onyx
spending a little bit more time on onyx
I was just doing a couple things to
I was just doing a couple things to
start some runs uh by default also I
start some runs uh by default also I
should just double check that I'm not
should just double check that I'm not
missing
anything
here I missed a message one second
uh is it
enough that's per agent done let stay
done do
that
okay autotune gives me 40
okay autotune gives me 40
mil 40 million
mil 40 million
steps
steps
what well that's freaking good
oh it's yeah it's pong of course pong
oh it's yeah it's pong of course pong
should be faster than a lot of stuff
should be faster than a lot of stuff
yeah especially if you're just doing
yeah especially if you're just doing
observations like small feature okay
observations like small feature okay
yeah
cool if you're training on 500k to 1
cool if you're training on 500k to 1
milps on CPU you should literally be
milps on CPU you should literally be
solving that environment in like a few
solving that environment in like a few
seconds
just use the carbs integration Nathan
just use the carbs integration Nathan
like with as fast as that Enis in 20
like with as fast as that Enis in 20
minutes you'll have a full sweet like
minutes you'll have a full sweet like
you can just run 500
experiments all right we should start on
experiments all right we should start on
the C and the Onyx stuff for today
the C and the Onyx stuff for today
because that's what the stream title is
because that's what the stream title is
and also it needs to get done tiny
thing yeah they're more inter a coming
thing yeah they're more inter a coming
so that you can automatically scale your
so that you can automatically scale your
net up and down I got to do that as
well C an onic stuff yeah like I got
well C an onic stuff yeah like I got
it's it ended up being worth doing I
it's it ended up being worth doing I
think just a little bit more I realized
think just a little bit more I realized
that there was like a flag that I kind
that there was like a flag that I kind
of ignored from here where is
it this thing gave me a flag to compile
it this thing gave me a flag to compile
right here where is it
are you going to migrate all your scon
are you going to migrate all your scon
to see eventually not necessarily this
to see eventually not necessarily this
is just an
is just an
experiment the only thing that would
experiment the only thing that would
cause me to to migrate all the scon to
cause me to to migrate all the scon to
see would be like if I finish this
see would be like if I finish this
project and I post like play Snake
project and I post like play Snake
against a thousand trained AIS in your
against a thousand trained AIS in your
browser right and like that blows up on
browser right and like that blows up on
Twitter and gets me a huge amount of
Twitter and gets me a huge amount of
exposure for puffer then yes I would
exposure for puffer then yes I would
consider doing it otherwise this is just
consider doing it otherwise this is just
like a fun
test okay so this is what we wanted
here build
I'm trying to remember where we left off
I'm trying to remember where we left off
with this yesterday I think that this
with this yesterday I think that this
was not working right so if I did this
was not working right so if I did this
it works
yeah for folks like that are doing stuff
yeah for folks like that are doing stuff
in syon there's literally no performance
in syon there's literally no performance
reason to do c instead of python it's
reason to do c instead of python it's
just this is I'm messing with some web
just this is I'm messing with some web
assembly stuff is all there's no
assembly stuff is all there's no
performance reason to prefer
C build
temp trying to remember how I structured
temp trying to remember how I structured
stuff here build game HTML
okay so this one works
right
right
and what I wanted to do is I wanted to
and what I wanted to do is I wanted to
add the debug information
which was right
here allows you to debug your C directly
here allows you to debug your C directly
in the browser
right
oops okay and I remember this not
oops okay and I remember this not
working so
okay
okay let's see what it has for me here
okay let's see what it has for me here
it
it
has exposed functions Malik
free right
free right
so let's put these down
there and then this Source map thing
there and then this Source map thing
doesn't work
doesn't work
right so we have this we have
this Dash Das Source map base
this Dash Das Source map base
okay so they it's a different flag now
okay so they it's a different flag now
let's see
demangle support is
deprecated okay what happens if I run it
deprecated okay what happens if I run it
though
okay so this now
runs is there anything in
here
what oh look at
what oh look at
that this didn't come up four
right resetting reset complete okay I
right resetting reset complete okay I
get prints
get prints
now this
now this
is yeah yeah I get prints okay
is yeah yeah I get prints okay
perfect we might actually be able to do
perfect we might actually be able to do
something with
something with
this so
cuz I should actually get bugs I should
cuz I should actually get bugs I should
actually get error messages in the
actually get error messages in the
browser now I
think all right I forgot it also takes a
think all right I forgot it also takes a
long ass time to compile this it's okay
long ass time to compile this it's okay
though
EMCC support cach no idea what would the
EMCC support cach no idea what would the
flag
be I don't know what it's building
be I don't know what it's building
either is the thing cuz like I thought I
either is the thing cuz like I thought I
already have EMCC
built so you do be linking to it I like
built so you do be linking to it I like
I don't know what it's doing that takes
I don't know what it's doing that takes
this long but I do remember it does
this long but I do remember it does
actually eventually build it just takes
actually eventually build it just takes
a couple of
minutes c c cach oh maybe I can just do
minutes c c cach oh maybe I can just do
that for carbs should I do D- mode sweep
that for carbs should I do D- mode sweep
carbs yes and then do I need to specify
carbs yes and then do I need to specify
all the sweet params yes but you also
all the sweet params yes but you also
get some of them from default so if you
get some of them from default so if you
look at like the way that yeah you do
look at like the way that yeah you do
need to specify those but like if you
need to specify those but like if you
look at the latest Dev Branch I have
look at the latest Dev Branch I have
like a lot of them are already set with
like a lot of them are already set with
defaults in the demo file and like it'll
defaults in the demo file and like it'll
just infer the Min and the Max from your
just infer the Min and the Max from your
range pram like check like the Atari or
range pram like check like the Atari or
whatever the new examples there cuz like
whatever the new examples there cuz like
most of them can just be inherited and
most of them can just be inherited and
you just have to edit a
few running limited binary and
few running limited binary and
optimization
if we actually get this to work though
if we actually get this to work though
you know how awesome this is going to be
you know how awesome this is going to be
we're going to have a 400 line demo
we're going to have a 400 line demo
that's pure C that just
that's pure C that just
runs you know runs in the
web 100% client side I mean I won't have
web 100% client side I mean I won't have
to deal with I won't have to deal with
to deal with I won't have to deal with
anything else I can just ship like two c
anything else I can just ship like two c
files or one C file
files or one C file
[Music]
[Music]
whatever and it'll run local it'll run
whatever and it'll run local it'll run
where whatever I
where whatever I
think actually I don't know if this runs
think actually I don't know if this runs
local because I'm using like webgl
local because I'm using like webgl
builds of
builds of
Onyx I have to see about that
we'll see whether this is
we'll see whether this is
um as appealing as just implementing
um as appealing as just implementing
some
networks the main thing is if I like I
networks the main thing is if I like I
don't want to have to write my own
don't want to have to write my own
conversion layer from torch to like some
conversion layer from torch to like some
something else
does tiny grad have a Capi
oh wait they have wasam C back
end wait they have code generation
where's the SE where's their Cod John
invest with your PRS is
funny
um I'm looking to see because they say
um I'm looking to see because they say
they have web GPU and if they do this
they have web GPU and if they do this
could be simpler
I they say that they have this where is
I they say that they have this where is
it
dang
dang
it freaking docks where are these
tiny grad has wasum but like
where e
I wish I could find this thing
webg is this it
[Music]
H
compile man
compile man
love to know how this freaking
works this is
Javascript they say they have it but I
Javascript they say they have it but I
can't find
can't find
where I don't
where I don't
know how's this thing this thing has run
know how's this thing this thing has run
at least
okay so this thing breaks as
expected
game.js the
game.js the
[ __ ] oh come on this doesn't give me a
[ __ ] oh come on this doesn't give me a
proper error at all
[Applause]
[Applause]
ah yeah okay we're just going to
do I'm going to go nuts if I have to do
do I'm going to go nuts if I have to do
this all day so what we're going to do
this all day so what we're going to do
instead is we're going to do something I
instead is we're going to do something I
know will work this is what I said last
know will work this is what I said last
time uh we're just going to try to like
time uh we're just going to try to like
make uh like an MLP for now run in
make uh like an MLP for now run in
uh we'll just going of see if we can get
uh we'll just going of see if we can get
like an MLP to run locally let me start
like an MLP to run locally let me start
on this so here's here's how this is
on this so here's here's how this is
going to be different um we're going to
going to be different um we're going to
do
is I hate we I just heard I can't work
is I hate we I just heard I can't work
with stuff that's that heavy and shitty
with stuff that's that heavy and shitty
it's just
it's just
like no not doing it
Okay so
TCH doesn't have default
oh you found it let me
see okay so
explain
what in order to get this to work I
what in order to get this to work I
would need to make an X Port from P
would need to make an X Port from P
torch to Tiny grad and then I would need
torch to Tiny grad and then I would need
to write like a version of this for tiny
to write like a version of this for tiny
grad that then exports it to C
I yeah I don't understand how the [ __ ]
I yeah I don't understand how the [ __ ]
I'm supposed to do anything with
this well I mean what am I supposed to
this well I mean what am I supposed to
do this is like a like
it's cool that this works but this is
it's cool that this works but this is
not in any way that I can like there's
not in any way that I can like there's
no way that I can like oh cool I can
no way that I can like oh cool I can
just slot in tiny grad to use as a web
just slot in tiny grad to use as a web
GPU back end I mean of course like they
GPU back end I mean of course like they
say that they've put basically no effort
say that they've put basically no effort
into that because it's not what they're
into that because it's not what they're
doing at the
doing at the
moment yeah I need to do torch tiny gr
moment yeah I need to do torch tiny gr
anyways I might as well just do torch to
anyways I might as well just do torch to
see right cuz like that's what they're
see right cuz like that's what they're
doing they're just manually doing tiny
doing they're just manually doing tiny
to see
here so what I was going to do which I
here so what I was going to do which I
figured would
figured would
be less making me want to [ __ ] die on
be less making me want to [ __ ] die on
a
a
Friday uh is
do
do
this state. PI what's
this oh
this oh
okay is this General they actually have
okay is this General they actually have
a load torch
but they still don't have an export from
but they still don't have an export from
Tiny grad right like they say tiny grad
Tiny grad right like they say tiny grad
has wasum but they don't generally have
has wasum but they don't generally have
wasum right like they have like specific
wasum right like they have like specific
examples for which they've manually
examples for which they've manually
exported to C
exported to C
right or do they actually have like a
right or do they actually have like a
way to do like tiny grad model to wasm
way to do like tiny grad model to wasm
because if I can just do tiny if I can
because if I can just do tiny if I can
just do torch to Tiny grad and Tiny grad
just do torch to Tiny grad and Tiny grad
export wasm then I'll gladly gladly use
export wasm then I'll gladly gladly use
that
to understand how efficient
to understand how efficient
that well the efficient that converter
that well the efficient that converter
was like I would still have to manually
was like I would still have to manually
make one of these because like
make one of these because like
look what unless this is just input
reading empty plus oh this is as empty
reading empty plus oh this is as empty
plus
weights image
Library C program equals
Library C program equals
frog wait export
model wait what is
model wait what is
this oh whoa whoa whoa is this
this oh whoa whoa whoa is this
it that might be
it somewhere
it somewhere
here onyx
the Onyx was [ __ ]
the Onyx was [ __ ]
though I tried
though I tried
that how's there no underscore knit in
here extra. exort model
this is Javascript isn't it not
see this
see this
here 3113 you
here 3113 you
say GL
what only web
GPU can you tell if there's C code gen
GPU can you tell if there's C code gen
here or if this is like JavaScript and
here or if this is like JavaScript and
webg like webgl
webg like webgl
Shenanigans can I just export this to CN
Shenanigans can I just export this to CN
compile to wasum that'd be
great export model web
great export model web
GPU export model
GPU export model
clang that's promising right
oh this is
C this is
C
so do we want to make a quick little
so do we want to make a quick little
demo script with this then
let's see we'll try
let's see we'll try
it let's let's try it you're right that
it let's let's try it you're right that
this is worth if I don't have to write
this is worth if I don't have to write
my own C code genen I'll be happy
my own C code genen I'll be happy
so
so
yeah
um where are we at the
moment snake
do I have snake model. PT in
do I have snake model. PT in
here no
okay so now we
have
have
test gra export.
test gra export.
P okay P
torch model
torch model
TCH load snake model. PT
torch torch
torch torch
model
model
[Music]
[Music]
okay let I don't want to lose this
okay let I don't want to lose this
window we're screwed up I need the
history okay I got to hand it to uh
history okay I got to hand it to uh
George Hots here having a small package
George Hots here having a small package
that actually [ __ ] just installs
that actually [ __ ] just installs
instantly top
tier
um from Tiny gr.
um from Tiny gr.
extra P export
extra P export
model and then then where was the export
model and then then where was the export
torch thing that we had you linked that
torch thing that we had you linked that
before didn't
you torch
you torch
load tiny gr. nn.
state from Tiny rad
oops state for Tor load
okay oh wait it loads
okay oh wait it loads
uh it loads just the model so I just
uh it loads just the model so I just
need to give it snake model.
PT I might want to should I move this to
PT I might want to should I move this to
CPU
first well we'll see if this works
first well we'll see if this works
initially
okay and now we have export model
clang which I it calls this for us I
clang which I it calls this for us I
think so we can just do export
model what star
inputs we should just be able to do
model and then
model and then
Target
Target
is
clang
clang and what's this return
program input output
State tensor names you can probably do
State tensor names you can probably do
nothing let's see
dummy takes
dummy takes
no arguments
what dummy takes
torch load is hold on let me grab it
[ __ ] this is so
dense code is actually fine I wish he
dense code is actually fine I wish he
would add some spaces to it
would add some spaces to it
though holy hell
open Torch
pickle wait PT is pth different from
pickle wait PT is pth different from
PT was it
PT was it
just was it all the same yeah yeah it's
just was it all the same yeah yeah it's
just people using whatever
okay is it expecting
okay is it expecting
the
state maybe is it expecting like State
state maybe is it expecting like State
dick or
something let's see what does this give
something let's see what does this give
us
is this expecting us a to have a pickled
is this expecting us a to have a pickled
model or a state deck it would have to
model or a state deck it would have to
be a pickled model
right
e for
torch
load this looks like it needs a state
load this looks like it needs a state
deck right
yeah but look this torch load this is
fetch wait no hold
fetch wait no hold
on yeah it okay so it's fetch of State
dick pickled torch class yeah well
dick pickled torch class yeah well
that's what I should have already
is
there I'm just wondering if there's
there I'm just wondering if there's
direct code gen for something doesn't
direct code gen for something doesn't
look like
it what's the error that's the thing
it what's the error that's the thing
it's like not a reasonable
error torch pickle
it says is zip file it's not a zip file
it says is zip file it's not a zip file
what oh camera my
bad
so this should not be a zip file right
it's the El
it's the El
statement 192 right here
wait
wait
what LF tar yeah but isn't it calling
what LF tar yeah but isn't it calling
this one it says State Line
192 good point
looks like it's the
same do they have tags for their
releases doesn't look like
it
it
oh I assume it's this
this is still the
same I mean we can just check right
yeah it's the same man it is on the zip
file why does it think this is a
function wait fun function
string I gu the file name maybe not
function maybe it needs to be named PTA
function maybe it needs to be named PTA
H maybe they have that
hardcoded
ah I think they have it hardcoded to the
ah I think they have it hardcoded to the
extension
extension
huh maybe not let's see
no this says this is a ZIP file so I
no this says this is a ZIP file so I
guess it's treating um this as a
zip try to unzip
it apparently it is just a
it apparently it is just a
zip that's
weird so I guess that makes sense
weird so I guess that makes sense
I don't know why they would have a
I don't know why they would have a
custom extension then
custom extension then
but it's kind of
deranged for pie
torch I know jar jar is jar Java AR it
torch I know jar jar is jar Java AR it
literally just a zip
though okay that's
though okay that's
obnoxious custom file extensions just
obnoxious custom file extensions just
confuse people cuz now you think you
confuse people cuz now you think you
need a custom jar extractor right
[Music]
H data.
pickle I don't know let's put this here
dummy takes no arguments
I guess it's not finding the class
I guess it's not finding the class
though it should be giving me a warning
though it should be giving me a warning
oh no the debug is off okay
oh no the debug is off okay
so module
so module
root and white
has I see
it's kind of
it's kind of
weird why does it do
this
for e
I actually don't understand how this is
I actually don't understand how this is
loading this
loading this
too tiny
grad no this is this is saying that it's
grad no this is this is saying that it's
not it's only allowing you to load stuff
not it's only allowing you to load stuff
that's like has the top level thing
that's like has the top level thing
defined in torch or collections or
whatever maybe it does want the state
whatever maybe it does want the state
decked
decked
right no but it shouldn't it should want
right no but it shouldn't it should want
the Pickled model that's
weird but then
and I do not understand this
thing I'm trying to think like what the
thing I'm trying to think like what the
odds are that I can get this whole thing
odds are that I can get this whole thing
working with the fancy model versus just
working with the fancy model versus just
like really quickly doing an
like really quickly doing an
MLP loading that right now right
m
I mean it looks like they just want the
I mean it looks like they just want the
state dick anyways
state dick anyways
like you see that they're constructing
like you see that they're constructing
like this Nest addictive
like this Nest addictive
parameters I don't know how they will
parameters I don't know how they will
convert that though to
like I don't know how they're going to
like I don't know how they're going to
convert that to um a tiny grad nut
I mean I think initially the the easiest
I mean I think initially the the easiest
thing I'm going to be able to do for a
thing I'm going to be able to do for a
quick demo is like yeah this is cool and
quick demo is like yeah this is cool and
maybe one of these will work eventually
maybe one of these will work eventually
but I can probably just make an MLP work
but I can probably just make an MLP work
really quick right
isn't there an ump C API
literally there's a numpy c API I can
literally there's a numpy c API I can
use to just Implement an MLP right
well I think I should just do this for
well I think I should just do this for
now because like otherwise I'm going to
now because like otherwise I'm going to
be here [ __ ] with more and more
be here [ __ ] with more and more
Frameworks like all day driving myself
nuts like this is not the goal
nuts like this is not the goal
right I like would like to just have a
right I like would like to just have a
400 line piece of code that just does it
400 line piece of code that just does it
do you need the numpy cap API does it
do you need the numpy cap API does it
compile well I don't know I probably
compile well I don't know I probably
don't I can probably just make Claude
don't I can probably just make Claude
make me an
MLP so what I was doing before I started
MLP so what I was doing before I started
this nonsense right
was oh that's
was oh that's
weird why does it open
weird why does it open
rayb it opens the snake thing opens rayb
what e
something's
weird where did it get render mode human
weird where did it get render mode human
from
okay
okay yeah this is going to work
so this will train
so this will train
me CPU
me CPU
snake with like MLP or
whatever for
what's the current state of the sea
what's the current state of the sea
snake we've tried pie torch Onyx and a
snake we've tried pie torch Onyx and a
little bit of Tidy grad trying to figure
little bit of Tidy grad trying to figure
out how to get the stupid models to load
out how to get the stupid models to load
um and I haven't been able to so I'm
um and I haven't been able to so I'm
just training really simple model and
just training really simple model and
we're just going to make a a c
we're just going to make a a c
version
native I don't need grb because I don't
native I don't need grb because I don't
need to train
puffer yeah training is um training is
puffer yeah training is um training is
the normal RL stack and
the normal RL stack and
the goal here is just to figure out how
the goal here is just to figure out how
if like we can run a cool demo on web
if like we can run a cool demo on web
assembly that's all I want to
do for
TR how I want to do
this do I try to do Cod genen or do I
this do I try to do Cod genen or do I
just try to make
and we just make Claud do
and we just make Claud do
it as a starting point because I don't
it as a starting point because I don't
know what the [ __ ] I'm doing in this
space but I mean I assume that there's
space but I mean I assume that there's
like enough of these online that it
like enough of these online that it
should just be able to J
something you know the C code
gen would that be easier
there's got to be something for this
there's got to be something for this
right
like for
no not
this how fast should Atari run in puffer
this how fast should Atari run in puffer
trains at 30,000 steps per second or so
trains at 30,000 steps per second or so
on a puffer
box it is quite fast
I think we just do it custom
I think we just do it custom
here I still don't know if I want to do
here I still don't know if I want to do
code gen though
or it's got to be like P torch C code
again guess
not for
C++ this is what we want isn't
it I think you does
C++ ah too much [ __ ] man
let's just try this
trying think what format I should save
trying think what format I should save
the data in
probably just flat data
right yeah that's like a trivial
thing
for e
this is going to be obnoxious actually
this is going to be obnoxious actually
now that I'm thinking about it
there's no good way of
there's no good way of
manipulating are you planning to support
manipulating are you planning to support
GPU accelerated Ms with puffer we
GPU accelerated Ms with puffer we
already do we have uh in the dev Branch
already do we have uh in the dev Branch
there's integration with GPU Drive I
there's integration with GPU Drive I
made it five times faster than the
made it five times faster than the
original in three
original in three
days and go play with it
days and go play with it
there we're about to do carb sweeps on
there we're about to do carb sweeps on
that as well I just have to finish this
that as well I just have to finish this
so I can follow up with those guys on it
I'm trying to think what the this should
I'm trying to think what the this should
even look
even look
like I should just go look at
like okay this kind of got large didn't
like okay this kind of got large didn't
it
what happened where there's no lm. C
what happened where there's no lm. C
file is
file is
there oh
man oh yeah here was the original
perfect so so float star
should just be a float pointer to the
should just be a float pointer to the
weights as well
right
yeah e
see yeah one second well you'll see what
see yeah one second well you'll see what
I'm trying to do
I'm trying to do
um we're using on it to like start a
um we're using on it to like start a
bunch of stuff I haven't written C in 10
bunch of stuff I haven't written C in 10
years but there is going to be we have
years but there is going to be we have
right now we have the environment in C
right now we have the environment in C
we have um the rendering in C and all I
we have um the rendering in C and all I
need to figure out how to do is get the
need to figure out how to do is get the
networks I've trained to actually run I
networks I've trained to actually run I
can get pytorch to run in C++ but I
can get pytorch to run in C++ but I
can't compile that for web assembly so
can't compile that for web assembly so
we're just like getting Claude to give
we're just like getting Claude to give
us a shitty custom thing to just so I
us a shitty custom thing to just so I
can get a demo working and then maybe
can get a demo working and then maybe
from there I'll figure out how to like
from there I'll figure out how to like
either use something or write something
either use something or write something
to do full code gen for
everything we'll just go back and forth
everything we'll just go back and forth
with this thing a couple of times we'll
with this thing a couple of times we'll
probably get it so
probably get it so
here's the idea right I'll show you
here's the idea right I'll show you
what's going on here
um I hate having to like lean on Claude
um I hate having to like lean on Claude
for any of this crap man but so here we
for any of this crap man but so here we
have here like 300 some odd lines here's
have here like 300 some odd lines here's
the entire snake environment ported from
the entire snake environment ported from
scon to C it's got everything that you
scon to C it's got everything that you
need it's almost one to one with the
need it's almost one to one with the
original I really don't like the way
original I really don't like the way
that the 1D like the array logic does
that the 1D like the array logic does
indexed like this so I'll have to think
indexed like this so I'll have to think
about that but everything else should be
about that but everything else should be
good and then we have a rib renderer
good and then we have a rib renderer
right here which is very very simple um
right here which is very very simple um
that does the graphics right and do I
that does the graphics right and do I
even have this yeah I still have this
even have this yeah I still have this
open
open
so this version is not correctly scaled
so this version is not correctly scaled
but you can get the idea this is snake
but you can get the idea this is snake
enf um now I
enf um now I
have this other file here which it does
have this other file here which it does
human input with
human input with
RB and uh sets all the parameters
RB and uh sets all the parameters
everything and I've been trying a bunch
everything and I've been trying a bunch
of different
ways like this here is the pytorch C++
ways like this here is the pytorch C++
API this one's actually very very easy
API this one's actually very very easy
to get working this is pretty nice um I
to get working this is pretty nice um I
would I would accept having a little bit
would I would accept having a little bit
of C++ if I could make this work but you
of C++ if I could make this work but you
can't compile pytorch for web assembly
can't compile pytorch for web assembly
as far as I can tell so that sucks um I
as far as I can tell so that sucks um I
tried Onyx that was also a pain I tried
tried Onyx that was also a pain I tried
tiny grad a little bit and I couldn't
tiny grad a little bit and I couldn't
quite figure out a reasonable way to do
quite figure out a reasonable way to do
that so now I'm just doing like a oneoff
that so now I'm just doing like a oneoff
thing for just some very simple Nets
thing for just some very simple Nets
just to get this demo running and then
just to get this demo running and then
hopefully we'll do we'll find a way to
hopefully we'll do we'll find a way to
like get around that afterwards if this
like get around that afterwards if this
thing is
thing is
substantial okay so what does this thing
substantial okay so what does this thing
give us okay yeah this is Trivial as
give us okay yeah this is Trivial as
expected
let's do oops where are
we
we
save
save
plat
nope
nope
okay architecture.
text oh set no paste
model was it
snake snake model other way
around
model and then you save this
to oh no it just wants the file
wait file name
plus oh stupid I don't want this at
plus oh stupid I don't want this at
least not now maybe in the
least not now maybe in the
future two
file file
file file
name flat snake. PT okay this is
good yeah
quite a bit of beginner in RL well
quite a bit of beginner in RL well
welcome to puffer lib uh this is me
welcome to puffer lib uh this is me
doing crazy [ __ ] the normal stuff in
doing crazy [ __ ] the normal stuff in
puffer lib is much simpler and
puffer lib is much simpler and
easier
easier
so right here we have all the puffer
so right here we have all the puffer
stuff we've got all sorts of demos we
stuff we've got all sorts of demos we
have all sorts of fast M that you can
have all sorts of fast M that you can
play around with with very very simple
play around with with very very simple
python code without a bunch of uh
python code without a bunch of uh
complicated crap let me let me see if I
complicated crap let me let me see if I
find the main example
find the main example
file so where is it clean puff files our
file so where is it clean puff files our
main demo file it is somewhat chunky
main demo file it is somewhat chunky
there are only about 300 lines of actual
there are only about 300 lines of actual
RL code in here that Implement po the
RL code in here that Implement po the
rest of it does logging and stuff so you
rest of it does logging and stuff so you
can tell what's going on including this
can tell what's going on including this
nice like little local dashboard and
nice like little local dashboard and
other stuff for that you got a bunch of
other stuff for that you got a bunch of
Ms you can try out here should be nice
Ms you can try out here should be nice
and easy
all right
all right
so that is what I am doing full-time I
so that is what I am doing full-time I
am trying to make reinforcement learning
am trying to make reinforcement learning
sane and easy though admittedly writing
sane and easy though admittedly writing
stuff in C is not exactly sane or
stuff in C is not exactly sane or
easy yeah of
easy yeah of
course this is basically what I'm doing
course this is basically what I'm doing
at the moment this is like a weird day
at the moment this is like a weird day
for me I'm just I'm trying to make a
for me I'm just I'm trying to make a
really cool demo because it would let me
really cool demo because it would let me
put one of the M's that I built online
put one of the M's that I built online
so people could play it against the AIS
so people could play it against the AIS
which would probably be like a really
which would probably be like a really
good way to show off puffer it's the
good way to show off puffer it's the
only reason I'm doing this otherwise
only reason I'm doing this otherwise
like we have way simpler ways of doing
like we have way simpler ways of doing
stuff
okay where's the C code that this thing
wrote more than I wanted it to write but
wrote more than I wanted it to write but
this is decent enough I
this is decent enough I
think copy this and we're going to start
think copy this and we're going to start
we're going to actually do some stuff
we're going to actually do some stuff
with this so copy Claud snake. C
um
okay standard lib math
okay standard lib math
we have this main function up top so we
we have this main function up top so we
have to
have to
go it's C so all this actually needs to
go it's C so all this actually needs to
go up
top linear layer R okay this is what we
top linear layer R okay this is what we
wanted we
wanted we
wanted this is really simple
right then we have load weights
okay and we need to now merge
these which we can do
let's do this up
here
here
and Sample input here that's going to
and Sample input here that's going to
have to get
have to get
moved but we can start with
moved but we can start with
this we can start with
this print
this print
F done
all right
all right
and
rehidden oh God this is the worst that
rehidden oh God this is the worst that
is not a good
is not a good
implementation uh not one
implementation uh not one
bit but we'll start
here what
sh okay
local this one is
local this one is
good and we're going to
GCC this
GCC this
one
and
yeah FL snake
yeah FL snake
flat snake.
flat snake.
PT for model
PT for model
name build
local forget that I'm writing
local forget that I'm writing
[Music]
C this
runs make game
well there's no way that actually works
right yeah this is not the right file I
right yeah this is not the right file I
don't think
because
local okay it's it's in
local okay it's it's in
here do class snake
here do class snake
game error loading
really what did I have to do for this
really what did I have to do for this
again there was something right
shoot l r
should just need the
should just need the
lib which I have
may as
may as
well GPT while I still have the
well GPT while I still have the
subscription
okay
I don't know why this is not in the
I don't know why this is not in the
library
path this one should work I
believe I had to learn more about how
believe I had to learn more about how
this stuff works
this is what yours are writing python
this is what yours are writing python
does to
you
what
what
WL
WL
comma that's freaking bizarre
uh well that's new
well I guess we'll
not we'll just have to export for now
no such file or
no such file or
directory that is bizarre
can I not like
I actually don't understand how the hell
I actually don't understand how the hell
that's
possible oh wait is this an internal
possible oh wait is this an internal
error this could be an internal error
error this could be an internal error
right I didn't realize I'm I'm stupid
right I didn't realize I'm I'm stupid
okay
there that's what it
there that's what it
was okay so I understand what was
was okay so I understand what was
happening now it was the no such file or
happening now it was the no such file or
directory was on opening of the file
duh let's
duh let's
do make some changes
here and
yeah now we're now we're jamming
yeah now we're now we're jamming
because this is so nice look how fast
because this is so nice look how fast
the build times are with that we just
the build times are with that we just
immediately can build our code we can
immediately can build our code we can
run our code things are instantaneous
run our code things are instantaneous
this is the way you know code is
this is the way you know code is
supposed to be right and I'm the red
supposed to be right and I'm the red
snake there that's like right next to
snake there that's like right next to
the food you can see it
the food you can see it
right now I'm okay perfect so now all we
right now I'm okay perfect so now all we
have to do
have to do
is do we get done yes done
is do we get done yes done
here I'm actually incredibly surprised
here I'm actually incredibly surprised
that that even runs first try uh I'm
that that even runs first try uh I'm
going to go use the restroom and then
going to go use the restroom and then
what we're going to do is we're going to
what we're going to do is we're going to
get this thing correctly loading and
get this thing correctly loading and
controlling the
controlling the
snakes and if this all works correctly I
snakes and if this all works correctly I
will be incredibly happy because
will be incredibly happy because
like I'm just so sick of like big heavy
like I'm just so sick of like big heavy
build systems and things to maintain
build systems and things to maintain
every time I build a demo like if
every time I build a demo like if
something like this works and we can
something like this works and we can
just have a file that like you build
just have a file that like you build
with
with
GCC in instantly and we can just stick
GCC in instantly and we can just stick
this online stick it locally do whatever
this online stick it locally do whatever
we want with it that's awesome so I'll
we want with it that's awesome so I'll
be right
back
e e
okay I saw your thing on Twitter uh DT I
okay I saw your thing on Twitter uh DT I
don't know if you're still there but um
don't know if you're still there but um
we do have Discord it's literally
we do have Discord it's literally
discord.gg
discord.gg
puffer so we're not hard to
puffer so we're not hard to
find I've had a few people try to buy
find I've had a few people try to buy
the URL off of me but it's ours
discord.gg
puffer paid a pretty penny for that one
okay
so take these
so take these
freeze put them down with the other
freeze put them down with the other
freze
and should be right
and should be right
here what are you trying to do today by
here what are you trying to do today by
the way I started a code to make a
the way I started a code to make a
faster breakout end with puffer lib you
faster breakout end with puffer lib you
might want to pick another one because
might want to pick another one because
we have another guy in here who is
we have another guy in here who is
already doing breakout with puffer um
already doing breakout with puffer um
let me find you
this but we are if you wanted to make uh
this but we are if you wanted to make uh
fast Atari M for puffer we actually we
fast Atari M for puffer we actually we
actively that is one of the things we
actively that is one of the things we
want contributions of like if you just
want contributions of like if you just
like look at the way we did the snake en
like look at the way we did the snake en
or like one of the other M and just make
or like one of the other M and just make
million step Atari M that's exactly what
million step Atari M that's exactly what
we're looking for at the moment um
we're looking for at the moment um
unfortunately there are no bounties on
unfortunately there are no bounties on
things like this until we actually have
things like this until we actually have
Revenue but you know we will give you
Revenue but you know we will give you
some shout outs and some stuff for
that where's this stuff okay so here he
that where's this stuff okay so here he
forked puffer and if you check his thing
forked puffer and if you check his thing
he's
added ocean where is this
thing do have Breakout where is
it I don't know where his thing is I
it I don't know where his thing is I
know I saw his Branch he has a branch
know I saw his Branch he has a branch
somewhere
somewhere
here oh it's probably on dev is why yeah
here oh it's probably on dev is why yeah
that's why it's got to be on dev yeah so
that's why it's got to be on dev yeah so
right here I'll link you his
stuff um so we have somebody else doing
stuff um so we have somebody else doing
pong uh the ones that people haven't
pong uh the ones that people haven't
done yet I honestly I think that the
done yet I honestly I think that the
best ones to do would be like the
best ones to do would be like the
original dqn 7
original dqn 7
environments um which
environments um which
are let me show
are let me show
you we have bindings for
them yeah I'll show you
them yeah I'll show you
so oops let me find a proper
term oh cool this actually this train us
term oh cool this actually this train us
nice
model so here are uh the default Atari M
model so here are uh the default Atari M
which are the ones that are used in the
which are the ones that are used in the
original dqn so you have your pick uh
original dqn so you have your pick uh
beam Rider
beam Rider
Enduro uh cubert sequest or space
Enduro uh cubert sequest or space
inviders pong and breakout are already
inviders pong and breakout are already
being done I'm trying to think which of
being done I'm trying to think which of
these would be hard versus
these would be hard versus
easy probably Space Invaders would be
easy probably Space Invaders would be
like relatively reasonable to
like relatively reasonable to
do I think I haven't played I really
do I think I haven't played I really
should play some more of these let me
see let's
see let's
see yeah that's what I'm looking for
see yeah that's what I'm looking for
for
you okay so this is this is cqu
you okay so this is this is cqu
apparently uh I'm not sure how I'm what
apparently uh I'm not sure how I'm what
I'm what the actions are supposed to be
here oh for some reason I can't press
here oh for some reason I can't press
just the down
just the down
key oh this okay so don't run into
those what are you supposed to do
let's
let's
see you die when you go to the surface
really oh you're supposed to pick up
really oh you're supposed to pick up
these passengers or
something I don't know if I have the
something I don't know if I have the
keybind set for this this one would
keybind set for this this one would
probably be slightly difficult to do
probably be slightly difficult to do
yeah there's stuff shooting projectiles
yeah there's stuff shooting projectiles
and stuff so maybe not this
and stuff so maybe not this
one let's
one let's
do test cubert any
good okay so this is the
cubert what
I'm confused how are you supposed to
I'm confused how are you supposed to
play this
thing games do not make sense to me I
thing games do not make sense to me I
think Space Invaders is the one that's
think Space Invaders is the one that's
easy that makes actual
sense this one should be
sense this one should be
good let me see is this
hard it's not too bad to do something
hard it's not too bad to do something
like this
right probably not as easy as like P A
right probably not as easy as like P A
breakout but not that bad
yeah looks
yeah looks
reasonable you don't have to so the
reasonable you don't have to so the
thing is you don't have to make the
thing is you don't have to make the
graphical version super fast either like
graphical version super fast either like
what you're going to end up doing is
what you're going to end up doing is
you're going to end up having like some
you're going to end up having like some
State based thing
did I get hit
oh they get closer is
why okay cool I mean it's reasonable
why okay cool I mean it's reasonable
enough
right probably somewhat harder than
right probably somewhat harder than
breakout not crazy though
let me see if I can win a level real
let me see if I can win a level real
quick just to make sure there's not like
quick just to make sure there's not like
something crazy that I'm forgetting like
something crazy that I'm forgetting like
is there like a spaceship or something
is there like a spaceship or something
that like comes to kill
you challenging though
ah they got
ah they got
me but I have some lives left
me but I have some lives left
maybe that
works I have a life left yes I
do yep okay I died I got
do yep okay I died I got
so yeah hard
so yeah hard
game is there application of ddpg method
game is there application of ddpg method
in here nope we just do so puffer is not
in here nope we just do so puffer is not
focused on algorithms at the moment
focused on algorithms at the moment
because so far my I've been in RL for
because so far my I've been in RL for
like seven plus years and there's been
like seven plus years and there's been
like no algorithmic progress over that
like no algorithmic progress over that
time frankly like so far just having
time frankly like so far just having
fast Sims and good data and getting the
fast Sims and good data and getting the
engineering right and hyper prams and
engineering right and hyper prams and
stuff has mattered so much
more so that's what we're focused on
more so that's what we're focused on
with puffer and the results speak for
with puffer and the results speak for
themselves
like let me show you something this is
like let me show you something this is
something that we have that nobody else
has uh where is
it so we have all these sweeps right
it so we have all these sweeps right
right all these hyper pram
right all these hyper pram
sweeps and if I just go find one of
sweeps and if I just go find one of
them I did all these GPU Drive sweeps
them I did all these GPU Drive sweeps
that are like clogging up my
that are like clogging up my
inventory here's beam rider for
inventory here's beam rider for
instance this one work no this one
instance this one work no this one
didn't work everyone else though I can
didn't work everyone else though I can
pick any other
pick any other
end come
on let's do like this
on let's do like this
one this one should be good this is the
one this one should be good this is the
Enduro
Enduro
one so look at this we just
one so look at this we just
automatically tune all the hyper prams
automatically tune all the hyper prams
in the environment with carbs and buuse
in the environment with carbs and buuse
Hyper pram algo and we kind of just
Hyper pram algo and we kind of just
solve everything just based on tuning
solve everything just based on tuning
alone so we get like Optimal uh optimal
alone so we get like Optimal uh optimal
policy for any amount of wall clock time
policy for any amount of wall clock time
invested in solving and we get over the
invested in solving and we get over the
course of training we get better and
course of training we get better and
better policies
better policies
so yeah this is stuff we're doing with
so yeah this is stuff we're doing with
puffer these
days go back to some
see so
I think I need to
do where's input
Dem
ah 11 time 11 I believe
28 output dim
28 output dim
[Music]
[Music]
is we'll see
so our default policy here
oh okay this is actually a
oh okay this is actually a
Char do you have a Discord or dedicated
Char do you have a Discord or dedicated
Community yep discord.gg
puffer got dedicated support and
puffer got dedicated support and
discussion and all of
that also if uh you have not already we
that also if uh you have not already we
are almost at 800 Stars let me
are almost at 800 Stars let me
see yeah 798 Stars so if anybody wants
see yeah 798 Stars so if anybody wants
us to help us hit 800 today feel free
us to help us hit 800 today feel free
helps me out a lot this is all free and
helps me out a lot this is all free and
open source I work on it full
open source I work on it full
time more than fulltime
time more than fulltime
really kind of all I
really kind of all I
do okay discret a
do okay discret a
four we have uh
four we have uh
one second I got to take care of one
one second I got to take care of one
thing I know what the data shape is
thing I know what the data shape is
though so we'll fix the Nets as soon as
though so we'll fix the Nets as soon as
I I got to take care of one thing real
quick e
okay let me let me just uh open one
okay let me let me just uh open one
thing here
text kind of juggling a million things
today okay so we now we know what this
today okay so we now we know what this
is now right
so the input dim is going to be 11 by
so the input dim is going to be 11 by
11 and uh the hidden dim is 128 output
11 and uh the hidden dim is 128 output
dim is
four 799 Stars awesome if anybody else
four 799 Stars awesome if anybody else
is watching and hasn't started we could
is watching and hasn't started we could
hit 800 right
now I'm going to just tweet it so we hit
now I'm going to just tweet it so we hit
it
so we hit 800 right now
I'm going to beat will will to
I'm going to beat will will to
slither.io stuff
all right hopefully that gets us 800
all right hopefully that gets us 800
today
so let me grab from the other
thing
thing
compute where compute
compute where compute
observations I get called oh no it gets
observations I get called oh no it gets
um M action
um M action
tensor that
forward where is
forward where is
this Step n
this Step n
oh observations to tensor
right yes so it's right here it's just m
observations so what we have to do is we
observations so what we have to do is we
have to
cast I'm I'm going to write this myself
cast I'm I'm going to write this myself
instead of using
instead of using
CLA
so what we're going to do is we're going
so what we're going to do is we're going
to allocate this up top
input dim
input dim
times not size of float because it's a
times not size of float because it's a
Char and then what we're going to have
Char and then what we're going to have
to do is
um float
um float
Star right here we should just fill
I less than batch
I less than batch
size times input
Dem h
800 heck
yeah that's
yeah that's
awesome thank you guys for the support
awesome thank you guys for the support
on
on
this we passed sample Factory this week
this we passed sample Factory this week
that's
crazy
crazy
wow we're going to keep up the dev I'm
wow we're going to keep up the dev I'm
going to keep up the dev I'm going to
going to keep up the dev I'm going to
see if I can even up the hours a little
see if I can even up the hours a little
bit cuz really like this is starting to
bit cuz really like this is starting to
take off we just need to get I want to
take off we just need to get I want to
get a couple of these demos so we get a
get a couple of these demos so we get a
like I think once I have a few of these
like I think once I have a few of these
demos online people will really see what
demos online people will really see what
we're doing here and then everything's
we're doing here and then everything's
just got to get polished up with the SIM
just got to get polished up with the SIM
update but yeah I'm not going anywhere
update but yeah I'm not going anywhere
we're going to fix we're going to fix
we're going to fix we're going to fix
this
this
field that's so
awesome thank you
best thing I can do is just keep coding
best thing I can do is just keep coding
here
um no this is the wrong syntax I'm
um no this is the wrong syntax I'm
thinking scon right it's float
right I think this is
it bti weits
and
output this is so stupid how that they
output this is so stupid how that they
did this
yeah this gets
yeah this gets
let's put these
let's put these
allocations
here what did we make the signature
input probably not going to need the
input probably not going to need the
print but we'll use it as a debug for
print but we'll use it as a debug for
now input hidden output weights
and then output
weights and then here this does not have
weights and then here this does not have
to be random this is actually going to
to be random this is actually going to
be M actions I
equals I think I need to cast right
unsigned int
like
this Malik invalid
size sample
output okay so it got here and then we
output okay so it got here and then we
got Malik
invalid
size how's that possible right
size how's that possible right
because MLP forward just gets called
because MLP forward just gets called
here and there's no Malik after
here and there's no Malik after
this invalid size unsorted
oh shoot
oh shoot
uh
yeah
put I wish I had like some at least
put I wish I had like some at least
super Maven or something to auto
super Maven or something to auto
complete for
I really would like to have the super
I really would like to have the super
Maven just work with these C files I
Maven just work with these C files I
don't know what's wrong with
it bothers me
well maybe I should just be coding Rossy
well maybe I should just be coding Rossy
for a couple days
anyways then output
anyways then output
dim
plus join my stream right now you're
plus join my stream right now you're
doing slither
right what's up
well we can do a CO stream thing at some
well we can do a CO stream thing at some
point as well let me see what are you up
point as well let me see what are you up
to I'm sure you've gotten Slither to do
to I'm sure you've gotten Slither to do
something right
H that's
funny I'm in the Stream what are you
doing okay open AI gem environment that
doing okay open AI gem environment that
connects you to real Slither servers all
connects you to real Slither servers all
right
cool you're GNA get so banned on this
cool you're GNA get so banned on this
Cloud flares cloud flar is Banning you
you're getting Cloud flare BL band for
this freaking Bing slither
so slow
yeah yeah you can do this this is
cool okay W's doing fun stuff as
cool okay W's doing fun stuff as
always we do things rather differently
always we do things rather differently
uh
okay all I wanted to do is fix this uh I
okay all I wanted to do is fix this uh I
I need to make this thing actually
I need to make this thing actually
sample action so what we're going to do
sample action so what we're going to do
is
is
if uh was
it output I greater
it output I greater
than
than
Max is a logit
Max is a logit
right logit
God I'm so used to
python uh Max logit equal output
I return action
I return action
equals uh
I
I
okay and then we just return
I'm so used to python that I still want
I'm so used to python that I still want
to put like the Extra Spaces even though
to put like the Extra Spaces even though
I have the bra the braces is that
silly like I don't know
unsigned
int return the
action what's do
here did I put a parentheses instead of
here did I put a parentheses instead of
a brace
somewhere
huh what did I
huh what did I
do into I zero
expected oh you're up
top okay well this does not freaking
work if I run it for
longer why did it work the first time I
longer why did it work the first time I
did it
well I'm going to just paste this into
well I'm going to just paste this into
CLA at least I wrote it myself um this
CLA at least I wrote it myself um this
portion
portion
myself so the getting back used to C
myself so the getting back used to C
again is in
again is in
progress I actually really if I have a
progress I actually really if I have a
couple debug tools for like a couple
couple debug tools for like a couple
debug tools I'd actually be very very
debug tools I'd actually be very very
happy with
happy with
this let me
see and I'm not even using super Maven
see and I'm not even using super Maven
or anything there
or anything there
so this can be substantially less
so this can be substantially less
painful or not this we want
painful or not this we want
clae um
check dimensions in
check dimensions in
code might be providing observations
code might be providing observations
with a different
size obervation
size Okay so so it does not really know
size Okay so so it does not really know
it's just saying it's giving me generic
it's just saying it's giving me generic
debugging
debugging
advice cool so I actually have to find
advice cool so I actually have to find
my own stuff which is
[Music]
[Music]
better it's breaking in the forward pass
better it's breaking in the forward pass
anyways we know right
oh isn't it just the print
statement output
dim no wait this is valid
I hate not having to I hate not having
I hate not having to I hate not having
um like multi-dimensional arrays is
um like multi-dimensional arrays is
there a reason to
there a reason to
do is there a reason to do everything
do is there a reason to do everything
flat versus in multi-dimensional arrays
flat array is
contiguous when using flat arrays do a
contiguous when using flat arrays do a
manual index
interesting how does this do
it it's always flat with here
it it's always flat with here
H I know I do not like the uh the flat
H I know I do not like the uh the flat
flat indexing for
flat indexing for
everything that's the one big complaint
everything that's the one big complaint
I mean we have the thing is we have
I mean we have the thing is we have
access to the exact same thing as I
access to the exact same thing as I
would want normally don't
we yeah we could just make this a
we yeah we could just make this a
two-dimensional array if we wanted to I
two-dimensional array if we wanted to I
have to do some looking into like
have to do some looking into like
whether that's actually a bad idea or
whether that's actually a bad idea or
not we'll leave it this way for now
so let's do what is this
Lo
out you can I forget you can do it in
out you can I forget you can do it in
Loops like
Loops like
this put I
this put I
times them
plus
plus
I that a thing no
I that a thing no
wait yeah this is it right this is the
wait yeah this is it right this is the
index thing
oh well this is wrong it's supposed to
oh well this is wrong it's supposed to
be 16 right
don't need
don't need
this
this
okay so this is now running but crazy
okay so this is now running but crazy
things are
things are
[Music]
[Music]
happening so let's comment out these
happening so let's comment out these
prints
oh I uh I just remembered a thing it's
oh I uh I just remembered a thing it's
okay I'll do it in a
okay I'll do it in a
second and where's the FPS for
second and where's the FPS for
this RB
client well maybe this just works
client well maybe this just works
okay so this is way too
fast I don't know why it's this fast
fast I don't know why it's this fast
something's weird
something's weird
right something's definitely
weird ah well this was not this is not
weird ah well this was not this is not
going to work
right yeah this is this action is
right yeah this is this action is
totally screwed up
totally screwed up
um don't star
output looat
star so what we'll do is
well what is this Loop that I just wrote
well what is this Loop that I just wrote
this doesn't make any freaking
this doesn't make any freaking
sense ye
I really miss having Vector
I really miss having Vector
Ops I have to think about
that let's do like
this batch
this batch
size it's I times output demm
size it's I times output demm
plus
J
J
J how's the Breakout game
J how's the Breakout game
going uh that is Noah is doing
breakout this is the snake thing that
breakout this is the snake thing that
I'm working on here
see 92
see 92
I always forget
I always forget
these unsigned
inar something's still weird
so first of
all all this should
go all this should go above here so you
go all this should go above here so you
can still play it
okay let's
okay let's
see so so some I see where I am on the
see so so some I see where I am on the
board I'm this red dot that's going
board I'm this red dot that's going
towards the blue one right now um it's
towards the blue one right now um it's
like
like
spamming all these little snakes all
spamming all these little snakes all
over though which is weird cuz like some
over though which is weird cuz like some
of them look like they're behaving
reasonably like a few of them
can clim check for
[Music]
[Music]
playing F
sanitize d
sanitize d
[Music]
g clang is kind of
chunky oh because it installs all the
chunky oh because it installs all the
C++ stuff but you can use it with C
C++ stuff but you can use it with C
that's fine
it's fine
ah so look at
ah so look at
this this is exactly what I
wanted this shows me that I'm going out
wanted this shows me that I'm going out
of
of
bounds so that is what is wrong
and shows me exactly where as
well batch size times input
well batch size times input
dim MH
this is a Char
star with
star with
height what two * * Vision + 1 2 *
height what two * * Vision + 1 2 *
Vision +
Vision +
one time numb
snakes what is being passed for vision
snakes what is being passed for vision
vision is being past is two this is
vision is being past is two this is
wrong it should be five
uh this is still being passed wrong
uh this is still being passed wrong
which is very weird
size is
1936 1936
1936 1936
bytes this looks totally fine to
bytes this looks totally fine to
me oops that would have been bad
I actually want to get out of this
okay 11 * 11 here batch size is num
okay 11 * 11 here batch size is num
snakes
snakes
observations batch size times input dim
right float M observations of I
okay print I
percent percent
percent percent
D like this instead
okay there it is so
okay there it is so
two
282 that's weird right how's it out of
282 that's weird right how's it out of
bounds here
already oh is is this two
dimensional
no it allocates here a Char
no it allocates here a Char
star num snakes time 2 * Vision Plus 1 2
star num snakes time 2 * Vision Plus 1 2
* Vision where do Vision come in it's in
* Vision where do Vision come in it's in
the init
the init
right unless it's not being passed
correctly for
allocating Vision vision is five total
allocating Vision vision is five total
bytes this is
bytes this is
good breakouts going well M trains M
good breakouts going well M trains M
while training runs at 300K nice working
while training runs at 300K nice working
on some smaller features that were in
on some smaller features that were in
the original Breakout game
the original Breakout game
perfect great
work it's exactly what we want
this says that I'm allocating
this says that I'm allocating
bytes but I am out of memory I'm out of
bytes but I am out of memory I'm out of
Bounds at
two how's that possible
m.
observations what's batch size batch
observations what's batch size batch
size is num
snakes 16
see about this
see about this
one let's see is it it's failing on 148
one let's see is it it's failing on 148
which is oh it's actually failing on the
which is oh it's actually failing on the
assignment that's even
weirder
wait time size of
float
float
dad me
dad me
stupid me so stupid
stupid me so stupid
stupid
man got to learn my
C it's still spamming a bunch of snakes
C it's still spamming a bunch of snakes
all over the place so we'll have to
all over the place so we'll have to
figure out what the heck is going on
figure out what the heck is going on
there we have a lot of snakes that are
there we have a lot of snakes that are
behaving reasonably though
food a few of these are like
well let's figure out why all of these
well let's figure out why all of these
like are flashing all over
H really not seeing
H really not seeing
anything you know what one thing I want
anything you know what one thing I want
to do is I want to take a screenshot and
to do is I want to take a screenshot and
count the actual number of snakes on any
count the actual number of snakes on any
one
frame how many snakes are
there one two 3 four five six 7
there one two 3 four five six 7
8 10 11 12 13 14 15 16 so there are 16
8 10 11 12 13 14 15 16 so there are 16
snakes uh they do appear to be dying
snakes uh they do appear to be dying
randomly in ways that should not happen
what if I give them a random action
instead okay if I give them a random
instead okay if I give them a random
action this does not
action this does not
happen so my guess is that I'm out of
happen so my guess is that I'm out of
bounding the I'm like out of bouncing
bounding the I'm like out of bouncing
the action
somehow unsigned into
somehow unsigned into
action is zero
output
dim and then actions of
dim and then actions of
I is equal
I is equal
to
to
action
action
print percent d
yeah
yeah
oh I
oh I
understand I just forgot to update a
understand I just forgot to update a
thing
boom okay so they're these are not doing
boom okay so they're these are not doing
anything at the
anything at the
moment they're not doing anything yet
moment they're not doing anything yet
let's see if we go get the actual uh
let's see if we go get the actual uh
policy that we do want to be loading
policy that we do want to be loading
because I think we're loading bad
because I think we're loading bad
weights at the moment
one
B so this is the model that we
B so this is the model that we
trained as we can see this is actually a
trained as we can see this is actually a
very reasonable looking model
this trains very quickly this is less
this trains very quickly this is less
than five minutes of training a very
than five minutes of training a very
basic policy it trains stupidly fast
basic policy it trains stupidly fast
nearly uh this is a quarter million 3/4
nearly uh this is a quarter million 3/4
of million steps per
of million steps per
second with like whatever random
second with like whatever random
settings I happen to
settings I happen to
have and then if I grab this model from
here and what we're going to do ISS
now we're going to curl this
model yeah
where's the script that we
where's the script that we
added I forgot what we named it save net
flat and let's
flat and let's
actually let's just print
okay we're going to have to do a little
okay we're going to have to do a little
bit of messing with this
so are these is not
transposed we're going to need to make
transposed we're going to need to make
some updates in order to make this work
some updates in order to make this work
cuz there's also a value net that we
cuz there's also a value net that we
have to
have to
ignore I will uh I'll be right back when
ignore I will uh I'll be right back when
use the restro and we'll finish figuring
use the restro and we'll finish figuring
out how to get this net loaded and as
out how to get this net loaded and as
soon as we have the weights loaded
soon as we have the weights loaded
correctly we will have this thing like
correctly we will have this thing like
Standalone runnable on anything which
Standalone runnable on anything which
will be awesome so I'll be right
back
e
e e
okay
okay
so let us take a look at what this
so let us take a look at what this
network looks like and if it's
network looks like and if it's
correct so it looks like it is a
four the tensors are like transposed or
four the tensors are like transposed or
something
right let me just put this back into CLA
right let me just put this back into CLA
real quick CU I don't know how the
real quick CU I don't know how the
shapes
okay some
okay some
C4 work
C4 work
code
uh can I not paste reasonably
there we
go e
okay we'll see about
okay we'll see about
that and in the meantime
okay so let's copy this because
get rid of
this
oops second first layer second
oops second first layer second
layer Max over outputs this is
fine and then this is the this is just
fine and then this is the this is just
the
the
transpose so I no no that was
transpose so I no no that was
Jank this already had a bias in it which
Jank this already had a bias in it which
is
good
good
good and then what we should be able to
good and then what we should be able to
do
do
is for Li environment sea
snake okay
okay build where is
it oh what happened here I
was something is happening differently
was something is happening differently
here right
still doesn't look
right so we have uh we have some options
right so we have uh we have some options
here we should be able to do
here we should be able to do
python snake mode
python snake mode
eval eval model path oops let me make
eval eval model path oops let me make
this this covered by
camera uh snake
camera uh snake
MLP render
MLP render
mode uh RB
it's render Dash mode
RB
okay isn't that nice this is so this is
okay isn't that nice this is so this is
what we are supposed to be able to
what we are supposed to be able to
get and we can see that we have very
get and we can see that we have very
reasonable models look how smooth that
reasonable models look how smooth that
is with the MLP as well cuz the model is
is with the MLP as well cuz the model is
so
so
tiny so this is what we're this is what
tiny so this is what we're this is what
we are aiming
we are aiming
for so we now we know the model is
good it just means we're loading or
good it just means we're loading or
using it wrong
so let me see about that
check the MLP
check the MLP
forward it
forward it
[Music]
does no it's not not
working okay
so I'm trying to think the best way to
so I'm trying to think the best way to
debug
debug
this we have the tensor shapes
right input dim should be 121
let me see what it even gave me
here
yes first layer
weights torch. size
weights torch. size
did it do it right let me
did it do it right let me
see 128
see 128
yeah first layer bias second layer
weights linear layer weights are stored
weights linear layer weights are stored
in transpose
in transpose
format yes that's what we that we
format yes that's what we that we
thought
right linear
right linear
layer
input wait input
weights see linear weights
weights see linear weights
bias okay so weights plus input dim
bias okay so weights plus input dim
times hidden
times hidden
size and this is a a float offset not a
size and this is a a float offset not a
bite offset so this is
bite offset so this is
correct and
then bias output float star output
hidden batch
hidden batch
size and put them hidden
them let me go deal with one thing real
quick e
okay
okay
man we're very close to having this
man we're very close to having this
thing
working maybe okay we give the hidden
working maybe okay we give the hidden
size the hidden tensor let me see where
size the hidden tensor let me see where
we
we
allocated hidden dim output dim input
allocated hidden dim output dim input
dim
right
and second layer
and second layer
okay the input is Now hidden
okay the input is Now hidden
right and
weights plus input
weights plus input
dim so yeah this is skipping the first
dim so yeah this is skipping the first
layer and the first layer
layer and the first layer
bias weights plus and then this is now
bias weights plus and then this is now
the bias which is getting ridiculous
the bias which is getting ridiculous
these
these
offsets really compute these better
so input
so input
dim plus hidden dim times output dim is
dim plus hidden dim times output dim is
this
correct should
be output batch size and then what's
be output batch size and then what's
this action selection do
this action selection do
I times output
I times output
dim wait
what well this is
wrong oh they do from Jay okay this is
wrong oh they do from Jay okay this is
actually this is clever fine
jeez I think I'm going to have to just
jeez I think I'm going to have to just
like figure out
like figure out
how how these things are stored
right well we're going to have to
right well we're going to have to
actually get pretty
okay
so let's see the
format okay so we
format okay so we
have tur
[Music]
okay so this is our
okay so this is our
tensor
right and we can see
right and we can see
here that we're
here that we're
doing the first row
the 128 by 121
right so if I do weight to 121 it should
right so if I do weight to 121 it should
be
yes so this is now storing
let me think about
this it's they're doing it this this way
this it's they're doing it this this way
because they do weight
because they do weight
Matrix they're doing like WX plus bias
Matrix they're doing like WX plus bias
right cu the input dim is
121 so let me see the code does this
121 so let me see the code does this
look right then
batch
size output
dim input
dim
dim
and it's going to be
just output them I hate when they
just output them I hate when they
do need to perceptually group stuff you
do need to perceptually group stuff you
can't just spaces between everything is
can't just spaces between everything is
really
gross biased times input
dim plus
I times output dim I don't know if this
I times output dim I don't know if this
dim is this is
correct this is hard to
tell this should just be a m Mall
if I can just figure this portion out
right input
of
of
B times input
B times input
demm yes
because the column is okay
because the column is okay
plus
I
yes
yes
times
weights I * output
D wait B times input
Dem and then we have I times output
Dem I think that this looks right to
Dem I think that this looks right to
me this looks right to me
me this looks right to me
does well first we should make sure that
does well first we should make sure that
we're actually matching the model
right there no re hold
on oh I don't think there's even a re
on oh I don't think there's even a re
yeah the default model is really
basic that would be funny if that's like
basic that would be funny if that's like
that was the
issue
issue
no it's doing something
no it's doing something
different but not good
it's weird because it's
like
H let me
H let me
see incode decode
I'm trying to think how we can figure
I'm trying to think how we can figure
this freaking
out we could technically multiply the
out we could technically multiply the
two matrices
together all right
is this
really I'm surprised that this network
really I'm surprised that this network
is so
good value head
the weights are different from before
the weights are different from before
aren't
they or am I just making that
up now I'm making that
up now I'm making that
up
yeah okay so it's e
okay so it doesn't need the
okay so it doesn't need the
transpose
cool corrected linear
cool corrected linear
[Music]
[Music]
layer a row major colum major
layer a row major colum major
shenanigans
nice why does this change oh I guess
nice why does this change oh I guess
this changes because this is also
this changes because this is also
assuming
assuming
um okay we'll just remember we have to
um okay we'll just remember we have to
comment the re
this still not
working input dim should be
121 for
we should be able to maybe let's like
we should be able to maybe let's like
open the file and see if we're reading
open the file and see if we're reading
stuff
correctly e
yeah so there are the weights that's
yeah so there are the weights that's
what we expect
right I think I just have to
we could also not be reading the OBS
we could also not be reading the OBS
data
in I would think that this would
work let's see the observation data
one
one
three okay 121 divided
by it should be 49 or something
no should be like 60 I
no should be like 60 I
think yeah so 60
think yeah so 60
and then
and then
59 zero okay so we are seeing the data
59 zero okay so we are seeing the data
in here the way I would expect it to
be data is in here the way I would
be data is in here the way I would
expect it to be and
input 128 by 121
the first output then needs to
the first output then needs to
be 121
it's output dim isn't
it I think this is output
dim it's not because we read out of
dim it's not because we read out of
bounds it seems
is there anything else I'm missing that
is there anything else I'm missing that
it would be or is it just going to be
it would be or is it just going to be
this implementation being wrong
I mean I
I mean I
have we're not going out of bounds
have we're not going out of bounds
anywhere I know that at
least plus equals
least plus equals
no so is set to zero
correctly it should be output
dim well why is this out of
bounds I'm running this with um
bounds I'm running this with um
clang and this gives us overflow if I do
clang and this gives us overflow if I do
that
that
so I have the dimension that I got right
so I have the dimension that I got right
here it's
here it's
128 by 121 so it's it's the hidden
128 by 121 so it's it's the hidden
Dimension comma input
Dimension comma input
dim so the first 121 floats are going to
dim so the first 121 floats are going to
be the
be the
first uh the first row
then the input
jeez I'm like I'm not even positive this
jeez I'm like I'm not even positive this
is where the error is I don't know where
is where the error is I don't know where
else it would be though I confirmed that
else it would be though I confirmed that
we're not using a relu so it's literally
we're not using a relu so it's literally
just a linear
just a linear
net so it should just be linear layer
net so it should just be linear layer
linear
linear
layer I mean unless this is screwed up
layer I mean unless this is screwed up
let me
let me
see input dim times hidden
dim yeah that's the size of the weight
dim yeah that's the size of the weight
tensor it's the input right times the
tensor it's the input right times the
hidden
hidden
dim so that's where the bias is going to
dim so that's where the bias is going to
be input dim times hidden dim plus
be input dim times hidden dim plus
hidden
dim yeah then this is weights plus input
dim yeah then this is weights plus input
dim times hidden dim plus hidden dim
dim times hidden dim plus hidden dim
hidden dim output
dim it's bizarre
I'm trying to think if there's anything
I'm trying to think if there's anything
else this could
be I should double check the weight D
be I should double check the weight D
type is is uh it should be float 32 I
type is is uh it should be float 32 I
mean it's it's got to be the weight D
mean it's it's got to be the weight D
type is float 32
right yeah float
32 I mean we also we check that the
32 I mean we also we check that the
weights are what we
weights are what we
expect so cuz I can
expect so cuz I can
do
GDB and I can
GDB and I can
do let's
do let's
see linear
layer so I can do break on line
12 okay
12 okay
oops and I have input
oops and I have input
zero is three I have weights
zero is three I have weights
zero is y that's what we expect it to
zero is y that's what we expect it to
be um
o b yeah so these are
zeros if input is m byn
that's not how
that's not how
torch wait I don't think that's how
torch wait I don't think that's how
torch does it though that I think it
torch does it though that I think it
does torch it looks like to me torch
does torch it looks like to me torch
does ax plus b like WX plus b not xw+
B so it should be
what's the dimension of
that yeah it should be weight should
that yeah it should be weight should
be P by n i
No I mean we can go try to write this
No I mean we can go try to write this
out
I don't
I don't
know let's not do it online let's just
know let's not do it online let's just
do it here
so so we have like
so so we have like
B the weight should be batch size
B the weight should be batch size
times
times
input
input
right and then
and then we have multiply
this and it's uh
input oh wait it's batch input and batch
input oh wait it's batch input and batch
times input isn't
times input isn't
it wait no the weights are not batch
it wait no the weights are not batch
size the weights
size the weights
are hidden by
input oh maybe the inputs need to be
input oh maybe the inputs need to be
transposed because the input should be
transposed because the input should be
batched
batched
batch times
batch times
input maybe that's the
issue usually I write it as
issue usually I write it as
wtx yeah but the thing is they don't
wtx yeah but the thing is they don't
they already have it in the format so
they already have it in the format so
it's just
it's just
WX I think
right why does it look like the input
right why does it look like the input
needs to be transposed
well because it does that's
why does this tell me something hold on
yeah I'm just getting confused
here batch times input plus I
is that not
right I mean what we could do as well is
right I mean what we could do as well is
here another thing we should probably do
here another thing we should probably do
is like can I just print out
plus
I
I oh not plus I uh input
dim input
dim input
or I don't need to add anything because
or I don't need to add anything because
that will just give
me like what dimensions are we looking
me like what dimensions are we looking
at
here holy
hell
GDB so break on
GDB so break on
line
[Music]
[Music]
run
okay oh we have to
okay oh we have to
do you have to do slash N I forgot to
do you have to do slash N I forgot to
clear it
why am I not seeing the prince
it's just slash in
right [ __ ] why not saying
Prince is this windows it's WSL
no if I try running code on Native
no if I try running code on Native
Windows please just shoot me
maybe I didn't let me see
oh yep dope
oh yep dope
dope
okay is this what we want
this is not what we want is it
isn't this output them
no
no
wait
wait
yeah this not
it
huh oh wait cuz B
I'm confused wait
what happens if I
just no this doesn't
work dude I
work dude I
hate this is like the exact type of
hate this is like the exact type of
thing I just [ __ ] can't think about
thing I just [ __ ] can't think about
is like this level of
like I understand systems not
symbols I guess I just have to keep
symbols I guess I just have to keep
debugging it like
this let me just look
up for
is this it
is this it
I just have the [ __ ] indexing wrong
I just have the [ __ ] indexing wrong
let me see what did it
change so it
did O times input
did O times input
dim okay that looks potentially
wait man this is still
not do I'm I'm am I going to have to
not do I'm I'm am I going to have to
like write a map m
test
seriously I * output plus
seriously I * output plus
o b * input plus I
I'm just going to give it the whole
I'm just going to give it the whole
[ __ ] code I don't
care this is why I didn't want to have
care this is why I didn't want to have
to do this it's just like pasting slot
to do this it's just like pasting slot
back and
forth is so
stupid e
size e
I don't know what's wrong with
this [ __ ]
I guess I literally have to write
I guess I literally have to write
a I have to write like a test right
I don't even know how I do that with
I don't even know how I do that with
this
I mean I really should right there's
I mean I really should right there's
like nothing else I can
do this has got to be something like
do this has got to be something like
putting the data in wrong maybe
then e
can I tell from the
behaviors wiggle
Behavior they don't look like they're
Behavior they don't look like they're
fully
random would the OBS be
transposed would that even make sense
turn
Iron Range batch
sizeing writing python
sizeing writing python
[Music]
here for
like the reason I'm even thinking about
like the reason I'm even thinking about
this is because like they're doing this
this is because like they're doing this
wobbly
wobbly
thing they're doing like this wobbly
thing they're doing like this wobbly
thing which is
what am
I an
I man the the python run to
deepal zero
okay I'm not used to typing these
okay I'm not used to typing these
freaking symbols even
okay now they just like freaking go left
okay now they just like freaking go left
or right
straight which is weird
which one is I'm not controlling any of
which one is I'm not controlling any of
them am
I I should be able to be controlling one
I I should be able to be controlling one
of these what the hell's wrong
oh this is weird
yeah so now I'm actually controlling it
no so this doesn't
work
work
okay what if I just
like is there is there something that's
like is there is there something that's
just wrong with the observations here
just wrong with the observations here
right what I'm trying to figure out
does it respond to
anything that's so weird
I mean I'm I sure that this is the right
I mean I'm I sure that this is the right
policy in the first
place hang
place hang
on I want to just make absolutely sure
snake MLP flat snake
should give me invalid path
should give me invalid path
right yep
the snakes are good
no this is exactly the same
I'm just like
I'm just like
not seeing what I can even do
here is it just God awful to
debug
for
for e
could there be a difference in the way
could there be a difference in the way
the game is
the game is
implemented no because I loaded the P
implemented no because I loaded the P
torch nut before and it worked right
exact same
thing it's got to be somewhere in this
MLP context
MLP context
please I uh I have a trained P torch
please I uh I have a trained P torch
model that I've dumped all the weights
model that I've dumped all the weights
out of and I'm trying to just like it's
out of and I'm trying to just like it's
a really simple model it's just like an
a really simple model it's just like an
MLP and I have C codee for it and I'm
MLP and I have C codee for it and I'm
trying to get it to replicate the
trying to get it to replicate the
behavior in this environment so that I
behavior in this environment so that I
can just compile this whole thing into
can just compile this whole thing into
web assembly and put it
web assembly and put it
online and it's very annoying
online and it's very annoying
because like how the heck do you debug
because like how the heck do you debug
something like this
something like this
right I guess I really do just have to
right I guess I really do just have to
make a test case though like there's no
make a test case though like there's no
other way even though it's going to be a
other way even though it's going to be a
pain
pain
um I don't know in test
P
void signature
so float
so float
input
input
Malik now we need to get the input size
right here we can do observations like
this and then we will simply
do or
int z i less
than
than
input
input
di Plus
obervations we just make a little test
obervations we just make a little test
pattern here
right and
right and
then we
then we
[Music]
[Music]
do uh we call the MLP forward right
vations
vations
hidden
output size input
dim okay
then what is
then what is
this batch
size um
some plus
some plus
equal actions
I print
I print
F act
F act
some
DN
DN
some okay that's a little test for
some okay that's a little test for
this right and I just have to call
this right and I just have to call
it right
we call it
here all the same
signature minus observations cuz those
signature minus observations cuz those
are uh we actually can put this up here
are uh we actually can put this up here
right
what did I
do
do
expected nine
expected nine
args hidden output act out wait OBS
args hidden output act out wait OBS
hidden output actions weights
hidden output actions weights
we got arar
fine okay action sum is
fine okay action sum is
four and now we can make a python side
four and now we can make a python side
test for this so which
is test
model
two e
oh wait I
did what test data did I use
here yeah do you have this on GitHub
here yeah do you have this on GitHub
yeah all my stuff is on
yeah all my stuff is on
GitHub um this is like a port of the
GitHub um this is like a port of the
snake M that is already in scon we're
snake M that is already in scon we're
just trying to get it on web so if
just trying to get it on web so if
you're looking for my stuff it's all in
you're looking for my stuff it's all in
puffer AI puffer lib we actually we just
puffer AI puffer lib we actually we just
hit 800 here which is
hit 800 here which is
awesome um all open source here most of
awesome um all open source here most of
it the new stuff is in the dev Branch
it the new stuff is in the dev Branch
start on the way and if you wouldn't
start on the way and if you wouldn't
mind helps me out a
ton this is
ton this is
all full-time Dev on fixing
all full-time Dev on fixing
reinforcement learning
reinforcement learning
at the moment this is just a fun
at the moment this is just a fun
demo I'm hoping that I can solve this
demo I'm hoping that I can solve this
relatively soon but this has proven
relatively soon but this has proven
harder than
expected okay
and going to your GitHub in the
and going to your GitHub in the
meanwhile yeah thank you this is
meanwhile yeah thank you this is
um this is a new thing most of my work I
um this is a new thing most of my work I
do have some lower level stuff but like
do have some lower level stuff but like
it's in scon it's pretty one to one with
it's in scon it's pretty one to one with
the c but I'm not used I have haven't
the c but I'm not used I have haven't
written in C proper in like 10 years so
written in C proper in like 10 years so
um what we're trying to do here is if I
um what we're trying to do here is if I
can just make like a 400 line file that
can just make like a 400 line file that
has the whole environment implementation
has the whole environment implementation
the renderer and the neuronet forward
the renderer and the neuronet forward
pass I can compile the whole thing to
pass I can compile the whole thing to
web assembly and just put it on web and
web assembly and just put it on web and
then you can have like play Snake online
then you can have like play Snake online
versus 1,000 reinforcement learned AI
versus 1,000 reinforcement learned AI
opponents
right we are literally like one bug fix
right we are literally like one bug fix
away from that existing
got long and Float
okay well we know it's encoder decoder
okay well we know it's encoder decoder
value
head so
uh policy
dot Okay so now we have we have
dot Okay so now we have we have
something at least
um let's
do
do
you
16 okay so now we have something to go
16 okay so now we have something to go
off of at least let me go use the
off of at least let me go use the
restroom real quick again and then
restroom real quick again and then
we're going to see whether I just have
we're going to see whether I just have
the test wrong or whether the test is
the test wrong or whether the test is
actually useful and whether there is a
actually useful and whether there is a
discrepancy between the implementation
discrepancy between the implementation
of these two models that's what we're
of these two models that's what we're
going to just have to hammer on until we
going to just have to hammer on until we
get this right um the good news is it
get this right um the good news is it
will be pretty darn easy we'll at least
will be pretty darn easy we'll at least
be able to do arbitrary MLPs trivially
be able to do arbitrary MLPs trivially
when this is done obviously we'll have
when this is done obviously we'll have
the whole nightmare of like lstm and
the whole nightmare of like lstm and
Comm and all that stuff uh afterwards if
Comm and all that stuff uh afterwards if
we want to do full models without using
we want to do full models without using
a framework but yeah this will at least
a framework but yeah this will at least
get us somewhere so I'll be right
back
e e
all right
so let's
see we're going to modify this a little
see we're going to modify this a little
bit
here okay so now we have all these layer
here okay so now we have all these layer
sums right
perfect
perfect
and now we're going to do the exact same
and now we're going to do the exact same
thing here because the way that we have
thing here because the way that we have
this constructed we should be able to do
this constructed we should be able to do
this right
this right
so I really would like super Maven to be
so I really would like super Maven to be
working with this thing because like the
working with this thing because like the
unfamiliar syntax is so clunky for me to
unfamiliar syntax is so clunky for me to
be typing I don't know why it isn't
but fine in the
meantime
meantime
um
um
um zero
um zero
or Zer I less than size what
or Zer I less than size what
dim plus whatever we'll get used to this
dim plus whatever we'll get used to this
in text by typing it right
in text by typing it right
here ration sum
here ration sum
plus
plus
equals
observations
I uh hidden
I uh hidden
some
some
[Music]
[Music]
zero
zero
zero hidden was it hidden dim batch size
zero hidden was it hidden dim batch size
times hidden dim
plus obervation sum plus
plus obervation sum plus
equal
equal
oh hidden sum plus equal hidden
I zero
batch size times output
dim okay we just treat them as plat flat
dim okay we just treat them as plat flat
buffers and sum them like this right and
buffers and sum them like this right and
then we do
print Iration whoops
D deration
D deration
sum print F and I missed a semicolon up
sum print F and I missed a semicolon up
there whoops
semicolon uh hidden
sum and
D sum
and I already have that one
and I already have that one
I also forgot all the slash NS on
I also forgot all the slash NS on
these
these
n
n
and
okay nice
so why did we do all this
so why did we do all this
well we can see here that the
well we can see here that the
observation
observation
sum matches
sum matches
here uh the hidden sum does not match
here uh the hidden sum does not match
it's very
it's very
close but it doesn't match and the
close but it doesn't match and the
output sum does not match either so it
output sum does not match either so it
does appear to me that we have an
does appear to me that we have an
incorrect
incorrect
implementation somehow
oh but wait hold on
go
go
Microsoft got to just delete Windows at
Microsoft got to just delete Windows at
some point I don't know why it does like
some point I don't know why it does like
all these freaking things like hide my
all these freaking things like hide my
whole desktop on me thank you very much
whole desktop on me thank you very much
exactly what I wanted
okay where did all my stuff
go oops today is a nurs rebuttal
go oops today is a nurs rebuttal
deadline for a thing
okay where' all my stuff
okay where' all my stuff
go right
go right
here okay
so this should be float
this one is unsigned
this one is unsigned
in the rest of them are
float let's see if that fixes
it format specifies oh is it percent
F
F
okay now what do we get 6 six
okay now what do we get 6 six
okay it's
close but not there yet so let's figure
close but not there yet so let's figure
out
why so the data going in should be the
why so the data going in should be the
same oh let's do some of uh weights just
same oh let's do some of uh weights just
to be
to be
sure let's just do weight some
into I equals z i less than this one's
into I equals z i less than this one's
hard
um it should be equal to
um it should be equal to
to uh
to uh
input dim time hidden dim plus hidden
input dim time hidden dim plus hidden
dim plus hidden dim time output dim plus
dim plus hidden dim time output dim plus
output
output
dim which is weight Matrix bias weight
dim which is weight Matrix bias weight
Matrix
bias okay weit sum
okay weight sum 475 let's see if we do
okay weight sum 475 let's see if we do
our own weight
sum e
2191 is that a significant difference
wait
wait
21 nine that's a pretty substantial
21 nine that's a pretty substantial
difference
shouldn't it be
identical if they're both float 32
let me see something
[Music]
[Music]
and is that worth tracking
down I'm trying to think what would
down I'm trying to think what would
cause that
difference wait encode
is there anything reasonable that would
is there anything reasonable that would
cause a difference of that
cause a difference of that
magnitude it's like small but maybe
magnitude it's like small but maybe
substantial
okay so this
is 432
2853 there a tiny difference
2853 there a tiny difference
I don't know if it's going to matter
I don't know if it's going to matter
let's let's look for the rest of the
let's let's look for the rest of the
stuff first um and we'll see we'll see
stuff first um and we'll see we'll see
if it makes a
if it makes a
difference so observation sum is the
difference so observation sum is the
same which is
same which is
good um and then there is
good um and then there is
a the hidden sum is quite substantially
a the hidden sum is quite substantially
different right 663
668 and then the output is completely
668 and then the output is completely
different
okay
didn't mean to do
that okay so here's the hidden
and what we're going to do is if
and what we're going to do is if
I I less than
I I less than
10 print
app hidden percent D perc
app hidden percent D perc
F uh
F uh
I hidden
I hidden
I right
86 what did I
do oh I forgot
up okay so
up okay so
hidden we see that these are completely
hidden we see that these are completely
off
322 completely off
and if I put a break point here I should
and if I put a break point here I should
be able to see
CER
wait
okay and Let's
okay and Let's
do let's set a break point here I
do let's set a break point here I
think
GDB oops so we do
GDB oops so we do
break 10
oh no I went too
far
far
one okay so we
take
take
input we have b
input we have b
i right and then we
i right and then we
have input zero
oops can't do
comma weights
comma weights
zero okay
so input zero is
so input zero is
zero so this gives us the correct first
zero so this gives us the correct first
component right which is zero
then we do
then we do
continue and then we
take is
one
one
outut which is
128 uh
yes I think that's correct so what we do
yes I think that's correct so what we do
then is we
do input a zero or input a one and then
do input a zero or input a one and then
we
take go away
take go away
Adobe God who even came up with that
Adobe God who even came up with that
idea of freaking popups
this does not look like the correct
weight it should be this one
weight it should be this one
here and
then oh wait
okay input is
okay input is
correct and then what about the
weights this one is good this one is
not it should be weights of one here
how does this make sense
16 by 121
16 by 121
right so batch
right so batch
times input
times input
dim group these so I can
read so batch times input
read so batch times input
dim plus I
yes because you go over the input
yes because you go over the input
repeatedly
right and then you multiply
ah [ __ ] I I closed the wrong window
what happens if I do
what happens if I do
this out of memory God damn
it well this is actually these two
it well this is actually these two
weights
weights
here where is it no
okay here we go with
this the most freaking debugging I've
this the most freaking debugging I've
had to do in a long
time but we have to like Trace through
time but we have to like Trace through
exactly each of these Matrix
Cals freaking line by line of C
okay we have the break
point Su is
zero weights of zero 339 yeah this is
zero weights of zero 339 yeah this is
the same
weight and now
put di plus I
put di plus I
is oops we got to do
is oops we got to do
[Music]
[Music]
continue okay this is
continue okay this is
one M plus
I is one
I is one
so weights of one
so weights of one
here four five so this is
here four five so this is
good this is actually correct it looks
like so break
clear
112 now we're at
112 now we're at
14 and we get the sum
then this is what we want here because
then this is what we want here because
this gives us the first
this gives us the first
weights
sum wait
sum wait
model X of zero
and this matches
perfectly so for the
perfectly so for the
first the first output this matches
first the first output this matches
perfectly and then what we do is this is
perfectly and then what we do is this is
going to be the second
going to be the second
output and we hit
continue and now what's wrong
again B is
zero o is one
right output di is 128
I think this is input dim not output
dim we're going to see if I'm right
freaking okay that's the first correct
freaking okay that's the first correct
value
right that is the second correct value
so now what we need to do is
print
O Let's print the sum
here the sum does not match
oh
wait how's that work
though because the output dim is 128
though because the output dim is 128
right so this is
fine six
oh okay now we have
oh okay now we have
o now we're on the second
example and it matches
okay so the policy is not helping us
okay so the policy is not helping us
here let's see what
are outputs were from
are outputs were from
before we have the sums up here
somewhere hidden sum
684 361 364 it's almost identical
684 361 364 it's almost identical
there's a little bit of drift that we're
there's a little bit of drift that we're
going to have to find but it's almost
going to have to find but it's almost
identical you see the
identical you see the
hidden the output
sum the output sum is also correct and
sum the output sum is also correct and
the action sum is now correct as
the action sum is now correct as
well so
now these functions should
match but when I look
match but when I look
at
snakes it looks to me like the output is
snakes it looks to me like the output is
backwards right
look at this see it's going
backwards look you see how it like it
backwards look you see how it like it
goes away from the
interesting let's take a
interesting let's take a
look so the test case is now
fine let's try this flip
again let's try this flip e
nope it now this just randomizes it
right yeah so this is them just running
right yeah so this is them just running
into
into
walls as far as I can tell which is
walls as far as I can tell which is
not not the expected Behavior at all
right so this was we were on the right
right so this was we were on the right
track before I think
thinkz at least we got these to match so
thinkz at least we got these to match so
far which is the main
far which is the main
thing I took some
debugging Claud was wrong by the
debugging Claud was wrong by the
way Claud was wrong
okay here's what I'm going to do right
okay here's what I'm going to do right
now I just had somebody ask me to review
now I just had somebody ask me to review
rebuttal uh a draft of rebuttal for NPS
rebuttal uh a draft of rebuttal for NPS
so I'm going to go grab a quick
so I'm going to go grab a quick
Shake because I haven't
Shake because I haven't
eaten I'm going to take a quick look
eaten I'm going to take a quick look
through those rebuttal and then I think
through those rebuttal and then I think
we're very very close to having this
we're very very close to having this
working so the goal will be to finish
working so the goal will be to finish
this today so that we can get on to all
this today so that we can get on to all
the other stuff we've got to do but I
the other stuff we've got to do but I
want this shipped
today all right I'll be
today all right I'll be
back
man
e
e
e
e
e
e
e
e
e
e e
got to take a quick pass on um this
got to take a quick pass on um this
rebuttal on my side monitor real
quick not
public
e
e
e
e
e e
I got to check the deadline on these
actually e
I'm just
I'm just
today
okay let me just read a thing real quick
okay let me just read a thing real quick
then and I'll be able to keep going but
then and I'll be able to keep going but
I'm going to have to end early so I can
I'm going to have to end early so I can
finish something with this
today
e
e e
me b
ofly e
okay cool um back to this for a little
okay cool um back to this for a little
bit at least I want to get this working
bit at least I want to get this working
and check a couple other things before I
and check a couple other things before I
have to go do rebuttals um more
have to go do rebuttals um more
substantially so
let me see how I feel let me check a few
let me see how I feel let me check a few
things here
so e
let me see where they do compute oops I
let me see where they do compute oops I
just saw
it
it
okay let's get back into this
okay let's get back into this
so right here
plus
plus
r plus C
right does this get called for us in
right does this get called for us in
computer observations it does right it
computer observations it does right it
gets called at the end of step for
us it looks like something is
us it looks like something is
flipped it really looks like the data is
flipped it really looks like the data is
just flipped
right is there a way that that would
right is there a way that that would
happen
really shouldn't
be we know that it matches
how did I load this
data observations to tensor
[Music]
we know that the MLP
matches the action selection matches
do we want to try messing with the data
do we want to try messing with the data
a little bit just to make
sure divide
by I don't even know what do we divide
by I don't even know what do we divide
by
thousand
thousand
by
bloat okay
we need to run the
test okay action sum is now 20
test okay action sum is now 20
action sum is 20 so we have the
same
yeah we have things matching
now oh that's what I'm missing
what what am I missing here
what what am I missing here
if the P torch Network that I
if the P torch Network that I
loaded works
loaded works
correctly so that means that the
correctly so that means that the
observation should be being computed
observation should be being computed
correctly
right this thing here
matches the P torch
implementation let me look for anything
stupid it's possible we have something
stupid it's possible we have something
stupid in
here actions of I equals
action hold on Max
logit I times output dim
is this action well wait the action
is this action well wait the action
selection I shouldn't even be
selection I shouldn't even be
questioning the action selection because
questioning the action selection because
the actions output are the
the actions output are the
same
right let me double check something
right let me double check something
[Music]
that was weird
I'm trying to think like what even the
I'm trying to think like what even the
error surface is here if everything
matches we do MLP
forward we
forward we
load observations here
right step and
batch times input
batch times input
dim observations of
I why
why would this one not
match I don't see anywhere else where I
match I don't see anywhere else where I
could have an
could have an
error but in the loading of the input
data
um but compared to
um but compared to
this is this the C++ version with the
this is this the C++ version with the
torch API which I can't use because it
torch API which I can't use because it
doesn't compile the WM at the
doesn't compile the WM at the
moment love to just use this and be
done this version
here I *
121 technically the memory layout could
121 technically the memory layout could
be like different or something
right but it like even if it were
right but it like even if it were
transposed right that still wouldn't
transposed right that still wouldn't
account
account
for the difference I'm currently seeing
for the difference I'm currently seeing
and
like if it were transposed I wouldn't be
like if it were transposed I wouldn't be
getting the same output right these
getting the same output right these
tests should cast should uh should catch
tests should cast should uh should catch
that I would
that I would
think because I'm loading the data in
think because I'm loading the data in
the same
the same
way yeah I'm loading the data in the
way yeah I'm loading the data in the
same
way that is
way that is
bizarre and like it's not like
it's kind of weird how these guys work
it's kind of weird how these guys work
as well like look if I put it right next
as well like look if I put it right next
to a if I put it right next to is it
to a if I put it right next to is it
following me what the heck if I put it
following me what the heck if I put it
like next to a a
food if I put it in the open it will
food if I put it in the open it will
like just go in One Direction which is
like just go in One Direction which is
fine but then if I put it next to a food
fine but then if I put it next to a food
it won't go
it won't go
it won't go directly next to the
it won't go directly next to the
food kind of weird
right like it looks like it has the
right like it looks like it has the
board flipped or something in its
board flipped or something in its
head on the network me I
mean and see there it just it fell on
mean and see there it just it fell on
itself
like it's definitely making its
like it's definitely making its
decisions based on the
decisions based on the
data but they're like backwards or
data but they're like backwards or
something
weird is the action map the same it
weird is the action map the same it
would have to be
would have to be
right the action map would have to be
right the action map would have to be
the same for the C++ model to have
the same for the C++ model to have
worked
maybe the C++ model didn't work
maybe the C++ model didn't work
perfectly though I don't even know if
perfectly though I don't even know if
that's worth
checking ah
be the
be the
bias I didn't test the
bias bias of
bias bias of
output it's how it works though isn't
output it's how it works though isn't
it and well the actions are the same so
it and well the actions are the same so
it doesn't
it doesn't
matter it definitely is correct okay so
matter it definitely is correct okay so
if I'm assuming this is correct I'm
if I'm assuming this is correct I'm
assuming the whole computation of
assuming the whole computation of
actions is correct
right the thing is that really doesn't
right the thing is that really doesn't
leave much space for stuff to be wrong
leave much space for stuff to be wrong
and it still
is cell size
is cell size
10 doesn't
10 doesn't
matter observations of eye
actions is correctly and unsigned in in
Star man this is literally one bug away
there's nothing else I'm there's got to
there's nothing else I'm there's got to
be something else it could be unless I'm
be something else it could be unless I'm
just been staring at this and I'm not
just been staring at this and I'm not
seeing the issue here
like a transpose wouldn't account for
like a transpose wouldn't account for
this would it
let me just just for the sake of it
like we'll just
like we'll just
oops let's just
um JK
do
do
i
i
k
j
j
no so this
no so this
thing if you like transpose the OBS it
thing if you like transpose the OBS it
completely just
breaks it like just
ignores so that totally messes up the
policy it's not something with the way
policy it's not something with the way
the actions are getting sent right
like this or
whatever where is
it hold on keep hearing something
just an issue with one of the windows no
just an issue with one of the windows no
big
big
deal window like I don't know it's windy
deal window like I don't know it's windy
we're good so the only other thing I can
we're good so the only other thing I can
basically think of is that is like the
basically think of is that is like the
action map is wrong and I have to do
action map is wrong and I have to do
something ridiculous like
this but this doesn't make sense at all
right it's funny that that actually like
right it's funny that that actually like
does something
does something
though is there like an action map that
though is there like an action map that
I'm I have wrong here hold on maybe it
I'm I have wrong here hold on maybe it
is worth checking this
so
up
up
down
down
left right now these are all reasonable
left right now these are all reasonable
as well
as well
I mean it makes sense that it would
be is there some other part of the
be is there some other part of the
network that I'm forgetting
about CU this matches the reference
like the default model should not be
like the default model should not be
that complicated right it's
just encode and
just encode and
decode you batch size negative
decode you batch size negative
[Music]
[Music]
1 oh there is a
1 oh there is a
re ah there is a re I missed it I missed
re ah there is a re I missed it I missed
the freaking re
and I didn't catch it wait how didn't I
and I didn't catch it wait how didn't I
catch
it wait is that actually a thing wait
it wait is that actually a thing wait
did
I oh because I tested it without the
I oh because I tested it without the
fell ah
fell ah
okay okay we found it we found it guys
okay okay we found it we found it guys
we found it [ __ ]
we found it [ __ ]
we found
it
God ladies and
God ladies and
gentlemen I
gentlemen I
present pure SE
snake reinforcement learn
policies environment is in C rendering
policies environment is in C rendering
is in C
is in C
directly supports web assembly as
well we've got
it isn't that something
you know the funny thing about this is
you know the funny thing about this is
it's not just one
it's not just one
game
game
um we can very
um we can very
easily say we do cell size
five let's do 64
snakes e
I don't even know how fast our our
I don't even know how fast our our
implementation is like can we make this
implementation is like can we make this
B can we make this bigger
that's pretty
cool for
man
well it is 3:41 um we're definitely
well it is 3:41 um we're definitely
there's going to be a little bit more on
there's going to be a little bit more on
this at some point I might even just do
this at some point I might even just do
this tomorrow all day because this is
this tomorrow all day because this is
sweet will
sweet will
say I'm trying to think what I want to
say I'm trying to think what I want to
do right
now I mean okay
so we should probably figure out a few
so we should probably figure out a few
things with this
right debugging that just like wiped me
right debugging that just like wiped me
out though holy hell
there was so much that we had to do to
there was so much that we had to do to
find all that
find all that
stuff that's the deepest I've had to go
stuff that's the deepest I've had to go
on debugging in a long time I mean
on debugging in a long time I mean
operation by operation in two different
operation by operation in two different
languages matrix multiplication
H
H
okay
okay
so I guess it depends
on it depends on how we want to present
on it depends on how we want to present
this
I almost want to like change gears and
I almost want to like change gears and
do something else for a bit like holy
do something else for a bit like holy
hell let me just talk through real quick
hell let me just talk through real quick
some of the stuff that has to be done um
some of the stuff that has to be done um
in the relatively near future right we
in the relatively near future right we
need more hyper pram sweeps on the
need more hyper pram sweeps on the
ataram we need like all those baselines
ataram we need like all those baselines
to be nice and solid they're pretty good
to be nice and solid they're pretty good
now but they need a little bit more
now but they need a little bit more
work um we have all sorts of stuff to do
work um we have all sorts of stuff to do
on the mooba that we've had on the back
on the mooba that we've had on the back
burner for like a week because 50k and
burner for like a week because 50k and
then this um and then there's some stuff
then this um and then there's some stuff
for GPU Drive I think realistically the
for GPU Drive I think realistically the
easiest thing for me to do right now
easiest thing for me to do right now
just for a little bit would be to figure
just for a little bit would be to figure
out how to fix the how to fix the thing
out how to fix the how to fix the thing
with GPU
with GPU
Drive
Drive
potentially I really should do
that let me see if I can
that let me see if I can
whoops well but I have people here
whoops well but I have people here
watching for C
watching for C
so I'm assuming that it yeah people want
so I'm assuming that it yeah people want
to do some C
to do some C
stuff is that a new message do you know
stuff is that a new message do you know
what the best universities labs for
what the best universities labs for
reinforcement learning are I don't know
reinforcement learning are I don't know
if this is just now or if I missed this
if this is just now or if I missed this
from before um there's not all that much
from before um there's not all that much
going on for RL frankly at the moment
going on for RL frankly at the moment
it's like a lot of Robotics at the
it's like a lot of Robotics at the
moment not too many places are doing
moment not too many places are doing
like games plus RL it's kind of all over
like games plus RL it's kind of all over
the place really um I guess for games
the place really um I guess for games
like there's a bunch of game stuff and
like there's a bunch of game stuff and
RL stuff at
RL stuff at
NYU
NYU
but like more so there's been lots of
but like more so there's been lots of
language model stuff lately it'll be
language model stuff lately it'll be
back though and here's why it's going to
back though and here's why it's going to
here's why RL is going to be back um
here's why RL is going to be back um
language model research is freaking
language model research is freaking
expensive and it's going to be it's
expensive and it's going to be it's
getting to be and it's already way
getting to be and it's already way
outside the budget of academic
outside the budget of academic
Labs as soon as reinforcement learning
Labs as soon as reinforcement learning
is like sane you're going to have tons
is like sane you're going to have tons
and tons of labs want to do cool
and tons of labs want to do cool
reinforcement learning stuff um and
reinforcement learning stuff um and
puffer is going to make that happen and
puffer is going to make that happen and
it's going to make it happen very
it's going to make it happen very
soon okay let's let's let's actually
soon okay let's let's let's actually
just keep going on the C stuff for a bit
just keep going on the C stuff for a bit
yeah I'm so sick of LMS everywhere I
yeah I'm so sick of LMS everywhere I
mean look you can take 75% of the
mean look you can take 75% of the
resources for llms right like yeah
resources for llms right like yeah
they're good like I just wish that it
they're good like I just wish that it
weren't
weren't
99%
99%
because there's a pretty darn good
because there's a pretty darn good
chance llms don't just solve everything
chance llms don't just solve everything
actually and r probably the most
actually and r probably the most
promising second candidate
here and simulation in general is
here and simulation in general is
definitely a very promising candidate
definitely a very promising candidate
okay so I probably should Implement a
okay so I probably should Implement a
couple different render things with this
couple different render things with this
and I should do a little bit of figuring
and I should do a little bit of figuring
about how I want the how I want to
about how I want the how I want to
present the environment here for
present the environment here for
everything um
yeah it's just rough because I like just
yeah it's just rough because I like just
burnt so
burnt so
much with that
debugging I just pushed the uh the C
debugging I just pushed the uh the C
code it's not cleaned up yet but if you
code it's not cleaned up yet but if you
want to get the C code for this thing
want to get the C code for this thing
obviously I'm going to be putting it on
obviously I'm going to be putting it on
my on the puffer website um but it's in
my on the puffer website um but it's in
the dev branch of puffer Li start it on
the dev branch of puffer Li start it on
your way in helps me out a whole
t Okay um I think then we should we
t Okay um I think then we should we
should make a slightly better client for
should make a slightly better client for
this thing I'm assuming this can't run
this thing I'm assuming this can't run
full scale
full scale
right I actually haven't tested it
can I just do what what like what are
can I just do what what like what are
one of the configurations that I
have so
the 720p one
the 720p one
with with 1024 snakes is pretty good I
with with 1024 snakes is pretty good I
would say let's see if we can make that
would say let's see if we can make that
one
one
run so this
run so this
is
1280 720
Max snake
Max snake
length I don't know
500,000 1024
snakes cell size should be one
it's moving very
slowly yeah very very
slowly yeah very very
slowly so assumedly our our
slowly so assumedly our our
implementation would need to be
implementation would need to be
stantially faster in order to render
stantially faster in order to render
like the full scale thing or to do the
like the full scale thing or to do the
full scale
full scale
thing let me just make sure it's not the
thing let me just make sure it's not the
rendering I wouldn't think it would be
rendering I wouldn't think it would be
but
like oh actually that's substantially
like oh actually that's substantially
faster so it kind of is the rendering
faster so it kind of is the rendering
huh
this actually
runs so I guess if we just find uh if we
runs so I guess if we just find uh if we
just do the other RB render
just do the other RB render
representation we should be
good here this is cool to watch
running real time on one CPU
core I think this is about 500 lines now
core I think this is about 500 lines now
now maybe 550 lines of
now maybe 550 lines of
C so we can cut this down a
bit let's downscale the demo a bit and
bit let's downscale the demo a bit and
then uh we'll figure
out we'll figure out what we want to do
out we'll figure out what we want to do
with it from
with it from
here couple different client modes
Maybe for
oh yeah that's with all the test and
oh yeah that's with all the test and
stuff as
well
okay I actually don't know if I've got
okay I actually don't know if I've got
Mory in me
Mory in me
today um
and I do have this GPU Drive M which is
and I do have this GPU Drive M which is
also really cool that needs some
also really cool that needs some
fixing let me just go look and see if I
fixing let me just go look and see if I
have like a concrete message on what to
have like a concrete message on what to
do
there I'll check the slack for that to
there I'll check the slack for that to
see if somebody's told me
wrong tab
oh hold on
okay I didn't miss this thread this is
okay I didn't miss this thread this is
just from
today okay I do have some messages to
today okay I do have some messages to
look at here hold on
look at here hold on
and then what we're going to do is we're
and then what we're going to do is we're
going to probably do some GPU Drive
going to probably do some GPU Drive
stuff which is a GPU driving simulator
stuff which is a GPU driving simulator
that we have support for and puff for I
that we have support for and puff for I
just have to read this
thread
e
e e
uh
for
e e
Okay I uh I think we're ready to go here
Okay I uh I think we're ready to go here
so the
so the
um the bug
um the bug
that
wait the heck let me see there's someone
wait the heck let me see there's someone
where they posted the solution to this
where they posted the solution to this
bug I got to update
stuff I'm just looking at the side
stuff I'm just looking at the side
monitor for a second to find where
monitor for a second to find where
there's some slack stuff
the heck where did it
the heck where did it
go oh I found it okay so
let me see uh if this works I have some
let me see uh if this works I have some
instructions back and we can show we can
instructions back and we can show we can
show some of this just not the slack
messages where did restream
messages where did restream
go right
go right
there okay
there okay
so oh I missed some messages recently
so oh I missed some messages recently
saw your video of Defending Your thesis
saw your video of Defending Your thesis
amazing work amazing Library thank you
amazing work amazing Library thank you
very much any resources for getting into
very much any resources for getting into
machine learning I think that there are
machine learning I think that there are
a few of them in the puffer Discord or
a few of them in the puffer Discord or
maybe the neural MMO Discord um it's a
maybe the neural MMO Discord um it's a
lot of engineering for the most part
lot of engineering for the most part
like the math side is not that bad uh
like the math side is not that bad uh
open AI spinning up is more math than
open AI spinning up is more math than
you need realistically you read the dqn
you need realistically you read the dqn
paper you read the PO paper you read um
paper you read the PO paper you read um
a few other papers around I suggest a
a few other papers around I suggest a
lot of the large scale industry ones I
lot of the large scale industry ones I
suggest like the DOTA paper the Alpha
suggest like the DOTA paper the Alpha
star paper like emergent tool use
star paper like emergent tool use
Capture the Flag maybe like 10
Capture the Flag maybe like 10
reasonable papers and then you already
reasonable papers and then you already
have a good sort of start on stuff and
have a good sort of start on stuff and
uh you then you just pick up like clean
uh you then you just pick up like clean
RL and start playing with stuff uh you
RL and start playing with stuff uh you
will learn things quite quickly if
will learn things quite quickly if
you're using a something like clean RL
you're using a something like clean RL
or puffer um where you actually get into
or puffer um where you actually get into
the code and stuff isn't just
automated because whenever stuff's
automated because whenever stuff's
automated narl it
breaks okay
this is GPU drive
this is GPU drive
right oops
see if this
works yeah okay this is what we have so
works yeah okay this is what we have so
this is a GPU accelerator driving
this is a GPU accelerator driving
Sim that puffer makes very very
Sim that puffer makes very very
fast um and I was told
fast um and I was told
that it needs to be
compiled with the same version that
compiled with the same version that
python is running
python is running
from which is kind of weird
from which is kind of weird
so let me see if this actually
so let me see if this actually
works uh
five
so
make thank you yeah no worries keep
make thank you yeah no worries keep
missing messages cuz I don't have I got
missing messages cuz I don't have I got
my chat covered okay there we go now I
my chat covered okay there we go now I
can see
can see
it I've got like a million windows and a
it I've got like a million windows and a
million things
today 3.10
okay
okay does that do
it let me see if this does it
yeah that compiled a new version
let's do uh two million time steps
still seg
faults that's unfortunate
is it compiling with the wrong
version no it can't
be what the
be what the
hell window that's okay I'll do that
hell window that's okay I'll do that
I'll deal with that later
I don't know what the heck is up today
I don't know what the heck is up today
California's usually nice we've got like
California's usually nice we've got like
crazy winds
that's
that's
unfortunate I thought that we would have
unfortunate I thought that we would have
a fix for this by
now for
okay unfortunately I can't do anything
okay unfortunately I can't do anything
with this for now if it's going to be
with this for now if it's going to be
seg puling uh I will check back when
seg puling uh I will check back when
they reply to this because uh it's
they reply to this because uh it's
pretty much like everything is done it's
pretty much like everything is done it's
just that in order to automate all the
just that in order to automate all the
experiments the environment can't be
experiments the environment can't be
crashing every time you run it
crashing every time you run it
so yeah unfortunately we're stuck on
so yeah unfortunately we're stuck on
that for now that's okay though um do we
that for now that's okay though um do we
have any sweeps to look at I
mean maybe I'm good to go back to the C
mean maybe I'm good to go back to the C
stuff for now let me think
and there's a lot of stuff to do around
and there's a lot of stuff to do around
here I just got to pick something and do
it realistically we could probably just
it realistically we could probably just
start some of the Atari stuff at the
start some of the Atari stuff at the
moment it's not that hard and uh it
moment it's not that hard and uh it
needs to get done and it's pretty
needs to get done and it's pretty
fun yeah
fun yeah
let's do that for a bit
um yeah
so we just grab uh Atari deps real
quick me make sure I have the updated
quick me make sure I have the updated
version on this and I'll show you what
version on this and I'll show you what
we're going to
do for
okay so we have all the Atari
files
files
good
um does
um does
this does this train
apparently it does which is weird
apparently it does which is weird
because my baselines don't seem like
because my baselines don't seem like
they
they
ran let's go look at
this yeah so some of these didn't run
this yeah so some of these didn't run
which is very weird
like cqu Quest I thought would have
like cqu Quest I thought would have
run long break out I actually don't see
run long break out I actually don't see
cqu Quest here and space so maybe it
cqu Quest here and space so maybe it
just crashed on Space Invaders or
just crashed on Space Invaders or
something cubert's there Space Invaders
something cubert's there Space Invaders
is
is
there okay so I guess all we have to do
there okay so I guess all we have to do
then is we just have to run uh the space
then is we just have to run uh the space
invader Baseline and then we can put
invader Baseline and then we can put
together a little Report with these or
together a little Report with these or
decide what to run from here here so
decide what to run from here here so
that's super easy we can I'll I'll show
that's super easy we can I'll I'll show
off uh launching and configuring these
off uh launching and configuring these
experiments and then I'm going to go
experiments and then I'm going to go
grab my window that I think or my window
grab my window that I think or my window
screen that has been freaking blown out
screen that has been freaking blown out
of my window by whatever the heck is
of my window by whatever the heck is
going on
outside MC Quest mode train V
outside MC Quest mode train V
multiprocessing Baseline
that should be done in
that should be done in
whoops do not have
permission
interesting
interesting h
that's what happened I think Kung
that's what happened I think Kung
grabbed my box while I was in the middle
grabbed my box while I was in the middle
of running
of running
experiments
silly I'm try him to get a different
box I said I technically did tell him to
box I said I technically did tell him to
grab any box he wanted but I assumed he
grab any box he wanted but I assumed he
wouldn't grab one of the two that I use
let me get my API
key that's cheeky
where the window I was doing
okay okay so it is this easy
okay okay so it is this easy
um this is now running
um this is now running
cqu with a 4 million parameter model
cqu with a 4 million parameter model
which is just uh dqn no not DQ n nature
which is just uh dqn no not DQ n nature
CNN plus
CNN plus
lstm and this is the these are the tuned
lstm and this is the these are the tuned
parameters which should be at least the
parameters which should be at least the
tuned parameters from a hyper parameter
sweep and this will be done in 5 minutes
sweep and this will be done in 5 minutes
so what I'm going to do is I'm going to
so what I'm going to do is I'm going to
go grab my window from wherever it's
go grab my window from wherever it's
blown halfway down the street and then
blown halfway down the street and then
I'm going to be right back and then
I'm going to be right back and then
we're going to do the same exact thing
we're going to do the same exact thing
with Space Invaders and then we're going
with Space Invaders and then we're going
to launch some like large scale
to launch some like large scale
experiments to figure out which of these
experiments to figure out which of these
environments we need to improve on the
environments we need to improve on the
most be right
back
e
e
e
e
e e
okay literally blew a screen out of the
okay literally blew a screen out of the
window
well that looks like a good
reward that looks very
good so that is uh what's that 6.7
good so that is uh what's that 6.7
million steps worth of sequ
million steps worth of sequ
quest in 5
quest in 5
minutes it can go substantially faster
minutes it can go substantially faster
than that I'm assuming it found slow
than that I'm assuming it found slow
hyper parameters like that end up
hyper parameters like that end up
actually being better training
actually being better training
throughput uh even though it's lower
throughput uh even though it's lower
SPS um and then now the the additional
SPS um and then now the the additional
time at the end there was it running a
time at the end there was it running a
overall
overall
evaluation and there we go now we have
evaluation and there we go now we have
our cquest Baseline so we'll go look at
our cquest Baseline so we'll go look at
that one but let's queue up Space
that one but let's queue up Space
Invaders while we do
okay
interesting right here this is why the
interesting right here this is why the
rest this is why our run crashed before
rest this is why our run crashed before
there's a comma
okay and there it
okay and there it
goes
goes
so be done in six minutes and we will
so be done in six minutes and we will
look in the mean time at w be here
Space Invaders
hey Joseph how can I be best grad
hey Joseph how can I be best grad
student Master's ra for a PhD student or
student Master's ra for a PhD student or
Professor I possibly can be wait how can
Professor I possibly can be wait how can
I
be the best M okay I didn't know that
be the best M okay I didn't know that
they do raas as Masters for PhD students
they do raas as Masters for PhD students
that's kind of
that's kind of
odd start school in three I mean it
odd start school in three I mean it
depends how much RL you know right
depends how much RL you know right
depends how much RL you know going
depends how much RL you know going
in how much engineering you know what
in how much engineering you know what
skills you have that sort of a thing
yeah so these baselines definitely need
yeah so these baselines definitely need
to be uh to be
fixed we need to add like a Max cost or
fixed we need to add like a Max cost or
whatever to
these see Quest is very nice
Space Invaders
Space Invaders
is possibly
training oh yeah you can see it's
training oh yeah you can see it's
starting to train here it's going
starting to train here it's going
up it's a hard game as
well it's kind of funny
well it's kind of funny
um this one takes a long time doesn't it
oh because it's 18 million steps I
guess was this pong and breakout I
guess was this pong and breakout I
guess all the way down
guess all the way down
there we have to understand why breakout
there we have to understand why breakout
is
is
um is doing that so we'll have to look
um is doing that so we'll have to look
at some
at some
environments so this gives us our
environments so this gives us our
baselines at the very least let's go
baselines at the very least let's go
look at our
sweeps see if I can find the carb
sweeps see if I can find the carb
sweeps or Breakout
oh here you go it's the best ones we got
oh here you go it's the best ones we got
were like 2100 score let's go see do we
were like 2100 score let's go see do we
match that on our yeah we matched that
match that on our yeah we matched that
on cqu didn't
we yeah 2100 perfect so our sequence
we yeah 2100 perfect so our sequence
Baseline is very
good Space Invaders we're looking for
good Space Invaders we're looking for
550 I
believe that could be made
better cuber got as high as
2900 pretty good pretty close
yeah oops same
one beam Rider we
one beam Rider we
got close to 1,800 beam Rider has a very
got close to 1,800 beam Rider has a very
very nice curve on it
pretty
pretty
close with our eval pretty
close with our eval pretty
close within a reasonable margin of
close within a reasonable margin of
error I'd say Duro can we find our
error I'd say Duro can we find our
breakout
breakout
sweep I'd uh I'd like to figure out what
sweep I'd uh I'd like to figure out what
went wrong with our breakout sweep more
went wrong with our breakout sweep more
than
anything this the Moa yeah MOA we don't
anything this the Moa yeah MOA we don't
need this one for
need this one for
now uh
now uh
maybe this
one okay cool here's
breakout
so interesting that this was getting
so interesting that this was getting
better but I think it just got skewed so
better but I think it just got skewed so
poorly by this we should just rerun the
poorly by this we should just rerun the
breakout sweep
breakout sweep
right potentially with
right potentially with
more yeah potentially with more uh
more yeah potentially with more uh
settings as well
what's the Pito front look like for
this
mhm yeah so it's all these like I think
mhm yeah so it's all these like I think
this this run just screwed it up we
this this run just screwed it up we
should just rerun the breakout Sweep
should just rerun the breakout Sweep
with substantially more
samples is this
samples is this
finished yes and what did we get for
finished yes and what did we get for
Space
Invaders 539 okay that's about what we
Invaders 539 okay that's about what we
were expecting so we're going to make a
were expecting so we're going to make a
couple quick changes to some stuff in
couple quick changes to some stuff in
Dev here based on the findings from some
Dev here based on the findings from some
recent Atari stuff
um let me see so
I kind of want to add like a Max cost
I kind of want to add like a Max cost
per r
is there Max cost
thought that there was a
thought that there was a
uh here it is right config
this
this
it Max suggestion
cost so we could add this
we say we uh we have each environment
we say we uh we have each environment
train in an hour
okay args here
let's see if this is a valid
parameter so what I'm doing at the
parameter so what I'm doing at the
moment here
moment here
is key eror Max suggestion okay so we
is key eror Max suggestion okay so we
have to figure out what the heck
have to figure out what the heck
happened there
we'll put the break point up here so
we'll put the break point up here so
what I'm doing now is I don't want to
what I'm doing now is I don't want to
limit the model to a specific number of
limit the model to a specific number of
samples because let's say that your
samples because let's say that your
experiment gets up towards the maximum
experiment gets up towards the maximum
number of samples then it's going to
number of samples then it's going to
start finding slower and slower
start finding slower and slower
configurations that keep like using
configurations that keep like using
those same samples over and over um
those same samples over and over um
instead of just cranking up more samples
instead of just cranking up more samples
so what I want to do instead is I want
so what I want to do instead is I want
to be able to have it have like a ton of
to be able to have it have like a ton of
samples but it's not going to suggest an
samples but it's not going to suggest an
experiment that should take longer than
experiment that should take longer than
an hour that's what I'm trying to do at
an hour that's what I'm trying to do at
the moment and uh reason for that will
the moment and uh reason for that will
become clear in a
moment okay there it
is oops
off for
Li okay so now we have suggestion cost
Li okay so now we have suggestion cost
here
and up to 200 million steps I
believe do more than that hold on let me
believe do more than that hold on let me
just make sure I have the right order of
just make sure I have the right order of
magnitude so
magnitude so
30,000 * 3600
um okay it's like 100 million anyways so
um okay it's like 100 million anyways so
the most of it would be able to do
the most of it would be able to do
anyways is like 100 million so this is
anyways is like 100 million so this is
now going to cap it to roughly an hour
now going to cap it to roughly an hour
hour of
hour of
cost we should be able to estimate this
cost we should be able to estimate this
pretty accurately
yeah and there we go here is
yeah and there we go here is
our here are our
settings so we're going to see whether
settings so we're going to see whether
this does better we've made some
this does better we've made some
substantial improvements to our carbs
substantial improvements to our carbs
integration since we lasted our breakout
integration since we lasted our breakout
sweep I think the biggest Improvement
sweep I think the biggest Improvement
has been that we just have much more
has been that we just have much more
accurate evaluations and carbs relies
accurate evaluations and carbs relies
pretty heavily on having an accurate
pretty heavily on having an accurate
evaluation of how good the model it
evaluation of how good the model it
actually trained is right it needs to
actually trained is right it needs to
know that in order to decide whether it
know that in order to decide whether it
was a good experiment or not that was a
was a good experiment or not that was a
pretty noisy estimate previously but now
pretty noisy estimate previously but now
it should be much more stable
so python demo and
so python demo and
breakout sweet arbs
oops we also want to know how many
oops we also want to know how many
experiments to run
experiments to run
right I've been trying to figure out how
right I've been trying to figure out how
many I want to run
many I want to run
um you know these do get to be pretty
chunky think it needs to be more than
chunky think it needs to be more than
though I think you set it
though I think you set it
to I think I set it like this and we
to I think I set it like this and we
just see what
just see what
happens
happens
okay python demo and break
okay python demo and break
out sweep
carbs
carbs
okay and this gives
us perfect
and now we can make these uh these
improvements so we fix Space
Invaders we increase the maximum uh run
Invaders we increase the maximum uh run
length for Atari
we fix a few things with carbs in the
demo and we
demo and we
also add the max suggestion cost to
also add the max suggestion cost to
default
okay and
okay and
um
um
here we now can see that we have some
here we now can see that we have some
nice new atar
baselines and what we're going to do is
baselines and what we're going to do is
we're going to
do process
time let's put this into like a
time let's put this into like a
reasonable reasonable
reasonable reasonable
[Music]
size there you
size there you
go for
we should just double check
um the original po paper
for C
for C
Quest just to make sure we're actually
Quest just to make sure we're actually
doing well cqu Quest and Space
Invaders here's Space Invaders
Invaders here's Space Invaders
and then
and then
cqu we actually are already better than
cqu beam
Rider oh yeah we're beating them on a
Rider oh yeah we're beating them on a
lot of these M
already yeah we already beat sequest as
already yeah we already beat sequest as
well that's crazy
was it 200
was it 200
mil shoot I forgot
mil shoot I forgot
uh the 200 mil oops
where were their Atari results
table
five 40
five 40
million game
frames do they say how many
um I don't see how many
how long do they train
for oh it is 40 million frames
okay
for
e e
cool
so that's
nice I've wanted these for a while um we
nice I've wanted these for a while um we
need to have like
need to have like
longer runs of these so you can see if
longer runs of these so you can see if
you keep running them how much better
you keep running them how much better
you can do
you can do
uh I think that that should come out of
uh I think that that should come out of
our benchmarks I would
hope so here's carbs right oops where'd
hope so here's carbs right oops where'd
it go
sweeps okay here's our carb
sweeps okay here's our carb
sweep uh this is now going to run
sweep uh this is now going to run
massive sweep on
massive sweep on
breakout you can see like here right
breakout you can see like here right
what it's going to find it's going to
what it's going to find it's going to
run like 14 16 random experiments
run like 14 16 random experiments
something like that and then after that
something like that and then after that
it's going to use the algorithm to
it's going to use the algorithm to
attempt to find better hyper parameters
attempt to find better hyper parameters
I'm going to probably let this run like
I'm going to probably let this run like
all
all
weekend um yeah and then hopefully this
weekend um yeah and then hopefully this
is going to give us a very nice training
is going to give us a very nice training
curve a very nice hyper pram sweep curve
curve a very nice hyper pram sweep curve
and we'll be able to pick uh we'll be
and we'll be able to pick uh we'll be
able to pick some good curves based on
able to pick some good curves based on
that that'll be good
let me just check if that's something
let me just check if that's something
important or if that is a spam
important or if that is a spam
message place your
message place your
bets
oops one two spam messages three spam
oops one two spam messages three spam
messages four spam messages
uh hold
uh hold
on who was
on who was
this August
2022 this is
cool
interesting they do stuff that's
cool
e e
okay um well we've got these running
okay um well we've got these running
um what time is it it's
um what time is it it's
5 I think I probably
5 I think I probably
[Music]
[Music]
should well we'll do a couple more
should well we'll do a couple more
things before I I'm going to have to
things before I I'm going to have to
take a little bit of time to write a
take a little bit of time to write a
rebuttal before it gets too late uh so I
rebuttal before it gets too late uh so I
can submit some uh material to
can submit some uh material to
nups and
nups and
and yeah we'll see from there um I think
and yeah we'll see from there um I think
I might stream tomorrow I might not
I might stream tomorrow I might not
we'll see um I don't know how interested
we'll see um I don't know how interested
folks will be it'll just be I need to
folks will be it'll just be I need to
clean up a bunch of the C code uh just
clean up a bunch of the C code uh just
need to grind through that and hopefully
need to grind through that and hopefully
like have like a single file thing to
ship I'm still figuring out what format
ship I'm still figuring out what format
I want that to be playable in
yeah oh I should also just double check
yeah oh I should also just double check
if I have anything for back on the GPU
if I have anything for back on the GPU
and probably not it's already like
and probably not it's already like
pretty late in New York time
actually takes like six clicks to launch
actually takes like six clicks to launch
slack in your
browser delete everything in r
okay I've been told that uh I need to
okay I've been told that uh I need to
run I need to build from scratch so I
run I need to build from scratch so I
have this sweep running already which is
have this sweep running already which is
a little bit
unfortunate I think I'll kill the I'll
unfortunate I think I'll kill the I'll
kill this sweep for now it's it's only
kill this sweep for now it's it's only
been running for a little bit I'm going
been running for a little bit I'm going
to fix the GPU Drive stuff and then I'll
to fix the GPU Drive stuff and then I'll
launch this sweep again before I uh I
launch this sweep again before I uh I
end here
yeah let's do that it's cool that it's
yeah let's do that it's cool that it's
already finding reasonable policies
though let me see so if you haven't
though let me see so if you haven't
heard of this already this will be the
heard of this already this will be the
last thing we'll do today um if you guys
last thing we'll do today um if you guys
haven't heard heard of this m already
haven't heard heard of this m already
GPU Drive is it's pretty cool Sim it's
GPU Drive is it's pretty cool Sim it's
been taking off just recently released
been taking off just recently released
and we have really fast bindings for it
and we have really fast bindings for it
in
in
puffer U but there are some things that
puffer U but there are some things that
are screwy with it so we are going to
are screwy with it so we are going to
look at fixing
that dur build build
make
DJ yeah there we go that has to do some
DJ yeah there we go that has to do some
stuff
right they'll be good
okay this gives us the
library that should just uh disable any
library that should just uh disable any
weird caching going on
we'll see ah it no longer seg
we'll see ah it no longer seg
faults no longer seg faults that's
awesome so I guess we do have to run a
awesome so I guess we do have to run a
little sweep on this then
10 million steps 25 million
10 million steps 25 million
steps
do yes
uh
t-o
t-o
carbs back
native so hopefully that does
something and then I'll just uh I'll
something and then I'll just uh I'll
what I'll do is I'll probably finish up
what I'll do is I'll probably finish up
here if anybody has any RL questions I
here if anybody has any RL questions I
can answer a few things but otherwise I
can answer a few things but otherwise I
will let this
will let this
run and then I'm going to go do the
run and then I'm going to go do the
rebuttal
rebuttal
Shenanigans and then hopefully we'll
Shenanigans and then hopefully we'll
have some runs done for this by now
have some runs done for this by now
because these are fast and then uh I
because these are fast and then uh I
will be able to
do from
do from
there run the breakout sweep and uh I'll
there run the breakout sweep and uh I'll
be doing some C stuff tomorrow maybe
be doing some C stuff tomorrow maybe
stream maybe not we'll see
stream maybe not we'll see
this looks good I may as well let this
this looks good I may as well let this
run
run
finish because I want to make sure that
finish because I want to make sure that
this actually works you can see GPU
this actually works you can see GPU
Drive The Binding is very fast it's
Drive The Binding is very fast it's
about five times faster than uh it was
about five times faster than uh it was
originally puffer did some puffer Magic
see no file checkpoints
what happened
here
huh let's
see let's see if that happens again
for folks on YouTube all the stuff I've
for folks on YouTube all the stuff I've
been working on it's been a little
been working on it's been a little
slower lately but
slower lately but
um we're going to be back on the Moa as
um we're going to be back on the Moa as
soon as I finish this C demo that'll be
soon as I finish this C demo that'll be
fun so probably
fun so probably
Monday and uh all the stuff I've been
Monday and uh all the stuff I've been
working on it's all free open source
working on it's all free open source
nice and simple most of it's in the dev
nice and simple most of it's in the dev
Branch here I'll post the repo but if
Branch here I'll post the repo but if
you want to help me out for free just
you want to help me out for free just
star it it's all you got to do helps me
star it it's all you got to do helps me
out a
ton 804 today
dang almost 4.4 on the Twitter as well
dang almost 4.4 on the Twitter as well
good
metrics let's see if we still get this
metrics let's see if we still get this
bug
Pi
agent save to
file no file
how's that
how's that
possible I've never seen that before
possible I've never seen that before
when
uh checkpoints SLC carbs experiment
uh checkpoints SLC carbs experiment
right
checkpoints
checkpoints
yeah it's really weird
huh for
let's try
let's try
this we don't really need to we don't
this we don't really need to we don't
ever save those anyways right
okay we'll see whether this does
okay we'll see whether this does
it that should be nice and stable but
it that should be nice and stable but
we'll
see e
it's good train
speed we'll see whether this en is uh
speed we'll see whether this en is uh
the en binding is correct if not I'll
the en binding is correct if not I'll
have to mess with that over the weekend
have to mess with that over the weekend
as well
G still set coua Heap
size okay well
um
well we do get to run our breakout sweep
well we do get to run our breakout sweep
as a
result and breakout mode sweep C back
result and breakout mode sweep C back
multiprocessing there we
go
25k all
right it's five um I am going to go take
right it's five um I am going to go take
like an hour to go fix up and submit a
like an hour to go fix up and submit a
rebuttal hey man your thesis defense was
rebuttal hey man your thesis defense was
really cool thank you I'm now graduated
really cool thank you I'm now graduated
and uh free from the shackles of
and uh free from the shackles of
Academia meaning I get to do a ton of
Academia meaning I get to do a ton of
really awesome reinforcement learning
really awesome reinforcement learning
Dev live and really just try to fix the
Dev live and really just try to fix the
field
field
um so much of the stuff of my PhD I've
um so much of the stuff of my PhD I've
already just like blown out of the water
already just like blown out of the water
with just the level of performance we're
with just the level of performance we're
getting in Puffer
getting in Puffer
I don't know if you've seen any of the
I don't know if you've seen any of the
recent
stuff oh here I guess I'll show this
stuff oh here I guess I'll show this
because I'm proud of this we just got
because I'm proud of this we just got
this running
today so here's a snake game this runs
today so here's a snake game this runs
at like uh 12 no 10 million steps per
at like uh 12 no 10 million steps per
second single thread and uh what you're
second single thread and uh what you're
seeing now is like a 100 snakes or
seeing now is like a 100 snakes or
whatever running live on one CPU core uh
whatever running live on one CPU core uh
with reinforcement learned policies all
with reinforcement learned policies all
in pure C so the environment is C the
in pure C so the environment is C the
renderer is C and the policy forward is
renderer is C and the policy forward is
c meaning that this is going to go on
c meaning that this is going to go on
the website soon and you're going to be
the website soon and you're going to be
able to play with these
able to play with these
guys so yeah we've been doing some fun
stuff just finally got this working
today
today
yeah I know I think what's going to
yeah I know I think what's going to
happen with reinforcement learning with
happen with reinforcement learning with
the stuff I've been doing lately is just
the stuff I've been doing lately is just
like automated hundreds of experiments
like automated hundreds of experiments
that run overnight and just Ultra Ultra
that run overnight and just Ultra Ultra
fast simulators for all of
fast simulators for all of
RL what's the
plan these things are pretty fun to
plan these things are pretty fun to
watch technically I I think I'm
watch technically I I think I'm
technically able to play this as well if
technically able to play this as well if
I can figure out which agent I am on the
I can figure out which agent I am on the
board
oh I can see it I'm the I'm the red one
oh I can see it I'm the I'm the red one
at the top
right Unfortunately they have perfect
right Unfortunately they have perfect
reflexes so unlike Slither it's very
reflexes so unlike Slither it's very
hard to foul them
up quite far above my knowledge level
up quite far above my knowledge level
but this stuff is still cool yeah I'm
but this stuff is still cool yeah I'm
going to make a I'm gonna make a more
going to make a I'm gonna make a more
semi a semi accessible video on some RL
semi a semi accessible video on some RL
stuff like another long form video
stuff like another long form video
uh I have it in the works I just I have
uh I have it in the works I just I have
to do it and it's it's so much so much
to do it and it's it's so much so much
work there's so many things I need to
work there's so many things I need to
do there's only so much
time but it's been going well it's
time but it's been going well it's
definitely been going
well really all I want to do is code
well really all I want to do is code
lots more
lots more
Sims well we'll
see anyways um I got to call this
see anyways um I got to call this
because I have nurs rebuttal to finish
because I have nurs rebuttal to finish
tonight so uh
tonight so uh
technically I've done the ones for the
technically I've done the ones for the
puffer lib paper we got shredded in
puffer lib paper we got shredded in
review uh we got 663 on puffer which is
review uh we got 663 on puffer which is
insane um but I have one other one that
insane um but I have one other one that
I am obligated to finish today so I'm
I am obligated to finish today so I'm
going to go do that and uh I might
going to go do that and uh I might
stream tomorrow but I'll definitely be
stream tomorrow but I'll definitely be
back Monday so thanks for dropping by if
back Monday so thanks for dropping by if
you want to check out any of my latest
you want to check out any of my latest
work it is all in puffer lib which is
work it is all in puffer lib which is
right I'll link it one last
right I'll link it one last
time puffers right here feed the puffer
time puffers right here feed the puffer
a star on your way in if you please
a star on your way in if you please
helps me out a bunch and uh yeah see you
helps me out a bunch and uh yeah see you
around

Kind: captions
Language: en
okay we're
live funny I'm not seeing it working
live funny I'm not seeing it working
hold
on oh there we
on oh there we
go cool this works um
go cool this works um
we have a lot of stuff to do we have a
we have a lot of stuff to do we have a
lot of stuff to
lot of stuff to
do so I guess let's just get started
do so I guess let's just get started
here
here
um first of all quick check on
puffer lots of stuff is down it seems
puffer lots of stuff is down it seems
there we
there we
go almost at 800 that's
awesome uh let's go check wand B
awesome uh let's go check wand B
so there were some experiments from last
so there were some experiments from last
week that I just didn't check on I got
week that I just didn't check on I got
distracted because of the
50k okay
50k okay
so right
here yeah
here yeah
here we have all of
here we have all of
our all of our
our all of our
runs these were the baselines that we
runs these were the baselines that we
set
set
so I suppose we
so I suppose we
should double check these versus the
should double check these versus the
original po
paper of course we're actually training
paper of course we're actually training
way way fewer time steps than they are
so we'll have to take that into
so we'll have to take that into
account let's
account let's
see how we're going to do
this okay let's do
this okay let's do
this and
then so this is cubert
cubert they get uh what is their one
cubert they get uh what is their one
which color
red so in 15 million steps of
red so in 15 million steps of
cubert we are at 2
cubert we are at 2
2600 I think that we do better than them
2600 I think that we do better than them
here it's hard to say because this is
here it's hard to say because this is
like a really long training run so we
like a really long training run so we
should probably do some much longer runs
should probably do some much longer runs
let's just I'm just trying to get a
let's just I'm just trying to get a
ballpark of if we did well or not so
ballpark of if we did well or not so
beam Rider
beam Rider
we've got
1500 yeah we crushed them in beam Rider
1500 yeah we crushed them in beam Rider
here this is like 160 200 million step
here this is like 160 200 million step
run or
run or
something so beam Rider is
something so beam Rider is
good breakout I think breakouts bad
good breakout I think breakouts bad
right H
right H
115 115 and only 10 mil is actually not
115 115 and only 10 mil is actually not
terrible yeah we uh we're fine
terrible yeah we uh we're fine
here and uh uh let's
here and uh uh let's
see
cubert what you say
cubert what you say
Enduro oh yeah we crushed them on
Enduro where the heck are the rest of
them sequ is not there
wait what oh well this is wait this is
wait what oh well this is wait this is
Enduro
Enduro
twice and then one two
twice and then one two
three what happened here something weird
three what happened here something weird
happened hold
on so we're missing Space Invaders and
on so we're missing Space Invaders and
sequ Quest I don't know what happened
sequ Quest I don't know what happened
here
assuming that this just didn't yeah this
assuming that this just didn't yeah this
just didn't run something weird
just didn't run something weird
happened
happened
oops okay so we'll figure that out but
oops okay so we'll figure that out but
these look so far so good um we should
these look so far so good um we should
cue up some of
cue up some of
those
what put like individual points on here
what put like individual points on here
this is the UI screwing up right
okay
so let me see if I can figure out why
so let me see if I can figure out why
this is uh what has happened here and
this is uh what has happened here and
then what I would like to do is I'd like
then what I would like to do is I'd like
to just run a longer
to just run a longer
experiment with some of
experiment with some of
these we also have the Moa
results I posted these on Twitter
results I posted these on Twitter
yesterday I didn't really get a chance
yesterday I didn't really get a chance
to look at them too much but we actually
to look at them too much but we actually
do have increasing ELO over
do have increasing ELO over
time so that's quite
good okay I think what we're going to do
good okay I think what we're going to do
then is let's figure out what's wrong
then is let's figure out what's wrong
with this and then we'll do the C stuff
with this and then we'll do the C stuff
and then we have other things to do from
and then we have other things to do from
there we have a whole bunch of projects
there we have a whole bunch of projects
that need my attention today
so this was the MOBA
sweep uh we can just run
sweep uh we can just run
this we can just just run this for
this we can just just run this for
longer right cuz we're not going to get
longer right cuz we're not going to get
to this otherwise
to this otherwise
today yeah let's just do that real quick
today yeah let's just do that real quick
so on this box we will just
do carb
sweeps
sweeps
oops just do a whole bunch of runs
here and hopefully it will start doing
here and hopefully it will start doing
longer runs over time as well we will
longer runs over time as well we will
see about that
okay and let's check puffer box
one and we'll see what went wrong
here hey
here hey
Nathan me get this off of the chat
welcome how's your uh how's your project
going okay so something weird happened
going okay so something weird happened
here
right Kung started using my box for Moko
right Kung started using my box for Moko
okay kyung that's fine I'll let you use
okay kyung that's fine I'll let you use
this box for a bit
this box for a bit
using it
still doesn't have anything running on
still doesn't have anything running on
it
now I did tell him he could take any
now I did tell him he could take any
box I didn't expect him to take my box
box I didn't expect him to take my box
but
okay wa is that message from today what
okay wa is that message from today what
are you studying at
are you studying at
Stamford I'm a Stanford Alum I graduated
Stamford I'm a Stanford Alum I graduated
in 2019
yeah that's from today
okay I finished uh a my undergrad in CS
okay I finished uh a my undergrad in CS
aai in
aai in
2019 and I just finished my PhD at MIT a
2019 and I just finished my PhD at MIT a
few months ago so now I'm doing this
few months ago so now I'm doing this
stuff
Entry Way on
Entry Way on
here one of the profiles you
here one of the profiles you
displayed oh that's funny
displayed oh that's funny
where I don't know where I had that it's
where I don't know where I had that it's
probably old from uh because I you know
probably old from uh because I you know
maybe something still has my old email
maybe something still has my old email
on it or whatever but yeah I'm in
on it or whatever but yeah I'm in
LM getting a pretty good pong agent but
LM getting a pretty good pong agent but
it takes a while got to tune some hyper
it takes a while got to tune some hyper
pram just do it automatically with carbs
pram just do it automatically with carbs
carbs will just do it for
you you can even use
you you can even use
um if you want some defaults to use here
um if you want some defaults to use here
I'll give you
I'll give you
them
uh is the cool thing about being able to
uh is the cool thing about being able to
do this
right is I can just go here I can
right is I can just go here I can
say look at this one this one's not
say look at this one this one's not
actually as good good as it should
actually as good good as it should
be I don't know what happened here it
be I don't know what happened here it
still it solves it in 5 million steps oh
still it solves it in 5 million steps oh
wait maybe it's that it's really fast in
wait maybe it's that it's really fast in
wall clock right there's the wrong
axis yeah okay so this is like 2 minutes
axis yeah okay so this is like 2 minutes
or whatever a little longer we have runs
or whatever a little longer we have runs
that are like sub 90 seconds so this one
that are like sub 90 seconds so this one
is not amazing but um here you can take
is not amazing but um here you can take
these you can take these parameters
these you can take these parameters
Nathan
starting
point oh yeah there it is this has my
point oh yeah there it is this has my
old Stanford email on it should change
that yeah let me look at them to make
that yeah let me look at them to make
sure that they're actually kind of
sure that they're actually kind of
reasonable for the pong let me just
reasonable for the pong let me just
double do a double check for
you they like pass the
you they like pass the
initial you also have to check the M
initial you also have to check the M
parameters here it's frame skip
parameters here it's frame skip
4 is this CNN OBS and score reward yep
4 is this CNN OBS and score reward yep
it's in the uh the dev Branch you can
it's in the uh the dev Branch you can
check exactly what I do with the Atari
check exactly what I do with the Atari
uh with like the Atari M binding in
uh with like the Atari M binding in
there you have all the prems in here
there you have all the prems in here
and 32k batch these are mostly
and 32k batch these are mostly
reasonable looking it's a it's a really
reasonable looking it's a it's a really
large number of updates on stale data
large number of updates on stale data
with a small mini batch size is the only
with a small mini batch size is the only
thing that looks a little weird um but
thing that looks a little weird um but
yeah this apparently does quite
well really we would like to be able to
well really we would like to be able to
average over R random seeds but WB
average over R random seeds but WB
doesn't make that easy
plain features now with tiny MLP that's
plain features now with tiny MLP that's
fine you can add an lstm for free puffer
fine you can add an lstm for free puffer
will just do that for
will just do that for
you I usually recommend
that two stars off
800 let me think what I want to run here
vitari
vitari
mode uh
train okay well kyung did some stuff
train okay well kyung did some stuff
here so I'll leave this alone for now
here so I'll leave this alone for now
you can use this box today
welcome 5x lower
welcome 5x lower
SPS on my little CPU with the L yeah you
SPS on my little CPU with the L yeah you
need a you need a GPU of
course how's the M Speed though with
course how's the M Speed though with
pong progress from yesterday I have sort
pong progress from yesterday I have sort
of thought about and I think it is worth
of thought about and I think it is worth
spending a little bit more time on onyx
spending a little bit more time on onyx
I was just doing a couple things to
I was just doing a couple things to
start some runs uh by default also I
start some runs uh by default also I
should just double check that I'm not
should just double check that I'm not
missing
anything
here I missed a message one second
uh is it
enough that's per agent done let stay
done do
that
okay autotune gives me 40
okay autotune gives me 40
mil 40 million
mil 40 million
steps
steps
what well that's freaking good
oh it's yeah it's pong of course pong
oh it's yeah it's pong of course pong
should be faster than a lot of stuff
should be faster than a lot of stuff
yeah especially if you're just doing
yeah especially if you're just doing
observations like small feature okay
observations like small feature okay
yeah
cool if you're training on 500k to 1
cool if you're training on 500k to 1
milps on CPU you should literally be
milps on CPU you should literally be
solving that environment in like a few
solving that environment in like a few
seconds
just use the carbs integration Nathan
just use the carbs integration Nathan
like with as fast as that Enis in 20
like with as fast as that Enis in 20
minutes you'll have a full sweet like
minutes you'll have a full sweet like
you can just run 500
experiments all right we should start on
experiments all right we should start on
the C and the Onyx stuff for today
the C and the Onyx stuff for today
because that's what the stream title is
because that's what the stream title is
and also it needs to get done tiny
thing yeah they're more inter a coming
thing yeah they're more inter a coming
so that you can automatically scale your
so that you can automatically scale your
net up and down I got to do that as
well C an onic stuff yeah like I got
well C an onic stuff yeah like I got
it's it ended up being worth doing I
it's it ended up being worth doing I
think just a little bit more I realized
think just a little bit more I realized
that there was like a flag that I kind
that there was like a flag that I kind
of ignored from here where is
it this thing gave me a flag to compile
it this thing gave me a flag to compile
right here where is it
are you going to migrate all your scon
are you going to migrate all your scon
to see eventually not necessarily this
to see eventually not necessarily this
is just an
is just an
experiment the only thing that would
experiment the only thing that would
cause me to to migrate all the scon to
cause me to to migrate all the scon to
see would be like if I finish this
see would be like if I finish this
project and I post like play Snake
project and I post like play Snake
against a thousand trained AIS in your
against a thousand trained AIS in your
browser right and like that blows up on
browser right and like that blows up on
Twitter and gets me a huge amount of
Twitter and gets me a huge amount of
exposure for puffer then yes I would
exposure for puffer then yes I would
consider doing it otherwise this is just
consider doing it otherwise this is just
like a fun
test okay so this is what we wanted
here build
I'm trying to remember where we left off
I'm trying to remember where we left off
with this yesterday I think that this
with this yesterday I think that this
was not working right so if I did this
was not working right so if I did this
it works
yeah for folks like that are doing stuff
yeah for folks like that are doing stuff
in syon there's literally no performance
in syon there's literally no performance
reason to do c instead of python it's
reason to do c instead of python it's
just this is I'm messing with some web
just this is I'm messing with some web
assembly stuff is all there's no
assembly stuff is all there's no
performance reason to prefer
C build
temp trying to remember how I structured
temp trying to remember how I structured
stuff here build game HTML
okay so this one works
right
right
and what I wanted to do is I wanted to
and what I wanted to do is I wanted to
add the debug information
which was right
here allows you to debug your C directly
here allows you to debug your C directly
in the browser
right
oops okay and I remember this not
oops okay and I remember this not
working so
okay
okay let's see what it has for me here
okay let's see what it has for me here
it
it
has exposed functions Malik
free right
free right
so let's put these down
there and then this Source map thing
there and then this Source map thing
doesn't work
doesn't work
right so we have this we have
this Dash Das Source map base
this Dash Das Source map base
okay so they it's a different flag now
okay so they it's a different flag now
let's see
demangle support is
deprecated okay what happens if I run it
deprecated okay what happens if I run it
though
okay so this now
runs is there anything in
here
what oh look at
what oh look at
that this didn't come up four
right resetting reset complete okay I
right resetting reset complete okay I
get prints
get prints
now this
now this
is yeah yeah I get prints okay
is yeah yeah I get prints okay
perfect we might actually be able to do
perfect we might actually be able to do
something with
something with
this so
cuz I should actually get bugs I should
cuz I should actually get bugs I should
actually get error messages in the
actually get error messages in the
browser now I
think all right I forgot it also takes a
think all right I forgot it also takes a
long ass time to compile this it's okay
long ass time to compile this it's okay
though
EMCC support cach no idea what would the
EMCC support cach no idea what would the
flag
be I don't know what it's building
be I don't know what it's building
either is the thing cuz like I thought I
either is the thing cuz like I thought I
already have EMCC
built so you do be linking to it I like
built so you do be linking to it I like
I don't know what it's doing that takes
I don't know what it's doing that takes
this long but I do remember it does
this long but I do remember it does
actually eventually build it just takes
actually eventually build it just takes
a couple of
minutes c c cach oh maybe I can just do
minutes c c cach oh maybe I can just do
that for carbs should I do D- mode sweep
that for carbs should I do D- mode sweep
carbs yes and then do I need to specify
carbs yes and then do I need to specify
all the sweet params yes but you also
all the sweet params yes but you also
get some of them from default so if you
get some of them from default so if you
look at like the way that yeah you do
look at like the way that yeah you do
need to specify those but like if you
need to specify those but like if you
look at the latest Dev Branch I have
look at the latest Dev Branch I have
like a lot of them are already set with
like a lot of them are already set with
defaults in the demo file and like it'll
defaults in the demo file and like it'll
just infer the Min and the Max from your
just infer the Min and the Max from your
range pram like check like the Atari or
range pram like check like the Atari or
whatever the new examples there cuz like
whatever the new examples there cuz like
most of them can just be inherited and
most of them can just be inherited and
you just have to edit a
few running limited binary and
few running limited binary and
optimization
if we actually get this to work though
if we actually get this to work though
you know how awesome this is going to be
you know how awesome this is going to be
we're going to have a 400 line demo
we're going to have a 400 line demo
that's pure C that just
that's pure C that just
runs you know runs in the
web 100% client side I mean I won't have
web 100% client side I mean I won't have
to deal with I won't have to deal with
to deal with I won't have to deal with
anything else I can just ship like two c
anything else I can just ship like two c
files or one C file
files or one C file
[Music]
[Music]
whatever and it'll run local it'll run
whatever and it'll run local it'll run
where whatever I
where whatever I
think actually I don't know if this runs
think actually I don't know if this runs
local because I'm using like webgl
local because I'm using like webgl
builds of
builds of
Onyx I have to see about that
we'll see whether this is
we'll see whether this is
um as appealing as just implementing
um as appealing as just implementing
some
networks the main thing is if I like I
networks the main thing is if I like I
don't want to have to write my own
don't want to have to write my own
conversion layer from torch to like some
conversion layer from torch to like some
something else
does tiny grad have a Capi
oh wait they have wasam C back
end wait they have code generation
where's the SE where's their Cod John
invest with your PRS is
funny
um I'm looking to see because they say
um I'm looking to see because they say
they have web GPU and if they do this
they have web GPU and if they do this
could be simpler
I they say that they have this where is
I they say that they have this where is
it
dang
dang
it freaking docks where are these
tiny grad has wasum but like
where e
I wish I could find this thing
webg is this it
[Music]
H
compile man
compile man
love to know how this freaking
works this is
Javascript they say they have it but I
Javascript they say they have it but I
can't find
can't find
where I don't
where I don't
know how's this thing this thing has run
know how's this thing this thing has run
at least
okay so this thing breaks as
expected
game.js the
game.js the
[ __ ] oh come on this doesn't give me a
[ __ ] oh come on this doesn't give me a
proper error at all
[Applause]
[Applause]
ah yeah okay we're just going to
do I'm going to go nuts if I have to do
do I'm going to go nuts if I have to do
this all day so what we're going to do
this all day so what we're going to do
instead is we're going to do something I
instead is we're going to do something I
know will work this is what I said last
know will work this is what I said last
time uh we're just going to try to like
time uh we're just going to try to like
make uh like an MLP for now run in
make uh like an MLP for now run in
uh we'll just going of see if we can get
uh we'll just going of see if we can get
like an MLP to run locally let me start
like an MLP to run locally let me start
on this so here's here's how this is
on this so here's here's how this is
going to be different um we're going to
going to be different um we're going to
do
is I hate we I just heard I can't work
is I hate we I just heard I can't work
with stuff that's that heavy and shitty
with stuff that's that heavy and shitty
it's just
it's just
like no not doing it
Okay so
TCH doesn't have default
oh you found it let me
see okay so
explain
what in order to get this to work I
what in order to get this to work I
would need to make an X Port from P
would need to make an X Port from P
torch to Tiny grad and then I would need
torch to Tiny grad and then I would need
to write like a version of this for tiny
to write like a version of this for tiny
grad that then exports it to C
I yeah I don't understand how the [ __ ]
I yeah I don't understand how the [ __ ]
I'm supposed to do anything with
this well I mean what am I supposed to
this well I mean what am I supposed to
do this is like a like
it's cool that this works but this is
it's cool that this works but this is
not in any way that I can like there's
not in any way that I can like there's
no way that I can like oh cool I can
no way that I can like oh cool I can
just slot in tiny grad to use as a web
just slot in tiny grad to use as a web
GPU back end I mean of course like they
GPU back end I mean of course like they
say that they've put basically no effort
say that they've put basically no effort
into that because it's not what they're
into that because it's not what they're
doing at the
doing at the
moment yeah I need to do torch tiny gr
moment yeah I need to do torch tiny gr
anyways I might as well just do torch to
anyways I might as well just do torch to
see right cuz like that's what they're
see right cuz like that's what they're
doing they're just manually doing tiny
doing they're just manually doing tiny
to see
here so what I was going to do which I
here so what I was going to do which I
figured would
figured would
be less making me want to [ __ ] die on
be less making me want to [ __ ] die on
a
a
Friday uh is
do
do
this state. PI what's
this oh
this oh
okay is this General they actually have
okay is this General they actually have
a load torch
but they still don't have an export from
but they still don't have an export from
Tiny grad right like they say tiny grad
Tiny grad right like they say tiny grad
has wasum but they don't generally have
has wasum but they don't generally have
wasum right like they have like specific
wasum right like they have like specific
examples for which they've manually
examples for which they've manually
exported to C
exported to C
right or do they actually have like a
right or do they actually have like a
way to do like tiny grad model to wasm
way to do like tiny grad model to wasm
because if I can just do tiny if I can
because if I can just do tiny if I can
just do torch to Tiny grad and Tiny grad
just do torch to Tiny grad and Tiny grad
export wasm then I'll gladly gladly use
export wasm then I'll gladly gladly use
that
to understand how efficient
to understand how efficient
that well the efficient that converter
that well the efficient that converter
was like I would still have to manually
was like I would still have to manually
make one of these because like
make one of these because like
look what unless this is just input
reading empty plus oh this is as empty
reading empty plus oh this is as empty
plus
weights image
Library C program equals
Library C program equals
frog wait export
model wait what is
model wait what is
this oh whoa whoa whoa is this
this oh whoa whoa whoa is this
it that might be
it somewhere
it somewhere
here onyx
the Onyx was [ __ ]
the Onyx was [ __ ]
though I tried
though I tried
that how's there no underscore knit in
here extra. exort model
this is Javascript isn't it not
see this
see this
here 3113 you
here 3113 you
say GL
what only web
GPU can you tell if there's C code gen
GPU can you tell if there's C code gen
here or if this is like JavaScript and
here or if this is like JavaScript and
webg like webgl
webg like webgl
Shenanigans can I just export this to CN
Shenanigans can I just export this to CN
compile to wasum that'd be
great export model web
great export model web
GPU export model
GPU export model
clang that's promising right
oh this is
C this is
C
so do we want to make a quick little
so do we want to make a quick little
demo script with this then
let's see we'll try
let's see we'll try
it let's let's try it you're right that
it let's let's try it you're right that
this is worth if I don't have to write
this is worth if I don't have to write
my own C code genen I'll be happy
my own C code genen I'll be happy
so
so
yeah
um where are we at the
moment snake
do I have snake model. PT in
do I have snake model. PT in
here no
okay so now we
have
have
test gra export.
test gra export.
P okay P
torch model
torch model
TCH load snake model. PT
torch torch
torch torch
model
model
[Music]
[Music]
okay let I don't want to lose this
okay let I don't want to lose this
window we're screwed up I need the
history okay I got to hand it to uh
history okay I got to hand it to uh
George Hots here having a small package
George Hots here having a small package
that actually [ __ ] just installs
that actually [ __ ] just installs
instantly top
tier
um from Tiny gr.
um from Tiny gr.
extra P export
extra P export
model and then then where was the export
model and then then where was the export
torch thing that we had you linked that
torch thing that we had you linked that
before didn't
you torch
you torch
load tiny gr. nn.
state from Tiny rad
oops state for Tor load
okay oh wait it loads
okay oh wait it loads
uh it loads just the model so I just
uh it loads just the model so I just
need to give it snake model.
PT I might want to should I move this to
PT I might want to should I move this to
CPU
first well we'll see if this works
first well we'll see if this works
initially
okay and now we have export model
clang which I it calls this for us I
clang which I it calls this for us I
think so we can just do export
model what star
inputs we should just be able to do
model and then
model and then
Target
Target
is
clang
clang and what's this return
program input output
State tensor names you can probably do
State tensor names you can probably do
nothing let's see
dummy takes
dummy takes
no arguments
what dummy takes
torch load is hold on let me grab it
[ __ ] this is so
dense code is actually fine I wish he
dense code is actually fine I wish he
would add some spaces to it
would add some spaces to it
though holy hell
open Torch
pickle wait PT is pth different from
pickle wait PT is pth different from
PT was it
PT was it
just was it all the same yeah yeah it's
just was it all the same yeah yeah it's
just people using whatever
okay is it expecting
okay is it expecting
the
state maybe is it expecting like State
state maybe is it expecting like State
dick or
something let's see what does this give
something let's see what does this give
us
is this expecting us a to have a pickled
is this expecting us a to have a pickled
model or a state deck it would have to
model or a state deck it would have to
be a pickled model
right
e for
torch
load this looks like it needs a state
load this looks like it needs a state
deck right
yeah but look this torch load this is
fetch wait no hold
fetch wait no hold
on yeah it okay so it's fetch of State
dick pickled torch class yeah well
dick pickled torch class yeah well
that's what I should have already
is
there I'm just wondering if there's
there I'm just wondering if there's
direct code gen for something doesn't
direct code gen for something doesn't
look like
it what's the error that's the thing
it what's the error that's the thing
it's like not a reasonable
error torch pickle
it says is zip file it's not a zip file
it says is zip file it's not a zip file
what oh camera my
bad
so this should not be a zip file right
it's the El
it's the El
statement 192 right here
wait
wait
what LF tar yeah but isn't it calling
what LF tar yeah but isn't it calling
this one it says State Line
192 good point
looks like it's the
same do they have tags for their
releases doesn't look like
it
it
oh I assume it's this
this is still the
same I mean we can just check right
yeah it's the same man it is on the zip
file why does it think this is a
function wait fun function
string I gu the file name maybe not
function maybe it needs to be named PTA
function maybe it needs to be named PTA
H maybe they have that
hardcoded
ah I think they have it hardcoded to the
ah I think they have it hardcoded to the
extension
extension
huh maybe not let's see
no this says this is a ZIP file so I
no this says this is a ZIP file so I
guess it's treating um this as a
zip try to unzip
it apparently it is just a
it apparently it is just a
zip that's
weird so I guess that makes sense
weird so I guess that makes sense
I don't know why they would have a
I don't know why they would have a
custom extension then
custom extension then
but it's kind of
deranged for pie
torch I know jar jar is jar Java AR it
torch I know jar jar is jar Java AR it
literally just a zip
though okay that's
though okay that's
obnoxious custom file extensions just
obnoxious custom file extensions just
confuse people cuz now you think you
confuse people cuz now you think you
need a custom jar extractor right
[Music]
H data.
pickle I don't know let's put this here
dummy takes no arguments
I guess it's not finding the class
I guess it's not finding the class
though it should be giving me a warning
though it should be giving me a warning
oh no the debug is off okay
oh no the debug is off okay
so module
so module
root and white
has I see
it's kind of
it's kind of
weird why does it do
this
for e
I actually don't understand how this is
I actually don't understand how this is
loading this
loading this
too tiny
grad no this is this is saying that it's
grad no this is this is saying that it's
not it's only allowing you to load stuff
not it's only allowing you to load stuff
that's like has the top level thing
that's like has the top level thing
defined in torch or collections or
whatever maybe it does want the state
whatever maybe it does want the state
decked
decked
right no but it shouldn't it should want
right no but it shouldn't it should want
the Pickled model that's
weird but then
and I do not understand this
thing I'm trying to think like what the
thing I'm trying to think like what the
odds are that I can get this whole thing
odds are that I can get this whole thing
working with the fancy model versus just
working with the fancy model versus just
like really quickly doing an
like really quickly doing an
MLP loading that right now right
m
I mean it looks like they just want the
I mean it looks like they just want the
state dick anyways
state dick anyways
like you see that they're constructing
like you see that they're constructing
like this Nest addictive
like this Nest addictive
parameters I don't know how they will
parameters I don't know how they will
convert that though to
like I don't know how they're going to
like I don't know how they're going to
convert that to um a tiny grad nut
I mean I think initially the the easiest
I mean I think initially the the easiest
thing I'm going to be able to do for a
thing I'm going to be able to do for a
quick demo is like yeah this is cool and
quick demo is like yeah this is cool and
maybe one of these will work eventually
maybe one of these will work eventually
but I can probably just make an MLP work
but I can probably just make an MLP work
really quick right
isn't there an ump C API
literally there's a numpy c API I can
literally there's a numpy c API I can
use to just Implement an MLP right
well I think I should just do this for
well I think I should just do this for
now because like otherwise I'm going to
now because like otherwise I'm going to
be here [ __ ] with more and more
be here [ __ ] with more and more
Frameworks like all day driving myself
nuts like this is not the goal
nuts like this is not the goal
right I like would like to just have a
right I like would like to just have a
400 line piece of code that just does it
400 line piece of code that just does it
do you need the numpy cap API does it
do you need the numpy cap API does it
compile well I don't know I probably
compile well I don't know I probably
don't I can probably just make Claude
don't I can probably just make Claude
make me an
MLP so what I was doing before I started
MLP so what I was doing before I started
this nonsense right
was oh that's
was oh that's
weird why does it open
weird why does it open
rayb it opens the snake thing opens rayb
what e
something's
weird where did it get render mode human
weird where did it get render mode human
from
okay
okay yeah this is going to work
so this will train
so this will train
me CPU
me CPU
snake with like MLP or
whatever for
what's the current state of the sea
what's the current state of the sea
snake we've tried pie torch Onyx and a
snake we've tried pie torch Onyx and a
little bit of Tidy grad trying to figure
little bit of Tidy grad trying to figure
out how to get the stupid models to load
out how to get the stupid models to load
um and I haven't been able to so I'm
um and I haven't been able to so I'm
just training really simple model and
just training really simple model and
we're just going to make a a c
we're just going to make a a c
version
native I don't need grb because I don't
native I don't need grb because I don't
need to train
puffer yeah training is um training is
puffer yeah training is um training is
the normal RL stack and
the normal RL stack and
the goal here is just to figure out how
the goal here is just to figure out how
if like we can run a cool demo on web
if like we can run a cool demo on web
assembly that's all I want to
do for
TR how I want to do
this do I try to do Cod genen or do I
this do I try to do Cod genen or do I
just try to make
and we just make Claud do
and we just make Claud do
it as a starting point because I don't
it as a starting point because I don't
know what the [ __ ] I'm doing in this
space but I mean I assume that there's
space but I mean I assume that there's
like enough of these online that it
like enough of these online that it
should just be able to J
something you know the C code
gen would that be easier
there's got to be something for this
there's got to be something for this
right
like for
no not
this how fast should Atari run in puffer
this how fast should Atari run in puffer
trains at 30,000 steps per second or so
trains at 30,000 steps per second or so
on a puffer
box it is quite fast
I think we just do it custom
I think we just do it custom
here I still don't know if I want to do
here I still don't know if I want to do
code gen though
or it's got to be like P torch C code
again guess
not for
C++ this is what we want isn't
it I think you does
C++ ah too much [ __ ] man
let's just try this
trying think what format I should save
trying think what format I should save
the data in
probably just flat data
right yeah that's like a trivial
thing
for e
this is going to be obnoxious actually
this is going to be obnoxious actually
now that I'm thinking about it
there's no good way of
there's no good way of
manipulating are you planning to support
manipulating are you planning to support
GPU accelerated Ms with puffer we
GPU accelerated Ms with puffer we
already do we have uh in the dev Branch
already do we have uh in the dev Branch
there's integration with GPU Drive I
there's integration with GPU Drive I
made it five times faster than the
made it five times faster than the
original in three
original in three
days and go play with it
days and go play with it
there we're about to do carb sweeps on
there we're about to do carb sweeps on
that as well I just have to finish this
that as well I just have to finish this
so I can follow up with those guys on it
I'm trying to think what the this should
I'm trying to think what the this should
even look
even look
like I should just go look at
like okay this kind of got large didn't
like okay this kind of got large didn't
it
what happened where there's no lm. C
what happened where there's no lm. C
file is
file is
there oh
man oh yeah here was the original
perfect so so float star
should just be a float pointer to the
should just be a float pointer to the
weights as well
right
yeah e
see yeah one second well you'll see what
see yeah one second well you'll see what
I'm trying to do
I'm trying to do
um we're using on it to like start a
um we're using on it to like start a
bunch of stuff I haven't written C in 10
bunch of stuff I haven't written C in 10
years but there is going to be we have
years but there is going to be we have
right now we have the environment in C
right now we have the environment in C
we have um the rendering in C and all I
we have um the rendering in C and all I
need to figure out how to do is get the
need to figure out how to do is get the
networks I've trained to actually run I
networks I've trained to actually run I
can get pytorch to run in C++ but I
can get pytorch to run in C++ but I
can't compile that for web assembly so
can't compile that for web assembly so
we're just like getting Claude to give
we're just like getting Claude to give
us a shitty custom thing to just so I
us a shitty custom thing to just so I
can get a demo working and then maybe
can get a demo working and then maybe
from there I'll figure out how to like
from there I'll figure out how to like
either use something or write something
either use something or write something
to do full code gen for
everything we'll just go back and forth
everything we'll just go back and forth
with this thing a couple of times we'll
with this thing a couple of times we'll
probably get it so
probably get it so
here's the idea right I'll show you
here's the idea right I'll show you
what's going on here
um I hate having to like lean on Claude
um I hate having to like lean on Claude
for any of this crap man but so here we
for any of this crap man but so here we
have here like 300 some odd lines here's
have here like 300 some odd lines here's
the entire snake environment ported from
the entire snake environment ported from
scon to C it's got everything that you
scon to C it's got everything that you
need it's almost one to one with the
need it's almost one to one with the
original I really don't like the way
original I really don't like the way
that the 1D like the array logic does
that the 1D like the array logic does
indexed like this so I'll have to think
indexed like this so I'll have to think
about that but everything else should be
about that but everything else should be
good and then we have a rib renderer
good and then we have a rib renderer
right here which is very very simple um
right here which is very very simple um
that does the graphics right and do I
that does the graphics right and do I
even have this yeah I still have this
even have this yeah I still have this
open
open
so this version is not correctly scaled
so this version is not correctly scaled
but you can get the idea this is snake
but you can get the idea this is snake
enf um now I
enf um now I
have this other file here which it does
have this other file here which it does
human input with
human input with
RB and uh sets all the parameters
RB and uh sets all the parameters
everything and I've been trying a bunch
everything and I've been trying a bunch
of different
ways like this here is the pytorch C++
ways like this here is the pytorch C++
API this one's actually very very easy
API this one's actually very very easy
to get working this is pretty nice um I
to get working this is pretty nice um I
would I would accept having a little bit
would I would accept having a little bit
of C++ if I could make this work but you
of C++ if I could make this work but you
can't compile pytorch for web assembly
can't compile pytorch for web assembly
as far as I can tell so that sucks um I
as far as I can tell so that sucks um I
tried Onyx that was also a pain I tried
tried Onyx that was also a pain I tried
tiny grad a little bit and I couldn't
tiny grad a little bit and I couldn't
quite figure out a reasonable way to do
quite figure out a reasonable way to do
that so now I'm just doing like a oneoff
that so now I'm just doing like a oneoff
thing for just some very simple Nets
thing for just some very simple Nets
just to get this demo running and then
just to get this demo running and then
hopefully we'll do we'll find a way to
hopefully we'll do we'll find a way to
like get around that afterwards if this
like get around that afterwards if this
thing is
thing is
substantial okay so what does this thing
substantial okay so what does this thing
give us okay yeah this is Trivial as
give us okay yeah this is Trivial as
expected
let's do oops where are
we
we
save
save
plat
nope
nope
okay architecture.
text oh set no paste
model was it
snake snake model other way
around
model and then you save this
to oh no it just wants the file
wait file name
plus oh stupid I don't want this at
plus oh stupid I don't want this at
least not now maybe in the
least not now maybe in the
future two
file file
file file
name flat snake. PT okay this is
good yeah
quite a bit of beginner in RL well
quite a bit of beginner in RL well
welcome to puffer lib uh this is me
welcome to puffer lib uh this is me
doing crazy [ __ ] the normal stuff in
doing crazy [ __ ] the normal stuff in
puffer lib is much simpler and
puffer lib is much simpler and
easier
easier
so right here we have all the puffer
so right here we have all the puffer
stuff we've got all sorts of demos we
stuff we've got all sorts of demos we
have all sorts of fast M that you can
have all sorts of fast M that you can
play around with with very very simple
play around with with very very simple
python code without a bunch of uh
python code without a bunch of uh
complicated crap let me let me see if I
complicated crap let me let me see if I
find the main example
find the main example
file so where is it clean puff files our
file so where is it clean puff files our
main demo file it is somewhat chunky
main demo file it is somewhat chunky
there are only about 300 lines of actual
there are only about 300 lines of actual
RL code in here that Implement po the
RL code in here that Implement po the
rest of it does logging and stuff so you
rest of it does logging and stuff so you
can tell what's going on including this
can tell what's going on including this
nice like little local dashboard and
nice like little local dashboard and
other stuff for that you got a bunch of
other stuff for that you got a bunch of
Ms you can try out here should be nice
Ms you can try out here should be nice
and easy
all right
all right
so that is what I am doing full-time I
so that is what I am doing full-time I
am trying to make reinforcement learning
am trying to make reinforcement learning
sane and easy though admittedly writing
sane and easy though admittedly writing
stuff in C is not exactly sane or
stuff in C is not exactly sane or
easy yeah of
easy yeah of
course this is basically what I'm doing
course this is basically what I'm doing
at the moment this is like a weird day
at the moment this is like a weird day
for me I'm just I'm trying to make a
for me I'm just I'm trying to make a
really cool demo because it would let me
really cool demo because it would let me
put one of the M's that I built online
put one of the M's that I built online
so people could play it against the AIS
so people could play it against the AIS
which would probably be like a really
which would probably be like a really
good way to show off puffer it's the
good way to show off puffer it's the
only reason I'm doing this otherwise
only reason I'm doing this otherwise
like we have way simpler ways of doing
like we have way simpler ways of doing
stuff
okay where's the C code that this thing
wrote more than I wanted it to write but
wrote more than I wanted it to write but
this is decent enough I
this is decent enough I
think copy this and we're going to start
think copy this and we're going to start
we're going to actually do some stuff
we're going to actually do some stuff
with this so copy Claud snake. C
um
okay standard lib math
okay standard lib math
we have this main function up top so we
we have this main function up top so we
have to
have to
go it's C so all this actually needs to
go it's C so all this actually needs to
go up
top linear layer R okay this is what we
top linear layer R okay this is what we
wanted we
wanted we
wanted this is really simple
right then we have load weights
okay and we need to now merge
these which we can do
let's do this up
here
here
and Sample input here that's going to
and Sample input here that's going to
have to get
have to get
moved but we can start with
moved but we can start with
this we can start with
this print
this print
F done
all right
all right
and
rehidden oh God this is the worst that
rehidden oh God this is the worst that
is not a good
is not a good
implementation uh not one
implementation uh not one
bit but we'll start
here what
sh okay
local this one is
local this one is
good and we're going to
GCC this
GCC this
one
and
yeah FL snake
yeah FL snake
flat snake.
flat snake.
PT for model
PT for model
name build
local forget that I'm writing
local forget that I'm writing
[Music]
C this
runs make game
well there's no way that actually works
right yeah this is not the right file I
right yeah this is not the right file I
don't think
because
local okay it's it's in
local okay it's it's in
here do class snake
here do class snake
game error loading
really what did I have to do for this
really what did I have to do for this
again there was something right
shoot l r
should just need the
should just need the
lib which I have
may as
may as
well GPT while I still have the
well GPT while I still have the
subscription
okay
I don't know why this is not in the
I don't know why this is not in the
library
path this one should work I
believe I had to learn more about how
believe I had to learn more about how
this stuff works
this is what yours are writing python
this is what yours are writing python
does to
you
what
what
WL
WL
comma that's freaking bizarre
uh well that's new
well I guess we'll
not we'll just have to export for now
no such file or
no such file or
directory that is bizarre
can I not like
I actually don't understand how the hell
I actually don't understand how the hell
that's
possible oh wait is this an internal
possible oh wait is this an internal
error this could be an internal error
error this could be an internal error
right I didn't realize I'm I'm stupid
right I didn't realize I'm I'm stupid
okay
there that's what it
there that's what it
was okay so I understand what was
was okay so I understand what was
happening now it was the no such file or
happening now it was the no such file or
directory was on opening of the file
duh let's
duh let's
do make some changes
here and
yeah now we're now we're jamming
yeah now we're now we're jamming
because this is so nice look how fast
because this is so nice look how fast
the build times are with that we just
the build times are with that we just
immediately can build our code we can
immediately can build our code we can
run our code things are instantaneous
run our code things are instantaneous
this is the way you know code is
this is the way you know code is
supposed to be right and I'm the red
supposed to be right and I'm the red
snake there that's like right next to
snake there that's like right next to
the food you can see it
the food you can see it
right now I'm okay perfect so now all we
right now I'm okay perfect so now all we
have to do
have to do
is do we get done yes done
is do we get done yes done
here I'm actually incredibly surprised
here I'm actually incredibly surprised
that that even runs first try uh I'm
that that even runs first try uh I'm
going to go use the restroom and then
going to go use the restroom and then
what we're going to do is we're going to
what we're going to do is we're going to
get this thing correctly loading and
get this thing correctly loading and
controlling the
controlling the
snakes and if this all works correctly I
snakes and if this all works correctly I
will be incredibly happy because
will be incredibly happy because
like I'm just so sick of like big heavy
like I'm just so sick of like big heavy
build systems and things to maintain
build systems and things to maintain
every time I build a demo like if
every time I build a demo like if
something like this works and we can
something like this works and we can
just have a file that like you build
just have a file that like you build
with
with
GCC in instantly and we can just stick
GCC in instantly and we can just stick
this online stick it locally do whatever
this online stick it locally do whatever
we want with it that's awesome so I'll
we want with it that's awesome so I'll
be right
back
e e
okay I saw your thing on Twitter uh DT I
okay I saw your thing on Twitter uh DT I
don't know if you're still there but um
don't know if you're still there but um
we do have Discord it's literally
we do have Discord it's literally
discord.gg
discord.gg
puffer so we're not hard to
puffer so we're not hard to
find I've had a few people try to buy
find I've had a few people try to buy
the URL off of me but it's ours
discord.gg
puffer paid a pretty penny for that one
okay
so take these
so take these
freeze put them down with the other
freeze put them down with the other
freze
and should be right
and should be right
here what are you trying to do today by
here what are you trying to do today by
the way I started a code to make a
the way I started a code to make a
faster breakout end with puffer lib you
faster breakout end with puffer lib you
might want to pick another one because
might want to pick another one because
we have another guy in here who is
we have another guy in here who is
already doing breakout with puffer um
already doing breakout with puffer um
let me find you
this but we are if you wanted to make uh
this but we are if you wanted to make uh
fast Atari M for puffer we actually we
fast Atari M for puffer we actually we
actively that is one of the things we
actively that is one of the things we
want contributions of like if you just
want contributions of like if you just
like look at the way we did the snake en
like look at the way we did the snake en
or like one of the other M and just make
or like one of the other M and just make
million step Atari M that's exactly what
million step Atari M that's exactly what
we're looking for at the moment um
we're looking for at the moment um
unfortunately there are no bounties on
unfortunately there are no bounties on
things like this until we actually have
things like this until we actually have
Revenue but you know we will give you
Revenue but you know we will give you
some shout outs and some stuff for
that where's this stuff okay so here he
that where's this stuff okay so here he
forked puffer and if you check his thing
forked puffer and if you check his thing
he's
added ocean where is this
thing do have Breakout where is
it I don't know where his thing is I
it I don't know where his thing is I
know I saw his Branch he has a branch
know I saw his Branch he has a branch
somewhere
somewhere
here oh it's probably on dev is why yeah
here oh it's probably on dev is why yeah
that's why it's got to be on dev yeah so
that's why it's got to be on dev yeah so
right here I'll link you his
stuff um so we have somebody else doing
stuff um so we have somebody else doing
pong uh the ones that people haven't
pong uh the ones that people haven't
done yet I honestly I think that the
done yet I honestly I think that the
best ones to do would be like the
best ones to do would be like the
original dqn 7
original dqn 7
environments um which
environments um which
are let me show
are let me show
you we have bindings for
them yeah I'll show you
them yeah I'll show you
so oops let me find a proper
term oh cool this actually this train us
term oh cool this actually this train us
nice
model so here are uh the default Atari M
model so here are uh the default Atari M
which are the ones that are used in the
which are the ones that are used in the
original dqn so you have your pick uh
original dqn so you have your pick uh
beam Rider
beam Rider
Enduro uh cubert sequest or space
Enduro uh cubert sequest or space
inviders pong and breakout are already
inviders pong and breakout are already
being done I'm trying to think which of
being done I'm trying to think which of
these would be hard versus
these would be hard versus
easy probably Space Invaders would be
easy probably Space Invaders would be
like relatively reasonable to
like relatively reasonable to
do I think I haven't played I really
do I think I haven't played I really
should play some more of these let me
see let's
see let's
see yeah that's what I'm looking for
see yeah that's what I'm looking for
for
you okay so this is this is cqu
you okay so this is this is cqu
apparently uh I'm not sure how I'm what
apparently uh I'm not sure how I'm what
I'm what the actions are supposed to be
here oh for some reason I can't press
here oh for some reason I can't press
just the down
just the down
key oh this okay so don't run into
those what are you supposed to do
let's
let's
see you die when you go to the surface
really oh you're supposed to pick up
really oh you're supposed to pick up
these passengers or
something I don't know if I have the
something I don't know if I have the
keybind set for this this one would
keybind set for this this one would
probably be slightly difficult to do
probably be slightly difficult to do
yeah there's stuff shooting projectiles
yeah there's stuff shooting projectiles
and stuff so maybe not this
and stuff so maybe not this
one let's
one let's
do test cubert any
good okay so this is the
cubert what
I'm confused how are you supposed to
I'm confused how are you supposed to
play this
thing games do not make sense to me I
thing games do not make sense to me I
think Space Invaders is the one that's
think Space Invaders is the one that's
easy that makes actual
sense this one should be
sense this one should be
good let me see is this
hard it's not too bad to do something
hard it's not too bad to do something
like this
right probably not as easy as like P A
right probably not as easy as like P A
breakout but not that bad
yeah looks
yeah looks
reasonable you don't have to so the
reasonable you don't have to so the
thing is you don't have to make the
thing is you don't have to make the
graphical version super fast either like
graphical version super fast either like
what you're going to end up doing is
what you're going to end up doing is
you're going to end up having like some
you're going to end up having like some
State based thing
did I get hit
oh they get closer is
why okay cool I mean it's reasonable
why okay cool I mean it's reasonable
enough
right probably somewhat harder than
right probably somewhat harder than
breakout not crazy though
let me see if I can win a level real
let me see if I can win a level real
quick just to make sure there's not like
quick just to make sure there's not like
something crazy that I'm forgetting like
something crazy that I'm forgetting like
is there like a spaceship or something
is there like a spaceship or something
that like comes to kill
you challenging though
ah they got
ah they got
me but I have some lives left
me but I have some lives left
maybe that
works I have a life left yes I
do yep okay I died I got
do yep okay I died I got
so yeah hard
so yeah hard
game is there application of ddpg method
game is there application of ddpg method
in here nope we just do so puffer is not
in here nope we just do so puffer is not
focused on algorithms at the moment
focused on algorithms at the moment
because so far my I've been in RL for
because so far my I've been in RL for
like seven plus years and there's been
like seven plus years and there's been
like no algorithmic progress over that
like no algorithmic progress over that
time frankly like so far just having
time frankly like so far just having
fast Sims and good data and getting the
fast Sims and good data and getting the
engineering right and hyper prams and
engineering right and hyper prams and
stuff has mattered so much
more so that's what we're focused on
more so that's what we're focused on
with puffer and the results speak for
with puffer and the results speak for
themselves
like let me show you something this is
like let me show you something this is
something that we have that nobody else
has uh where is
it so we have all these sweeps right
it so we have all these sweeps right
right all these hyper pram
right all these hyper pram
sweeps and if I just go find one of
sweeps and if I just go find one of
them I did all these GPU Drive sweeps
them I did all these GPU Drive sweeps
that are like clogging up my
that are like clogging up my
inventory here's beam rider for
inventory here's beam rider for
instance this one work no this one
instance this one work no this one
didn't work everyone else though I can
didn't work everyone else though I can
pick any other
pick any other
end come
on let's do like this
on let's do like this
one this one should be good this is the
one this one should be good this is the
Enduro
Enduro
one so look at this we just
one so look at this we just
automatically tune all the hyper prams
automatically tune all the hyper prams
in the environment with carbs and buuse
in the environment with carbs and buuse
Hyper pram algo and we kind of just
Hyper pram algo and we kind of just
solve everything just based on tuning
solve everything just based on tuning
alone so we get like Optimal uh optimal
alone so we get like Optimal uh optimal
policy for any amount of wall clock time
policy for any amount of wall clock time
invested in solving and we get over the
invested in solving and we get over the
course of training we get better and
course of training we get better and
better policies
better policies
so yeah this is stuff we're doing with
so yeah this is stuff we're doing with
puffer these
days go back to some
see so
I think I need to
do where's input
Dem
ah 11 time 11 I believe
28 output dim
28 output dim
[Music]
[Music]
is we'll see
so our default policy here
oh okay this is actually a
oh okay this is actually a
Char do you have a Discord or dedicated
Char do you have a Discord or dedicated
Community yep discord.gg
puffer got dedicated support and
puffer got dedicated support and
discussion and all of
that also if uh you have not already we
that also if uh you have not already we
are almost at 800 Stars let me
are almost at 800 Stars let me
see yeah 798 Stars so if anybody wants
see yeah 798 Stars so if anybody wants
us to help us hit 800 today feel free
us to help us hit 800 today feel free
helps me out a lot this is all free and
helps me out a lot this is all free and
open source I work on it full
open source I work on it full
time more than fulltime
time more than fulltime
really kind of all I
really kind of all I
do okay discret a
do okay discret a
four we have uh
four we have uh
one second I got to take care of one
one second I got to take care of one
thing I know what the data shape is
thing I know what the data shape is
though so we'll fix the Nets as soon as
though so we'll fix the Nets as soon as
I I got to take care of one thing real
quick e
okay let me let me just uh open one
okay let me let me just uh open one
thing here
text kind of juggling a million things
today okay so we now we know what this
today okay so we now we know what this
is now right
so the input dim is going to be 11 by
so the input dim is going to be 11 by
11 and uh the hidden dim is 128 output
11 and uh the hidden dim is 128 output
dim is
four 799 Stars awesome if anybody else
four 799 Stars awesome if anybody else
is watching and hasn't started we could
is watching and hasn't started we could
hit 800 right
now I'm going to just tweet it so we hit
now I'm going to just tweet it so we hit
it
so we hit 800 right now
I'm going to beat will will to
I'm going to beat will will to
slither.io stuff
all right hopefully that gets us 800
all right hopefully that gets us 800
today
so let me grab from the other
thing
thing
compute where compute
compute where compute
observations I get called oh no it gets
observations I get called oh no it gets
um M action
um M action
tensor that
forward where is
forward where is
this Step n
this Step n
oh observations to tensor
right yes so it's right here it's just m
observations so what we have to do is we
observations so what we have to do is we
have to
cast I'm I'm going to write this myself
cast I'm I'm going to write this myself
instead of using
instead of using
CLA
so what we're going to do is we're going
so what we're going to do is we're going
to allocate this up top
input dim
input dim
times not size of float because it's a
times not size of float because it's a
Char and then what we're going to have
Char and then what we're going to have
to do is
um float
um float
Star right here we should just fill
I less than batch
I less than batch
size times input
Dem h
800 heck
yeah that's
yeah that's
awesome thank you guys for the support
awesome thank you guys for the support
on
on
this we passed sample Factory this week
this we passed sample Factory this week
that's
crazy
crazy
wow we're going to keep up the dev I'm
wow we're going to keep up the dev I'm
going to keep up the dev I'm going to
going to keep up the dev I'm going to
see if I can even up the hours a little
see if I can even up the hours a little
bit cuz really like this is starting to
bit cuz really like this is starting to
take off we just need to get I want to
take off we just need to get I want to
get a couple of these demos so we get a
get a couple of these demos so we get a
like I think once I have a few of these
like I think once I have a few of these
demos online people will really see what
demos online people will really see what
we're doing here and then everything's
we're doing here and then everything's
just got to get polished up with the SIM
just got to get polished up with the SIM
update but yeah I'm not going anywhere
update but yeah I'm not going anywhere
we're going to fix we're going to fix
we're going to fix we're going to fix
this
this
field that's so
awesome thank you
best thing I can do is just keep coding
best thing I can do is just keep coding
here
um no this is the wrong syntax I'm
um no this is the wrong syntax I'm
thinking scon right it's float
right I think this is
it bti weits
and
output this is so stupid how that they
output this is so stupid how that they
did this
yeah this gets
yeah this gets
let's put these
let's put these
allocations
here what did we make the signature
input probably not going to need the
input probably not going to need the
print but we'll use it as a debug for
print but we'll use it as a debug for
now input hidden output weights
and then output
weights and then here this does not have
weights and then here this does not have
to be random this is actually going to
to be random this is actually going to
be M actions I
equals I think I need to cast right
unsigned int
like
this Malik invalid
size sample
output okay so it got here and then we
output okay so it got here and then we
got Malik
invalid
size how's that possible right
size how's that possible right
because MLP forward just gets called
because MLP forward just gets called
here and there's no Malik after
here and there's no Malik after
this invalid size unsorted
oh shoot
oh shoot
uh
yeah
put I wish I had like some at least
put I wish I had like some at least
super Maven or something to auto
super Maven or something to auto
complete for
I really would like to have the super
I really would like to have the super
Maven just work with these C files I
Maven just work with these C files I
don't know what's wrong with
it bothers me
well maybe I should just be coding Rossy
well maybe I should just be coding Rossy
for a couple days
anyways then output
anyways then output
dim
plus join my stream right now you're
plus join my stream right now you're
doing slither
right what's up
well we can do a CO stream thing at some
well we can do a CO stream thing at some
point as well let me see what are you up
point as well let me see what are you up
to I'm sure you've gotten Slither to do
to I'm sure you've gotten Slither to do
something right
H that's
funny I'm in the Stream what are you
doing okay open AI gem environment that
doing okay open AI gem environment that
connects you to real Slither servers all
connects you to real Slither servers all
right
cool you're GNA get so banned on this
cool you're GNA get so banned on this
Cloud flares cloud flar is Banning you
you're getting Cloud flare BL band for
this freaking Bing slither
so slow
yeah yeah you can do this this is
cool okay W's doing fun stuff as
cool okay W's doing fun stuff as
always we do things rather differently
always we do things rather differently
uh
okay all I wanted to do is fix this uh I
okay all I wanted to do is fix this uh I
I need to make this thing actually
I need to make this thing actually
sample action so what we're going to do
sample action so what we're going to do
is
is
if uh was
it output I greater
it output I greater
than
than
Max is a logit
Max is a logit
right logit
God I'm so used to
python uh Max logit equal output
I return action
I return action
equals uh
I
I
okay and then we just return
I'm so used to python that I still want
I'm so used to python that I still want
to put like the Extra Spaces even though
to put like the Extra Spaces even though
I have the bra the braces is that
silly like I don't know
unsigned
int return the
action what's do
here did I put a parentheses instead of
here did I put a parentheses instead of
a brace
somewhere
huh what did I
huh what did I
do into I zero
expected oh you're up
top okay well this does not freaking
work if I run it for
longer why did it work the first time I
longer why did it work the first time I
did it
well I'm going to just paste this into
well I'm going to just paste this into
CLA at least I wrote it myself um this
CLA at least I wrote it myself um this
portion
portion
myself so the getting back used to C
myself so the getting back used to C
again is in
again is in
progress I actually really if I have a
progress I actually really if I have a
couple debug tools for like a couple
couple debug tools for like a couple
debug tools I'd actually be very very
debug tools I'd actually be very very
happy with
happy with
this let me
see and I'm not even using super Maven
see and I'm not even using super Maven
or anything there
or anything there
so this can be substantially less
so this can be substantially less
painful or not this we want
painful or not this we want
clae um
check dimensions in
check dimensions in
code might be providing observations
code might be providing observations
with a different
size obervation
size Okay so so it does not really know
size Okay so so it does not really know
it's just saying it's giving me generic
it's just saying it's giving me generic
debugging
debugging
advice cool so I actually have to find
advice cool so I actually have to find
my own stuff which is
[Music]
[Music]
better it's breaking in the forward pass
better it's breaking in the forward pass
anyways we know right
oh isn't it just the print
statement output
dim no wait this is valid
I hate not having to I hate not having
I hate not having to I hate not having
um like multi-dimensional arrays is
um like multi-dimensional arrays is
there a reason to
there a reason to
do is there a reason to do everything
do is there a reason to do everything
flat versus in multi-dimensional arrays
flat array is
contiguous when using flat arrays do a
contiguous when using flat arrays do a
manual index
interesting how does this do
it it's always flat with here
it it's always flat with here
H I know I do not like the uh the flat
H I know I do not like the uh the flat
flat indexing for
flat indexing for
everything that's the one big complaint
everything that's the one big complaint
I mean we have the thing is we have
I mean we have the thing is we have
access to the exact same thing as I
access to the exact same thing as I
would want normally don't
we yeah we could just make this a
we yeah we could just make this a
two-dimensional array if we wanted to I
two-dimensional array if we wanted to I
have to do some looking into like
have to do some looking into like
whether that's actually a bad idea or
whether that's actually a bad idea or
not we'll leave it this way for now
so let's do what is this
Lo
out you can I forget you can do it in
out you can I forget you can do it in
Loops like
Loops like
this put I
this put I
times them
plus
plus
I that a thing no
I that a thing no
wait yeah this is it right this is the
wait yeah this is it right this is the
index thing
oh well this is wrong it's supposed to
oh well this is wrong it's supposed to
be 16 right
don't need
don't need
this
this
okay so this is now running but crazy
okay so this is now running but crazy
things are
things are
[Music]
[Music]
happening so let's comment out these
happening so let's comment out these
prints
oh I uh I just remembered a thing it's
oh I uh I just remembered a thing it's
okay I'll do it in a
okay I'll do it in a
second and where's the FPS for
second and where's the FPS for
this RB
client well maybe this just works
client well maybe this just works
okay so this is way too
fast I don't know why it's this fast
fast I don't know why it's this fast
something's weird
something's weird
right something's definitely
weird ah well this was not this is not
weird ah well this was not this is not
going to work
right yeah this is this action is
right yeah this is this action is
totally screwed up
totally screwed up
um don't star
output looat
star so what we'll do is
well what is this Loop that I just wrote
well what is this Loop that I just wrote
this doesn't make any freaking
this doesn't make any freaking
sense ye
I really miss having Vector
I really miss having Vector
Ops I have to think about
that let's do like
this batch
this batch
size it's I times output demm
size it's I times output demm
plus
J
J
J how's the Breakout game
J how's the Breakout game
going uh that is Noah is doing
breakout this is the snake thing that
breakout this is the snake thing that
I'm working on here
see 92
see 92
I always forget
I always forget
these unsigned
inar something's still weird
so first of
all all this should
go all this should go above here so you
go all this should go above here so you
can still play it
okay let's
okay let's
see so so some I see where I am on the
see so so some I see where I am on the
board I'm this red dot that's going
board I'm this red dot that's going
towards the blue one right now um it's
towards the blue one right now um it's
like
like
spamming all these little snakes all
spamming all these little snakes all
over though which is weird cuz like some
over though which is weird cuz like some
of them look like they're behaving
reasonably like a few of them
can clim check for
[Music]
[Music]
playing F
sanitize d
sanitize d
[Music]
g clang is kind of
chunky oh because it installs all the
chunky oh because it installs all the
C++ stuff but you can use it with C
C++ stuff but you can use it with C
that's fine
it's fine
ah so look at
ah so look at
this this is exactly what I
wanted this shows me that I'm going out
wanted this shows me that I'm going out
of
of
bounds so that is what is wrong
and shows me exactly where as
well batch size times input
well batch size times input
dim MH
this is a Char
star with
star with
height what two * * Vision + 1 2 *
height what two * * Vision + 1 2 *
Vision +
Vision +
one time numb
snakes what is being passed for vision
snakes what is being passed for vision
vision is being past is two this is
vision is being past is two this is
wrong it should be five
uh this is still being passed wrong
uh this is still being passed wrong
which is very weird
size is
1936 1936
1936 1936
bytes this looks totally fine to
bytes this looks totally fine to
me oops that would have been bad
I actually want to get out of this
okay 11 * 11 here batch size is num
okay 11 * 11 here batch size is num
snakes
snakes
observations batch size times input dim
right float M observations of I
okay print I
percent percent
percent percent
D like this instead
okay there it is so
okay there it is so
two
282 that's weird right how's it out of
282 that's weird right how's it out of
bounds here
already oh is is this two
dimensional
no it allocates here a Char
no it allocates here a Char
star num snakes time 2 * Vision Plus 1 2
star num snakes time 2 * Vision Plus 1 2
* Vision where do Vision come in it's in
* Vision where do Vision come in it's in
the init
the init
right unless it's not being passed
correctly for
allocating Vision vision is five total
allocating Vision vision is five total
bytes this is
bytes this is
good breakouts going well M trains M
good breakouts going well M trains M
while training runs at 300K nice working
while training runs at 300K nice working
on some smaller features that were in
on some smaller features that were in
the original Breakout game
the original Breakout game
perfect great
work it's exactly what we want
this says that I'm allocating
this says that I'm allocating
bytes but I am out of memory I'm out of
bytes but I am out of memory I'm out of
Bounds at
two how's that possible
m.
observations what's batch size batch
observations what's batch size batch
size is num
snakes 16
see about this
see about this
one let's see is it it's failing on 148
one let's see is it it's failing on 148
which is oh it's actually failing on the
which is oh it's actually failing on the
assignment that's even
weirder
wait time size of
float
float
dad me
dad me
stupid me so stupid
stupid me so stupid
stupid
man got to learn my
C it's still spamming a bunch of snakes
C it's still spamming a bunch of snakes
all over the place so we'll have to
all over the place so we'll have to
figure out what the heck is going on
figure out what the heck is going on
there we have a lot of snakes that are
there we have a lot of snakes that are
behaving reasonably though
food a few of these are like
well let's figure out why all of these
well let's figure out why all of these
like are flashing all over
H really not seeing
H really not seeing
anything you know what one thing I want
anything you know what one thing I want
to do is I want to take a screenshot and
to do is I want to take a screenshot and
count the actual number of snakes on any
count the actual number of snakes on any
one
frame how many snakes are
there one two 3 four five six 7
there one two 3 four five six 7
8 10 11 12 13 14 15 16 so there are 16
8 10 11 12 13 14 15 16 so there are 16
snakes uh they do appear to be dying
snakes uh they do appear to be dying
randomly in ways that should not happen
what if I give them a random action
instead okay if I give them a random
instead okay if I give them a random
action this does not
action this does not
happen so my guess is that I'm out of
happen so my guess is that I'm out of
bounding the I'm like out of bouncing
bounding the I'm like out of bouncing
the action
somehow unsigned into
somehow unsigned into
action is zero
output
dim and then actions of
dim and then actions of
I is equal
I is equal
to
to
action
action
print percent d
yeah
yeah
oh I
oh I
understand I just forgot to update a
understand I just forgot to update a
thing
boom okay so they're these are not doing
boom okay so they're these are not doing
anything at the
anything at the
moment they're not doing anything yet
moment they're not doing anything yet
let's see if we go get the actual uh
let's see if we go get the actual uh
policy that we do want to be loading
policy that we do want to be loading
because I think we're loading bad
because I think we're loading bad
weights at the moment
one
B so this is the model that we
B so this is the model that we
trained as we can see this is actually a
trained as we can see this is actually a
very reasonable looking model
this trains very quickly this is less
this trains very quickly this is less
than five minutes of training a very
than five minutes of training a very
basic policy it trains stupidly fast
basic policy it trains stupidly fast
nearly uh this is a quarter million 3/4
nearly uh this is a quarter million 3/4
of million steps per
of million steps per
second with like whatever random
second with like whatever random
settings I happen to
settings I happen to
have and then if I grab this model from
here and what we're going to do ISS
now we're going to curl this
model yeah
where's the script that we
where's the script that we
added I forgot what we named it save net
flat and let's
flat and let's
actually let's just print
okay we're going to have to do a little
okay we're going to have to do a little
bit of messing with this
so are these is not
transposed we're going to need to make
transposed we're going to need to make
some updates in order to make this work
some updates in order to make this work
cuz there's also a value net that we
cuz there's also a value net that we
have to
have to
ignore I will uh I'll be right back when
ignore I will uh I'll be right back when
use the restro and we'll finish figuring
use the restro and we'll finish figuring
out how to get this net loaded and as
out how to get this net loaded and as
soon as we have the weights loaded
soon as we have the weights loaded
correctly we will have this thing like
correctly we will have this thing like
Standalone runnable on anything which
Standalone runnable on anything which
will be awesome so I'll be right
back
e
e e
okay
okay
so let us take a look at what this
so let us take a look at what this
network looks like and if it's
network looks like and if it's
correct so it looks like it is a
four the tensors are like transposed or
four the tensors are like transposed or
something
right let me just put this back into CLA
right let me just put this back into CLA
real quick CU I don't know how the
real quick CU I don't know how the
shapes
okay some
okay some
C4 work
C4 work
code
uh can I not paste reasonably
there we
go e
okay we'll see about
okay we'll see about
that and in the meantime
okay so let's copy this because
get rid of
this
oops second first layer second
oops second first layer second
layer Max over outputs this is
fine and then this is the this is just
fine and then this is the this is just
the
the
transpose so I no no that was
transpose so I no no that was
Jank this already had a bias in it which
Jank this already had a bias in it which
is
good
good
good and then what we should be able to
good and then what we should be able to
do
do
is for Li environment sea
snake okay
okay build where is
it oh what happened here I
was something is happening differently
was something is happening differently
here right
still doesn't look
right so we have uh we have some options
right so we have uh we have some options
here we should be able to do
here we should be able to do
python snake mode
python snake mode
eval eval model path oops let me make
eval eval model path oops let me make
this this covered by
camera uh snake
camera uh snake
MLP render
MLP render
mode uh RB
it's render Dash mode
RB
okay isn't that nice this is so this is
okay isn't that nice this is so this is
what we are supposed to be able to
what we are supposed to be able to
get and we can see that we have very
get and we can see that we have very
reasonable models look how smooth that
reasonable models look how smooth that
is with the MLP as well cuz the model is
is with the MLP as well cuz the model is
so
so
tiny so this is what we're this is what
tiny so this is what we're this is what
we are aiming
we are aiming
for so we now we know the model is
good it just means we're loading or
good it just means we're loading or
using it wrong
so let me see about that
check the MLP
check the MLP
forward it
forward it
[Music]
does no it's not not
working okay
so I'm trying to think the best way to
so I'm trying to think the best way to
debug
debug
this we have the tensor shapes
right input dim should be 121
let me see what it even gave me
here
yes first layer
weights torch. size
weights torch. size
did it do it right let me
did it do it right let me
see 128
see 128
yeah first layer bias second layer
weights linear layer weights are stored
weights linear layer weights are stored
in transpose
in transpose
format yes that's what we that we
format yes that's what we that we
thought
right linear
right linear
layer
input wait input
weights see linear weights
weights see linear weights
bias okay so weights plus input dim
bias okay so weights plus input dim
times hidden
times hidden
size and this is a a float offset not a
size and this is a a float offset not a
bite offset so this is
bite offset so this is
correct and
then bias output float star output
hidden batch
hidden batch
size and put them hidden
them let me go deal with one thing real
quick e
okay
okay
man we're very close to having this
man we're very close to having this
thing
working maybe okay we give the hidden
working maybe okay we give the hidden
size the hidden tensor let me see where
size the hidden tensor let me see where
we
we
allocated hidden dim output dim input
allocated hidden dim output dim input
dim
right
and second layer
and second layer
okay the input is Now hidden
okay the input is Now hidden
right and
weights plus input
weights plus input
dim so yeah this is skipping the first
dim so yeah this is skipping the first
layer and the first layer
layer and the first layer
bias weights plus and then this is now
bias weights plus and then this is now
the bias which is getting ridiculous
the bias which is getting ridiculous
these
these
offsets really compute these better
so input
so input
dim plus hidden dim times output dim is
dim plus hidden dim times output dim is
this
correct should
be output batch size and then what's
be output batch size and then what's
this action selection do
this action selection do
I times output
I times output
dim wait
what well this is
wrong oh they do from Jay okay this is
wrong oh they do from Jay okay this is
actually this is clever fine
jeez I think I'm going to have to just
jeez I think I'm going to have to just
like figure out
like figure out
how how these things are stored
right well we're going to have to
right well we're going to have to
actually get pretty
okay
so let's see the
format okay so we
format okay so we
have tur
[Music]
okay so this is our
okay so this is our
tensor
right and we can see
right and we can see
here that we're
here that we're
doing the first row
the 128 by 121
right so if I do weight to 121 it should
right so if I do weight to 121 it should
be
yes so this is now storing
let me think about
this it's they're doing it this this way
this it's they're doing it this this way
because they do weight
because they do weight
Matrix they're doing like WX plus bias
Matrix they're doing like WX plus bias
right cu the input dim is
121 so let me see the code does this
121 so let me see the code does this
look right then
batch
size output
dim input
dim
dim
and it's going to be
just output them I hate when they
just output them I hate when they
do need to perceptually group stuff you
do need to perceptually group stuff you
can't just spaces between everything is
can't just spaces between everything is
really
gross biased times input
dim plus
I times output dim I don't know if this
I times output dim I don't know if this
dim is this is
correct this is hard to
tell this should just be a m Mall
if I can just figure this portion out
right input
of
of
B times input
B times input
demm yes
because the column is okay
because the column is okay
plus
I
yes
yes
times
weights I * output
D wait B times input
Dem and then we have I times output
Dem I think that this looks right to
Dem I think that this looks right to
me this looks right to me
me this looks right to me
does well first we should make sure that
does well first we should make sure that
we're actually matching the model
right there no re hold
on oh I don't think there's even a re
on oh I don't think there's even a re
yeah the default model is really
basic that would be funny if that's like
basic that would be funny if that's like
that was the
issue
issue
no it's doing something
no it's doing something
different but not good
it's weird because it's
like
H let me
H let me
see incode decode
I'm trying to think how we can figure
I'm trying to think how we can figure
this freaking
out we could technically multiply the
out we could technically multiply the
two matrices
together all right
is this
really I'm surprised that this network
really I'm surprised that this network
is so
good value head
the weights are different from before
the weights are different from before
aren't
they or am I just making that
up now I'm making that
up now I'm making that
up
yeah okay so it's e
okay so it doesn't need the
okay so it doesn't need the
transpose
cool corrected linear
cool corrected linear
[Music]
[Music]
layer a row major colum major
layer a row major colum major
shenanigans
nice why does this change oh I guess
nice why does this change oh I guess
this changes because this is also
this changes because this is also
assuming
assuming
um okay we'll just remember we have to
um okay we'll just remember we have to
comment the re
this still not
working input dim should be
121 for
we should be able to maybe let's like
we should be able to maybe let's like
open the file and see if we're reading
open the file and see if we're reading
stuff
correctly e
yeah so there are the weights that's
yeah so there are the weights that's
what we expect
right I think I just have to
we could also not be reading the OBS
we could also not be reading the OBS
data
in I would think that this would
work let's see the observation data
one
one
three okay 121 divided
by it should be 49 or something
no should be like 60 I
no should be like 60 I
think yeah so 60
think yeah so 60
and then
and then
59 zero okay so we are seeing the data
59 zero okay so we are seeing the data
in here the way I would expect it to
be data is in here the way I would
be data is in here the way I would
expect it to be and
input 128 by 121
the first output then needs to
the first output then needs to
be 121
it's output dim isn't
it I think this is output
dim it's not because we read out of
dim it's not because we read out of
bounds it seems
is there anything else I'm missing that
is there anything else I'm missing that
it would be or is it just going to be
it would be or is it just going to be
this implementation being wrong
I mean I
I mean I
have we're not going out of bounds
have we're not going out of bounds
anywhere I know that at
least plus equals
least plus equals
no so is set to zero
correctly it should be output
dim well why is this out of
bounds I'm running this with um
bounds I'm running this with um
clang and this gives us overflow if I do
clang and this gives us overflow if I do
that
that
so I have the dimension that I got right
so I have the dimension that I got right
here it's
here it's
128 by 121 so it's it's the hidden
128 by 121 so it's it's the hidden
Dimension comma input
Dimension comma input
dim so the first 121 floats are going to
dim so the first 121 floats are going to
be the
be the
first uh the first row
then the input
jeez I'm like I'm not even positive this
jeez I'm like I'm not even positive this
is where the error is I don't know where
is where the error is I don't know where
else it would be though I confirmed that
else it would be though I confirmed that
we're not using a relu so it's literally
we're not using a relu so it's literally
just a linear
just a linear
net so it should just be linear layer
net so it should just be linear layer
linear
linear
layer I mean unless this is screwed up
layer I mean unless this is screwed up
let me
let me
see input dim times hidden
dim yeah that's the size of the weight
dim yeah that's the size of the weight
tensor it's the input right times the
tensor it's the input right times the
hidden
hidden
dim so that's where the bias is going to
dim so that's where the bias is going to
be input dim times hidden dim plus
be input dim times hidden dim plus
hidden
dim yeah then this is weights plus input
dim yeah then this is weights plus input
dim times hidden dim plus hidden dim
dim times hidden dim plus hidden dim
hidden dim output
dim it's bizarre
I'm trying to think if there's anything
I'm trying to think if there's anything
else this could
be I should double check the weight D
be I should double check the weight D
type is is uh it should be float 32 I
type is is uh it should be float 32 I
mean it's it's got to be the weight D
mean it's it's got to be the weight D
type is float 32
right yeah float
32 I mean we also we check that the
32 I mean we also we check that the
weights are what we
weights are what we
expect so cuz I can
expect so cuz I can
do
GDB and I can
GDB and I can
do let's
do let's
see linear
layer so I can do break on line
12 okay
12 okay
oops and I have input
oops and I have input
zero is three I have weights
zero is three I have weights
zero is y that's what we expect it to
zero is y that's what we expect it to
be um
o b yeah so these are
zeros if input is m byn
that's not how
that's not how
torch wait I don't think that's how
torch wait I don't think that's how
torch does it though that I think it
torch does it though that I think it
does torch it looks like to me torch
does torch it looks like to me torch
does ax plus b like WX plus b not xw+
B so it should be
what's the dimension of
that yeah it should be weight should
that yeah it should be weight should
be P by n i
No I mean we can go try to write this
No I mean we can go try to write this
out
I don't
I don't
know let's not do it online let's just
know let's not do it online let's just
do it here
so so we have like
so so we have like
B the weight should be batch size
B the weight should be batch size
times
times
input
input
right and then
and then we have multiply
this and it's uh
input oh wait it's batch input and batch
input oh wait it's batch input and batch
times input isn't
times input isn't
it wait no the weights are not batch
it wait no the weights are not batch
size the weights
size the weights
are hidden by
input oh maybe the inputs need to be
input oh maybe the inputs need to be
transposed because the input should be
transposed because the input should be
batched
batched
batch times
batch times
input maybe that's the
issue usually I write it as
issue usually I write it as
wtx yeah but the thing is they don't
wtx yeah but the thing is they don't
they already have it in the format so
they already have it in the format so
it's just
it's just
WX I think
right why does it look like the input
right why does it look like the input
needs to be transposed
well because it does that's
why does this tell me something hold on
yeah I'm just getting confused
here batch times input plus I
is that not
right I mean what we could do as well is
right I mean what we could do as well is
here another thing we should probably do
here another thing we should probably do
is like can I just print out
plus
I
I oh not plus I uh input
dim input
dim input
or I don't need to add anything because
or I don't need to add anything because
that will just give
me like what dimensions are we looking
me like what dimensions are we looking
at
here holy
hell
GDB so break on
GDB so break on
line
[Music]
[Music]
run
okay oh we have to
okay oh we have to
do you have to do slash N I forgot to
do you have to do slash N I forgot to
clear it
why am I not seeing the prince
it's just slash in
right [ __ ] why not saying
Prince is this windows it's WSL
no if I try running code on Native
no if I try running code on Native
Windows please just shoot me
maybe I didn't let me see
oh yep dope
oh yep dope
dope
okay is this what we want
this is not what we want is it
isn't this output them
no
no
wait
wait
yeah this not
it
huh oh wait cuz B
I'm confused wait
what happens if I
just no this doesn't
work dude I
work dude I
hate this is like the exact type of
hate this is like the exact type of
thing I just [ __ ] can't think about
thing I just [ __ ] can't think about
is like this level of
like I understand systems not
symbols I guess I just have to keep
symbols I guess I just have to keep
debugging it like
this let me just look
up for
is this it
is this it
I just have the [ __ ] indexing wrong
I just have the [ __ ] indexing wrong
let me see what did it
change so it
did O times input
did O times input
dim okay that looks potentially
wait man this is still
not do I'm I'm am I going to have to
not do I'm I'm am I going to have to
like write a map m
test
seriously I * output plus
seriously I * output plus
o b * input plus I
I'm just going to give it the whole
I'm just going to give it the whole
[ __ ] code I don't
care this is why I didn't want to have
care this is why I didn't want to have
to do this it's just like pasting slot
to do this it's just like pasting slot
back and
forth is so
stupid e
size e
I don't know what's wrong with
this [ __ ]
I guess I literally have to write
I guess I literally have to write
a I have to write like a test right
I don't even know how I do that with
I don't even know how I do that with
this
I mean I really should right there's
I mean I really should right there's
like nothing else I can
do this has got to be something like
do this has got to be something like
putting the data in wrong maybe
then e
can I tell from the
behaviors wiggle
Behavior they don't look like they're
Behavior they don't look like they're
fully
random would the OBS be
transposed would that even make sense
turn
Iron Range batch
sizeing writing python
sizeing writing python
[Music]
here for
like the reason I'm even thinking about
like the reason I'm even thinking about
this is because like they're doing this
this is because like they're doing this
wobbly
wobbly
thing they're doing like this wobbly
thing they're doing like this wobbly
thing which is
what am
I an
I man the the python run to
deepal zero
okay I'm not used to typing these
okay I'm not used to typing these
freaking symbols even
okay now they just like freaking go left
okay now they just like freaking go left
or right
straight which is weird
which one is I'm not controlling any of
which one is I'm not controlling any of
them am
I I should be able to be controlling one
I I should be able to be controlling one
of these what the hell's wrong
oh this is weird
yeah so now I'm actually controlling it
no so this doesn't
work
work
okay what if I just
like is there is there something that's
like is there is there something that's
just wrong with the observations here
just wrong with the observations here
right what I'm trying to figure out
does it respond to
anything that's so weird
I mean I'm I sure that this is the right
I mean I'm I sure that this is the right
policy in the first
place hang
place hang
on I want to just make absolutely sure
snake MLP flat snake
should give me invalid path
should give me invalid path
right yep
the snakes are good
no this is exactly the same
I'm just like
I'm just like
not seeing what I can even do
here is it just God awful to
debug
for
for e
could there be a difference in the way
could there be a difference in the way
the game is
the game is
implemented no because I loaded the P
implemented no because I loaded the P
torch nut before and it worked right
exact same
thing it's got to be somewhere in this
MLP context
MLP context
please I uh I have a trained P torch
please I uh I have a trained P torch
model that I've dumped all the weights
model that I've dumped all the weights
out of and I'm trying to just like it's
out of and I'm trying to just like it's
a really simple model it's just like an
a really simple model it's just like an
MLP and I have C codee for it and I'm
MLP and I have C codee for it and I'm
trying to get it to replicate the
trying to get it to replicate the
behavior in this environment so that I
behavior in this environment so that I
can just compile this whole thing into
can just compile this whole thing into
web assembly and put it
web assembly and put it
online and it's very annoying
online and it's very annoying
because like how the heck do you debug
because like how the heck do you debug
something like this
something like this
right I guess I really do just have to
right I guess I really do just have to
make a test case though like there's no
make a test case though like there's no
other way even though it's going to be a
other way even though it's going to be a
pain
pain
um I don't know in test
P
void signature
so float
so float
input
input
Malik now we need to get the input size
right here we can do observations like
this and then we will simply
do or
int z i less
than
than
input
input
di Plus
obervations we just make a little test
obervations we just make a little test
pattern here
right and
right and
then we
then we
[Music]
[Music]
do uh we call the MLP forward right
vations
vations
hidden
output size input
dim okay
then what is
then what is
this batch
size um
some plus
some plus
equal actions
I print
I print
F act
F act
some
DN
DN
some okay that's a little test for
some okay that's a little test for
this right and I just have to call
this right and I just have to call
it right
we call it
here all the same
signature minus observations cuz those
signature minus observations cuz those
are uh we actually can put this up here
are uh we actually can put this up here
right
what did I
do
do
expected nine
expected nine
args hidden output act out wait OBS
args hidden output act out wait OBS
hidden output actions weights
hidden output actions weights
we got arar
fine okay action sum is
fine okay action sum is
four and now we can make a python side
four and now we can make a python side
test for this so which
is test
model
two e
oh wait I
did what test data did I use
here yeah do you have this on GitHub
here yeah do you have this on GitHub
yeah all my stuff is on
yeah all my stuff is on
GitHub um this is like a port of the
GitHub um this is like a port of the
snake M that is already in scon we're
snake M that is already in scon we're
just trying to get it on web so if
just trying to get it on web so if
you're looking for my stuff it's all in
you're looking for my stuff it's all in
puffer AI puffer lib we actually we just
puffer AI puffer lib we actually we just
hit 800 here which is
hit 800 here which is
awesome um all open source here most of
awesome um all open source here most of
it the new stuff is in the dev Branch
it the new stuff is in the dev Branch
start on the way and if you wouldn't
start on the way and if you wouldn't
mind helps me out a
ton this is
ton this is
all full-time Dev on fixing
all full-time Dev on fixing
reinforcement learning
reinforcement learning
at the moment this is just a fun
at the moment this is just a fun
demo I'm hoping that I can solve this
demo I'm hoping that I can solve this
relatively soon but this has proven
relatively soon but this has proven
harder than
expected okay
and going to your GitHub in the
and going to your GitHub in the
meanwhile yeah thank you this is
meanwhile yeah thank you this is
um this is a new thing most of my work I
um this is a new thing most of my work I
do have some lower level stuff but like
do have some lower level stuff but like
it's in scon it's pretty one to one with
it's in scon it's pretty one to one with
the c but I'm not used I have haven't
the c but I'm not used I have haven't
written in C proper in like 10 years so
written in C proper in like 10 years so
um what we're trying to do here is if I
um what we're trying to do here is if I
can just make like a 400 line file that
can just make like a 400 line file that
has the whole environment implementation
has the whole environment implementation
the renderer and the neuronet forward
the renderer and the neuronet forward
pass I can compile the whole thing to
pass I can compile the whole thing to
web assembly and just put it on web and
web assembly and just put it on web and
then you can have like play Snake online
then you can have like play Snake online
versus 1,000 reinforcement learned AI
versus 1,000 reinforcement learned AI
opponents
right we are literally like one bug fix
right we are literally like one bug fix
away from that existing
got long and Float
okay well we know it's encoder decoder
okay well we know it's encoder decoder
value
head so
uh policy
dot Okay so now we have we have
dot Okay so now we have we have
something at least
um let's
do
do
you
16 okay so now we have something to go
16 okay so now we have something to go
off of at least let me go use the
off of at least let me go use the
restroom real quick again and then
restroom real quick again and then
we're going to see whether I just have
we're going to see whether I just have
the test wrong or whether the test is
the test wrong or whether the test is
actually useful and whether there is a
actually useful and whether there is a
discrepancy between the implementation
discrepancy between the implementation
of these two models that's what we're
of these two models that's what we're
going to just have to hammer on until we
going to just have to hammer on until we
get this right um the good news is it
get this right um the good news is it
will be pretty darn easy we'll at least
will be pretty darn easy we'll at least
be able to do arbitrary MLPs trivially
be able to do arbitrary MLPs trivially
when this is done obviously we'll have
when this is done obviously we'll have
the whole nightmare of like lstm and
the whole nightmare of like lstm and
Comm and all that stuff uh afterwards if
Comm and all that stuff uh afterwards if
we want to do full models without using
we want to do full models without using
a framework but yeah this will at least
a framework but yeah this will at least
get us somewhere so I'll be right
back
e e
all right
so let's
see we're going to modify this a little
see we're going to modify this a little
bit
here okay so now we have all these layer
here okay so now we have all these layer
sums right
perfect
perfect
and now we're going to do the exact same
and now we're going to do the exact same
thing here because the way that we have
thing here because the way that we have
this constructed we should be able to do
this constructed we should be able to do
this right
this right
so I really would like super Maven to be
so I really would like super Maven to be
working with this thing because like the
working with this thing because like the
unfamiliar syntax is so clunky for me to
unfamiliar syntax is so clunky for me to
be typing I don't know why it isn't
but fine in the
meantime
meantime
um
um
um zero
um zero
or Zer I less than size what
or Zer I less than size what
dim plus whatever we'll get used to this
dim plus whatever we'll get used to this
in text by typing it right
in text by typing it right
here ration sum
here ration sum
plus
plus
equals
observations
I uh hidden
I uh hidden
some
some
[Music]
[Music]
zero
zero
zero hidden was it hidden dim batch size
zero hidden was it hidden dim batch size
times hidden dim
plus obervation sum plus
plus obervation sum plus
equal
equal
oh hidden sum plus equal hidden
I zero
batch size times output
dim okay we just treat them as plat flat
dim okay we just treat them as plat flat
buffers and sum them like this right and
buffers and sum them like this right and
then we do
print Iration whoops
D deration
D deration
sum print F and I missed a semicolon up
sum print F and I missed a semicolon up
there whoops
semicolon uh hidden
sum and
D sum
and I already have that one
and I already have that one
I also forgot all the slash NS on
I also forgot all the slash NS on
these
these
n
n
and
okay nice
so why did we do all this
so why did we do all this
well we can see here that the
well we can see here that the
observation
observation
sum matches
sum matches
here uh the hidden sum does not match
here uh the hidden sum does not match
it's very
it's very
close but it doesn't match and the
close but it doesn't match and the
output sum does not match either so it
output sum does not match either so it
does appear to me that we have an
does appear to me that we have an
incorrect
incorrect
implementation somehow
oh but wait hold on
go
go
Microsoft got to just delete Windows at
Microsoft got to just delete Windows at
some point I don't know why it does like
some point I don't know why it does like
all these freaking things like hide my
all these freaking things like hide my
whole desktop on me thank you very much
whole desktop on me thank you very much
exactly what I wanted
okay where did all my stuff
go oops today is a nurs rebuttal
go oops today is a nurs rebuttal
deadline for a thing
okay where' all my stuff
okay where' all my stuff
go right
go right
here okay
so this should be float
this one is unsigned
this one is unsigned
in the rest of them are
float let's see if that fixes
it format specifies oh is it percent
F
F
okay now what do we get 6 six
okay now what do we get 6 six
okay it's
close but not there yet so let's figure
close but not there yet so let's figure
out
why so the data going in should be the
why so the data going in should be the
same oh let's do some of uh weights just
same oh let's do some of uh weights just
to be
to be
sure let's just do weight some
into I equals z i less than this one's
into I equals z i less than this one's
hard
um it should be equal to
um it should be equal to
to uh
to uh
input dim time hidden dim plus hidden
input dim time hidden dim plus hidden
dim plus hidden dim time output dim plus
dim plus hidden dim time output dim plus
output
output
dim which is weight Matrix bias weight
dim which is weight Matrix bias weight
Matrix
bias okay weit sum
okay weight sum 475 let's see if we do
okay weight sum 475 let's see if we do
our own weight
sum e
2191 is that a significant difference
wait
wait
21 nine that's a pretty substantial
21 nine that's a pretty substantial
difference
shouldn't it be
identical if they're both float 32
let me see something
[Music]
[Music]
and is that worth tracking
down I'm trying to think what would
down I'm trying to think what would
cause that
difference wait encode
is there anything reasonable that would
is there anything reasonable that would
cause a difference of that
cause a difference of that
magnitude it's like small but maybe
magnitude it's like small but maybe
substantial
okay so this
is 432
2853 there a tiny difference
2853 there a tiny difference
I don't know if it's going to matter
I don't know if it's going to matter
let's let's look for the rest of the
let's let's look for the rest of the
stuff first um and we'll see we'll see
stuff first um and we'll see we'll see
if it makes a
if it makes a
difference so observation sum is the
difference so observation sum is the
same which is
same which is
good um and then there is
good um and then there is
a the hidden sum is quite substantially
a the hidden sum is quite substantially
different right 663
668 and then the output is completely
668 and then the output is completely
different
okay
didn't mean to do
that okay so here's the hidden
and what we're going to do is if
and what we're going to do is if
I I less than
I I less than
10 print
app hidden percent D perc
app hidden percent D perc
F uh
F uh
I hidden
I hidden
I right
86 what did I
do oh I forgot
up okay so
up okay so
hidden we see that these are completely
hidden we see that these are completely
off
322 completely off
and if I put a break point here I should
and if I put a break point here I should
be able to see
CER
wait
okay and Let's
okay and Let's
do let's set a break point here I
do let's set a break point here I
think
GDB oops so we do
GDB oops so we do
break 10
oh no I went too
far
far
one okay so we
take
take
input we have b
input we have b
i right and then we
i right and then we
have input zero
oops can't do
comma weights
comma weights
zero okay
so input zero is
so input zero is
zero so this gives us the correct first
zero so this gives us the correct first
component right which is zero
then we do
then we do
continue and then we
take is
one
one
outut which is
128 uh
yes I think that's correct so what we do
yes I think that's correct so what we do
then is we
do input a zero or input a one and then
do input a zero or input a one and then
we
take go away
take go away
Adobe God who even came up with that
Adobe God who even came up with that
idea of freaking popups
this does not look like the correct
weight it should be this one
weight it should be this one
here and
then oh wait
okay input is
okay input is
correct and then what about the
weights this one is good this one is
not it should be weights of one here
how does this make sense
16 by 121
16 by 121
right so batch
right so batch
times input
times input
dim group these so I can
read so batch times input
read so batch times input
dim plus I
yes because you go over the input
yes because you go over the input
repeatedly
right and then you multiply
ah [ __ ] I I closed the wrong window
what happens if I do
what happens if I do
this out of memory God damn
it well this is actually these two
it well this is actually these two
weights
weights
here where is it no
okay here we go with
this the most freaking debugging I've
this the most freaking debugging I've
had to do in a long
time but we have to like Trace through
time but we have to like Trace through
exactly each of these Matrix
Cals freaking line by line of C
okay we have the break
point Su is
zero weights of zero 339 yeah this is
zero weights of zero 339 yeah this is
the same
weight and now
put di plus I
put di plus I
is oops we got to do
is oops we got to do
[Music]
[Music]
continue okay this is
continue okay this is
one M plus
I is one
I is one
so weights of one
so weights of one
here four five so this is
here four five so this is
good this is actually correct it looks
like so break
clear
112 now we're at
112 now we're at
14 and we get the sum
then this is what we want here because
then this is what we want here because
this gives us the first
this gives us the first
weights
sum wait
sum wait
model X of zero
and this matches
perfectly so for the
perfectly so for the
first the first output this matches
first the first output this matches
perfectly and then what we do is this is
perfectly and then what we do is this is
going to be the second
going to be the second
output and we hit
continue and now what's wrong
again B is
zero o is one
right output di is 128
I think this is input dim not output
dim we're going to see if I'm right
freaking okay that's the first correct
freaking okay that's the first correct
value
right that is the second correct value
so now what we need to do is
print
O Let's print the sum
here the sum does not match
oh
wait how's that work
though because the output dim is 128
though because the output dim is 128
right so this is
fine six
oh okay now we have
oh okay now we have
o now we're on the second
example and it matches
okay so the policy is not helping us
okay so the policy is not helping us
here let's see what
are outputs were from
are outputs were from
before we have the sums up here
somewhere hidden sum
684 361 364 it's almost identical
684 361 364 it's almost identical
there's a little bit of drift that we're
there's a little bit of drift that we're
going to have to find but it's almost
going to have to find but it's almost
identical you see the
identical you see the
hidden the output
sum the output sum is also correct and
sum the output sum is also correct and
the action sum is now correct as
the action sum is now correct as
well so
now these functions should
match but when I look
match but when I look
at
snakes it looks to me like the output is
snakes it looks to me like the output is
backwards right
look at this see it's going
backwards look you see how it like it
backwards look you see how it like it
goes away from the
interesting let's take a
interesting let's take a
look so the test case is now
fine let's try this flip
again let's try this flip e
nope it now this just randomizes it
right yeah so this is them just running
right yeah so this is them just running
into
into
walls as far as I can tell which is
walls as far as I can tell which is
not not the expected Behavior at all
right so this was we were on the right
right so this was we were on the right
track before I think
thinkz at least we got these to match so
thinkz at least we got these to match so
far which is the main
far which is the main
thing I took some
debugging Claud was wrong by the
debugging Claud was wrong by the
way Claud was wrong
okay here's what I'm going to do right
okay here's what I'm going to do right
now I just had somebody ask me to review
now I just had somebody ask me to review
rebuttal uh a draft of rebuttal for NPS
rebuttal uh a draft of rebuttal for NPS
so I'm going to go grab a quick
so I'm going to go grab a quick
Shake because I haven't
Shake because I haven't
eaten I'm going to take a quick look
eaten I'm going to take a quick look
through those rebuttal and then I think
through those rebuttal and then I think
we're very very close to having this
we're very very close to having this
working so the goal will be to finish
working so the goal will be to finish
this today so that we can get on to all
this today so that we can get on to all
the other stuff we've got to do but I
the other stuff we've got to do but I
want this shipped
today all right I'll be
today all right I'll be
back
man
e
e
e
e
e
e
e
e
e
e e
got to take a quick pass on um this
got to take a quick pass on um this
rebuttal on my side monitor real
quick not
public
e
e
e
e
e e
I got to check the deadline on these
actually e
I'm just
I'm just
today
okay let me just read a thing real quick
okay let me just read a thing real quick
then and I'll be able to keep going but
then and I'll be able to keep going but
I'm going to have to end early so I can
I'm going to have to end early so I can
finish something with this
today
e
e e
me b
ofly e
okay cool um back to this for a little
okay cool um back to this for a little
bit at least I want to get this working
bit at least I want to get this working
and check a couple other things before I
and check a couple other things before I
have to go do rebuttals um more
have to go do rebuttals um more
substantially so
let me see how I feel let me check a few
let me see how I feel let me check a few
things here
so e
let me see where they do compute oops I
let me see where they do compute oops I
just saw
it
it
okay let's get back into this
okay let's get back into this
so right here
plus
plus
r plus C
right does this get called for us in
right does this get called for us in
computer observations it does right it
computer observations it does right it
gets called at the end of step for
us it looks like something is
us it looks like something is
flipped it really looks like the data is
flipped it really looks like the data is
just flipped
right is there a way that that would
right is there a way that that would
happen
really shouldn't
be we know that it matches
how did I load this
data observations to tensor
[Music]
we know that the MLP
matches the action selection matches
do we want to try messing with the data
do we want to try messing with the data
a little bit just to make
sure divide
by I don't even know what do we divide
by I don't even know what do we divide
by
thousand
thousand
by
bloat okay
we need to run the
test okay action sum is now 20
test okay action sum is now 20
action sum is 20 so we have the
same
yeah we have things matching
now oh that's what I'm missing
what what am I missing here
what what am I missing here
if the P torch Network that I
if the P torch Network that I
loaded works
loaded works
correctly so that means that the
correctly so that means that the
observation should be being computed
observation should be being computed
correctly
right this thing here
matches the P torch
implementation let me look for anything
stupid it's possible we have something
stupid it's possible we have something
stupid in
here actions of I equals
action hold on Max
logit I times output dim
is this action well wait the action
is this action well wait the action
selection I shouldn't even be
selection I shouldn't even be
questioning the action selection because
questioning the action selection because
the actions output are the
the actions output are the
same
right let me double check something
right let me double check something
[Music]
that was weird
I'm trying to think like what even the
I'm trying to think like what even the
error surface is here if everything
matches we do MLP
forward we
forward we
load observations here
right step and
batch times input
batch times input
dim observations of
I why
why would this one not
match I don't see anywhere else where I
match I don't see anywhere else where I
could have an
could have an
error but in the loading of the input
data
um but compared to
um but compared to
this is this the C++ version with the
this is this the C++ version with the
torch API which I can't use because it
torch API which I can't use because it
doesn't compile the WM at the
doesn't compile the WM at the
moment love to just use this and be
done this version
here I *
121 technically the memory layout could
121 technically the memory layout could
be like different or something
right but it like even if it were
right but it like even if it were
transposed right that still wouldn't
transposed right that still wouldn't
account
account
for the difference I'm currently seeing
for the difference I'm currently seeing
and
like if it were transposed I wouldn't be
like if it were transposed I wouldn't be
getting the same output right these
getting the same output right these
tests should cast should uh should catch
tests should cast should uh should catch
that I would
that I would
think because I'm loading the data in
think because I'm loading the data in
the same
the same
way yeah I'm loading the data in the
way yeah I'm loading the data in the
same
way that is
way that is
bizarre and like it's not like
it's kind of weird how these guys work
it's kind of weird how these guys work
as well like look if I put it right next
as well like look if I put it right next
to a if I put it right next to is it
to a if I put it right next to is it
following me what the heck if I put it
following me what the heck if I put it
like next to a a
food if I put it in the open it will
food if I put it in the open it will
like just go in One Direction which is
like just go in One Direction which is
fine but then if I put it next to a food
fine but then if I put it next to a food
it won't go
it won't go
it won't go directly next to the
it won't go directly next to the
food kind of weird
right like it looks like it has the
right like it looks like it has the
board flipped or something in its
board flipped or something in its
head on the network me I
mean and see there it just it fell on
mean and see there it just it fell on
itself
like it's definitely making its
like it's definitely making its
decisions based on the
decisions based on the
data but they're like backwards or
data but they're like backwards or
something
weird is the action map the same it
weird is the action map the same it
would have to be
would have to be
right the action map would have to be
right the action map would have to be
the same for the C++ model to have
the same for the C++ model to have
worked
maybe the C++ model didn't work
maybe the C++ model didn't work
perfectly though I don't even know if
perfectly though I don't even know if
that's worth
checking ah
be the
be the
bias I didn't test the
bias bias of
bias bias of
output it's how it works though isn't
output it's how it works though isn't
it and well the actions are the same so
it and well the actions are the same so
it doesn't
it doesn't
matter it definitely is correct okay so
matter it definitely is correct okay so
if I'm assuming this is correct I'm
if I'm assuming this is correct I'm
assuming the whole computation of
assuming the whole computation of
actions is correct
right the thing is that really doesn't
right the thing is that really doesn't
leave much space for stuff to be wrong
leave much space for stuff to be wrong
and it still
is cell size
is cell size
10 doesn't
10 doesn't
matter observations of eye
actions is correctly and unsigned in in
Star man this is literally one bug away
there's nothing else I'm there's got to
there's nothing else I'm there's got to
be something else it could be unless I'm
be something else it could be unless I'm
just been staring at this and I'm not
just been staring at this and I'm not
seeing the issue here
like a transpose wouldn't account for
like a transpose wouldn't account for
this would it
let me just just for the sake of it
like we'll just
like we'll just
oops let's just
um JK
do
do
i
i
k
j
j
no so this
no so this
thing if you like transpose the OBS it
thing if you like transpose the OBS it
completely just
breaks it like just
ignores so that totally messes up the
policy it's not something with the way
policy it's not something with the way
the actions are getting sent right
like this or
whatever where is
it hold on keep hearing something
just an issue with one of the windows no
just an issue with one of the windows no
big
big
deal window like I don't know it's windy
deal window like I don't know it's windy
we're good so the only other thing I can
we're good so the only other thing I can
basically think of is that is like the
basically think of is that is like the
action map is wrong and I have to do
action map is wrong and I have to do
something ridiculous like
this but this doesn't make sense at all
right it's funny that that actually like
right it's funny that that actually like
does something
does something
though is there like an action map that
though is there like an action map that
I'm I have wrong here hold on maybe it
I'm I have wrong here hold on maybe it
is worth checking this
so
up
up
down
down
left right now these are all reasonable
left right now these are all reasonable
as well
as well
I mean it makes sense that it would
be is there some other part of the
be is there some other part of the
network that I'm forgetting
about CU this matches the reference
like the default model should not be
like the default model should not be
that complicated right it's
just encode and
just encode and
decode you batch size negative
decode you batch size negative
[Music]
[Music]
1 oh there is a
1 oh there is a
re ah there is a re I missed it I missed
re ah there is a re I missed it I missed
the freaking re
and I didn't catch it wait how didn't I
and I didn't catch it wait how didn't I
catch
it wait is that actually a thing wait
it wait is that actually a thing wait
did
I oh because I tested it without the
I oh because I tested it without the
fell ah
fell ah
okay okay we found it we found it guys
okay okay we found it we found it guys
we found it [ __ ]
we found it [ __ ]
we found
it
God ladies and
God ladies and
gentlemen I
gentlemen I
present pure SE
snake reinforcement learn
policies environment is in C rendering
policies environment is in C rendering
is in C
is in C
directly supports web assembly as
well we've got
it isn't that something
you know the funny thing about this is
you know the funny thing about this is
it's not just one
it's not just one
game
game
um we can very
um we can very
easily say we do cell size
five let's do 64
snakes e
I don't even know how fast our our
I don't even know how fast our our
implementation is like can we make this
implementation is like can we make this
B can we make this bigger
that's pretty
cool for
man
well it is 3:41 um we're definitely
well it is 3:41 um we're definitely
there's going to be a little bit more on
there's going to be a little bit more on
this at some point I might even just do
this at some point I might even just do
this tomorrow all day because this is
this tomorrow all day because this is
sweet will
sweet will
say I'm trying to think what I want to
say I'm trying to think what I want to
do right
now I mean okay
so we should probably figure out a few
so we should probably figure out a few
things with this
right debugging that just like wiped me
right debugging that just like wiped me
out though holy hell
there was so much that we had to do to
there was so much that we had to do to
find all that
find all that
stuff that's the deepest I've had to go
stuff that's the deepest I've had to go
on debugging in a long time I mean
on debugging in a long time I mean
operation by operation in two different
operation by operation in two different
languages matrix multiplication
H
H
okay
okay
so I guess it depends
on it depends on how we want to present
on it depends on how we want to present
this
I almost want to like change gears and
I almost want to like change gears and
do something else for a bit like holy
do something else for a bit like holy
hell let me just talk through real quick
hell let me just talk through real quick
some of the stuff that has to be done um
some of the stuff that has to be done um
in the relatively near future right we
in the relatively near future right we
need more hyper pram sweeps on the
need more hyper pram sweeps on the
ataram we need like all those baselines
ataram we need like all those baselines
to be nice and solid they're pretty good
to be nice and solid they're pretty good
now but they need a little bit more
now but they need a little bit more
work um we have all sorts of stuff to do
work um we have all sorts of stuff to do
on the mooba that we've had on the back
on the mooba that we've had on the back
burner for like a week because 50k and
burner for like a week because 50k and
then this um and then there's some stuff
then this um and then there's some stuff
for GPU Drive I think realistically the
for GPU Drive I think realistically the
easiest thing for me to do right now
easiest thing for me to do right now
just for a little bit would be to figure
just for a little bit would be to figure
out how to fix the how to fix the thing
out how to fix the how to fix the thing
with GPU
with GPU
Drive
Drive
potentially I really should do
that let me see if I can
that let me see if I can
whoops well but I have people here
whoops well but I have people here
watching for C
watching for C
so I'm assuming that it yeah people want
so I'm assuming that it yeah people want
to do some C
to do some C
stuff is that a new message do you know
stuff is that a new message do you know
what the best universities labs for
what the best universities labs for
reinforcement learning are I don't know
reinforcement learning are I don't know
if this is just now or if I missed this
if this is just now or if I missed this
from before um there's not all that much
from before um there's not all that much
going on for RL frankly at the moment
going on for RL frankly at the moment
it's like a lot of Robotics at the
it's like a lot of Robotics at the
moment not too many places are doing
moment not too many places are doing
like games plus RL it's kind of all over
like games plus RL it's kind of all over
the place really um I guess for games
the place really um I guess for games
like there's a bunch of game stuff and
like there's a bunch of game stuff and
RL stuff at
RL stuff at
NYU
NYU
but like more so there's been lots of
but like more so there's been lots of
language model stuff lately it'll be
language model stuff lately it'll be
back though and here's why it's going to
back though and here's why it's going to
here's why RL is going to be back um
here's why RL is going to be back um
language model research is freaking
language model research is freaking
expensive and it's going to be it's
expensive and it's going to be it's
getting to be and it's already way
getting to be and it's already way
outside the budget of academic
outside the budget of academic
Labs as soon as reinforcement learning
Labs as soon as reinforcement learning
is like sane you're going to have tons
is like sane you're going to have tons
and tons of labs want to do cool
and tons of labs want to do cool
reinforcement learning stuff um and
reinforcement learning stuff um and
puffer is going to make that happen and
puffer is going to make that happen and
it's going to make it happen very
it's going to make it happen very
soon okay let's let's let's actually
soon okay let's let's let's actually
just keep going on the C stuff for a bit
just keep going on the C stuff for a bit
yeah I'm so sick of LMS everywhere I
yeah I'm so sick of LMS everywhere I
mean look you can take 75% of the
mean look you can take 75% of the
resources for llms right like yeah
resources for llms right like yeah
they're good like I just wish that it
they're good like I just wish that it
weren't
weren't
99%
99%
because there's a pretty darn good
because there's a pretty darn good
chance llms don't just solve everything
chance llms don't just solve everything
actually and r probably the most
actually and r probably the most
promising second candidate
here and simulation in general is
here and simulation in general is
definitely a very promising candidate
definitely a very promising candidate
okay so I probably should Implement a
okay so I probably should Implement a
couple different render things with this
couple different render things with this
and I should do a little bit of figuring
and I should do a little bit of figuring
about how I want the how I want to
about how I want the how I want to
present the environment here for
present the environment here for
everything um
yeah it's just rough because I like just
yeah it's just rough because I like just
burnt so
burnt so
much with that
debugging I just pushed the uh the C
debugging I just pushed the uh the C
code it's not cleaned up yet but if you
code it's not cleaned up yet but if you
want to get the C code for this thing
want to get the C code for this thing
obviously I'm going to be putting it on
obviously I'm going to be putting it on
my on the puffer website um but it's in
my on the puffer website um but it's in
the dev branch of puffer Li start it on
the dev branch of puffer Li start it on
your way in helps me out a whole
t Okay um I think then we should we
t Okay um I think then we should we
should make a slightly better client for
should make a slightly better client for
this thing I'm assuming this can't run
this thing I'm assuming this can't run
full scale
full scale
right I actually haven't tested it
can I just do what what like what are
can I just do what what like what are
one of the configurations that I
have so
the 720p one
the 720p one
with with 1024 snakes is pretty good I
with with 1024 snakes is pretty good I
would say let's see if we can make that
would say let's see if we can make that
one
one
run so this
run so this
is
1280 720
Max snake
Max snake
length I don't know
500,000 1024
snakes cell size should be one
it's moving very
slowly yeah very very
slowly yeah very very
slowly so assumedly our our
slowly so assumedly our our
implementation would need to be
implementation would need to be
stantially faster in order to render
stantially faster in order to render
like the full scale thing or to do the
like the full scale thing or to do the
full scale
full scale
thing let me just make sure it's not the
thing let me just make sure it's not the
rendering I wouldn't think it would be
rendering I wouldn't think it would be
but
like oh actually that's substantially
like oh actually that's substantially
faster so it kind of is the rendering
faster so it kind of is the rendering
huh
this actually
runs so I guess if we just find uh if we
runs so I guess if we just find uh if we
just do the other RB render
just do the other RB render
representation we should be
good here this is cool to watch
running real time on one CPU
core I think this is about 500 lines now
core I think this is about 500 lines now
now maybe 550 lines of
now maybe 550 lines of
C so we can cut this down a
bit let's downscale the demo a bit and
bit let's downscale the demo a bit and
then uh we'll figure
out we'll figure out what we want to do
out we'll figure out what we want to do
with it from
with it from
here couple different client modes
Maybe for
oh yeah that's with all the test and
oh yeah that's with all the test and
stuff as
well
okay I actually don't know if I've got
okay I actually don't know if I've got
Mory in me
Mory in me
today um
and I do have this GPU Drive M which is
and I do have this GPU Drive M which is
also really cool that needs some
also really cool that needs some
fixing let me just go look and see if I
fixing let me just go look and see if I
have like a concrete message on what to
have like a concrete message on what to
do
there I'll check the slack for that to
there I'll check the slack for that to
see if somebody's told me
wrong tab
oh hold on
okay I didn't miss this thread this is
okay I didn't miss this thread this is
just from
today okay I do have some messages to
today okay I do have some messages to
look at here hold on
look at here hold on
and then what we're going to do is we're
and then what we're going to do is we're
going to probably do some GPU Drive
going to probably do some GPU Drive
stuff which is a GPU driving simulator
stuff which is a GPU driving simulator
that we have support for and puff for I
that we have support for and puff for I
just have to read this
thread
e
e e
uh
for
e e
Okay I uh I think we're ready to go here
Okay I uh I think we're ready to go here
so the
so the
um the bug
um the bug
that
wait the heck let me see there's someone
wait the heck let me see there's someone
where they posted the solution to this
where they posted the solution to this
bug I got to update
stuff I'm just looking at the side
stuff I'm just looking at the side
monitor for a second to find where
monitor for a second to find where
there's some slack stuff
the heck where did it
the heck where did it
go oh I found it okay so
let me see uh if this works I have some
let me see uh if this works I have some
instructions back and we can show we can
instructions back and we can show we can
show some of this just not the slack
messages where did restream
messages where did restream
go right
go right
there okay
there okay
so oh I missed some messages recently
so oh I missed some messages recently
saw your video of Defending Your thesis
saw your video of Defending Your thesis
amazing work amazing Library thank you
amazing work amazing Library thank you
very much any resources for getting into
very much any resources for getting into
machine learning I think that there are
machine learning I think that there are
a few of them in the puffer Discord or
a few of them in the puffer Discord or
maybe the neural MMO Discord um it's a
maybe the neural MMO Discord um it's a
lot of engineering for the most part
lot of engineering for the most part
like the math side is not that bad uh
like the math side is not that bad uh
open AI spinning up is more math than
open AI spinning up is more math than
you need realistically you read the dqn
you need realistically you read the dqn
paper you read the PO paper you read um
paper you read the PO paper you read um
a few other papers around I suggest a
a few other papers around I suggest a
lot of the large scale industry ones I
lot of the large scale industry ones I
suggest like the DOTA paper the Alpha
suggest like the DOTA paper the Alpha
star paper like emergent tool use
star paper like emergent tool use
Capture the Flag maybe like 10
Capture the Flag maybe like 10
reasonable papers and then you already
reasonable papers and then you already
have a good sort of start on stuff and
have a good sort of start on stuff and
uh you then you just pick up like clean
uh you then you just pick up like clean
RL and start playing with stuff uh you
RL and start playing with stuff uh you
will learn things quite quickly if
will learn things quite quickly if
you're using a something like clean RL
you're using a something like clean RL
or puffer um where you actually get into
or puffer um where you actually get into
the code and stuff isn't just
automated because whenever stuff's
automated because whenever stuff's
automated narl it
breaks okay
this is GPU drive
this is GPU drive
right oops
see if this
works yeah okay this is what we have so
works yeah okay this is what we have so
this is a GPU accelerator driving
this is a GPU accelerator driving
Sim that puffer makes very very
Sim that puffer makes very very
fast um and I was told
fast um and I was told
that it needs to be
compiled with the same version that
compiled with the same version that
python is running
python is running
from which is kind of weird
from which is kind of weird
so let me see if this actually
so let me see if this actually
works uh
five
so
make thank you yeah no worries keep
make thank you yeah no worries keep
missing messages cuz I don't have I got
missing messages cuz I don't have I got
my chat covered okay there we go now I
my chat covered okay there we go now I
can see
can see
it I've got like a million windows and a
it I've got like a million windows and a
million things
today 3.10
okay
okay does that do
it let me see if this does it
yeah that compiled a new version
let's do uh two million time steps
still seg
faults that's unfortunate
is it compiling with the wrong
version no it can't
be what the
be what the
hell window that's okay I'll do that
hell window that's okay I'll do that
I'll deal with that later
I don't know what the heck is up today
I don't know what the heck is up today
California's usually nice we've got like
California's usually nice we've got like
crazy winds
that's
that's
unfortunate I thought that we would have
unfortunate I thought that we would have
a fix for this by
now for
okay unfortunately I can't do anything
okay unfortunately I can't do anything
with this for now if it's going to be
with this for now if it's going to be
seg puling uh I will check back when
seg puling uh I will check back when
they reply to this because uh it's
they reply to this because uh it's
pretty much like everything is done it's
pretty much like everything is done it's
just that in order to automate all the
just that in order to automate all the
experiments the environment can't be
experiments the environment can't be
crashing every time you run it
crashing every time you run it
so yeah unfortunately we're stuck on
so yeah unfortunately we're stuck on
that for now that's okay though um do we
that for now that's okay though um do we
have any sweeps to look at I
mean maybe I'm good to go back to the C
mean maybe I'm good to go back to the C
stuff for now let me think
and there's a lot of stuff to do around
and there's a lot of stuff to do around
here I just got to pick something and do
it realistically we could probably just
it realistically we could probably just
start some of the Atari stuff at the
start some of the Atari stuff at the
moment it's not that hard and uh it
moment it's not that hard and uh it
needs to get done and it's pretty
needs to get done and it's pretty
fun yeah
fun yeah
let's do that for a bit
um yeah
so we just grab uh Atari deps real
quick me make sure I have the updated
quick me make sure I have the updated
version on this and I'll show you what
version on this and I'll show you what
we're going to
do for
okay so we have all the Atari
files
files
good
um does
um does
this does this train
apparently it does which is weird
apparently it does which is weird
because my baselines don't seem like
because my baselines don't seem like
they
they
ran let's go look at
this yeah so some of these didn't run
this yeah so some of these didn't run
which is very weird
like cqu Quest I thought would have
like cqu Quest I thought would have
run long break out I actually don't see
run long break out I actually don't see
cqu Quest here and space so maybe it
cqu Quest here and space so maybe it
just crashed on Space Invaders or
just crashed on Space Invaders or
something cubert's there Space Invaders
something cubert's there Space Invaders
is
is
there okay so I guess all we have to do
there okay so I guess all we have to do
then is we just have to run uh the space
then is we just have to run uh the space
invader Baseline and then we can put
invader Baseline and then we can put
together a little Report with these or
together a little Report with these or
decide what to run from here here so
decide what to run from here here so
that's super easy we can I'll I'll show
that's super easy we can I'll I'll show
off uh launching and configuring these
off uh launching and configuring these
experiments and then I'm going to go
experiments and then I'm going to go
grab my window that I think or my window
grab my window that I think or my window
screen that has been freaking blown out
screen that has been freaking blown out
of my window by whatever the heck is
of my window by whatever the heck is
going on
outside MC Quest mode train V
outside MC Quest mode train V
multiprocessing Baseline
that should be done in
that should be done in
whoops do not have
permission
interesting
interesting h
that's what happened I think Kung
that's what happened I think Kung
grabbed my box while I was in the middle
grabbed my box while I was in the middle
of running
of running
experiments
silly I'm try him to get a different
box I said I technically did tell him to
box I said I technically did tell him to
grab any box he wanted but I assumed he
grab any box he wanted but I assumed he
wouldn't grab one of the two that I use
let me get my API
key that's cheeky
where the window I was doing
okay okay so it is this easy
okay okay so it is this easy
um this is now running
um this is now running
cqu with a 4 million parameter model
cqu with a 4 million parameter model
which is just uh dqn no not DQ n nature
which is just uh dqn no not DQ n nature
CNN plus
CNN plus
lstm and this is the these are the tuned
lstm and this is the these are the tuned
parameters which should be at least the
parameters which should be at least the
tuned parameters from a hyper parameter
sweep and this will be done in 5 minutes
sweep and this will be done in 5 minutes
so what I'm going to do is I'm going to
so what I'm going to do is I'm going to
go grab my window from wherever it's
go grab my window from wherever it's
blown halfway down the street and then
blown halfway down the street and then
I'm going to be right back and then
I'm going to be right back and then
we're going to do the same exact thing
we're going to do the same exact thing
with Space Invaders and then we're going
with Space Invaders and then we're going
to launch some like large scale
to launch some like large scale
experiments to figure out which of these
experiments to figure out which of these
environments we need to improve on the
environments we need to improve on the
most be right
back
e
e
e
e
e e
okay literally blew a screen out of the
okay literally blew a screen out of the
window
well that looks like a good
reward that looks very
good so that is uh what's that 6.7
good so that is uh what's that 6.7
million steps worth of sequ
million steps worth of sequ
quest in 5
quest in 5
minutes it can go substantially faster
minutes it can go substantially faster
than that I'm assuming it found slow
than that I'm assuming it found slow
hyper parameters like that end up
hyper parameters like that end up
actually being better training
actually being better training
throughput uh even though it's lower
throughput uh even though it's lower
SPS um and then now the the additional
SPS um and then now the the additional
time at the end there was it running a
time at the end there was it running a
overall
overall
evaluation and there we go now we have
evaluation and there we go now we have
our cquest Baseline so we'll go look at
our cquest Baseline so we'll go look at
that one but let's queue up Space
that one but let's queue up Space
Invaders while we do
okay
interesting right here this is why the
interesting right here this is why the
rest this is why our run crashed before
rest this is why our run crashed before
there's a comma
okay and there it
okay and there it
goes
goes
so be done in six minutes and we will
so be done in six minutes and we will
look in the mean time at w be here
Space Invaders
hey Joseph how can I be best grad
hey Joseph how can I be best grad
student Master's ra for a PhD student or
student Master's ra for a PhD student or
Professor I possibly can be wait how can
Professor I possibly can be wait how can
I
be the best M okay I didn't know that
be the best M okay I didn't know that
they do raas as Masters for PhD students
they do raas as Masters for PhD students
that's kind of
that's kind of
odd start school in three I mean it
odd start school in three I mean it
depends how much RL you know right
depends how much RL you know right
depends how much RL you know going
depends how much RL you know going
in how much engineering you know what
in how much engineering you know what
skills you have that sort of a thing
yeah so these baselines definitely need
yeah so these baselines definitely need
to be uh to be
fixed we need to add like a Max cost or
fixed we need to add like a Max cost or
whatever to
these see Quest is very nice
Space Invaders
Space Invaders
is possibly
training oh yeah you can see it's
training oh yeah you can see it's
starting to train here it's going
starting to train here it's going
up it's a hard game as
well it's kind of funny
well it's kind of funny
um this one takes a long time doesn't it
oh because it's 18 million steps I
guess was this pong and breakout I
guess was this pong and breakout I
guess all the way down
guess all the way down
there we have to understand why breakout
there we have to understand why breakout
is
is
um is doing that so we'll have to look
um is doing that so we'll have to look
at some
at some
environments so this gives us our
environments so this gives us our
baselines at the very least let's go
baselines at the very least let's go
look at our
sweeps see if I can find the carb
sweeps see if I can find the carb
sweeps or Breakout
oh here you go it's the best ones we got
oh here you go it's the best ones we got
were like 2100 score let's go see do we
were like 2100 score let's go see do we
match that on our yeah we matched that
match that on our yeah we matched that
on cqu didn't
we yeah 2100 perfect so our sequence
we yeah 2100 perfect so our sequence
Baseline is very
good Space Invaders we're looking for
good Space Invaders we're looking for
550 I
believe that could be made
better cuber got as high as
2900 pretty good pretty close
yeah oops same
one beam Rider we
one beam Rider we
got close to 1,800 beam Rider has a very
got close to 1,800 beam Rider has a very
very nice curve on it
pretty
pretty
close with our eval pretty
close with our eval pretty
close within a reasonable margin of
close within a reasonable margin of
error I'd say Duro can we find our
error I'd say Duro can we find our
breakout
breakout
sweep I'd uh I'd like to figure out what
sweep I'd uh I'd like to figure out what
went wrong with our breakout sweep more
went wrong with our breakout sweep more
than
anything this the Moa yeah MOA we don't
anything this the Moa yeah MOA we don't
need this one for
need this one for
now uh
now uh
maybe this
one okay cool here's
breakout
so interesting that this was getting
so interesting that this was getting
better but I think it just got skewed so
better but I think it just got skewed so
poorly by this we should just rerun the
poorly by this we should just rerun the
breakout sweep
breakout sweep
right potentially with
right potentially with
more yeah potentially with more uh
more yeah potentially with more uh
settings as well
what's the Pito front look like for
this
mhm yeah so it's all these like I think
mhm yeah so it's all these like I think
this this run just screwed it up we
this this run just screwed it up we
should just rerun the breakout Sweep
should just rerun the breakout Sweep
with substantially more
samples is this
samples is this
finished yes and what did we get for
finished yes and what did we get for
Space
Invaders 539 okay that's about what we
Invaders 539 okay that's about what we
were expecting so we're going to make a
were expecting so we're going to make a
couple quick changes to some stuff in
couple quick changes to some stuff in
Dev here based on the findings from some
Dev here based on the findings from some
recent Atari stuff
um let me see so
I kind of want to add like a Max cost
I kind of want to add like a Max cost
per r
is there Max cost
thought that there was a
thought that there was a
uh here it is right config
this
this
it Max suggestion
cost so we could add this
we say we uh we have each environment
we say we uh we have each environment
train in an hour
okay args here
let's see if this is a valid
parameter so what I'm doing at the
parameter so what I'm doing at the
moment here
moment here
is key eror Max suggestion okay so we
is key eror Max suggestion okay so we
have to figure out what the heck
have to figure out what the heck
happened there
we'll put the break point up here so
we'll put the break point up here so
what I'm doing now is I don't want to
what I'm doing now is I don't want to
limit the model to a specific number of
limit the model to a specific number of
samples because let's say that your
samples because let's say that your
experiment gets up towards the maximum
experiment gets up towards the maximum
number of samples then it's going to
number of samples then it's going to
start finding slower and slower
start finding slower and slower
configurations that keep like using
configurations that keep like using
those same samples over and over um
those same samples over and over um
instead of just cranking up more samples
instead of just cranking up more samples
so what I want to do instead is I want
so what I want to do instead is I want
to be able to have it have like a ton of
to be able to have it have like a ton of
samples but it's not going to suggest an
samples but it's not going to suggest an
experiment that should take longer than
experiment that should take longer than
an hour that's what I'm trying to do at
an hour that's what I'm trying to do at
the moment and uh reason for that will
the moment and uh reason for that will
become clear in a
moment okay there it
is oops
off for
Li okay so now we have suggestion cost
Li okay so now we have suggestion cost
here
and up to 200 million steps I
believe do more than that hold on let me
believe do more than that hold on let me
just make sure I have the right order of
just make sure I have the right order of
magnitude so
magnitude so
30,000 * 3600
um okay it's like 100 million anyways so
um okay it's like 100 million anyways so
the most of it would be able to do
the most of it would be able to do
anyways is like 100 million so this is
anyways is like 100 million so this is
now going to cap it to roughly an hour
now going to cap it to roughly an hour
hour of
hour of
cost we should be able to estimate this
cost we should be able to estimate this
pretty accurately
yeah and there we go here is
yeah and there we go here is
our here are our
settings so we're going to see whether
settings so we're going to see whether
this does better we've made some
this does better we've made some
substantial improvements to our carbs
substantial improvements to our carbs
integration since we lasted our breakout
integration since we lasted our breakout
sweep I think the biggest Improvement
sweep I think the biggest Improvement
has been that we just have much more
has been that we just have much more
accurate evaluations and carbs relies
accurate evaluations and carbs relies
pretty heavily on having an accurate
pretty heavily on having an accurate
evaluation of how good the model it
evaluation of how good the model it
actually trained is right it needs to
actually trained is right it needs to
know that in order to decide whether it
know that in order to decide whether it
was a good experiment or not that was a
was a good experiment or not that was a
pretty noisy estimate previously but now
pretty noisy estimate previously but now
it should be much more stable
so python demo and
so python demo and
breakout sweet arbs
oops we also want to know how many
oops we also want to know how many
experiments to run
experiments to run
right I've been trying to figure out how
right I've been trying to figure out how
many I want to run
many I want to run
um you know these do get to be pretty
chunky think it needs to be more than
chunky think it needs to be more than
though I think you set it
though I think you set it
to I think I set it like this and we
to I think I set it like this and we
just see what
just see what
happens
happens
okay python demo and break
okay python demo and break
out sweep
carbs
carbs
okay and this gives
us perfect
and now we can make these uh these
improvements so we fix Space
Invaders we increase the maximum uh run
Invaders we increase the maximum uh run
length for Atari
we fix a few things with carbs in the
demo and we
demo and we
also add the max suggestion cost to
also add the max suggestion cost to
default
okay and
okay and
um
um
here we now can see that we have some
here we now can see that we have some
nice new atar
baselines and what we're going to do is
baselines and what we're going to do is
we're going to
do process
time let's put this into like a
time let's put this into like a
reasonable reasonable
reasonable reasonable
[Music]
size there you
size there you
go for
we should just double check
um the original po paper
for C
for C
Quest just to make sure we're actually
Quest just to make sure we're actually
doing well cqu Quest and Space
Invaders here's Space Invaders
Invaders here's Space Invaders
and then
and then
cqu we actually are already better than
cqu beam
Rider oh yeah we're beating them on a
Rider oh yeah we're beating them on a
lot of these M
already yeah we already beat sequest as
already yeah we already beat sequest as
well that's crazy
was it 200
was it 200
mil shoot I forgot
mil shoot I forgot
uh the 200 mil oops
where were their Atari results
table
five 40
five 40
million game
frames do they say how many
um I don't see how many
how long do they train
for oh it is 40 million frames
okay
for
e e
cool
so that's
nice I've wanted these for a while um we
nice I've wanted these for a while um we
need to have like
need to have like
longer runs of these so you can see if
longer runs of these so you can see if
you keep running them how much better
you keep running them how much better
you can do
you can do
uh I think that that should come out of
uh I think that that should come out of
our benchmarks I would
hope so here's carbs right oops where'd
hope so here's carbs right oops where'd
it go
sweeps okay here's our carb
sweeps okay here's our carb
sweep uh this is now going to run
sweep uh this is now going to run
massive sweep on
massive sweep on
breakout you can see like here right
breakout you can see like here right
what it's going to find it's going to
what it's going to find it's going to
run like 14 16 random experiments
run like 14 16 random experiments
something like that and then after that
something like that and then after that
it's going to use the algorithm to
it's going to use the algorithm to
attempt to find better hyper parameters
attempt to find better hyper parameters
I'm going to probably let this run like
I'm going to probably let this run like
all
all
weekend um yeah and then hopefully this
weekend um yeah and then hopefully this
is going to give us a very nice training
is going to give us a very nice training
curve a very nice hyper pram sweep curve
curve a very nice hyper pram sweep curve
and we'll be able to pick uh we'll be
and we'll be able to pick uh we'll be
able to pick some good curves based on
able to pick some good curves based on
that that'll be good
let me just check if that's something
let me just check if that's something
important or if that is a spam
important or if that is a spam
message place your
message place your
bets
oops one two spam messages three spam
oops one two spam messages three spam
messages four spam messages
uh hold
uh hold
on who was
on who was
this August
2022 this is
cool
interesting they do stuff that's
cool
e e
okay um well we've got these running
okay um well we've got these running
um what time is it it's
um what time is it it's
5 I think I probably
5 I think I probably
[Music]
[Music]
should well we'll do a couple more
should well we'll do a couple more
things before I I'm going to have to
things before I I'm going to have to
take a little bit of time to write a
take a little bit of time to write a
rebuttal before it gets too late uh so I
rebuttal before it gets too late uh so I
can submit some uh material to
can submit some uh material to
nups and
nups and
and yeah we'll see from there um I think
and yeah we'll see from there um I think
I might stream tomorrow I might not
I might stream tomorrow I might not
we'll see um I don't know how interested
we'll see um I don't know how interested
folks will be it'll just be I need to
folks will be it'll just be I need to
clean up a bunch of the C code uh just
clean up a bunch of the C code uh just
need to grind through that and hopefully
need to grind through that and hopefully
like have like a single file thing to
ship I'm still figuring out what format
ship I'm still figuring out what format
I want that to be playable in
yeah oh I should also just double check
yeah oh I should also just double check
if I have anything for back on the GPU
if I have anything for back on the GPU
and probably not it's already like
and probably not it's already like
pretty late in New York time
actually takes like six clicks to launch
actually takes like six clicks to launch
slack in your
browser delete everything in r
okay I've been told that uh I need to
okay I've been told that uh I need to
run I need to build from scratch so I
run I need to build from scratch so I
have this sweep running already which is
have this sweep running already which is
a little bit
unfortunate I think I'll kill the I'll
unfortunate I think I'll kill the I'll
kill this sweep for now it's it's only
kill this sweep for now it's it's only
been running for a little bit I'm going
been running for a little bit I'm going
to fix the GPU Drive stuff and then I'll
to fix the GPU Drive stuff and then I'll
launch this sweep again before I uh I
launch this sweep again before I uh I
end here
yeah let's do that it's cool that it's
yeah let's do that it's cool that it's
already finding reasonable policies
though let me see so if you haven't
though let me see so if you haven't
heard of this already this will be the
heard of this already this will be the
last thing we'll do today um if you guys
last thing we'll do today um if you guys
haven't heard heard of this m already
haven't heard heard of this m already
GPU Drive is it's pretty cool Sim it's
GPU Drive is it's pretty cool Sim it's
been taking off just recently released
been taking off just recently released
and we have really fast bindings for it
and we have really fast bindings for it
in
in
puffer U but there are some things that
puffer U but there are some things that
are screwy with it so we are going to
are screwy with it so we are going to
look at fixing
that dur build build
make
DJ yeah there we go that has to do some
DJ yeah there we go that has to do some
stuff
right they'll be good
okay this gives us the
library that should just uh disable any
library that should just uh disable any
weird caching going on
we'll see ah it no longer seg
we'll see ah it no longer seg
faults no longer seg faults that's
awesome so I guess we do have to run a
awesome so I guess we do have to run a
little sweep on this then
10 million steps 25 million
10 million steps 25 million
steps
do yes
uh
t-o
t-o
carbs back
native so hopefully that does
something and then I'll just uh I'll
something and then I'll just uh I'll
what I'll do is I'll probably finish up
what I'll do is I'll probably finish up
here if anybody has any RL questions I
here if anybody has any RL questions I
can answer a few things but otherwise I
can answer a few things but otherwise I
will let this
will let this
run and then I'm going to go do the
run and then I'm going to go do the
rebuttal
rebuttal
Shenanigans and then hopefully we'll
Shenanigans and then hopefully we'll
have some runs done for this by now
have some runs done for this by now
because these are fast and then uh I
because these are fast and then uh I
will be able to
do from
do from
there run the breakout sweep and uh I'll
there run the breakout sweep and uh I'll
be doing some C stuff tomorrow maybe
be doing some C stuff tomorrow maybe
stream maybe not we'll see
stream maybe not we'll see
this looks good I may as well let this
this looks good I may as well let this
run
run
finish because I want to make sure that
finish because I want to make sure that
this actually works you can see GPU
this actually works you can see GPU
Drive The Binding is very fast it's
Drive The Binding is very fast it's
about five times faster than uh it was
about five times faster than uh it was
originally puffer did some puffer Magic
see no file checkpoints
what happened
here
huh let's
see let's see if that happens again
for folks on YouTube all the stuff I've
for folks on YouTube all the stuff I've
been working on it's been a little
been working on it's been a little
slower lately but
slower lately but
um we're going to be back on the Moa as
um we're going to be back on the Moa as
soon as I finish this C demo that'll be
soon as I finish this C demo that'll be
fun so probably
fun so probably
Monday and uh all the stuff I've been
Monday and uh all the stuff I've been
working on it's all free open source
working on it's all free open source
nice and simple most of it's in the dev
nice and simple most of it's in the dev
Branch here I'll post the repo but if
Branch here I'll post the repo but if
you want to help me out for free just
you want to help me out for free just
star it it's all you got to do helps me
star it it's all you got to do helps me
out a
ton 804 today
dang almost 4.4 on the Twitter as well
dang almost 4.4 on the Twitter as well
good
metrics let's see if we still get this
metrics let's see if we still get this
bug
Pi
agent save to
file no file
how's that
how's that
possible I've never seen that before
possible I've never seen that before
when
uh checkpoints SLC carbs experiment
uh checkpoints SLC carbs experiment
right
checkpoints
checkpoints
yeah it's really weird
huh for
let's try
let's try
this we don't really need to we don't
this we don't really need to we don't
ever save those anyways right
okay we'll see whether this does
okay we'll see whether this does
it that should be nice and stable but
it that should be nice and stable but
we'll
see e
it's good train
speed we'll see whether this en is uh
speed we'll see whether this en is uh
the en binding is correct if not I'll
the en binding is correct if not I'll
have to mess with that over the weekend
have to mess with that over the weekend
as well
G still set coua Heap
size okay well
um
well we do get to run our breakout sweep
well we do get to run our breakout sweep
as a
result and breakout mode sweep C back
result and breakout mode sweep C back
multiprocessing there we
go
25k all
right it's five um I am going to go take
right it's five um I am going to go take
like an hour to go fix up and submit a
like an hour to go fix up and submit a
rebuttal hey man your thesis defense was
rebuttal hey man your thesis defense was
really cool thank you I'm now graduated
really cool thank you I'm now graduated
and uh free from the shackles of
and uh free from the shackles of
Academia meaning I get to do a ton of
Academia meaning I get to do a ton of
really awesome reinforcement learning
really awesome reinforcement learning
Dev live and really just try to fix the
Dev live and really just try to fix the
field
field
um so much of the stuff of my PhD I've
um so much of the stuff of my PhD I've
already just like blown out of the water
already just like blown out of the water
with just the level of performance we're
with just the level of performance we're
getting in Puffer
getting in Puffer
I don't know if you've seen any of the
I don't know if you've seen any of the
recent
stuff oh here I guess I'll show this
stuff oh here I guess I'll show this
because I'm proud of this we just got
because I'm proud of this we just got
this running
today so here's a snake game this runs
today so here's a snake game this runs
at like uh 12 no 10 million steps per
at like uh 12 no 10 million steps per
second single thread and uh what you're
second single thread and uh what you're
seeing now is like a 100 snakes or
seeing now is like a 100 snakes or
whatever running live on one CPU core uh
whatever running live on one CPU core uh
with reinforcement learned policies all
with reinforcement learned policies all
in pure C so the environment is C the
in pure C so the environment is C the
renderer is C and the policy forward is
renderer is C and the policy forward is
c meaning that this is going to go on
c meaning that this is going to go on
the website soon and you're going to be
the website soon and you're going to be
able to play with these
able to play with these
guys so yeah we've been doing some fun
stuff just finally got this working
today
today
yeah I know I think what's going to
yeah I know I think what's going to
happen with reinforcement learning with
happen with reinforcement learning with
the stuff I've been doing lately is just
the stuff I've been doing lately is just
like automated hundreds of experiments
like automated hundreds of experiments
that run overnight and just Ultra Ultra
that run overnight and just Ultra Ultra
fast simulators for all of
fast simulators for all of
RL what's the
plan these things are pretty fun to
plan these things are pretty fun to
watch technically I I think I'm
watch technically I I think I'm
technically able to play this as well if
technically able to play this as well if
I can figure out which agent I am on the
I can figure out which agent I am on the
board
oh I can see it I'm the I'm the red one
oh I can see it I'm the I'm the red one
at the top
right Unfortunately they have perfect
right Unfortunately they have perfect
reflexes so unlike Slither it's very
reflexes so unlike Slither it's very
hard to foul them
up quite far above my knowledge level
up quite far above my knowledge level
but this stuff is still cool yeah I'm
but this stuff is still cool yeah I'm
going to make a I'm gonna make a more
going to make a I'm gonna make a more
semi a semi accessible video on some RL
semi a semi accessible video on some RL
stuff like another long form video
stuff like another long form video
uh I have it in the works I just I have
uh I have it in the works I just I have
to do it and it's it's so much so much
to do it and it's it's so much so much
work there's so many things I need to
work there's so many things I need to
do there's only so much
time but it's been going well it's
time but it's been going well it's
definitely been going
well really all I want to do is code
well really all I want to do is code
lots more
lots more
Sims well we'll
see anyways um I got to call this
see anyways um I got to call this
because I have nurs rebuttal to finish
because I have nurs rebuttal to finish
tonight so uh
tonight so uh
technically I've done the ones for the
technically I've done the ones for the
puffer lib paper we got shredded in
puffer lib paper we got shredded in
review uh we got 663 on puffer which is
review uh we got 663 on puffer which is
insane um but I have one other one that
insane um but I have one other one that
I am obligated to finish today so I'm
I am obligated to finish today so I'm
going to go do that and uh I might
going to go do that and uh I might
stream tomorrow but I'll definitely be
stream tomorrow but I'll definitely be
back Monday so thanks for dropping by if
back Monday so thanks for dropping by if
you want to check out any of my latest
you want to check out any of my latest
work it is all in puffer lib which is
work it is all in puffer lib which is
right I'll link it one last
right I'll link it one last
time puffers right here feed the puffer
time puffers right here feed the puffer
a star on your way in if you please
a star on your way in if you please
helps me out a bunch and uh yeah see you
helps me out a bunch and uh yeah see you
around
