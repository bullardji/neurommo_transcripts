Kind: captions
Language: en
we've got some good stuff
today reply to a couple quick things
today reply to a couple quick things
tweet this out and
tweet this out and
um yeah we be started today I've got
um yeah we be started today I've got
some cool stuff I was working on I
some cool stuff I was working on I
didn't quite finish it cuz there were
didn't quite finish it cuz there were
some distractions on
some distractions on
Sunday
Sunday
yeah uh let's
yeah uh let's
on I need to tweet this thing
on I need to tweet this thing
right it like doesn't let me add a
right it like doesn't let me add a
tweet okay this is going to be
tweet okay this is going to be
echoing
echoing
uh
shareing yeah okay so we tweet it from
shareing yeah okay so we tweet it from
here
right post
there we go
uh we got to get this out of the way
uh we got to get this out of the way
because it's covering
because it's covering
chat of
chat of
that get rid of
that get rid of
this
this
and we may or not may not need this I'll
and we may or not may not need this I'll
hide it for now uh anything cool on x
nothing
nothing
really
really
so we've got some stuff
so we've got some stuff
we got some stuff today hold
on
jeez um the plans for today so over the
weekend over the weekend I start started
weekend over the weekend I start started
on not this I have a new Branch here on
puffer totally just
like
like
anyways hopefully I will be fine here um
anyways hopefully I will be fine here um
I started on a new thing with
I started on a new thing with
puffer because my experiments went
puffer because my experiments went
better than expected so I had some extra
better than expected so I had some extra
time
cack origin let me show you this
cack origin let me show you this
off so this was very painful for me to
off so this was very painful for me to
have to do um and it's going to take
have to do um and it's going to take
some more work
some more work
but the main thing I've had people
but the main thing I've had people
complain about in puffer lib above
complain about in puffer lib above
everything else is just like the demo
everything else is just like the demo
being too comp replicated right um now
being too comp replicated right um now
the demo does a lot of stuff and most of
the demo does a lot of stuff and most of
that stuff is pretty important
that stuff is pretty important
um but the main thing was like the
um but the main thing was like the
actual demo. py file
actual demo. py file
itself it had too much arar Shenanigans
itself it had too much arar Shenanigans
too much yaml parsing Shenanigans just
too much yaml parsing Shenanigans just
too much crap going on in the demo file
too much crap going on in the demo file
so I managed to cut a third of the
so I managed to cut a third of the
length off of the demo file
length off of the demo file
and I paid very very dearly for it so
and I paid very very dearly for it so
200 lines 200 lines flat I actually I'm
200 lines 200 lines flat I actually I'm
going to go grab my laptop in a second
going to go grab my laptop in a second
just to make sure I committed up the
just to make sure I committed up the
absolute most recent version of
absolute most recent version of
it
it
um and the loading is way better now so
um and the loading is way better now so
we have make policy we've got nit wandy
we have make policy we've got nit wandy
we've got the sweep function we've got
we've got the sweep function we've got
the train function and then we have a
the train function and then we have a
very small amount of arars here and then
very small amount of arars here and then
the all the complexity of the old
the all the complexity of the old
loading stuff is condensed into this one
loading stuff is condensed into this one
screen of code right
screen of code right
here and hopefully I can even simplify
here and hopefully I can even simplify
this a little bit more um but the way to
this a little bit more um but the way to
do this was to move from yaml to uh any
do this was to move from yaml to uh any
files just init
files just init
files which are supported by python uh
files which are supported by python uh
by default with their what's it called
by default with their what's it called
config
config
lib config parser built into python so
lib config parser built into python so
that actually kills the AML dependency
that actually kills the AML dependency
for us and simplifies stuff quite a
for us and simplifies stuff quite a
bit so other than this little bit of
bit so other than this little bit of
shenanigans right here that I'm still
shenanigans right here that I'm still
going to iterate on uh this is pretty
going to iterate on uh this is pretty
much as simple as it gets and if this is
much as simple as it gets and if this is
still too complicated then I'm going to
still too complicated then I'm going to
need more specific feedback because this
need more specific feedback because this
is about as simple as I can get it
is about as simple as I can get it
um so what I'm going to do today is I'm
um so what I'm going to do today is I'm
going to polish this up a little bit
going to polish this up a little bit
because there's some stuff preventing me
because there's some stuff preventing me
from merging all this into uh the main
from merging all this into uh the main
know the main repo um I am going to I
know the main repo um I am going to I
did run some baselines on this Branch I
did run some baselines on this Branch I
believe uh we're going to go over some
believe uh we're going to go over some
of the trained models CU I ran the
of the trained models CU I ran the
hyperparameter tuned versions for 1
hyperparameter tuned versions for 1
billion steps on all of these uh so we
billion steps on all of these uh so we
should have some reasonably good
should have some reasonably good
policies from
policies from
this and we'll go from
this and we'll go from
there I am going to grab my laptop real
there I am going to grab my laptop real
quick just to make sure that I have the
quick just to make sure that I have the
most recent version one
second just making sure that I actually
second just making sure that I actually
committed everything
committed everything
up for
going to load this up and
check and let me fix a few things in the
check and let me fix a few things in the
meantime where's the
meantime where's the
stream okay there we go now I can see
stream okay there we go now I can see
the view counts and stuff
perfect chat should be working yeah so
perfect chat should be working yeah so
we're good for like I don't know seven
we're good for like I don't know seven
hours today probably
uh I
uh I
modified I think I got the
latest yeah I got the latest on this so
latest yeah I got the latest on this so
we'll have this if we need it but I
we'll have this if we need it but I
think that I will be fine with the
think that I will be fine with the
current code version
we'll start with some of the fun
stuff should be able to load up um some
stuff should be able to load up um some
of these files and see if they do
of these files and see if they do
anything
interesting
so and
so and
uh
uh
group
group
eval and we'll probably have to fix some
eval and we'll probably have to fix some
various things around because like this
various things around because like this
new config system is fully untested so
new config system is fully untested so
um you know I'm going to be fixing stuff
um you know I'm going to be fixing stuff
along the way and the hope is that by
along the way and the hope is that by
the end of this we have the control
the end of this we have the control
environment in a good spot we've got the
environment in a good spot we've got the
new config envir uh new config system in
new config envir uh new config system in
a new spot it won't quite be ready to
a new spot it won't quite be ready to
merge into M yet or anything like that
merge into M yet or anything like that
but maybe we can merge this back into
but maybe we can merge this back into
Dev and have like a reasonably stable
Dev and have like a reasonably stable
good Dev Branch to work off of
right okay
right okay
so a few small things to
so a few small things to
fix again I I only tested like I think
fix again I I only tested like I think
the train path or
whatever oops
actually I see that there are a few
actually I see that there are a few
others of these I thought I had fixed
others of these I thought I had fixed
that but maybe I hadn't fixed this
that but maybe I hadn't fixed this
inside of
inside of
Baseline yeah that must be what it
was it's good
that's
that's
good
good
yeah and all these like dots Sy tcts I
yeah and all these like dots Sy tcts I
replaced this with a dictionary which I
replaced this with a dictionary which I
don't particularly like but um it's made
don't particularly like but um it's made
stuff
easier key error en
name key error n name
name key error n name
um I think it might just be n
um I think it might just be n
right how did I specify
this yeah I just did EnV so it's ARS of
this yeah I just did EnV so it's ARS of
En M name m name
no attribute X
no attribute X
by
right so I mean this is why I don't like
right so I mean this is why I don't like
to change the the cont system very often
to change the the cont system very often
because it's
because it's
like it's a pain to like refactor
like it's a pain to like refactor
everything
everything
um but I think that this is going to
um but I think that this is going to
make it substantially easier for
make it substantially easier for
users just having like way less stuff to
users just having like way less stuff to
worry about in the demo
file um
and we'll see uh how this
does train yeah so there's a lot of um
does train yeah so there's a lot of um
there's going to be a lot of like just
there's going to be a lot of like just
boring syntax fixing today
boring syntax fixing today
unfortunately I am curious though I will
unfortunately I am curious though I will
show off the new config system to see if
show off the new config system to see if
people like it more so the old one here
people like it more so the old one here
is this config yaml so you have this one
is this config yaml so you have this one
gigantic yaml file and you have this
gigantic yaml file and you have this
pseudo inheritance thing where like you
pseudo inheritance thing where like you
can specify default and then like you
can specify default and then like you
can specify your package under the
can specify your package under the
default like this and you can override
default like this and you can override
specific args so you have all the M's in
specific args so you have all the M's in
the same folder like this right so in
the same folder like this right so in
the new one I have a configs
folder there's a default. any that has
folder there's a default. any that has
flat like all these sections with your
flat like all these sections with your
same exact prams from
same exact prams from
before and then you can override
these like
these like
this and you have all the M's specified
this and you have all the M's specified
here uh and it's pretty
here uh and it's pretty
clean so I think that this will be
clean so I think that this will be
easier for people now it's it's not the
easier for people now it's it's not the
yaml format but um that's kind of better
yaml format but um that's kind of better
in a sense it's the built-in
format
format
yeah okay let's figure out what is going
yeah okay let's figure out what is going
on
here so the issue here is that
um let's
see I have en but then there's also like
see I have en but then there's also like
EnV
EnV
dot stuff
right how did I handle this in the old
right how did I handle this in the old
system
system
let me just go check the uh the code
let me just go check the uh the code
base here how did I handle this in the
base here how did I handle this in the
old
system 629 very
system 629 very
nice if you haven't given the poer a
nice if you haven't given the poer a
star please feed the puff for a star
star please feed the puff for a star
helps me out a whole
helps me out a whole
bunch
bunch
um so yeah the 10 Branch should be fine
um so yeah the 10 Branch should be fine
for
for
this let's do
this let's do
demo so 291 lines in this and I think
demo so 291 lines in this and I think
it's gotten a little longer even since
it's gotten a little longer even since
then um so yeah we've really just
then um so yeah we've really just
stripped 100 lines off of
it but what I'm curious is how I handled
it but what I'm curious is how I handled
the N
the N
AR we have M here
package AR and module is load
package AR and module is load
config so how did I handle
config so how did I handle
the uh environment name separately from
the uh environment name separately from
everything
everything
else and config so you load the module
else and config so you load the module
from the
config then we had n
config then we had n
name which is bizarre
or is
or is
it oh right this was so that you could
it oh right this was so that you could
do
like I wanted you to be able to do like
like I wanted you to be able to do like
breakout or
breakout or
whatever and um have it
whatever and um have it
Alias so I can think about that
Alias so I can think about that
separately
yeah so I did send it I did specify it
yeah so I did send it I did specify it
as n
as n
name so I think what we're going to do
name so I think what we're going to do
then
is we're going to add n his EMP as an
is we're going to add n his EMP as an
empty default
empty default
here and I'm going to do
can I just like pop out this argument
can I just like pop out this argument
for
instance parser parsn args
name stop pop
and then if I do en name here I don't
and then if I do en name here I don't
know if pop is going to
work let's try
this name space had yeah so that's what
this name space had yeah so that's what
I was afraid of um that's somewhat
I was afraid of um that's somewhat
awkward
but I think we I think we can
but I think we I think we can
do we can pop this out later
right I can
right I can
do parser do
parse so I can do M name
parse so I can do M name
here is going to be
I'd really like to be able to pop this
I'd really like to be able to pop this
out well for now I will do
out well for now I will do
par and then I will do
par and then I will do
like par
like par
equals
equals
right and then this is going to be
right and then this is going to be
par. pop of
par. pop of
N and we'll see if this does anything
dict items has
no ah okay so we take the underscore
no ah okay so we take the underscore
dict and we'll call uh we'll get the
dict and we'll call uh we'll get the
items here and then that should be
items here and then that should be
fine invalid environment
fine invalid environment
name where's that
name where's that
error ocean
environment valid environment
environment valid environment
name
name
uh AR okay so this is because now we
uh AR okay so this is because now we
need to just look for like args en or
need to just look for like args en or
whatever yeah like right here and now
whatever yeah like right here and now
this is just MV name so this is actually
this is just MV name so this is actually
cleaner we can like save a bunch of
cleaner we can like save a bunch of
these annoying
these annoying
uh like
uh like
calls this is just you know M
calls this is just you know M
name I really don't like to have nested
name I really don't like to have nested
quotes in my uh my f strings if I can
quotes in my uh my f strings if I can
avoid
avoid
it so being able to delete some of those
it so being able to delete some of those
not
bad ah and now this is
bad ah and now this is
actually this is actually what you want
actually this is actually what you want
here is you do want to have args of n
here is you do want to have args of n
here because this is
here because this is
the where you can provide arguments to
the where you can provide arguments to
override the environment
okay so we get an
okay so we get an
unsupported exception
unsupported exception
problem okay w
b unsupported type well let's let's take
b unsupported type well let's let's take
the WB stuff off for a
moment okay so if we load a random
moment okay so if we load a random
policy this actually already works it's
policy this actually already works it's
just W be being
Jank exception problem is not is
Jank exception problem is not is
probably not the best thing to have in
probably not the best thing to have in
your production
code um Wan be
inette ID equal
inette ID equal
ID let's see what we have in ID I it's
ID let's see what we have in ID I it's
probably going to be like something Jank
probably going to be like something Jank
right like I probably like passing a
right like I probably like passing a
dictionary or
something puff one o group
something puff one o group
I thought that's what I wanted isn't
I thought that's what I wanted isn't
it if I look on Wan B
right oh no it's not is
right oh no it's not is
it if I look at like puffer
it if I look at like puffer
here this is the environment named
here this is the environment named
puffer host
puffer host
name where's the ID on
name where's the ID on
this this WB group is
this this WB group is
puff1 base
Line This is
Line This is
correct hey man big respect to you for
correct hey man big respect to you for
all the work you've done have an
all the work you've done have an
interview for associate data engineer
interview for associate data engineer
position tomorrow any advice I am the
position tomorrow any advice I am the
worst person possible to ask about
worst person possible to ask about
interviews um because I never bothered
interviews um because I never bothered
with leite code so I can't pass a first
with leite code so I can't pass a first
round software engineering interview as
round software engineering interview as
it turns out despite being able to build
it turns out despite being able to build
all this cool stuff
what I would suggest you to do is to do
what I would suggest you to do is to do
your homework on the company um assuming
your homework on the company um assuming
it's not like just Fang or whatever so
it's not like just Fang or whatever so
you can actually speak intelligently
you can actually speak intelligently
about like you know ideas of what you
about like you know ideas of what you
might be able to add to the specific
might be able to add to the specific
company and what they're trying to do
company and what they're trying to do
it's always a good thing to do not to
it's always a good thing to do not to
just like you know treat companies as
just like you know treat companies as
interchangeable
but yeah as for technical stuff to be
but yeah as for technical stuff to be
studying nothing I can tell you that's
studying nothing I can tell you that's
going to be like useful the day
before wait this x byd looks fine right
before wait this x byd looks fine right
Puff 10 puffer Puff
Puff 10 puffer Puff
10 group yeah this is
10 group yeah this is
correct
correct
um maybe I'm not I didn't do this the
um maybe I'm not I didn't do this the
way I thought I
did so
args let me just see if I can follow
args let me just see if I can follow
this because this was kind of garbage
this because this was kind of garbage
code uh some of this was so in it wand
code uh some of this was so in it wand
B takes
B takes
args one be name and then ideas ar. X
args one be name and then ideas ar. X
ID okay so when I do args dox ID in
ID okay so when I do args dox ID in
Baseline puff
Baseline puff
version
and this looks
and this looks
fine doesn't
fine doesn't
it maybe I did oh here right here this
it maybe I did oh here right here this
is a
is a
dictionary this needs to be n name
how do I do this before when I did in
how do I do this before when I did in
it this code look
it this code look
like args Name ID okay so
like args Name ID okay so
args I needed to add name here I don't
args I needed to add name here I don't
know why I remove
know why I remove
this um so this
this um so this
is
name haha fell I'm coming from a more
name haha fell I'm coming from a more
analy iCal role is an analytical
analy iCal role is an analytical
engineer intern found a lot of love for
engineer intern found a lot of love for
the
the
nitty-gritty any advice to potentially
nitty-gritty any advice to potentially
break
break
into
into
DS I actually don't know what DS is or a
DS I actually don't know what DS is or a
machine learning in the future if all
machine learning in the future if all
goes
goes
well uh I mean some of the people I know
well uh I mean some of the people I know
that have been doing that have just been
that have been doing that have just been
like it depends on whether you can do it
like it depends on whether you can do it
at your job or not assuming you can't do
at your job or not assuming you can't do
that laterally inside of the company
that laterally inside of the company
that you're currently
that you're currently
at doing open source stuff oh data
at doing open source stuff oh data
science okay
science okay
sure
sure
um if you it depends what you mean by ly
um if you it depends what you mean by ly
grit nitty-gritty right if you mean the
grit nitty-gritty right if you mean the
experimental analysis side um that's
experimental analysis side um that's
maybe a little harder to do if you're
maybe a little harder to do if you're
talking about the engineering or
talking about the engineering or
building stuff side then open source is
building stuff side then open source is
a great way to do that I'd say that my
a great way to do that I'd say that my
own Playbook is like 80% on the build
own Playbook is like 80% on the build
stuff side like like maybe 15% I know
stuff side like like maybe 15% I know
how to do good science and then 5% math
how to do good science and then 5% math
very very little
very very little
math um so open source stuff has been
math um so open source stuff has been
really
really
great yeah building stuff is just do
great yeah building stuff is just do
open source stuff right either do your
open source stuff right either do your
own projects or join like existing stuff
own projects or join like existing stuff
there's plenty of stuff online um you
there's plenty of stuff online um you
know I do stuff with puffer I've got a
know I do stuff with puffer I've got a
couple people that contribute to this
couple people that contribute to this
already like just random open source
already like just random open source
people that have joined over the last
people that have joined over the last
year or so I've got uh another project I
year or so I've got uh another project I
sponsor with Pokemon it's like a
sponsor with Pokemon it's like a
reinforcement learning trying to solve
reinforcement learning trying to solve
Pokemon Red that I sponsor the compute
Pokemon Red that I sponsor the compute
for I shouldn't say sponsor it's more
for I shouldn't say sponsor it's more
compute
compute
sponsor um but yeah there are a lot of
sponsor um but yeah there are a lot of
projects like this out there so you find
projects like this out there so you find
some cool people that you think you can
some cool people that you think you can
work with that you know value uh hard
work with that you know value uh hard
work and contribution and get going from
work and contribution and get going from
there and it t it's going to take time
there and it t it's going to take time
right like ml's hard it's easier now
right like ml's hard it's easier now
than it ever was but it takes it's going
than it ever was but it takes it's going
to take some time to learn stuff right
to take some time to learn stuff right
like yeah just putting together some
like yeah just putting together some
neural nuts is easy enough but um like
neural nuts is easy enough but um like
there's a lot of subtlety and stuff that
there's a lot of subtlety and stuff that
takes time to
learn like the stuff you can see me
learn like the stuff you can see me
building right here is kind of
building right here is kind of
nitty-gritty right like this is well a
nitty-gritty right like this is well a
lot of my work is kind of fun to watch
lot of my work is kind of fun to watch
this is incredibly boring I'm well aware
this is incredibly boring I'm well aware
um but it's very important because this
um but it's very important because this
is the this is how people will use this
is the this is how people will use this
Library it is like the demo over
Library it is like the demo over
everything and keeping this simple and
everything and keeping this simple and
easy to use is very very important so
easy to use is very very important so
you know I put in the work in order to
you know I put in the work in order to
do that I've Rewritten this stupid
do that I've Rewritten this stupid
config system like four times just
config system like four times just
trying to make it
better for
uh let's see if this does anything so if
uh let's see if this does anything so if
I do
train yeah sure thing best of luck to
train yeah sure thing best of luck to
you as well
does this
work oh wait we might get something cool
here yeah yeah we get something cool
here yeah yeah we get something cool
here I can tell already
so oh it didn't run for long enough okay
so oh it didn't run for long enough okay
so I'll have to run it for longer but
so I'll have to run it for longer but
we're going to have something really
we're going to have something really
cool to look
at okay so yeah if I go to uh if I just
at okay so yeah if I go to uh if I just
make
make
this this run for way
longer I'm going to say that this is
longer I'm going to say that this is
going to run for a long time and I'm
going to run for a long time and I'm
going to do every 10 frames we're going
going to do every 10 frames we're going
to render
it we should be able to watch the agents
it we should be able to watch the agents
learning to group up which will be
learning to group up which will be
really fun
really fun
you see all these clusters
forming this is exactly what I wanted I
forming this is exactly what I wanted I
mean they could be a little bit more
mean they could be a little bit more
intentional about it but like you can
intentional about it but like you can
see that the Clusters whenever they run
see that the Clusters whenever they run
into each other watch these are going to
into each other watch these are going to
snap together boom snaps together here
snap together boom snaps together here
so essentially you have a bunch of
so essentially you have a bunch of
clusters that are like wandering around
clusters that are like wandering around
looking for other clusters and doing
looking for other clusters and doing
hierarchical merging really cool to see
hierarchical merging really cool to see
um now they don't all just merge uh
um now they don't all just merge uh
because agents will respawn randomly so
because agents will respawn randomly so
they're always going to be some free
they're always going to be some free
agents around but this is still really
agents around but this is still really
cool to
see little tiny bit of a directional
see little tiny bit of a directional
bias I can tell they're going this way a
bias I can tell they're going this way a
little bit more
little bit more
right not huge though did these
right not huge though did these
merge no they can't see very far is the
merge no they can't see very far is the
big limitation but you get some big
big limitation but you get some big
clusters these guys
nope you get some big clusters this is
nope you get some big clusters this is
really nice like you can zoom in and see
really nice like you can zoom in and see
that there are you know groups of like
that there are you know groups of like
10 agents or whatever wandering around
together and this is Rend rendering only
together and this is Rend rendering only
one tenth of the
one tenth of the
frames I like this as a baseline
frames I like this as a baseline
environment it's purely Cooperative has
environment it's purely Cooperative has
a bunch of agents and it's kind of cool
let's see how well the other ones did
PR do pre and
forging uh Let's
forging uh Let's
do let's check out the forging one
next oh yeah I forgot it's really easy
next oh yeah I forgot it's really easy
to just check them all out because we
to just check them all out because we
can literally just change this and it'll
can literally just change this and it'll
download them for me that's
nice they eat through a lot of stuff now
nice they eat through a lot of stuff now
there is a little bit of a directional
there is a little bit of a directional
bias
right but they seem very efficient at
right but they seem very efficient at
eating eating through food
you can see they cut big swaths and
everything this is a little
everything this is a little
disappointing but you know we can always
disappointing but you know we can always
train it for
train it for
longer feature request is there easy is
longer feature request is there easy is
there an easy way to support contextual
there an easy way to support contextual
mdp
mdp
training EG training an agent on
training EG training an agent on
multiple randomly seated
multiple randomly seated
instances of the same
instances of the same
environment this depends do you want to
environment this depends do you want to
train on the same seed on different
train on the same seed on different
seeds at the same time or do you want to
seeds at the same time or do you want to
run different experiments so that you
run different experiments so that you
can get like a a cur or so you can get a
can get like a a cur or so you can get a
confidence bound on the experimental
confidence bound on the experimental
results um because if it is the ladder
results um because if it is the ladder
that's kind of a feature for wbe and not
that's kind of a feature for wbe and not
for puffer I might be able to hack
for puffer I might be able to hack
something to be fair
something to be fair
and yeah in a vectorized fash oh uh wait
and yeah in a vectorized fash oh uh wait
so you want to run one training run so
so you want to run one training run so
you're training one network on multiple
you're training one network on multiple
different seeds of the same environment
different seeds of the same environment
is that what you want to
do cuz if that's what you want that's
do cuz if that's what you want that's
already
already
implemented yeah okay that's already
implemented yeah okay that's already
implemented um there's a seed there's a
implemented um there's a seed there's a
you you have to play with it a little
you you have to play with it a little
bit just like print out the seeds make
bit just like print out the seeds make
sure it's correct for your case but
sure it's correct for your case but
there's a a reset function that takes uh
there's a a reset function that takes uh
seeds as an argument you can pass
seeds as an argument you can pass
different seeds to each environment on
different seeds to each environment on
creation
creation
and then they will just continually give
and then they will just continually give
you different seated versions uh from
you different seated versions uh from
there so that already
works that is in fact the
default the best type of feature request
default the best type of feature request
is when the feature is already
is when the feature is already
implemented
implemented
that is the
best let's see if Predator pre is
cool
whoa okay this is running a little bit
whoa okay this is running a little bit
too fast to follow
too fast to follow
and it's very heavily directionally
and it's very heavily directionally
biased I can
biased I can
see but
see but
um let's
see very heavily directional bias
see very heavily directional bias
directionally bias but let's take a look
directionally bias but let's take a look
at this so This Is The Predator prey
at this so This Is The Predator prey
environment
you can see that they like
you can see that they like
Chase they chase the agents around
right that's pretty
cool all these little just patches
cool all these little just patches
chasing agents
chasing agents
around that's
fun which one did I miss I missed the
fun which one did I miss I missed the
puffer en right I don't know if this
puffer en right I don't know if this
puffer en works I think the puffer en is
puffer en works I think the puffer en is
hard
so you can see some agents are locked in
so you can see some agents are locked in
place on the logo I think that this is
place on the logo I think that this is
the P right
the P right
here um but you can't like they're not
here um but you can't like they're not
filling in this is p u
filling in this is p u
FF
e but you can't really see it very well
e but you can't really see it very well
uh you really want to see all the agents
uh you really want to see all the agents
going towards the center
going towards the center
here so I mean this is okay
here so I mean this is okay
like uh I mean this like you can start
like uh I mean this like you can start
to see outlines of
to see outlines of
stuff I think it'll be really cool when
stuff I think it'll be really cool when
all the agents just beine for
all the agents just beine for
it and you can really start to see the
it and you can really start to see the
uh the
logo not a total failure though not a
logo not a total failure though not a
total not a total failure
total not a total failure
well we'll work on this a little today
well we'll work on this a little today
we'll work on the config we'll work on a
we'll work on the config we'll work on a
bunch of
stuff we really want to start building
stuff we really want to start building
some more Sims
some more Sims
but yeah you can kind of see it right
but yeah you can kind of see it right
but like it's not like all the agents
but like it's not like all the agents
are just funneling towards the center in
are just funneling towards the center in
order to uh to make the logo which is
order to uh to make the logo which is
what I would like
where' my puffer Li
where' my puffer Li
go
nope do I have another window
open
open
uh
uh
uh filter
yeah okay
here's let's see these
curves it looks like they were probably
curves it looks like they were probably
getting better over time
getting better over time
slowly here's the group one the group
slowly here's the group one the group
one was getting better very slowly right
one was getting better very slowly right
uh actually the forging one seems
uh actually the forging one seems
like the forging one seems like it
like the forging one seems like it
actually just started picking up close
actually just started picking up close
to a billion and started getting way
to a billion and started getting way
better from
better from
there and then the Predator well the
there and then the Predator well the
Predator prey curve is not going to tell
Predator prey curve is not going to tell
you very much cuz it's adversarial so
you very much cuz it's adversarial so
you actually expect it to be roughly
you actually expect it to be roughly
zero until you have better ELO like
zero until you have better ELO like
evaluation stuff so I mean this is cool
evaluation stuff so I mean this is cool
um and this trains very fast I think
um and this trains very fast I think
that these were like less than 20 minute
that these were like less than 20 minute
runs each probably all four of these
runs each probably all four of these
were around an hour
were around an hour
total maybe a little more
so very computationally
efficient oh JB uh JBL I got I've got a
efficient oh JB uh JBL I got I've got a
thing for feed that I'd like some user
thing for feed that I'd like some user
feedback on I think I made this better
feedback on I think I made this better
so I don't know if you've looked at the
so I don't know if you've looked at the
demo file for 10 but like the old demo
demo file for 10 but like the old demo
file that's in 1.0 right now it's 291
file that's in 1.0 right now it's 291
lines it has this really complicated
lines it has this really complicated
yaml config loader that like essentially
yaml config loader that like essentially
implements its own inheritance in yaml
implements its own inheritance in yaml
and then it also has this huge block of
and then it also has this huge block of
ARG pars at the bottom where is
ARG pars at the bottom where is
it oh I guess I got rid of I got I got
it oh I guess I got rid of I got I got
rid of some of it from the bottom and
rid of some of it from the bottom and
there's a bunch of AR par nanigans at
there's a bunch of AR par nanigans at
the bottom still um so what I managed to
the bottom still um so what I managed to
do in the new version here that I just
do in the new version here that I just
did over the weekend I've got it down to
did over the weekend I've got it down to
like 200 lines so I cut all the config
like 200 lines so I cut all the config
Shenanigans off
Shenanigans off
and so this is the whole file now it's
and so this is the whole file now it's
just this the entirety of the config
just this the entirety of the config
like parsing is now isolated to right
like parsing is now isolated to right
here it's just uh Python's built-in
here it's just uh Python's built-in
config parser and then converting uh
config parser and then converting uh
converting to addict
converting to addict
format and then the uh the files for
format and then the uh the files for
this instead of being this giant ass
this instead of being this giant ass
config.yml which has like this pseudo
config.yml which has like this pseudo
inheritance thing built into it
inheritance thing built into it
uh what I have
is I've got these uh any files so here's
is I've got these uh any files so here's
your default
your default
config and then you can add your own
config and then you can add your own
configs for the environments that you
configs for the environments that you
want like
want like
ocean and you can just override the
ocean and you can just override the
defaults however you like here and
defaults however you like here and
specify all the supported environments
specify all the supported environments
inside of Mame and these get picked up
inside of Mame and these get picked up
for you so I think that this is simpler
for you so I think that this is simpler
I'm not positive I think this should be
I'm not positive I think this should be
easier for users though so if you want
easier for users though so if you want
to take a look at it and let me know if
to take a look at it and let me know if
it's any good feel free to do
so of course it's not fully baked yet
so of course it's not fully baked yet
right I have to fix all the bugs in it
right I have to fix all the bugs in it
cuz this is a brand new Port like a this
cuz this is a brand new Port like a this
is like a brand new config system so I'm
is like a brand new config system so I'm
going to have to fix some bugs but
going to have to fix some bugs but
hopefully conceptually it's easier
trying to think what I want to do from
trying to think what I want to do from
here for the
here for the
day there are a few routes I could
day there are a few routes I could
go I don't think I want to just like
go I don't think I want to just like
hack on the configs all day though that
hack on the configs all day though that
would probably not be a bad use of time
would probably not be a bad use of time
I want to hack on the configs a little
I want to hack on the configs a little
bit but I also want experiments on
bit but I also want experiments on
stuff um
the config side would actually make
the config side would actually make
everything easier as the
everything easier as the
thing the only thing that I have left to
thing the only thing that I have left to
do on the
do on the
grid like the grid project is I got to
grid like the grid project is I got to
run carb sweeps like better quality
run carb sweeps like better quality
sweeps per
environment just send it
environment just send it
experiment well I mean we can do that
um the thing is the experiments kind of
um the thing is the experiments kind of
just have to run so I can set them up I
just have to run so I can set them up I
can I can set them up now and I can fix
can I can set them up now and I can fix
the carbs integration with the new
the carbs integration with the new
config system so that I can do that that
config system so that I can do that that
would be a decent use of time so what I
would be a decent use of time so what I
would like to have let me give you my my
would like to have let me give you my my
vision here
vision here
for let me give you my vision for what
for let me give you my vision for what
um what I want to do with this whole new
um what I want to do with this whole new
system okay my hope for like this
system okay my hope for like this
particle n as a useful research
particle n as a useful research
library is I want to have it so that you
library is I want to have it so that you
can run a carb sweep on each of these
can run a carb sweep on each of these
individual environments
individual environments
get optimal hyperparameters so see
get optimal hyperparameters so see
exactly how good it can
exactly how good it can
be and then I want you to be able to
be and then I want you to be able to
rerun that carb Suite per environment
rerun that carb Suite per environment
with uh continuous actions and then what
with uh continuous actions and then what
I want you to basically be able to do is
I want you to basically be able to do is
see if the continuous version is
see if the continuous version is
fundamentally harder than the discrete
fundamentally harder than the discrete
version with your algorithm which would
version with your algorithm which would
mean that you have something in the
mean that you have something in the
algorithm that could be improved or if
algorithm that could be improved or if
they're they match or if you get some
they're they match or if you get some
sort of other unexpected
sort of other unexpected
result so I think that we're going to do
result so I think that we're going to do
a little bit of hybrid stuff I'm not
a little bit of hybrid stuff I'm not
just going to hack on the config I'm
just going to hack on the config I'm
going to like hack on the config for the
going to like hack on the config for the
purpose of making these experiments work
purpose of making these experiments work
I'm going to hack everything that needs
I'm going to hack everything that needs
to be on that in order to get those to
to be on that in order to get those to
work I'm going to set up a couple of
work I'm going to set up a couple of
those sweeps and then we'll go from
those sweeps and then we'll go from
there that'll probably be the most
there that'll probably be the most
interesting most interesting thing I can
interesting most interesting thing I can
do
so what do we have here
forging Predator prey group hoer and
forging Predator prey group hoer and
we're probably going to come up with
we're probably going to come up with
some limitations of this config system
some limitations of this config system
along the way that we have to hack
along the way that we have to hack
around as well uh so let's start
with let's see if we can get like a very
with let's see if we can get like a very
small
scale sweep to run
experiments let's see if
experiments let's see if
this this will run so we have got args a
this this will run so we have got args a
sweep you've got the M
sweep you've got the M
name and then when we run
training we've got train
config let's see well let's let's run
config let's see well let's let's run
this train see if that works and then
this train see if that works and then
we'll get the sweep to work
so if I run training
local okay
local okay
so this uh dict is wrong this should
be make
N Train config VC m
okay so this this train uh config here
okay so this this train uh config here
this should be args of EnV and then this
this should be args of EnV and then this
it should be EnV name I
believe and that might fix training with
believe and that might fix training with
the new config system yep we can see
the new config system yep we can see
that we have the M name up here
that we have the M name up here
correctly and it runs at the right SPS
correctly and it runs at the right SPS
um there is some sort of issue with the
um there is some sort of issue with the
model saving which is not good let's so
model saving which is not good let's so
let's fix
that config dox
ID let's see what's wrong
here the other thing I would like to
here the other thing I would like to
have which I think may or may not be
have which I think may or may not be
possible cuz I think it's just torch I'd
possible cuz I think it's just torch I'd
like these experiments to start
like these experiments to start
instantly I hate that there's like a
instantly I hate that there's like a
second or two delay um so something is
second or two delay um so something is
slow to important and I don't know what
slow to important and I don't know what
it
is okay so X byd here is none uh which
is okay so X byd here is none uh which
is not
acceptable
so what do I use as X by D right
I think I was using something before for
I think I was using something before for
x by D and I and it wasn't none so let's
x by D and I and it wasn't none so let's
figure out what that was we've got X
figure out what that was we've got X
name which is X by D these are the same
name which is X by D these are the same
thing and when we call
thing and when we call
train args n module make
train args n module make
n ar. tr. x byd equals ar. X byd
uh but where does X byd come from
uh but where does X byd come from
right maybe in the load
function I see X byd here okay
function I see X byd here okay
config ah right
config ah right
here I actually do have something that
here I actually do have something that
generates uh this
generates uh this
ID
ID
so I need this during
training
yeah so train
yeah so train
config and then we
config and then we
do oh right here args of X by D so all I
do oh right here args of X by D so all I
have to do is put
or I think I can do n
or I think I can do n
name plus Dash
name plus Dash
plus u
plus u
ID yes right
and then we import uu
ID so now when we go to create a new
ID so now when we go to create a new
training run we are if we're not using
training run we are if we're not using
WB we have a method of generating our
WB we have a method of generating our
own uh our own name for it
own uh our own name for it
let's see if that is
enough need to fix this camera as
well now it cuts off the top of my
well now it cuts off the top of my
head frame it that's
head frame it that's
better okay so this now saves model
better okay so this now saves model
correctly this saves the model
correctly this saves the model
correctly so now that training works we
correctly so now that training works we
can try
can try
sweep so this should attempt to do 10
sweep so this should attempt to do 10
short
short
runs and we'll see whether I broke it or
runs and we'll see whether I broke it or
not and clearly I
not and clearly I
did invalid hyperparameter configuration
did invalid hyperparameter configuration
train is it going to give me a
train is it going to give me a
reasonable error
reasonable error
message yes yes it
message yes yes it
is so right
here right here we're going to
get this is our sweep
config invalid hyperparameter
config invalid hyperparameter
configuration
train interesting
min
max wait so batch size has distribution
max wait so batch size has distribution
min
min
max oh and values
max oh and values
shoot I
shoot I
see The Inheritance does not work out
see The Inheritance does not work out
the way that I would have hoped
not
not
exactly I think we can work around
it we can work around
it it would be very nice to have the
it it would be very nice to have the
batch sizes be powers of two though
well this is essentially a carbs
well this is essentially a carbs
issue
issue
um yeah this is essentially a carbs
issue
issue
H I did not think of
this well
so the issue
so the issue
here is that we need to be able to
override it's overriding the whole
override it's overriding the whole
section versus individual
parameters I think I want this to be
parameters I think I want this to be
values
not yeah I want this to be a fixed set
not yeah I want this to be a fixed set
of values I want to have fixed powers of
of values I want to have fixed powers of
two so
values I was wondering when following
values I was wondering when following
the project can puffer lib do something
the project can puffer lib do something
for maoko I have not added a binding for
for maoko I have not added a binding for
maoko yet um because I've been mostly
maoko yet um because I've been mostly
doing discreet and multi- discreet like
doing discreet and multi- discreet like
complex game type Ms but the project
complex game type Ms but the project
that I'm currently in on is continuous
that I'm currently in on is continuous
control for puffer and uh essentially
control for puffer and uh essentially
once this is stable uh we will be adding
once this is stable uh we will be adding
more control ends and control and
more control ends and control and
bindings and I also have a colleague
bindings and I also have a colleague
who's returning from vacation this week
who's returning from vacation this week
who's interested in continuous control
who's interested in continuous control
so probably we'll uh be adding helping
so probably we'll uh be adding helping
add some stuff to puffer as well so
add some stuff to puffer as well so
continuous control coming very soon to
continuous control coming very soon to
puffer um it should be pretty much the
puffer um it should be pretty much the
exact same thing as for the rest of the
exact same thing as for the rest of the
environments it should just make
environments it should just make
everything that's CPU vectorized run
everything that's CPU vectorized run
really really fast and uh give you a
really really fast and uh give you a
bunch of tools to make life easier so
bunch of tools to make life easier so
yeah we'll do something for that very
soon mini batch
how fast is maoko by the
how fast is maoko by the
way do you
know is it something like remotely
know is it something like remotely
reasonable okay the sweep actually the
reasonable okay the sweep actually the
config works now so that's
nice yeah
nice yeah
I'm working on all this stuff it can
I'm working on all this stuff it can
only it just only gets done so fast
only it just only gets done so fast
right dict object has
right dict object has
no attribute Yep this is fine we expect
no attribute Yep this is fine we expect
that so we can fix some bugs here
did one be mess up my
terminal well that's not good what
happened I'm going to commit this stuff
happened I'm going to commit this stuff
up because I'm a little bit concerned as
up because I'm a little bit concerned as
to what just happened
what the
heck bind
for okay that looks like it
worked yeah that was weird
let's try this sweep
again unsupported
again unsupported
type so I'm assuming I pass bad arcs in
type so I'm assuming I pass bad arcs in
this one
and it wand b args m
and it wand b args m
Name ID equal args Mame
ID that looks fine doesn't
it do I get any better error message
it do I get any better error message
than that
it's in the
it's in the
inette r of X by
inette r of X by
D
D
so
so
why why does this not
work these args are fine
end name is not fine so I passed the
end name is not fine so I passed the
wrong thing to sweep I guess
right wait
right wait
args and
args and
module now this is should
module now this is should
be wait
args and name
something's
weird make end policy
weird make end policy
class we just want this stuff
right args M name make end policy class
right args M name make end policy class
RN class
RN class
yeah try this
puffer lib to the
puffer lib to the
Moon well for puffer lib to go to the
Moon well for puffer lib to go to the
Moon uh I'm going to need more people to
Moon uh I'm going to need more people to
follow the Twitter so I can promote this
follow the Twitter so I can promote this
stuff more easily almost at
stuff more easily almost at
4K and more importantly to Star the
4K and more importantly to Star the
puffer you know feed the puffer some
puffer you know feed the puffer some
Stars helps out a whole
Stars helps out a whole
ton and then RL will be ex
ton and then RL will be ex
ized exorcised with an
O as in ritually purged of the demons
O as in ritually purged of the demons
that possess
it okay let's see uh mini batch signs
it okay let's see uh mini batch signs
must be divisible by BPT
must be divisible by BPT
Horizon
really
really
well I suppose we can uh edit some stuff
well I suppose we can uh edit some stuff
here
this can just be values one two
this can just be values one two
48 we'll have to figure this out with
carbs what is the end goal with puffer
carbs what is the end goal with puffer
lib I watched your thesis on multi-agent
lib I watched your thesis on multi-agent
Ms I'm very serious when I mean exercise
Ms I'm very serious when I mean exercise
reinforcement learning I want to make
reinforcement learning I want to make
this a stable use like a stable field
this a stable use like a stable field
where we can build stuff that is and
where we can build stuff that is and
works um that includes your standard
works um that includes your standard
environments that includes industry Sims
environments that includes industry Sims
that includes like complex multi-agent
that includes like complex multi-agent
stuff complex games all of this is going
stuff complex games all of this is going
to be made brain dead simple and
to be made brain dead simple and
easy that and we're going to have
easy that and we're going to have
techniques for stupidly high performance
techniques for stupidly high performance
simulation so that we can do our
simulation so that we can do our
research very very
research very very
fast these are generally the
fast these are generally the
goals I found some graph of ant EG
goals I found some graph of ant EG
stepping with 6K per
stepping with 6K per
second is that on the whole machine on a
second is that on the whole machine on a
GPU or on like one core
um we're going to need to figure stuff
um we're going to need to figure stuff
out with that so to give you some
out with that so to give you some
numbers here right I can get Atari
numbers here right I can get Atari
training at 16k right now I think I can
training at 16k right now I think I can
do way better than that once I mess with
do way better than that once I mess with
the some of the bindings proen is really
the some of the bindings proen is really
slow at like 3K even though though I
slow at like 3K even though though I
vectorize it at a million per second
vectorize it at a million per second
because um the the network architecture
because um the the network architecture
used in proin is really dumb um but I
used in proin is really dumb um but I
think that that can be made very fast uh
think that that can be made very fast uh
then there's stuff like Pokemon that
then there's stuff like Pokemon that
we're doing where it's like it does not
we're doing where it's like it does not
go above 7K steps per second period um
go above 7K steps per second period um
because just the en is
because just the en is
slow I'm I'm curious to see how much
slow I'm I'm curious to see how much
faster we can make it they integrate
faster we can make it they integrate
xlaa at the moment while doing the whole
xlaa at the moment while doing the whole
physics on GPU oh jeez 6K with xla is
physics on GPU oh jeez 6K with xla is
like painful painfully
like painful painfully
slow it's so hard to do research when
slow it's so hard to do research when
your M's are just that slow like the
your M's are just that slow like the
stuff I'm working on at the moment it
stuff I'm working on at the moment it
runs at millions of steps per second per
runs at millions of steps per second per
CPU core and trains at a million steps
CPU core and trains at a million steps
per second this is what we need for RL
per second this is what we need for RL
now when I can figure that out for
now when I can figure that out for
robotics we'll think about that
robotics we'll think about that
I think this is only
I think this is only
CPU you say they're doing the physics on
CPU you say they're doing the physics on
the
the
GPU look 6K per seconds per core is
GPU look 6K per seconds per core is
actually kind of fine we can make
actually kind of fine we can make
something happen with that
something happen with that
um but at the very least we want like
um but at the very least we want like
you know High tens of thousands train in
you know High tens of thousands train in
order to do something reasonable now of
order to do something reasonable now of
course I can just add The Binding it'll
course I can just add The Binding it'll
be faster than uh you know it'll be
be faster than uh you know it'll be
faster than it is currently I can
faster than it is currently I can
totally do
totally do
that but uh we generally we need much
that but uh we generally we need much
much faster Ms for RL to make
progress do you think an actual AGI
progress do you think an actual AGI
needs to be RL based and not llm based
needs to be RL based and not llm based
where it takes in the five senses as we
where it takes in the five senses as we
do uh I think that the most likely the
do uh I think that the most likely the
most likely scenario is that you need
most likely scenario is that you need
both I think it's really dumb to be
both I think it's really dumb to be
running a giant super expensive model
running a giant super expensive model
over everything so like anytime you need
over everything so like anytime you need
to do anything you run this giant super
to do anything you run this giant super
expensive model I think that RL is going
expensive model I think that RL is going
to have a very nice place for uh lower
to have a very nice place for uh lower
level stuff as well as for interactivity
level stuff as well as for interactivity
learning from like fix Sims and stuff um
learning from like fix Sims and stuff um
I think it's like very very likely RL is
I think it's like very very likely RL is
going to feature in some way for
that my own uh my own motivations around
that my own uh my own motivations around
doing all this stuff are very much
doing all this stuff are very much
long-term AI
long-term AI
progress for
sure looat cannot be interpreted as an
sure looat cannot be interpreted as an
integer update
EPO I see
EPO I see
so this one this is kind of obnoxious
so this one this is kind of obnoxious
here with the any files
here with the any files
it interprets it as a float by
default how do I want to handle
this maybe Wan just has a setting
maybe w b just has a setting for this do
maybe w b just has a setting for this do
you think now
you think now
WB they have a
setting this page is blindingly bright
uh sweep config
template wait min max Q is Q
quantization Q looks like quantization
quantization Q looks like quantization
doesn't
doesn't
it or is this different q log un form
it or is this different q log un form
values
why don't they have docks on this
why don't they have docks on this
stuff oh wait maybe they
do quantization step sizes for quantized
do quantization step sizes for quantized
hyper
parameters will this convert
parameters will this convert
to an in for me as the question
int uniform distributed oh do they have
int uniform distributed oh do they have
an INT uniform
an INT uniform
now
wait give me
wait give me
modes where does it have the
modes
modes
parameters
distribution ah
distribution ah
int
uniform
wait they got
wait they got
values wait let me see if there's a way
values wait let me see if there's a way
that we can do this so this they have
that we can do this so this they have
constant they've
got
categorical in
categorical in
uniform Q uniform
log uniform log uniform
values does any of this help
values does any of this help
me if I have
like distribution
categorical which parameter was this
categorical which parameter was this
that I was having trouble with the
that I was having trouble with the
update
EPO I might be able to do this in
EPO I might be able to do this in
uniform right
uniform right
so if I do like int uniform
so if I do like int uniform
right does this do it for
me will that just
quantize ah that
quantize ah that
does
does
perfect so let's see if this actually
perfect so let's see if this actually
saves
correctly uh I can see
correctly uh I can see
that this is not training
that this is not training
for right so this total time step sweep
for right so this total time step sweep
pram is not going to be
pram is not going to be
good um by default I think we need to
good um by default I think we need to
get rid of
get rid of
that let's see if this works
build the sample metric that's just from
build the sample metric that's just from
the old dead process
okay there you go that's one
okay there you go that's one
experiment and it only takes a few
experiment and it only takes a few
seconds to sync and it'll do the second
experiment and we should actually see
experiment and we should actually see
this in our logs here
this in our logs here
right sweeps
right sweeps
maybe yeah
maybe yeah
so we actually we have this working
so we actually we have this working
now so we fix
now so we fix
sweeps with uh the new config system now
sweeps with uh the new config system now
what we need to do is we need to
what we need to do is we need to
fix carb sweeps which is going to be a
fix carb sweeps which is going to be a
little bit
harder
harder
um I'm assuming it's going to take a
um I'm assuming it's going to take a
while for w to be to think about like
while for w to be to think about like
doing this natively so what we have for
doing this natively so what we have for
now is we have carbs
oh this might have been the file that I
oh this might have been the file that I
I thought I'd forgotten to commit yeah
I thought I'd forgotten to commit yeah
let me pull let me grab my laptop I have
let me pull let me grab my laptop I have
to commit this file
okay there we go
so this now
so this now
takes we're going to have to match the
takes we're going to have to match the
signature
probably going to
need this type of a thing
need this type of a thing
here uh and
then
sweep AR a sweep project is AR a one B
sweep AR a sweep project is AR a one B
project right Yep this is
project right Yep this is
correct X by D like
this
this
oh uh hold on so project yeah project is
oh uh hold on so project yeah project is
carbs because we're going to do this
carbs because we're going to do this
goes in a separate project folder for
goes in a separate project folder for
now until it's
now until it's
stable init one B takes ARS of X by D
and it w b should be somewhere down here
right uh I don't like that that's kind
right uh I don't like that that's kind
of weird the way that this works I think
of weird the way that this works I think
they should just be wandb equals an N
they should just be wandb equals an N
wandb right args M
wandb right args M
name yeah
now does this does this function need to
now does this does this function need to
be a local like
be a local like
this if I give it space WB pams mid Max
this if I give it space WB pams mid Max
is there anything else I'm using in here
is there anything else I'm using in here
that's not
that's not
defined onb pams onb
defined onb pams onb
Pam search center I think not I think I
Pam search center I think not I think I
can move this function to a more
can move this function to a more
reasonable
location like
location like
um I don't know down here right
move that to
here put this helper function
here put this helper function
down
here uh and I can put all these Imports
here uh and I can put all these Imports
now up at the top since they don't get
now up at the top since they don't get
used unless you import this cars file so
used unless you import this cars file so
we can clean this up quite a
we can clean this up quite a
bit numpy
bit numpy
Mathis we'll do this logger do we use
Mathis we'll do this logger do we use
logger uh I don't think I actually care
logger uh I don't think I actually care
about this but we'll keep it in here for
now and then there's like the policy
now and then there's like the policy
class RNN class thing I think that
class RNN class thing I think that
that's from the updated Train sign
yeah so I need to go back and get
yeah so I need to go back and get
the the train signature which should be
the the train signature which should be
in
in
Main and where I call train this now
Main and where I call train this now
actually needs to be
actually needs to be
stats
yeah yeah this is good so we update
yeah yeah this is good so we update
the the signature here and now we can
the the signature here and now we can
update the function signature at the top
update the function signature at the top
we'll keep this
one uh now we we update the type of args
one uh now we we update the type of args
because it's now everything is now a
because it's now everything is now a
dictionary which is
dictionary which is
easy and then it
sweep you sweep
sweep you sweep
parameters args a sweep
parameters args a sweep
parameters right and then we do train
parameters right and then we do train
params is going to
params is going to
be sweep parameters of
be sweep parameters of
train end parameters and policy
train end parameters and policy
parameters
right that sounds good uh I think we can
right that sounds good uh I think we can
just get rid of this logger we really
just get rid of this logger we really
don't need it
don't need it
right yeah we don't need this
logger okay and now we have
logger okay and now we have
all the carbs prams here that we will
all the carbs prams here that we will
mess with in a
mess with in a
bit uh init want be okay so we do not
bit uh init want be okay so we do not
have this init function that's actually
have this init function that's actually
kind of inconvenient because we need
kind of inconvenient because we need
this from puffer
this from puffer
lib uh which maybe a circular import
right I could technically make like a
WB
WB
file or
file or
whatever do I want to do
whatever do I want to do
that would make the demo shorter
but not
really I'm going to just go grab it from
really I'm going to just go grab it from
demo for for now
I'll figure out how to avoid duplicating
I'll figure out how to avoid duplicating
it in a
bit okay so now we have an IT one
bit okay so now we have an IT one
B we've got all this stuff and let's
B we've got all this stuff and let's
just make sure we haven't screwed up
just make sure we haven't screwed up
anything really
obvious config
train uh we no longer need so this here
train uh we no longer need so this here
this gets simplified because this is now
this gets simplified because this is now
a dictionary so this is just args of
a dictionary so this is just args of
train uh
train uh
update this is
update this is
fine and then ARS oops
what the
heck
policy CNN
channels yeah that's way
easier oh I'm going to have so many
easier oh I'm going to have so many
circular import problems with
circular import problems with
this because I put this in a different
this because I put this in a different
file right
um yeah that's
um yeah that's
obnoxious so I wanted to put the sweep
obnoxious so I wanted to put the sweep
carbs into a different file but really
carbs into a different file but really
this is a main thing it's like a main
this is a main thing it's like a main
file
thing so I guess I have to put this back
thing so I guess I have to put this back
if I want it
huh well I'll put it in the main file
huh well I'll put it in the main file
then screw it
it's so much annoying code to put in the
it's so much annoying code to put in the
main
main
file but carbs is worth
file but carbs is worth
it carbs is
amazing we would just put this
amazing we would just put this
here and uh we
here and uh we
will we'll put the Imports kind of
will we'll put the Imports kind of
obnoxiously like we had
obnoxiously like we had
before Oh this is why why I did this
before Oh this is why why I did this
before it's I know why I Define these as
before it's I know why I Define these as
locals right I did these as uh as locals
locals right I did these as uh as locals
before so that I wouldn't have to screw
before so that I wouldn't have to screw
with the Imports so we'll just do it
with the Imports so we'll just do it
again like that it's
fine I mean this was this is a very I'm
fine I mean this was this is a very I'm
fine doing it this way because this is a
fine doing it this way because this is a
temporary issue um because when Wy adds
temporary issue um because when Wy adds
us native
us native
support then we will uh we won't have to
support then we will uh we won't have to
do this anymore and like we'll literally
do this anymore and like we'll literally
just be able to delete all this and this
just be able to delete all this and this
code will just be part of uh the other
code will just be part of uh the other
sweeps config which will be very
sweeps config which will be very
nice I have numpy in here already
nice I have numpy in here already
no numpy
no numpy
sis I guess I don't have
sis I guess I don't have
CIS okay
uh I guess we have to start doing like
uh I guess we have to start doing like
this gross debugging where we
this gross debugging where we
do does it sweep
carbs with a dash I do like this new
carbs with a dash I do like this new
menu that we have here like this is
menu that we have here like this is
Pretty Simple and Clean we just get like
Pretty Simple and Clean we just get like
this very easy usage
this very easy usage
error no module named carbs
error no module named carbs
enough carbs on
enough carbs on
this h
oops
nope carbs is missing
nope carbs is missing
one positional ARG
one positional ARG
really M name make M policy
really M name make M policy
class AR M name U
class AR M name U
make and policy class yeah just to
make and policy class yeah just to
update the
update the
signature we also don't need this import
anymore key error n
uh we're you going to just
do hey another scon question have you
do hey another scon question have you
found any bottlenecks or on using scon
found any bottlenecks or on using scon
for simulation when it's relying on a
for simulation when it's relying on a
Model maybe a pie torch or X GB for
prediction that question seems kind of
prediction that question seems kind of
backwards to me
backwards to me
so the way I think about it right is
so the way I think about it right is
like you make your your sim is in scyon
like you make your your sim is in scyon
it's not relying on a prediction it's
it's not relying on a prediction it's
the other way around right like your
the other way around right like your
environment is supplying data to your
environment is supplying data to your
model which is then returning actions
model which is then returning actions
and the actions are used to update the
and the actions are used to update the
environment and return new observations
environment and return new observations
so if your model is slow it is
so if your model is slow it is
essentially doesn't matter how fast your
essentially doesn't matter how fast your
environment is because um you're always
environment is because um you're always
going to be bottlenecked on the GPU
going to be bottlenecked on the GPU
right so not every environment
right so not every environment
necessarily needs to be crazy fast um
necessarily needs to be crazy fast um
but the way I'm building stuff at the
but the way I'm building stuff at the
moment is I'm trying to build a test
moment is I'm trying to build a test
Suite of environments of a variety of
Suite of environments of a variety of
different complexities that are fast and
different complexities that are fast and
that can be trained with small models so
that can be trained with small models so
that we can iterate very quickly on the
that we can iterate very quickly on the
research side um um it also you'd be
research side um um it also you'd be
surprised how well small models can do
surprised how well small models can do
when you just have tons of data right
when you just have tons of data right
like if I'm training at a million steps
like if I'm training at a million steps
per second I kind of just have so much
per second I kind of just have so much
data
data
that it doesn't really matter how much
that it doesn't really matter how much
I'm losing out by having a slightly you
I'm losing out by having a slightly you
know smaller model and actually the
know smaller model and actually the
models like you can get up to you can
models like you can get up to you can
get kind of reasonable siiz stuff that
get kind of reasonable siiz stuff that
still runs hundreds of thousands of
still runs hundreds of thousands of
steps per second at the very least maybe
steps per second at the very least maybe
not million like I use for the really
not million like I use for the really
simple M's but hundreds of thousands is
simple M's but hundreds of thousands is
very achievable like 300,000 maybe on
very achievable like 300,000 maybe on
one
one
GPU uh also this is going to scale
GPU uh also this is going to scale
really well for
really well for
multi-gpu because like let's say I have
multi-gpu because like let's say I have
a box with 8800s or 800s on it and you
a box with 8800s or 800s on it and you
only have the CPU cores that are on that
only have the CPU cores that are on that
machine right well if I make the
machine right well if I make the
environment like 14 million steps per
environment like 14 million steps per
second per core then the cores on the
second per core then the cores on the
machine are going to be able to provide
machine are going to be able to provide
data to those gpus that you don't need
data to those gpus that you don't need
to go off
to go off
device so there are a lot of advantages
device so there are a lot of advantages
to
that
oops that's just a bad
import
mhm
for for
I guess I didn't add Enver policy to the
I guess I didn't add Enver policy to the
new sweep configs yet which is fine
new sweep configs yet which is fine
we'll just do this we'll just do these
we'll just do this we'll just do these
ones for now
he error men
H oh well I have different distributions
H oh well I have different distributions
now that I have to support
now that I have to support
right that's annoying
that might be enough
I don't know who made the Izzy cookies
I don't know who made the Izzy cookies
today but they're really
good
good
oh duh
probably shouldn't use function names as
probably shouldn't use function names as
uh also variable names right huh
looks
good
good
assert M Max
really what parameter is freaking
logit
gamma wait
what gamma's logic right
oh I guess I did specify that weird
huh yeah so we'll we'll edit the config
huh yeah so we'll we'll edit the config
for that we've been meaning to do that
anyways so gamma is
right wait no gamma is
right wait no gamma is
fine I guess it's probably in Ocean
fine I guess it's probably in Ocean
right config ocean grid
oh no I don't have gamma I don't have a
oh no I don't have gamma I don't have a
screw gamma value in
here that's
here that's
weird what's going on
I swear this chocolate chip cookie has
I swear this chocolate chip cookie has
coffee grounds in it
gamma this is totally fine
gamma this is totally fine
right it's got a Min it's got a Max
why is this not work
why is this not work
right it should be totally
fine Ma Max is none for some reason
oh just a
typo and how far do we get
now
H that's pretty good
H that's pretty good
I mean it fails
I mean it fails
but it fails
but it fails
for a very easy and fixable thing
right let's see if this runs
dict has no attribute
train let's see if I can see where that
train let's see if I can see where that
error is
it's probably underneath uh here
right
so right
here when I try to save
here when I try to save
it right
ARS of n.
dict policy
dict policy
RNN very
nice now this closest power
nice now this closest power
function I think I already moved this
function I think I already moved this
didn't I
yeah I have the closest power here we
yeah I have the closest power here we
can get rid of
these let's see if this now
runs e
what
what
failed no such file or
failed no such file or
directory well we should uh we should
directory well we should uh we should
change that
if you open a file as
a I think that should be better right
we'll see if this saves the hyper
we'll see if this saves the hyper
parameters to that
file no suchar file or
directory okay what is uh
directory okay what is uh
well that's
weird we have hypers in here
right yeah we've got two different runs
right yeah we've got two different runs
worth of hypers in
worth of hypers in
here so what is the file or directory
here so what is the file or directory
that does not
that does not
exist I don't actually
exist I don't actually
know oh it's the carbs one right
yeah yeah yeah the carbs one has like
um let's
do I think it's checkpoints
do I think it's checkpoints
right so
oops points
this doesn't need to be in the sub
this doesn't need to be in the sub
process right we can
do I mean we can do this at the top even
do I mean we can do this at the top even
can't
we yeah let's do that there and actually
we yeah let's do that there and actually
the
the
hypers text let's do that at the top as
hypers text let's do that at the top as
well
well
well just like the less stuff that goes
well just like the less stuff that goes
in stupid sub processes right the
in stupid sub processes right the
better General roll of thumb but as
better General roll of thumb but as
little as possible inside of
little as possible inside of
subprocesses unless you have a reason to
subprocesses unless you have a reason to
do
so now can we maybe get a complete
run yeah let's make this really good
run yeah let's make this really good
today let's make like this carbs
today let's make like this carbs
integration really
solid okay so right
there success no errors
synced and that's the next one
synced and that's the next one
perfect so no
perfect so no
errors um I actually think we're going
errors um I actually think we're going
to
to
do yeah this is fine
so now that we have this we can think
so now that we have this we can think
about what parameters we want to have
about what parameters we want to have
integrated and how nice we want to have
integrated and how nice we want to have
everything uh
everything uh
functioning there a few different things
functioning there a few different things
I would like to have working
I would like to have working
here uh the big one would be if I can
here uh the big one would be if I can
get these
get these
charts to be
correct so if we look at this run count
correct so if we look at this run count
here
and like we look at the most
recent hyper prams
recent hyper prams
right we can see that we
get update EPO equal to
get update EPO equal to
two could be either of
two could be either of
these 8192 mini batch is that
these 8192 mini batch is that
here no so there's no 8192 mini B so
here no so there's no 8192 mini B so
what's happening here
what's happening here
is wandb is not uh actually taking the
is wandb is not uh actually taking the
carb suggested parameters and updating
carb suggested parameters and updating
the graphs with them be really nice if
the graphs with them be really nice if
we could get accurate graphs at least
we could get accurate graphs at least
this one the other ones like this one
this one the other ones like this one
will be correct and these two will not
will be correct and these two will not
be so we'll figure that out real
be so we'll figure that out real
quick anything cool Happening
quick anything cool Happening
Here
Here
nah this is going nicely though
so where can we uh where should we look
so where can we uh where should we look
for
for
this I think that we would look at
this I think that we would look at
updating the wand B
updating the wand B
pams
yeah so
the issue is that right here we knit
the issue is that right here we knit
wand B right and then we get the carb
suggestions I can't understand anything
suggestions I can't understand anything
but best of luck to you your way I mean
but best of luck to you your way I mean
this is what I'm doing here is just dumb
this is what I'm doing here is just dumb
systems Integrations
systems Integrations
um there's really
um there's really
nothing smart going on this is just
nothing smart going on this is just
having spent a bunch of time hacking on
having spent a bunch of time hacking on
this specific annoying
this specific annoying
API so what I'm trying to do
API so what I'm trying to do
here high
here high
level um I am trying to get it so that
level um I am trying to get it so that
you can run lots of different
you can run lots of different
experiments uh one after another and get
experiments uh one after another and get
graphs that tell you how those various
graphs that tell you how those various
experiments have gone and kind of do
experiments have gone and kind of do
automatic analysis for you so that you
automatic analysis for you so that you
can find the best experiment settings
can find the best experiment settings
for training so I have this stack that
for training so I have this stack that
gives you really really fast simulation
gives you really really fast simulation
really really fast training but I still
really really fast training but I still
need the thing to manage all these
need the thing to manage all these
experiments and launch them and give you
experiments and launch them and give you
those results so I have that working
those results so I have that working
already but there's a better system for
already but there's a better system for
running all those experiments that I'm
running all those experiments that I'm
trying to integrate called carbs and the
trying to integrate called carbs and the
difficulty is it is not natively uh
difficulty is it is not natively uh
compatible with w be which is the
compatible with w be which is the
logging and graphing software that
logging and graphing software that
everybody
everybody
uses um and I'm currently trying to get
uses um and I'm currently trying to get
it so that I can get the data from this
it so that I can get the data from this
experiment running algorithm into w b
experiment running algorithm into w b
that is what I'm trying to do which is
that is what I'm trying to do which is
kind of boring if you think about it but
kind of boring if you think about it but
it's important because if I get this
it's important because if I get this
working it's going to make it really
working it's going to make it really
easy to run all these experiments for
easy to run all these experiments for
people
so the thing is it looks like right here
so the thing is it looks like right here
it looks like this should
work this one beat ig.
Trin wb.
Trin wb.
aent let me see if I can
find maybe I can just go find their
find maybe I can just go find their
source is wanb on GitHub
yeah so this is their code for this
yeah so this is their code for this
takes a sweep ID a project and a bunch
takes a sweep ID a project and a bunch
of other
of other
stuff uh it starts this
Q it's got a bunch of API
Shenanigans par sweep by day
jeez o it's
jeez o it's
python yeah I mean pretty much
python yeah I mean pretty much
everything has a top layer in Python
everything has a top layer in Python
these days
these days
right it's kind of no reason not to it's
right it's kind of no reason not to it's
easy you can have your perf critical
easy you can have your perf critical
stuff being something
stuff being something
else the puffer stack is python Plus
else the puffer stack is python Plus
scon scon for perf critical and python
scon scon for perf critical and python
for the normal
stuff as simple as that is it gives you
stuff as simple as that is it gives you
C
speed I'd really like to know how they
speed I'd really like to know how they
set their
set their
parameters so cuz I call this wb. aent
parameters so cuz I call this wb. aent
function which I assume makes
function which I assume makes
this agent right
here well if I look at the underscore
here well if I look at the underscore
net I bet it'll be in here
right
agent they have agent in here
uh from wb. WB agent import
uh from wb. WB agent import
agent so
WB agent oh okay so it's here this is
WB agent oh okay so it's here this is
not what I was expecting
not what I was expecting
um so this is slightly different code so
um so this is slightly different code so
here we have the agent
here we have the agent
class self API Q
sweep
sweep
ID wait
ID wait
API Q sweep ID function okay so this is
API Q sweep ID function okay so this is
the function that you pass to
the function that you pass to
it
um is
flapping
flapping
uh okay
sweep
sweep
ID registers this
Agent
Man there a lot of stuff in
here can I just figure out how they set
here can I just figure out how they set
the config for
the config for
this save config file from d
this save config file from d
but this is just saving to file I want
but this is just saving to file I want
to see where they upload it to the
API agent
API run agent
is there just like a way to hard update
is there just like a way to hard update
the config of a w b
the config of a w b
run
like I know is that a
thing uh oh
really well I have a it's a current
run wb. config makes it easy to analyze
run wb. config makes it easy to analyze
your
your
experiments so set up set configuration
experiments so set up set configuration
at
at
initialization set config with
initialization set config with
arars set configuration throughout your
arars set configuration throughout your
script
according to this you're supposed to be
according to this you're supposed to be
able to update your
config so according to this you are
config so according to this you are
actually supposed to be able to do
this can overwrite
automatically I think this says that
automatically I think this says that
you're supposed to be able to do it
is it possible that they
like hold
on web.config dotra is equal to mini
on web.config dotra is equal to mini
batch
size
4192 it doesn't look like it's
4192 it doesn't look like it's
updating let me just clear this file
out and let me just run this one more
out and let me just run this one more
time just to make
time just to make
sure that this is not updating like the
sure that this is not updating like the
way I think it should be
and yeah that's
and yeah that's
it so if I open up hypers do text I can
it so if I open up hypers do text I can
see what it should it's supposed to
be uh sweeps
what why did this not initialize me a
what why did this not initialize me a
sweep am I capped on data or something
sweep am I capped on data or something
no oh because I see I need to be in the
no oh because I see I need to be in the
carbs repo yeah uh so here we have
carbs repo yeah uh so here we have
sweeps one minute
ago
ago
and this is the first one right here
and this is the first one right here
that saved the conf
that saved the conf
configuration so let's see if this looks
configuration so let's see if this looks
good uh we have batch size of
good uh we have batch size of
131k which is not what we see
here we have mini batch size of
here we have mini batch size of
8192 which is not what we see here okay
8192 which is not what we see here okay
so something is
so something is
weird if I open up this foraging run I
weird if I open up this foraging run I
have
there a lot of stuff in here actually
there a lot of stuff in here actually
all of a
all of a
sudden uh so base yeah this
is
huh
okay M doesn't have any Keys policy
okay M doesn't have any Keys policy
doesn't have any Keys sweep gets
doesn't have any Keys sweep gets
some keys
here yeah and then we can see here we
here yeah and then we can see here we
have the parameter keys right for our
have the parameter keys right for our
sweep uh and then now we have
sweep uh and then now we have
train and inside of train we have
131k wait wait we
131k wait wait we
have train size is
where' this
go yeah
go yeah
131k mini batch size is
131k mini batch size is
wrong which is
8192 um update
8192 um update
EPO well well bptt Horizon is
EPO well well bptt Horizon is
8 which is not the same okay so this
8 which is not the same okay so this
does not seem to be getting up updated
does not seem to be getting up updated
correctly why would that be the
case in the case of mini batch size
case in the case of mini batch size
right I see it right
here W.C config is closest
power and then what do I I do args of
power and then what do I I do args of
train
oh wait maybe that's the wrong thing
oh wait maybe that's the wrong thing
right wait args of train.
right wait args of train.
update
update
w.on config
w.on config
dotra so I'm actually setting the train
dotra so I'm actually setting the train
deck to be the same as all the stuff I
deck to be the same as all the stuff I
just set this
to so it's just not synchronizing
let's see how they say that you can do
this set configuration throughout your
this set configuration throughout your
SHP okay so they
SHP okay so they
say they say you don't even need to do
say they say you don't even need to do
run. config they say it's just wb.
run. config they say it's just wb.
config
here M.C config do
here M.C config do
update and they use update as well which
update and they use update as well which
is the same way that I did it they say
is the same way that I did it they say
you can either do individual elements or
you can either do individual elements or
yeah so according to them this is
yeah so according to them this is
supposed to
work why doesn't
work why doesn't
it
um 1 b equals init wand B let me make
um 1 b equals init wand B let me make
sure init yeah init w b just
sure init yeah init w b just
returns w
b what if I wait wait wait what if I cuz
b what if I wait wait wait what if I cuz
what if I kill this does this change
what if I kill this does this change
anything if I don't have it reimported
anything if I don't have it reimported
in the sub
in the sub
process maybe it's something weird like
process maybe it's something weird like
that
long shot but we're going to try
long shot but we're going to try
it it'd be so nice to have these graphs
it it'd be so nice to have these graphs
working
sync forging run
okay so what we have here we have our
hypers
hypers
uh if we check out our latest
uh if we check out our latest
sweep there's a small chance that it's
sweep there's a small chance that it's
now correct
okay
okay
so according to this we
so according to this we
have batch size of 131k which is not on
here wait what why does this go
here wait what why does this go
60,000
wait
wait
huh what is this AIS
excuse
excuse
me wait 20, 4,000
z
z
uh oh it's truncating the Damned
uh oh it's truncating the Damned
axis
axis
okay so what does this say this
okay so what does this say this
says train batch size
is 131k what did I say it
is 131k what did I say it
was 13 so neither of these are
was 13 so neither of these are
131k and then the mini batch size there
131k and then the mini batch size there
is one that's
is one that's
8,000 uh BPT Horizon
8,000 uh BPT Horizon
of8 where is that there is one that's
of8 where is that there is one that's
eight here
wait but there's the wrong the other
wait but there's the wrong the other
stuff is wrong
stuff is wrong
right Max grad
right Max grad
Norm yeah is off so all these prams are
Norm yeah is off so all these prams are
not what they're supposed to be let's
not what they're supposed to be let's
see and the batch size specifically is
see and the batch size specifically is
the giveaway because that should have
the giveaway because that should have
been updated
manually but I have suggestion uu ID in
manually but I have suggestion uu ID in
here here
here here
wait how is suggestion YuYu
wait how is suggestion YuYu
ID oh because it's it's just in the uh
ID oh because it's it's just in the uh
the hypers here it's not in uh wanb
the hypers here it's not in uh wanb
right I check foraging here and
overview yeah
overview yeah
260 same as
before Max Norma 4 is wrong because I
before Max Norma 4 is wrong because I
have much lower Max gra yes so this is
have much lower Max gra yes so this is
not getting updated
not getting updated
whatsoever
um it's going to be easier to tell if I
um it's going to be easier to tell if I
can just add an extra key
right let's try that
right let's try that
next let's just like add like
next let's just like add like
uh
uh
wb. config
wb. config
Trin uh
Trin uh
Fu equals
Fu equals
bar okay and let's see if that does
bar okay and let's see if that does
anything you know maybe there's some
anything you know maybe there's some
weird some weird thing about modifying
weird some weird thing about modifying
existing parameters
failed
what are we dropping frames
what are we dropping frames
no zero dropped
frames
okay I just saw it get logged
if we check
if we check
train yeah that key is not
present
um so that's very odd that that key is
um so that's very odd that that key is
not
present right yeah
modify locks the
configuration let me
see when you initiate a sweep wanb locks
see when you initiate a sweep wanb locks
the config parameters that are being
the config parameters that are being
swept over to ensure consistency across
swept over to ensure consistency across
runs you cannot update the values of
runs you cannot update the values of
these
these
parameters
ah overriding a parameter could be
weird nested configs you want to sweep
weird nested configs you want to sweep
over one
over one
parameter vents you from updating the
parameter vents you from updating the
fields under
H yeah so this does not uh apparently
H yeah so this does not uh apparently
this never
this never
happened
happened
or actually let me just try to update
or actually let me just try to update
wand
B if I use their latest version let's
B if I use their latest version let's
see if that parameter shows up
see if that parameter shows up
because maybe they did
because maybe they did
it welcome fruit punch Samurai
welcome we are attempting to fix sweeps
welcome we are attempting to fix sweeps
today so that I can run some cool
experiments and wandb is not cooperating
experiments and wandb is not cooperating
now the thing I'm doing is not mandatory
now the thing I'm doing is not mandatory
so if it doesn't if this does not solve
so if it doesn't if this does not solve
it I'm probably just going to like check
it I'm probably just going to like check
a couple posts and then like I don't
a couple posts and then like I don't
know bump something and stop and like
know bump something and stop and like
just work around it for now um but it
just work around it for now um but it
would be very very nice to
have yeah would definitely be very
nice so we've got this forging one
right okay well this is different 29
right okay well this is different 29
keys
so wait this gave us something very
so wait this gave us something very
different didn't
it wait what
forging
sweep yeah this gave us something very
sweep yeah this gave us something very
different but I we still don't have the
different but I we still don't have the
parameter that we wanted in
parameter that we wanted in
here um
so I tried to like insert a parameter
so I tried to like insert a parameter
here to see if I could and it does not
here to see if I could and it does not
appear to work though it's interesting
appear to work though it's interesting
that I got all this additional
stuff I mean this is NI a nice
stuff I mean this is NI a nice
setup but it's still not what we
want let me see if there's uh
want let me see if there's uh
can we change the sweep
configuration were you always into RL
configuration were you always into RL
did you migrate through exploring other
did you migrate through exploring other
Stacks I started in natural language
Stacks I started in natural language
processing for a year then I did
processing for a year then I did
computer vision for a year and then I've
computer vision for a year and then I've
done RL for the last seven or
eight well yeah started in other areas
eight well yeah started in other areas
of
of
ml that were much
ml that were much
easier this is
hard
hard
ooh that's
promising this is promising right here
commented on Mesa I don't even know if
commented on Mesa I don't even know if
the API still supports
the API still supports
this but if I can do this then this will
this but if I can do this then this will
solve the
problem
so Val change is
true and then we
true and then we
do wb. config do
dict I need the underscore on this as
well I have no idea if this will even
well I have no idea if this will even
work config do
update um
Argus of
train okay I think that the way you do
train okay I think that the way you do
this we do args of train. update
this we do args of train. update
suggestion and then we do args train.
suggestion and then we do args train.
batch
batch
size like this so we we make the closest
size like this so we we make the closest
power ones in here is this part of the
power ones in here is this part of the
continuous control you're working on in
continuous control you're working on in
the previous streams okay so I can give
the previous streams okay so I can give
you a quick update on this um kind of so
you a quick update on this um kind of so
uh yesterday no uh Saturday when I do my
uh yesterday no uh Saturday when I do my
solo Dev I ran some experiments for some
solo Dev I ran some experiments for some
other projects I ran some experiments
other projects I ran some experiments
for continuous control I got some sweeps
done well not I got some runs done at
done well not I got some runs done at
the very least I'll show you
the very least I'll show you
those
those
uh oh wait yeah they're visualized right
uh oh wait yeah they're visualized right
here so we have runs here one billion
here so we have runs here one billion
step runs for puffer group Predator prey
step runs for puffer group Predator prey
and forging uh the policies for these
and forging uh the policies for these
look okay and now I want to be able to
look okay and now I want to be able to
run like really good quality sweeps on
run like really good quality sweeps on
these so I'm going to fix up carbs hyper
these so I'm going to fix up carbs hyper
parameter sweep algorithm to work with
parameter sweep algorithm to work with
this uh the other thing I did over the
this uh the other thing I did over the
weekend that I didn't quite finished
weekend that I didn't quite finished
because some rather distracting National
because some rather distracting National
things might have happened on
things might have happened on
Sunday um was the new configuration
Sunday um was the new configuration
system which I'm interested to see if
system which I'm interested to see if
you and
you and
other folks like I'm tried to make it
other folks like I'm tried to make it
way easier to
way easier to
use the um the config system for puffer
use the um the config system for puffer
and make it way more intuitive so I
and make it way more intuitive so I
managed to cut like a 100 lines of code
managed to cut like a 100 lines of code
out of the demo file and I changed the
out of the demo file and I changed the
yaml files to any files
yaml files to any files
which are a little bit simpler
which are a little bit simpler
um we will see whether it ends up being
um we will see whether it ends up being
good or
good or
not but yeah now I'm updating the carb
not but yeah now I'm updating the carb
sweep thing to work with that so we can
sweep thing to work with that so we can
get these experiments running
now okay so this is updating AR's
train AR we're going to add Fu as well
train AR we're going to add Fu as well
just because it'll be easy to tell if we
just because it'll be easy to tell if we
have successfully done it and then we do
have successfully done it and then we do
WB pig. train update
WB pig. train update
arit
arit
train and then we're going to do allow
train and then we're going to do allow
Val change equals
true
that okay let's see if this actually
that okay let's see if this actually
works now
unexpected keyword allow vow
change maybe they just renamed
it wanie gave me
it wanie gave me
yeah it Wan B is good but like it's kind
yeah it Wan B is good but like it's kind
of like where puffer is where like they
of like where puffer is where like they
need better error handling and
need better error handling and
validation so that users don't get a
validation so that users don't get a
stuck for as long um you know admittedly
stuck for as long um you know admittedly
puffers had way fewer resources so
puffers had way fewer resources so
hopefully I'd like them to have this
hopefully I'd like them to have this
solved by now but they're still doing
solved by now but they're still doing
very
good Wan's just gotten very large very
good Wan's just gotten very large very
fast which is always hard right
so we're looking at the WB Source now
so we're looking at the WB Source now
looking for where their init function is
looking for where their init function is
so I so I can if I see it can have so I
so I so I can if I see it can have so I
can hack it
I'll be applying to Ms starting out in
I'll be applying to Ms starting out in
NLP as well hopefully get to do more
NLP as well hopefully get to do more
research in RL down the line yeah RL is
research in RL down the line yeah RL is
fun um the nice thing with RL like so
fun um the nice thing with RL like so
when I started an NLP Transformers
when I started an NLP Transformers
didn't
didn't
exist and you could get soda on small
exist and you could get soda on small
data sets with like one
data sets with like one
GPU um so that was kind of
GPU um so that was kind of
nice NLP is such a pain in the ass these
nice NLP is such a pain in the ass these
days because
days because
like you just need so many
like you just need so many
resources
resources
um yeah it's
rough wb.
SDK wait where's WB SDK WB import SDK as
SDK wait where's WB SDK WB import SDK as
at WB SDK
okay W be in it Import in
okay W be in it Import in
it ah giant
pile okay so here
pile okay so here
is this is
insane uh I see AOW
change in it w
change in it w
b got oh I'm stupid this why I am stupid
actually there's no reason you would
actually there's no reason you would
ever want this to be
false this is like what this is this is
false this is like what this is this is
a case of uh shooting yourself in the
a case of uh shooting yourself in the
foot or shooting your user in the foot
foot or shooting your user in the foot
to prevent them from shooting thems in
to prevent them from shooting thems in
the foot that's what that
is so they shot me in the foot to
is so they shot me in the foot to
prevent me from shooting in the foot
prevent me from shooting in the foot
this is neovim you're looking at
it I used
it I used
um I used like pling no plugins Vim for
um I used like pling no plugins Vim for
like seven years
what learning
what learning
curve there's no learning
curve there's no learning
curve there's like this tutor thing and
curve there's like this tutor thing and
you do this for 10 minutes and then you
you do this for 10 minutes and then you
know how to use
know how to use
Vim you don't have to know a million
Vim you don't have to know a million
shortcuts there's like I don't know a
shortcuts there's like I don't know a
dozen that you actually maybe use very
often there's a if you want to try it
often there's a if you want to try it
out there's a Vim bindings plugin for
out there's a Vim bindings plugin for
VSS code
okay let's see if this gives us uh what
okay let's see if this gives us uh what
we
we
want main thing is to stop clicking the
want main thing is to stop clicking the
damn Mouse for everything
BR where is
BR where is
my where's my new hyper
my where's my new hyper
parameter you should be
parameter you should be
here what the
here what the
hell where's my
hell where's my
hyper ought to be
hyper ought to be
here maybe it didn't get updated
yet sweep
no it's just not here there should be a
foo oh did I mess something
foo oh did I mess something
up no that's just a carbs thing that's
up no that's just a carbs thing that's
fine uh this should be fine though like
fine uh this should be fine though like
what what is wrong with this come
what what is wrong with this come
on allow Val change
it should 100% be there
right
right
maybe do I have to do
maybe do I have to do
this cuz technically I imported wanb
this cuz technically I imported wanb
here
maybe this solves
maybe this solves
it I say 20% chance this solves it
nope 29
parameters it's so
disappointing unless maybe they change
disappointing unless maybe they change
the lock parameter
new
backend config do
backend config do
locked allow Val
change this allow Val change thing
documented allow whether to allow config
documented allow whether to allow config
values to change after setting the key
once if you want to track something like
once if you want to track something like
a varying learning rate use
log
uh what
one being it set
up what's the exact area I'll try to
up what's the exact area I'll try to
find something as well this is kind of
find something as well this is kind of
tricky so I'm just what I'm trying to do
tricky so I'm just what I'm trying to do
is I'm trying to update config
is I'm trying to update config
parameters in W be after it's been
parameters in W be after it's been
initialized inside of a sweep and it's
initialized inside of a sweep and it's
not like it's throwing me it's just not
not like it's throwing me it's just not
letting me do it it's like it's not
letting me do it it's like it's not
failing it's just not updating the
failing it's just not updating the
parameter like I'll do wb.
parameter like I'll do wb.
config.py I found the the bug here um
config.py I found the the bug here um
can we change after updating a sweep and
can we change after updating a sweep and
somebody has this workaround but I can't
somebody has this workaround but I can't
tell if it's working it doesn't appear
tell if it's working it doesn't appear
to be working for me
M.C
config
maybe maybe they change the name and I
maybe maybe they change the name and I
can find it
here it's a preinit object so I need to
here it's a preinit object so I need to
have it enited first which is
noxious where the freck is one.
config long one B turn
more what if I just like look up lck
more what if I just like look up lck
inside
inside
of lock
update
update
locked shallow
update self doore
update
update
okay ignore locked equals none
if self doore check
locked
sanitize sanitize dick
instance so much
code is there just like an update
code is there just like an update
unlocked or some
here can I do that
there's got to be a function right
there's got to be a function right
update
update
locked merge
locked I don't have an update
unlocked
unlocked
um wait self.
um wait self.
uncore locked self. uncore
items right so
items right so
do they have do they have underscore
do they have do they have underscore
underscore methods set
underscore methods set
item if check locked of key
return
return
yeah not ignore locked
H check
H check
locked so I see this underscore locked
locked so I see this underscore locked
here
yeah this thing should
yeah this thing should
work update locked self
sanitize keys
well they do have set item
well they do have set item
right so I have one one additional thing
right so I have one one additional thing
I can
do WB configs are immutable the moment
do WB configs are immutable the moment
the Run begins
the Run begins
right so if you change the config once
right so if you change the config once
the run is already started it wouldn't
the run is already started it wouldn't
work does this
work does this
help
help
um well yeah but I'm trying to figure
um well yeah but I'm trying to figure
out how to get around that and they're
out how to get around that and they're
not immutable like look they have update
methods underscore callback
set call back okay I think I know how to
set call back okay I think I know how to
do this I think I have an
do this I think I have an
idea uh I think what I'm going to
idea uh I think what I'm going to
do data equals self doore
do data equals self doore
update
update
ah okay so what we're g to do
ah okay so what we're g to do
is and this is the last thing I'm going
is and this is the last thing I'm going
to try
W.C
W.C
config
config
items.
dict uh
dot update so this is going to
dot update so this is going to
go so this is wb. config
go so this is wb. config
. train doore
. train doore
items. dick.
items. dick.
update args of
update args of
train and then we're going to
train and then we're going to
Doc config dot Trin do
Doc config dot Trin do
hallback
equals
equals
train what are you trying to do I'm
train what are you trying to do I'm
trying to get wanb to let me freaking
trying to get wanb to let me freaking
update arguments when I pass it to a
update arguments when I pass it to a
sweep so that uh I can integrate this
sweep so that uh I can integrate this
new hyperparameter tuning algorithm and
new hyperparameter tuning algorithm and
get like reasonable curves I think I
get like reasonable curves I think I
might have figured it out this is the
might have figured it out this is the
last thing I'm going to try though
last thing I'm going to try though
because this is incredibly boring and uh
because this is incredibly boring and uh
hopefully Wan B will just fix it and if
hopefully Wan B will just fix it and if
this doesn't work uh then I'm just going
this doesn't work uh then I'm just going
to like you know move on and we'll do
to like you know move on and we'll do
other stuff
dict has no attribute underscore items
dict has no attribute underscore items
hold
on Dick
object
object
oh oh I think I know what's
oh oh I think I know what's
wrong um
yeah okay they just didn't handle nested
yeah okay they just didn't handle nested
dicks is all I think cuz this train is a
dicks is all I think cuz this train is a
dick yeah
dick yeah
so I think that the way that you do this
so I think that the way that you do this
is actually wb. config do
is actually wb. config do
update um you do train
train args of train and then allow V
train args of train and then allow V
changes
true I think that does it right
true I think that does it right
because yeah I think it just wasn't
because yeah I think it just wasn't
triggering the update it wasn't telling
triggering the update it wasn't telling
the CLI that it's been updated because I
the CLI that it's been updated because I
was updating a dictionary not a config
was updating a dictionary not a config
object and that would make sense why I
object and that would make sense why I
wasn't getting any errors or anything as
wasn't getting any errors or anything as
well
let's
let's
see so you get the
see so you get the
suggestion it runs the
suggestion it runs the
experiment so that's good let's
experiment so that's good let's
see let's see if it does
it and then if this works then we'll be
it and then if this works then we'll be
able to get good sweeps and we'll be
able to get good sweeps and we'll be
able to run like a 100 billion steps
able to run like a 100 billion steps
worth of experiments on all our MS and
worth of experiments on all our MS and
whatever and we'll get cool sweeps it'll
whatever and we'll get cool sweeps it'll
be awesome
Keys yes yes okay our test worked we got
Keys yes yes okay our test worked we got
it we actually got it uh that was so
it we actually got it uh that was so
stupid that that has like that weird
stupid that that has like that weird
lock on it that this doesn't matter this
lock on it that this doesn't matter this
parito doesn't matter uh we got
it I hate having to debug stuff like
it I hate having to debug stuff like
that it's so obnox I but we got it okay
that it's so obnox I but we got it okay
so look how stupid this solution is we
so look how stupid this solution is we
had to we had to init wand B with like
had to we had to init wand B with like
this special like hey uh we don't want
this special like hey uh we don't want
you to shoot yourself in the foot so
you to shoot yourself in the foot so
we're going to shoot your foot before
we're going to shoot your foot before
you can do it yourself okay and then
you can do it yourself okay and then
what we had to do is that wasn't enough
what we had to do is that wasn't enough
you had to delete this like underscore
you had to delete this like underscore
locked weird
locked weird
property in W be and then you had to
property in W be and then you had to
update with this allow Val changes true
update with this allow Val changes true
okay got it now this is really good
okay got it now this is really good
because what this means
because what this means
is I had this obnoxious thing where like
is I had this obnoxious thing where like
we would run these awesome hyper pram
we would run these awesome hyper pram
sweeps let me find
one okay like here's a hyper pram sweep
one okay like here's a hyper pram sweep
of a hundred things with snake
of a hundred things with snake
right so huge hyper pram sweep and we
right so huge hyper pram sweep and we
can't this is garbage like you can't
can't this is garbage like you can't
tell anything from this because these
tell anything from this because these
are the hyper parameters from wandb not
are the hyper parameters from wandb not
the hyper parameters from carbs so this
the hyper parameters from carbs so this
is random noise so now this graph will
is random noise so now this graph will
be meaningful and we'll actually be able
be meaningful and we'll actually be able
to and this will be meaningful as well
to and this will be meaningful as well
so we'll actually be able to tell which
so we'll actually be able to tell which
hyper parameters matter which is
perfect now the question is how crazy we
perfect now the question is how crazy we
want to go right um
want to go right um
um how much we want to invest in the
um how much we want to invest in the
sweep I think this is kind of at a good
sweep I think this is kind of at a good
spot where we can run
spot where we can run
something let's run like what's one of
something let's run like what's one of
these that I think is going to do really
these that I think is going to do really
well with a hyper parameter sweep
right we go back to
puffer I think that this group task has
puffer I think that this group task has
a lot of
potential right so I think what we're
potential right so I think what we're
going to do is we're going to run carbs
going to do is we're going to run carbs
on the group task with a base experiment
on the group task with a base experiment
length of 500 million
steps let's do that
um I'm trying to think how I want to set
um I'm trying to think how I want to set
it
it
up total time steps
log so
log so
yeah all I have to do is set Min and Max
here okay so for total time steps we set
here okay so for total time steps we set
WB params right and then we set search
WB params right and then we set search
center is integer and we go M
center is integer and we go M
Min is going to be 500 million and then
Min is going to be 500 million and then
ma Max and actually we're going to do
ma Max and actually we're going to do
500 million here so it's at the low end
500 million here so it's at the low end
and then ma Max
and then ma Max
equals 10 billion step
equals 10 billion step
s that sounds cool uh this might be kind
s that sounds cool uh this might be kind
of aggressive
of aggressive
but you know we'll
but you know we'll
see uh and now we're going to commit all
see uh and now we're going to commit all
this stuff
this stuff
up clean paparel no we don't need that
up clean paparel no we don't need that
we need uh config defaults any we need
we need uh config defaults any we need
demo need uh yeah that's it
fix carb
sweep and then we're going to go grab
sweep and then we're going to go grab
ourselves a puffer
ourselves a puffer
box which do I have a puffer box
box which do I have a puffer box
somewhere that I can
use uh I have puffer box one available
puer box is uh one of our
puer box is uh one of our
servers it's got some nice stuff on
servers it's got some nice stuff on
it it's got this uh you know
it it's got this uh you know
humble uh if it shows up yeah humble
humble uh if it shows up yeah humble
little 4090 on
it uh I actually I'm going to leave this
it uh I actually I'm going to leave this
box alone for now I'm going to use
box alone for now I'm going to use
different
one with puffer box
zero get Ranch get
P stash
P
P
okay
okay
and think we do
and think we do
uh t-o
attach we do python demo and uh
attach we do python demo and uh
group mode sweep spe
multiprocessing let's see if this works
apparently
apparently
not looks like we have some minor stuff
not looks like we have some minor stuff
to
to
fix it's not accepting the time
fix it's not accepting the time
parameter
correctly carb prems total time step
that should have done it actually
right so what
right so what
happened oh I know what happened that's
happened oh I know what happened that's
that's silly
no I just did the wrong sweep
Pam so now we do sweep
carbs and we'll see what this gives
us and this should launch what will be a
us and this should launch what will be a
fairly long
fairly long
sweep a key error total time
sweep a key error total time
steps right so this is a legit
steps right so this is a legit
oversight carbs Pam
so I could
so I could
do I could just hard code it
right
right
suggest where is it Pam
suggest where is it Pam
spaces one be train
spaces one be train
prams train
prams train
prams total time
steps uh values
steps uh values
is that the
case h that's so messy let's just yeah
case h that's so messy let's just yeah
let's just add it back in for now to
let's just add it back in for now to
the The Sweep specs I think
oops where
oops where
did what
did what
happened oh
comma config ocean
comma config ocean
grid and we'll just add back or uh yeah
grid and we'll just add back or uh yeah
we'll just add the total time steps
we'll just add the total time steps
thing since that's what we're going to
thing since that's what we're going to
be using so sweep. parameter. total time
be using so sweep. parameter. total time
steps and we'll just do
um not values
um not values
distribution what what's the thing
distribution what what's the thing
from config defaults I
from config defaults I
wanted config
defaults yeah log uniform values is what
defaults yeah log uniform values is what
you
want so Min is going to be 500
want so Min is going to be 500
million Max is going to be 10
billion and we see if this works
perfect so this is now a 15minute
perfect so this is now a 15minute
experiment which means it's probably H
experiment which means it's probably H
you know a little less than a billion
you know a little less than a billion
time steps training it around a million
time steps training it around a million
steps per second this is on the slightly
steps per second this is on the slightly
slower
slower
box and it's returning
box and it's returning
rewards and this will run some
rewards and this will run some
experiments now I'm just now
experiments now I'm just now
realizing that I think I messed one
realizing that I think I messed one
other thing up
I want to have 100 experiments
I want to have 100 experiments
run and I might have set it to
10 nope it's set to
500 that's
500 that's
fine I think it can just chill on 500
fine I think it can just chill on 500
and uh I might not wait for it to finish
and uh I might not wait for it to finish
but uh that's totally fine so let's just
but uh that's totally fine so let's just
commit up these fixes
red uh update minor
fixes okay so now we have the
fixes okay so now we have the
experiments running well on the new
experiments running well on the new
environment with a proper hyper Prem
environment with a proper hyper Prem
sweep
sweep
uh and that will hopefully find us some
uh and that will hopefully find us some
cool
stuff we also have the new config system
stuff we also have the new config system
which is very
which is very
nice and we can do a bunch of stuff from
nice and we can do a bunch of stuff from
here
um there are a lot of directions I could
um there are a lot of directions I could
go from here honestly uh I do want to do
go from here honestly uh I do want to do
some stuff on
some stuff on
continuous we could probably do some
continuous we could probably do some
stuff on continuous
stuff on continuous
locally to see if we can get an idea of
locally to see if we can get an idea of
that there's still a little work to be
that there's still a little work to be
done on the config and uh sweeps
done on the config and uh sweeps
systems um and there's also I have some
systems um and there's also I have some
ideas behind running new Sims let
ideas behind running new Sims let
me give me a couple minutes here I'm
me give me a couple minutes here I'm
going to go use the restroom I'm going
going to go use the restroom I'm going
to go check and make sure uh one other
to go check and make sure uh one other
thing and then I will be right back and
thing and then I will be right back and
we will come up with some cool stuff to
we will come up with some cool stuff to
do from here
do from here
cuz that's kind of enough boring work
cuz that's kind of enough boring work
for the day right we'll come up with
for the day right we'll come up with
some fun
stuff
e e
okay
let me make sure I'm not missing
anything there was one thing that's like
anything there was one thing that's like
not really a standing meeting
okay so fun stuff
okay so fun stuff
um let me just go back through like the
um let me just go back through like the
plan of what I'm doing with puffer now
plan of what I'm doing with puffer now
and how far along everything is so I've
and how far along everything is so I've
got the side project that needs some
got the side project that needs some
work that has not announced yet um it's
work that has not announced yet um it's
almost done it just needs some
almost done it just needs some
experimental work um very very close
experimental work um very very close
there just a few things I'm not quite
there just a few things I'm not quite
fully happy
fully happy
with we've got the snake environment
with we've got the snake environment
that's done we've got these continuous
that's done we've got these continuous
control LS that maybe we need to turn
control LS that maybe we need to turn
tune the reward functions a little bit
tune the reward functions a little bit
but for the most part it's in a good
but for the most part it's in a good
spot and we just get to run experiments
spot and we just get to run experiments
on them now right we could always make a
on them now right we could always make a
fun fancy renderer for them we could
fun fancy renderer for them we could
like make that thing better but you know
like make that thing better but you know
we can do that whenever um that gives
we can do that whenever um that gives
us pretty decent range of environments
us pretty decent range of environments
for basic tests know we could always use
for basic tests know we could always use
more uh M's but decent enough
more uh M's but decent enough
environments for basic tests
environments for basic tests
um hyperparameter
um hyperparameter
sweeps are in a reasonable spot as well
sweeps are in a reasonable spot as well
we've got carbs integration uh it's
we've got carbs integration uh it's
pretty robust I've used it for a number
pretty robust I've used it for a number
of things already you know there are a
of things already you know there are a
few small things we can improve here and
few small things we can improve here and
there but we don't have to spend a bunch
there but we don't have to spend a bunch
of time on that you know it's really
of time on that you know it's really
boring to just like sit down and try to
boring to just like sit down and try to
improve carbs in integration or whatever
improve carbs in integration or whatever
it's way more fun to like do it as you
it's way more fun to like do it as you
need it for other projects and just run
need it for other projects and just run
experiments in the background right um
experiments in the background right um
so simulation
so simulation
compatibility uh hyper parameter sweeps
compatibility uh hyper parameter sweeps
these are all good uh the really the
these are all good uh the really the
most fun thing and I think the thing
most fun thing and I think the thing
that's coolest for people to see is
that's coolest for people to see is
building more High perf simulations for
building more High perf simulations for
reinforcement learning and that's what
reinforcement learning and that's what
I'd like to spend a lot more time doing
I'd like to spend a lot more time doing
uh it's it's fun it's high impact on the
uh it's it's fun it's high impact on the
field it's uh it's probably the best way
field it's uh it's probably the best way
to get more people into this stuff it
to get more people into this stuff it
does take some
does take some
time uh you know it took me a week for
time uh you know it took me a week for
the snake and I think I could build
the snake and I think I could build
something like that way faster
something like that way faster
now right but there's still some time so
now right but there's still some time so
there are a few different things we
there are a few different things we
could do in and around this project that
could do in and around this project that
would be interesting I'd like to get
would be interesting I'd like to get
people's feedback on this a little bit
people's feedback on this a little bit
as well though it's I don't want to
as well though it's I don't want to
start anything huge just yet as the is
start anything huge just yet as the is
the main thing like a project that I had
the main thing like a project that I had
in mind is building like a really strip
in mind is building like a really strip
down
down
MOA um as an RL environment and make it
MOA um as an RL environment and make it
run like millions of steps per second
run like millions of steps per second
I'm very confident that I can do that I
I'm very confident that I can do that I
don't know how long it will take and I
don't know how long it will take and I
don't want to do like a one Monon
don't want to do like a one Monon
project right because that already like
project right because that already like
that burns a huge amount of the summer
that burns a huge amount of the summer
and on one environment can't quite
and on one environment can't quite
justify doing that just yet I I already
justify doing that just yet I I already
have like a big Sim project on the side
have like a big Sim project on the side
um so that's tough
um so that's tough
I could do some slightly smaller scale
I could do some slightly smaller scale
environments that are still complex and
environments that are still complex and
interesting if people have ideas on it
interesting if people have ideas on it
uh I could work on better render front
uh I could work on better render front
ends for environments uh I could work on
ends for environments uh I could work on
you know some existing environments that
you know some existing environments that
could have some major optimizations lot
could have some major optimizations lot
of different stuff I could do um and
of different stuff I could do um and
then the goal is going to be on like
then the goal is going to be on like
whatever environments we build the goal
whatever environments we build the goal
is like build the environment you know
is like build the environment you know
get it set up run some basic tests and
get it set up run some basic tests and
then run a carb sweep to solve it
then run a carb sweep to solve it
um and just like have the whole
um and just like have the whole
experimental phase essentially be
experimental phase essentially be
automated by carbs that's the
automated by carbs that's the
goal
goal
so
so
this with this environment that I just
this with this environment that I just
added these environments we have now
added these environments we have now
basic support for continuous control so
basic support for continuous control so
we can do continuous controls type stuff
we can do continuous controls type stuff
so we can do physics stuff but we got to
so we can do physics stuff but we got to
be careful that because like whatever it
be careful that because like whatever it
is we're going to probably either be
is we're going to probably either be
using a really basic engine or having to
using a really basic engine or having to
ride our own which is
ride our own which is
tricky um so I and I don't have a ton of
tricky um so I and I don't have a ton of
experience with that either so we could
experience with that either so we could
try to write like a little robotics type
try to write like a little robotics type
Sim and make it really fast
Sim and make it really fast
um but I it would have to be like a
um but I it would have to be like a
pretty smly like small scoped thing um
pretty smly like small scoped thing um
we could try to write like a really good
we could try to write like a really good
renderer for some of this stuff though I
renderer for some of this stuff though I
don't know how useful that would be um
don't know how useful that would be um
yeah
H so many possibilities here so many
H so many possibilities here so many
ways we could go with
ways we could go with
this I've got it in my head that I
this I've got it in my head that I
really want to write like a little mini
really want to write like a little mini
MOBA but I know how hard that would
MOBA but I know how hard that would
be and I've been like thinking like well
be and I've been like thinking like well
would it really be that hard is there a
would it really be that hard is there a
way I could do it that wouldn't be that
way I could do it that wouldn't be that
hard it's kind of hard kind of no matter
hard it's kind of hard kind of no matter
what you
what you
do
um and the thing is like
um and the thing is like
if I want to do continuous control stuff
if I want to do continuous control stuff
anyways right just like making the
anyways right just like making the
movement continuous control doesn't
movement continuous control doesn't
really do it for the robotics people
really do it for the robotics people
anyways like if you're going to do
anyways like if you're going to do
continuous control they want like at
continuous control they want like at
least some sort of little robot um and
least some sort of little robot um and
then they already have their own
then they already have their own
environments that they're very attached
environments that they're very attached
to and like that they consider to be
to and like that they consider to be
like complex and interesting so it's
like complex and interesting so it's
going to be it would be really hard to
going to be it would be really hard to
beat the complexity of one of those big
beat the complexity of one of those big
simulators cuz we'd have to kind of do
simulators cuz we'd have to kind of do
our own physics Eng
our own physics Eng
and like contact points and stuff and
and like contact points and stuff and
that would be
hard what are some other cool RL type
hard what are some other cool RL type
projects we could do on this um I
projects we could do on this um I
thought about trying to like reimplement
thought about trying to like reimplement
Atari games and make them really fast
Atari games and make them really fast
well that wouldn't be particularly hard
well that wouldn't be particularly hard
um there are a lot of Atari games and
um there are a lot of Atari games and
you know it's hard to get uh it's really
you know it's hard to get uh it's really
hard to get those tari games uh to
hard to get those tari games uh to
be like it's hard to get all of them
be like it's hard to get all of them
implemented right cuz there are just so
implemented right cuz there are just so
many of them um so like I could do a
many of them um so like I could do a
breakout or a PA Game or something like
breakout or a PA Game or something like
that very easily but I don't know if
that very easily but I don't know if
that does too much on its
that does too much on its
own I like doing massively multi-agent
own I like doing massively multi-agent
stuff um because it scales really well
stuff um because it scales really well
and you know it's a cool thing to show
and you know it's a cool thing to show
off but I don't know if
off but I don't know if
uh that is something that I can come up
uh that is something that I can come up
with an infinite number of environments
with an infinite number of environments
there's also the possibility of trying
there's also the possibility of trying
to figure out how to put some of these
to figure out how to put some of these
environments online which I would really
environments online which I would really
like to do and I think would be really
like to do and I think would be really
cool if people could play them the
cool if people could play them the
problem there is I have absolutely no
problem there is I have absolutely no
experience with webdev and uh I would
experience with webdev and uh I would
need somebody to point me in the
need somebody to point me in the
direction of like a reasonable tool
direction of like a reasonable tool
stack for that because I don't want to
stack for that because I don't want to
go implement the environments in
go implement the environments in
JavaScript and I would need to find a
JavaScript and I would need to find a
decent way of setting stuff up for that
decent way of setting stuff up for that
uh to like run other stuff on server
uh to like run other stuff on server
side or on client side I
mean so many different directions I
mean so many different directions I
could go
could go
in but the thing is I know if I just
in but the thing is I know if I just
keep trying to like polish on this it's
keep trying to like polish on this it's
not going to be very interesting to
not going to be very interesting to
watch and I'm going to get bored as well
watch and I'm going to get bored as well
so maybe it's not the worst thing in the
so maybe it's not the worst thing in the
world to come up with like a more
world to come up with like a more
complex game environment if we just like
complex game environment if we just like
Implement a cool little game that will
Implement a cool little game that will
have something interesting to
it what
it what
are what are some cool games that have
are what are some cool games that have
been done in reinforcement learning
been done in reinforcement learning
before that have maybe been done really
before that have maybe been done really
slowly or maybe we could do something on
slowly or maybe we could do something on
top
of or alternatively we can just start
of or alternatively we can just start
looking into the Moa and seeing how hard
looking into the Moa and seeing how hard
that would really be
I mean surely somebody must have
I mean surely somebody must have
implemented one of these right not for
implemented one of these right not for
RL just in general like mini
mooba mooba is a massive online battle
mooba mooba is a massive online battle
arena um like Dota or League of
arena um like Dota or League of
Legends uh well this is in fortnite
Legends uh well this is in fortnite
which is
which is
hilarious but that's a good view of a
hilarious but that's a good view of a
map they do like a three lane map type
thing mini
thing mini
MOBA
H this is like the classic map of AM MOA
right let's start a dock
right let's start a dock
just to see you know just to see if this
just to see you know just to see if this
is practical mini
is practical mini
MOBA is this something people would find
MOBA is this something people would find
cool if I did something like
cool if I did something like
this couldn't you have a mobile like
this couldn't you have a mobile like
play in neural
play in neural
MMO not really you can't really retrofit
MMO not really you can't really retrofit
like a different game into an MMO like
like a different game into an MMO like
that it's more
substantial there's no such thing as
substantial there's no such thing as
like like an anything engine right the
like like an anything engine right the
anything engine is these hands writing
anything engine is these hands writing
code um you can't just like write a game
code um you can't just like write a game
engine that does like a game that is the
engine that does like a game that is the
engine to do
everything main features of a mooba
everything main features of a mooba
um main features of a
um main features of a
MOA we need three
MOA we need three
lanes we need uh multiple here
we need
we need
Towers uh you need like some sort of
Towers uh you need like some sort of
like
like
Towers uh to
Towers uh to
defend you need
defend you need
minions uh minion
minions uh minion
waves do people not know what this
waves do people not know what this
is do people not know League of Legends
is do people not know League of Legends
DOTA No Monsters jungle yeah
okay um
okay um
I I did not know that this was not
I I did not know that this was not
something that people are like super
something that people are like super
familiar with but like the general
familiar with but like the general
format of am MOA uh is that you have I
format of am MOA uh is that you have I
mean there really two big ones right
mean there really two big ones right
it's League of Legends or DOTA hugely
it's League of Legends or DOTA hugely
hugely popular games there are three
hugely popular games there are three
lanes you have uh five Heroes each
lanes you have uh five Heroes each
controlled by a player um you send you
controlled by a player um you send you
know some Heroes down each lane and uh
know some Heroes down each lane and uh
you know there are creeps that follow
you know there are creeps that follow
you so you have like these minions the
you so you have like these minions the
minions fight each other and then you
minions fight each other and then you
and your opponents on the same Lane
and your opponents on the same Lane
fight each other over the minions you
fight each other over the minions you
try to get you know XP by killing the
try to get you know XP by killing the
minions you try to kill the other heroes
minions you try to kill the other heroes
in Lane there are monsters around in
in Lane there are monsters around in
like the jungle area the intermediate
like the jungle area the intermediate
areas that you can also kill for XP
areas that you can also kill for XP
there's usually some like neutral zone
there's usually some like neutral zone
in the center that has some other
in the center that has some other
objectives and uh there are Towers you
objectives and uh there are Towers you
have some number of towers I think it's
have some number of towers I think it's
three towers plus some inner ones uh in
three towers plus some inner ones uh in
each lane you try to defend these towers
each lane you try to defend these towers
the towers will like fight back they
the towers will like fight back they
will attack stuff within range yeah that
will attack stuff within range yeah that
is the general format of a
is the general format of a
mooba
mooba
um okay I mean I the fact that I see
um okay I mean I the fact that I see
people chatting means that this is
people chatting means that this is
something that people are probably
something that people are probably
interested in so and I actually think
interested in so and I actually think
that this would be a really good thing
that this would be a really good thing
for me to do because it would be the
for me to do because it would be the
first environment that's like
first environment that's like
substantially not grid based but
substantially not grid based but
possibly still scales to be fast um
possibly still scales to be fast um
yeah let's let's think about this I'm
yeah let's let's think about this I'm
not going to commit to this just yet
not going to commit to this just yet
because this could be like two months of
because this could be like two months of
work but I want to see if there's like
work but I want to see if there's like
is there a way that I can come up with
is there a way that I can come up with
to do this that would be interesting in
to do this that would be interesting in
like two weeks and like have you know a
like two weeks and like have you know a
little bit of time on the side to run
little bit of time on the side to run
experiments and other things so I can
experiments and other things so I can
polish up other stuff on the side
polish up other stuff on the side
right so we've got three lanes there are
right so we've got three lanes there are
let's let's see Towers to defend uh
let's let's see Towers to defend uh
minion waves like neutrals
minion waves like neutrals
in Jungle
in Jungle
maybe uh we probably need something like
maybe uh we probably need something like
that
that
um principal objective to destroy Nexus
um principal objective to destroy Nexus
yeah Towers to defend like
yeah Towers to defend like
some like
some like
Nexus
Nexus
objective multiple
objective multiple
Heroes
Heroes
what am I
what am I
stupid hero what
okay
uh okay I this makes sense to me so if I
uh okay I this makes sense to me so if I
were to implement this thing
were to implement this thing
right what was like the minimum I would
right what was like the minimum I would
need to
need to
do yeah you have so multiple Heroes with
abilities and then maybe
abilities and then maybe
items um I actually don't think items
items um I actually don't think items
are going to be as important um because
are going to be as important um because
uh like the open AI guys they scripted
uh like the open AI guys they scripted
the item buys I'm pretty sure anyways or
the item buys I'm pretty sure anyways or
at least partially script I think that
at least partially script I think that
they either partially or fully scripted
they either partially or fully scripted
the items anyways um you do need
the items anyways um you do need
something to have like gold or to spend
something to have like gold or to spend
gold on or something like that
um yeah but I I don't want to do like
um yeah but I I don't want to do like
different builds and stuff like that I
different builds and stuff like that I
don't want to get into that level of
don't want to get into that level of
complexity so let me just think so this
complexity so let me just think so this
is like the the Hallmark I'll put it
is like the the Hallmark I'll put it
into the into this one item
into the into this one item
Market okay
Market okay
so what is like the bare
so what is like the bare
minimum uh for demo like the like the
minimum uh for demo like the like the
bare minimum that I would need in order
bare minimum that I would need in order
to make this thing possible well I think
to make this thing possible well I think
that I would need to have
that I would need to have
like the lane like some way to do the
like the lane like some way to do the
map right like the lanes in the map so
map right like the lanes in the map so
like basic
like basic
movement map I need
some some sort of basic
some some sort of basic
creep creeps that fight each other right
creep creeps that fight each other right
so some sort of basic creeps plus creep
Ai and
Ai and
then uh
then uh
like hero with
like hero with
ability
ability
to attack
and that's kind of it
and that's kind of it
right bare minimum to like get something
right bare minimum to like get something
done would be like you have the map you
done would be like you have the map you
have the lanes the creeps go and fight
have the lanes the creeps go and fight
each other and then the heroes can go to
each other and then the heroes can go to
like the various different lanes and do
like the various different lanes and do
stuff there right that would be like the
stuff there right that would be like the
bare
bare
minimum in order just and then we can
minimum in order just and then we can
like add stuff from there so what I want
like add stuff from there so what I want
to get is how hard is it going to be to
to get is how hard is it going to be to
do that
um it's a good start
yeah so the big thing that I'm worried
yeah so the big thing that I'm worried
about here the big thing is not having
about here the big thing is not having
grid
observations o this is an important
choice yeah know so the way that they
choice yeah know so the way that they
did this in
Dota that this Beast of an architecture
Dota that this Beast of an architecture
here
and they
and they
had like they had all the units like
had like they had all the units like
this and they had this attentional type
architecture so what I would have to do
architecture so what I would have to do
in order to see tell
in order to see tell
which which minions or whatever you can
see a simple 2D Ultra fast MOBA game
see a simple 2D Ultra fast MOBA game
reusing grid based continuous control
reusing grid based continuous control
engine it's an awesome idea now that I
engine it's an awesome idea now that I
think of it yeah so I could make it grid
think of it yeah so I could make it grid
based continuous control that I could do
um that wouldn't be that bad
right and then I could decide later if I
right and then I could decide later if I
want to do something
different that sounds good right
I feel like it would make something
I feel like it would make something
similar to open I5 way more accessible
similar to open I5 way more accessible
yeah so that's the thing with open AI I
yeah so that's the thing with open AI I
love this project I absolutely love this
love this project I absolutely love this
project uh I was 15t away from the team
project uh I was 15t away from the team
when they were building this and it was
when they were building this and it was
just the coolest thing by the most
just the coolest thing by the most
talented people I'd ever seen and there
talented people I'd ever seen and there
was some talk internally of like okay
was some talk internally of like okay
once we solve DOTA let's solve it with
once we solve DOTA let's solve it with
1% of the compute or something like that
1% of the compute or something like that
and they never did it and it was like
and they never did it and it was like
this awesome reinforcement learning
this awesome reinforcement learning
result like so good um and it just never
happened which is just so
rough um you know there would be easier
rough um you know there would be easier
projects to reimplement like I could
projects to reimplement like I could
probably do like the emergent tool use
probably do like the emergent tool use
or Capture the Flag or one of those way
or Capture the Flag or one of those way
easier and maybe maybe I should start
easier and maybe maybe I should start
with
with
that but like this would be so
cool and I've kind of learned that like
cool and I've kind of learned that like
once I get an idea like this in my head
once I get an idea like this in my head
I kind of have to do it cuz I'm not
I kind of have to do it cuz I'm not
going to want to work on anything else
going to want to work on anything else
until I at least like convince myself
until I at least like convince myself
that this is super hard and like half
that this is super hard and like half
the time you know half the time I like
the time you know half the time I like
try something really hard it ends up not
try something really hard it ends up not
being really hard so maybe I can just do
being really hard so maybe I can just do
it right okay let's see so we use the
it right okay let's see so we use the
continuous control engine right we use
continuous control engine right we use
like the really basic continuous control
like the really basic continuous control
engine
um yeah we'll we'll use we Ed the really
um yeah we'll we'll use we Ed the really
basic continuous control engine
um it's not going to run as fast is the
um it's not going to run as fast is the
one thing
with h actually it
with h actually it
might we did like one meter squares
maybe hard to
maybe hard to
say I don't know if the continuous
say I don't know if the continuous
control engine is a good fit or
not I think it's reasonable at least
is it easier or harder because of the
is it easier or harder because of the
continuous control
engine well it does let you run it
engine well it does let you run it
discreete or continuous which is
discreete or continuous which is
nice and it it simplifies the network
nice and it it simplifies the network
architectures but it actually kind of
architectures but it actually kind of
complicates some other stuff doesn't it
no cuz it simplifies Collision checks
right yeah cuz how else do you do
right yeah cuz how else do you do
Collision
checks I think we can try it
okay the one thing I want to know before
okay the one thing I want to know before
I start on this is I want to know how
I start on this is I want to know how
you do uh how you normally do Collision
checks I think you do something like
checks I think you do something like
something like having a grid anyways
something like having a grid anyways
right and then you just do Collision
right and then you just do Collision
checks within the
grid
yeah so I think there's pretty much
yeah so I think there's pretty much
always going to be a grid anyways so we
always going to be a grid anyways so we
may as well start with
may as well start with
it so
it so
like I come up with some map right I
like I come up with some map right I
come up with well I re I start with the
come up with well I re I start with the
continuous control code uh I come up
continuous control code uh I come up
with some fixed
with some fixed
map
I I add like basic attack actions and uh
I I add like basic attack actions and uh
health and stuff like
that and then I add uh
that and then I add uh
some some really basic
NPCs yeah I add some like really basic
NPCs yeah I add some like really basic
NPCs the AI will be kind of tricky to do
NPCs the AI will be kind of tricky to do
fast but there aren't that many of
fast but there aren't that many of
them I should still be able to get this
them I should still be able to get this
thing running like hundreds of thousands
thing running like hundreds of thousands
of FPS
of FPS
regardless which is still crazy fast
and then the attacks what about the
attacks the one thing that's concerning
attacks the one thing that's concerning
to me is that like the vision range in a
to me is that like the vision range in a
MOA just has to be bigger fundamentally
MOA just has to be bigger fundamentally
like the game doesn't make sense very
like the game doesn't make sense very
with very very local
with very very local
Vision um
you
know maybe I just use the grid engine
know maybe I just use the grid engine
for the fast Collision checks how big
for the fast Collision checks how big
does the vision range have to be
does the vision range have to be
compared to 11 by 11 well I mean think
compared to 11 by 11 well I mean think
about it
about it
right the the tile size has to be small
right the the tile size has to be small
enough that um like minions can stand
enough that um like minions can stand
next to each other so if you're going to
next to each other so if you're going to
think of like how big the PES should
think of like how big the PES should
represent uh should be
represented have different classes tank
represented have different classes tank
range assassin okay like we can get to
range assassin okay like we can get to
that stuff it's Basics
that stuff it's Basics
first how big does the vision range have
first how big does the vision range have
to be compared to 11 by 11
um actually that is that is a good
um actually that is that is a good
question to have to answer so
the thing is the minions can't move
the thing is the minions can't move
through each other on the grid system
through each other on the grid system
the way I have it
the way I have it
defined
defined
so they have to like path around each
so they have to like path around each
other I
other I
guess um so they have to do the pathing
guess um so they have to do the pathing
on the
grid so
well the minions actually can't collide
well the minions actually can't collide
with each other I think in like DOTA and
with each other I think in like DOTA and
League they have like uh they do have
League they have like uh they do have
Collision checks on them
anyways so maybe not the worst thing in
anyways so maybe not the worst thing in
the
the
world
um and
um and
then you can definitely move
maybe the grid engine just
maybe the grid engine just
works Hey Brother do you still have the
works Hey Brother do you still have the
MMO example from your thesis live still
MMO example from your thesis live still
want to show a friend the environment
want to show a friend the environment
love the
love the
work uh it should
be this appears to work right
be this appears to work right
this
thing it looks like the uh some of
thing it looks like the uh some of
the uh the assets have broken like some
the uh the assets have broken like some
of the NPCs have disappeared I love how
of the NPCs have disappeared I love how
like web apps just seem to rot on their
like web apps just seem to rot on their
own for no particular
own for no particular
reason
reason
um but other than like this missing
um but other than like this missing
asset thing being weird yeah it seems
asset thing being weird yeah it seems
like it
like it
works I hate web dev so much
let me turn the AC down and then we're
let me turn the AC down and then we're
going to start coding
this I'm only going to do this if uh is
this I'm only going to do this if uh is
this using puffer yeah it's using puffer
this using puffer yeah it's using puffer
for training and for infen and stuff
for training and for infen and stuff
yeah um the demo the web demo is not
yeah um the demo the web demo is not
live using puffer it's just a rendering
live using puffer it's just a rendering
of like a example like from Agents that
of like a example like from Agents that
were using puffer um but uh yeah it's
were using puffer um but uh yeah it's
the training requires puffer for sure to
the training requires puffer for sure to
be reasonable to do
let me update stream
title okay let's let's start on this
title okay let's let's start on this
we're going to start with uh the grid
we're going to start with uh the grid
engine until we get stuck on the grid
engine until we get stuck on the grid
engine is how it's going to work and
engine is how it's going to work and
we'll probably have to make the vision
we'll probably have to make the vision
radius something kind of large so you
radius something kind of large so you
know we'll train a few hundred thousand
know we'll train a few hundred thousand
steps per second or whatever and we'll
steps per second or whatever and we'll
go from there and then maybe we'll come
go from there and then maybe we'll come
up with stuff afterwards to make it
up with stuff afterwards to make it
better um
MOA grid
MOA grid
continuous copy grid continuous
continuous copy grid continuous
slash
slash
star uh no we just want grid continuous
slash R continuous.
slash R continuous.
py uh Moa SL MOBA
py uh Moa SL MOBA
dopy and then we
dopy and then we
want grid continuous
want grid continuous
slash C grid
slash C grid
continuous pix
continuous pix
MOBA ca.
MOBA ca.
PX okay and uh we will make
a environment
snake name
MOA we'll do this make
MOA we'll do this make
mooba let's actually let's put this a
mooba let's actually let's put this a
little higher
little higher
up let's put this on
here grid let's do make
here grid let's do make
mooba make
mooba don't need any of this
mooba don't need any of this
um
um
Horizon doesn't need to be set either I
Horizon doesn't need to be set either I
don't
think uh Map
size we need Map
size we need Map
size not really I think it's just going
size not really I think it's just going
to be a fixed map we're going to make it
to be a fixed map we're going to make it
really
easy m.n
Creator uh no this needs to
be yeah
be yeah
return because it's going to be in the
return because it's going to be in the
fancy API
fancy API
cool from
cool from
dot MOA import
dot MOA import
MOA
okay offer mooba
Oba
Oba
MOA
this and we will start messing with
this and we will start messing with
stuff uh we don't need any of these
stuff uh we don't need any of these
tasks
discretize discretize useful yeah
discretize discretize useful yeah
discretise is actually pretty useful
discretise is actually pretty useful
we'll keep that for now don't need food
we'll keep that for now don't need food
reward don't need expected lifespan do
reward don't need expected lifespan do
need report
need report
interval uh don't need
interval uh don't need
Horizon do need Vision range and agent
Horizon do need Vision range and agent
speed do not need width and and height I
speed do not need width and and height I
don't
don't
think I think that's just going to end
think I think that's just going to end
up being uh
hardcoded yeah this should be
fun
map uh how big is the DOTA map in
meters DOTA app size
map would be approximately 150 by
map would be approximately 150 by
M
M
um rough
estimates 11 by 100 by 1100 game
estimates 11 by 100 by 1100 game
units which is how big do I want to make
units which is how big do I want to make
the
the
squares I think 3 ft by 3 ft is probably
squares I think 3 ft by 3 ft is probably
too big if I say it's 2T by 2T
too big if I say it's 2T by 2T
fet then that is 75x 75 tiles that seems
fet then that is 75x 75 tiles that seems
really small no wait meters so it's the
really small no wait meters so it's the
other way around so divide by so like
other way around so divide by so like
tiles 250
tiles 250
tiles well I should make this smaller
tiles well I should make this smaller
right 128 by 128
right 128 by 128
tiles does that give me enough
tiles does that give me enough
room probably does to start with right
room probably does to start with right
let's make this 128 by 128
tiles okay and then we do
tiles okay and then we do
self
self
width uh self.
width uh self.
height self. width is map.
height self. width is map.
shape uh we'll do self. Nom
agents is well the total numb agent
agents is well the total numb agent
is
is
10 don't need Horizon do need Vision
10 don't need Horizon do need Vision
range agent speed
range agent speed
discretize board interval
good oh here's the grid right here so I
good oh here's the grid right here so I
can just do uh what is
it I can do just self. height 128
it I can do just self. height 128
is
is
128 and then I can do the grid right
128 and then I can do the grid right
here is going to be self. height width
here is going to be self. height width
agent positions self. num agents uh
agent positions self. num agents uh
spawn position cans we do not need this
spawn position cans we do not need this
whatsoever agent colors we do not need
whatsoever agent colors we do not need
this
either
either
emulated we do not
emulated we do not
need
need
um buff is going to be self dot num
um buff is going to be self dot num
agents num
agents num
agents num agents
agents num agents
agents oops s. num agents
agents oops s. num agents
perfect now I'm trying to think where I
perfect now I'm trying to think where I
want to prototype this I think I
want to prototype this I think I
probably want to prototype this mostly
probably want to prototype this mostly
in uh in Python right
in uh in Python right
prototyping in scon would be
slow don't need episode rewards like
slow don't need episode rewards like
this uh don't need this duns not duns
this uh don't need this duns not duns
thing that's weird I didn't need this at
all yeah
okay good enough to start
okay good enough to start
with so
self do agent
self do agent
positions
positions
H
H
wait self. buff. observations oh yeah
wait self. buff. observations oh yeah
yeah this is for OBS this is
fine I should actually tweet
fine I should actually tweet
this for
there's a Jim
there's a Jim
en called Dirk oh yeah I forgot about
en called Dirk oh yeah I forgot about
that Dirk mooba RL what is this
thing this is the DOTA thing that's
crazy this is four years
crazy this is four years
old oh yeah yeah I saw this
old oh yeah yeah I saw this
um for research and fun
huh how fast is
this let's
this let's
see
see
run what does this say this create and
run what does this say this create and
run where are these benchmarks what does
run where are these benchmarks what does
what does this mean
num
num
samples is
20 wait so is this really
slow six seconds is
this well unless convinced otherwise I'm
this well unless convinced otherwise I'm
going to assume super slow we will make
going to assume super slow we will make
something that is super
something that is super
fast but this is cool
fast but this is cool
I wonder if this guy has any
I wonder if this guy has any
uh have I met this guy AI game
uh have I met this guy AI game
Studio well this looks pretty cool
Studio well this looks pretty cool
anyways enough yapping let's
build um okay so we have the view the
build um okay so we have the view the
CN I think we're probably going to not
CN I think we're probably going to not
have the CN for quite a while we're just
have the CN for quite a while we're just
going to get rid of
going to get rid of
this um we're going to do self de agents
this um we're going to do self de agents
is fine grid fill empty it's
fine
fine
okay init function we don't need this
okay init function we don't need this
episode rewards we don't need
episode rewards we don't need
this self. cm. reset we don't need
this self. cm. reset we don't need
this some rewards we need fill
this some rewards we need fill
observations we need this as
observations we need this as
well so I think this is where we put our
well so I think this is where we put our
logic
self. Vision range so we're going to do
self. Vision range so we're going to do
this is going to be to fill uh some
this is going to be to fill uh some
walls in so the thing can spawn at a
walls in so the thing can spawn at a
reasonable spot we can
do self. agent
positions where's the agent positions um
yeah self. agent
yeah self. agent
positions we'll just hardcode some
positions we'll just hardcode some
positions so like self. agent positions
positions so like self. agent positions
of row will
of row will
be uh
be uh
zero
equals
120 I'm going to have to just Mark these
120 I'm going to have to just Mark these
on the map or
on the map or
something uh can I do just for now like
120 uh row and then like
eight
eight
120 and
eight yeah I think
so uh
so uh
121 no wait I can't go any closer than
121 no wait I can't go any closer than
that so I should just put him
I should just put them
I should just put them
like call R call like
nine oops
nine oops
10 this should be
10 this should be
one
two okay and now the other one will be
two okay and now the other one will be
uh like this self. agent positions of
uh like this self. agent positions of
five is going to be
five is going to be
row will be uh
row will be uh
eight and
eight and
then
then
120 and then
120 and then
9 10
9 10
11 there so there our agent
spawned um I don't have the lanes made
spawned um I don't have the lanes made
yet I'm going to probably just have to
yet I'm going to probably just have to
draw a map I'm assuming we'll do that
draw a map I'm assuming we'll do that
after uh that should be fairly easy to
after uh that should be fairly easy to
to
to
do not really actually to be to be fair
do not really actually to be to be fair
we might we might do some like weird
we might we might do some like weird
masking of the DOTA
map I might just like import that map
map I might just like import that map
and like mask or trace or something like
that uh but okay we have the agent
that uh but okay we have the agent
spawned in
now we got to do uh let's not do creeps
now we got to do uh let's not do creeps
yet let's just keep the agents until we
yet let's just keep the agents until we
can get this
running up. rewards.
fill uh okay cool
fill uh okay cool
so in order to make this now
so in order to make this now
run where's the step
function
function
oh I kind of do want this don't I cuz it
oh I kind of do want this don't I cuz it
has like the engine code in
has like the engine code in
it yeah I
do I don't have the python version of it
do I don't have the python version of it
anymore
anymore
right my bad let's go grab that code
right my bad let's go grab that code
from uh
puffer so what we're going to do is
puffer so what we're going to do is
we're going to actually we are going to
we're going to actually we are going to
do I didn't want to debug in the in scon
do I didn't want to debug in the in scon
but because uh we already have the
but because uh we already have the
engine implemented uh I think it's
engine implemented uh I think it's
probably just better to do it that
way
way
CN and we're going to have to make some
CN and we're going to have to make some
big changes as well before we can get it
big changes as well before we can get it
running okay well we'll make the goal to
running okay well we'll make the goal to
day to get like some basic uh to get
day to get like some basic uh to get
like some super basic like the agents
like some super basic like the agents
run around in a map that looks like a
run around in a map that looks like a
mooba and maybe have like an attack
mooba and maybe have like an attack
action or something like
action or something like
that and we'll see how long that takes
that and we'll see how long that takes
and we'll go from
there so we've got self.
there so we've got self.
CNF we don't need these spawn position
CNF we don't need these spawn position
cans
cans
right um agent colors
should I have left agent
colors no because I know I'm going to
colors no because I know I'm going to
have to do it a different way
have to do it a different way
anyways AG positions OBS view I mean
anyways AG positions OBS view I mean
there's going to be some really cool
there's going to be some really cool
Tech in this at the very least so it'll
Tech in this at the very least so it'll
be
be
cool agents
cool agents
ryzen have Horizon have Vision range
ryzen have Horizon have Vision range
speed discretized no food reward
speed discretized no food reward
expected lifespan is gone on so we do
expected lifespan is gone on so we do
like
this what the hell just happened to my
Docker dude this thing just broke my
Docker dude this thing just broke my
freaking
freaking
terminal
terminal
freaking ah
B cannot be breaking a guy's
terminals
okay where's all my other
stuff the
stuff the
hell uh
what in the
hell created 11 days
ago well where's all the stuff in
ago well where's all the stuff in
it are you kidding me
why is this on like Dev Branch this is
why is this on like Dev Branch this is
is this a different
container six days
container six days
ago ah here
ago ah here
it's it's okay there's I found it it's
it's it's okay there's I found it it's
just the wrong container we are we're
fine where the heck is
this name is 1.0
okay Docker stop puffer
tank okay there we got it back
okay so we need whole bunch of stuff
okay so we need whole bunch of stuff
here don't want spawn position cans a
colors
colors
uh don't need width don't need
height num
agents not
agents not
really Horizon don't need
really Horizon don't need
that Vision range agent speed discretize
that Vision range agent speed discretize
is
is
good uh but that's all we need I think
good uh but that's all we need I think
so we can just do like this
good
good
reward yeah that's
nice and then we just do self.
nice and then we just do self.
height shape is
zero Ryon doesn't matter doesn't matter
zero Ryon doesn't matter doesn't matter
this doesn't
matter grid observations rewards agent
matter grid observations rewards agent
position
position
colors and spawn cans don't matter with
colors and spawn cans don't matter with
height Horizon doesn't matter Vision
height Horizon doesn't matter Vision
range speed discretized food reward
range speed discretized food reward
doesn't matter effect lifetime doesn't
doesn't matter effect lifetime doesn't
matter agent position spawn cans Okay
matter agent position spawn cans Okay
cool so that's nice
cool so that's nice
there um now compute
there um now compute
observations is fine spawn
observations is fine spawn
food is not
food is not
needed spawn
agent is going to be heavily
agent is going to be heavily
modified
reset
is um sure
is um sure
whatever agent spawning
whatever agent spawning
ah we do not do agent spawning
ah we do not do agent spawning
here so
we can get rid of this
right
yeah actually the stream has gone up a
yeah actually the stream has gone up a
little bit since I posted that so that's
little bit since I posted that so that's
cool
cool
um the twitch stream I mean at least or
um the twitch stream I mean at least or
the uh the Twitter one most of it's on
the uh the Twitter one most of it's on
Twitter
so let's see we have actions continuous
so let's see we have actions continuous
actions
discreet how much can we code on
this actually let me text a friend asked
this actually let me text a friend asked
me to tell him on this one sec
live auto correct is the worst thing
live auto correct is the worst thing
ever
invented okay so we don't need food this
invented okay so we don't need food this
is this goes
is this goes
away don't need
colors don't need random agent respawn
I don't think I might regret that we'll
see uh okay and now what we're going to
see uh okay and now what we're going to
have to do is we're going to have to
have to do is we're going to have to
debug this thing into
existence so we're going to add perer
existence so we're going to add perer
lib environments ocean MOA MOA or C MOBA
lib environments ocean MOA MOA or C MOBA
dox like
this set up
build and we'll see so we
build and we'll see so we
have agent positions is not built
have agent positions is not built
in Undeclared name not built
in Undeclared name not built
in
46 did I spell this
wrong
um maybe there's a error higher
um maybe there's a error higher
up agent positions is not a type oh I
up agent positions is not a type oh I
forgot a comma that's all
okay so that does compile uh let's take
okay so that does compile uh let's take
this signature and go to the python
this signature and go to the python
file and we'll do right here in
file and we'll do right here in
reset we'll get the signature so it's
reset we'll get the signature so it's
grid agent positions observations
grid agent positions observations
rewards don't need width and height
rewards don't need width and height
don't need DB agents
don't need DB agents
apparently do Vision range
region range agent speed disc okay
region range agent speed disc okay
perfect and we have uh this reset is
perfect and we have uh this reset is
actually inite uh Sealand so we can just
actually inite uh Sealand so we can just
do like this and then we do uh self. cm.
do like this and then we do uh self. cm.
reset
perfect
perfect
and uh then we need to add The Binding
and uh then we need to add The Binding
to config right yes we need to add
to config right yes we need to add
binding to config so
configs
configs
ocean ocean we're going to copy grid
ocean ocean we're going to copy grid
because it's going to be very similar to
because it's going to be very similar to
MOA in MOA
MOA in MOA
in and M name is just going to be
in and M name is just going to be
MOA and
MOA and
um yeah that's kind of it right for
now and
now and
MOBA mode eval
no attribute
no attribute
MOA
MOA
okay
okay
MOA so puffer
MOA and it takes a ton of arguments
MOA and it takes a ton of arguments
apparently seven
apparently seven
given make
mooba uh so what do we
mooba uh so what do we
do that doesn't seem to
do that doesn't seem to
make
sense so this is Vision range agent
sense so this is Vision range agent
speed so all this stuff is fine uh so I
speed so all this stuff is fine uh so I
guess that I didn't
guess that I didn't
do oh wait C grid continuous grid
do oh wait C grid continuous grid
continuous yeah no this is the wrong one
continuous yeah no this is the wrong one
so this is going to be oce MOBA do
so this is going to be oce MOBA do
Coba import environment is
CN differing extents in
Dimensions okay
really how about
really how about
here ah I have to do this before I think
here ah I have to do this before I think
right I have to put this above the
CN oh so
close and uh terminals
I don't need either of these because
I don't need either of these because
they are just
empty okay cool do I see
empty okay cool do I see
anything no I don't see anything because
anything no I don't see anything because
of the agent colors thing
right so agent One agent two and so on
right so agent One agent two and so on
and so forth
and so forth
B
MOA agent
colors uh so this is
not wait agent
not wait agent
positions and we have compute
observations hold on
when you spawn an agent you put it on
when you spawn an agent you put it on
the
grid and you you put agent positions and
grid and you you put agent positions and
on the grid right and then when you
on the grid right and then when you
step the thing you
do
do
ah I have to put it on the grid as
ah I have to put it on the grid as
well uh Moa
so let's just do let's just put this at
so let's just do let's just put this at
the top where we instantiate
the top where we instantiate
it now actually it should go here self.
it now actually it should go here self.
agent uh
positions star
positions star
equals Dot
array dtype this is
fine and then what do we do we do uh
fine and then what do we do we do uh
self.
grid agent
grid agent
One self. agent positions like this
agent
one let's
one let's
see arrays us indes must be type
see arrays us indes must be type
bull
bull
uh okay
why can't we
why can't we
see we can't see anything on the grid
see we can't see anything on the grid
yet though
right and then we have this renderer
right and then we have this renderer
down
down
here where's the uh the
renderer render
renderer render
mode should be a render function right
mode should be a render function right
yes right here
yes right here
uh so we have
uh so we have
colors the grid
colors the grid
here let's see what's in the grid is the
here let's see what's in the grid is the
grid
empty unique grid okay so we do have a
empty unique grid okay so we do have a
three which is Agent one
ah and then they're gone so they're
ah and then they're gone so they're
there for two frames and then they're
gone actually I should probably just
gone actually I should probably just
check where they are for those two
check where they are for those two
frames right
can I see
can I see
them
them
uh okay
uh okay
so
here it doesn't really help
um let's see it
maybe that
step maybe if I just do in Step I will
step maybe if I just do in Step I will
just like continue and we'll see we'll
just like continue and we'll see we'll
see what happens
see what happens
here let's just do
here let's just do
like
like
return uh self.
return uh self.
buff let's see if this does
anything okay so yes so here we have the
anything okay so yes so here we have the
agents right and they should be able to
agents right and they should be able to
move from there that's exactly what we
wanted
wanted
Coba now what happens in step is we get
Coba now what happens in step is we get
these
velocities um and now we say if it's
velocities um and now we say if it's
zero then we empty the grid oh I think I
zero then we empty the grid oh I think I
forgot to update the grid right
equals agent
equals agent
one
yeah
is okay and now we
eval okay perfect so now we have uh we
eval okay perfect so now we have uh we
have our agents that are spawned in the
have our agents that are spawned in the
two corners and they're wandering around
right this is the
right this is the
basis for what we do
next it's funny that it will actually
next it's funny that it will actually
take them a very long time to just even
take them a very long time to just even
randomly stumble all the way over to
randomly stumble all the way over to
where the creeps are right
I think one we have we're going to have
I think one we have we're going to have
to lock in the map size pretty soon
to lock in the map size pretty soon
um well I guess we could do a highres
um well I guess we could do a highres
map and then downscale it
right let's open up
Photoshop see what we can get for the
Photoshop see what we can get for the
map I'm not going to entirely go like
map I'm not going to entirely go like
make my own map from scratch here I'm
make my own map from scratch here I'm
going to use
going to use
uh
uh
the DOTA
map overhead view of the game map as
map overhead view of the game map as
of version
7.33
okay
Save open with
1,000 by 7
959 interesting that it is
959 interesting that it is
not exactly
not exactly
uniform DOTA yes we are building a high
uniform DOTA yes we are building a high
performance uh miniature MMO a mini MOA
performance uh miniature MMO a mini MOA
not MMO I've built plenty of that uh
not MMO I've built plenty of that uh
for oh wait got a
message
to
okay so this is ,00 by 959 9 um we
okay so this is ,00 by 959 9 um we
should stretch it to 1028 or was it 1024
should stretch it to 1028 or was it 1024
24 by
24 by
1024 create
paste
paste
yeah paste this in
yeah paste this in
here uh we want this to be
here uh we want this to be
centered this
centered this
perfect and I'm not an artist here so
perfect and I'm not an artist here so
this might take me a second but what we
this might take me a second but what we
want to do is we basically want to just
want to do is we basically want to just
like trace or mask or whatever so that
like trace or mask or whatever so that
we don't have to design our own entire
we don't have to design our own entire
map
map
um because the point of this is not to
um because the point of this is not to
make like a game that I can sell the
make like a game that I can sell the
point of this is to make an RL EnV so
point of this is to make an RL EnV so
we're just going to use like very
we're just going to use like very
similar
map now the question is is this too
map now the question is is this too
complicated uh I forgot how
complicated uh I forgot how
complicated the DOTA map is
complicated the DOTA map is
actually wait
actually wait
I forgot how much of a more complicated
I forgot how much of a more complicated
game is uh DOTA like DOTA is than League
game is uh DOTA like DOTA is than League
there's like all these side Lanes
right wait how much more complicated is
right wait how much more complicated is
the DOTA map than the league
map do they have the overhead
they don't even have a good overhead
they don't even have a good overhead
that we would be able to use if we
that we would be able to use if we
wanted to
wanted to
right yeah they don't even have a good
one oh man it's so much simpler
one oh man it's so much simpler
right I guess stylistically it's just
right I guess stylistically it's just
that they have let me
that they have let me
see so league
see so league
has one jungle in the
center which is actually small
and DOTA has all this extra stuff on the
and DOTA has all this extra stuff on the
side Twisted Tree Line map is just two
side Twisted Tree Line map is just two
lanes I wanted three lanes and I do like
lanes I wanted three lanes and I do like
the classic map
the classic map
um I think what we can do is we can vain
um I think what we can do is we can vain
Glory map oh God that's going to be so
Glory map oh God that's going to be so
simple right mobile Vin Glory map
yeah that's crazy simple
yeah that's crazy simple
right but the thing is none of them have
right but the thing is none of them have
good top
good top
downs I guess this is this this Smite
downs I guess this is this this Smite
like cartoon of the SN Smite
map I mean I kind of want to do the DOTA
map I mean I kind of want to do the DOTA
one and I just want to like I'll just
one and I just want to like I'll just
like paint over stuff that we don't need
like paint over stuff that we don't need
for
now I think that would be the coolest
now I think that would be the coolest
thing to do I mean dota's really like
thing to do I mean dota's really like
the
the
OG you
OG you
know it's really like the OG of
everything
so to start
so to start
with
um am I going to do
this this gets locked
this this gets locked
right and I think that what you do is
right and I think that what you do is
you just like wand
you just like wand
this oh that's really crunch uh let's do
this oh that's really crunch uh let's do
like
30 that's not bad
right you do something like
right you do something like
that oh I'm actually kind of concerned
that oh I'm actually kind of concerned
though when we downscale this map this
though when we downscale this map this
map is kind of fundamentally really high
map is kind of fundamentally really high
res right like when I downscale it I'm
res right like when I downscale it I'm
not even going to have enough
not even going to have enough
pixels to do stuff with
right
H
interesting what if I do like
interesting what if I do like
this or like
this or like
contiguous o
that's
tricky I guess I can just do something
tricky I guess I can just do something
for now and not care too much
right uh Trace them like just real
right uh Trace them like just real
quick yeah I think the quickest thing is
quick yeah I think the quickest thing is
just going to be to like go on this
just going to be to like go on this
layer here right get like a get like a
layer here right get like a get like a
decent size brush be bigger than this
decent size brush be bigger than this
what 50
what 50
maybe and just like start painting
maybe and just like start painting
around stuff in uh
black so
black so
like we want
like we want
obstacles um
if I do hold
if I do hold
on do I just like paint the jungles out
on do I just like paint the jungles out
for now and the side lanes and just like
for now and the side lanes and just like
keep the the main
keep the the main
Lanes I could probably do that right
Lanes I could probably do that right
yeah like so if I wanted to just do like
yeah like so if I wanted to just do like
uh
uh
this wait what the heck why can't I draw
why can't I not
why can't I not
draw Oh wrong
brush needs
symmetry well I was going to just try to
symmetry well I was going to just try to
paint I guess yeah you're right I kind
paint I guess yeah you're right I kind
of have to flip it huh and I have to
of have to flip it huh and I have to
like paint the same thing on both
like paint the same thing on both
sides is the map perfectly
sides is the map perfectly
symmetrical is there a box function to
symmetrical is there a box function to
just box off the areas in the well yeah
just box off the areas in the well yeah
I can draw boxes
I can draw boxes
um I what I was going to do is I was
um I what I was going to do is I was
just going to go like
just going to go like
this why is this
opacity dude what is with the smoothing
opacity dude what is with the smoothing
on this thing it's like
on this thing it's like
there yeah so I was just going to like
there yeah so I was just going to like
go like
this or something
then I guess that's going to be the
then I guess that's going to be the
quickest thing right is to just do
quickest thing right is to just do
that I can do it with boxes as
that I can do it with boxes as
well might be
easier so like we do from
easier so like we do from
here like we don't
here like we don't
need uh
need uh
this we don't need this one
whoops
whoops
nope wand this G this
nope wand this G this
nope did
what wand
this
this
okay uh we will say they start here at
okay uh we will say they start here at
the fountain right
the fountain right
so we like we
so we like we
box this
box this
area we box like
this this shouldn't be too long if I
this this shouldn't be too long if I
just do it this way
right and we box like
this
this
oops like what is it like
oops like what is it like
heish
heish
no
she I think if I just use the brush
she I think if I just use the brush
it'll be
faster
yeah and then we only need the lane so I
yeah and then we only need the lane so I
can just cut rid of I get rid of all
can just cut rid of I get rid of all
this right you don't need
this right you don't need
this and then I'll be able to edit this
this and then I'll be able to edit this
like as a mask really easily as well
like as a mask really easily as well
so don't need the
so don't need the
river uh you just need this one lane
river uh you just need this one lane
right here so I can like go around like
right here so I can like go around like
this I'll mirror it as well so it's
this I'll mirror it as well so it's
symmetrical if I can figure out how to
symmetrical if I can figure out how to
do
that and then in the jungle you don't
that and then in the jungle you don't
need most of it so I'm just going to put
need most of it so I'm just going to put
like a Big Blob uh in the middle I'll
like a Big Blob uh in the middle I'll
leave the river but I'm going to like
leave the river but I'm going to like
just blob everything else out so I'm
just blob everything else out so I'm
going to go like this something like uh
going to go like this something like uh
like this
maybe
right and then this this section that's
right and then this this section that's
like nicely rounded
like nicely rounded
here we'll go and all the way to the
here we'll go and all the way to the
river we'll go like
this um
this um
and this is too big uh this like the
and this is too big uh this like the
bottom jungle is like huge in Dota so we
bottom jungle is like huge in Dota so we
need to cover quite a bit more of
it like this
it like this
maybe
yeah and then the bottom Lane is also
yeah and then the bottom Lane is also
huge so we'll do like this
and uh like
this that looks pretty good
this that looks pretty good
right mid lane is kind of huge so let's
right mid lane is kind of huge so let's
just like chunk a little bit out of
that yeah and now if I
can and then can I transform
flip
flip
horizontal transform flip vertical
horizontal transform flip vertical
boom and I have to erase a little bit of
boom and I have to erase a little bit of
it but uh that's not
it but uh that's not
bad merge
layers and we will just like cut in this
layers and we will just like cut in this
way
way
so that we have like a reasonable Lane
so that we have like a reasonable Lane
here and we'll like just fix it and it's
here and we'll like just fix it and it's
basically symmetrical
right this looks like a decent start
right this looks like a decent start
right so we have uh the basic DOTA
right so we have uh the basic DOTA
map basic DOTA
map basic DOTA
map big Center region three
map big Center region three
lanes uh let's save this initially as
lanes uh let's save this initially as
like DotA
like DotA
uh PSD put this on desktop
here and uh what we're going to try to
here and uh what we're going to try to
do is we're going to
do is we're going to
export is there an export quick export
export is there an export quick export
as
as
PNG or export
s is it going to let
s is it going to let
me okay yeah here so I have this
nearest so this is
sharp uh this looks fine right
we're going to put this on uh
we're going to put this on uh
downloads say DOTA bit
downloads say DOTA bit
map that didn't take
longmount
longmount
see uh download or down was it
desktop users
bit
bit
map tank
map tank
slash and then we
slash and then we
will
will
buffer
DOTA puffer tank
DOTA puffer lib
DOTA puffer lib
slash uh Ocean or environments ocean
slash uh Ocean or environments ocean
uh
MOA cool so now we got the
map
map
and we can
do we can load up the
do we can load up the
map and we can see if we can get the
map and we can see if we can get the
agents to run around it a little bit and
agents to run around it a little bit and
then we can probably start on uh creep
then we can probably start on uh creep
AI already it's pretty darn fast
AI already it's pretty darn fast
progress and uh it looks like people
progress and uh it looks like people
like this cuz this is the highest uh
like this cuz this is the highest uh
concurrent on YouTube that we've had so
concurrent on YouTube that we've had so
that's
cool glad to see people are interested
cool glad to see people are interested
given it's it's pretty slow going you
given it's it's pretty slow going you
know it's it's Dev on the scale of like
know it's it's Dev on the scale of like
days or weeks not on the scale of months
days or weeks not on the scale of months
or years so it's fast by Dev standards
or years so it's fast by Dev standards
but it's slow by live content
standards um let's see
so right we need to go right here this
so right we need to go right here this
grid
grid
object
object
Dota or game map equal p or uh was
it
it
here load game map
here load game map
fromg
fromg
to
uh uh bit map
yeah and it
yeah and it
is dota bit
is dota bit
map bit
map from pill so we get the image we
map from pill so we get the image we
open it and then game map
equals
sum uh
sum uh
equal how do I have it here food empty
equal how do I have it here food empty
wall is
two yeah so we do self.
grid self. grid game
grid self. grid game
map map not equal zero is equal to
map map not equal zero is equal to
wall all
wall all
right and we need to move the uh the
right and we need to move the uh the
agents on this map as well so if I can
agents on this map as well so if I can
just like YOLO guess where these guys
are this looks
are this looks
like if I wanted to spawn him somewhere
like if I wanted to spawn him somewhere
around here this is white like 128 so
around here this is white like 128 so
this is 64 so this is 30 so like 32 32
this is 64 so this is 30 so like 32 32
should be a pretty
should be a pretty
safe uh spot to spawn him right I would
safe uh spot to spawn him right I would
think so like was it 128 minus those
think so like was it 128 minus those
96 uh
96 uh
9633 and then this
9633 and then this
is no this is uh column row row colum
is no this is uh column row row colum
this this might actually
this this might actually
work let's run it and
see oh cool look we got
see oh cool look we got
it um so it looks
it um so it looks
like the lanes didn't come out the way
like the lanes didn't come out the way
we wanted them to I
guess which is
weird let me check the bit
map oh wait
map oh wait
because it's because I painted it in
because it's because I painted it in
Black right I should have painted it in
white I think I have some
white I think I have some
di bit maps from a DOTA mini map project
di bit maps from a DOTA mini map project
I was working on a while back uh I mean
I was working on a while back uh I mean
that would be awesome if you have those
that would be awesome if you have those
if you have especially like um we need
if you have especially like um we need
some way of distinguishing walls is the
some way of distinguishing walls is the
main thing or solid so if we have some
main thing or solid so if we have some
way of like showing where you can't walk
way of like showing where you can't walk
on the map that's the main
on the map that's the main
thing um
yeah cool to see somebody over from
yeah cool to see somebody over from
twitch that's a relatively new spot for
twitch that's a relatively new spot for
my my stuff so always cool to see
my my stuff so always cool to see
somebody randomly finding the
stream uh I think I have to convert
stream uh I think I have to convert
these all to White
these all to White
right come here from Twitter very cool I
right come here from Twitter very cool I
think it is higher res on uh it's higher
think it is higher res on uh it's higher
res here right like the Twitter stream
res here right like the Twitter stream
is pretty low res
color yeah that's what I'm about to do
color yeah that's what I'm about to do
is color the the lanes in
is color the the lanes in
white or no the the other way around I'm
white or no the the other way around I'm
going to color this in white and then uh
going to color this in white and then uh
the other everything else will be zero
the other everything else will be zero
that's how that will work
YouTube is a yeah YouTube anywhere but
YouTube is a yeah YouTube anywhere but
Twitter is 1080 um I don't know Twitter
Twitter is 1080 um I don't know Twitter
just has a really crappy player nothing
just has a really crappy player nothing
I can do about
that let's just uh well save this oops
that let's just uh well save this oops
save this and then we export
as PNG with
transparency and 128 128 let's see how
transparency and 128 128 let's see how
this saves this looks good right
let's see what happens
now uh that's not what we want right
now uh that's not what we want right
that's
weird places you can walk do you mean
weird places you can walk do you mean
fog of war or only walkable I mean
fog of war or only walkable I mean
walkable terrain somehow you were in my
walkable terrain somehow you were in my
first row on recommended between a Mr
first row on recommended between a Mr
Beast video and a botting video for
Beast video and a botting video for
RuneScape because I watched your thesis
RuneScape because I watched your thesis
a few weeks ago that was sick thank you
a few weeks ago that was sick thank you
very much um I'm now a full-time RL
very much um I'm now a full-time RL
Exorcist meaning I try to remove the
Exorcist meaning I try to remove the
demons from this absolutely cursed
demons from this absolutely cursed
scientific field and uh I'm doing that
scientific field and uh I'm doing that
through a combination of Dev and
through a combination of Dev and
stupidly high performance Sim and cool
stupidly high performance Sim and cool
experiment stuff so this stream is uh
experiment stuff so this stream is uh
not really intended to be educational
not really intended to be educational
though it might end up being most of the
though it might end up being most of the
time it's really just like watch RL get
time it's really just like watch RL get
fixed live
that is the main
goal okay so what is wrong with this
goal okay so what is wrong with this
map it's following neural MMO on the
map it's following neural MMO on the
Carper Discord but didn't get a chance
Carper Discord but didn't get a chance
to contribute hopefully I can be of use
to contribute hopefully I can be of use
here still a big amateur on the RL in
here still a big amateur on the RL in
general hey we've got a number of
general hey we've got a number of
projects for like different experience
projects for like different experience
uh levels around uh lean key I think is
uh levels around uh lean key I think is
still in the chat is on the Pokemon RL
still in the chat is on the Pokemon RL
project which is awesome um yeah there
project which is awesome um yeah there
he is in chat uh so there 's that going
he is in chat uh so there 's that going
around there's some experimental side
around there's some experimental side
stuff with puffer there's environment
stuff with puffer there's environment
side stuff there's lots of RL that can
side stuff there's lots of RL that can
be done around if you just get involved
be done around if you just get involved
with like the open source side of it
with like the open source side of it
thesis was extremely interesting first I
thesis was extremely interesting first I
saw you as well thank you yeah I don't
saw you as well thank you yeah I don't
really that's really the first main
really that's really the first main
thing I've posted I've kind of kept
thing I've posted I've kind of kept
quiet while I was uh working on my PhD
quiet while I was uh working on my PhD
but now that I'm uh out of grad school
but now that I'm uh out of grad school
and just building stuff I'm doing it a
and just building stuff I'm doing it a
lot more publicly cuz it's fun and the
lot more publicly cuz it's fun and the
progress is super fast and it looks like
progress is super fast and it looks like
at least some people are interested so
at least some people are interested so
it's always a good
time what is wrong with this game
map uh oh I see it should just be uh
map uh oh I see it should just be uh
game map of axis yeah game map should
game map of axis yeah game map should
just be
just be
game negative one we just need the
game negative one we just need the
transparency layer
right uh Boolean
right uh Boolean
index game map not equal
to what is wrong
yeah there's lots of cool stuff going on
yeah there's lots of cool stuff going on
in uh in Pokemon for
in uh in Pokemon for
sure it's more accessible than the Sim
sure it's more accessible than the Sim
stuff that I'm doing though if you've
stuff that I'm doing though if you've
got more of a scientific background
got more of a scientific background
there's definitely experiment stuff on
there's definitely experiment stuff on
the rest of
puffer how do I screw this
puffer how do I screw this
up is this like not in a standard format
up is this like not in a standard format
or something
oh
duh that's what it needs to
be
be
and
and
perfect okay so this is not bad right
perfect okay so this is not bad right
we've got a clearly recognizable MOA map
we've got a clearly recognizable MOA map
we've got our agents wandering around in
we've got our agents wandering around in
this MOBA map I actually I'm going to
this MOBA map I actually I'm going to
take
take
a I'm going to show this I'm going to
a I'm going to show this I'm going to
post this to Twitter
uh what was this 1 hour
later pretty
sweet okay this needs to not
sweet okay this needs to not
be here okay um so now this works now we
be here okay um so now this works now we
have we have many ways we can go from
have we have many ways we can go from
here
here
um the player thing is going to get a
um the player thing is going to get a
lot more complicated very quickly the
lot more complicated very quickly the
NPCs are going to get complicated very
NPCs are going to get complicated very
quickly
quickly
um there's some really cool Tech I can
um there's some really cool Tech I can
show off here but it's going to take a
show off here but it's going to take a
little bit of
little bit of
effort
effort
um so what I'd like to do is I'd like to
um so what I'd like to do is I'd like to
to start using strs for the
to start using strs for the
players um because that is going to
players um because that is going to
basically scyon has something that works
basically scyon has something that works
like a built-in entity component system
like a built-in entity component system
that nobody realizes
that nobody realizes
exists yeah um so that's that gives you
exists yeah um so that's that gives you
the ability to do ultra fast operations
the ability to do ultra fast operations
uh in with very nice syntax over like
uh in with very nice syntax over like
structure data with multiple
structure data with multiple
agents so I think that that's the next
agents so I think that that's the next
thing I'm going to implement is I'm
thing I'm going to implement is I'm
going to do that I'm going to add like
going to do that I'm going to add like
uh some health you know like agent
uh some health you know like agent
Health attack like a few other
Health attack like a few other
attributes and uh maybe I'll add like
attributes and uh maybe I'll add like
team and I'll add like the attack
team and I'll add like the attack
function yeah that would be good and
function yeah that would be good and
then maybe I'll just like put them both
then maybe I'll just like put them both
right near the center just to see if
right near the center just to see if
they like they fight each other or
they like they fight each other or
whatever um and from there we can maybe
whatever um and from there we can maybe
get to NPCs in the next few hours we
get to NPCs in the next few hours we
will see I got I think I got like a full
will see I got I think I got like a full
three three and a half hours today yeah
three three and a half hours today yeah
okay hopefully that's enough to entice
okay hopefully that's enough to entice
people to stick around cuz I do need to
people to stick around cuz I do need to
take a couple quick minutes to use the
take a couple quick minutes to use the
restroom and make myself a shake so I
restroom and make myself a shake so I
will be right back and then we will do
will be right back and then we will do
that I will be
quick
e
e
e
e
e
e e
okay cheers
one of my projects in undergrad was
one of my projects in undergrad was
making an ntid detector with the Dota 2
making an ntid detector with the Dota 2
mini
mini
map yeah absolutely link it that sounds
map yeah absolutely link it that sounds
awesome
and then I'll talk about the uh the ECS
and then I'll talk about the uh the ECS
stuff that's pretty
stuff that's pretty
awesome Sammy
BG I do it did I type it
right it's uh what
right it's uh what
Sami is it yeah it might be
private um anyways uh for the new folks
private um anyways uh for the new folks
here if uh you haven't starred puffer
here if uh you haven't starred puffer
lib and you want to help me out a whole
lib and you want to help me out a whole
ton just give this project GitHub puffer
ton just give this project GitHub puffer
AI puffer lib give it a star uh it helps
AI puffer lib give it a star uh it helps
me out a whole
me out a whole
ton and uh let's talk about uh ECS stuff
ton and uh let's talk about uh ECS stuff
so okay so yeah this works now
so okay so yeah this works now
um cool I will check this out I've got
um cool I will check this out I've got
it starred thank
it starred thank
you so let's talk about cool ECS stuff
you so let's talk about cool ECS stuff
um this is technically upcoming Tech
um this is technically upcoming Tech
that uh I'm going to make a longer video
that uh I'm going to make a longer video
on uh so you get to see it early uh
on uh so you get to see it early uh
since this is live
since this is live
um the way that it works is you can
um the way that it works is you can
Define
Define
structs in
structs in
C that mirror numpy structure arrays in
C that mirror numpy structure arrays in
Python and you can apply operations to
Python and you can apply operations to
those structs uh as if you were applying
those structs uh as if you were applying
them to arrays you can do like players.
them to arrays you can do like players.
health and you can get all the players
health and you can get all the players
health and update it or whatever or you
health and update it or whatever or you
can do like you know players of five.
can do like you know players of five.
health and get just one player's Health
health and get just one player's Health
uh and it's really sweet because you can
uh and it's really sweet because you can
do these operations in python or in scon
do these operations in python or in scon
and they're incredibly incredibly fast
and they're incredibly incredibly fast
uh so that's what we're going to do
uh so that's what we're going to do
uh that's what we're going to do
uh that's what we're going to do
here I'm going to go get a couple
here I'm going to go get a couple
Snippets of code to start us off let me
Snippets of code to start us off let me
go grab those from
go grab those from
my one of the other projects I
have and we're going to go from there
okay so this specific snippet I was
okay so this specific snippet I was
looking
for yes
so this is the magic snippet right
here you get to make a dummy player and
here you get to make a dummy player and
get it dtype and then we get to do uh
get it dtype and then we get to do uh
like struct let's do like um struct
like struct let's do like um struct
player and then we can do
player and then we can do
say uh int
say uh int
uh
uh
Team it can
Team it can
do uh
do uh
in what do you do int is in should
in what do you do int is in should
Health be a in or float probably float
Health be a in or float probably float
float
Health
Health
position or Y
position or Y
X we can do some stuff like this
X we can do some stuff like this
right and then the python side of this
right and then the python side of this
is going to
be hold
on let me figure out where it
on let me figure out where it
is yeah so on the python
side we're going to make
players which is going to be however
players which is going to be however
many ins we
defined we're not going to need agent
defined we're not going to need agent
positions anymore either it's just going
positions anymore either it's just going
to be self.
to be self.
players
players
zeros uh D type is going to be nump
zeros uh D type is going to be nump
in C
in C
maybe
maybe
on not quite sure how to do it with
on not quite sure how to do it with
mixed uh data
types oh I think it just has to be the
types oh I think it just has to be the
same number of
bytes no wait I don't have to do this at
bytes no wait I don't have to do this at
all I can just
all I can just
do here player dtype
do here player dtype
equals
uh player D
uh player D
type the
type the
overa
oops player D type
right so we just need to get player D
type
type
player key type and then we do self.
player key type and then we do self.
players is going to just be numpy do
Zer num agents you just need like this
Zer num agents you just need like this
and then dtype is
and then dtype is
dype and then let's see uh if this is
dype and then let's see uh if this is
enough already I think this should
work hello
work hello
Krypto welcome
building
building
failed
failed
okay I think I just forgot to
rebuild welcome to the
rebuild welcome to the
development uh struct player what is
development uh struct player what is
wrong with struct
player I messed something
player I messed something
up hold
up hold
on am I just forgetting
on am I just forgetting
syntax it might
be is it does it need a c def on it yeah
be is it does it need a c def on it yeah
it needs a c def on it that's why duh
it needs a c def on it that's why duh
it's a c
it's a c
thing C
thing C
def
oops
oops
ah C death struck player okay so now now
ah C death struck player okay so now now
we should be able to have the the magic
we should be able to have the the magic
happen no no apparently
happen no no apparently
not inconsistent
indentation
oh and then we have to import
numpy and that looks
numpy and that looks
good so
good so
now what we're going to do is we're
now what we're going to do is we're
going to see if we have access to the
going to see if we have access to the
struct in Python which I think we should
struct in Python which I think we should
already taking a weirdly long amount of
already taking a weirdly long amount of
time okay but here so we
time okay but here so we
have perfect so self. players is this
have perfect so self. players is this
type
type
players can I do that team no there's
players can I do that team no there's
one other step we need before we get
one other step we need before we get
like the really nice uh Syntax for
like the really nice uh Syntax for
accessing this stuff hold on where did
accessing this stuff hold on where did
my
my
where did my thing go the
map I just had
this bear with me I'm grabbing Snippets
this bear with me I'm grabbing Snippets
from another thing that I
wrote uh there's one one additional step
wrote uh there's one one additional step
I'm trying to remember
type oh right there's a view on it uh
view players
view players
Rec equals uh self. players. view numpy
Rec equals uh self. players. view numpy
Rec
Rec
array okay now if we run
array okay now if we run
this you're going to see something
this you're going to see something
really
cool this is a Rec array we can do. team
cool this is a Rec array we can do. team
and we get access to the variables
and we get access to the variables
representing team do Health we get
representing team do Health we get
access to health uh we can also do like
access to health uh we can also do like
players wreck of
players wreck of
zero and we get access to the first
zero and we get access to the first
agent which is a struct
agent which is a struct
we can do
we can do
health and you essentially have mini
health and you essentially have mini
mini entity component system like
that in like few lines of
code so now what we have to do is um a
code so now what we have to do is um a
little bit more finicking with stuff
little bit more finicking with stuff
because I got to pass players to uh the
because I got to pass players to uh the
C
environment so let me go remember how I
environment so let me go remember how I
was supposed to do
that I
pass
pass
uh I make this the end
uh I make this the end
players right so I think I have to pass
players right so I think I have to pass
pass the flat
pass the flat
data to
data to
I pass the flat
I pass the flat
data
yeah so I'm going to do like this so I
yeah so I'm going to do like this so I
get the rec
get the rec
array and then when I pass
array and then when I pass
this to the C
this to the C
environment um I'm going to pass it as
environment um I'm going to pass it as
bytes I
believe so this is going to be solved up
believe so this is going to be solved up
players. viw
players. viw
ent8 and hopefully that will let me do
ent8 and hopefully that will let me do
what I want to
do now we're of course we're going to
do now we're of course we're going to
have to modify a few things so this is
have to modify a few things so this is
no longer a float array player positions
no longer a float array player positions
this is now going to be a player
this is now going to be a player
star players
hi I'm from Vietnam and really
hi I'm from Vietnam and really
interested in rl2 inspired by Alpha zero
interested in rl2 inspired by Alpha zero
opening I will be cool to know your
opening I will be cool to know your
reasons for not taking the path of pain
reasons for not taking the path of pain
and suffering like
RL I think I have I have taken the path
RL I think I have I have taken the path
of pain here right there's been very
of pain here right there's been very
very much suffering involved with making
very much suffering involved with making
RL work um I'm currently attempting to
RL work um I'm currently attempting to
make RL involve much less
make RL involve much less
suffering that is the main goal of what
suffering that is the main goal of what
I'm doing
here welcome to the stream
though observations here players so this
though observations here players so this
is now going to be
is now going to be
players uh and we're going to move this
players uh and we're going to move this
is self. players equals players and I
is self. players equals players and I
think there's a cast of some type that
think there's a cast of some type that
we have to do here if I recall correctly
we have to do here if I recall correctly
I did this I have like this test I have
I did this I have like this test I have
set up on the other monitor from when I
set up on the other monitor from when I
I set this up before to do this
I set this up before to do this
um let me go find the little snippet I
um let me go find the little snippet I
managed to get it done without Malex if
managed to get it done without Malex if
I recall which I was pretty proud of uh
I recall which I was pretty proud of uh
getting it h yeah it's very easy it's
getting it h yeah it's very easy it's
just a it's a very simple cast so this
just a it's a very simple cast so this
is just going to be a player
is just going to be a player
star cast of players. data and that's it
and this is now just players.
shape uh and now this is y equals self.
shape uh and now this is y equals self.
players and look how much nicer this
players and look how much nicer this
is we can Havey we can
havex we can do the exact same thing
havex we can do the exact same thing
here
and we'll be able to vectorize this as
well
well
okay and with a little bit of finicking
okay and with a little bit of finicking
around we should hopefully be able to
around we should hopefully be able to
get this to build and get this to
get this to build and get this to
run Maybe
puffer mooba has no attribute okay agent
puffer mooba has no attribute okay agent
positions perfect we just fix that real
quick so this is just going to be self.
quick so this is just going to be self.
players uh
players uh
dot hold
ony equals p
array uh and this is going to be
96 and
thenx and self. grid this is
thenx and self. grid this is
fine uh agent positions is going to
fine uh agent positions is going to
be self upop
be self upop
is self. players. y self. players. x
is self. players. y self. players. x
it's actually kind of cleaner than
it's actually kind of cleaner than
before and
uh I think that's
uh I think that's
it what's the twitch link or user uh
it what's the twitch link or user uh
twitch is J Suarez 5341 exact same as I
twitch is J Suarez 5341 exact same as I
guess on Twi on Twitter and the YouTube
guess on Twi on Twitter and the YouTube
is the neur is neural MMO so it's
is the neur is neural MMO so it's
different I may eventually change the
different I may eventually change the
neural Channel if uh puffer gets bigger
neural Channel if uh puffer gets bigger
or you know my personal gets bigger but
or you know my personal gets bigger but
since people know neural MMO now I'm
since people know neural MMO now I'm
still just leaving that as
still just leaving that as
is okay got differing extents and
is okay got differing extents and
dimension zero you're assigning all
dimension zero you're assigning all
players on the grid to agent One agent
players on the grid to agent One agent
one is just the color um yeah agent one
one is just the color um yeah agent one
is just a color we haven't implemented
is just a color we haven't implemented
colors in this so this code is being
colors in this so this code is being
reused for my continuous control engine
reused for my continuous control engine
that I built over the last few days uh
that I built over the last few days uh
so you know I had like a few hundred
so you know I had like a few hundred
lines of starter code code that I wrote
lines of starter code code that I wrote
and I'm like repurposing it so not
and I'm like repurposing it so not
everything has been retro fitted
everything has been retro fitted
perfectly never heard of raray until now
perfectly never heard of raray until now
Game Changer yes they're an absolute
Game Changer yes they're an absolute
Game Changer once you figure out how
Game Changer once you figure out how
they work they are a total pain in the
they work they are a total pain in the
ass until then but I will tell you that
ass until then but I will tell you that
uh using raray as the backend for puffer
uh using raray as the backend for puffer
like that is what I use for the secret
like that is what I use for the secret
sauce behind puffer's emulation core
sauce behind puffer's emulation core
layer that makes everything else work
layer that makes everything else work
and it is amazing when you get it
okay so what has happened here that this
okay so what has happened here that this
does
does
not work
um compute
observations h
it's possible that
um it's possible that this is just not
um it's possible that this is just not
interpreting the data right
here let's check this out uh
here let's check this out uh
so print Y and
X let's see if it's like giving us
X let's see if it's like giving us
garbage or not
garbage or not
is is possible that we need to uh pass
is is possible that we need to uh pass
some stuff a little
differently yes so this is not uh this
differently yes so this is not uh this
is not being cleared or this is not
is not being cleared or this is not
being passed
being passed
correctly um let's figure out
correctly um let's figure out
why self. players
why self. players
you pass in players you get the player
you pass in players you get the player
data
right oh it's the view
right oh it's the view
right so self.
right so self.
player let's do
um well I know that there's the way I
um well I know that there's the way I
did it before works but I
did it before works but I
it's a little bit obnoxious because you
it's a little bit obnoxious because you
need the specific number of
bites let me just play with it here for
bites let me just play with it here for
a
second so this is like the tricky thing
second so this is like the tricky thing
is you have to get the data synced up
is you have to get the data synced up
between C and Python and then you're
between C and Python and then you're
good as soon as you have it synced up
good as soon as you have it synced up
you're good uh and then you basically
you're good uh and then you basically
have a view that you can modify from
have a view that you can modify from
either side
type D type dot uh item
type D type dot uh item
size is
size is
16 yeah that looks good right so I just
16 yeah that looks good right so I just
do s.
do s.
players dtype
players dtype
uh here it's num
uh here it's num
agents it's going to
agents it's going to
be D type. item size
be D type. item size
and then it's going to be numpy doint 8
and then it's going to be numpy doint 8
like this
like this
maybe okay and then this is players flat
maybe okay and then this is players flat
I guess and then self. players equals
I guess and then self. players equals
self. players. vwd type. view numpy Rec
array
array
no you got to do from buffer I think in
no you got to do from buffer I think in
order to not copy I think this view will
order to not copy I think this view will
actually copy under the hood from
from buffer dtype equals dtype do view
from buffer dtype equals dtype do view
okay this is it I think this is it so
okay this is it I think this is it so
you make it in bytes you make just the
you make it in bytes you make just the
bytes you buffer it into the dtype and
bytes you buffer it into the dtype and
then you view it as a Reay that should
then you view it as a Reay that should
that should work and then of course in
that should work and then of course in
uh in the reset or whatever you have to
uh in the reset or whatever you have to
do this is self. players uh flat and
do this is self. players uh flat and
it's already a un tap so you're good
where are Rec Rays used in puffer lib
where are Rec Rays used in puffer lib
I'm not seeing
I'm not seeing
it I will show
you so the secret sauce that makes
you so the secret sauce that makes
puffer lib work is this one file right
puffer lib work is this one file right
here 42 lines uh it's this emulation
here 42 lines uh it's this emulation
file and right here this struct D type
file and right here this struct D type
thing this is is making a uh a
thing this is is making a uh a
structured array which is like the same
structured array which is like the same
as a Rec array um so this is creating a
as a Rec array um so this is creating a
uh the well where is
uh the well where is
it D type from space yes so we're
it D type from space yes so we're
creating a structured numpy data type
creating a structured numpy data type
which we are then using to store our
which we are then using to store our
data so this is this is it right here
data so this is this is it right here
this creates the type and then we use
this creates the type and then we use
this type
this type
everywhere and all the emulation relies
everywhere and all the emulation relies
on this
uh so we're still getting something
uh so we're still getting something
weird here I
think are we did I rerun
this
H
H
interesting I should be able to tell
interesting I should be able to tell
from right
here is
flat looks like the data was populated
flat looks like the data was populated
right in
here
here
view layer dtype
view layer dtype
yeah right this
yeah right this
works you can see it right
here so why is it not
here so why is it not
working players
working players
oh I know I know why I'm dumb um yeah
oh I know I know why I'm dumb um yeah
I'm
I'm
dumb uh I'm going to make a g player
dumb uh I'm going to make a g player
function just to prevent myself from
function just to prevent myself from
making this mistake this is my one major
making this mistake this is my one major
complaint uh and it's it's a complaint
complaint uh and it's it's a complaint
about C but really like scon should have
about C but really like scon should have
taken this feature from python instead
taken this feature from python instead
of from C uh structs are passed by value
of from C uh structs are passed by value
not by
not by
reference uh that's why it's it's really
reference uh that's why it's it's really
easy
easy
that's why it's really easy to screw
up okay
up okay
so
so
cdef player
cdef player
star get
star get
player uh
player uh
environment uh
environment uh
n or
n or
uh no
uh no
it's self you don't need the environment
it's self you don't need the environment
it's just self and then
it's just self and then
int uh PID just player ID then you
int uh PID just player ID then you
return it's no this is wrong see it's
return it's no this is wrong see it's
giving you the wrong wrong return it's
giving you the wrong wrong return it's
andersan self. players of PID you need
andersan self. players of PID you need
to return a reference or uh you you know
to return a reference or uh you you know
you're just screwed like you're making a
you're just screwed like you're making a
copy without realizing it that is
why I don't know if that fully explains
why I don't know if that fully explains
what went wrong but I know that that is
what went wrong but I know that that is
potentially the uh the issue here
potentially the uh the issue here
so uh this cast should be fine this is a
so uh this cast should be fine this is a
cast and
then player star
then player star
player player is get player
yeah and what you do is you do uh this
yeah and what you do is you do uh this
is going to be see def player star
is going to be see def player star
player we do player is going to be get
player we do player is going to be get
player old R and actually makes
player old R and actually makes
everything cleaner it's just you need
everything cleaner it's just you need
this one function because otherwise you
this one function because otherwise you
forget ERS ends and you're
screwed and then we do player doy player
screwed and then we do player doy player
dox so it's actually cleaner but you
dox so it's actually cleaner but you
have to uh you have to like fix stuff
up and uh anywhere else i' imagine right
up and uh anywhere else i' imagine right
here probably player star
here probably player star
player do player is going to be get
player do player is going to be get
player Y is going to be player. y
player Y is going to be player. y
player. x
and then we
and then we
do player. y player. x
perfect and let's see if this gets us
perfect and let's see if this gets us
let's see if this gets it for
us still got differing extents so
us still got differing extents so
something is very very odd um that this
something is very very odd um that this
is not not working
immediately because this should be the
immediately because this should be the
same
same
data and we should be able to like print
data and we should be able to like print
this
this
even
um grid players observations
I'm trying to think how I screwed this
I'm trying to think how I screwed this
up it looks fine to
me is there like some bite ordering
me is there like some bite ordering
Shenanigans going on maybe
I wonder if I can just do self.
I wonder if I can just do self.
players uh.
players uh.
data right and then if I do
data right and then if I do
Coba can I just
Coba can I just
do
do
players like this since I just gave it
players like this since I just gave it
the data does that
the data does that
work oops I got to recompile
work oops I got to recompile
that might do
that might do
it it's also possible I have a separate
it it's also possible I have a separate
bug that I'm not aware
of yeah okay so that didn't help I'm
of yeah okay so that didn't help I'm
going to not stick with that because
going to not stick with that because
it's confusing
can I tell what is wrong just by doing
this players.
this players.
x this all looks
x this all looks
good all looks good um
self
self
players. y. dtype
oh wait wait wait uh self. players
oh wait wait wait uh self. players
flat it's weird that this is actually
flat it's weird that this is actually
work it looks like it's working I would
work it looks like it's working I would
think that you would have to do like
think that you would have to do like
you'd have to like copy this in like
you'd have to like copy this in like
this
this
maybe but I guess
maybe but I guess
not um self. players x.d Type L 32 I'm
not um self. players x.d Type L 32 I'm
going to try like this just to see if
going to try like this just to see if
this makes a difference
this makes a difference
I don't think it does
though yeah
though yeah
no very
no very
weird oh yeah well it shouldn't because
weird oh yeah well it shouldn't because
it's a copy yeah that's fine
it's a copy yeah that's fine
um
um
ah why is this not mirroring the data
ah why is this not mirroring the data
correctly I'm going to have to just
correctly I'm going to have to just
start putting prints in the C code or
start putting prints in the C code or
the syon code
okay let's see what this
okay let's see what this
says this should tell us if uh the data
says this should tell us if uh the data
is getting into scon correctly
okay what does it say so it
says that's not
says that's not
good
um just got to know your X account
um just got to know your X account
recently we'll look through the entire
recently we'll look through the entire
re but when I have time I just started
re but when I have time I just started
applying RL and trading I don't know
applying RL and trading I don't know
whether it's a myth or not
whether it's a myth or not
uh it seems like a great way to either
uh it seems like a great way to either
gain or lose a lot of money I will say
gain or lose a lot of money I will say
that hopefully I can get something to
that hopefully I can get something to
work best of luck to you do not lose all
work best of luck to you do not lose all
your
money I think I literally just replied
money I think I literally just replied
to somebody on on X uh today with the
to somebody on on X uh today with the
like and it's gone Simpsons meme with
like and it's gone Simpsons meme with
like rln Trading
where is the like the and it's
gone yeah this
gone yeah this
one oh I guess it's South Park
I'm curious why this
thing why this thing is it's getting
thing why this thing is it's getting
some
some
data but it's not getting the data I
data but it's not getting the data I
expect it to be
getting what if I make them all floats
getting what if I make them all floats
does that make a
does that make a
difference it shouldn't right
is it casting
is it casting
wrong something
shouldn't
be self. players
be self. players
equals player star players.
data
data
uh maybe you need to have the the data
uh maybe you need to have the the data
type on it but I don't think that should
type on it but I don't think that should
matter
I think that should matter right
oh that did
oh that did
matter okay so that's really weird you
matter okay so that's really weird you
need the uh the data type on here to
need the uh the data type on here to
correctly transfer the data if you don't
correctly transfer the data if you don't
actually type it you get the wrong data
actually type it you get the wrong data
that's really
that's really
weird I'm going to leave this printting
weird I'm going to leave this printting
for
for
now um what else what are what are the
now um what else what are what are the
other errors agent positions oh yeah
other errors agent positions oh yeah
that's
easy okay well we found it
easy okay well we found it
uh so this is
uh so this is
now self. players. y look how clean this
now self. players. y look how clean this
is by
comparison ooh we got it look this is
comparison ooh we got it look this is
what we have
so we got the agents running around
so we got the agents running around
they're parameterized by strs meaning we
they're parameterized by strs meaning we
can do a lot more stuff with them they
can do a lot more stuff with them they
run around our
run around our
environment very very
nice um what do we add next do we add an
nice um what do we add next do we add an
attack
action oh you hadn't seen this before
action oh you hadn't seen this before
yeah we built this in the last couple
yeah we built this in the last couple
hours I guess we had the continuous
hours I guess we had the continuous
control engine to start
control engine to start
with yeah we'll give agents we'll make
with yeah we'll give agents we'll make
different like agent types and stuff
different like agent types and stuff
hold on it takes time but yeah so this
hold on it takes time but yeah so this
is the uh I mean I did this in uh I did
is the uh I mean I did this in uh I did
this in Photoshop I just like you know
this in Photoshop I just like you know
traced around the DOTA map in two
traced around the DOTA map in two
layers uh I'm like imported it into the
layers uh I'm like imported it into the
engine here that I made and now we have
engine here that I made and now we have
the agents wandering around on here uh
the agents wandering around on here uh
and yeah it's pretty
cool just need uh need tracking and
cool just need uh need tracking and
pathf finding for creeps yes we do need
pathf finding for creeps yes we do need
that let's start with some basic attacks
that let's start with some basic attacks
first
right and teams and stuff going to use
right and teams and stuff going to use
the restroom real quick back in one
the restroom real quick back in one
minute and then what we're going to do
minute and then what we're going to do
is we're going to try to get this into a
is we're going to try to get this into a
spot where like it vaguely resembles
spot where like it vaguely resembles
agents fighting on a MOA map and that's
agents fighting on a MOA map and that's
going to be the goal for
now we may or may not get to creeps
now we may or may not get to creeps
we'll
see
e e
okay
we are
we are
set for another two hours of depth at
least and a polish off the
shake hit the 255 bench today happy with
shake hit the 255 bench today happy with
that got to keep it up
let me think
here okay
here okay
so next thing we're going to do
is we're going to add basic attacks in
is we're going to add basic attacks in
I'd
I'd
say
so let's do the
um let's do this side
first we're going to
do this is going to be
do this is going to be
four you can
four you can
attack up down left
attack up down left
right um obviously this is just the
right um obviously this is just the
discrete version which is easier to
discrete version which is easier to
think about to start with we'll make it
think about to start with we'll make it
continuous as well whatever
uh and we should also make the player
uh and we should also make the player
Health
Health
um yeah we should also edit the player
um yeah we should also edit the player
Health in the
Health in the
m.y let's do
m.y let's do
oops Z MOA
oops Z MOA
pix let just give them three Health to
pix let just give them three Health to
start
just so that
we where is
this health is going to be numpy
this health is going to be numpy
dot
array dp. On's
10 three time time the type i. float 32
10 three time time the type i. float 32
self. players. team we like
self. players. team we like
this uh was
this uh was
team zero
team zero
oops zero
zero type is numpy do
zero type is numpy do
float 32 I think this one's in 32
float 32 I think this one's in 32
actually
actually
right okay
now we have to add the attack action
now we have to add the attack action
into
here um so what we're going to do is we
here um so what we're going to do is we
have uh the
have uh the
movement and the attacks have to happen
movement and the attacks have to happen
before the movement
so um we need to
so um we need to
do
int
attack so
where's player
dox we can totally put these up
here and then we'll
here and then we'll
do Tac
do Tac
zero we'll do
uh we need Target as well
right well what we do is we'll do Dr and
right well what we do is we'll do Dr and
DX
right dust y dust X
maybe yeah let's do
d y = y xal
d y = y xal
x so this is going to
x so this is going to
be like
be like
this
LF okay so now we have the destination
LF okay so now we have the destination
of text
um we can do like
um we can do like
this then we
do
do
if Rd is equal
to what's player agent one is
three
three
agent
agent
one and what we do is we need a Target
player
Target Target is going to be get
Target Target is going to be get
player I don't know why it's filled this
player I don't know why it's filled this
this Auto filled this
garbage uh we
garbage uh we
need what Target ID
shoot we don't have any way right now of
shoot we don't have any way right now of
getting uh player IDs do
getting uh player IDs do
we yeah we don't have any good way of
we yeah we don't have any good way of
getting player
IDs we need to add a player ID map don't
IDs we need to add a player ID map don't
we H that's
we H that's
unfortunate yeah that's very
unfortunate yeah that's very
unfortunate I makes it
harder any way I can hack this for the
harder any way I can hack this for the
time being
not
not
really okay we're going to have to do a
really okay we're going to have to do a
a slightly annoying thing we got to go
a slightly annoying thing we got to go
make a player ID map
we do
we do
um
um
unsigned
unsigned
int pids or PID
int pids or PID
map and then
um self. PID
um self. PID
map numpy do
map numpy do
Zer 32
this see into I yeah okay
this see into I yeah okay
so
so
player PID
um you can't quite do this either
um you can't quite do this either
because you got to
because you got to
do into
do into
YX int player.
YX int player.
y self. PID map YX equal to I
y self. PID map YX equal to I
okay so now we have the
okay so now we have the
pids and what we get to
do int Target PID
okay so we get to
okay so we get to
do uh Target PID is going to be self.
do uh Target PID is going to be self.
PID
PID
map and then we actually have to do i+
map and then we actually have to do i+
one at the top because pids have to
one at the top because pids have to
start
start
from pids have to start
from pids have to start
from no no wait we do there's a trick to
from no no wait we do there's a trick to
this you do minus one and then you make
this you do minus one and then you make
this uh a you make this a signed integer
this uh a you make this a signed integer
that way you don't have to do a weird
that way you don't have to do a weird
offset on your pit map I learned that
trick so now you have Target
PID going be the PID map just y just X
PID going be the PID map just y just X
you say if Target pit is not equal to
you say if Target pit is not equal to
negative 1 you get the
negative 1 you get the
target target at
target target at
team
team
is not equal the player. team then you
is not equal the player. team then you
do target. health is negative minus
do target. health is negative minus
equal to
one um and if target.
health is less than or equal to zero
health is less than or equal to zero
then we need to do a a respawn
then we need to do a a respawn
thingy so what we're going to do is
thingy so what we're going to do is
we're just going to hardcode some
we're just going to hardcode some
respawn points I
think we're going to go hardcode these
think we're going to go hardcode these
uh these agent positions into the C
uh these agent positions into the C
code the
code the
scon wherever this
scon wherever this
is
somewhere yeah right here
somewhere yeah right here
so all this crap we
so all this crap we
can we can hardcode we can get this into
can we can hardcode we can get this into
the scon
layer
layer
and where they do self. players they're
and where they do self. players they're
right
right
here so now what we do is
uh
spawn we can do we do spawn X spawn
y I guess
I less than
I less than
five we
five we
do what's it our self. num agent over
two got team equals zero
two got team equals zero
do
do
spawn uh Y is
spawn uh Y is
96 is this plus
I randomly in a circle in a
I randomly in a circle in a
corner yeah I don't want to have to
corner yeah I don't want to have to
write the function for that so I'm being
write the function for that so I'm being
lazy for now but
yes this is what
32 plus I
minus agents over
minus agents over
two yeah okay so this is this and then
two yeah okay so this is this and then
we do uh player. Health l. health is
we do uh player. Health l. health is
equal to
equal to
three and we can get rid of all this
garbage
garbage
this
YX and we have
YX and we have
YX PID
YX PID
map solid
okay so
okay so
now we can respawn the agent
now we can respawn the agent
right if they fight each
other can respawn the agent if they kill
other can respawn the agent if they kill
each
other Target
we should make a move
too I think we should make like a move
to move
to move
to uh
to uh
self in
self in
PID so players going to be the
PID so players going to be the
player player. X player.
player player. X player.
Y uh we have move this and then we have
Y uh we have move this and then we have
to do we have to get the grid
to do we have to get the grid
position
cev we do
float
float
disk dis y dis
disk dis y dis
X so we do dis y dis
X so we do dis y dis
X I don't know why I did all that that
X I don't know why I did all that that
garbage self
garbage self
dot grid is going to be
dot grid is going to be
empty now
empty now
what makes actually no
what makes actually no
sense HD this is des y dest x right
I don't know why it keeps giving me
I don't know why it keeps giving me
these garbage
suggestions
so self.
so self.
grid into player. Y into of player. X is
grid into player. Y into of player. X is
going to be empty
int y so we don't need this we can just
int y so we don't need this we can just
do like this agent
one do self.
PID
PID
map self.
map self.
PID
PID
app in
app in
player okay okay so I think this does
player okay okay so I think this does
it this moves the
it this moves the
agent I thought he used C this is cython
agent I thought he used C this is cython
this compiles to c and I check it so
this compiles to c and I check it so
that uh all the operations that are
that uh all the operations that are
critical compile perfectly to C with no
critical compile perfectly to C with no
calls back to python so what you're
calls back to python so what you're
seeing is one to one with C with
seeing is one to one with C with
additional fun
features and it heck of a lot quicker to
write uh if you want to actually see the
write uh if you want to actually see the
C by the way there's a heck of a lot of
C by the way there's a heck of a lot of
it because it's autoc compiled to this
it because it's autoc compiled to this
uh but it is it is very
fast love me some scon
since I see we have a few folks watching
since I see we have a few folks watching
this including a couple on Twitch which
this including a couple on Twitch which
is kind of cool to see
is kind of cool to see
um if you all want to help me out just
um if you all want to help me out just
star the repo on GitHub it helps me a
star the repo on GitHub it helps me a
ton it's just puffer AI SLP puffer
ton it's just puffer AI SLP puffer
lib working on this fulltime really all
lib working on this fulltime really all
I
ask okay back to Dev
target. Health equals
target. Health equals
3 and then move
3 and then move
to we're going to move the target
to we're going to move the target
to again I don't know why it gives me
to again I don't know why it gives me
bad suggestions it's supposed to be
bad suggestions it's supposed to be
Target spawn y Target spawn
Target spawn y Target spawn
X
X
okay and uh I should just be able to do
okay and uh I should just be able to do
self. respawn
self. respawn
and we'll just make a little inline for
and we'll just make a little inline for
this because I think we'll probably use
this because I think we'll probably use
this a fair bit
right he. move to Target
right he. move to Target
PID uh in
PID player C
PID player C
death then we just do
death then we just do
player do
player do
spawn C
spawn C
def yeah this should be a c def this
def yeah this should be a c def this
should be a c def so they're
should be a c def so they're
fast you don't call back to
Python and uh this respawn the reason I
Python and uh this respawn the reason I
wanted to do this as well so I can reset
wanted to do this as well so I can reset
the
the
health like
this player. health is going to be
this player. health is going to be
three okay okay
three okay okay
solid
solid
so from
so from
here Target
here Target
PID uh Target
team and Target Health
perfect you respawn the
target um and that should be sufficient
target um and that should be sufficient
I'm sure there's going to be some small
I'm sure there's going to be some small
stuff to
debug like right
here where did I
miss grid 156
ah and then move
to
PID expected three got
four C
def this is a should be a
comma does it
run buffer
run buffer
mismatch ah
mismatch ah
72 this needs to be an in 32
seg fall
seg fall
lovely uh so this is one of the places
lovely uh so this is one of the places
where scyon is so nice compared to base
where scyon is so nice compared to base
C so base C right there no bounce checks
C so base C right there no bounce checks
or anything cuz doing that slow and
or anything cuz doing that slow and
scyon they're optional
scyon they're optional
so you can compile with or without
so you can compile with or without
them if you compile with them it's fast
them if you compile with them it's fast
and if you compile without them it's
and if you compile without them it's
slow but it's easy so we can Dev without
slow but it's easy so we can Dev without
the checks and then we can you know
the checks and then we can you know
productionize afterwards
with and then we get a actually
with and then we get a actually
reasonable error here right
uh and we can see that I forgot to
uh and we can see that I forgot to
initialize Y and
initialize Y and
X
right that would take me a long time to
right that would take me a long time to
find in uh in C
okay got differing
extents so uh it appears
that I also have to set player. X and Y
that I also have to set player. X and Y
of course I forgot to do that so player.
of course I forgot to do that so player.
y player dox we set these to the
spawn we're probably going to have to
spawn we're probably going to have to
set the spawn close to the Center for
set the spawn close to the Center for
starters
does it run yet let's
see perfect so this already
see perfect so this already
runs we'll see whether the attack
runs we'll see whether the attack
function works when I put the agents
function works when I put the agents
close to each other um but this already
close to each other um but this already
Works Let's uh let's color the agents a
Works Let's uh let's color the agents a
little bit
little bit
differently just so we can
differently just so we can
see maybe
team
agent really crappy code but we'll do
agent really crappy code but we'll do
this just as a quick
this just as a quick
check so we get a renderer
okay so now they're two different colors
okay so now they're two different colors
so we can actually see what's going on
right and now all we have to do is we
right and now all we have to do is we
have to guess a a position close to the
have to guess a a position close to the
Center for these guys
so I don't know let's
so I don't know let's
do it's a 128x 128
do it's a 128x 128
right so let's just do
like this will be
like this will be
like
uh plus
uh plus
I and then the X will be
I and then the X will be
like 62 or
like 62 or
something and then this one will be
something and then this one will be
spawn y y will be 64 +
spawn y y will be 64 +
I and then this will be like
I and then this will be like
66 let's see if that does
66 let's see if that does
it that might they may or may not be in
bounds okay
did I just see one
respawn well they're definitely been
respawn well they're definitely been
they've definitely attacked each other a
they've definitely attacked each other a
few
times but pretty
times but pretty
cool so already we have something basic
cool so already we have something basic
working it looks like oh yeah I just saw
working it looks like oh yeah I just saw
one of them die there and
one of them die there and
respawn I'm pretty
sure okay so we have something
sure okay so we have something
reasonable um now what we need is creeps
reasonable um now what we need is creeps
I guess is there anything we should do
I guess is there anything we should do
before
creeps I think not I think that the uh
creeps I think not I think that the uh
the creep should be fine now the one
the creep should be fine now the one
thing that's a little Annoying with the
thing that's a little Annoying with the
creeps is they kind of have like a fixed
creeps is they kind of have like a fixed
path that they
path that they
follow all right unless they get
follow all right unless they get
distracted
distracted
so I have to figure out how that AI is
so I have to figure out how that AI is
implemented
implemented
efficiently that's the main thing
how would you implement the DOTA creep
how would you implement the DOTA creep
AI thing or like the just the
AI thing or like the just the
um MOA creep AI in general
so that's going to be hard but I guess
so that's going to be hard but I guess
that's one of the few actually kind of
that's one of the few actually kind of
really hard
really hard
things uh to start with
and we can just start on
it we can do uh
C this can be
C this can be
creep one
creep I'm going to make the creep
creep I'm going to make the creep
separate for now
separate for now
because I know I'm going to need to
because I know I'm going to need to
anyways like the heroes are going to get
anyways like the heroes are going to get
a bunch of stuff that the creeps aren't
a bunch of stuff that the creeps aren't
going to get
and then what I do is I do uh
and then what I do is I do uh
if hid great less than
if hid great less than
equal or self num
equal or self num
agents otherwise you return creeps
yep and
something like a list of way points that
something like a list of way points that
they move towards and are removed when
they move towards and are removed when
they get reasonably close to each
they get reasonably close to each
point
point
yeah it's something like that
yeah it's something like that
right but you really don't want to run
right but you really don't want to run
uh any sort of search algorithm if you
uh any sort of search algorithm if you
can avoid
can avoid
it like you really don't want to have
it like you really don't want to have
like dyras or um AAR anything like that
like dyras or um AAR anything like that
running
I probably could get it to be reasonably
I probably could get it to be reasonably
fast but
still um welcome to the stream Roman I
still um welcome to the stream Roman I
don't know if you've been around but
don't know if you've been around but
this is where we are so
this is where we are so
far add the towers with very small
far add the towers with very small
reward for
attacking yeah so this is where we are
attacking yeah so this is where we are
for now we got a map we've got agents
for now we got a map we've got agents
they can attack each other um I think
they can attack each other um I think
that they might randomly disappear once
that they might randomly disappear once
in a while I can't quite tell they do
in a while I can't quite tell they do
seem to respawn correctly
seem to respawn correctly
though that's
reasonable okay let's just start on the
reasonable okay let's just start on the
uh the creeps
so uh I probably want to make the Creeps
so uh I probably want to make the Creeps
in Python right
so player type creep D
so player type creep D
type and then we're going to do
type and then we're going to do
players do like self.
players do like self.
creeps
creeps
spat
spat
reaps we
reaps we
do self Dot
self do creeps is going to go
self do creeps is going to go
somewhere right here
somewhere right here
maybe creeps
maybe creeps
flat it's
flat it's
good Z
MOA
MOA
creeps self. creeps maybe creeps data
creeps self. creeps maybe creeps data
and
um and creeps are going to be a little
um and creeps are going to be a little
harder to deal with
right so
we can
do
okay
okay
one num
creeps num
creeps self. n creeps
creeps self. n creeps
creep.
creep.
shape how many creeps do we
want
want
uh let's
say kind I want a lot of them don't
you they
you they
yeah 12 times numb
agents up T agents yeah
okay yeah but you have to account for
okay yeah but you have to account for
all the different waves
right it's quite a bit of
right it's quite a bit of
logic we're going to really have to
logic we're going to really have to
figure out what we can strip down here
figure out what we can strip down here
right like if we're going to make them
right like if we're going to make them
spawn in waves or we're just going to
spawn in waves or we're just going to
spawn single creeps like what we're
spawn single creeps like what we're
going to how we're going to deal with it
right I mean there are a lot of ways we
right I mean there are a lot of ways we
could cheat it for sure
yeah they need to stop for combat yeah
yeah they need to stop for combat yeah
it's a lot of logic if you think about
it's a lot of logic if you think about
it it's actually quite a complicated
it it's actually quite a complicated
little project though if I think about
little project though if I think about
it
it
like I think actually getting the creeps
like I think actually getting the creeps
working is one of the more complicated
working is one of the more complicated
things
things
right
right
because player abilities are not that
bad I think the creeps are really the
bad I think the creeps are really the
main hard thing they're actually the
main hard thing they're actually the
main slow thing as well but they so
main slow thing as well but they so
fundamental right you can't have the
fundamental right you can't have the
game without
game without
creeps right you can't have the game
creeps right you can't have the game
without
without
um neutral like neutral
things I mean technically I could very
things I mean technically I could very
easily make this like a 15 versus
easily make this like a 15 versus
15 uh game with no creeps but I don't
15 uh game with no creeps but I don't
think that would be as
think that would be as
interesting
interesting
right you really need the
creeps just stop for combat with players
creeps just stop for combat with players
and with Towers
that's
that's
tricky it's a tricky
one but it'll be so sweet if we can do
one but it'll be so sweet if we can do
it
right we technically could make creeps
right we technically could make creeps
have their own behavior policy but it
have their own behavior policy but it
would be so much slower than just giving
would be so much slower than just giving
them something
scripted um
well maybe it wouldn't be let me
think I think if you let them have their
think I think if you let them have their
own behavior policy you're going to get
own behavior policy you're going to get
weird stuff like you're not going to get
weird stuff like you're not going to get
the creeps laning you're just going to
the creeps laning you're just going to
get like everybody running down mid or
get like everybody running down mid or
whatever
I mean the thing is like this whole
I mean the thing is like this whole
project actually becomes quite easy uh
project actually becomes quite easy uh
if we just don't do creeps or we do
if we just don't do creeps or we do
creeps at the end to come to think of it
right I mean I could try I could just
right I mean I could try I could just
work on getting like
work on getting like
reasonable player combat
reasonable player combat
first um because that will actually help
first um because that will actually help
debug a lot of stuff as well like the
debug a lot of stuff as well like the
majority of the code is probably going
majority of the code is probably going
to come from the
to come from the
creeps so yeah why don't I do that then
creeps so yeah why don't I do that then
why don't I try to implement the towers
why don't I try to implement the towers
first cuz like I roughly know how to
first cuz like I roughly know how to
implement the creeps um I've done enemy
implement the creeps um I've done enemy
NPC uh enemy Ai and scon before like
NPC uh enemy Ai and scon before like
basic enemy
basic enemy
AI but uh it does take some
AI but uh it does take some
code so why don't we do Towers
yeah yeah the aggro mechanic isn't hard
yeah yeah the aggro mechanic isn't hard
though the aggro mechanic on its own is
though the aggro mechanic on its own is
not
not
hard see because it's stationary the
hard see because it's stationary the
Agro mechanic can just be
Agro mechanic can just be
um well I know what you mean by
um well I know what you mean by
mechanics right like you have to like
mechanics right like you have to like
hit under Tower or whatever to like get
hit under Tower or whatever to like get
it to aggro away from the creep um stuff
it to aggro away from the creep um stuff
like that but initially just getting a
like that but initially just getting a
tower to attack something within its
tower to attack something within its
area of effect is not
hard so we can start with
that for
yeah and we're going to
yeah and we're going to
do nine Towers per side to start I think
right technically you have two of them
right technically you have two of them
on the inners but we can do nine Towers
on the inners but we can do nine Towers
to start
we got to pass them in as
well do player D
well do player D
type
type
Tower uh
CP okay that's now
do player creep
Tower I think I can get the tower
Tower I think I can get the tower
working in the next hour and a
working in the next hour and a
half I think I can at least do that
half I think I can at least do that
because this is not that bad so we just
because this is not that bad so we just
do Towers we add Towers to right
do Towers we add Towers to right
here right and then after creeps we're
here right and then after creeps we're
going to pass Towers in right here
oops
okay and then what we're going to do is
okay and then what we're going to do is
on
on
uh on a Knitter
uh on a Knitter
whatever we are going to
whatever we are going to
well we do self.
well we do self.
Towers self.
Towers self.
Towers
Towers
range uh self. num
range uh self. num
Towers we're going to
Define
Define
Powers
so Tower is going to be
so Tower is going to be
we can add a get Tower
we can add a get Tower
function see def
Tower we can
do so this is kind of tricky because I
do so this is kind of tricky because I
think we kind of need to just hardcode
think we kind of need to just hardcode
these because they're kind of like all
these because they're kind of like all
different which if I stop trying to be
different which if I stop trying to be
clever and I just hardcode more stuff
clever and I just hardcode more stuff
it's actually going to be way easier so
it's actually going to be way easier so
um let's
do c def Tower start Tower right and
do c def Tower start Tower right and
then we're going to do um Tower get
then we're going to do um Tower get
Tower
Tower
zero we're going to do Tower
zero we're going to do Tower
team uh Health
team uh Health
damage and we need to find positions for
damage and we need to find positions for
these so we'll do like
I think we're just going to guess and
I think we're just going to guess and
adjust them so team it's going to
have
03 this is
03 this is
fine Towery is going to be
right
here can I just get the positions from
here can I just get the positions from
like
here where can you see where you're like
here where can you see where you're like
where you're you're putting your cursor
where you're you're putting your cursor
anywhere
is there any way you can see where your
is there any way you can see where your
cursor is on
this as I can go like
this so
this so
like your
t uh herish I
t uh herish I
guess so this is like
guess so this is like
20 so 43 25
um Power is get Tower one still going to
be team is going to be zero help Dage I
be team is going to be zero help Dage I
need to get like I need to put
need to get like I need to put
it uh here which
it uh here which
is 55 so 7455
74 55
10691 no this one is like the this is
10691 no this one is like the this is
the unsafe Lane right so it's like down
the unsafe Lane right so it's like down
here so 96
104 okay now we got to do tier twos
10 Health three
damage 15 health I don't know
4325 uh T2 is like herish I
4325 uh T2 is like herish I
think
7225 225
then we go like here is I
then we go like here is I
think it's like
think it's like
4685 six
wait 0 one
wait 0 one
two how did I come up with four
Towers oh this one is just wrong because
Towers oh this one is just wrong because
this one is just this is an autocomplete
this one is just this is an autocomplete
suggestion so this is oops this is two
suggestion so this is oops this is two
this is
this is
three this is
three this is
four this is five did I do that right
four this is five did I do that right
yeah and then I have to make this one
yeah and then I have to make this one
right which is going to be like here
right which is going to be like here
which is 66 and
106 okay so this is uh this is half of
106 okay so this is uh this is half of
them done and now I can
them done and now I can
do can I flip it if I do like minus
do can I flip it if I do like minus
y uh like 128 - y 128 -
y uh like 128 - y 128 -
x I think that's it right
oh no wait I have I have more Towers
oh no wait I have I have more Towers
left I have to do the
t3s This Is 50 this is like 10 damage or
t3s This Is 50 this is like 10 damage or
whatever I don't
whatever I don't
know and then this thing
is they're like here
so 2597
seven 29.99
this is the one right
here 33
104 very nice um now uh I think the
104 very nice um now uh I think the
other ones are easy because we can just
other ones are easy because we can just
do like
four iron rain
four iron rain
of self. n num
of self. n num
Towers we can do oops
dot Powers Plus
dot Powers Plus
I team equals 1 self. towers. Health
equals okay cool and
um
um
cool so that works there a bunch of
cool so that works there a bunch of
garbage code but it works um I think and
oops and now we just get to do
um self. grid
um self. grid
uh go to
uh go to
Tower and we get to
add uh we get to add like where's it
food
Tower okay let's see how this
does cannot take the address of a python
object scyon eyes
ah so this
ah so this
yeah get player is not going to work
yeah get player is not going to work
that's fine we'll just do
um do this
no attribute get
no attribute get
creep well that's fine we don't need
creep well that's fine we don't need
this anyways for now we're doing Towers
first hey not bad look we actually got
first hey not bad look we actually got
uh we got Towers in
uh we got Towers in
like I don't see all the towers I don't
like I don't see all the towers I don't
know where the rest of them
know where the rest of them
went
went
um I
see six towers per
see six towers per
side meaning I guess that I probably
side meaning I guess that I probably
misposition the other ones right
25 and
25 and
like2 let's see how I did the other
ones these actually look
ones these actually look
fine is it possible that
fine is it possible that
I hold on I might have an out of bounds
I hold on I might have an out of bounds
numb
Towers
Towers ah so here this is supposed to be
Towers ah so here this is supposed to be
uh the number of towers should
be 18 Towers right
still no
well that's odd where did the other
well that's odd where did the other
Towers
go I also should uh well let me
go I also should uh well let me
see no that looks
see no that looks
fine it looks fine uh
am I just not seeing
him I'm pretty sure I'm seeing them um
him I'm pretty sure I'm seeing them um
just to be sure I'm going to delete the
just to be sure I'm going to delete the
uh I'm going to temporarily comment the
uh I'm going to temporarily comment the
reset mechanic here because it's
reset mechanic here because it's
possible that I'm Walling over
possible that I'm Walling over
them really shouldn't be
so well I don't need this reset mechanic
so well I don't need this reset mechanic
actually at all because I have the
actually at all because I have the
map right
uh so let's just not load the bit map
in see if I just put it in the wrong
spot no I
spot no I
see one
see one
two wait one two three four 5 6 7 8 9
two wait one two three four 5 6 7 8 9
10 I see 10
10 I see 10
Towers is the number of agents that
Towers is the number of agents that
there are so that does not bode
there are so that does not bode
well tow flat is going to be
well tow flat is going to be
18 ah the D type is
18 ah the D type is
wrong and what we do is D type is going
wrong and what we do is D type is going
to be creep D type and dtype is going to
to be creep D type and dtype is going to
be Tower dtype let's see what happens
be Tower dtype let's see what happens
when I do that
uh it's the same isn't
it yeah that is actually the
it yeah that is actually the
same where are the darn
Towers like what
oh I'm not passing Towers so that's
awkward oh
duh tow
flat let's see how that
flat let's see how that
goes
goes
perfect so now we have Towers
um that looks
reasonable and uh we
reasonable and uh we
will figure out what to do with the
tower I need to take a quick
tower I need to take a quick
second let me read chat and read Twitter
second let me read chat and read Twitter
and stuff for a second
anything cool
happening where'd it
go 631 thank
you simplifying r enforcement learning
you simplifying r enforcement learning
libraries resembles MOBA game map like
libraries resembles MOBA game map like
open
open
A5 esoteric knowledge that deter damage
A5 esoteric knowledge that deter damage
not to mention
ulas that's
fun nothing going
on yeah chat GPT
on yeah chat GPT
okay all right back to
work uh let's do the attack function on
work uh let's do the attack function on
the
the
tower that shouldn't be hard
right so we'll just do
Towers get to go before
Towers get to go before
players or
players or
tower Tower is going to be get
tower Tower is going to be get
Tower going to
Tower going to
be Tower our
be Tower our
Tower we're going to go Y is going to be
Tower we're going to go Y is going to be
Tower to
Tower to
Y um The Towers don't move stupid stupid
Y um The Towers don't move stupid stupid
LM uh so what you do do is now we
do so we do
four we need uh d r and DC I
four we need uh d r and DC I
think
think
Dr
Dr
DC Dr in
range Tower Vision let's just do like
range Tower Vision let's just do like
Tower Vision equals
something Tower
something Tower
Vision
five um we do PID
so we need to get the uh the position
so we need to get the uh the position
right we need disk y dis
right we need disk y dis
X and then this should be DX and Dy
X and then this should be DX and Dy
right DX D yeah that's good
right DX D yeah that's good
this is dy this is
this is dy this is
DX
DX
disk y
disk y
dis now if this grid is going to be
dis now if this grid is going to be
equal
to was it
agent I should see
agent I should see
pids is not equal
pids is not equal
to1 then we
to1 then we
do
do
player is going to be equal to get the
player is going to be equal to get the
player
player
from the PID
from the PID
map uh do we have a
map uh do we have a
PID in
PID in
PID so PID is equal to
PID so PID is equal to
this PID not equal -1 you get the
this PID not equal -1 you get the
PID and then we
do if uh player. team is equal to tower.
do if uh player. team is equal to tower.
team we
team we
continue otherwise we
attack
Target damage just Tower damage
loo
damage uh target. health is minus equal
damage uh target. health is minus equal
damage and if it dies you respawn
it and that's it
right uh
right uh
the it's currently attacking everything
the it's currently attacking everything
within view but that's fine to start
within view but that's fine to start
with
right let's see if we have a tower that
right let's see if we have a tower that
attacks SH now
doesn't appear to be attacking
stuff yeah no not attacking
stuff yeah no not attacking
stuff let's see why
not target. team tower.
team in team
so we got player
teams I think we just need to start
teams I think we just need to start
adding some prints
right so I also should commit some of
right so I also should commit some of
this code
this code
up see Mo pix
okay uh
Loba
sets Okay so now next we will
sets Okay so now next we will
do uh we'll put some print statements in
do uh we'll put some print statements in
C MOA and understand why this is not
C MOA and understand why this is not
attacking
attacking
uh stuff like
uh stuff like
animations a little bit
animations a little bit
harder but for now we're just going to
harder but for now we're just going to
get the state based stuff
going print
okay hit Target
okay hit Target
print okay let's
print okay let's
see we can do
this target cannot convert player
star well there's no target ID so that's
star well there's no target ID so that's
stupid
it's supposed to be
PID okay go onsize that let's see if we
PID okay go onsize that let's see if we
get anything cool here
uh okay so I we're not seeing anything
uh okay so I we're not seeing anything
here there are no Tower hits or detects
here there are no Tower hits or detects
on anything so why is that
on anything so why is that
um PID map
dis y disk
X oh did you not type this
correctly no you did
I mean this is going to run right
okay uh checking team
okay uh checking team
one
17 checking team
17 checking team
one
at why is it always the same
team okay so this is garbage data
right well first of all I did Y and X
right well first of all I did Y and X
here but the team is also garbage
here but the team is also garbage
data so why is the tower
data so why is the tower
team uh garbage
data should have been
data should have been
instantiated
normally team is zero team is
normally team is zero team is
one very odd Let's uh let's fix some
one very odd Let's uh let's fix some
print statements
here Tower
here Tower
idx oh wait no Tower idx is fine
idx oh wait no Tower idx is fine
checking one team
checking one team
17 they 18
17 they 18
Towers uh
Towers uh
at this should
be dis Y and dis
X and we should be able to get from here
X and we should be able to get from here
we should be able to get um something
we should be able to get um something
out of
out of
this to debug the towers
okay so here we
okay so here we
have yeah so here we now actually have
have yeah so here we now actually have
reasonable Tower
reasonable Tower
prints and it looks like we're getting
prints and it looks like we're getting
decent checks
here it looks like we are getting decent
here it looks like we are getting decent
checks so I mean there it's possible
checks so I mean there it's possible
that we just don't have uh pids working
that we just don't have uh pids working
correctly right
correctly right
so let's remove this line for now and
so let's remove this line for now and
let's assume that there's something
let's assume that there's something
wrong with
wrong with
pids what did I miss in the past
pids what did I miss in the past
hour I'll show
you so we've got uh basic Towers added
you so we've got uh basic Towers added
we've got uh the 18 Towers added just
we've got uh the 18 Towers added just
hardcoded all the positions and stuff
hardcoded all the positions and stuff
and I'm currently working on really dumb
and I'm currently working on really dumb
basic Tower AI to attack anything that's
basic Tower AI to attack anything that's
nearby by and figuring out why that
nearby by and figuring out why that
Tower AI is not
Tower AI is not
working uh and then we'll figure out
working uh and then we'll figure out
where we go from
where we go from
there though that's probably going to be
there though that's probably going to be
I might get a couple more things in from
I might get a couple more things in from
that for today but that's going to be
that for today but that's going to be
mainly where we uh what we get done for
mainly where we uh what we get done for
today I'd say
Target PID
is1 when you do
is1 when you do
move do move two
it's pit does seem fine
so it's never finding
so it's never finding
anything here it's never finding
anything here it's never finding
anything here it's very
anything here it's very
weird i' expect it to be finding
weird i' expect it to be finding
um finding
something let's go check let's just go
something let's go check let's just go
check uh the MOBA file
I think I'm going to keep doing this for
I think I'm going to keep doing this for
the next 45 minutes and then I'm going
the next 45 minutes and then I'm going
to uh get myself dinner finish a couple
to uh get myself dinner finish a couple
last work things on a couple other
last work things on a couple other
projects off stream and that'll be it
projects off stream and that'll be it
for the day so that is the uh the plan
for the day so that is the uh the plan
I'm going to try to finish the tower
I'm going to try to finish the tower
basic basic Tower Ai and a couple other
basic basic Tower Ai and a couple other
things in the next 45
minutes so you reset the
minutes so you reset the
environment
environment
here I actually don't have access to
here I actually don't have access to
pids
pids
from from here so let's like
you have pids
you have pids
here well let's see if the players are
here well let's see if the players are
attacking each other that would also
attacking each other that would also
help right
stupid
stupid
printf okay there we go
okay so we get attack hit killed attack
okay so we get attack hit killed attack
get killed uh so this is actually
get killed uh so this is actually
working so PID
working so PID
map seems to
map seems to
be
be
good um the pids are correct it's just
good um the pids are correct it's just
the tower for some reason is not getting
the tower for some reason is not getting
it so this is y
+ dis y i maybe if I do it this way this
+ dis y i maybe if I do it this way this
is already an
INT that should be better
INT that should be better
anyways uh Tower y Tower X
anyways uh Tower y Tower X
you got the PID
you got the PID
map YX is that how you do
map YX is that how you do
it
yeah get
player this looks fine this looks like
player this looks fine this looks like
the tower should
the tower should
freaking do
freaking do
something me comment this again
these just don't hit anything they don't
these just don't hit anything they don't
see anything on the PID map that's so
see anything on the PID map that's so
weird why don't these see anything on
weird why don't these see anything on
the PID
map
y+ Tower y Tower
x
x
negative negative Tower Vision Tower
negative negative Tower Vision Tower
Vision Plus One
why this one can well first of all this
why this one can well first of all this
one can go here that's
nice PID
map this is always empty for some
map this is always empty for some
reason why is the pit map
empty it's not empty when uh the players
empty it's not empty when uh the players
go to attack each
other that discretization
other that discretization
works and it should be covering a pretty
works and it should be covering a pretty
wide area
here it is looping over the vision I
here it is looping over the vision I
checked
checked
that have you printed the PID map maybe
that have you printed the PID map maybe
X and Y are
X and Y are
swapped
um it's the thing is this there's a
um it's the thing is this there's a
tower in the middle so I don't think
tower in the middle so I don't think
that that would
that that would
matter
matter
um and also when I'm moving the function
um and also when I'm moving the function
I'm using to move
I'm using to move
stuff is right
stuff is right
here this looks fine right
so grid gets set to agent one or agent
so grid gets set to agent one or agent
2 old position gets set to
2 old position gets set to
-1 new position y comma X gets set to
-1 new position y comma X gets set to
PID player y gets d y player X gets d
PID player y gets d y player X gets d
x
um you know one thing I could do this is
um you know one thing I could do this is
really
really
stupid but I could do self. grid
stupid but I could do self. grid
I could do this is equal to
I could do this is equal to
like what's like a color I can do
like what's like a color I can do
wall
maybe so I can see the vision range
maybe so I can see the vision range
Maybe
okay so like the vision ranges look good
okay so like the vision ranges look good
right these are these squares are
right these are these squares are
approximately where they should
be yeah those those are pretty much
be yeah those those are pretty much
exactly where they should be so it's got
exactly where they should be so it's got
to be the PID map being
to be the PID map being
weird but I don't see how it's possible
weird but I don't see how it's possible
for the PID map to be being weird when
for the PID map to be being weird when
it works down
here maybe I have oh maybe no it cuz it
here maybe I have oh maybe no it cuz it
Doesn't print at all otherwise I was
Doesn't print at all otherwise I was
going to say maybe I have the damage
going to say maybe I have the damage
wrong but um no I it's not getting there
wrong but um no I it's not getting there
at
at
all it would get to either of these
all it would get to either of these
print
statements select a
statements select a
PID as the first
PID as the first
element can you try selecting a pit as
element can you try selecting a pit as
the first element in pit
the first element in pit
map instead of pulling something out by
map instead of pulling something out by
coordinate just to see if everything
coordinate just to see if everything
else is working working given hardcoded
else is working working given hardcoded
selection uh yes I can just kill zero
repeatedly that should work we'll see
okay so we get hit and killed it's
okay so we get hit and killed it's
spamming hit and
spamming hit and
killed and
uh I think if you look at this agent
uh I think if you look at this agent
here in the
here in the
center it's not able to move more than
center it's not able to move more than
one cell so I'm pretty sure this agent
one cell so I'm pretty sure this agent
here is just getting is the one that's
here is just getting is the one that's
just getting killed
repeatedly so that
repeatedly so that
works you can see hit and killed hit and
works you can see hit and killed hit and
killed hit and
killed hit and
killed new to chat no you're good you're
killed new to chat no you're good you're
totally
totally
good um welcome this is me attempting to
good um welcome this is me attempting to
make reinforcement learning be less
make reinforcement learning be less
cursed live so sometimes I do Sim Dev
cursed live so sometimes I do Sim Dev
sometimes I do experiments Dev uh
sometimes I do experiments Dev uh
sometimes I do like well I do a bunch of
sometimes I do like well I do a bunch of
fun stuff a lot of the recent results
fun stuff a lot of the recent results
are on my Twitter um this is the first
are on my Twitter um this is the first
day I've been working on this so decent
day I've been working on this so decent
little bit of progress uh I think it's
little bit of progress uh I think it's
going to end up being more complicated
going to end up being more complicated
than I thought but except for the creeps
than I thought but except for the creeps
I think everything else should be pretty
I think everything else should be pretty
decent
decent
um
yeah especially since open ai5 got me
yeah especially since open ai5 got me
into AI neural MMO got me back into RL
into AI neural MMO got me back into RL
opening I5 I've said this several times
opening I5 I've said this several times
it's the coolest project I've ever ever
it's the coolest project I've ever ever
seen I was 15 ft away from them when
seen I was 15 ft away from them when
they were doing that project I was
they were doing that project I was
hacking on the first version of neural
hacking on the first version of neural
MMO at open aai so yeah it was fun no
MMO at open aai so yeah it was fun no
idea why I was recommending this live
idea why I was recommending this live
stream I happen to run across your PhD
stream I happen to run across your PhD
video a while back that is probably why
video a while back that is probably why
and yeah I saw that people liked the uh
and yeah I saw that people liked the uh
the defense so I figured I'd just start
the defense so I figured I'd just start
streaming random Dev uh and see what
streaming random Dev uh and see what
comes of it maybe you know some folks
comes of it maybe you know some folks
come by Star Puffer lib check out the
come by Star Puffer lib check out the
project maybe some folks go and check
project maybe some folks go and check
out the Twitter it's all help to me um
out the Twitter it's all help to me um
and I will be doing more videos I don't
and I will be doing more videos I don't
want to do too many because they take a
want to do too many because they take a
lot of time away from Dev but I do have
lot of time away from Dev but I do have
a couple long form videos I want to do
a couple long form videos I want to do
there's one I want to do on puffer lib
there's one I want to do on puffer lib
and then there's one that I want to do
and then there's one that I want to do
on a new not announced project
on a new not announced project
yet remember watching opening I5 when I
yet remember watching opening I5 when I
was like 17 after sinking 10K hours into
was like 17 after sinking 10K hours into
Dota
Dota
2 yeah I hadn't played Dota 2 before I I
2 yeah I hadn't played Dota 2 before I I
saw the bot I spent like a week just
saw the bot I spent like a week just
trying to wrap my head around the game
trying to wrap my head around the game
cuz it's such a complicated game right
cuz it's such a complicated game right
to get into um just to try to like sort
to get into um just to try to like sort
of appreciate it and now I I can
of appreciate it and now I I can
understand a little bit better
understand a little bit better
it's the fact that people didn't just go
it's the fact that people didn't just go
wild for RL after open ai5 and they
wild for RL after open ai5 and they
still just like all in on language
still just like all in on language
models it's just like people not
models it's just like people not
understanding how complicated of a game
understanding how complicated of a game
Dota 2 is like if people understood how
Dota 2 is like if people understood how
impressive that result truly is we would
impressive that result truly is we would
be seeing
be seeing
the level of Interest we have in
the level of Interest we have in
language models now we'd see it in RL
language models now we'd see it in RL
now the fact that that doesn't happen
now the fact that that doesn't happen
kind of sucks but at the same time uh
kind of sucks but at the same time uh
I'm I've graduated and I'm now doing it
I'm I've graduated and I'm now doing it
right this is this is what I'm doing
right this is this is what I'm doing
full-time I'm using my experience that
full-time I'm using my experience that
I've gotten in reinforcement learning
I've gotten in reinforcement learning
over the last seven years to fix all of
over the last seven years to fix all of
the that's happened in this
the that's happened in this
field I'm uh not like a super mathy type
field I'm uh not like a super mathy type
that just wants to do a bunch of theory
that just wants to do a bunch of theory
this is like practical engineering and
this is like practical engineering and
infrastructure and whatever else is
infrastructure and whatever else is
needed to make reinforcement learning a
needed to make reinforcement learning a
reasonable field to do work
in another debugging is check if pit is
in another debugging is check if pit is
not equal negative 1 what if you include
not equal negative 1 what if you include
an El block that
an El block that
logs the disk Y and dis X that didn't
logs the disk Y and dis X that didn't
produce a map I thought I well I had
produce a map I thought I well I had
that before and it spams a lot because
that before and it spams a lot because
this is uh this is like several th000
this is uh this is like several th000
checks per
checks per
second
um the thing is it's just all the pids
um the thing is it's just all the pids
are negative one for some
are negative one for some
reason but they're not down
here because I can print this out if I I
here because I can print this out if I I
can enable these prints and uh the
can enable these prints and uh the
agents are attacking and killing each
agents are attacking and killing each
other and they're also targeting based
other and they're also targeting based
on
on
PID which is very odd
PID which is very odd
yeah it's good to see some people are
yeah it's good to see some people are
still into RL and I honestly I think
still into RL and I honestly I think
that RL is going to be picked up big
that RL is going to be picked up big
time by uh independent researchers new
time by uh independent researchers new
PhD students and hobbyists because like
PhD students and hobbyists because like
we're getting to the point where you
we're getting to the point where you
cannot do language modeling or language
cannot do language modeling or language
research without several $1,000 in open
research without several $1,000 in open
AI credits which is just ridiculous and
AI credits which is just ridiculous and
like with reinforcement learning at
like with reinforcement learning at
least if you build some fast Sims you're
least if you build some fast Sims you're
going to be able to do billion scale
going to be able to do billion scale
reinforcement learning uh on one GPU in
reinforcement learning uh on one GPU in
fact you kind of already can with puffer
fact you kind of already can with puffer
um so that's a lot of what I'm pushing
um so that's a lot of what I'm pushing
on at the moment and uh yeah after that
on at the moment and uh yeah after that
uh we we'll see where it goes from there
uh we we'll see where it goes from there
but I have a very small cluster that I
but I have a very small cluster that I
sponsor a few open source projects with
sponsor a few open source projects with
my hope is that I can scale up puffer
my hope is that I can scale up puffer
and get a little bit of a larger cluster
and get a little bit of a larger cluster
and just start really powering all of
and just start really powering all of
the open source uh research that's out
the open source uh research that's out
there on
RL going back to Brown for Gra schol to
RL going back to Brown for Gra schol to
focus precisely on RL either robotics or
focus precisely on RL either robotics or
otherwise yeah hang around glad to have
otherwise yeah hang around glad to have
you here um I mean I'm going to be doing
you here um I mean I'm going to be doing
this for quite a
this for quite a
while could comment out
while could comment out
the link key knows link key is on the
the link key knows link key is on the
puffer cluster it's a nice little
puffer cluster it's a nice little
cluster you could common out the
cluster you could common out the
movement piece spawn one at a guaranteed
movement piece spawn one at a guaranteed
location and change your Loop to only
location and change your Loop to only
check the that X and Y
check the that X and Y
value yes that would
value yes that would
be that would be a DE decent
idea so let's
idea so let's
do uh self. move
do uh self. move
to
to
zero and
zero and
then what's this 29 and
then what's this 29 and
100 uh let's just go find like next to a
100 uh let's just go find like next to a
tower
right I know
10666 huh yeah absolutely looking uh
10666 huh yeah absolutely looking uh
absolutely looking for contributors let
absolutely looking for contributors let
me know like the type of stuff you're
me know like the type of stuff you're
looking into um there's so much stuff to
looking into um there's so much stuff to
be done around puffer I can sponsor bits
be done around puffer I can sponsor bits
of compute here and there though I
of compute here and there though I
reserve that until I know people are
reserve that until I know people are
like actually going to do stuff and not
like actually going to do stuff and not
just like sit around and uh you know be
just like sit around and uh you know be
on the the cluster list and not like not
on the the cluster list and not like not
do stuff with it um but I am sponsoring
do stuff with it um but I am sponsoring
a little bit of stuff with with that and
a little bit of stuff with with that and
uh there's a lot a lot of stuff to be
uh there's a lot a lot of stuff to be
done around puffer I really would like
done around puffer I really would like
to have a nice quality set of baselines
to have a nice quality set of baselines
on all of the common rlms and just
on all of the common rlms and just
optimize the hell out of them for Speed
optimize the hell out of them for Speed
as well I think that's like something
as well I think that's like something
that can be reasonably done by uh like
that can be reasonably done by uh like
level of like new a new grad
student not sure your engineering
student not sure your engineering
experience and the like
let me do that thing that was
let me do that thing that was
suggested um that was a good suggestion
suggested um that was a good suggestion
and I'm like losing steam here because
and I'm like losing steam here because
it's towards it's only 6:30 Pacific but
it's towards it's only 6:30 Pacific but
this is actually late for me because I
this is actually late for me because I
wake up at 6:00 to run uh so my days
wake up at 6:00 to run uh so my days
start very early and I'm pretty much
start very early and I'm pretty much
like Dead Tired by 8 at the latest
I've been basically just working as hard
I've been basically just working as hard
as I can over the summer while uh also
as I can over the summer while uh also
taking a nice chunk of time to keep in
taking a nice chunk of time to keep in
shape pretty much just those two things
getting up at 6 to run tomorrow as well
getting up at 6 to run tomorrow as well
you'll appreciate this then the running
you'll appreciate this then the running
grind
grind
is the running grind is
real
uh okay so we have this is off week this
uh okay so we have this is off week this
is
is
yeah this is the last training block
yeah this is the last training block
from the previous
from the previous
month and this is the new training block
month and this is the new training block
here so this is off week starting at 50
here so this is off week starting at 50
miles last week this week will be 53
miles last week this week will be 53
miles next week will be
tiring I am very slow
tiring I am very slow
though and then most recent Marathon was
though and then most recent Marathon was
uh May 5th I
guess I've got two years fulltime ASW
guess I've got two years fulltime ASW
you big Tech
you big Tech
definitely Rusty on RL Basics we need
definitely Rusty on RL Basics we need
engineering a lot more than RL
engineering a lot more than RL
experience frankly so that's great the
experience frankly so that's great the
one thing I will say about uh big Tech
one thing I will say about uh big Tech
is that the way that code is in puffer
is that the way that code is in puffer
is decidedly way more small Tech so it's
is decidedly way more small Tech so it's
like it's meant to be like really really
like it's meant to be like really really
cons prise minimal abstractions possible
cons prise minimal abstractions possible
so because like the idea is it's white
so because like the idea is it's white
box software like any researcher is
box software like any researcher is
going to have to be able to touch any
going to have to be able to touch any
piece of this code so instead of like
piece of this code so instead of like
bundling up and abstracting stuff away
bundling up and abstracting stuff away
we try to just like make stuff as
we try to just like make stuff as
concise and simple as possible with as
concise and simple as possible with as
few like moving Parts uh as we can
few like moving Parts uh as we can
manage and if you but if you can do that
manage and if you but if you can do that
yeah there's absolutely tons and tons of
yeah there's absolutely tons and tons of
stuff you could contribute to if you're
stuff you could contribute to if you're
interested 19 miles a week at the moment
interested 19 miles a week at the moment
hey
hey
it's doing well two years ago I could
it's doing well two years ago I could
not run a mile
not run a mile
so it uh the running hat the running
so it uh the running hat the running
builds pretty
builds pretty
quick 19 miles a week is a solid base as
well I do like a hour hour and a half of
well I do like a hour hour and a half of
running and then hour hour and a half of
running and then hour hour and a half of
powerlifting every morning
let me go take that feedback from you
let me go take that feedback from you
because that was actually a good
idea interesting checking things out
idea interesting checking things out
been a Dev for 13 years nothing in your
been a Dev for 13 years nothing in your
world beo cool to contribute hey I mean
world beo cool to contribute hey I mean
that's a lot of the point of all this I
that's a lot of the point of all this I
really want to build up the open source
really want to build up the open source
stuff around puffer um there's just like
stuff around puffer um there's just like
I've kept my like I'm pretty darn good
I've kept my like I'm pretty darn good
at keeping small code bases and like
at keeping small code bases and like
building to midscale project solo but
building to midscale project solo but
there's just so much stuff around that I
there's just so much stuff around that I
haven't been able to get to um that
haven't been able to get to um that
could just benefit tremendously from
could just benefit tremendously from
even relatively new people that just
even relatively new people that just
have some ability to write decent code
have some ability to write decent code
that's really all we need um we've got
that's really all we need um we've got
some like some very very uh
some like some very very uh
talented contributors as well on like Po
talented contributors as well on like Po
RL that started out with no experience
RL that started out with no experience
and just like really ground on it and uh
and just like really ground on it and uh
have done incredibly well I don't know
have done incredibly well I don't know
if link is still around in chat but he
if link is still around in chat but he
came in with like no experience and has
came in with like no experience and has
just done amazing on the project so it
just done amazing on the project so it
can be learned and uh I do often you
can be learned and uh I do often you
know with the contributors I try to
know with the contributors I try to
share RL insights when I can to try to
share RL insights when I can to try to
help with some of the
help with some of the
intuitions that's really the main thing
intuitions that's really the main thing
is just understanding how everything
is just understanding how everything
fits together it's not like there's a
fits together it's not like there's a
little bit of math yeah but most of the
little bit of math yeah but most of the
time not it's not the main thing
let me take that suggest that debug
let me take that suggest that debug
suggestion on you been a Dev for 13
suggestion on you been a Dev for 13
years I I don't know how you count like
years I I don't know how you count like
been a Dev I've been programming as well
been a Dev I've been programming as well
since I was I don't know 13 so about the
since I was I don't know 13 so about the
same amount of time
same amount of time
um though I mean practically you could
um though I mean practically you could
probably you know count that a little
probably you know count that a little
later since that was me screwing around
later since that was me screwing around
writing Minecraft
writing Minecraft
mods I don't know I started doing
mods I don't know I started doing
research when I was like 16
professionally started coding and cod
professionally started coding and cod
okay that's pretty awesome then
okay that's pretty awesome then
yeah that's solid could definitely would
yeah that's solid could definitely would
definitely appreciate the uh the help
definitely appreciate the uh the help
and hey take a look at the puffer code
and hey take a look at the puffer code
tell me if you uh tell me what you think
tell me if you uh tell me what you think
of it um it should be pretty concise
of it um it should be pretty concise
I've got a new Dev Branch as well that
I've got a new Dev Branch as well that
I've been working on that this Min
I've been working on that this Min
config Branch I've put a lot of effort
config Branch I've put a lot of effort
into trying to figure out a decent way
into trying to figure out a decent way
to like get configurable experiments
to like get configurable experiments
that doesn't make researchers Hate
that doesn't make researchers Hate
Everything I think I've finally gotten
Everything I think I've finally gotten
it now the current one in 10 the yaml
it now the current one in 10 the yaml
thing isn't terrible it just has a
thing isn't terrible it just has a
really ugly load function um with some
really ugly load function um with some
Arc par Shenanigans uh the thing I'm
Arc par Shenanigans uh the thing I'm
doing now is a fair bit simpler I'd say
doing now is a fair bit simpler I'd say
it's with just Python's like config
it's with just Python's like config
parser
builtin I know I do a lot of stuff like
builtin I know I do a lot of stuff like
this uh let's see so if was it
this uh let's see so if was it
dis
x uh equals
besides benchmarking what are some big
besides benchmarking what are some big
to-dos for puffer seems like the court
to-dos for puffer seems like the court
INF is pretty well developed already um
INF is pretty well developed already um
okay so there's General hygiene stuff
okay so there's General hygiene stuff
like basically any anytime somebody hits
like basically any anytime somebody hits
an error that doesn't make sense now
an error that doesn't make sense now
like there needs to be a reasonable
like there needs to be a reasonable
error message um I've done an okay job
error message um I've done an okay job
of that but it could be better um there
of that but it could be better um there
is uh the benchmarking on lots of
is uh the benchmarking on lots of
different environments is a really big
different environments is a really big
one uh there's still a little bit to be
one uh there's still a little bit to be
done left on The Sweep stuff though
done left on The Sweep stuff though
that's close to being done uh there's
that's close to being done uh there's
just a lot of like user testing around
just a lot of like user testing around
all the new versions and all the new
all the new versions and all the new
tools that I've built um there's going
tools that I've built um there's going
to be a lot of work around simulation
to be a lot of work around simulation
though that's going to be definitely
though that's going to be definitely
much heavier on the engineering side
much heavier on the engineering side
um and then there's going to be like
um and then there's going to be like
research style work as well did you get
research style work as well did you get
the X and Y swapped in that check you
the X and Y swapped in that check you
made yes yes I did that's what happens
made yes yes I did that's what happens
when I don't bother to double check
when I don't bother to double check
the super Maven
the super Maven
suggestions oh by the way folks if you
suggestions oh by the way folks if you
have not tried super Maven I highly
have not tried super Maven I highly
recommend it uh it's just awesome it's
recommend it uh it's just awesome it's
just faster
just faster
co-pilot um
co-pilot um
just like super fast co-pilot has a vs
just like super fast co-pilot has a vs
code plugin has a neov them plugin
code plugin has a neov them plugin
really nice and
really nice and
easy and of course since there are a
easy and of course since there are a
couple new people here you want to help
couple new people here you want to help
me out just uh give the nice puffer a
me out just uh give the nice puffer a
star you know feed the puffer a
star you know feed the puffer a
star helps out a whole ton to get some
star helps out a whole ton to get some
exposure on this Library uh this the
exposure on this Library uh this the
growth has been amazing this is when I
growth has been amazing this is when I
started working on it full-time right
started working on it full-time right
here uh you can't see it on the screen
here uh you can't see it on the screen
hold on yeah so this is when I started
hold on yeah so this is when I started
working full-time on puffer right
working full-time on puffer right
here so growth has been awesome just got
here so growth has been awesome just got
to keep it
up detected
zero team zero okay so it's detecting
here yeah like the growth has been the
here yeah like the growth has been the
growth has been freaking awesome I've
growth has been freaking awesome I've
been very very happy with this
been very very happy with this
um I'm probably going to have to try to
um I'm probably going to have to try to
get the company some Revenue at some
get the company some Revenue at some
point uh I'm good on my own
point uh I'm good on my own
expenses um but hopefully when some
expenses um but hopefully when some
companies start using it we'll be able
companies start using it we'll be able
to get like some set up some support
to get like some set up some support
contracts around stuff um My Hope Is
contracts around stuff um My Hope Is
that in the next like year or so I'd
that in the next like year or so I'd
like to build out a substantially larger
like to build out a substantially larger
cluster so that more people can have
cluster so that more people can have
access to like contribute to cool open
access to like contribute to cool open
source stuff in RL and I'd also like to
source stuff in RL and I'd also like to
be able to put some uh you know some
be able to put some uh you know some
like bounties together for features so
like bounties together for features so
that like you know people can actually
that like you know people can actually
make a little bit of of money off of
make a little bit of of money off of
this stuff I mean I don't feel too bad
this stuff I mean I don't feel too bad
asking people to just contribute to open
asking people to just contribute to open
source at the moment since I'm also
source at the moment since I'm also
making zero do off of this but as soon
making zero do off of this but as soon
as that's no longer the case then uh
as that's no longer the case then uh
there will be you know some substantial
there will be you know some substantial
bounties
okay so this is
hit this actually says hit so
um I screw up to get Tower function
somehow no
are like some of these towers not
are like some of these towers not
working or something
working or something
weird range yourself. n num
Towers towers. shape of zero
got to be something weird here
H
interesting Tower y Tower
X have you seen as it what it has is the
X have you seen as it what it has is the
location of all the
location of all the
towers uh I printed that out before and
towers uh I printed that out before and
it looked
it looked
reasonable let me make sure it's
reasonable let me make sure it's
actually iterating overall all of
them okay it's iterating over all the
them okay it's iterating over all the
towers
um
um
at try this
these look good right
these look good right
um these look like the numbers that I
um these look like the numbers that I
put into
this right these look like
the 10333
uh oh no wait that's fine because eight
uh oh no wait that's fine because eight
is wait 8 is
10433 and
10433 and
yeah are they supposed to be ins no
yeah are they supposed to be ins no
they're not supposed to be
they're not supposed to be
ins the positions uh are technically
ins the positions uh are technically
continuous you know it's like a
continuous you know it's like a
continuous game and then we discretize
continuous game and then we discretize
it onto a grid
technically I could probably make the
technically I could probably make the
towers in if I wanted
towers in if I wanted
to um I don't see what that would do for
to um I don't see what that would do for
me
though come on this has got to just be
though come on this has got to just be
something stupid
right checking
Tower wait are any of these near the
center what if I just put one at like 64
center what if I just put one at like 64
64 right
oh yeah so if if you put the if you put
oh yeah so if if you put the if you put
it in the middle it kills everything so
it in the middle it kills everything so
why is it that like I can clearly see
why is it that like I can clearly see
the players wandering near the
the players wandering near the
tower but nothing happens
tower but nothing happens
right
like let me see
reward
reward
reward
checking
checking
let's just uh comment
this it's also possible that like the
this it's also possible that like the
ones from the teams are
ones from the teams are
not like if the gray one goes near the
not like if the gray one goes near the
gray Tower it should be
fine you think think I would have seen
fine you think think I would have seen
it at least a few times by now
though why can't I
though why can't I
freaking D
what open CV is weird
this is definitely on an opposing Tower
this is definitely on an opposing Tower
right
there I don't know what the heck is
there I don't know what the heck is
going on with it
do I have this
do I have this
in yeah this is in the right I thought
in yeah this is in the right I thought
it I put it in reset or something really
dumb no
dumb no
it's it's
it's it's
fine wait this is a
continue p is not equal to negative this
continue p is not equal to negative this
a continue yeah I don't have a break or
a continue yeah I don't have a break or
anything
uh why is this so
uh why is this so
weird this is a type of bug that should
weird this is a type of bug that should
have been solved half an hour ago I
have been solved half an hour ago I
would thought I would
think
think
respawn health
something isn't updating correctly as
something isn't updating correctly as
they
they
move yeah I was thinking about that I
move yeah I was thinking about that I
couldn't see how though
couldn't see how though
right let me see
um you actually could very well be right
um you actually could very well be right
let me see
let me see
so I have respawn
here oh wait I think you're totally
here oh wait I think you're totally
right cuz this here should
be yeah right
here yeah you're totally right it
is float well that's good intuition I
is float well that's good intuition I
thought of that as well but I discounted
it shouldn't have done
that so. move to so agent idx moves
that so. move to so agent idx moves
to
to
dest Y dest
dest Y dest
X and then I think I get to delete the
X and then I think I get to delete the
rest of this
right and do you get player. y player
right and do you get player. y player
dox updated as
dox updated as
well yep so you just pass it the floats
well yep so you just pass it the floats
it does the discretization
back to like 400
lines good
lines good
job see it's a good idea to stream Dev
job see it's a good idea to stream Dev
Butz sometimes when I'm really stupid
Butz sometimes when I'm really stupid
people solve things for
me yep hit and
killed
killed
um well that ain't supposed to to
happen they're now going through the
happen they're now going through the
walls I think that we need to add a
walls I think that we need to add a
little bit of a a change to
little bit of a a change to
this
move
move
yeah oh have you seen any of the the
yeah oh have you seen any of the the
demos I guess you haven't seen any other
demos I guess you haven't seen any other
cool demos I did
right and they're on my Twitter but we
right and they're on my Twitter but we
have all sorts of cool stuff like that
have all sorts of cool stuff like that
um I mean this is like day one project
um I mean this is like day one project
doesn't exactly look all that impressive
doesn't exactly look all that impressive
right here this is if you want to see
right here this is if you want to see
like the type of performance engineering
like the type of performance engineering
I do not
I do not
this yeah this will do so this is uh a
this yeah this will do so this is uh a
portion of 4096 player snake uh that
portion of 4096 player snake uh that
runs at 14 million steps per second so
runs at 14 million steps per second so
14 million snake steps per second on on
14 million snake steps per second on on
one CPU core and uh it trains a
one CPU core and uh it trains a
convolutional neural net plus lstm at 1
convolutional neural net plus lstm at 1
million steps per second on a single
million steps per second on a single
GPU um and you can train the policy in
GPU um and you can train the policy in
like five minutes to be decent you can
like five minutes to be decent you can
train it for like three billion steps in
train it for like three billion steps in
an hour and you can get quite a good
an hour and you can get quite a good
policy at
policy at
snake uh and the whole implementation of
snake uh and the whole implementation of
all this is like 450
all this is like 450
lines so this is like the some of the
lines so this is like the some of the
types of fun stuff that I do
there's another project I worked on over
there's another project I worked on over
the last few days that has some other
the last few days that has some other
cool results in it um
cool results in it um
yeah we do a lot of fun performance
yeah we do a lot of fun performance
engineering around here which is really
engineering around here which is really
funny cuz like you'd expect me to be
funny cuz like you'd expect me to be
coding this in like C but it's it's just
coding this in like C but it's it's just
scon and turns out that's all you need
scon and turns out that's all you need
it just it works
uh e
all right well they're not eating the uh
all right well they're not eating the uh
the map
the map
anymore so that's
good get killed that one got killed by
good get killed that one got killed by
Tower very
nice 655 we make a gift we put it on
nice 655 we make a gift we put it on
Twitter we call it a day no they do not
Twitter we call it a day no they do not
eat the
they might eat the
they might eat the
towers let me
towers let me
see they they might eat the towers okay
see they they might eat the towers okay
they might eat the towers
uh yep yep yep yep yep
uh yep yep yep yep yep
yep okay good I'm I'm tired okay I got
yep okay good I'm I'm tired okay I got
to stop coding
yeah they might need some
Towers that'd be really funny if you
Towers that'd be really funny if you
just had to get next to the Tower and
just had to get next to the Tower and
you just Nom
it oh yeah the other one I did I think I
it oh yeah the other one I did I think I
still have this gift around to show
still have this gift around to show
you so this is another project
you so this is another project
uh that I did oh I guess this is a weird
uh that I did oh I guess this is a weird
GIF but um so this is another simulation
GIF but um so this is another simulation
with 496 agents they're being trained to
with 496 agents they're being trained to
group together so if you watch them in
group together so if you watch them in
real time you can see that they're
real time you can see that they're
starting to Cluster they can only see a
starting to Cluster they can only see a
very short distance so they kind of have
very short distance so they kind of have
to like learn this local algorithm in
to like learn this local algorithm in
order to Cluster
order to Cluster
together uh fun to watch like if you see
together uh fun to watch like if you see
any like little groups get close to each
any like little groups get close to each
other you'll see that they very
other you'll see that they very
intentionally merge
intentionally merge
but you can yeah start to see all these
but you can yeah start to see all these
little clusters here's
one big particle Sim did this as well
one big particle Sim did this as well
this one runs like 15 million steps per
this one runs like 15 million steps per
second as
well I know there's a bunch of stuff
well I know there's a bunch of stuff
like this around
let's make a little
GIF
GIF
gif
for e
always been really man I found this
always been really man I found this
stuff like 10 years earlier in my life I
stuff like 10 years earlier in my life I
would have dumped huge time into it
would have dumped huge time into it
always been really interested in
always been really interested in
simulations Emer Behavior never know
simulations Emer Behavior never know
where to start now I don't have tons of
where to start now I don't have tons of
free time yeah it's
free time yeah it's
uh it's a big topic for sure um I mean
uh it's a big topic for sure um I mean
the neur like the neural stuff is my
the neur like the neural stuff is my
main thing right I've got more in that
main thing right I've got more in that
line coming out uh reasonable reasonably
line coming out uh reasonable reasonably
soon
um there's like a lot less to the
um there's like a lot less to the
emergence than you think yeah there's
emergence than you think yeah there's
some like there's some experimental
some like there's some experimental
stuff you need to do but if you make
stuff you need to do but if you make
good Sims that are correct and run
good Sims that are correct and run
really fast and you like format the data
really fast and you like format the data
in a way that's somewhat reasonable for
in a way that's somewhat reasonable for
RL uh stuff kind of will just
RL uh stuff kind of will just
learn I mean it's it's really that
learn I mean it's it's really that
simple at least now it is with Puffer
simple at least now it is with Puffer
um so yeah we're
um so yeah we're
uh we're making progress
uh we're making progress
here okay um I think that's going to be
here okay um I think that's going to be
about it for today I might do more on
about it for today I might do more on
this tomorrow or I might try to like
this tomorrow or I might try to like
head down grind um the integration of
head down grind um the integration of
this let me commit this first of all so
this let me commit this first of all so
it'll be online if you want to look at
it weep setup
it weep setup
add
setup
and it's in any
and it's in any
config which is I mean I can show you
config which is I mean I can show you
this the configs have been driving me
this the configs have been driving me
nuts so I wrote this new thing where the
nuts so I wrote this new thing where the
configs instead of having this giant
configs instead of having this giant
yaml file where I'm like implementing in
yaml file where I'm like implementing in
inheritance over this or instead of
inheritance over this or instead of
using something super heavy like Hydra
using something super heavy like Hydra
which is going to piss off researchers I
which is going to piss off researchers I
did uh this thing where you just have
did uh this thing where you just have
these any files and you know you have a
these any files and you know you have a
default but then you can also specify
default but then you can also specify
config ocean uh like MOA
config ocean uh like MOA
oops and you have this one as well that
oops and you have this one as well that
overrides it
overrides it
so that's the thing I got to merge in
so that's the thing I got to merge in
but I broke a bunch of stuff in the
but I broke a bunch of stuff in the
process it runs now but I probably broke
process it runs now but I probably broke
some other ends so I don't want to quite
some other ends so I don't want to quite
merge it to Dev yet but uh it'll be up
merge it to Dev yet but uh it'll be up
into Dev soon and then we'll figure out
into Dev soon and then we'll figure out
when to release it thanks for dropping
when to release it thanks for dropping
by thanks everyone uh it's actually kind
by thanks everyone uh it's actually kind
of cool it looks like I have at least
of cool it looks like I have at least
nine concurrent right now so
nine concurrent right now so
uh I'd uh I'd kind of like to just keep
uh I'd uh I'd kind of like to just keep
streaming this but I'm definitely fried
streaming this but I'm definitely fried
on dev I'll be back either tomorrow uh
on dev I'll be back either tomorrow uh
or Wednesday on stuff drop puffer a star
or Wednesday on stuff drop puffer a star
if you wouldn't mind helps me out a
if you wouldn't mind helps me out a
whole ton um there's a bunch of this
whole ton um there's a bunch of this
stuff posted on the Twitter it's Jay
stuff posted on the Twitter it's Jay
5341 if you want to check it out there
5341 if you want to check it out there
and other than that more reinforcement
and other than that more reinforcement
learning coming back soon than

Kind: captions
Language: en
we've got some good stuff
today reply to a couple quick things
today reply to a couple quick things
tweet this out and
tweet this out and
um yeah we be started today I've got
um yeah we be started today I've got
some cool stuff I was working on I
some cool stuff I was working on I
didn't quite finish it cuz there were
didn't quite finish it cuz there were
some distractions on
some distractions on
Sunday
Sunday
yeah uh let's
yeah uh let's
on I need to tweet this thing
on I need to tweet this thing
right it like doesn't let me add a
right it like doesn't let me add a
tweet okay this is going to be
tweet okay this is going to be
echoing
echoing
uh
shareing yeah okay so we tweet it from
shareing yeah okay so we tweet it from
here
right post
there we go
uh we got to get this out of the way
uh we got to get this out of the way
because it's covering
because it's covering
chat of
chat of
that get rid of
that get rid of
this
this
and we may or not may not need this I'll
and we may or not may not need this I'll
hide it for now uh anything cool on x
nothing
nothing
really
really
so we've got some stuff
so we've got some stuff
we got some stuff today hold
on
jeez um the plans for today so over the
weekend over the weekend I start started
weekend over the weekend I start started
on not this I have a new Branch here on
puffer totally just
like
like
anyways hopefully I will be fine here um
anyways hopefully I will be fine here um
I started on a new thing with
I started on a new thing with
puffer because my experiments went
puffer because my experiments went
better than expected so I had some extra
better than expected so I had some extra
time
cack origin let me show you this
cack origin let me show you this
off so this was very painful for me to
off so this was very painful for me to
have to do um and it's going to take
have to do um and it's going to take
some more work
some more work
but the main thing I've had people
but the main thing I've had people
complain about in puffer lib above
complain about in puffer lib above
everything else is just like the demo
everything else is just like the demo
being too comp replicated right um now
being too comp replicated right um now
the demo does a lot of stuff and most of
the demo does a lot of stuff and most of
that stuff is pretty important
that stuff is pretty important
um but the main thing was like the
um but the main thing was like the
actual demo. py file
actual demo. py file
itself it had too much arar Shenanigans
itself it had too much arar Shenanigans
too much yaml parsing Shenanigans just
too much yaml parsing Shenanigans just
too much crap going on in the demo file
too much crap going on in the demo file
so I managed to cut a third of the
so I managed to cut a third of the
length off of the demo file
length off of the demo file
and I paid very very dearly for it so
and I paid very very dearly for it so
200 lines 200 lines flat I actually I'm
200 lines 200 lines flat I actually I'm
going to go grab my laptop in a second
going to go grab my laptop in a second
just to make sure I committed up the
just to make sure I committed up the
absolute most recent version of
absolute most recent version of
it
it
um and the loading is way better now so
um and the loading is way better now so
we have make policy we've got nit wandy
we have make policy we've got nit wandy
we've got the sweep function we've got
we've got the sweep function we've got
the train function and then we have a
the train function and then we have a
very small amount of arars here and then
very small amount of arars here and then
the all the complexity of the old
the all the complexity of the old
loading stuff is condensed into this one
loading stuff is condensed into this one
screen of code right
screen of code right
here and hopefully I can even simplify
here and hopefully I can even simplify
this a little bit more um but the way to
this a little bit more um but the way to
do this was to move from yaml to uh any
do this was to move from yaml to uh any
files just init
files just init
files which are supported by python uh
files which are supported by python uh
by default with their what's it called
by default with their what's it called
config
config
lib config parser built into python so
lib config parser built into python so
that actually kills the AML dependency
that actually kills the AML dependency
for us and simplifies stuff quite a
for us and simplifies stuff quite a
bit so other than this little bit of
bit so other than this little bit of
shenanigans right here that I'm still
shenanigans right here that I'm still
going to iterate on uh this is pretty
going to iterate on uh this is pretty
much as simple as it gets and if this is
much as simple as it gets and if this is
still too complicated then I'm going to
still too complicated then I'm going to
need more specific feedback because this
need more specific feedback because this
is about as simple as I can get it
is about as simple as I can get it
um so what I'm going to do today is I'm
um so what I'm going to do today is I'm
going to polish this up a little bit
going to polish this up a little bit
because there's some stuff preventing me
because there's some stuff preventing me
from merging all this into uh the main
from merging all this into uh the main
know the main repo um I am going to I
know the main repo um I am going to I
did run some baselines on this Branch I
did run some baselines on this Branch I
believe uh we're going to go over some
believe uh we're going to go over some
of the trained models CU I ran the
of the trained models CU I ran the
hyperparameter tuned versions for 1
hyperparameter tuned versions for 1
billion steps on all of these uh so we
billion steps on all of these uh so we
should have some reasonably good
should have some reasonably good
policies from
policies from
this and we'll go from
this and we'll go from
there I am going to grab my laptop real
there I am going to grab my laptop real
quick just to make sure that I have the
quick just to make sure that I have the
most recent version one
second just making sure that I actually
second just making sure that I actually
committed everything
committed everything
up for
going to load this up and
check and let me fix a few things in the
check and let me fix a few things in the
meantime where's the
meantime where's the
stream okay there we go now I can see
stream okay there we go now I can see
the view counts and stuff
perfect chat should be working yeah so
perfect chat should be working yeah so
we're good for like I don't know seven
we're good for like I don't know seven
hours today probably
uh I
uh I
modified I think I got the
latest yeah I got the latest on this so
latest yeah I got the latest on this so
we'll have this if we need it but I
we'll have this if we need it but I
think that I will be fine with the
think that I will be fine with the
current code version
we'll start with some of the fun
stuff should be able to load up um some
stuff should be able to load up um some
of these files and see if they do
of these files and see if they do
anything
interesting
so and
so and
uh
uh
group
group
eval and we'll probably have to fix some
eval and we'll probably have to fix some
various things around because like this
various things around because like this
new config system is fully untested so
new config system is fully untested so
um you know I'm going to be fixing stuff
um you know I'm going to be fixing stuff
along the way and the hope is that by
along the way and the hope is that by
the end of this we have the control
the end of this we have the control
environment in a good spot we've got the
environment in a good spot we've got the
new config envir uh new config system in
new config envir uh new config system in
a new spot it won't quite be ready to
a new spot it won't quite be ready to
merge into M yet or anything like that
merge into M yet or anything like that
but maybe we can merge this back into
but maybe we can merge this back into
Dev and have like a reasonably stable
Dev and have like a reasonably stable
good Dev Branch to work off of
right okay
right okay
so a few small things to
so a few small things to
fix again I I only tested like I think
fix again I I only tested like I think
the train path or
whatever oops
actually I see that there are a few
actually I see that there are a few
others of these I thought I had fixed
others of these I thought I had fixed
that but maybe I hadn't fixed this
that but maybe I hadn't fixed this
inside of
inside of
Baseline yeah that must be what it
was it's good
that's
that's
good
good
yeah and all these like dots Sy tcts I
yeah and all these like dots Sy tcts I
replaced this with a dictionary which I
replaced this with a dictionary which I
don't particularly like but um it's made
don't particularly like but um it's made
stuff
easier key error en
name key error n name
name key error n name
um I think it might just be n
um I think it might just be n
right how did I specify
this yeah I just did EnV so it's ARS of
this yeah I just did EnV so it's ARS of
En M name m name
no attribute X
no attribute X
by
right so I mean this is why I don't like
right so I mean this is why I don't like
to change the the cont system very often
to change the the cont system very often
because it's
because it's
like it's a pain to like refactor
like it's a pain to like refactor
everything
everything
um but I think that this is going to
um but I think that this is going to
make it substantially easier for
make it substantially easier for
users just having like way less stuff to
users just having like way less stuff to
worry about in the demo
file um
and we'll see uh how this
does train yeah so there's a lot of um
does train yeah so there's a lot of um
there's going to be a lot of like just
there's going to be a lot of like just
boring syntax fixing today
boring syntax fixing today
unfortunately I am curious though I will
unfortunately I am curious though I will
show off the new config system to see if
show off the new config system to see if
people like it more so the old one here
people like it more so the old one here
is this config yaml so you have this one
is this config yaml so you have this one
gigantic yaml file and you have this
gigantic yaml file and you have this
pseudo inheritance thing where like you
pseudo inheritance thing where like you
can specify default and then like you
can specify default and then like you
can specify your package under the
can specify your package under the
default like this and you can override
default like this and you can override
specific args so you have all the M's in
specific args so you have all the M's in
the same folder like this right so in
the same folder like this right so in
the new one I have a configs
folder there's a default. any that has
folder there's a default. any that has
flat like all these sections with your
flat like all these sections with your
same exact prams from
same exact prams from
before and then you can override
these like
these like
this and you have all the M's specified
this and you have all the M's specified
here uh and it's pretty
here uh and it's pretty
clean so I think that this will be
clean so I think that this will be
easier for people now it's it's not the
easier for people now it's it's not the
yaml format but um that's kind of better
yaml format but um that's kind of better
in a sense it's the built-in
format
format
yeah okay let's figure out what is going
yeah okay let's figure out what is going
on
here so the issue here is that
um let's
see I have en but then there's also like
see I have en but then there's also like
EnV
EnV
dot stuff
right how did I handle this in the old
right how did I handle this in the old
system
system
let me just go check the uh the code
let me just go check the uh the code
base here how did I handle this in the
base here how did I handle this in the
old
system 629 very
system 629 very
nice if you haven't given the poer a
nice if you haven't given the poer a
star please feed the puff for a star
star please feed the puff for a star
helps me out a whole
helps me out a whole
bunch
bunch
um so yeah the 10 Branch should be fine
um so yeah the 10 Branch should be fine
for
for
this let's do
this let's do
demo so 291 lines in this and I think
demo so 291 lines in this and I think
it's gotten a little longer even since
it's gotten a little longer even since
then um so yeah we've really just
then um so yeah we've really just
stripped 100 lines off of
it but what I'm curious is how I handled
it but what I'm curious is how I handled
the N
the N
AR we have M here
package AR and module is load
package AR and module is load
config so how did I handle
config so how did I handle
the uh environment name separately from
the uh environment name separately from
everything
everything
else and config so you load the module
else and config so you load the module
from the
config then we had n
config then we had n
name which is bizarre
or is
or is
it oh right this was so that you could
it oh right this was so that you could
do
like I wanted you to be able to do like
like I wanted you to be able to do like
breakout or
breakout or
whatever and um have it
whatever and um have it
Alias so I can think about that
Alias so I can think about that
separately
yeah so I did send it I did specify it
yeah so I did send it I did specify it
as n
as n
name so I think what we're going to do
name so I think what we're going to do
then
is we're going to add n his EMP as an
is we're going to add n his EMP as an
empty default
empty default
here and I'm going to do
can I just like pop out this argument
can I just like pop out this argument
for
instance parser parsn args
name stop pop
and then if I do en name here I don't
and then if I do en name here I don't
know if pop is going to
work let's try
this name space had yeah so that's what
this name space had yeah so that's what
I was afraid of um that's somewhat
I was afraid of um that's somewhat
awkward
but I think we I think we can
but I think we I think we can
do we can pop this out later
right I can
right I can
do parser do
parse so I can do M name
parse so I can do M name
here is going to be
I'd really like to be able to pop this
I'd really like to be able to pop this
out well for now I will do
out well for now I will do
par and then I will do
par and then I will do
like par
like par
equals
equals
right and then this is going to be
right and then this is going to be
par. pop of
par. pop of
N and we'll see if this does anything
dict items has
no ah okay so we take the underscore
no ah okay so we take the underscore
dict and we'll call uh we'll get the
dict and we'll call uh we'll get the
items here and then that should be
items here and then that should be
fine invalid environment
fine invalid environment
name where's that
name where's that
error ocean
environment valid environment
environment valid environment
name
name
uh AR okay so this is because now we
uh AR okay so this is because now we
need to just look for like args en or
need to just look for like args en or
whatever yeah like right here and now
whatever yeah like right here and now
this is just MV name so this is actually
this is just MV name so this is actually
cleaner we can like save a bunch of
cleaner we can like save a bunch of
these annoying
these annoying
uh like
uh like
calls this is just you know M
calls this is just you know M
name I really don't like to have nested
name I really don't like to have nested
quotes in my uh my f strings if I can
quotes in my uh my f strings if I can
avoid
avoid
it so being able to delete some of those
it so being able to delete some of those
not
bad ah and now this is
bad ah and now this is
actually this is actually what you want
actually this is actually what you want
here is you do want to have args of n
here is you do want to have args of n
here because this is
here because this is
the where you can provide arguments to
the where you can provide arguments to
override the environment
okay so we get an
okay so we get an
unsupported exception
unsupported exception
problem okay w
b unsupported type well let's let's take
b unsupported type well let's let's take
the WB stuff off for a
moment okay so if we load a random
moment okay so if we load a random
policy this actually already works it's
policy this actually already works it's
just W be being
Jank exception problem is not is
Jank exception problem is not is
probably not the best thing to have in
probably not the best thing to have in
your production
code um Wan be
inette ID equal
inette ID equal
ID let's see what we have in ID I it's
ID let's see what we have in ID I it's
probably going to be like something Jank
probably going to be like something Jank
right like I probably like passing a
right like I probably like passing a
dictionary or
something puff one o group
something puff one o group
I thought that's what I wanted isn't
I thought that's what I wanted isn't
it if I look on Wan B
right oh no it's not is
right oh no it's not is
it if I look at like puffer
it if I look at like puffer
here this is the environment named
here this is the environment named
puffer host
puffer host
name where's the ID on
name where's the ID on
this this WB group is
this this WB group is
puff1 base
Line This is
Line This is
correct hey man big respect to you for
correct hey man big respect to you for
all the work you've done have an
all the work you've done have an
interview for associate data engineer
interview for associate data engineer
position tomorrow any advice I am the
position tomorrow any advice I am the
worst person possible to ask about
worst person possible to ask about
interviews um because I never bothered
interviews um because I never bothered
with leite code so I can't pass a first
with leite code so I can't pass a first
round software engineering interview as
round software engineering interview as
it turns out despite being able to build
it turns out despite being able to build
all this cool stuff
what I would suggest you to do is to do
what I would suggest you to do is to do
your homework on the company um assuming
your homework on the company um assuming
it's not like just Fang or whatever so
it's not like just Fang or whatever so
you can actually speak intelligently
you can actually speak intelligently
about like you know ideas of what you
about like you know ideas of what you
might be able to add to the specific
might be able to add to the specific
company and what they're trying to do
company and what they're trying to do
it's always a good thing to do not to
it's always a good thing to do not to
just like you know treat companies as
just like you know treat companies as
interchangeable
but yeah as for technical stuff to be
but yeah as for technical stuff to be
studying nothing I can tell you that's
studying nothing I can tell you that's
going to be like useful the day
before wait this x byd looks fine right
before wait this x byd looks fine right
Puff 10 puffer Puff
Puff 10 puffer Puff
10 group yeah this is
10 group yeah this is
correct
correct
um maybe I'm not I didn't do this the
um maybe I'm not I didn't do this the
way I thought I
did so
args let me just see if I can follow
args let me just see if I can follow
this because this was kind of garbage
this because this was kind of garbage
code uh some of this was so in it wand
code uh some of this was so in it wand
B takes
B takes
args one be name and then ideas ar. X
args one be name and then ideas ar. X
ID okay so when I do args dox ID in
ID okay so when I do args dox ID in
Baseline puff
Baseline puff
version
and this looks
and this looks
fine doesn't
fine doesn't
it maybe I did oh here right here this
it maybe I did oh here right here this
is a
is a
dictionary this needs to be n name
how do I do this before when I did in
how do I do this before when I did in
it this code look
it this code look
like args Name ID okay so
like args Name ID okay so
args I needed to add name here I don't
args I needed to add name here I don't
know why I remove
know why I remove
this um so this
this um so this
is
name haha fell I'm coming from a more
name haha fell I'm coming from a more
analy iCal role is an analytical
analy iCal role is an analytical
engineer intern found a lot of love for
engineer intern found a lot of love for
the
the
nitty-gritty any advice to potentially
nitty-gritty any advice to potentially
break
break
into
into
DS I actually don't know what DS is or a
DS I actually don't know what DS is or a
machine learning in the future if all
machine learning in the future if all
goes
goes
well uh I mean some of the people I know
well uh I mean some of the people I know
that have been doing that have just been
that have been doing that have just been
like it depends on whether you can do it
like it depends on whether you can do it
at your job or not assuming you can't do
at your job or not assuming you can't do
that laterally inside of the company
that laterally inside of the company
that you're currently
that you're currently
at doing open source stuff oh data
at doing open source stuff oh data
science okay
science okay
sure
sure
um if you it depends what you mean by ly
um if you it depends what you mean by ly
grit nitty-gritty right if you mean the
grit nitty-gritty right if you mean the
experimental analysis side um that's
experimental analysis side um that's
maybe a little harder to do if you're
maybe a little harder to do if you're
talking about the engineering or
talking about the engineering or
building stuff side then open source is
building stuff side then open source is
a great way to do that I'd say that my
a great way to do that I'd say that my
own Playbook is like 80% on the build
own Playbook is like 80% on the build
stuff side like like maybe 15% I know
stuff side like like maybe 15% I know
how to do good science and then 5% math
how to do good science and then 5% math
very very little
very very little
math um so open source stuff has been
math um so open source stuff has been
really
really
great yeah building stuff is just do
great yeah building stuff is just do
open source stuff right either do your
open source stuff right either do your
own projects or join like existing stuff
own projects or join like existing stuff
there's plenty of stuff online um you
there's plenty of stuff online um you
know I do stuff with puffer I've got a
know I do stuff with puffer I've got a
couple people that contribute to this
couple people that contribute to this
already like just random open source
already like just random open source
people that have joined over the last
people that have joined over the last
year or so I've got uh another project I
year or so I've got uh another project I
sponsor with Pokemon it's like a
sponsor with Pokemon it's like a
reinforcement learning trying to solve
reinforcement learning trying to solve
Pokemon Red that I sponsor the compute
Pokemon Red that I sponsor the compute
for I shouldn't say sponsor it's more
for I shouldn't say sponsor it's more
compute
compute
sponsor um but yeah there are a lot of
sponsor um but yeah there are a lot of
projects like this out there so you find
projects like this out there so you find
some cool people that you think you can
some cool people that you think you can
work with that you know value uh hard
work with that you know value uh hard
work and contribution and get going from
work and contribution and get going from
there and it t it's going to take time
there and it t it's going to take time
right like ml's hard it's easier now
right like ml's hard it's easier now
than it ever was but it takes it's going
than it ever was but it takes it's going
to take some time to learn stuff right
to take some time to learn stuff right
like yeah just putting together some
like yeah just putting together some
neural nuts is easy enough but um like
neural nuts is easy enough but um like
there's a lot of subtlety and stuff that
there's a lot of subtlety and stuff that
takes time to
learn like the stuff you can see me
learn like the stuff you can see me
building right here is kind of
building right here is kind of
nitty-gritty right like this is well a
nitty-gritty right like this is well a
lot of my work is kind of fun to watch
lot of my work is kind of fun to watch
this is incredibly boring I'm well aware
this is incredibly boring I'm well aware
um but it's very important because this
um but it's very important because this
is the this is how people will use this
is the this is how people will use this
Library it is like the demo over
Library it is like the demo over
everything and keeping this simple and
everything and keeping this simple and
easy to use is very very important so
easy to use is very very important so
you know I put in the work in order to
you know I put in the work in order to
do that I've Rewritten this stupid
do that I've Rewritten this stupid
config system like four times just
config system like four times just
trying to make it
better for
uh let's see if this does anything so if
uh let's see if this does anything so if
I do
train yeah sure thing best of luck to
train yeah sure thing best of luck to
you as well
does this
work oh wait we might get something cool
here yeah yeah we get something cool
here yeah yeah we get something cool
here I can tell already
so oh it didn't run for long enough okay
so oh it didn't run for long enough okay
so I'll have to run it for longer but
so I'll have to run it for longer but
we're going to have something really
we're going to have something really
cool to look
at okay so yeah if I go to uh if I just
at okay so yeah if I go to uh if I just
make
make
this this run for way
longer I'm going to say that this is
longer I'm going to say that this is
going to run for a long time and I'm
going to run for a long time and I'm
going to do every 10 frames we're going
going to do every 10 frames we're going
to render
it we should be able to watch the agents
it we should be able to watch the agents
learning to group up which will be
learning to group up which will be
really fun
really fun
you see all these clusters
forming this is exactly what I wanted I
forming this is exactly what I wanted I
mean they could be a little bit more
mean they could be a little bit more
intentional about it but like you can
intentional about it but like you can
see that the Clusters whenever they run
see that the Clusters whenever they run
into each other watch these are going to
into each other watch these are going to
snap together boom snaps together here
snap together boom snaps together here
so essentially you have a bunch of
so essentially you have a bunch of
clusters that are like wandering around
clusters that are like wandering around
looking for other clusters and doing
looking for other clusters and doing
hierarchical merging really cool to see
hierarchical merging really cool to see
um now they don't all just merge uh
um now they don't all just merge uh
because agents will respawn randomly so
because agents will respawn randomly so
they're always going to be some free
they're always going to be some free
agents around but this is still really
agents around but this is still really
cool to
see little tiny bit of a directional
see little tiny bit of a directional
bias I can tell they're going this way a
bias I can tell they're going this way a
little bit more
little bit more
right not huge though did these
right not huge though did these
merge no they can't see very far is the
merge no they can't see very far is the
big limitation but you get some big
big limitation but you get some big
clusters these guys
nope you get some big clusters this is
nope you get some big clusters this is
really nice like you can zoom in and see
really nice like you can zoom in and see
that there are you know groups of like
that there are you know groups of like
10 agents or whatever wandering around
together and this is Rend rendering only
together and this is Rend rendering only
one tenth of the
one tenth of the
frames I like this as a baseline
frames I like this as a baseline
environment it's purely Cooperative has
environment it's purely Cooperative has
a bunch of agents and it's kind of cool
let's see how well the other ones did
PR do pre and
forging uh Let's
forging uh Let's
do let's check out the forging one
next oh yeah I forgot it's really easy
next oh yeah I forgot it's really easy
to just check them all out because we
to just check them all out because we
can literally just change this and it'll
can literally just change this and it'll
download them for me that's
nice they eat through a lot of stuff now
nice they eat through a lot of stuff now
there is a little bit of a directional
there is a little bit of a directional
bias
right but they seem very efficient at
right but they seem very efficient at
eating eating through food
you can see they cut big swaths and
everything this is a little
everything this is a little
disappointing but you know we can always
disappointing but you know we can always
train it for
train it for
longer feature request is there easy is
longer feature request is there easy is
there an easy way to support contextual
there an easy way to support contextual
mdp
mdp
training EG training an agent on
training EG training an agent on
multiple randomly seated
multiple randomly seated
instances of the same
instances of the same
environment this depends do you want to
environment this depends do you want to
train on the same seed on different
train on the same seed on different
seeds at the same time or do you want to
seeds at the same time or do you want to
run different experiments so that you
run different experiments so that you
can get like a a cur or so you can get a
can get like a a cur or so you can get a
confidence bound on the experimental
confidence bound on the experimental
results um because if it is the ladder
results um because if it is the ladder
that's kind of a feature for wbe and not
that's kind of a feature for wbe and not
for puffer I might be able to hack
for puffer I might be able to hack
something to be fair
something to be fair
and yeah in a vectorized fash oh uh wait
and yeah in a vectorized fash oh uh wait
so you want to run one training run so
so you want to run one training run so
you're training one network on multiple
you're training one network on multiple
different seeds of the same environment
different seeds of the same environment
is that what you want to
do cuz if that's what you want that's
do cuz if that's what you want that's
already
already
implemented yeah okay that's already
implemented yeah okay that's already
implemented um there's a seed there's a
implemented um there's a seed there's a
you you have to play with it a little
you you have to play with it a little
bit just like print out the seeds make
bit just like print out the seeds make
sure it's correct for your case but
sure it's correct for your case but
there's a a reset function that takes uh
there's a a reset function that takes uh
seeds as an argument you can pass
seeds as an argument you can pass
different seeds to each environment on
different seeds to each environment on
creation
creation
and then they will just continually give
and then they will just continually give
you different seated versions uh from
you different seated versions uh from
there so that already
works that is in fact the
default the best type of feature request
default the best type of feature request
is when the feature is already
is when the feature is already
implemented
implemented
that is the
best let's see if Predator pre is
cool
whoa okay this is running a little bit
whoa okay this is running a little bit
too fast to follow
too fast to follow
and it's very heavily directionally
and it's very heavily directionally
biased I can
biased I can
see but
see but
um let's
see very heavily directional bias
see very heavily directional bias
directionally bias but let's take a look
directionally bias but let's take a look
at this so This Is The Predator prey
at this so This Is The Predator prey
environment
you can see that they like
you can see that they like
Chase they chase the agents around
right that's pretty
cool all these little just patches
cool all these little just patches
chasing agents
chasing agents
around that's
fun which one did I miss I missed the
fun which one did I miss I missed the
puffer en right I don't know if this
puffer en right I don't know if this
puffer en works I think the puffer en is
puffer en works I think the puffer en is
hard
so you can see some agents are locked in
so you can see some agents are locked in
place on the logo I think that this is
place on the logo I think that this is
the P right
the P right
here um but you can't like they're not
here um but you can't like they're not
filling in this is p u
filling in this is p u
FF
e but you can't really see it very well
e but you can't really see it very well
uh you really want to see all the agents
uh you really want to see all the agents
going towards the center
going towards the center
here so I mean this is okay
here so I mean this is okay
like uh I mean this like you can start
like uh I mean this like you can start
to see outlines of
to see outlines of
stuff I think it'll be really cool when
stuff I think it'll be really cool when
all the agents just beine for
all the agents just beine for
it and you can really start to see the
it and you can really start to see the
uh the
logo not a total failure though not a
logo not a total failure though not a
total not a total failure
total not a total failure
well we'll work on this a little today
well we'll work on this a little today
we'll work on the config we'll work on a
we'll work on the config we'll work on a
bunch of
stuff we really want to start building
stuff we really want to start building
some more Sims
some more Sims
but yeah you can kind of see it right
but yeah you can kind of see it right
but like it's not like all the agents
but like it's not like all the agents
are just funneling towards the center in
are just funneling towards the center in
order to uh to make the logo which is
order to uh to make the logo which is
what I would like
where' my puffer Li
where' my puffer Li
go
nope do I have another window
open
open
uh
uh
uh filter
yeah okay
here's let's see these
curves it looks like they were probably
curves it looks like they were probably
getting better over time
getting better over time
slowly here's the group one the group
slowly here's the group one the group
one was getting better very slowly right
one was getting better very slowly right
uh actually the forging one seems
uh actually the forging one seems
like the forging one seems like it
like the forging one seems like it
actually just started picking up close
actually just started picking up close
to a billion and started getting way
to a billion and started getting way
better from
better from
there and then the Predator well the
there and then the Predator well the
Predator prey curve is not going to tell
Predator prey curve is not going to tell
you very much cuz it's adversarial so
you very much cuz it's adversarial so
you actually expect it to be roughly
you actually expect it to be roughly
zero until you have better ELO like
zero until you have better ELO like
evaluation stuff so I mean this is cool
evaluation stuff so I mean this is cool
um and this trains very fast I think
um and this trains very fast I think
that these were like less than 20 minute
that these were like less than 20 minute
runs each probably all four of these
runs each probably all four of these
were around an hour
were around an hour
total maybe a little more
so very computationally
efficient oh JB uh JBL I got I've got a
efficient oh JB uh JBL I got I've got a
thing for feed that I'd like some user
thing for feed that I'd like some user
feedback on I think I made this better
feedback on I think I made this better
so I don't know if you've looked at the
so I don't know if you've looked at the
demo file for 10 but like the old demo
demo file for 10 but like the old demo
file that's in 1.0 right now it's 291
file that's in 1.0 right now it's 291
lines it has this really complicated
lines it has this really complicated
yaml config loader that like essentially
yaml config loader that like essentially
implements its own inheritance in yaml
implements its own inheritance in yaml
and then it also has this huge block of
and then it also has this huge block of
ARG pars at the bottom where is
ARG pars at the bottom where is
it oh I guess I got rid of I got I got
it oh I guess I got rid of I got I got
rid of some of it from the bottom and
rid of some of it from the bottom and
there's a bunch of AR par nanigans at
there's a bunch of AR par nanigans at
the bottom still um so what I managed to
the bottom still um so what I managed to
do in the new version here that I just
do in the new version here that I just
did over the weekend I've got it down to
did over the weekend I've got it down to
like 200 lines so I cut all the config
like 200 lines so I cut all the config
Shenanigans off
Shenanigans off
and so this is the whole file now it's
and so this is the whole file now it's
just this the entirety of the config
just this the entirety of the config
like parsing is now isolated to right
like parsing is now isolated to right
here it's just uh Python's built-in
here it's just uh Python's built-in
config parser and then converting uh
config parser and then converting uh
converting to addict
converting to addict
format and then the uh the files for
format and then the uh the files for
this instead of being this giant ass
this instead of being this giant ass
config.yml which has like this pseudo
config.yml which has like this pseudo
inheritance thing built into it
inheritance thing built into it
uh what I have
is I've got these uh any files so here's
is I've got these uh any files so here's
your default
your default
config and then you can add your own
config and then you can add your own
configs for the environments that you
configs for the environments that you
want like
want like
ocean and you can just override the
ocean and you can just override the
defaults however you like here and
defaults however you like here and
specify all the supported environments
specify all the supported environments
inside of Mame and these get picked up
inside of Mame and these get picked up
for you so I think that this is simpler
for you so I think that this is simpler
I'm not positive I think this should be
I'm not positive I think this should be
easier for users though so if you want
easier for users though so if you want
to take a look at it and let me know if
to take a look at it and let me know if
it's any good feel free to do
so of course it's not fully baked yet
so of course it's not fully baked yet
right I have to fix all the bugs in it
right I have to fix all the bugs in it
cuz this is a brand new Port like a this
cuz this is a brand new Port like a this
is like a brand new config system so I'm
is like a brand new config system so I'm
going to have to fix some bugs but
going to have to fix some bugs but
hopefully conceptually it's easier
trying to think what I want to do from
trying to think what I want to do from
here for the
here for the
day there are a few routes I could
day there are a few routes I could
go I don't think I want to just like
go I don't think I want to just like
hack on the configs all day though that
hack on the configs all day though that
would probably not be a bad use of time
would probably not be a bad use of time
I want to hack on the configs a little
I want to hack on the configs a little
bit but I also want experiments on
bit but I also want experiments on
stuff um
the config side would actually make
the config side would actually make
everything easier as the
everything easier as the
thing the only thing that I have left to
thing the only thing that I have left to
do on the
do on the
grid like the grid project is I got to
grid like the grid project is I got to
run carb sweeps like better quality
run carb sweeps like better quality
sweeps per
environment just send it
environment just send it
experiment well I mean we can do that
um the thing is the experiments kind of
um the thing is the experiments kind of
just have to run so I can set them up I
just have to run so I can set them up I
can I can set them up now and I can fix
can I can set them up now and I can fix
the carbs integration with the new
the carbs integration with the new
config system so that I can do that that
config system so that I can do that that
would be a decent use of time so what I
would be a decent use of time so what I
would like to have let me give you my my
would like to have let me give you my my
vision here
vision here
for let me give you my vision for what
for let me give you my vision for what
um what I want to do with this whole new
um what I want to do with this whole new
system okay my hope for like this
system okay my hope for like this
particle n as a useful research
particle n as a useful research
library is I want to have it so that you
library is I want to have it so that you
can run a carb sweep on each of these
can run a carb sweep on each of these
individual environments
individual environments
get optimal hyperparameters so see
get optimal hyperparameters so see
exactly how good it can
exactly how good it can
be and then I want you to be able to
be and then I want you to be able to
rerun that carb Suite per environment
rerun that carb Suite per environment
with uh continuous actions and then what
with uh continuous actions and then what
I want you to basically be able to do is
I want you to basically be able to do is
see if the continuous version is
see if the continuous version is
fundamentally harder than the discrete
fundamentally harder than the discrete
version with your algorithm which would
version with your algorithm which would
mean that you have something in the
mean that you have something in the
algorithm that could be improved or if
algorithm that could be improved or if
they're they match or if you get some
they're they match or if you get some
sort of other unexpected
sort of other unexpected
result so I think that we're going to do
result so I think that we're going to do
a little bit of hybrid stuff I'm not
a little bit of hybrid stuff I'm not
just going to hack on the config I'm
just going to hack on the config I'm
going to like hack on the config for the
going to like hack on the config for the
purpose of making these experiments work
purpose of making these experiments work
I'm going to hack everything that needs
I'm going to hack everything that needs
to be on that in order to get those to
to be on that in order to get those to
work I'm going to set up a couple of
work I'm going to set up a couple of
those sweeps and then we'll go from
those sweeps and then we'll go from
there that'll probably be the most
there that'll probably be the most
interesting most interesting thing I can
interesting most interesting thing I can
do
so what do we have here
forging Predator prey group hoer and
forging Predator prey group hoer and
we're probably going to come up with
we're probably going to come up with
some limitations of this config system
some limitations of this config system
along the way that we have to hack
along the way that we have to hack
around as well uh so let's start
with let's see if we can get like a very
with let's see if we can get like a very
small
scale sweep to run
experiments let's see if
experiments let's see if
this this will run so we have got args a
this this will run so we have got args a
sweep you've got the M
sweep you've got the M
name and then when we run
training we've got train
config let's see well let's let's run
config let's see well let's let's run
this train see if that works and then
this train see if that works and then
we'll get the sweep to work
so if I run training
local okay
local okay
so this uh dict is wrong this should
be make
N Train config VC m
okay so this this train uh config here
okay so this this train uh config here
this should be args of EnV and then this
this should be args of EnV and then this
it should be EnV name I
believe and that might fix training with
believe and that might fix training with
the new config system yep we can see
the new config system yep we can see
that we have the M name up here
that we have the M name up here
correctly and it runs at the right SPS
correctly and it runs at the right SPS
um there is some sort of issue with the
um there is some sort of issue with the
model saving which is not good let's so
model saving which is not good let's so
let's fix
that config dox
ID let's see what's wrong
here the other thing I would like to
here the other thing I would like to
have which I think may or may not be
have which I think may or may not be
possible cuz I think it's just torch I'd
possible cuz I think it's just torch I'd
like these experiments to start
like these experiments to start
instantly I hate that there's like a
instantly I hate that there's like a
second or two delay um so something is
second or two delay um so something is
slow to important and I don't know what
slow to important and I don't know what
it
is okay so X byd here is none uh which
is okay so X byd here is none uh which
is not
acceptable
so what do I use as X by D right
I think I was using something before for
I think I was using something before for
x by D and I and it wasn't none so let's
x by D and I and it wasn't none so let's
figure out what that was we've got X
figure out what that was we've got X
name which is X by D these are the same
name which is X by D these are the same
thing and when we call
thing and when we call
train args n module make
train args n module make
n ar. tr. x byd equals ar. X byd
uh but where does X byd come from
uh but where does X byd come from
right maybe in the load
function I see X byd here okay
function I see X byd here okay
config ah right
config ah right
here I actually do have something that
here I actually do have something that
generates uh this
generates uh this
ID
ID
so I need this during
training
yeah so train
yeah so train
config and then we
config and then we
do oh right here args of X by D so all I
do oh right here args of X by D so all I
have to do is put
or I think I can do n
or I think I can do n
name plus Dash
name plus Dash
plus u
plus u
ID yes right
and then we import uu
ID so now when we go to create a new
ID so now when we go to create a new
training run we are if we're not using
training run we are if we're not using
WB we have a method of generating our
WB we have a method of generating our
own uh our own name for it
own uh our own name for it
let's see if that is
enough need to fix this camera as
well now it cuts off the top of my
well now it cuts off the top of my
head frame it that's
head frame it that's
better okay so this now saves model
better okay so this now saves model
correctly this saves the model
correctly this saves the model
correctly so now that training works we
correctly so now that training works we
can try
can try
sweep so this should attempt to do 10
sweep so this should attempt to do 10
short
short
runs and we'll see whether I broke it or
runs and we'll see whether I broke it or
not and clearly I
not and clearly I
did invalid hyperparameter configuration
did invalid hyperparameter configuration
train is it going to give me a
train is it going to give me a
reasonable error
reasonable error
message yes yes it
message yes yes it
is so right
here right here we're going to
get this is our sweep
config invalid hyperparameter
config invalid hyperparameter
configuration
train interesting
min
max wait so batch size has distribution
max wait so batch size has distribution
min
min
max oh and values
max oh and values
shoot I
shoot I
see The Inheritance does not work out
see The Inheritance does not work out
the way that I would have hoped
not
not
exactly I think we can work around
it we can work around
it it would be very nice to have the
it it would be very nice to have the
batch sizes be powers of two though
well this is essentially a carbs
well this is essentially a carbs
issue
issue
um yeah this is essentially a carbs
issue
issue
H I did not think of
this well
so the issue
so the issue
here is that we need to be able to
override it's overriding the whole
override it's overriding the whole
section versus individual
parameters I think I want this to be
parameters I think I want this to be
values
not yeah I want this to be a fixed set
not yeah I want this to be a fixed set
of values I want to have fixed powers of
of values I want to have fixed powers of
two so
values I was wondering when following
values I was wondering when following
the project can puffer lib do something
the project can puffer lib do something
for maoko I have not added a binding for
for maoko I have not added a binding for
maoko yet um because I've been mostly
maoko yet um because I've been mostly
doing discreet and multi- discreet like
doing discreet and multi- discreet like
complex game type Ms but the project
complex game type Ms but the project
that I'm currently in on is continuous
that I'm currently in on is continuous
control for puffer and uh essentially
control for puffer and uh essentially
once this is stable uh we will be adding
once this is stable uh we will be adding
more control ends and control and
more control ends and control and
bindings and I also have a colleague
bindings and I also have a colleague
who's returning from vacation this week
who's returning from vacation this week
who's interested in continuous control
who's interested in continuous control
so probably we'll uh be adding helping
so probably we'll uh be adding helping
add some stuff to puffer as well so
add some stuff to puffer as well so
continuous control coming very soon to
continuous control coming very soon to
puffer um it should be pretty much the
puffer um it should be pretty much the
exact same thing as for the rest of the
exact same thing as for the rest of the
environments it should just make
environments it should just make
everything that's CPU vectorized run
everything that's CPU vectorized run
really really fast and uh give you a
really really fast and uh give you a
bunch of tools to make life easier so
bunch of tools to make life easier so
yeah we'll do something for that very
soon mini batch
how fast is maoko by the
how fast is maoko by the
way do you
know is it something like remotely
know is it something like remotely
reasonable okay the sweep actually the
reasonable okay the sweep actually the
config works now so that's
nice yeah
nice yeah
I'm working on all this stuff it can
I'm working on all this stuff it can
only it just only gets done so fast
only it just only gets done so fast
right dict object has
right dict object has
no attribute Yep this is fine we expect
no attribute Yep this is fine we expect
that so we can fix some bugs here
did one be mess up my
terminal well that's not good what
happened I'm going to commit this stuff
happened I'm going to commit this stuff
up because I'm a little bit concerned as
up because I'm a little bit concerned as
to what just happened
what the
heck bind
for okay that looks like it
worked yeah that was weird
let's try this sweep
again unsupported
again unsupported
type so I'm assuming I pass bad arcs in
type so I'm assuming I pass bad arcs in
this one
and it wand b args m
and it wand b args m
Name ID equal args Mame
ID that looks fine doesn't
it do I get any better error message
it do I get any better error message
than that
it's in the
it's in the
inette r of X by
inette r of X by
D
D
so
so
why why does this not
work these args are fine
end name is not fine so I passed the
end name is not fine so I passed the
wrong thing to sweep I guess
right wait
right wait
args and
args and
module now this is should
module now this is should
be wait
args and name
something's
weird make end policy
weird make end policy
class we just want this stuff
right args M name make end policy class
right args M name make end policy class
RN class
RN class
yeah try this
puffer lib to the
puffer lib to the
Moon well for puffer lib to go to the
Moon well for puffer lib to go to the
Moon uh I'm going to need more people to
Moon uh I'm going to need more people to
follow the Twitter so I can promote this
follow the Twitter so I can promote this
stuff more easily almost at
stuff more easily almost at
4K and more importantly to Star the
4K and more importantly to Star the
puffer you know feed the puffer some
puffer you know feed the puffer some
Stars helps out a whole
Stars helps out a whole
ton and then RL will be ex
ton and then RL will be ex
ized exorcised with an
O as in ritually purged of the demons
O as in ritually purged of the demons
that possess
it okay let's see uh mini batch signs
it okay let's see uh mini batch signs
must be divisible by BPT
must be divisible by BPT
Horizon
really
really
well I suppose we can uh edit some stuff
well I suppose we can uh edit some stuff
here
this can just be values one two
this can just be values one two
48 we'll have to figure this out with
carbs what is the end goal with puffer
carbs what is the end goal with puffer
lib I watched your thesis on multi-agent
lib I watched your thesis on multi-agent
Ms I'm very serious when I mean exercise
Ms I'm very serious when I mean exercise
reinforcement learning I want to make
reinforcement learning I want to make
this a stable use like a stable field
this a stable use like a stable field
where we can build stuff that is and
where we can build stuff that is and
works um that includes your standard
works um that includes your standard
environments that includes industry Sims
environments that includes industry Sims
that includes like complex multi-agent
that includes like complex multi-agent
stuff complex games all of this is going
stuff complex games all of this is going
to be made brain dead simple and
to be made brain dead simple and
easy that and we're going to have
easy that and we're going to have
techniques for stupidly high performance
techniques for stupidly high performance
simulation so that we can do our
simulation so that we can do our
research very very
research very very
fast these are generally the
fast these are generally the
goals I found some graph of ant EG
goals I found some graph of ant EG
stepping with 6K per
stepping with 6K per
second is that on the whole machine on a
second is that on the whole machine on a
GPU or on like one core
um we're going to need to figure stuff
um we're going to need to figure stuff
out with that so to give you some
out with that so to give you some
numbers here right I can get Atari
numbers here right I can get Atari
training at 16k right now I think I can
training at 16k right now I think I can
do way better than that once I mess with
do way better than that once I mess with
the some of the bindings proen is really
the some of the bindings proen is really
slow at like 3K even though though I
slow at like 3K even though though I
vectorize it at a million per second
vectorize it at a million per second
because um the the network architecture
because um the the network architecture
used in proin is really dumb um but I
used in proin is really dumb um but I
think that that can be made very fast uh
think that that can be made very fast uh
then there's stuff like Pokemon that
then there's stuff like Pokemon that
we're doing where it's like it does not
we're doing where it's like it does not
go above 7K steps per second period um
go above 7K steps per second period um
because just the en is
because just the en is
slow I'm I'm curious to see how much
slow I'm I'm curious to see how much
faster we can make it they integrate
faster we can make it they integrate
xlaa at the moment while doing the whole
xlaa at the moment while doing the whole
physics on GPU oh jeez 6K with xla is
physics on GPU oh jeez 6K with xla is
like painful painfully
like painful painfully
slow it's so hard to do research when
slow it's so hard to do research when
your M's are just that slow like the
your M's are just that slow like the
stuff I'm working on at the moment it
stuff I'm working on at the moment it
runs at millions of steps per second per
runs at millions of steps per second per
CPU core and trains at a million steps
CPU core and trains at a million steps
per second this is what we need for RL
per second this is what we need for RL
now when I can figure that out for
now when I can figure that out for
robotics we'll think about that
robotics we'll think about that
I think this is only
I think this is only
CPU you say they're doing the physics on
CPU you say they're doing the physics on
the
the
GPU look 6K per seconds per core is
GPU look 6K per seconds per core is
actually kind of fine we can make
actually kind of fine we can make
something happen with that
something happen with that
um but at the very least we want like
um but at the very least we want like
you know High tens of thousands train in
you know High tens of thousands train in
order to do something reasonable now of
order to do something reasonable now of
course I can just add The Binding it'll
course I can just add The Binding it'll
be faster than uh you know it'll be
be faster than uh you know it'll be
faster than it is currently I can
faster than it is currently I can
totally do
totally do
that but uh we generally we need much
that but uh we generally we need much
much faster Ms for RL to make
progress do you think an actual AGI
progress do you think an actual AGI
needs to be RL based and not llm based
needs to be RL based and not llm based
where it takes in the five senses as we
where it takes in the five senses as we
do uh I think that the most likely the
do uh I think that the most likely the
most likely scenario is that you need
most likely scenario is that you need
both I think it's really dumb to be
both I think it's really dumb to be
running a giant super expensive model
running a giant super expensive model
over everything so like anytime you need
over everything so like anytime you need
to do anything you run this giant super
to do anything you run this giant super
expensive model I think that RL is going
expensive model I think that RL is going
to have a very nice place for uh lower
to have a very nice place for uh lower
level stuff as well as for interactivity
level stuff as well as for interactivity
learning from like fix Sims and stuff um
learning from like fix Sims and stuff um
I think it's like very very likely RL is
I think it's like very very likely RL is
going to feature in some way for
that my own uh my own motivations around
that my own uh my own motivations around
doing all this stuff are very much
doing all this stuff are very much
long-term AI
long-term AI
progress for
sure looat cannot be interpreted as an
sure looat cannot be interpreted as an
integer update
EPO I see
EPO I see
so this one this is kind of obnoxious
so this one this is kind of obnoxious
here with the any files
here with the any files
it interprets it as a float by
default how do I want to handle
this maybe Wan just has a setting
maybe w b just has a setting for this do
maybe w b just has a setting for this do
you think now
you think now
WB they have a
setting this page is blindingly bright
uh sweep config
template wait min max Q is Q
quantization Q looks like quantization
quantization Q looks like quantization
doesn't
doesn't
it or is this different q log un form
it or is this different q log un form
values
why don't they have docks on this
why don't they have docks on this
stuff oh wait maybe they
do quantization step sizes for quantized
do quantization step sizes for quantized
hyper
parameters will this convert
parameters will this convert
to an in for me as the question
int uniform distributed oh do they have
int uniform distributed oh do they have
an INT uniform
an INT uniform
now
wait give me
wait give me
modes where does it have the
modes
modes
parameters
distribution ah
distribution ah
int
uniform
wait they got
wait they got
values wait let me see if there's a way
values wait let me see if there's a way
that we can do this so this they have
that we can do this so this they have
constant they've
got
categorical in
categorical in
uniform Q uniform
log uniform log uniform
values does any of this help
values does any of this help
me if I have
like distribution
categorical which parameter was this
categorical which parameter was this
that I was having trouble with the
that I was having trouble with the
update
EPO I might be able to do this in
EPO I might be able to do this in
uniform right
uniform right
so if I do like int uniform
so if I do like int uniform
right does this do it for
me will that just
quantize ah that
quantize ah that
does
does
perfect so let's see if this actually
perfect so let's see if this actually
saves
correctly uh I can see
correctly uh I can see
that this is not training
that this is not training
for right so this total time step sweep
for right so this total time step sweep
pram is not going to be
pram is not going to be
good um by default I think we need to
good um by default I think we need to
get rid of
get rid of
that let's see if this works
build the sample metric that's just from
build the sample metric that's just from
the old dead process
okay there you go that's one
okay there you go that's one
experiment and it only takes a few
experiment and it only takes a few
seconds to sync and it'll do the second
experiment and we should actually see
experiment and we should actually see
this in our logs here
this in our logs here
right sweeps
right sweeps
maybe yeah
maybe yeah
so we actually we have this working
so we actually we have this working
now so we fix
now so we fix
sweeps with uh the new config system now
sweeps with uh the new config system now
what we need to do is we need to
what we need to do is we need to
fix carb sweeps which is going to be a
fix carb sweeps which is going to be a
little bit
harder
harder
um I'm assuming it's going to take a
um I'm assuming it's going to take a
while for w to be to think about like
while for w to be to think about like
doing this natively so what we have for
doing this natively so what we have for
now is we have carbs
oh this might have been the file that I
oh this might have been the file that I
I thought I'd forgotten to commit yeah
I thought I'd forgotten to commit yeah
let me pull let me grab my laptop I have
let me pull let me grab my laptop I have
to commit this file
okay there we go
so this now
so this now
takes we're going to have to match the
takes we're going to have to match the
signature
probably going to
need this type of a thing
need this type of a thing
here uh and
then
sweep AR a sweep project is AR a one B
sweep AR a sweep project is AR a one B
project right Yep this is
project right Yep this is
correct X by D like
this
this
oh uh hold on so project yeah project is
oh uh hold on so project yeah project is
carbs because we're going to do this
carbs because we're going to do this
goes in a separate project folder for
goes in a separate project folder for
now until it's
now until it's
stable init one B takes ARS of X by D
and it w b should be somewhere down here
right uh I don't like that that's kind
right uh I don't like that that's kind
of weird the way that this works I think
of weird the way that this works I think
they should just be wandb equals an N
they should just be wandb equals an N
wandb right args M
wandb right args M
name yeah
now does this does this function need to
now does this does this function need to
be a local like
be a local like
this if I give it space WB pams mid Max
this if I give it space WB pams mid Max
is there anything else I'm using in here
is there anything else I'm using in here
that's not
that's not
defined onb pams onb
defined onb pams onb
Pam search center I think not I think I
Pam search center I think not I think I
can move this function to a more
can move this function to a more
reasonable
location like
location like
um I don't know down here right
move that to
here put this helper function
here put this helper function
down
here uh and I can put all these Imports
here uh and I can put all these Imports
now up at the top since they don't get
now up at the top since they don't get
used unless you import this cars file so
used unless you import this cars file so
we can clean this up quite a
we can clean this up quite a
bit numpy
bit numpy
Mathis we'll do this logger do we use
Mathis we'll do this logger do we use
logger uh I don't think I actually care
logger uh I don't think I actually care
about this but we'll keep it in here for
now and then there's like the policy
now and then there's like the policy
class RNN class thing I think that
class RNN class thing I think that
that's from the updated Train sign
yeah so I need to go back and get
yeah so I need to go back and get
the the train signature which should be
the the train signature which should be
in
in
Main and where I call train this now
Main and where I call train this now
actually needs to be
actually needs to be
stats
yeah yeah this is good so we update
yeah yeah this is good so we update
the the signature here and now we can
the the signature here and now we can
update the function signature at the top
update the function signature at the top
we'll keep this
one uh now we we update the type of args
one uh now we we update the type of args
because it's now everything is now a
because it's now everything is now a
dictionary which is
dictionary which is
easy and then it
sweep you sweep
sweep you sweep
parameters args a sweep
parameters args a sweep
parameters right and then we do train
parameters right and then we do train
params is going to
params is going to
be sweep parameters of
be sweep parameters of
train end parameters and policy
train end parameters and policy
parameters
right that sounds good uh I think we can
right that sounds good uh I think we can
just get rid of this logger we really
just get rid of this logger we really
don't need it
don't need it
right yeah we don't need this
logger okay and now we have
logger okay and now we have
all the carbs prams here that we will
all the carbs prams here that we will
mess with in a
mess with in a
bit uh init want be okay so we do not
bit uh init want be okay so we do not
have this init function that's actually
have this init function that's actually
kind of inconvenient because we need
kind of inconvenient because we need
this from puffer
this from puffer
lib uh which maybe a circular import
right I could technically make like a
WB
WB
file or
file or
whatever do I want to do
whatever do I want to do
that would make the demo shorter
but not
really I'm going to just go grab it from
really I'm going to just go grab it from
demo for for now
I'll figure out how to avoid duplicating
I'll figure out how to avoid duplicating
it in a
bit okay so now we have an IT one
bit okay so now we have an IT one
B we've got all this stuff and let's
B we've got all this stuff and let's
just make sure we haven't screwed up
just make sure we haven't screwed up
anything really
obvious config
train uh we no longer need so this here
train uh we no longer need so this here
this gets simplified because this is now
this gets simplified because this is now
a dictionary so this is just args of
a dictionary so this is just args of
train uh
train uh
update this is
update this is
fine and then ARS oops
what the
heck
policy CNN
channels yeah that's way
easier oh I'm going to have so many
easier oh I'm going to have so many
circular import problems with
circular import problems with
this because I put this in a different
this because I put this in a different
file right
um yeah that's
um yeah that's
obnoxious so I wanted to put the sweep
obnoxious so I wanted to put the sweep
carbs into a different file but really
carbs into a different file but really
this is a main thing it's like a main
this is a main thing it's like a main
file
thing so I guess I have to put this back
thing so I guess I have to put this back
if I want it
huh well I'll put it in the main file
huh well I'll put it in the main file
then screw it
it's so much annoying code to put in the
it's so much annoying code to put in the
main
main
file but carbs is worth
file but carbs is worth
it carbs is
amazing we would just put this
amazing we would just put this
here and uh we
here and uh we
will we'll put the Imports kind of
will we'll put the Imports kind of
obnoxiously like we had
obnoxiously like we had
before Oh this is why why I did this
before Oh this is why why I did this
before it's I know why I Define these as
before it's I know why I Define these as
locals right I did these as uh as locals
locals right I did these as uh as locals
before so that I wouldn't have to screw
before so that I wouldn't have to screw
with the Imports so we'll just do it
with the Imports so we'll just do it
again like that it's
fine I mean this was this is a very I'm
fine I mean this was this is a very I'm
fine doing it this way because this is a
fine doing it this way because this is a
temporary issue um because when Wy adds
temporary issue um because when Wy adds
us native
us native
support then we will uh we won't have to
support then we will uh we won't have to
do this anymore and like we'll literally
do this anymore and like we'll literally
just be able to delete all this and this
just be able to delete all this and this
code will just be part of uh the other
code will just be part of uh the other
sweeps config which will be very
sweeps config which will be very
nice I have numpy in here already
nice I have numpy in here already
no numpy
no numpy
sis I guess I don't have
sis I guess I don't have
CIS okay
uh I guess we have to start doing like
uh I guess we have to start doing like
this gross debugging where we
this gross debugging where we
do does it sweep
carbs with a dash I do like this new
carbs with a dash I do like this new
menu that we have here like this is
menu that we have here like this is
Pretty Simple and Clean we just get like
Pretty Simple and Clean we just get like
this very easy usage
this very easy usage
error no module named carbs
error no module named carbs
enough carbs on
enough carbs on
this h
oops
nope carbs is missing
nope carbs is missing
one positional ARG
one positional ARG
really M name make M policy
really M name make M policy
class AR M name U
class AR M name U
make and policy class yeah just to
make and policy class yeah just to
update the
update the
signature we also don't need this import
anymore key error n
uh we're you going to just
do hey another scon question have you
do hey another scon question have you
found any bottlenecks or on using scon
found any bottlenecks or on using scon
for simulation when it's relying on a
for simulation when it's relying on a
Model maybe a pie torch or X GB for
prediction that question seems kind of
prediction that question seems kind of
backwards to me
backwards to me
so the way I think about it right is
so the way I think about it right is
like you make your your sim is in scyon
like you make your your sim is in scyon
it's not relying on a prediction it's
it's not relying on a prediction it's
the other way around right like your
the other way around right like your
environment is supplying data to your
environment is supplying data to your
model which is then returning actions
model which is then returning actions
and the actions are used to update the
and the actions are used to update the
environment and return new observations
environment and return new observations
so if your model is slow it is
so if your model is slow it is
essentially doesn't matter how fast your
essentially doesn't matter how fast your
environment is because um you're always
environment is because um you're always
going to be bottlenecked on the GPU
going to be bottlenecked on the GPU
right so not every environment
right so not every environment
necessarily needs to be crazy fast um
necessarily needs to be crazy fast um
but the way I'm building stuff at the
but the way I'm building stuff at the
moment is I'm trying to build a test
moment is I'm trying to build a test
Suite of environments of a variety of
Suite of environments of a variety of
different complexities that are fast and
different complexities that are fast and
that can be trained with small models so
that can be trained with small models so
that we can iterate very quickly on the
that we can iterate very quickly on the
research side um um it also you'd be
research side um um it also you'd be
surprised how well small models can do
surprised how well small models can do
when you just have tons of data right
when you just have tons of data right
like if I'm training at a million steps
like if I'm training at a million steps
per second I kind of just have so much
per second I kind of just have so much
data
data
that it doesn't really matter how much
that it doesn't really matter how much
I'm losing out by having a slightly you
I'm losing out by having a slightly you
know smaller model and actually the
know smaller model and actually the
models like you can get up to you can
models like you can get up to you can
get kind of reasonable siiz stuff that
get kind of reasonable siiz stuff that
still runs hundreds of thousands of
still runs hundreds of thousands of
steps per second at the very least maybe
steps per second at the very least maybe
not million like I use for the really
not million like I use for the really
simple M's but hundreds of thousands is
simple M's but hundreds of thousands is
very achievable like 300,000 maybe on
very achievable like 300,000 maybe on
one
one
GPU uh also this is going to scale
GPU uh also this is going to scale
really well for
really well for
multi-gpu because like let's say I have
multi-gpu because like let's say I have
a box with 8800s or 800s on it and you
a box with 8800s or 800s on it and you
only have the CPU cores that are on that
only have the CPU cores that are on that
machine right well if I make the
machine right well if I make the
environment like 14 million steps per
environment like 14 million steps per
second per core then the cores on the
second per core then the cores on the
machine are going to be able to provide
machine are going to be able to provide
data to those gpus that you don't need
data to those gpus that you don't need
to go off
to go off
device so there are a lot of advantages
device so there are a lot of advantages
to
that
oops that's just a bad
import
mhm
for for
I guess I didn't add Enver policy to the
I guess I didn't add Enver policy to the
new sweep configs yet which is fine
new sweep configs yet which is fine
we'll just do this we'll just do these
we'll just do this we'll just do these
ones for now
he error men
H oh well I have different distributions
H oh well I have different distributions
now that I have to support
now that I have to support
right that's annoying
that might be enough
I don't know who made the Izzy cookies
I don't know who made the Izzy cookies
today but they're really
good
good
oh duh
probably shouldn't use function names as
probably shouldn't use function names as
uh also variable names right huh
looks
good
good
assert M Max
really what parameter is freaking
logit
gamma wait
what gamma's logic right
oh I guess I did specify that weird
huh yeah so we'll we'll edit the config
huh yeah so we'll we'll edit the config
for that we've been meaning to do that
anyways so gamma is
right wait no gamma is
right wait no gamma is
fine I guess it's probably in Ocean
fine I guess it's probably in Ocean
right config ocean grid
oh no I don't have gamma I don't have a
oh no I don't have gamma I don't have a
screw gamma value in
here that's
here that's
weird what's going on
I swear this chocolate chip cookie has
I swear this chocolate chip cookie has
coffee grounds in it
gamma this is totally fine
gamma this is totally fine
right it's got a Min it's got a Max
why is this not work
why is this not work
right it should be totally
fine Ma Max is none for some reason
oh just a
typo and how far do we get
now
H that's pretty good
H that's pretty good
I mean it fails
I mean it fails
but it fails
but it fails
for a very easy and fixable thing
right let's see if this runs
dict has no attribute
train let's see if I can see where that
train let's see if I can see where that
error is
it's probably underneath uh here
right
so right
here when I try to save
here when I try to save
it right
ARS of n.
dict policy
dict policy
RNN very
nice now this closest power
nice now this closest power
function I think I already moved this
function I think I already moved this
didn't I
yeah I have the closest power here we
yeah I have the closest power here we
can get rid of
these let's see if this now
runs e
what
what
failed no such file or
failed no such file or
directory well we should uh we should
directory well we should uh we should
change that
if you open a file as
a I think that should be better right
we'll see if this saves the hyper
we'll see if this saves the hyper
parameters to that
file no suchar file or
directory okay what is uh
directory okay what is uh
well that's
weird we have hypers in here
right yeah we've got two different runs
right yeah we've got two different runs
worth of hypers in
worth of hypers in
here so what is the file or directory
here so what is the file or directory
that does not
that does not
exist I don't actually
exist I don't actually
know oh it's the carbs one right
yeah yeah yeah the carbs one has like
um let's
do I think it's checkpoints
do I think it's checkpoints
right so
oops points
this doesn't need to be in the sub
this doesn't need to be in the sub
process right we can
do I mean we can do this at the top even
do I mean we can do this at the top even
can't
we yeah let's do that there and actually
we yeah let's do that there and actually
the
the
hypers text let's do that at the top as
hypers text let's do that at the top as
well
well
well just like the less stuff that goes
well just like the less stuff that goes
in stupid sub processes right the
in stupid sub processes right the
better General roll of thumb but as
better General roll of thumb but as
little as possible inside of
little as possible inside of
subprocesses unless you have a reason to
subprocesses unless you have a reason to
do
so now can we maybe get a complete
run yeah let's make this really good
run yeah let's make this really good
today let's make like this carbs
today let's make like this carbs
integration really
solid okay so right
there success no errors
synced and that's the next one
synced and that's the next one
perfect so no
perfect so no
errors um I actually think we're going
errors um I actually think we're going
to
to
do yeah this is fine
so now that we have this we can think
so now that we have this we can think
about what parameters we want to have
about what parameters we want to have
integrated and how nice we want to have
integrated and how nice we want to have
everything uh
everything uh
functioning there a few different things
functioning there a few different things
I would like to have working
I would like to have working
here uh the big one would be if I can
here uh the big one would be if I can
get these
get these
charts to be
correct so if we look at this run count
correct so if we look at this run count
here
and like we look at the most
recent hyper prams
recent hyper prams
right we can see that we
get update EPO equal to
get update EPO equal to
two could be either of
two could be either of
these 8192 mini batch is that
these 8192 mini batch is that
here no so there's no 8192 mini B so
here no so there's no 8192 mini B so
what's happening here
what's happening here
is wandb is not uh actually taking the
is wandb is not uh actually taking the
carb suggested parameters and updating
carb suggested parameters and updating
the graphs with them be really nice if
the graphs with them be really nice if
we could get accurate graphs at least
we could get accurate graphs at least
this one the other ones like this one
this one the other ones like this one
will be correct and these two will not
will be correct and these two will not
be so we'll figure that out real
be so we'll figure that out real
quick anything cool Happening
quick anything cool Happening
Here
Here
nah this is going nicely though
so where can we uh where should we look
so where can we uh where should we look
for
for
this I think that we would look at
this I think that we would look at
updating the wand B
updating the wand B
pams
yeah so
the issue is that right here we knit
the issue is that right here we knit
wand B right and then we get the carb
suggestions I can't understand anything
suggestions I can't understand anything
but best of luck to you your way I mean
but best of luck to you your way I mean
this is what I'm doing here is just dumb
this is what I'm doing here is just dumb
systems Integrations
systems Integrations
um there's really
um there's really
nothing smart going on this is just
nothing smart going on this is just
having spent a bunch of time hacking on
having spent a bunch of time hacking on
this specific annoying
this specific annoying
API so what I'm trying to do
API so what I'm trying to do
here high
here high
level um I am trying to get it so that
level um I am trying to get it so that
you can run lots of different
you can run lots of different
experiments uh one after another and get
experiments uh one after another and get
graphs that tell you how those various
graphs that tell you how those various
experiments have gone and kind of do
experiments have gone and kind of do
automatic analysis for you so that you
automatic analysis for you so that you
can find the best experiment settings
can find the best experiment settings
for training so I have this stack that
for training so I have this stack that
gives you really really fast simulation
gives you really really fast simulation
really really fast training but I still
really really fast training but I still
need the thing to manage all these
need the thing to manage all these
experiments and launch them and give you
experiments and launch them and give you
those results so I have that working
those results so I have that working
already but there's a better system for
already but there's a better system for
running all those experiments that I'm
running all those experiments that I'm
trying to integrate called carbs and the
trying to integrate called carbs and the
difficulty is it is not natively uh
difficulty is it is not natively uh
compatible with w be which is the
compatible with w be which is the
logging and graphing software that
logging and graphing software that
everybody
everybody
uses um and I'm currently trying to get
uses um and I'm currently trying to get
it so that I can get the data from this
it so that I can get the data from this
experiment running algorithm into w b
experiment running algorithm into w b
that is what I'm trying to do which is
that is what I'm trying to do which is
kind of boring if you think about it but
kind of boring if you think about it but
it's important because if I get this
it's important because if I get this
working it's going to make it really
working it's going to make it really
easy to run all these experiments for
easy to run all these experiments for
people
so the thing is it looks like right here
so the thing is it looks like right here
it looks like this should
work this one beat ig.
Trin wb.
Trin wb.
aent let me see if I can
find maybe I can just go find their
find maybe I can just go find their
source is wanb on GitHub
yeah so this is their code for this
yeah so this is their code for this
takes a sweep ID a project and a bunch
takes a sweep ID a project and a bunch
of other
of other
stuff uh it starts this
Q it's got a bunch of API
Shenanigans par sweep by day
jeez o it's
jeez o it's
python yeah I mean pretty much
python yeah I mean pretty much
everything has a top layer in Python
everything has a top layer in Python
these days
these days
right it's kind of no reason not to it's
right it's kind of no reason not to it's
easy you can have your perf critical
easy you can have your perf critical
stuff being something
stuff being something
else the puffer stack is python Plus
else the puffer stack is python Plus
scon scon for perf critical and python
scon scon for perf critical and python
for the normal
stuff as simple as that is it gives you
stuff as simple as that is it gives you
C
speed I'd really like to know how they
speed I'd really like to know how they
set their
set their
parameters so cuz I call this wb. aent
parameters so cuz I call this wb. aent
function which I assume makes
function which I assume makes
this agent right
here well if I look at the underscore
here well if I look at the underscore
net I bet it'll be in here
right
agent they have agent in here
uh from wb. WB agent import
uh from wb. WB agent import
agent so
WB agent oh okay so it's here this is
WB agent oh okay so it's here this is
not what I was expecting
not what I was expecting
um so this is slightly different code so
um so this is slightly different code so
here we have the agent
here we have the agent
class self API Q
sweep
sweep
ID wait
ID wait
API Q sweep ID function okay so this is
API Q sweep ID function okay so this is
the function that you pass to
the function that you pass to
it
um is
flapping
flapping
uh okay
sweep
sweep
ID registers this
Agent
Man there a lot of stuff in
here can I just figure out how they set
here can I just figure out how they set
the config for
the config for
this save config file from d
this save config file from d
but this is just saving to file I want
but this is just saving to file I want
to see where they upload it to the
API agent
API run agent
is there just like a way to hard update
is there just like a way to hard update
the config of a w b
the config of a w b
run
like I know is that a
thing uh oh
really well I have a it's a current
run wb. config makes it easy to analyze
run wb. config makes it easy to analyze
your
your
experiments so set up set configuration
experiments so set up set configuration
at
at
initialization set config with
initialization set config with
arars set configuration throughout your
arars set configuration throughout your
script
according to this you're supposed to be
according to this you're supposed to be
able to update your
config so according to this you are
config so according to this you are
actually supposed to be able to do
this can overwrite
automatically I think this says that
automatically I think this says that
you're supposed to be able to do it
is it possible that they
like hold
on web.config dotra is equal to mini
on web.config dotra is equal to mini
batch
size
4192 it doesn't look like it's
4192 it doesn't look like it's
updating let me just clear this file
out and let me just run this one more
out and let me just run this one more
time just to make
time just to make
sure that this is not updating like the
sure that this is not updating like the
way I think it should be
and yeah that's
and yeah that's
it so if I open up hypers do text I can
it so if I open up hypers do text I can
see what it should it's supposed to
be uh sweeps
what why did this not initialize me a
what why did this not initialize me a
sweep am I capped on data or something
sweep am I capped on data or something
no oh because I see I need to be in the
no oh because I see I need to be in the
carbs repo yeah uh so here we have
carbs repo yeah uh so here we have
sweeps one minute
ago
ago
and this is the first one right here
and this is the first one right here
that saved the conf
that saved the conf
configuration so let's see if this looks
configuration so let's see if this looks
good uh we have batch size of
good uh we have batch size of
131k which is not what we see
here we have mini batch size of
here we have mini batch size of
8192 which is not what we see here okay
8192 which is not what we see here okay
so something is
so something is
weird if I open up this foraging run I
weird if I open up this foraging run I
have
there a lot of stuff in here actually
there a lot of stuff in here actually
all of a
all of a
sudden uh so base yeah this
is
huh
okay M doesn't have any Keys policy
okay M doesn't have any Keys policy
doesn't have any Keys sweep gets
doesn't have any Keys sweep gets
some keys
here yeah and then we can see here we
here yeah and then we can see here we
have the parameter keys right for our
have the parameter keys right for our
sweep uh and then now we have
sweep uh and then now we have
train and inside of train we have
131k wait wait we
131k wait wait we
have train size is
where' this
go yeah
go yeah
131k mini batch size is
131k mini batch size is
wrong which is
8192 um update
8192 um update
EPO well well bptt Horizon is
EPO well well bptt Horizon is
8 which is not the same okay so this
8 which is not the same okay so this
does not seem to be getting up updated
does not seem to be getting up updated
correctly why would that be the
case in the case of mini batch size
case in the case of mini batch size
right I see it right
here W.C config is closest
power and then what do I I do args of
power and then what do I I do args of
train
oh wait maybe that's the wrong thing
oh wait maybe that's the wrong thing
right wait args of train.
right wait args of train.
update
update
w.on config
w.on config
dotra so I'm actually setting the train
dotra so I'm actually setting the train
deck to be the same as all the stuff I
deck to be the same as all the stuff I
just set this
to so it's just not synchronizing
let's see how they say that you can do
this set configuration throughout your
this set configuration throughout your
SHP okay so they
SHP okay so they
say they say you don't even need to do
say they say you don't even need to do
run. config they say it's just wb.
run. config they say it's just wb.
config
here M.C config do
here M.C config do
update and they use update as well which
update and they use update as well which
is the same way that I did it they say
is the same way that I did it they say
you can either do individual elements or
you can either do individual elements or
yeah so according to them this is
yeah so according to them this is
supposed to
work why doesn't
work why doesn't
it
um 1 b equals init wand B let me make
um 1 b equals init wand B let me make
sure init yeah init w b just
sure init yeah init w b just
returns w
b what if I wait wait wait what if I cuz
b what if I wait wait wait what if I cuz
what if I kill this does this change
what if I kill this does this change
anything if I don't have it reimported
anything if I don't have it reimported
in the sub
in the sub
process maybe it's something weird like
process maybe it's something weird like
that
long shot but we're going to try
long shot but we're going to try
it it'd be so nice to have these graphs
it it'd be so nice to have these graphs
working
sync forging run
okay so what we have here we have our
hypers
hypers
uh if we check out our latest
uh if we check out our latest
sweep there's a small chance that it's
sweep there's a small chance that it's
now correct
okay
okay
so according to this we
so according to this we
have batch size of 131k which is not on
here wait what why does this go
here wait what why does this go
60,000
wait
wait
huh what is this AIS
excuse
excuse
me wait 20, 4,000
z
z
uh oh it's truncating the Damned
uh oh it's truncating the Damned
axis
axis
okay so what does this say this
okay so what does this say this
says train batch size
is 131k what did I say it
is 131k what did I say it
was 13 so neither of these are
was 13 so neither of these are
131k and then the mini batch size there
131k and then the mini batch size there
is one that's
is one that's
8,000 uh BPT Horizon
8,000 uh BPT Horizon
of8 where is that there is one that's
of8 where is that there is one that's
eight here
wait but there's the wrong the other
wait but there's the wrong the other
stuff is wrong
stuff is wrong
right Max grad
right Max grad
Norm yeah is off so all these prams are
Norm yeah is off so all these prams are
not what they're supposed to be let's
not what they're supposed to be let's
see and the batch size specifically is
see and the batch size specifically is
the giveaway because that should have
the giveaway because that should have
been updated
manually but I have suggestion uu ID in
manually but I have suggestion uu ID in
here here
here here
wait how is suggestion YuYu
wait how is suggestion YuYu
ID oh because it's it's just in the uh
ID oh because it's it's just in the uh
the hypers here it's not in uh wanb
the hypers here it's not in uh wanb
right I check foraging here and
overview yeah
overview yeah
260 same as
before Max Norma 4 is wrong because I
before Max Norma 4 is wrong because I
have much lower Max gra yes so this is
have much lower Max gra yes so this is
not getting updated
not getting updated
whatsoever
um it's going to be easier to tell if I
um it's going to be easier to tell if I
can just add an extra key
right let's try that
right let's try that
next let's just like add like
next let's just like add like
uh
uh
wb. config
wb. config
Trin uh
Trin uh
Fu equals
Fu equals
bar okay and let's see if that does
bar okay and let's see if that does
anything you know maybe there's some
anything you know maybe there's some
weird some weird thing about modifying
weird some weird thing about modifying
existing parameters
failed
what are we dropping frames
what are we dropping frames
no zero dropped
frames
okay I just saw it get logged
if we check
if we check
train yeah that key is not
present
um so that's very odd that that key is
um so that's very odd that that key is
not
present right yeah
modify locks the
configuration let me
see when you initiate a sweep wanb locks
see when you initiate a sweep wanb locks
the config parameters that are being
the config parameters that are being
swept over to ensure consistency across
swept over to ensure consistency across
runs you cannot update the values of
runs you cannot update the values of
these
these
parameters
ah overriding a parameter could be
weird nested configs you want to sweep
weird nested configs you want to sweep
over one
over one
parameter vents you from updating the
parameter vents you from updating the
fields under
H yeah so this does not uh apparently
H yeah so this does not uh apparently
this never
this never
happened
happened
or actually let me just try to update
or actually let me just try to update
wand
B if I use their latest version let's
B if I use their latest version let's
see if that parameter shows up
see if that parameter shows up
because maybe they did
because maybe they did
it welcome fruit punch Samurai
welcome we are attempting to fix sweeps
welcome we are attempting to fix sweeps
today so that I can run some cool
experiments and wandb is not cooperating
experiments and wandb is not cooperating
now the thing I'm doing is not mandatory
now the thing I'm doing is not mandatory
so if it doesn't if this does not solve
so if it doesn't if this does not solve
it I'm probably just going to like check
it I'm probably just going to like check
a couple posts and then like I don't
a couple posts and then like I don't
know bump something and stop and like
know bump something and stop and like
just work around it for now um but it
just work around it for now um but it
would be very very nice to
have yeah would definitely be very
nice so we've got this forging one
right okay well this is different 29
right okay well this is different 29
keys
so wait this gave us something very
so wait this gave us something very
different didn't
it wait what
forging
sweep yeah this gave us something very
sweep yeah this gave us something very
different but I we still don't have the
different but I we still don't have the
parameter that we wanted in
parameter that we wanted in
here um
so I tried to like insert a parameter
so I tried to like insert a parameter
here to see if I could and it does not
here to see if I could and it does not
appear to work though it's interesting
appear to work though it's interesting
that I got all this additional
stuff I mean this is NI a nice
stuff I mean this is NI a nice
setup but it's still not what we
want let me see if there's uh
want let me see if there's uh
can we change the sweep
configuration were you always into RL
configuration were you always into RL
did you migrate through exploring other
did you migrate through exploring other
Stacks I started in natural language
Stacks I started in natural language
processing for a year then I did
processing for a year then I did
computer vision for a year and then I've
computer vision for a year and then I've
done RL for the last seven or
eight well yeah started in other areas
eight well yeah started in other areas
of
of
ml that were much
ml that were much
easier this is
hard
hard
ooh that's
promising this is promising right here
commented on Mesa I don't even know if
commented on Mesa I don't even know if
the API still supports
the API still supports
this but if I can do this then this will
this but if I can do this then this will
solve the
problem
so Val change is
true and then we
true and then we
do wb. config do
dict I need the underscore on this as
well I have no idea if this will even
well I have no idea if this will even
work config do
update um
Argus of
train okay I think that the way you do
train okay I think that the way you do
this we do args of train. update
this we do args of train. update
suggestion and then we do args train.
suggestion and then we do args train.
batch
batch
size like this so we we make the closest
size like this so we we make the closest
power ones in here is this part of the
power ones in here is this part of the
continuous control you're working on in
continuous control you're working on in
the previous streams okay so I can give
the previous streams okay so I can give
you a quick update on this um kind of so
you a quick update on this um kind of so
uh yesterday no uh Saturday when I do my
uh yesterday no uh Saturday when I do my
solo Dev I ran some experiments for some
solo Dev I ran some experiments for some
other projects I ran some experiments
other projects I ran some experiments
for continuous control I got some sweeps
done well not I got some runs done at
done well not I got some runs done at
the very least I'll show you
the very least I'll show you
those
those
uh oh wait yeah they're visualized right
uh oh wait yeah they're visualized right
here so we have runs here one billion
here so we have runs here one billion
step runs for puffer group Predator prey
step runs for puffer group Predator prey
and forging uh the policies for these
and forging uh the policies for these
look okay and now I want to be able to
look okay and now I want to be able to
run like really good quality sweeps on
run like really good quality sweeps on
these so I'm going to fix up carbs hyper
these so I'm going to fix up carbs hyper
parameter sweep algorithm to work with
parameter sweep algorithm to work with
this uh the other thing I did over the
this uh the other thing I did over the
weekend that I didn't quite finished
weekend that I didn't quite finished
because some rather distracting National
because some rather distracting National
things might have happened on
things might have happened on
Sunday um was the new configuration
Sunday um was the new configuration
system which I'm interested to see if
system which I'm interested to see if
you and
you and
other folks like I'm tried to make it
other folks like I'm tried to make it
way easier to
way easier to
use the um the config system for puffer
use the um the config system for puffer
and make it way more intuitive so I
and make it way more intuitive so I
managed to cut like a 100 lines of code
managed to cut like a 100 lines of code
out of the demo file and I changed the
out of the demo file and I changed the
yaml files to any files
yaml files to any files
which are a little bit simpler
which are a little bit simpler
um we will see whether it ends up being
um we will see whether it ends up being
good or
good or
not but yeah now I'm updating the carb
not but yeah now I'm updating the carb
sweep thing to work with that so we can
sweep thing to work with that so we can
get these experiments running
now okay so this is updating AR's
train AR we're going to add Fu as well
train AR we're going to add Fu as well
just because it'll be easy to tell if we
just because it'll be easy to tell if we
have successfully done it and then we do
have successfully done it and then we do
WB pig. train update
WB pig. train update
arit
arit
train and then we're going to do allow
train and then we're going to do allow
Val change equals
true
that okay let's see if this actually
that okay let's see if this actually
works now
unexpected keyword allow vow
change maybe they just renamed
it wanie gave me
it wanie gave me
yeah it Wan B is good but like it's kind
yeah it Wan B is good but like it's kind
of like where puffer is where like they
of like where puffer is where like they
need better error handling and
need better error handling and
validation so that users don't get a
validation so that users don't get a
stuck for as long um you know admittedly
stuck for as long um you know admittedly
puffers had way fewer resources so
puffers had way fewer resources so
hopefully I'd like them to have this
hopefully I'd like them to have this
solved by now but they're still doing
solved by now but they're still doing
very
good Wan's just gotten very large very
good Wan's just gotten very large very
fast which is always hard right
so we're looking at the WB Source now
so we're looking at the WB Source now
looking for where their init function is
looking for where their init function is
so I so I can if I see it can have so I
so I so I can if I see it can have so I
can hack it
I'll be applying to Ms starting out in
I'll be applying to Ms starting out in
NLP as well hopefully get to do more
NLP as well hopefully get to do more
research in RL down the line yeah RL is
research in RL down the line yeah RL is
fun um the nice thing with RL like so
fun um the nice thing with RL like so
when I started an NLP Transformers
when I started an NLP Transformers
didn't
didn't
exist and you could get soda on small
exist and you could get soda on small
data sets with like one
data sets with like one
GPU um so that was kind of
GPU um so that was kind of
nice NLP is such a pain in the ass these
nice NLP is such a pain in the ass these
days because
days because
like you just need so many
like you just need so many
resources
resources
um yeah it's
rough wb.
SDK wait where's WB SDK WB import SDK as
SDK wait where's WB SDK WB import SDK as
at WB SDK
okay W be in it Import in
okay W be in it Import in
it ah giant
pile okay so here
pile okay so here
is this is
insane uh I see AOW
change in it w
change in it w
b got oh I'm stupid this why I am stupid
actually there's no reason you would
actually there's no reason you would
ever want this to be
false this is like what this is this is
false this is like what this is this is
a case of uh shooting yourself in the
a case of uh shooting yourself in the
foot or shooting your user in the foot
foot or shooting your user in the foot
to prevent them from shooting thems in
to prevent them from shooting thems in
the foot that's what that
is so they shot me in the foot to
is so they shot me in the foot to
prevent me from shooting in the foot
prevent me from shooting in the foot
this is neovim you're looking at
it I used
it I used
um I used like pling no plugins Vim for
um I used like pling no plugins Vim for
like seven years
what learning
what learning
curve there's no learning
curve there's no learning
curve there's like this tutor thing and
curve there's like this tutor thing and
you do this for 10 minutes and then you
you do this for 10 minutes and then you
know how to use
know how to use
Vim you don't have to know a million
Vim you don't have to know a million
shortcuts there's like I don't know a
shortcuts there's like I don't know a
dozen that you actually maybe use very
often there's a if you want to try it
often there's a if you want to try it
out there's a Vim bindings plugin for
out there's a Vim bindings plugin for
VSS code
okay let's see if this gives us uh what
okay let's see if this gives us uh what
we
we
want main thing is to stop clicking the
want main thing is to stop clicking the
damn Mouse for everything
BR where is
BR where is
my where's my new hyper
my where's my new hyper
parameter you should be
parameter you should be
here what the
here what the
hell where's my
hell where's my
hyper ought to be
hyper ought to be
here maybe it didn't get updated
yet sweep
no it's just not here there should be a
foo oh did I mess something
foo oh did I mess something
up no that's just a carbs thing that's
up no that's just a carbs thing that's
fine uh this should be fine though like
fine uh this should be fine though like
what what is wrong with this come
what what is wrong with this come
on allow Val change
it should 100% be there
right
right
maybe do I have to do
maybe do I have to do
this cuz technically I imported wanb
this cuz technically I imported wanb
here
maybe this solves
maybe this solves
it I say 20% chance this solves it
nope 29
parameters it's so
disappointing unless maybe they change
disappointing unless maybe they change
the lock parameter
new
backend config do
backend config do
locked allow Val
change this allow Val change thing
documented allow whether to allow config
documented allow whether to allow config
values to change after setting the key
once if you want to track something like
once if you want to track something like
a varying learning rate use
log
uh what
one being it set
up what's the exact area I'll try to
up what's the exact area I'll try to
find something as well this is kind of
find something as well this is kind of
tricky so I'm just what I'm trying to do
tricky so I'm just what I'm trying to do
is I'm trying to update config
is I'm trying to update config
parameters in W be after it's been
parameters in W be after it's been
initialized inside of a sweep and it's
initialized inside of a sweep and it's
not like it's throwing me it's just not
not like it's throwing me it's just not
letting me do it it's like it's not
letting me do it it's like it's not
failing it's just not updating the
failing it's just not updating the
parameter like I'll do wb.
parameter like I'll do wb.
config.py I found the the bug here um
config.py I found the the bug here um
can we change after updating a sweep and
can we change after updating a sweep and
somebody has this workaround but I can't
somebody has this workaround but I can't
tell if it's working it doesn't appear
tell if it's working it doesn't appear
to be working for me
M.C
config
maybe maybe they change the name and I
maybe maybe they change the name and I
can find it
here it's a preinit object so I need to
here it's a preinit object so I need to
have it enited first which is
noxious where the freck is one.
config long one B turn
more what if I just like look up lck
more what if I just like look up lck
inside
inside
of lock
update
update
locked shallow
update self doore
update
update
okay ignore locked equals none
if self doore check
locked
sanitize sanitize dick
instance so much
code is there just like an update
code is there just like an update
unlocked or some
here can I do that
there's got to be a function right
there's got to be a function right
update
update
locked merge
locked I don't have an update
unlocked
unlocked
um wait self.
um wait self.
uncore locked self. uncore
items right so
items right so
do they have do they have underscore
do they have do they have underscore
underscore methods set
underscore methods set
item if check locked of key
return
return
yeah not ignore locked
H check
H check
locked so I see this underscore locked
locked so I see this underscore locked
here
yeah this thing should
yeah this thing should
work update locked self
sanitize keys
well they do have set item
well they do have set item
right so I have one one additional thing
right so I have one one additional thing
I can
do WB configs are immutable the moment
do WB configs are immutable the moment
the Run begins
the Run begins
right so if you change the config once
right so if you change the config once
the run is already started it wouldn't
the run is already started it wouldn't
work does this
work does this
help
help
um well yeah but I'm trying to figure
um well yeah but I'm trying to figure
out how to get around that and they're
out how to get around that and they're
not immutable like look they have update
methods underscore callback
set call back okay I think I know how to
set call back okay I think I know how to
do this I think I have an
do this I think I have an
idea uh I think what I'm going to
idea uh I think what I'm going to
do data equals self doore
do data equals self doore
update
update
ah okay so what we're g to do
ah okay so what we're g to do
is and this is the last thing I'm going
is and this is the last thing I'm going
to try
W.C
W.C
config
config
items.
dict uh
dot update so this is going to
dot update so this is going to
go so this is wb. config
go so this is wb. config
. train doore
. train doore
items. dick.
items. dick.
update args of
update args of
train and then we're going to
train and then we're going to
Doc config dot Trin do
Doc config dot Trin do
hallback
equals
equals
train what are you trying to do I'm
train what are you trying to do I'm
trying to get wanb to let me freaking
trying to get wanb to let me freaking
update arguments when I pass it to a
update arguments when I pass it to a
sweep so that uh I can integrate this
sweep so that uh I can integrate this
new hyperparameter tuning algorithm and
new hyperparameter tuning algorithm and
get like reasonable curves I think I
get like reasonable curves I think I
might have figured it out this is the
might have figured it out this is the
last thing I'm going to try though
last thing I'm going to try though
because this is incredibly boring and uh
because this is incredibly boring and uh
hopefully Wan B will just fix it and if
hopefully Wan B will just fix it and if
this doesn't work uh then I'm just going
this doesn't work uh then I'm just going
to like you know move on and we'll do
to like you know move on and we'll do
other stuff
dict has no attribute underscore items
dict has no attribute underscore items
hold
on Dick
object
object
oh oh I think I know what's
oh oh I think I know what's
wrong um
yeah okay they just didn't handle nested
yeah okay they just didn't handle nested
dicks is all I think cuz this train is a
dicks is all I think cuz this train is a
dick yeah
dick yeah
so I think that the way that you do this
so I think that the way that you do this
is actually wb. config do
is actually wb. config do
update um you do train
train args of train and then allow V
train args of train and then allow V
changes
true I think that does it right
true I think that does it right
because yeah I think it just wasn't
because yeah I think it just wasn't
triggering the update it wasn't telling
triggering the update it wasn't telling
the CLI that it's been updated because I
the CLI that it's been updated because I
was updating a dictionary not a config
was updating a dictionary not a config
object and that would make sense why I
object and that would make sense why I
wasn't getting any errors or anything as
wasn't getting any errors or anything as
well
let's
let's
see so you get the
see so you get the
suggestion it runs the
suggestion it runs the
experiment so that's good let's
experiment so that's good let's
see let's see if it does
it and then if this works then we'll be
it and then if this works then we'll be
able to get good sweeps and we'll be
able to get good sweeps and we'll be
able to run like a 100 billion steps
able to run like a 100 billion steps
worth of experiments on all our MS and
worth of experiments on all our MS and
whatever and we'll get cool sweeps it'll
whatever and we'll get cool sweeps it'll
be awesome
Keys yes yes okay our test worked we got
Keys yes yes okay our test worked we got
it we actually got it uh that was so
it we actually got it uh that was so
stupid that that has like that weird
stupid that that has like that weird
lock on it that this doesn't matter this
lock on it that this doesn't matter this
parito doesn't matter uh we got
it I hate having to debug stuff like
it I hate having to debug stuff like
that it's so obnox I but we got it okay
that it's so obnox I but we got it okay
so look how stupid this solution is we
so look how stupid this solution is we
had to we had to init wand B with like
had to we had to init wand B with like
this special like hey uh we don't want
this special like hey uh we don't want
you to shoot yourself in the foot so
you to shoot yourself in the foot so
we're going to shoot your foot before
we're going to shoot your foot before
you can do it yourself okay and then
you can do it yourself okay and then
what we had to do is that wasn't enough
what we had to do is that wasn't enough
you had to delete this like underscore
you had to delete this like underscore
locked weird
locked weird
property in W be and then you had to
property in W be and then you had to
update with this allow Val changes true
update with this allow Val changes true
okay got it now this is really good
okay got it now this is really good
because what this means
because what this means
is I had this obnoxious thing where like
is I had this obnoxious thing where like
we would run these awesome hyper pram
we would run these awesome hyper pram
sweeps let me find
one okay like here's a hyper pram sweep
one okay like here's a hyper pram sweep
of a hundred things with snake
of a hundred things with snake
right so huge hyper pram sweep and we
right so huge hyper pram sweep and we
can't this is garbage like you can't
can't this is garbage like you can't
tell anything from this because these
tell anything from this because these
are the hyper parameters from wandb not
are the hyper parameters from wandb not
the hyper parameters from carbs so this
the hyper parameters from carbs so this
is random noise so now this graph will
is random noise so now this graph will
be meaningful and we'll actually be able
be meaningful and we'll actually be able
to and this will be meaningful as well
to and this will be meaningful as well
so we'll actually be able to tell which
so we'll actually be able to tell which
hyper parameters matter which is
perfect now the question is how crazy we
perfect now the question is how crazy we
want to go right um
want to go right um
um how much we want to invest in the
um how much we want to invest in the
sweep I think this is kind of at a good
sweep I think this is kind of at a good
spot where we can run
spot where we can run
something let's run like what's one of
something let's run like what's one of
these that I think is going to do really
these that I think is going to do really
well with a hyper parameter sweep
right we go back to
puffer I think that this group task has
puffer I think that this group task has
a lot of
potential right so I think what we're
potential right so I think what we're
going to do is we're going to run carbs
going to do is we're going to run carbs
on the group task with a base experiment
on the group task with a base experiment
length of 500 million
steps let's do that
um I'm trying to think how I want to set
um I'm trying to think how I want to set
it
it
up total time steps
log so
log so
yeah all I have to do is set Min and Max
here okay so for total time steps we set
here okay so for total time steps we set
WB params right and then we set search
WB params right and then we set search
center is integer and we go M
center is integer and we go M
Min is going to be 500 million and then
Min is going to be 500 million and then
ma Max and actually we're going to do
ma Max and actually we're going to do
500 million here so it's at the low end
500 million here so it's at the low end
and then ma Max
and then ma Max
equals 10 billion step
equals 10 billion step
s that sounds cool uh this might be kind
s that sounds cool uh this might be kind
of aggressive
of aggressive
but you know we'll
but you know we'll
see uh and now we're going to commit all
see uh and now we're going to commit all
this stuff
this stuff
up clean paparel no we don't need that
up clean paparel no we don't need that
we need uh config defaults any we need
we need uh config defaults any we need
demo need uh yeah that's it
fix carb
sweep and then we're going to go grab
sweep and then we're going to go grab
ourselves a puffer
ourselves a puffer
box which do I have a puffer box
box which do I have a puffer box
somewhere that I can
use uh I have puffer box one available
puer box is uh one of our
puer box is uh one of our
servers it's got some nice stuff on
servers it's got some nice stuff on
it it's got this uh you know
it it's got this uh you know
humble uh if it shows up yeah humble
humble uh if it shows up yeah humble
little 4090 on
it uh I actually I'm going to leave this
it uh I actually I'm going to leave this
box alone for now I'm going to use
box alone for now I'm going to use
different
one with puffer box
zero get Ranch get
P stash
P
P
okay
okay
and think we do
and think we do
uh t-o
attach we do python demo and uh
attach we do python demo and uh
group mode sweep spe
multiprocessing let's see if this works
apparently
apparently
not looks like we have some minor stuff
not looks like we have some minor stuff
to
to
fix it's not accepting the time
fix it's not accepting the time
parameter
correctly carb prems total time step
that should have done it actually
right so what
right so what
happened oh I know what happened that's
happened oh I know what happened that's
that's silly
no I just did the wrong sweep
Pam so now we do sweep
carbs and we'll see what this gives
us and this should launch what will be a
us and this should launch what will be a
fairly long
fairly long
sweep a key error total time
sweep a key error total time
steps right so this is a legit
steps right so this is a legit
oversight carbs Pam
so I could
so I could
do I could just hard code it
right
right
suggest where is it Pam
suggest where is it Pam
spaces one be train
spaces one be train
prams train
prams train
prams total time
steps uh values
steps uh values
is that the
case h that's so messy let's just yeah
case h that's so messy let's just yeah
let's just add it back in for now to
let's just add it back in for now to
the The Sweep specs I think
oops where
oops where
did what
did what
happened oh
comma config ocean
comma config ocean
grid and we'll just add back or uh yeah
grid and we'll just add back or uh yeah
we'll just add the total time steps
we'll just add the total time steps
thing since that's what we're going to
thing since that's what we're going to
be using so sweep. parameter. total time
be using so sweep. parameter. total time
steps and we'll just do
um not values
um not values
distribution what what's the thing
distribution what what's the thing
from config defaults I
from config defaults I
wanted config
defaults yeah log uniform values is what
defaults yeah log uniform values is what
you
want so Min is going to be 500
want so Min is going to be 500
million Max is going to be 10
billion and we see if this works
perfect so this is now a 15minute
perfect so this is now a 15minute
experiment which means it's probably H
experiment which means it's probably H
you know a little less than a billion
you know a little less than a billion
time steps training it around a million
time steps training it around a million
steps per second this is on the slightly
steps per second this is on the slightly
slower
slower
box and it's returning
box and it's returning
rewards and this will run some
rewards and this will run some
experiments now I'm just now
experiments now I'm just now
realizing that I think I messed one
realizing that I think I messed one
other thing up
I want to have 100 experiments
I want to have 100 experiments
run and I might have set it to
10 nope it's set to
500 that's
500 that's
fine I think it can just chill on 500
fine I think it can just chill on 500
and uh I might not wait for it to finish
and uh I might not wait for it to finish
but uh that's totally fine so let's just
but uh that's totally fine so let's just
commit up these fixes
red uh update minor
fixes okay so now we have the
fixes okay so now we have the
experiments running well on the new
experiments running well on the new
environment with a proper hyper Prem
environment with a proper hyper Prem
sweep
sweep
uh and that will hopefully find us some
uh and that will hopefully find us some
cool
stuff we also have the new config system
stuff we also have the new config system
which is very
which is very
nice and we can do a bunch of stuff from
nice and we can do a bunch of stuff from
here
um there are a lot of directions I could
um there are a lot of directions I could
go from here honestly uh I do want to do
go from here honestly uh I do want to do
some stuff on
some stuff on
continuous we could probably do some
continuous we could probably do some
stuff on continuous
stuff on continuous
locally to see if we can get an idea of
locally to see if we can get an idea of
that there's still a little work to be
that there's still a little work to be
done on the config and uh sweeps
done on the config and uh sweeps
systems um and there's also I have some
systems um and there's also I have some
ideas behind running new Sims let
ideas behind running new Sims let
me give me a couple minutes here I'm
me give me a couple minutes here I'm
going to go use the restroom I'm going
going to go use the restroom I'm going
to go check and make sure uh one other
to go check and make sure uh one other
thing and then I will be right back and
thing and then I will be right back and
we will come up with some cool stuff to
we will come up with some cool stuff to
do from here
do from here
cuz that's kind of enough boring work
cuz that's kind of enough boring work
for the day right we'll come up with
for the day right we'll come up with
some fun
stuff
e e
okay
let me make sure I'm not missing
anything there was one thing that's like
anything there was one thing that's like
not really a standing meeting
okay so fun stuff
okay so fun stuff
um let me just go back through like the
um let me just go back through like the
plan of what I'm doing with puffer now
plan of what I'm doing with puffer now
and how far along everything is so I've
and how far along everything is so I've
got the side project that needs some
got the side project that needs some
work that has not announced yet um it's
work that has not announced yet um it's
almost done it just needs some
almost done it just needs some
experimental work um very very close
experimental work um very very close
there just a few things I'm not quite
there just a few things I'm not quite
fully happy
fully happy
with we've got the snake environment
with we've got the snake environment
that's done we've got these continuous
that's done we've got these continuous
control LS that maybe we need to turn
control LS that maybe we need to turn
tune the reward functions a little bit
tune the reward functions a little bit
but for the most part it's in a good
but for the most part it's in a good
spot and we just get to run experiments
spot and we just get to run experiments
on them now right we could always make a
on them now right we could always make a
fun fancy renderer for them we could
fun fancy renderer for them we could
like make that thing better but you know
like make that thing better but you know
we can do that whenever um that gives
we can do that whenever um that gives
us pretty decent range of environments
us pretty decent range of environments
for basic tests know we could always use
for basic tests know we could always use
more uh M's but decent enough
more uh M's but decent enough
environments for basic tests
environments for basic tests
um hyperparameter
um hyperparameter
sweeps are in a reasonable spot as well
sweeps are in a reasonable spot as well
we've got carbs integration uh it's
we've got carbs integration uh it's
pretty robust I've used it for a number
pretty robust I've used it for a number
of things already you know there are a
of things already you know there are a
few small things we can improve here and
few small things we can improve here and
there but we don't have to spend a bunch
there but we don't have to spend a bunch
of time on that you know it's really
of time on that you know it's really
boring to just like sit down and try to
boring to just like sit down and try to
improve carbs in integration or whatever
improve carbs in integration or whatever
it's way more fun to like do it as you
it's way more fun to like do it as you
need it for other projects and just run
need it for other projects and just run
experiments in the background right um
experiments in the background right um
so simulation
so simulation
compatibility uh hyper parameter sweeps
compatibility uh hyper parameter sweeps
these are all good uh the really the
these are all good uh the really the
most fun thing and I think the thing
most fun thing and I think the thing
that's coolest for people to see is
that's coolest for people to see is
building more High perf simulations for
building more High perf simulations for
reinforcement learning and that's what
reinforcement learning and that's what
I'd like to spend a lot more time doing
I'd like to spend a lot more time doing
uh it's it's fun it's high impact on the
uh it's it's fun it's high impact on the
field it's uh it's probably the best way
field it's uh it's probably the best way
to get more people into this stuff it
to get more people into this stuff it
does take some
does take some
time uh you know it took me a week for
time uh you know it took me a week for
the snake and I think I could build
the snake and I think I could build
something like that way faster
something like that way faster
now right but there's still some time so
now right but there's still some time so
there are a few different things we
there are a few different things we
could do in and around this project that
could do in and around this project that
would be interesting I'd like to get
would be interesting I'd like to get
people's feedback on this a little bit
people's feedback on this a little bit
as well though it's I don't want to
as well though it's I don't want to
start anything huge just yet as the is
start anything huge just yet as the is
the main thing like a project that I had
the main thing like a project that I had
in mind is building like a really strip
in mind is building like a really strip
down
down
MOA um as an RL environment and make it
MOA um as an RL environment and make it
run like millions of steps per second
run like millions of steps per second
I'm very confident that I can do that I
I'm very confident that I can do that I
don't know how long it will take and I
don't know how long it will take and I
don't want to do like a one Monon
don't want to do like a one Monon
project right because that already like
project right because that already like
that burns a huge amount of the summer
that burns a huge amount of the summer
and on one environment can't quite
and on one environment can't quite
justify doing that just yet I I already
justify doing that just yet I I already
have like a big Sim project on the side
have like a big Sim project on the side
um so that's tough
um so that's tough
I could do some slightly smaller scale
I could do some slightly smaller scale
environments that are still complex and
environments that are still complex and
interesting if people have ideas on it
interesting if people have ideas on it
uh I could work on better render front
uh I could work on better render front
ends for environments uh I could work on
ends for environments uh I could work on
you know some existing environments that
you know some existing environments that
could have some major optimizations lot
could have some major optimizations lot
of different stuff I could do um and
of different stuff I could do um and
then the goal is going to be on like
then the goal is going to be on like
whatever environments we build the goal
whatever environments we build the goal
is like build the environment you know
is like build the environment you know
get it set up run some basic tests and
get it set up run some basic tests and
then run a carb sweep to solve it
then run a carb sweep to solve it
um and just like have the whole
um and just like have the whole
experimental phase essentially be
experimental phase essentially be
automated by carbs that's the
automated by carbs that's the
goal
goal
so
so
this with this environment that I just
this with this environment that I just
added these environments we have now
added these environments we have now
basic support for continuous control so
basic support for continuous control so
we can do continuous controls type stuff
we can do continuous controls type stuff
so we can do physics stuff but we got to
so we can do physics stuff but we got to
be careful that because like whatever it
be careful that because like whatever it
is we're going to probably either be
is we're going to probably either be
using a really basic engine or having to
using a really basic engine or having to
ride our own which is
ride our own which is
tricky um so I and I don't have a ton of
tricky um so I and I don't have a ton of
experience with that either so we could
experience with that either so we could
try to write like a little robotics type
try to write like a little robotics type
Sim and make it really fast
Sim and make it really fast
um but I it would have to be like a
um but I it would have to be like a
pretty smly like small scoped thing um
pretty smly like small scoped thing um
we could try to write like a really good
we could try to write like a really good
renderer for some of this stuff though I
renderer for some of this stuff though I
don't know how useful that would be um
don't know how useful that would be um
yeah
H so many possibilities here so many
H so many possibilities here so many
ways we could go with
ways we could go with
this I've got it in my head that I
this I've got it in my head that I
really want to write like a little mini
really want to write like a little mini
MOBA but I know how hard that would
MOBA but I know how hard that would
be and I've been like thinking like well
be and I've been like thinking like well
would it really be that hard is there a
would it really be that hard is there a
way I could do it that wouldn't be that
way I could do it that wouldn't be that
hard it's kind of hard kind of no matter
hard it's kind of hard kind of no matter
what you
what you
do
um and the thing is like
um and the thing is like
if I want to do continuous control stuff
if I want to do continuous control stuff
anyways right just like making the
anyways right just like making the
movement continuous control doesn't
movement continuous control doesn't
really do it for the robotics people
really do it for the robotics people
anyways like if you're going to do
anyways like if you're going to do
continuous control they want like at
continuous control they want like at
least some sort of little robot um and
least some sort of little robot um and
then they already have their own
then they already have their own
environments that they're very attached
environments that they're very attached
to and like that they consider to be
to and like that they consider to be
like complex and interesting so it's
like complex and interesting so it's
going to be it would be really hard to
going to be it would be really hard to
beat the complexity of one of those big
beat the complexity of one of those big
simulators cuz we'd have to kind of do
simulators cuz we'd have to kind of do
our own physics Eng
our own physics Eng
and like contact points and stuff and
and like contact points and stuff and
that would be
hard what are some other cool RL type
hard what are some other cool RL type
projects we could do on this um I
projects we could do on this um I
thought about trying to like reimplement
thought about trying to like reimplement
Atari games and make them really fast
Atari games and make them really fast
well that wouldn't be particularly hard
well that wouldn't be particularly hard
um there are a lot of Atari games and
um there are a lot of Atari games and
you know it's hard to get uh it's really
you know it's hard to get uh it's really
hard to get those tari games uh to
hard to get those tari games uh to
be like it's hard to get all of them
be like it's hard to get all of them
implemented right cuz there are just so
implemented right cuz there are just so
many of them um so like I could do a
many of them um so like I could do a
breakout or a PA Game or something like
breakout or a PA Game or something like
that very easily but I don't know if
that very easily but I don't know if
that does too much on its
that does too much on its
own I like doing massively multi-agent
own I like doing massively multi-agent
stuff um because it scales really well
stuff um because it scales really well
and you know it's a cool thing to show
and you know it's a cool thing to show
off but I don't know if
off but I don't know if
uh that is something that I can come up
uh that is something that I can come up
with an infinite number of environments
with an infinite number of environments
there's also the possibility of trying
there's also the possibility of trying
to figure out how to put some of these
to figure out how to put some of these
environments online which I would really
environments online which I would really
like to do and I think would be really
like to do and I think would be really
cool if people could play them the
cool if people could play them the
problem there is I have absolutely no
problem there is I have absolutely no
experience with webdev and uh I would
experience with webdev and uh I would
need somebody to point me in the
need somebody to point me in the
direction of like a reasonable tool
direction of like a reasonable tool
stack for that because I don't want to
stack for that because I don't want to
go implement the environments in
go implement the environments in
JavaScript and I would need to find a
JavaScript and I would need to find a
decent way of setting stuff up for that
decent way of setting stuff up for that
uh to like run other stuff on server
uh to like run other stuff on server
side or on client side I
mean so many different directions I
mean so many different directions I
could go
could go
in but the thing is I know if I just
in but the thing is I know if I just
keep trying to like polish on this it's
keep trying to like polish on this it's
not going to be very interesting to
not going to be very interesting to
watch and I'm going to get bored as well
watch and I'm going to get bored as well
so maybe it's not the worst thing in the
so maybe it's not the worst thing in the
world to come up with like a more
world to come up with like a more
complex game environment if we just like
complex game environment if we just like
Implement a cool little game that will
Implement a cool little game that will
have something interesting to
it what
it what
are what are some cool games that have
are what are some cool games that have
been done in reinforcement learning
been done in reinforcement learning
before that have maybe been done really
before that have maybe been done really
slowly or maybe we could do something on
slowly or maybe we could do something on
top
of or alternatively we can just start
of or alternatively we can just start
looking into the Moa and seeing how hard
looking into the Moa and seeing how hard
that would really be
I mean surely somebody must have
I mean surely somebody must have
implemented one of these right not for
implemented one of these right not for
RL just in general like mini
mooba mooba is a massive online battle
mooba mooba is a massive online battle
arena um like Dota or League of
arena um like Dota or League of
Legends uh well this is in fortnite
Legends uh well this is in fortnite
which is
which is
hilarious but that's a good view of a
hilarious but that's a good view of a
map they do like a three lane map type
thing mini
thing mini
MOBA
H this is like the classic map of AM MOA
right let's start a dock
right let's start a dock
just to see you know just to see if this
just to see you know just to see if this
is practical mini
is practical mini
MOBA is this something people would find
MOBA is this something people would find
cool if I did something like
cool if I did something like
this couldn't you have a mobile like
this couldn't you have a mobile like
play in neural
play in neural
MMO not really you can't really retrofit
MMO not really you can't really retrofit
like a different game into an MMO like
like a different game into an MMO like
that it's more
substantial there's no such thing as
substantial there's no such thing as
like like an anything engine right the
like like an anything engine right the
anything engine is these hands writing
anything engine is these hands writing
code um you can't just like write a game
code um you can't just like write a game
engine that does like a game that is the
engine that does like a game that is the
engine to do
everything main features of a mooba
everything main features of a mooba
um main features of a
um main features of a
MOA we need three
MOA we need three
lanes we need uh multiple here
we need
we need
Towers uh you need like some sort of
Towers uh you need like some sort of
like
like
Towers uh to
Towers uh to
defend you need
defend you need
minions uh minion
minions uh minion
waves do people not know what this
waves do people not know what this
is do people not know League of Legends
is do people not know League of Legends
DOTA No Monsters jungle yeah
okay um
okay um
I I did not know that this was not
I I did not know that this was not
something that people are like super
something that people are like super
familiar with but like the general
familiar with but like the general
format of am MOA uh is that you have I
format of am MOA uh is that you have I
mean there really two big ones right
mean there really two big ones right
it's League of Legends or DOTA hugely
it's League of Legends or DOTA hugely
hugely popular games there are three
hugely popular games there are three
lanes you have uh five Heroes each
lanes you have uh five Heroes each
controlled by a player um you send you
controlled by a player um you send you
know some Heroes down each lane and uh
know some Heroes down each lane and uh
you know there are creeps that follow
you know there are creeps that follow
you so you have like these minions the
you so you have like these minions the
minions fight each other and then you
minions fight each other and then you
and your opponents on the same Lane
and your opponents on the same Lane
fight each other over the minions you
fight each other over the minions you
try to get you know XP by killing the
try to get you know XP by killing the
minions you try to kill the other heroes
minions you try to kill the other heroes
in Lane there are monsters around in
in Lane there are monsters around in
like the jungle area the intermediate
like the jungle area the intermediate
areas that you can also kill for XP
areas that you can also kill for XP
there's usually some like neutral zone
there's usually some like neutral zone
in the center that has some other
in the center that has some other
objectives and uh there are Towers you
objectives and uh there are Towers you
have some number of towers I think it's
have some number of towers I think it's
three towers plus some inner ones uh in
three towers plus some inner ones uh in
each lane you try to defend these towers
each lane you try to defend these towers
the towers will like fight back they
the towers will like fight back they
will attack stuff within range yeah that
will attack stuff within range yeah that
is the general format of a
is the general format of a
mooba
mooba
um okay I mean I the fact that I see
um okay I mean I the fact that I see
people chatting means that this is
people chatting means that this is
something that people are probably
something that people are probably
interested in so and I actually think
interested in so and I actually think
that this would be a really good thing
that this would be a really good thing
for me to do because it would be the
for me to do because it would be the
first environment that's like
first environment that's like
substantially not grid based but
substantially not grid based but
possibly still scales to be fast um
possibly still scales to be fast um
yeah let's let's think about this I'm
yeah let's let's think about this I'm
not going to commit to this just yet
not going to commit to this just yet
because this could be like two months of
because this could be like two months of
work but I want to see if there's like
work but I want to see if there's like
is there a way that I can come up with
is there a way that I can come up with
to do this that would be interesting in
to do this that would be interesting in
like two weeks and like have you know a
like two weeks and like have you know a
little bit of time on the side to run
little bit of time on the side to run
experiments and other things so I can
experiments and other things so I can
polish up other stuff on the side
polish up other stuff on the side
right so we've got three lanes there are
right so we've got three lanes there are
let's let's see Towers to defend uh
let's let's see Towers to defend uh
minion waves like neutrals
minion waves like neutrals
in Jungle
in Jungle
maybe uh we probably need something like
maybe uh we probably need something like
that
that
um principal objective to destroy Nexus
um principal objective to destroy Nexus
yeah Towers to defend like
yeah Towers to defend like
some like
some like
Nexus
Nexus
objective multiple
objective multiple
Heroes
Heroes
what am I
what am I
stupid hero what
okay
uh okay I this makes sense to me so if I
uh okay I this makes sense to me so if I
were to implement this thing
were to implement this thing
right what was like the minimum I would
right what was like the minimum I would
need to
need to
do yeah you have so multiple Heroes with
abilities and then maybe
abilities and then maybe
items um I actually don't think items
items um I actually don't think items
are going to be as important um because
are going to be as important um because
uh like the open AI guys they scripted
uh like the open AI guys they scripted
the item buys I'm pretty sure anyways or
the item buys I'm pretty sure anyways or
at least partially script I think that
at least partially script I think that
they either partially or fully scripted
they either partially or fully scripted
the items anyways um you do need
the items anyways um you do need
something to have like gold or to spend
something to have like gold or to spend
gold on or something like that
um yeah but I I don't want to do like
um yeah but I I don't want to do like
different builds and stuff like that I
different builds and stuff like that I
don't want to get into that level of
don't want to get into that level of
complexity so let me just think so this
complexity so let me just think so this
is like the the Hallmark I'll put it
is like the the Hallmark I'll put it
into the into this one item
into the into this one item
Market okay
Market okay
so what is like the bare
so what is like the bare
minimum uh for demo like the like the
minimum uh for demo like the like the
bare minimum that I would need in order
bare minimum that I would need in order
to make this thing possible well I think
to make this thing possible well I think
that I would need to have
that I would need to have
like the lane like some way to do the
like the lane like some way to do the
map right like the lanes in the map so
map right like the lanes in the map so
like basic
like basic
movement map I need
some some sort of basic
some some sort of basic
creep creeps that fight each other right
creep creeps that fight each other right
so some sort of basic creeps plus creep
Ai and
Ai and
then uh
then uh
like hero with
like hero with
ability
ability
to attack
and that's kind of it
and that's kind of it
right bare minimum to like get something
right bare minimum to like get something
done would be like you have the map you
done would be like you have the map you
have the lanes the creeps go and fight
have the lanes the creeps go and fight
each other and then the heroes can go to
each other and then the heroes can go to
like the various different lanes and do
like the various different lanes and do
stuff there right that would be like the
stuff there right that would be like the
bare
bare
minimum in order just and then we can
minimum in order just and then we can
like add stuff from there so what I want
like add stuff from there so what I want
to get is how hard is it going to be to
to get is how hard is it going to be to
do that
um it's a good start
yeah so the big thing that I'm worried
yeah so the big thing that I'm worried
about here the big thing is not having
about here the big thing is not having
grid
observations o this is an important
choice yeah know so the way that they
choice yeah know so the way that they
did this in
Dota that this Beast of an architecture
Dota that this Beast of an architecture
here
and they
and they
had like they had all the units like
had like they had all the units like
this and they had this attentional type
architecture so what I would have to do
architecture so what I would have to do
in order to see tell
in order to see tell
which which minions or whatever you can
see a simple 2D Ultra fast MOBA game
see a simple 2D Ultra fast MOBA game
reusing grid based continuous control
reusing grid based continuous control
engine it's an awesome idea now that I
engine it's an awesome idea now that I
think of it yeah so I could make it grid
think of it yeah so I could make it grid
based continuous control that I could do
um that wouldn't be that bad
right and then I could decide later if I
right and then I could decide later if I
want to do something
different that sounds good right
I feel like it would make something
I feel like it would make something
similar to open I5 way more accessible
similar to open I5 way more accessible
yeah so that's the thing with open AI I
yeah so that's the thing with open AI I
love this project I absolutely love this
love this project I absolutely love this
project uh I was 15t away from the team
project uh I was 15t away from the team
when they were building this and it was
when they were building this and it was
just the coolest thing by the most
just the coolest thing by the most
talented people I'd ever seen and there
talented people I'd ever seen and there
was some talk internally of like okay
was some talk internally of like okay
once we solve DOTA let's solve it with
once we solve DOTA let's solve it with
1% of the compute or something like that
1% of the compute or something like that
and they never did it and it was like
and they never did it and it was like
this awesome reinforcement learning
this awesome reinforcement learning
result like so good um and it just never
happened which is just so
rough um you know there would be easier
rough um you know there would be easier
projects to reimplement like I could
projects to reimplement like I could
probably do like the emergent tool use
probably do like the emergent tool use
or Capture the Flag or one of those way
or Capture the Flag or one of those way
easier and maybe maybe I should start
easier and maybe maybe I should start
with
with
that but like this would be so
cool and I've kind of learned that like
cool and I've kind of learned that like
once I get an idea like this in my head
once I get an idea like this in my head
I kind of have to do it cuz I'm not
I kind of have to do it cuz I'm not
going to want to work on anything else
going to want to work on anything else
until I at least like convince myself
until I at least like convince myself
that this is super hard and like half
that this is super hard and like half
the time you know half the time I like
the time you know half the time I like
try something really hard it ends up not
try something really hard it ends up not
being really hard so maybe I can just do
being really hard so maybe I can just do
it right okay let's see so we use the
it right okay let's see so we use the
continuous control engine right we use
continuous control engine right we use
like the really basic continuous control
like the really basic continuous control
engine
um yeah we'll we'll use we Ed the really
um yeah we'll we'll use we Ed the really
basic continuous control engine
um it's not going to run as fast is the
um it's not going to run as fast is the
one thing
with h actually it
with h actually it
might we did like one meter squares
maybe hard to
maybe hard to
say I don't know if the continuous
say I don't know if the continuous
control engine is a good fit or
not I think it's reasonable at least
is it easier or harder because of the
is it easier or harder because of the
continuous control
engine well it does let you run it
engine well it does let you run it
discreete or continuous which is
discreete or continuous which is
nice and it it simplifies the network
nice and it it simplifies the network
architectures but it actually kind of
architectures but it actually kind of
complicates some other stuff doesn't it
no cuz it simplifies Collision checks
right yeah cuz how else do you do
right yeah cuz how else do you do
Collision
checks I think we can try it
okay the one thing I want to know before
okay the one thing I want to know before
I start on this is I want to know how
I start on this is I want to know how
you do uh how you normally do Collision
checks I think you do something like
checks I think you do something like
something like having a grid anyways
something like having a grid anyways
right and then you just do Collision
right and then you just do Collision
checks within the
grid
yeah so I think there's pretty much
yeah so I think there's pretty much
always going to be a grid anyways so we
always going to be a grid anyways so we
may as well start with
may as well start with
it so
it so
like I come up with some map right I
like I come up with some map right I
come up with well I re I start with the
come up with well I re I start with the
continuous control code uh I come up
continuous control code uh I come up
with some fixed
with some fixed
map
I I add like basic attack actions and uh
I I add like basic attack actions and uh
health and stuff like
that and then I add uh
that and then I add uh
some some really basic
NPCs yeah I add some like really basic
NPCs yeah I add some like really basic
NPCs the AI will be kind of tricky to do
NPCs the AI will be kind of tricky to do
fast but there aren't that many of
fast but there aren't that many of
them I should still be able to get this
them I should still be able to get this
thing running like hundreds of thousands
thing running like hundreds of thousands
of FPS
of FPS
regardless which is still crazy fast
and then the attacks what about the
attacks the one thing that's concerning
attacks the one thing that's concerning
to me is that like the vision range in a
to me is that like the vision range in a
MOA just has to be bigger fundamentally
MOA just has to be bigger fundamentally
like the game doesn't make sense very
like the game doesn't make sense very
with very very local
with very very local
Vision um
you
know maybe I just use the grid engine
know maybe I just use the grid engine
for the fast Collision checks how big
for the fast Collision checks how big
does the vision range have to be
does the vision range have to be
compared to 11 by 11 well I mean think
compared to 11 by 11 well I mean think
about it
about it
right the the tile size has to be small
right the the tile size has to be small
enough that um like minions can stand
enough that um like minions can stand
next to each other so if you're going to
next to each other so if you're going to
think of like how big the PES should
think of like how big the PES should
represent uh should be
represented have different classes tank
represented have different classes tank
range assassin okay like we can get to
range assassin okay like we can get to
that stuff it's Basics
that stuff it's Basics
first how big does the vision range have
first how big does the vision range have
to be compared to 11 by 11
um actually that is that is a good
um actually that is that is a good
question to have to answer so
the thing is the minions can't move
the thing is the minions can't move
through each other on the grid system
through each other on the grid system
the way I have it
the way I have it
defined
defined
so they have to like path around each
so they have to like path around each
other I
other I
guess um so they have to do the pathing
guess um so they have to do the pathing
on the
grid so
well the minions actually can't collide
well the minions actually can't collide
with each other I think in like DOTA and
with each other I think in like DOTA and
League they have like uh they do have
League they have like uh they do have
Collision checks on them
anyways so maybe not the worst thing in
anyways so maybe not the worst thing in
the
the
world
um and
um and
then you can definitely move
maybe the grid engine just
maybe the grid engine just
works Hey Brother do you still have the
works Hey Brother do you still have the
MMO example from your thesis live still
MMO example from your thesis live still
want to show a friend the environment
want to show a friend the environment
love the
love the
work uh it should
be this appears to work right
be this appears to work right
this
thing it looks like the uh some of
thing it looks like the uh some of
the uh the assets have broken like some
the uh the assets have broken like some
of the NPCs have disappeared I love how
of the NPCs have disappeared I love how
like web apps just seem to rot on their
like web apps just seem to rot on their
own for no particular
own for no particular
reason
reason
um but other than like this missing
um but other than like this missing
asset thing being weird yeah it seems
asset thing being weird yeah it seems
like it
like it
works I hate web dev so much
let me turn the AC down and then we're
let me turn the AC down and then we're
going to start coding
this I'm only going to do this if uh is
this I'm only going to do this if uh is
this using puffer yeah it's using puffer
this using puffer yeah it's using puffer
for training and for infen and stuff
for training and for infen and stuff
yeah um the demo the web demo is not
yeah um the demo the web demo is not
live using puffer it's just a rendering
live using puffer it's just a rendering
of like a example like from Agents that
of like a example like from Agents that
were using puffer um but uh yeah it's
were using puffer um but uh yeah it's
the training requires puffer for sure to
the training requires puffer for sure to
be reasonable to do
let me update stream
title okay let's let's start on this
title okay let's let's start on this
we're going to start with uh the grid
we're going to start with uh the grid
engine until we get stuck on the grid
engine until we get stuck on the grid
engine is how it's going to work and
engine is how it's going to work and
we'll probably have to make the vision
we'll probably have to make the vision
radius something kind of large so you
radius something kind of large so you
know we'll train a few hundred thousand
know we'll train a few hundred thousand
steps per second or whatever and we'll
steps per second or whatever and we'll
go from there and then maybe we'll come
go from there and then maybe we'll come
up with stuff afterwards to make it
up with stuff afterwards to make it
better um
MOA grid
MOA grid
continuous copy grid continuous
continuous copy grid continuous
slash
slash
star uh no we just want grid continuous
slash R continuous.
slash R continuous.
py uh Moa SL MOBA
py uh Moa SL MOBA
dopy and then we
dopy and then we
want grid continuous
want grid continuous
slash C grid
slash C grid
continuous pix
continuous pix
MOBA ca.
MOBA ca.
PX okay and uh we will make
a environment
snake name
MOA we'll do this make
MOA we'll do this make
mooba let's actually let's put this a
mooba let's actually let's put this a
little higher
little higher
up let's put this on
here grid let's do make
here grid let's do make
mooba make
mooba don't need any of this
mooba don't need any of this
um
um
Horizon doesn't need to be set either I
Horizon doesn't need to be set either I
don't
think uh Map
size we need Map
size we need Map
size not really I think it's just going
size not really I think it's just going
to be a fixed map we're going to make it
to be a fixed map we're going to make it
really
easy m.n
Creator uh no this needs to
be yeah
be yeah
return because it's going to be in the
return because it's going to be in the
fancy API
fancy API
cool from
cool from
dot MOA import
dot MOA import
MOA
okay offer mooba
Oba
Oba
MOA
this and we will start messing with
this and we will start messing with
stuff uh we don't need any of these
stuff uh we don't need any of these
tasks
discretize discretize useful yeah
discretize discretize useful yeah
discretise is actually pretty useful
discretise is actually pretty useful
we'll keep that for now don't need food
we'll keep that for now don't need food
reward don't need expected lifespan do
reward don't need expected lifespan do
need report
need report
interval uh don't need
interval uh don't need
Horizon do need Vision range and agent
Horizon do need Vision range and agent
speed do not need width and and height I
speed do not need width and and height I
don't
don't
think I think that's just going to end
think I think that's just going to end
up being uh
hardcoded yeah this should be
fun
map uh how big is the DOTA map in
meters DOTA app size
map would be approximately 150 by
map would be approximately 150 by
M
M
um rough
estimates 11 by 100 by 1100 game
estimates 11 by 100 by 1100 game
units which is how big do I want to make
units which is how big do I want to make
the
the
squares I think 3 ft by 3 ft is probably
squares I think 3 ft by 3 ft is probably
too big if I say it's 2T by 2T
too big if I say it's 2T by 2T
fet then that is 75x 75 tiles that seems
fet then that is 75x 75 tiles that seems
really small no wait meters so it's the
really small no wait meters so it's the
other way around so divide by so like
other way around so divide by so like
tiles 250
tiles 250
tiles well I should make this smaller
tiles well I should make this smaller
right 128 by 128
right 128 by 128
tiles does that give me enough
tiles does that give me enough
room probably does to start with right
room probably does to start with right
let's make this 128 by 128
tiles okay and then we do
tiles okay and then we do
self
self
width uh self.
width uh self.
height self. width is map.
height self. width is map.
shape uh we'll do self. Nom
agents is well the total numb agent
agents is well the total numb agent
is
is
10 don't need Horizon do need Vision
10 don't need Horizon do need Vision
range agent speed
range agent speed
discretize board interval
good oh here's the grid right here so I
good oh here's the grid right here so I
can just do uh what is
it I can do just self. height 128
it I can do just self. height 128
is
is
128 and then I can do the grid right
128 and then I can do the grid right
here is going to be self. height width
here is going to be self. height width
agent positions self. num agents uh
agent positions self. num agents uh
spawn position cans we do not need this
spawn position cans we do not need this
whatsoever agent colors we do not need
whatsoever agent colors we do not need
this
either
either
emulated we do not
emulated we do not
need
need
um buff is going to be self dot num
um buff is going to be self dot num
agents num
agents num
agents num agents
agents num agents
agents oops s. num agents
agents oops s. num agents
perfect now I'm trying to think where I
perfect now I'm trying to think where I
want to prototype this I think I
want to prototype this I think I
probably want to prototype this mostly
probably want to prototype this mostly
in uh in Python right
in uh in Python right
prototyping in scon would be
slow don't need episode rewards like
slow don't need episode rewards like
this uh don't need this duns not duns
this uh don't need this duns not duns
thing that's weird I didn't need this at
all yeah
okay good enough to start
okay good enough to start
with so
self do agent
self do agent
positions
positions
H
H
wait self. buff. observations oh yeah
wait self. buff. observations oh yeah
yeah this is for OBS this is
fine I should actually tweet
fine I should actually tweet
this for
there's a Jim
there's a Jim
en called Dirk oh yeah I forgot about
en called Dirk oh yeah I forgot about
that Dirk mooba RL what is this
thing this is the DOTA thing that's
crazy this is four years
crazy this is four years
old oh yeah yeah I saw this
old oh yeah yeah I saw this
um for research and fun
huh how fast is
this let's
this let's
see
see
run what does this say this create and
run what does this say this create and
run where are these benchmarks what does
run where are these benchmarks what does
what does this mean
num
num
samples is
20 wait so is this really
slow six seconds is
this well unless convinced otherwise I'm
this well unless convinced otherwise I'm
going to assume super slow we will make
going to assume super slow we will make
something that is super
something that is super
fast but this is cool
fast but this is cool
I wonder if this guy has any
I wonder if this guy has any
uh have I met this guy AI game
uh have I met this guy AI game
Studio well this looks pretty cool
Studio well this looks pretty cool
anyways enough yapping let's
build um okay so we have the view the
build um okay so we have the view the
CN I think we're probably going to not
CN I think we're probably going to not
have the CN for quite a while we're just
have the CN for quite a while we're just
going to get rid of
going to get rid of
this um we're going to do self de agents
this um we're going to do self de agents
is fine grid fill empty it's
fine
fine
okay init function we don't need this
okay init function we don't need this
episode rewards we don't need
episode rewards we don't need
this self. cm. reset we don't need
this self. cm. reset we don't need
this some rewards we need fill
this some rewards we need fill
observations we need this as
observations we need this as
well so I think this is where we put our
well so I think this is where we put our
logic
self. Vision range so we're going to do
self. Vision range so we're going to do
this is going to be to fill uh some
this is going to be to fill uh some
walls in so the thing can spawn at a
walls in so the thing can spawn at a
reasonable spot we can
do self. agent
positions where's the agent positions um
yeah self. agent
yeah self. agent
positions we'll just hardcode some
positions we'll just hardcode some
positions so like self. agent positions
positions so like self. agent positions
of row will
of row will
be uh
be uh
zero
equals
120 I'm going to have to just Mark these
120 I'm going to have to just Mark these
on the map or
on the map or
something uh can I do just for now like
120 uh row and then like
eight
eight
120 and
eight yeah I think
so uh
so uh
121 no wait I can't go any closer than
121 no wait I can't go any closer than
that so I should just put him
I should just put them
I should just put them
like call R call like
nine oops
nine oops
10 this should be
10 this should be
one
two okay and now the other one will be
two okay and now the other one will be
uh like this self. agent positions of
uh like this self. agent positions of
five is going to be
five is going to be
row will be uh
row will be uh
eight and
eight and
then
then
120 and then
120 and then
9 10
9 10
11 there so there our agent
spawned um I don't have the lanes made
spawned um I don't have the lanes made
yet I'm going to probably just have to
yet I'm going to probably just have to
draw a map I'm assuming we'll do that
draw a map I'm assuming we'll do that
after uh that should be fairly easy to
after uh that should be fairly easy to
to
to
do not really actually to be to be fair
do not really actually to be to be fair
we might we might do some like weird
we might we might do some like weird
masking of the DOTA
map I might just like import that map
map I might just like import that map
and like mask or trace or something like
that uh but okay we have the agent
that uh but okay we have the agent
spawned in
now we got to do uh let's not do creeps
now we got to do uh let's not do creeps
yet let's just keep the agents until we
yet let's just keep the agents until we
can get this
running up. rewards.
fill uh okay cool
fill uh okay cool
so in order to make this now
so in order to make this now
run where's the step
function
function
oh I kind of do want this don't I cuz it
oh I kind of do want this don't I cuz it
has like the engine code in
has like the engine code in
it yeah I
do I don't have the python version of it
do I don't have the python version of it
anymore
anymore
right my bad let's go grab that code
right my bad let's go grab that code
from uh
puffer so what we're going to do is
puffer so what we're going to do is
we're going to actually we are going to
we're going to actually we are going to
do I didn't want to debug in the in scon
do I didn't want to debug in the in scon
but because uh we already have the
but because uh we already have the
engine implemented uh I think it's
engine implemented uh I think it's
probably just better to do it that
way
way
CN and we're going to have to make some
CN and we're going to have to make some
big changes as well before we can get it
big changes as well before we can get it
running okay well we'll make the goal to
running okay well we'll make the goal to
day to get like some basic uh to get
day to get like some basic uh to get
like some super basic like the agents
like some super basic like the agents
run around in a map that looks like a
run around in a map that looks like a
mooba and maybe have like an attack
mooba and maybe have like an attack
action or something like
action or something like
that and we'll see how long that takes
that and we'll see how long that takes
and we'll go from
there so we've got self.
there so we've got self.
CNF we don't need these spawn position
CNF we don't need these spawn position
cans
cans
right um agent colors
should I have left agent
colors no because I know I'm going to
colors no because I know I'm going to
have to do it a different way
have to do it a different way
anyways AG positions OBS view I mean
anyways AG positions OBS view I mean
there's going to be some really cool
there's going to be some really cool
Tech in this at the very least so it'll
Tech in this at the very least so it'll
be
be
cool agents
cool agents
ryzen have Horizon have Vision range
ryzen have Horizon have Vision range
speed discretized no food reward
speed discretized no food reward
expected lifespan is gone on so we do
expected lifespan is gone on so we do
like
this what the hell just happened to my
Docker dude this thing just broke my
Docker dude this thing just broke my
freaking
freaking
terminal
terminal
freaking ah
B cannot be breaking a guy's
terminals
okay where's all my other
stuff the
stuff the
hell uh
what in the
hell created 11 days
ago well where's all the stuff in
ago well where's all the stuff in
it are you kidding me
why is this on like Dev Branch this is
why is this on like Dev Branch this is
is this a different
container six days
container six days
ago ah here
ago ah here
it's it's okay there's I found it it's
it's it's okay there's I found it it's
just the wrong container we are we're
fine where the heck is
this name is 1.0
okay Docker stop puffer
tank okay there we got it back
okay so we need whole bunch of stuff
okay so we need whole bunch of stuff
here don't want spawn position cans a
colors
colors
uh don't need width don't need
height num
agents not
agents not
really Horizon don't need
really Horizon don't need
that Vision range agent speed discretize
that Vision range agent speed discretize
is
is
good uh but that's all we need I think
good uh but that's all we need I think
so we can just do like this
good
good
reward yeah that's
nice and then we just do self.
nice and then we just do self.
height shape is
zero Ryon doesn't matter doesn't matter
zero Ryon doesn't matter doesn't matter
this doesn't
matter grid observations rewards agent
matter grid observations rewards agent
position
position
colors and spawn cans don't matter with
colors and spawn cans don't matter with
height Horizon doesn't matter Vision
height Horizon doesn't matter Vision
range speed discretized food reward
range speed discretized food reward
doesn't matter effect lifetime doesn't
doesn't matter effect lifetime doesn't
matter agent position spawn cans Okay
matter agent position spawn cans Okay
cool so that's nice
cool so that's nice
there um now compute
there um now compute
observations is fine spawn
observations is fine spawn
food is not
food is not
needed spawn
agent is going to be heavily
agent is going to be heavily
modified
reset
is um sure
is um sure
whatever agent spawning
whatever agent spawning
ah we do not do agent spawning
ah we do not do agent spawning
here so
we can get rid of this
right
yeah actually the stream has gone up a
yeah actually the stream has gone up a
little bit since I posted that so that's
little bit since I posted that so that's
cool
cool
um the twitch stream I mean at least or
um the twitch stream I mean at least or
the uh the Twitter one most of it's on
the uh the Twitter one most of it's on
Twitter
so let's see we have actions continuous
so let's see we have actions continuous
actions
discreet how much can we code on
this actually let me text a friend asked
this actually let me text a friend asked
me to tell him on this one sec
live auto correct is the worst thing
live auto correct is the worst thing
ever
invented okay so we don't need food this
invented okay so we don't need food this
is this goes
is this goes
away don't need
colors don't need random agent respawn
I don't think I might regret that we'll
see uh okay and now what we're going to
see uh okay and now what we're going to
have to do is we're going to have to
have to do is we're going to have to
debug this thing into
existence so we're going to add perer
existence so we're going to add perer
lib environments ocean MOA MOA or C MOBA
lib environments ocean MOA MOA or C MOBA
dox like
this set up
build and we'll see so we
build and we'll see so we
have agent positions is not built
have agent positions is not built
in Undeclared name not built
in Undeclared name not built
in
46 did I spell this
wrong
um maybe there's a error higher
um maybe there's a error higher
up agent positions is not a type oh I
up agent positions is not a type oh I
forgot a comma that's all
okay so that does compile uh let's take
okay so that does compile uh let's take
this signature and go to the python
this signature and go to the python
file and we'll do right here in
file and we'll do right here in
reset we'll get the signature so it's
reset we'll get the signature so it's
grid agent positions observations
grid agent positions observations
rewards don't need width and height
rewards don't need width and height
don't need DB agents
don't need DB agents
apparently do Vision range
region range agent speed disc okay
region range agent speed disc okay
perfect and we have uh this reset is
perfect and we have uh this reset is
actually inite uh Sealand so we can just
actually inite uh Sealand so we can just
do like this and then we do uh self. cm.
do like this and then we do uh self. cm.
reset
perfect
perfect
and uh then we need to add The Binding
and uh then we need to add The Binding
to config right yes we need to add
to config right yes we need to add
binding to config so
configs
configs
ocean ocean we're going to copy grid
ocean ocean we're going to copy grid
because it's going to be very similar to
because it's going to be very similar to
MOA in MOA
MOA in MOA
in and M name is just going to be
in and M name is just going to be
MOA and
MOA and
um yeah that's kind of it right for
now and
now and
MOBA mode eval
no attribute
no attribute
MOA
MOA
okay
okay
MOA so puffer
MOA and it takes a ton of arguments
MOA and it takes a ton of arguments
apparently seven
apparently seven
given make
mooba uh so what do we
mooba uh so what do we
do that doesn't seem to
do that doesn't seem to
make
sense so this is Vision range agent
sense so this is Vision range agent
speed so all this stuff is fine uh so I
speed so all this stuff is fine uh so I
guess that I didn't
guess that I didn't
do oh wait C grid continuous grid
do oh wait C grid continuous grid
continuous yeah no this is the wrong one
continuous yeah no this is the wrong one
so this is going to be oce MOBA do
so this is going to be oce MOBA do
Coba import environment is
CN differing extents in
Dimensions okay
really how about
really how about
here ah I have to do this before I think
here ah I have to do this before I think
right I have to put this above the
CN oh so
close and uh terminals
I don't need either of these because
I don't need either of these because
they are just
empty okay cool do I see
empty okay cool do I see
anything no I don't see anything because
anything no I don't see anything because
of the agent colors thing
right so agent One agent two and so on
right so agent One agent two and so on
and so forth
and so forth
B
MOA agent
colors uh so this is
not wait agent
not wait agent
positions and we have compute
observations hold on
when you spawn an agent you put it on
when you spawn an agent you put it on
the
grid and you you put agent positions and
grid and you you put agent positions and
on the grid right and then when you
on the grid right and then when you
step the thing you
do
do
ah I have to put it on the grid as
ah I have to put it on the grid as
well uh Moa
so let's just do let's just put this at
so let's just do let's just put this at
the top where we instantiate
the top where we instantiate
it now actually it should go here self.
it now actually it should go here self.
agent uh
positions star
positions star
equals Dot
array dtype this is
fine and then what do we do we do uh
fine and then what do we do we do uh
self.
grid agent
grid agent
One self. agent positions like this
agent
one let's
one let's
see arrays us indes must be type
see arrays us indes must be type
bull
bull
uh okay
why can't we
why can't we
see we can't see anything on the grid
see we can't see anything on the grid
yet though
right and then we have this renderer
right and then we have this renderer
down
down
here where's the uh the
renderer render
renderer render
mode should be a render function right
mode should be a render function right
yes right here
yes right here
uh so we have
uh so we have
colors the grid
colors the grid
here let's see what's in the grid is the
here let's see what's in the grid is the
grid
empty unique grid okay so we do have a
empty unique grid okay so we do have a
three which is Agent one
ah and then they're gone so they're
ah and then they're gone so they're
there for two frames and then they're
gone actually I should probably just
gone actually I should probably just
check where they are for those two
check where they are for those two
frames right
can I see
can I see
them
them
uh okay
uh okay
so
here it doesn't really help
um let's see it
maybe that
step maybe if I just do in Step I will
step maybe if I just do in Step I will
just like continue and we'll see we'll
just like continue and we'll see we'll
see what happens
see what happens
here let's just do
here let's just do
like
like
return uh self.
return uh self.
buff let's see if this does
anything okay so yes so here we have the
anything okay so yes so here we have the
agents right and they should be able to
agents right and they should be able to
move from there that's exactly what we
wanted
wanted
Coba now what happens in step is we get
Coba now what happens in step is we get
these
velocities um and now we say if it's
velocities um and now we say if it's
zero then we empty the grid oh I think I
zero then we empty the grid oh I think I
forgot to update the grid right
equals agent
equals agent
one
yeah
is okay and now we
eval okay perfect so now we have uh we
eval okay perfect so now we have uh we
have our agents that are spawned in the
have our agents that are spawned in the
two corners and they're wandering around
right this is the
right this is the
basis for what we do
next it's funny that it will actually
next it's funny that it will actually
take them a very long time to just even
take them a very long time to just even
randomly stumble all the way over to
randomly stumble all the way over to
where the creeps are right
I think one we have we're going to have
I think one we have we're going to have
to lock in the map size pretty soon
to lock in the map size pretty soon
um well I guess we could do a highres
um well I guess we could do a highres
map and then downscale it
right let's open up
Photoshop see what we can get for the
Photoshop see what we can get for the
map I'm not going to entirely go like
map I'm not going to entirely go like
make my own map from scratch here I'm
make my own map from scratch here I'm
going to use
going to use
uh
uh
the DOTA
map overhead view of the game map as
map overhead view of the game map as
of version
7.33
okay
Save open with
1,000 by 7
959 interesting that it is
959 interesting that it is
not exactly
not exactly
uniform DOTA yes we are building a high
uniform DOTA yes we are building a high
performance uh miniature MMO a mini MOA
performance uh miniature MMO a mini MOA
not MMO I've built plenty of that uh
not MMO I've built plenty of that uh
for oh wait got a
message
to
okay so this is ,00 by 959 9 um we
okay so this is ,00 by 959 9 um we
should stretch it to 1028 or was it 1024
should stretch it to 1028 or was it 1024
24 by
24 by
1024 create
paste
paste
yeah paste this in
yeah paste this in
here uh we want this to be
here uh we want this to be
centered this
centered this
perfect and I'm not an artist here so
perfect and I'm not an artist here so
this might take me a second but what we
this might take me a second but what we
want to do is we basically want to just
want to do is we basically want to just
like trace or mask or whatever so that
like trace or mask or whatever so that
we don't have to design our own entire
we don't have to design our own entire
map
map
um because the point of this is not to
um because the point of this is not to
make like a game that I can sell the
make like a game that I can sell the
point of this is to make an RL EnV so
point of this is to make an RL EnV so
we're just going to use like very
we're just going to use like very
similar
map now the question is is this too
map now the question is is this too
complicated uh I forgot how
complicated uh I forgot how
complicated the DOTA map is
complicated the DOTA map is
actually wait
actually wait
I forgot how much of a more complicated
I forgot how much of a more complicated
game is uh DOTA like DOTA is than League
game is uh DOTA like DOTA is than League
there's like all these side Lanes
right wait how much more complicated is
right wait how much more complicated is
the DOTA map than the league
map do they have the overhead
they don't even have a good overhead
they don't even have a good overhead
that we would be able to use if we
that we would be able to use if we
wanted to
wanted to
right yeah they don't even have a good
one oh man it's so much simpler
one oh man it's so much simpler
right I guess stylistically it's just
right I guess stylistically it's just
that they have let me
that they have let me
see so league
see so league
has one jungle in the
center which is actually small
and DOTA has all this extra stuff on the
and DOTA has all this extra stuff on the
side Twisted Tree Line map is just two
side Twisted Tree Line map is just two
lanes I wanted three lanes and I do like
lanes I wanted three lanes and I do like
the classic map
the classic map
um I think what we can do is we can vain
um I think what we can do is we can vain
Glory map oh God that's going to be so
Glory map oh God that's going to be so
simple right mobile Vin Glory map
yeah that's crazy simple
yeah that's crazy simple
right but the thing is none of them have
right but the thing is none of them have
good top
good top
downs I guess this is this this Smite
downs I guess this is this this Smite
like cartoon of the SN Smite
map I mean I kind of want to do the DOTA
map I mean I kind of want to do the DOTA
one and I just want to like I'll just
one and I just want to like I'll just
like paint over stuff that we don't need
like paint over stuff that we don't need
for
now I think that would be the coolest
now I think that would be the coolest
thing to do I mean dota's really like
thing to do I mean dota's really like
the
the
OG you
OG you
know it's really like the OG of
everything
so to start
so to start
with
um am I going to do
this this gets locked
this this gets locked
right and I think that what you do is
right and I think that what you do is
you just like wand
you just like wand
this oh that's really crunch uh let's do
this oh that's really crunch uh let's do
like
30 that's not bad
right you do something like
right you do something like
that oh I'm actually kind of concerned
that oh I'm actually kind of concerned
though when we downscale this map this
though when we downscale this map this
map is kind of fundamentally really high
map is kind of fundamentally really high
res right like when I downscale it I'm
res right like when I downscale it I'm
not even going to have enough
not even going to have enough
pixels to do stuff with
right
H
interesting what if I do like
interesting what if I do like
this or like
this or like
contiguous o
that's
tricky I guess I can just do something
tricky I guess I can just do something
for now and not care too much
right uh Trace them like just real
right uh Trace them like just real
quick yeah I think the quickest thing is
quick yeah I think the quickest thing is
just going to be to like go on this
just going to be to like go on this
layer here right get like a get like a
layer here right get like a get like a
decent size brush be bigger than this
decent size brush be bigger than this
what 50
what 50
maybe and just like start painting
maybe and just like start painting
around stuff in uh
black so
black so
like we want
like we want
obstacles um
if I do hold
if I do hold
on do I just like paint the jungles out
on do I just like paint the jungles out
for now and the side lanes and just like
for now and the side lanes and just like
keep the the main
keep the the main
Lanes I could probably do that right
Lanes I could probably do that right
yeah like so if I wanted to just do like
yeah like so if I wanted to just do like
uh
uh
this wait what the heck why can't I draw
why can't I not
why can't I not
draw Oh wrong
brush needs
symmetry well I was going to just try to
symmetry well I was going to just try to
paint I guess yeah you're right I kind
paint I guess yeah you're right I kind
of have to flip it huh and I have to
of have to flip it huh and I have to
like paint the same thing on both
like paint the same thing on both
sides is the map perfectly
sides is the map perfectly
symmetrical is there a box function to
symmetrical is there a box function to
just box off the areas in the well yeah
just box off the areas in the well yeah
I can draw boxes
I can draw boxes
um I what I was going to do is I was
um I what I was going to do is I was
just going to go like
just going to go like
this why is this
opacity dude what is with the smoothing
opacity dude what is with the smoothing
on this thing it's like
on this thing it's like
there yeah so I was just going to like
there yeah so I was just going to like
go like
this or something
then I guess that's going to be the
then I guess that's going to be the
quickest thing right is to just do
quickest thing right is to just do
that I can do it with boxes as
that I can do it with boxes as
well might be
easier so like we do from
easier so like we do from
here like we don't
here like we don't
need uh
need uh
this we don't need this one
whoops
whoops
nope wand this G this
nope wand this G this
nope did
what wand
this
this
okay uh we will say they start here at
okay uh we will say they start here at
the fountain right
the fountain right
so we like we
so we like we
box this
box this
area we box like
this this shouldn't be too long if I
this this shouldn't be too long if I
just do it this way
right and we box like
this
this
oops like what is it like
oops like what is it like
heish
heish
no
she I think if I just use the brush
she I think if I just use the brush
it'll be
faster
yeah and then we only need the lane so I
yeah and then we only need the lane so I
can just cut rid of I get rid of all
can just cut rid of I get rid of all
this right you don't need
this right you don't need
this and then I'll be able to edit this
this and then I'll be able to edit this
like as a mask really easily as well
like as a mask really easily as well
so don't need the
so don't need the
river uh you just need this one lane
river uh you just need this one lane
right here so I can like go around like
right here so I can like go around like
this I'll mirror it as well so it's
this I'll mirror it as well so it's
symmetrical if I can figure out how to
symmetrical if I can figure out how to
do
that and then in the jungle you don't
that and then in the jungle you don't
need most of it so I'm just going to put
need most of it so I'm just going to put
like a Big Blob uh in the middle I'll
like a Big Blob uh in the middle I'll
leave the river but I'm going to like
leave the river but I'm going to like
just blob everything else out so I'm
just blob everything else out so I'm
going to go like this something like uh
going to go like this something like uh
like this
maybe
right and then this this section that's
right and then this this section that's
like nicely rounded
like nicely rounded
here we'll go and all the way to the
here we'll go and all the way to the
river we'll go like
this um
this um
and this is too big uh this like the
and this is too big uh this like the
bottom jungle is like huge in Dota so we
bottom jungle is like huge in Dota so we
need to cover quite a bit more of
it like this
it like this
maybe
yeah and then the bottom Lane is also
yeah and then the bottom Lane is also
huge so we'll do like this
and uh like
this that looks pretty good
this that looks pretty good
right mid lane is kind of huge so let's
right mid lane is kind of huge so let's
just like chunk a little bit out of
that yeah and now if I
can and then can I transform
flip
flip
horizontal transform flip vertical
horizontal transform flip vertical
boom and I have to erase a little bit of
boom and I have to erase a little bit of
it but uh that's not
it but uh that's not
bad merge
layers and we will just like cut in this
layers and we will just like cut in this
way
way
so that we have like a reasonable Lane
so that we have like a reasonable Lane
here and we'll like just fix it and it's
here and we'll like just fix it and it's
basically symmetrical
right this looks like a decent start
right this looks like a decent start
right so we have uh the basic DOTA
right so we have uh the basic DOTA
map basic DOTA
map basic DOTA
map big Center region three
map big Center region three
lanes uh let's save this initially as
lanes uh let's save this initially as
like DotA
like DotA
uh PSD put this on desktop
here and uh what we're going to try to
here and uh what we're going to try to
do is we're going to
do is we're going to
export is there an export quick export
export is there an export quick export
as
as
PNG or export
s is it going to let
s is it going to let
me okay yeah here so I have this
nearest so this is
sharp uh this looks fine right
we're going to put this on uh
we're going to put this on uh
downloads say DOTA bit
downloads say DOTA bit
map that didn't take
longmount
longmount
see uh download or down was it
desktop users
bit
bit
map tank
map tank
slash and then we
slash and then we
will
will
buffer
DOTA puffer tank
DOTA puffer lib
DOTA puffer lib
slash uh Ocean or environments ocean
slash uh Ocean or environments ocean
uh
MOA cool so now we got the
map
map
and we can
do we can load up the
do we can load up the
map and we can see if we can get the
map and we can see if we can get the
agents to run around it a little bit and
agents to run around it a little bit and
then we can probably start on uh creep
then we can probably start on uh creep
AI already it's pretty darn fast
AI already it's pretty darn fast
progress and uh it looks like people
progress and uh it looks like people
like this cuz this is the highest uh
like this cuz this is the highest uh
concurrent on YouTube that we've had so
concurrent on YouTube that we've had so
that's
cool glad to see people are interested
cool glad to see people are interested
given it's it's pretty slow going you
given it's it's pretty slow going you
know it's it's Dev on the scale of like
know it's it's Dev on the scale of like
days or weeks not on the scale of months
days or weeks not on the scale of months
or years so it's fast by Dev standards
or years so it's fast by Dev standards
but it's slow by live content
standards um let's see
so right we need to go right here this
so right we need to go right here this
grid
grid
object
object
Dota or game map equal p or uh was
it
it
here load game map
here load game map
fromg
fromg
to
uh uh bit map
yeah and it
yeah and it
is dota bit
is dota bit
map bit
map from pill so we get the image we
map from pill so we get the image we
open it and then game map
equals
sum uh
sum uh
equal how do I have it here food empty
equal how do I have it here food empty
wall is
two yeah so we do self.
grid self. grid game
grid self. grid game
map map not equal zero is equal to
map map not equal zero is equal to
wall all
wall all
right and we need to move the uh the
right and we need to move the uh the
agents on this map as well so if I can
agents on this map as well so if I can
just like YOLO guess where these guys
are this looks
are this looks
like if I wanted to spawn him somewhere
like if I wanted to spawn him somewhere
around here this is white like 128 so
around here this is white like 128 so
this is 64 so this is 30 so like 32 32
this is 64 so this is 30 so like 32 32
should be a pretty
should be a pretty
safe uh spot to spawn him right I would
safe uh spot to spawn him right I would
think so like was it 128 minus those
think so like was it 128 minus those
96 uh
96 uh
9633 and then this
9633 and then this
is no this is uh column row row colum
is no this is uh column row row colum
this this might actually
this this might actually
work let's run it and
see oh cool look we got
see oh cool look we got
it um so it looks
it um so it looks
like the lanes didn't come out the way
like the lanes didn't come out the way
we wanted them to I
guess which is
weird let me check the bit
map oh wait
map oh wait
because it's because I painted it in
because it's because I painted it in
Black right I should have painted it in
white I think I have some
white I think I have some
di bit maps from a DOTA mini map project
di bit maps from a DOTA mini map project
I was working on a while back uh I mean
I was working on a while back uh I mean
that would be awesome if you have those
that would be awesome if you have those
if you have especially like um we need
if you have especially like um we need
some way of distinguishing walls is the
some way of distinguishing walls is the
main thing or solid so if we have some
main thing or solid so if we have some
way of like showing where you can't walk
way of like showing where you can't walk
on the map that's the main
on the map that's the main
thing um
yeah cool to see somebody over from
yeah cool to see somebody over from
twitch that's a relatively new spot for
twitch that's a relatively new spot for
my my stuff so always cool to see
my my stuff so always cool to see
somebody randomly finding the
stream uh I think I have to convert
stream uh I think I have to convert
these all to White
these all to White
right come here from Twitter very cool I
right come here from Twitter very cool I
think it is higher res on uh it's higher
think it is higher res on uh it's higher
res here right like the Twitter stream
res here right like the Twitter stream
is pretty low res
color yeah that's what I'm about to do
color yeah that's what I'm about to do
is color the the lanes in
is color the the lanes in
white or no the the other way around I'm
white or no the the other way around I'm
going to color this in white and then uh
going to color this in white and then uh
the other everything else will be zero
the other everything else will be zero
that's how that will work
YouTube is a yeah YouTube anywhere but
YouTube is a yeah YouTube anywhere but
Twitter is 1080 um I don't know Twitter
Twitter is 1080 um I don't know Twitter
just has a really crappy player nothing
just has a really crappy player nothing
I can do about
that let's just uh well save this oops
that let's just uh well save this oops
save this and then we export
as PNG with
transparency and 128 128 let's see how
transparency and 128 128 let's see how
this saves this looks good right
let's see what happens
now uh that's not what we want right
now uh that's not what we want right
that's
weird places you can walk do you mean
weird places you can walk do you mean
fog of war or only walkable I mean
fog of war or only walkable I mean
walkable terrain somehow you were in my
walkable terrain somehow you were in my
first row on recommended between a Mr
first row on recommended between a Mr
Beast video and a botting video for
Beast video and a botting video for
RuneScape because I watched your thesis
RuneScape because I watched your thesis
a few weeks ago that was sick thank you
a few weeks ago that was sick thank you
very much um I'm now a full-time RL
very much um I'm now a full-time RL
Exorcist meaning I try to remove the
Exorcist meaning I try to remove the
demons from this absolutely cursed
demons from this absolutely cursed
scientific field and uh I'm doing that
scientific field and uh I'm doing that
through a combination of Dev and
through a combination of Dev and
stupidly high performance Sim and cool
stupidly high performance Sim and cool
experiment stuff so this stream is uh
experiment stuff so this stream is uh
not really intended to be educational
not really intended to be educational
though it might end up being most of the
though it might end up being most of the
time it's really just like watch RL get
time it's really just like watch RL get
fixed live
that is the main
goal okay so what is wrong with this
goal okay so what is wrong with this
map it's following neural MMO on the
map it's following neural MMO on the
Carper Discord but didn't get a chance
Carper Discord but didn't get a chance
to contribute hopefully I can be of use
to contribute hopefully I can be of use
here still a big amateur on the RL in
here still a big amateur on the RL in
general hey we've got a number of
general hey we've got a number of
projects for like different experience
projects for like different experience
uh levels around uh lean key I think is
uh levels around uh lean key I think is
still in the chat is on the Pokemon RL
still in the chat is on the Pokemon RL
project which is awesome um yeah there
project which is awesome um yeah there
he is in chat uh so there 's that going
he is in chat uh so there 's that going
around there's some experimental side
around there's some experimental side
stuff with puffer there's environment
stuff with puffer there's environment
side stuff there's lots of RL that can
side stuff there's lots of RL that can
be done around if you just get involved
be done around if you just get involved
with like the open source side of it
with like the open source side of it
thesis was extremely interesting first I
thesis was extremely interesting first I
saw you as well thank you yeah I don't
saw you as well thank you yeah I don't
really that's really the first main
really that's really the first main
thing I've posted I've kind of kept
thing I've posted I've kind of kept
quiet while I was uh working on my PhD
quiet while I was uh working on my PhD
but now that I'm uh out of grad school
but now that I'm uh out of grad school
and just building stuff I'm doing it a
and just building stuff I'm doing it a
lot more publicly cuz it's fun and the
lot more publicly cuz it's fun and the
progress is super fast and it looks like
progress is super fast and it looks like
at least some people are interested so
at least some people are interested so
it's always a good
time what is wrong with this game
map uh oh I see it should just be uh
map uh oh I see it should just be uh
game map of axis yeah game map should
game map of axis yeah game map should
just be
just be
game negative one we just need the
game negative one we just need the
transparency layer
right uh Boolean
right uh Boolean
index game map not equal
to what is wrong
yeah there's lots of cool stuff going on
yeah there's lots of cool stuff going on
in uh in Pokemon for
in uh in Pokemon for
sure it's more accessible than the Sim
sure it's more accessible than the Sim
stuff that I'm doing though if you've
stuff that I'm doing though if you've
got more of a scientific background
got more of a scientific background
there's definitely experiment stuff on
there's definitely experiment stuff on
the rest of
puffer how do I screw this
puffer how do I screw this
up is this like not in a standard format
up is this like not in a standard format
or something
oh
duh that's what it needs to
be
be
and
and
perfect okay so this is not bad right
perfect okay so this is not bad right
we've got a clearly recognizable MOA map
we've got a clearly recognizable MOA map
we've got our agents wandering around in
we've got our agents wandering around in
this MOBA map I actually I'm going to
this MOBA map I actually I'm going to
take
take
a I'm going to show this I'm going to
a I'm going to show this I'm going to
post this to Twitter
uh what was this 1 hour
later pretty
sweet okay this needs to not
sweet okay this needs to not
be here okay um so now this works now we
be here okay um so now this works now we
have we have many ways we can go from
have we have many ways we can go from
here
here
um the player thing is going to get a
um the player thing is going to get a
lot more complicated very quickly the
lot more complicated very quickly the
NPCs are going to get complicated very
NPCs are going to get complicated very
quickly
quickly
um there's some really cool Tech I can
um there's some really cool Tech I can
show off here but it's going to take a
show off here but it's going to take a
little bit of
little bit of
effort
effort
um so what I'd like to do is I'd like to
um so what I'd like to do is I'd like to
to start using strs for the
to start using strs for the
players um because that is going to
players um because that is going to
basically scyon has something that works
basically scyon has something that works
like a built-in entity component system
like a built-in entity component system
that nobody realizes
that nobody realizes
exists yeah um so that's that gives you
exists yeah um so that's that gives you
the ability to do ultra fast operations
the ability to do ultra fast operations
uh in with very nice syntax over like
uh in with very nice syntax over like
structure data with multiple
structure data with multiple
agents so I think that that's the next
agents so I think that that's the next
thing I'm going to implement is I'm
thing I'm going to implement is I'm
going to do that I'm going to add like
going to do that I'm going to add like
uh some health you know like agent
uh some health you know like agent
Health attack like a few other
Health attack like a few other
attributes and uh maybe I'll add like
attributes and uh maybe I'll add like
team and I'll add like the attack
team and I'll add like the attack
function yeah that would be good and
function yeah that would be good and
then maybe I'll just like put them both
then maybe I'll just like put them both
right near the center just to see if
right near the center just to see if
they like they fight each other or
they like they fight each other or
whatever um and from there we can maybe
whatever um and from there we can maybe
get to NPCs in the next few hours we
get to NPCs in the next few hours we
will see I got I think I got like a full
will see I got I think I got like a full
three three and a half hours today yeah
three three and a half hours today yeah
okay hopefully that's enough to entice
okay hopefully that's enough to entice
people to stick around cuz I do need to
people to stick around cuz I do need to
take a couple quick minutes to use the
take a couple quick minutes to use the
restroom and make myself a shake so I
restroom and make myself a shake so I
will be right back and then we will do
will be right back and then we will do
that I will be
quick
e
e
e
e
e
e e
okay cheers
one of my projects in undergrad was
one of my projects in undergrad was
making an ntid detector with the Dota 2
making an ntid detector with the Dota 2
mini
mini
map yeah absolutely link it that sounds
map yeah absolutely link it that sounds
awesome
and then I'll talk about the uh the ECS
and then I'll talk about the uh the ECS
stuff that's pretty
stuff that's pretty
awesome Sammy
BG I do it did I type it
right it's uh what
right it's uh what
Sami is it yeah it might be
private um anyways uh for the new folks
private um anyways uh for the new folks
here if uh you haven't starred puffer
here if uh you haven't starred puffer
lib and you want to help me out a whole
lib and you want to help me out a whole
ton just give this project GitHub puffer
ton just give this project GitHub puffer
AI puffer lib give it a star uh it helps
AI puffer lib give it a star uh it helps
me out a whole
me out a whole
ton and uh let's talk about uh ECS stuff
ton and uh let's talk about uh ECS stuff
so okay so yeah this works now
so okay so yeah this works now
um cool I will check this out I've got
um cool I will check this out I've got
it starred thank
it starred thank
you so let's talk about cool ECS stuff
you so let's talk about cool ECS stuff
um this is technically upcoming Tech
um this is technically upcoming Tech
that uh I'm going to make a longer video
that uh I'm going to make a longer video
on uh so you get to see it early uh
on uh so you get to see it early uh
since this is live
since this is live
um the way that it works is you can
um the way that it works is you can
Define
Define
structs in
structs in
C that mirror numpy structure arrays in
C that mirror numpy structure arrays in
Python and you can apply operations to
Python and you can apply operations to
those structs uh as if you were applying
those structs uh as if you were applying
them to arrays you can do like players.
them to arrays you can do like players.
health and you can get all the players
health and you can get all the players
health and update it or whatever or you
health and update it or whatever or you
can do like you know players of five.
can do like you know players of five.
health and get just one player's Health
health and get just one player's Health
uh and it's really sweet because you can
uh and it's really sweet because you can
do these operations in python or in scon
do these operations in python or in scon
and they're incredibly incredibly fast
and they're incredibly incredibly fast
uh so that's what we're going to do
uh so that's what we're going to do
uh that's what we're going to do
uh that's what we're going to do
here I'm going to go get a couple
here I'm going to go get a couple
Snippets of code to start us off let me
Snippets of code to start us off let me
go grab those from
go grab those from
my one of the other projects I
have and we're going to go from there
okay so this specific snippet I was
okay so this specific snippet I was
looking
for yes
so this is the magic snippet right
here you get to make a dummy player and
here you get to make a dummy player and
get it dtype and then we get to do uh
get it dtype and then we get to do uh
like struct let's do like um struct
like struct let's do like um struct
player and then we can do
player and then we can do
say uh int
say uh int
uh
uh
Team it can
Team it can
do uh
do uh
in what do you do int is in should
in what do you do int is in should
Health be a in or float probably float
Health be a in or float probably float
float
Health
Health
position or Y
position or Y
X we can do some stuff like this
X we can do some stuff like this
right and then the python side of this
right and then the python side of this
is going to
be hold
on let me figure out where it
on let me figure out where it
is yeah so on the python
side we're going to make
players which is going to be however
players which is going to be however
many ins we
defined we're not going to need agent
defined we're not going to need agent
positions anymore either it's just going
positions anymore either it's just going
to be self.
to be self.
players
players
zeros uh D type is going to be nump
zeros uh D type is going to be nump
in C
in C
maybe
maybe
on not quite sure how to do it with
on not quite sure how to do it with
mixed uh data
types oh I think it just has to be the
types oh I think it just has to be the
same number of
bytes no wait I don't have to do this at
bytes no wait I don't have to do this at
all I can just
all I can just
do here player dtype
do here player dtype
equals
uh player D
uh player D
type the
type the
overa
oops player D type
right so we just need to get player D
type
type
player key type and then we do self.
player key type and then we do self.
players is going to just be numpy do
Zer num agents you just need like this
Zer num agents you just need like this
and then dtype is
and then dtype is
dype and then let's see uh if this is
dype and then let's see uh if this is
enough already I think this should
work hello
work hello
Krypto welcome
building
building
failed
failed
okay I think I just forgot to
rebuild welcome to the
rebuild welcome to the
development uh struct player what is
development uh struct player what is
wrong with struct
player I messed something
player I messed something
up hold
up hold
on am I just forgetting
on am I just forgetting
syntax it might
be is it does it need a c def on it yeah
be is it does it need a c def on it yeah
it needs a c def on it that's why duh
it needs a c def on it that's why duh
it's a c
it's a c
thing C
thing C
def
oops
oops
ah C death struck player okay so now now
ah C death struck player okay so now now
we should be able to have the the magic
we should be able to have the the magic
happen no no apparently
happen no no apparently
not inconsistent
indentation
oh and then we have to import
numpy and that looks
numpy and that looks
good so
good so
now what we're going to do is we're
now what we're going to do is we're
going to see if we have access to the
going to see if we have access to the
struct in Python which I think we should
struct in Python which I think we should
already taking a weirdly long amount of
already taking a weirdly long amount of
time okay but here so we
time okay but here so we
have perfect so self. players is this
have perfect so self. players is this
type
type
players can I do that team no there's
players can I do that team no there's
one other step we need before we get
one other step we need before we get
like the really nice uh Syntax for
like the really nice uh Syntax for
accessing this stuff hold on where did
accessing this stuff hold on where did
my
my
where did my thing go the
map I just had
this bear with me I'm grabbing Snippets
this bear with me I'm grabbing Snippets
from another thing that I
wrote uh there's one one additional step
wrote uh there's one one additional step
I'm trying to remember
type oh right there's a view on it uh
view players
view players
Rec equals uh self. players. view numpy
Rec equals uh self. players. view numpy
Rec
Rec
array okay now if we run
array okay now if we run
this you're going to see something
this you're going to see something
really
cool this is a Rec array we can do. team
cool this is a Rec array we can do. team
and we get access to the variables
and we get access to the variables
representing team do Health we get
representing team do Health we get
access to health uh we can also do like
access to health uh we can also do like
players wreck of
players wreck of
zero and we get access to the first
zero and we get access to the first
agent which is a struct
agent which is a struct
we can do
we can do
health and you essentially have mini
health and you essentially have mini
mini entity component system like
that in like few lines of
code so now what we have to do is um a
code so now what we have to do is um a
little bit more finicking with stuff
little bit more finicking with stuff
because I got to pass players to uh the
because I got to pass players to uh the
C
environment so let me go remember how I
environment so let me go remember how I
was supposed to do
that I
pass
pass
uh I make this the end
uh I make this the end
players right so I think I have to pass
players right so I think I have to pass
pass the flat
pass the flat
data to
data to
I pass the flat
I pass the flat
data
yeah so I'm going to do like this so I
yeah so I'm going to do like this so I
get the rec
get the rec
array and then when I pass
array and then when I pass
this to the C
this to the C
environment um I'm going to pass it as
environment um I'm going to pass it as
bytes I
believe so this is going to be solved up
believe so this is going to be solved up
players. viw
players. viw
ent8 and hopefully that will let me do
ent8 and hopefully that will let me do
what I want to
do now we're of course we're going to
do now we're of course we're going to
have to modify a few things so this is
have to modify a few things so this is
no longer a float array player positions
no longer a float array player positions
this is now going to be a player
this is now going to be a player
star players
hi I'm from Vietnam and really
hi I'm from Vietnam and really
interested in rl2 inspired by Alpha zero
interested in rl2 inspired by Alpha zero
opening I will be cool to know your
opening I will be cool to know your
reasons for not taking the path of pain
reasons for not taking the path of pain
and suffering like
RL I think I have I have taken the path
RL I think I have I have taken the path
of pain here right there's been very
of pain here right there's been very
very much suffering involved with making
very much suffering involved with making
RL work um I'm currently attempting to
RL work um I'm currently attempting to
make RL involve much less
make RL involve much less
suffering that is the main goal of what
suffering that is the main goal of what
I'm doing
here welcome to the stream
though observations here players so this
though observations here players so this
is now going to be
is now going to be
players uh and we're going to move this
players uh and we're going to move this
is self. players equals players and I
is self. players equals players and I
think there's a cast of some type that
think there's a cast of some type that
we have to do here if I recall correctly
we have to do here if I recall correctly
I did this I have like this test I have
I did this I have like this test I have
set up on the other monitor from when I
set up on the other monitor from when I
I set this up before to do this
I set this up before to do this
um let me go find the little snippet I
um let me go find the little snippet I
managed to get it done without Malex if
managed to get it done without Malex if
I recall which I was pretty proud of uh
I recall which I was pretty proud of uh
getting it h yeah it's very easy it's
getting it h yeah it's very easy it's
just a it's a very simple cast so this
just a it's a very simple cast so this
is just going to be a player
is just going to be a player
star cast of players. data and that's it
and this is now just players.
shape uh and now this is y equals self.
shape uh and now this is y equals self.
players and look how much nicer this
players and look how much nicer this
is we can Havey we can
havex we can do the exact same thing
havex we can do the exact same thing
here
and we'll be able to vectorize this as
well
well
okay and with a little bit of finicking
okay and with a little bit of finicking
around we should hopefully be able to
around we should hopefully be able to
get this to build and get this to
get this to build and get this to
run Maybe
puffer mooba has no attribute okay agent
puffer mooba has no attribute okay agent
positions perfect we just fix that real
quick so this is just going to be self.
quick so this is just going to be self.
players uh
players uh
dot hold
ony equals p
array uh and this is going to be
96 and
thenx and self. grid this is
thenx and self. grid this is
fine uh agent positions is going to
fine uh agent positions is going to
be self upop
be self upop
is self. players. y self. players. x
is self. players. y self. players. x
it's actually kind of cleaner than
it's actually kind of cleaner than
before and
uh I think that's
uh I think that's
it what's the twitch link or user uh
it what's the twitch link or user uh
twitch is J Suarez 5341 exact same as I
twitch is J Suarez 5341 exact same as I
guess on Twi on Twitter and the YouTube
guess on Twi on Twitter and the YouTube
is the neur is neural MMO so it's
is the neur is neural MMO so it's
different I may eventually change the
different I may eventually change the
neural Channel if uh puffer gets bigger
neural Channel if uh puffer gets bigger
or you know my personal gets bigger but
or you know my personal gets bigger but
since people know neural MMO now I'm
since people know neural MMO now I'm
still just leaving that as
still just leaving that as
is okay got differing extents and
is okay got differing extents and
dimension zero you're assigning all
dimension zero you're assigning all
players on the grid to agent One agent
players on the grid to agent One agent
one is just the color um yeah agent one
one is just the color um yeah agent one
is just a color we haven't implemented
is just a color we haven't implemented
colors in this so this code is being
colors in this so this code is being
reused for my continuous control engine
reused for my continuous control engine
that I built over the last few days uh
that I built over the last few days uh
so you know I had like a few hundred
so you know I had like a few hundred
lines of starter code code that I wrote
lines of starter code code that I wrote
and I'm like repurposing it so not
and I'm like repurposing it so not
everything has been retro fitted
everything has been retro fitted
perfectly never heard of raray until now
perfectly never heard of raray until now
Game Changer yes they're an absolute
Game Changer yes they're an absolute
Game Changer once you figure out how
Game Changer once you figure out how
they work they are a total pain in the
they work they are a total pain in the
ass until then but I will tell you that
ass until then but I will tell you that
uh using raray as the backend for puffer
uh using raray as the backend for puffer
like that is what I use for the secret
like that is what I use for the secret
sauce behind puffer's emulation core
sauce behind puffer's emulation core
layer that makes everything else work
layer that makes everything else work
and it is amazing when you get it
okay so what has happened here that this
okay so what has happened here that this
does
does
not work
um compute
observations h
it's possible that
um it's possible that this is just not
um it's possible that this is just not
interpreting the data right
here let's check this out uh
here let's check this out uh
so print Y and
X let's see if it's like giving us
X let's see if it's like giving us
garbage or not
garbage or not
is is possible that we need to uh pass
is is possible that we need to uh pass
some stuff a little
differently yes so this is not uh this
differently yes so this is not uh this
is not being cleared or this is not
is not being cleared or this is not
being passed
being passed
correctly um let's figure out
correctly um let's figure out
why self. players
why self. players
you pass in players you get the player
you pass in players you get the player
data
right oh it's the view
right oh it's the view
right so self.
right so self.
player let's do
um well I know that there's the way I
um well I know that there's the way I
did it before works but I
did it before works but I
it's a little bit obnoxious because you
it's a little bit obnoxious because you
need the specific number of
bites let me just play with it here for
bites let me just play with it here for
a
second so this is like the tricky thing
second so this is like the tricky thing
is you have to get the data synced up
is you have to get the data synced up
between C and Python and then you're
between C and Python and then you're
good as soon as you have it synced up
good as soon as you have it synced up
you're good uh and then you basically
you're good uh and then you basically
have a view that you can modify from
have a view that you can modify from
either side
type D type dot uh item
type D type dot uh item
size is
size is
16 yeah that looks good right so I just
16 yeah that looks good right so I just
do s.
do s.
players dtype
players dtype
uh here it's num
uh here it's num
agents it's going to
agents it's going to
be D type. item size
be D type. item size
and then it's going to be numpy doint 8
and then it's going to be numpy doint 8
like this
like this
maybe okay and then this is players flat
maybe okay and then this is players flat
I guess and then self. players equals
I guess and then self. players equals
self. players. vwd type. view numpy Rec
array
array
no you got to do from buffer I think in
no you got to do from buffer I think in
order to not copy I think this view will
order to not copy I think this view will
actually copy under the hood from
from buffer dtype equals dtype do view
from buffer dtype equals dtype do view
okay this is it I think this is it so
okay this is it I think this is it so
you make it in bytes you make just the
you make it in bytes you make just the
bytes you buffer it into the dtype and
bytes you buffer it into the dtype and
then you view it as a Reay that should
then you view it as a Reay that should
that should work and then of course in
that should work and then of course in
uh in the reset or whatever you have to
uh in the reset or whatever you have to
do this is self. players uh flat and
do this is self. players uh flat and
it's already a un tap so you're good
where are Rec Rays used in puffer lib
where are Rec Rays used in puffer lib
I'm not seeing
I'm not seeing
it I will show
you so the secret sauce that makes
you so the secret sauce that makes
puffer lib work is this one file right
puffer lib work is this one file right
here 42 lines uh it's this emulation
here 42 lines uh it's this emulation
file and right here this struct D type
file and right here this struct D type
thing this is is making a uh a
thing this is is making a uh a
structured array which is like the same
structured array which is like the same
as a Rec array um so this is creating a
as a Rec array um so this is creating a
uh the well where is
uh the well where is
it D type from space yes so we're
it D type from space yes so we're
creating a structured numpy data type
creating a structured numpy data type
which we are then using to store our
which we are then using to store our
data so this is this is it right here
data so this is this is it right here
this creates the type and then we use
this creates the type and then we use
this type
this type
everywhere and all the emulation relies
everywhere and all the emulation relies
on this
uh so we're still getting something
uh so we're still getting something
weird here I
think are we did I rerun
this
H
H
interesting I should be able to tell
interesting I should be able to tell
from right
here is
flat looks like the data was populated
flat looks like the data was populated
right in
here
here
view layer dtype
view layer dtype
yeah right this
yeah right this
works you can see it right
here so why is it not
here so why is it not
working players
working players
oh I know I know why I'm dumb um yeah
oh I know I know why I'm dumb um yeah
I'm
I'm
dumb uh I'm going to make a g player
dumb uh I'm going to make a g player
function just to prevent myself from
function just to prevent myself from
making this mistake this is my one major
making this mistake this is my one major
complaint uh and it's it's a complaint
complaint uh and it's it's a complaint
about C but really like scon should have
about C but really like scon should have
taken this feature from python instead
taken this feature from python instead
of from C uh structs are passed by value
of from C uh structs are passed by value
not by
not by
reference uh that's why it's it's really
reference uh that's why it's it's really
easy
easy
that's why it's really easy to screw
up okay
up okay
so
so
cdef player
cdef player
star get
star get
player uh
player uh
environment uh
environment uh
n or
n or
uh no
uh no
it's self you don't need the environment
it's self you don't need the environment
it's just self and then
it's just self and then
int uh PID just player ID then you
int uh PID just player ID then you
return it's no this is wrong see it's
return it's no this is wrong see it's
giving you the wrong wrong return it's
giving you the wrong wrong return it's
andersan self. players of PID you need
andersan self. players of PID you need
to return a reference or uh you you know
to return a reference or uh you you know
you're just screwed like you're making a
you're just screwed like you're making a
copy without realizing it that is
why I don't know if that fully explains
why I don't know if that fully explains
what went wrong but I know that that is
what went wrong but I know that that is
potentially the uh the issue here
potentially the uh the issue here
so uh this cast should be fine this is a
so uh this cast should be fine this is a
cast and
then player star
then player star
player player is get player
yeah and what you do is you do uh this
yeah and what you do is you do uh this
is going to be see def player star
is going to be see def player star
player we do player is going to be get
player we do player is going to be get
player old R and actually makes
player old R and actually makes
everything cleaner it's just you need
everything cleaner it's just you need
this one function because otherwise you
this one function because otherwise you
forget ERS ends and you're
screwed and then we do player doy player
screwed and then we do player doy player
dox so it's actually cleaner but you
dox so it's actually cleaner but you
have to uh you have to like fix stuff
up and uh anywhere else i' imagine right
up and uh anywhere else i' imagine right
here probably player star
here probably player star
player do player is going to be get
player do player is going to be get
player Y is going to be player. y
player Y is going to be player. y
player. x
and then we
and then we
do player. y player. x
perfect and let's see if this gets us
perfect and let's see if this gets us
let's see if this gets it for
us still got differing extents so
us still got differing extents so
something is very very odd um that this
something is very very odd um that this
is not not working
immediately because this should be the
immediately because this should be the
same
same
data and we should be able to like print
data and we should be able to like print
this
this
even
um grid players observations
I'm trying to think how I screwed this
I'm trying to think how I screwed this
up it looks fine to
me is there like some bite ordering
me is there like some bite ordering
Shenanigans going on maybe
I wonder if I can just do self.
I wonder if I can just do self.
players uh.
players uh.
data right and then if I do
data right and then if I do
Coba can I just
Coba can I just
do
do
players like this since I just gave it
players like this since I just gave it
the data does that
the data does that
work oops I got to recompile
work oops I got to recompile
that might do
that might do
it it's also possible I have a separate
it it's also possible I have a separate
bug that I'm not aware
of yeah okay so that didn't help I'm
of yeah okay so that didn't help I'm
going to not stick with that because
going to not stick with that because
it's confusing
can I tell what is wrong just by doing
this players.
this players.
x this all looks
x this all looks
good all looks good um
self
self
players. y. dtype
oh wait wait wait uh self. players
oh wait wait wait uh self. players
flat it's weird that this is actually
flat it's weird that this is actually
work it looks like it's working I would
work it looks like it's working I would
think that you would have to do like
think that you would have to do like
you'd have to like copy this in like
you'd have to like copy this in like
this
this
maybe but I guess
maybe but I guess
not um self. players x.d Type L 32 I'm
not um self. players x.d Type L 32 I'm
going to try like this just to see if
going to try like this just to see if
this makes a difference
this makes a difference
I don't think it does
though yeah
though yeah
no very
no very
weird oh yeah well it shouldn't because
weird oh yeah well it shouldn't because
it's a copy yeah that's fine
it's a copy yeah that's fine
um
um
ah why is this not mirroring the data
ah why is this not mirroring the data
correctly I'm going to have to just
correctly I'm going to have to just
start putting prints in the C code or
start putting prints in the C code or
the syon code
okay let's see what this
okay let's see what this
says this should tell us if uh the data
says this should tell us if uh the data
is getting into scon correctly
okay what does it say so it
says that's not
says that's not
good
um just got to know your X account
um just got to know your X account
recently we'll look through the entire
recently we'll look through the entire
re but when I have time I just started
re but when I have time I just started
applying RL and trading I don't know
applying RL and trading I don't know
whether it's a myth or not
whether it's a myth or not
uh it seems like a great way to either
uh it seems like a great way to either
gain or lose a lot of money I will say
gain or lose a lot of money I will say
that hopefully I can get something to
that hopefully I can get something to
work best of luck to you do not lose all
work best of luck to you do not lose all
your
money I think I literally just replied
money I think I literally just replied
to somebody on on X uh today with the
to somebody on on X uh today with the
like and it's gone Simpsons meme with
like and it's gone Simpsons meme with
like rln Trading
where is the like the and it's
gone yeah this
gone yeah this
one oh I guess it's South Park
I'm curious why this
thing why this thing is it's getting
thing why this thing is it's getting
some
some
data but it's not getting the data I
data but it's not getting the data I
expect it to be
getting what if I make them all floats
getting what if I make them all floats
does that make a
does that make a
difference it shouldn't right
is it casting
is it casting
wrong something
shouldn't
be self. players
be self. players
equals player star players.
data
data
uh maybe you need to have the the data
uh maybe you need to have the the data
type on it but I don't think that should
type on it but I don't think that should
matter
I think that should matter right
oh that did
oh that did
matter okay so that's really weird you
matter okay so that's really weird you
need the uh the data type on here to
need the uh the data type on here to
correctly transfer the data if you don't
correctly transfer the data if you don't
actually type it you get the wrong data
actually type it you get the wrong data
that's really
that's really
weird I'm going to leave this printting
weird I'm going to leave this printting
for
for
now um what else what are what are the
now um what else what are what are the
other errors agent positions oh yeah
other errors agent positions oh yeah
that's
easy okay well we found it
easy okay well we found it
uh so this is
uh so this is
now self. players. y look how clean this
now self. players. y look how clean this
is by
comparison ooh we got it look this is
comparison ooh we got it look this is
what we have
so we got the agents running around
so we got the agents running around
they're parameterized by strs meaning we
they're parameterized by strs meaning we
can do a lot more stuff with them they
can do a lot more stuff with them they
run around our
run around our
environment very very
nice um what do we add next do we add an
nice um what do we add next do we add an
attack
action oh you hadn't seen this before
action oh you hadn't seen this before
yeah we built this in the last couple
yeah we built this in the last couple
hours I guess we had the continuous
hours I guess we had the continuous
control engine to start
control engine to start
with yeah we'll give agents we'll make
with yeah we'll give agents we'll make
different like agent types and stuff
different like agent types and stuff
hold on it takes time but yeah so this
hold on it takes time but yeah so this
is the uh I mean I did this in uh I did
is the uh I mean I did this in uh I did
this in Photoshop I just like you know
this in Photoshop I just like you know
traced around the DOTA map in two
traced around the DOTA map in two
layers uh I'm like imported it into the
layers uh I'm like imported it into the
engine here that I made and now we have
engine here that I made and now we have
the agents wandering around on here uh
the agents wandering around on here uh
and yeah it's pretty
cool just need uh need tracking and
cool just need uh need tracking and
pathf finding for creeps yes we do need
pathf finding for creeps yes we do need
that let's start with some basic attacks
that let's start with some basic attacks
first
right and teams and stuff going to use
right and teams and stuff going to use
the restroom real quick back in one
the restroom real quick back in one
minute and then what we're going to do
minute and then what we're going to do
is we're going to try to get this into a
is we're going to try to get this into a
spot where like it vaguely resembles
spot where like it vaguely resembles
agents fighting on a MOA map and that's
agents fighting on a MOA map and that's
going to be the goal for
now we may or may not get to creeps
now we may or may not get to creeps
we'll
see
e e
okay
we are
we are
set for another two hours of depth at
least and a polish off the
shake hit the 255 bench today happy with
shake hit the 255 bench today happy with
that got to keep it up
let me think
here okay
here okay
so next thing we're going to do
is we're going to add basic attacks in
is we're going to add basic attacks in
I'd
I'd
say
so let's do the
um let's do this side
first we're going to
do this is going to be
do this is going to be
four you can
four you can
attack up down left
attack up down left
right um obviously this is just the
right um obviously this is just the
discrete version which is easier to
discrete version which is easier to
think about to start with we'll make it
think about to start with we'll make it
continuous as well whatever
uh and we should also make the player
uh and we should also make the player
Health
Health
um yeah we should also edit the player
um yeah we should also edit the player
Health in the
Health in the
m.y let's do
m.y let's do
oops Z MOA
oops Z MOA
pix let just give them three Health to
pix let just give them three Health to
start
just so that
we where is
this health is going to be numpy
this health is going to be numpy
dot
array dp. On's
10 three time time the type i. float 32
10 three time time the type i. float 32
self. players. team we like
self. players. team we like
this uh was
this uh was
team zero
team zero
oops zero
zero type is numpy do
zero type is numpy do
float 32 I think this one's in 32
float 32 I think this one's in 32
actually
actually
right okay
now we have to add the attack action
now we have to add the attack action
into
here um so what we're going to do is we
here um so what we're going to do is we
have uh the
have uh the
movement and the attacks have to happen
movement and the attacks have to happen
before the movement
so um we need to
so um we need to
do
int
attack so
where's player
dox we can totally put these up
here and then we'll
here and then we'll
do Tac
do Tac
zero we'll do
uh we need Target as well
right well what we do is we'll do Dr and
right well what we do is we'll do Dr and
DX
right dust y dust X
maybe yeah let's do
d y = y xal
d y = y xal
x so this is going to
x so this is going to
be like
be like
this
LF okay so now we have the destination
LF okay so now we have the destination
of text
um we can do like
um we can do like
this then we
do
do
if Rd is equal
to what's player agent one is
three
three
agent
agent
one and what we do is we need a Target
player
Target Target is going to be get
Target Target is going to be get
player I don't know why it's filled this
player I don't know why it's filled this
this Auto filled this
garbage uh we
garbage uh we
need what Target ID
shoot we don't have any way right now of
shoot we don't have any way right now of
getting uh player IDs do
getting uh player IDs do
we yeah we don't have any good way of
we yeah we don't have any good way of
getting player
IDs we need to add a player ID map don't
IDs we need to add a player ID map don't
we H that's
we H that's
unfortunate yeah that's very
unfortunate yeah that's very
unfortunate I makes it
harder any way I can hack this for the
harder any way I can hack this for the
time being
not
not
really okay we're going to have to do a
really okay we're going to have to do a
a slightly annoying thing we got to go
a slightly annoying thing we got to go
make a player ID map
we do
we do
um
um
unsigned
unsigned
int pids or PID
int pids or PID
map and then
um self. PID
um self. PID
map numpy do
map numpy do
Zer 32
this see into I yeah okay
this see into I yeah okay
so
so
player PID
um you can't quite do this either
um you can't quite do this either
because you got to
because you got to
do into
do into
YX int player.
YX int player.
y self. PID map YX equal to I
y self. PID map YX equal to I
okay so now we have the
okay so now we have the
pids and what we get to
do int Target PID
okay so we get to
okay so we get to
do uh Target PID is going to be self.
do uh Target PID is going to be self.
PID
PID
map and then we actually have to do i+
map and then we actually have to do i+
one at the top because pids have to
one at the top because pids have to
start
start
from pids have to start
from pids have to start
from no no wait we do there's a trick to
from no no wait we do there's a trick to
this you do minus one and then you make
this you do minus one and then you make
this uh a you make this a signed integer
this uh a you make this a signed integer
that way you don't have to do a weird
that way you don't have to do a weird
offset on your pit map I learned that
trick so now you have Target
PID going be the PID map just y just X
PID going be the PID map just y just X
you say if Target pit is not equal to
you say if Target pit is not equal to
negative 1 you get the
negative 1 you get the
target target at
target target at
team
team
is not equal the player. team then you
is not equal the player. team then you
do target. health is negative minus
do target. health is negative minus
equal to
one um and if target.
health is less than or equal to zero
health is less than or equal to zero
then we need to do a a respawn
then we need to do a a respawn
thingy so what we're going to do is
thingy so what we're going to do is
we're just going to hardcode some
we're just going to hardcode some
respawn points I
think we're going to go hardcode these
think we're going to go hardcode these
uh these agent positions into the C
uh these agent positions into the C
code the
code the
scon wherever this
scon wherever this
is
somewhere yeah right here
somewhere yeah right here
so all this crap we
so all this crap we
can we can hardcode we can get this into
can we can hardcode we can get this into
the scon
layer
layer
and where they do self. players they're
and where they do self. players they're
right
right
here so now what we do is
uh
spawn we can do we do spawn X spawn
y I guess
I less than
I less than
five we
five we
do what's it our self. num agent over
two got team equals zero
two got team equals zero
do
do
spawn uh Y is
spawn uh Y is
96 is this plus
I randomly in a circle in a
I randomly in a circle in a
corner yeah I don't want to have to
corner yeah I don't want to have to
write the function for that so I'm being
write the function for that so I'm being
lazy for now but
yes this is what
32 plus I
minus agents over
minus agents over
two yeah okay so this is this and then
two yeah okay so this is this and then
we do uh player. Health l. health is
we do uh player. Health l. health is
equal to
equal to
three and we can get rid of all this
garbage
garbage
this
YX and we have
YX and we have
YX PID
YX PID
map solid
okay so
okay so
now we can respawn the agent
now we can respawn the agent
right if they fight each
other can respawn the agent if they kill
other can respawn the agent if they kill
each
other Target
we should make a move
too I think we should make like a move
to move
to move
to uh
to uh
self in
self in
PID so players going to be the
PID so players going to be the
player player. X player.
player player. X player.
Y uh we have move this and then we have
Y uh we have move this and then we have
to do we have to get the grid
to do we have to get the grid
position
cev we do
float
float
disk dis y dis
disk dis y dis
X so we do dis y dis
X so we do dis y dis
X I don't know why I did all that that
X I don't know why I did all that that
garbage self
garbage self
dot grid is going to be
dot grid is going to be
empty now
empty now
what makes actually no
what makes actually no
sense HD this is des y dest x right
I don't know why it keeps giving me
I don't know why it keeps giving me
these garbage
suggestions
so self.
so self.
grid into player. Y into of player. X is
grid into player. Y into of player. X is
going to be empty
int y so we don't need this we can just
int y so we don't need this we can just
do like this agent
one do self.
PID
PID
map self.
map self.
PID
PID
app in
app in
player okay okay so I think this does
player okay okay so I think this does
it this moves the
it this moves the
agent I thought he used C this is cython
agent I thought he used C this is cython
this compiles to c and I check it so
this compiles to c and I check it so
that uh all the operations that are
that uh all the operations that are
critical compile perfectly to C with no
critical compile perfectly to C with no
calls back to python so what you're
calls back to python so what you're
seeing is one to one with C with
seeing is one to one with C with
additional fun
features and it heck of a lot quicker to
write uh if you want to actually see the
write uh if you want to actually see the
C by the way there's a heck of a lot of
C by the way there's a heck of a lot of
it because it's autoc compiled to this
it because it's autoc compiled to this
uh but it is it is very
fast love me some scon
since I see we have a few folks watching
since I see we have a few folks watching
this including a couple on Twitch which
this including a couple on Twitch which
is kind of cool to see
is kind of cool to see
um if you all want to help me out just
um if you all want to help me out just
star the repo on GitHub it helps me a
star the repo on GitHub it helps me a
ton it's just puffer AI SLP puffer
ton it's just puffer AI SLP puffer
lib working on this fulltime really all
lib working on this fulltime really all
I
ask okay back to Dev
target. Health equals
target. Health equals
3 and then move
3 and then move
to we're going to move the target
to we're going to move the target
to again I don't know why it gives me
to again I don't know why it gives me
bad suggestions it's supposed to be
bad suggestions it's supposed to be
Target spawn y Target spawn
Target spawn y Target spawn
X
X
okay and uh I should just be able to do
okay and uh I should just be able to do
self. respawn
self. respawn
and we'll just make a little inline for
and we'll just make a little inline for
this because I think we'll probably use
this because I think we'll probably use
this a fair bit
right he. move to Target
right he. move to Target
PID uh in
PID player C
PID player C
death then we just do
death then we just do
player do
player do
spawn C
spawn C
def yeah this should be a c def this
def yeah this should be a c def this
should be a c def so they're
should be a c def so they're
fast you don't call back to
Python and uh this respawn the reason I
Python and uh this respawn the reason I
wanted to do this as well so I can reset
wanted to do this as well so I can reset
the
the
health like
this player. health is going to be
this player. health is going to be
three okay okay
three okay okay
solid
solid
so from
so from
here Target
here Target
PID uh Target
team and Target Health
perfect you respawn the
target um and that should be sufficient
target um and that should be sufficient
I'm sure there's going to be some small
I'm sure there's going to be some small
stuff to
debug like right
here where did I
miss grid 156
ah and then move
to
PID expected three got
four C
def this is a should be a
comma does it
run buffer
run buffer
mismatch ah
mismatch ah
72 this needs to be an in 32
seg fall
seg fall
lovely uh so this is one of the places
lovely uh so this is one of the places
where scyon is so nice compared to base
where scyon is so nice compared to base
C so base C right there no bounce checks
C so base C right there no bounce checks
or anything cuz doing that slow and
or anything cuz doing that slow and
scyon they're optional
scyon they're optional
so you can compile with or without
so you can compile with or without
them if you compile with them it's fast
them if you compile with them it's fast
and if you compile without them it's
and if you compile without them it's
slow but it's easy so we can Dev without
slow but it's easy so we can Dev without
the checks and then we can you know
the checks and then we can you know
productionize afterwards
with and then we get a actually
with and then we get a actually
reasonable error here right
uh and we can see that I forgot to
uh and we can see that I forgot to
initialize Y and
initialize Y and
X
right that would take me a long time to
right that would take me a long time to
find in uh in C
okay got differing
extents so uh it appears
that I also have to set player. X and Y
that I also have to set player. X and Y
of course I forgot to do that so player.
of course I forgot to do that so player.
y player dox we set these to the
spawn we're probably going to have to
spawn we're probably going to have to
set the spawn close to the Center for
set the spawn close to the Center for
starters
does it run yet let's
see perfect so this already
see perfect so this already
runs we'll see whether the attack
runs we'll see whether the attack
function works when I put the agents
function works when I put the agents
close to each other um but this already
close to each other um but this already
Works Let's uh let's color the agents a
Works Let's uh let's color the agents a
little bit
little bit
differently just so we can
differently just so we can
see maybe
team
agent really crappy code but we'll do
agent really crappy code but we'll do
this just as a quick
this just as a quick
check so we get a renderer
okay so now they're two different colors
okay so now they're two different colors
so we can actually see what's going on
right and now all we have to do is we
right and now all we have to do is we
have to guess a a position close to the
have to guess a a position close to the
Center for these guys
so I don't know let's
so I don't know let's
do it's a 128x 128
do it's a 128x 128
right so let's just do
like this will be
like this will be
like
uh plus
uh plus
I and then the X will be
I and then the X will be
like 62 or
like 62 or
something and then this one will be
something and then this one will be
spawn y y will be 64 +
spawn y y will be 64 +
I and then this will be like
I and then this will be like
66 let's see if that does
66 let's see if that does
it that might they may or may not be in
bounds okay
did I just see one
respawn well they're definitely been
respawn well they're definitely been
they've definitely attacked each other a
they've definitely attacked each other a
few
times but pretty
times but pretty
cool so already we have something basic
cool so already we have something basic
working it looks like oh yeah I just saw
working it looks like oh yeah I just saw
one of them die there and
one of them die there and
respawn I'm pretty
sure okay so we have something
sure okay so we have something
reasonable um now what we need is creeps
reasonable um now what we need is creeps
I guess is there anything we should do
I guess is there anything we should do
before
creeps I think not I think that the uh
creeps I think not I think that the uh
the creep should be fine now the one
the creep should be fine now the one
thing that's a little Annoying with the
thing that's a little Annoying with the
creeps is they kind of have like a fixed
creeps is they kind of have like a fixed
path that they
path that they
follow all right unless they get
follow all right unless they get
distracted
distracted
so I have to figure out how that AI is
so I have to figure out how that AI is
implemented
implemented
efficiently that's the main thing
how would you implement the DOTA creep
how would you implement the DOTA creep
AI thing or like the just the
AI thing or like the just the
um MOA creep AI in general
so that's going to be hard but I guess
so that's going to be hard but I guess
that's one of the few actually kind of
that's one of the few actually kind of
really hard
really hard
things uh to start with
and we can just start on
it we can do uh
C this can be
C this can be
creep one
creep I'm going to make the creep
creep I'm going to make the creep
separate for now
separate for now
because I know I'm going to need to
because I know I'm going to need to
anyways like the heroes are going to get
anyways like the heroes are going to get
a bunch of stuff that the creeps aren't
a bunch of stuff that the creeps aren't
going to get
and then what I do is I do uh
and then what I do is I do uh
if hid great less than
if hid great less than
equal or self num
equal or self num
agents otherwise you return creeps
yep and
something like a list of way points that
something like a list of way points that
they move towards and are removed when
they move towards and are removed when
they get reasonably close to each
they get reasonably close to each
point
point
yeah it's something like that
yeah it's something like that
right but you really don't want to run
right but you really don't want to run
uh any sort of search algorithm if you
uh any sort of search algorithm if you
can avoid
can avoid
it like you really don't want to have
it like you really don't want to have
like dyras or um AAR anything like that
like dyras or um AAR anything like that
running
I probably could get it to be reasonably
I probably could get it to be reasonably
fast but
still um welcome to the stream Roman I
still um welcome to the stream Roman I
don't know if you've been around but
don't know if you've been around but
this is where we are so
this is where we are so
far add the towers with very small
far add the towers with very small
reward for
attacking yeah so this is where we are
attacking yeah so this is where we are
for now we got a map we've got agents
for now we got a map we've got agents
they can attack each other um I think
they can attack each other um I think
that they might randomly disappear once
that they might randomly disappear once
in a while I can't quite tell they do
in a while I can't quite tell they do
seem to respawn correctly
seem to respawn correctly
though that's
reasonable okay let's just start on the
reasonable okay let's just start on the
uh the creeps
so uh I probably want to make the Creeps
so uh I probably want to make the Creeps
in Python right
so player type creep D
so player type creep D
type and then we're going to do
type and then we're going to do
players do like self.
players do like self.
creeps
creeps
spat
spat
reaps we
reaps we
do self Dot
self do creeps is going to go
self do creeps is going to go
somewhere right here
somewhere right here
maybe creeps
maybe creeps
flat it's
flat it's
good Z
MOA
MOA
creeps self. creeps maybe creeps data
creeps self. creeps maybe creeps data
and
um and creeps are going to be a little
um and creeps are going to be a little
harder to deal with
right so
we can
do
okay
okay
one num
creeps num
creeps self. n creeps
creeps self. n creeps
creep.
creep.
shape how many creeps do we
want
want
uh let's
say kind I want a lot of them don't
you they
you they
yeah 12 times numb
agents up T agents yeah
okay yeah but you have to account for
okay yeah but you have to account for
all the different waves
right it's quite a bit of
right it's quite a bit of
logic we're going to really have to
logic we're going to really have to
figure out what we can strip down here
figure out what we can strip down here
right like if we're going to make them
right like if we're going to make them
spawn in waves or we're just going to
spawn in waves or we're just going to
spawn single creeps like what we're
spawn single creeps like what we're
going to how we're going to deal with it
right I mean there are a lot of ways we
right I mean there are a lot of ways we
could cheat it for sure
yeah they need to stop for combat yeah
yeah they need to stop for combat yeah
it's a lot of logic if you think about
it's a lot of logic if you think about
it it's actually quite a complicated
it it's actually quite a complicated
little project though if I think about
little project though if I think about
it
it
like I think actually getting the creeps
like I think actually getting the creeps
working is one of the more complicated
working is one of the more complicated
things
things
right
right
because player abilities are not that
bad I think the creeps are really the
bad I think the creeps are really the
main hard thing they're actually the
main hard thing they're actually the
main slow thing as well but they so
main slow thing as well but they so
fundamental right you can't have the
fundamental right you can't have the
game without
game without
creeps right you can't have the game
creeps right you can't have the game
without
without
um neutral like neutral
things I mean technically I could very
things I mean technically I could very
easily make this like a 15 versus
easily make this like a 15 versus
15 uh game with no creeps but I don't
15 uh game with no creeps but I don't
think that would be as
think that would be as
interesting
interesting
right you really need the
creeps just stop for combat with players
creeps just stop for combat with players
and with Towers
that's
that's
tricky it's a tricky
one but it'll be so sweet if we can do
one but it'll be so sweet if we can do
it
right we technically could make creeps
right we technically could make creeps
have their own behavior policy but it
have their own behavior policy but it
would be so much slower than just giving
would be so much slower than just giving
them something
scripted um
well maybe it wouldn't be let me
think I think if you let them have their
think I think if you let them have their
own behavior policy you're going to get
own behavior policy you're going to get
weird stuff like you're not going to get
weird stuff like you're not going to get
the creeps laning you're just going to
the creeps laning you're just going to
get like everybody running down mid or
get like everybody running down mid or
whatever
I mean the thing is like this whole
I mean the thing is like this whole
project actually becomes quite easy uh
project actually becomes quite easy uh
if we just don't do creeps or we do
if we just don't do creeps or we do
creeps at the end to come to think of it
right I mean I could try I could just
right I mean I could try I could just
work on getting like
work on getting like
reasonable player combat
reasonable player combat
first um because that will actually help
first um because that will actually help
debug a lot of stuff as well like the
debug a lot of stuff as well like the
majority of the code is probably going
majority of the code is probably going
to come from the
to come from the
creeps so yeah why don't I do that then
creeps so yeah why don't I do that then
why don't I try to implement the towers
why don't I try to implement the towers
first cuz like I roughly know how to
first cuz like I roughly know how to
implement the creeps um I've done enemy
implement the creeps um I've done enemy
NPC uh enemy Ai and scon before like
NPC uh enemy Ai and scon before like
basic enemy
basic enemy
AI but uh it does take some
AI but uh it does take some
code so why don't we do Towers
yeah yeah the aggro mechanic isn't hard
yeah yeah the aggro mechanic isn't hard
though the aggro mechanic on its own is
though the aggro mechanic on its own is
not
not
hard see because it's stationary the
hard see because it's stationary the
Agro mechanic can just be
Agro mechanic can just be
um well I know what you mean by
um well I know what you mean by
mechanics right like you have to like
mechanics right like you have to like
hit under Tower or whatever to like get
hit under Tower or whatever to like get
it to aggro away from the creep um stuff
it to aggro away from the creep um stuff
like that but initially just getting a
like that but initially just getting a
tower to attack something within its
tower to attack something within its
area of effect is not
hard so we can start with
that for
yeah and we're going to
yeah and we're going to
do nine Towers per side to start I think
right technically you have two of them
right technically you have two of them
on the inners but we can do nine Towers
on the inners but we can do nine Towers
to start
we got to pass them in as
well do player D
well do player D
type
type
Tower uh
CP okay that's now
do player creep
Tower I think I can get the tower
Tower I think I can get the tower
working in the next hour and a
working in the next hour and a
half I think I can at least do that
half I think I can at least do that
because this is not that bad so we just
because this is not that bad so we just
do Towers we add Towers to right
do Towers we add Towers to right
here right and then after creeps we're
here right and then after creeps we're
going to pass Towers in right here
oops
okay and then what we're going to do is
okay and then what we're going to do is
on
on
uh on a Knitter
uh on a Knitter
whatever we are going to
whatever we are going to
well we do self.
well we do self.
Towers self.
Towers self.
Towers
Towers
range uh self. num
range uh self. num
Towers we're going to
Define
Define
Powers
so Tower is going to be
so Tower is going to be
we can add a get Tower
we can add a get Tower
function see def
Tower we can
do so this is kind of tricky because I
do so this is kind of tricky because I
think we kind of need to just hardcode
think we kind of need to just hardcode
these because they're kind of like all
these because they're kind of like all
different which if I stop trying to be
different which if I stop trying to be
clever and I just hardcode more stuff
clever and I just hardcode more stuff
it's actually going to be way easier so
it's actually going to be way easier so
um let's
do c def Tower start Tower right and
do c def Tower start Tower right and
then we're going to do um Tower get
then we're going to do um Tower get
Tower
Tower
zero we're going to do Tower
zero we're going to do Tower
team uh Health
team uh Health
damage and we need to find positions for
damage and we need to find positions for
these so we'll do like
I think we're just going to guess and
I think we're just going to guess and
adjust them so team it's going to
have
03 this is
03 this is
fine Towery is going to be
right
here can I just get the positions from
here can I just get the positions from
like
here where can you see where you're like
here where can you see where you're like
where you're you're putting your cursor
where you're you're putting your cursor
anywhere
is there any way you can see where your
is there any way you can see where your
cursor is on
this as I can go like
this so
this so
like your
t uh herish I
t uh herish I
guess so this is like
guess so this is like
20 so 43 25
um Power is get Tower one still going to
be team is going to be zero help Dage I
be team is going to be zero help Dage I
need to get like I need to put
need to get like I need to put
it uh here which
it uh here which
is 55 so 7455
74 55
10691 no this one is like the this is
10691 no this one is like the this is
the unsafe Lane right so it's like down
the unsafe Lane right so it's like down
here so 96
104 okay now we got to do tier twos
10 Health three
damage 15 health I don't know
4325 uh T2 is like herish I
4325 uh T2 is like herish I
think
7225 225
then we go like here is I
then we go like here is I
think it's like
think it's like
4685 six
wait 0 one
wait 0 one
two how did I come up with four
Towers oh this one is just wrong because
Towers oh this one is just wrong because
this one is just this is an autocomplete
this one is just this is an autocomplete
suggestion so this is oops this is two
suggestion so this is oops this is two
this is
this is
three this is
three this is
four this is five did I do that right
four this is five did I do that right
yeah and then I have to make this one
yeah and then I have to make this one
right which is going to be like here
right which is going to be like here
which is 66 and
106 okay so this is uh this is half of
106 okay so this is uh this is half of
them done and now I can
them done and now I can
do can I flip it if I do like minus
do can I flip it if I do like minus
y uh like 128 - y 128 -
y uh like 128 - y 128 -
x I think that's it right
oh no wait I have I have more Towers
oh no wait I have I have more Towers
left I have to do the
t3s This Is 50 this is like 10 damage or
t3s This Is 50 this is like 10 damage or
whatever I don't
whatever I don't
know and then this thing
is they're like here
so 2597
seven 29.99
this is the one right
here 33
104 very nice um now uh I think the
104 very nice um now uh I think the
other ones are easy because we can just
other ones are easy because we can just
do like
four iron rain
four iron rain
of self. n num
of self. n num
Towers we can do oops
dot Powers Plus
dot Powers Plus
I team equals 1 self. towers. Health
equals okay cool and
um
um
cool so that works there a bunch of
cool so that works there a bunch of
garbage code but it works um I think and
oops and now we just get to do
um self. grid
um self. grid
uh go to
uh go to
Tower and we get to
add uh we get to add like where's it
food
Tower okay let's see how this
does cannot take the address of a python
object scyon eyes
ah so this
ah so this
yeah get player is not going to work
yeah get player is not going to work
that's fine we'll just do
um do this
no attribute get
no attribute get
creep well that's fine we don't need
creep well that's fine we don't need
this anyways for now we're doing Towers
first hey not bad look we actually got
first hey not bad look we actually got
uh we got Towers in
uh we got Towers in
like I don't see all the towers I don't
like I don't see all the towers I don't
know where the rest of them
know where the rest of them
went
went
um I
see six towers per
see six towers per
side meaning I guess that I probably
side meaning I guess that I probably
misposition the other ones right
25 and
25 and
like2 let's see how I did the other
ones these actually look
ones these actually look
fine is it possible that
fine is it possible that
I hold on I might have an out of bounds
I hold on I might have an out of bounds
numb
Towers
Towers ah so here this is supposed to be
Towers ah so here this is supposed to be
uh the number of towers should
be 18 Towers right
still no
well that's odd where did the other
well that's odd where did the other
Towers
go I also should uh well let me
go I also should uh well let me
see no that looks
see no that looks
fine it looks fine uh
am I just not seeing
him I'm pretty sure I'm seeing them um
him I'm pretty sure I'm seeing them um
just to be sure I'm going to delete the
just to be sure I'm going to delete the
uh I'm going to temporarily comment the
uh I'm going to temporarily comment the
reset mechanic here because it's
reset mechanic here because it's
possible that I'm Walling over
possible that I'm Walling over
them really shouldn't be
so well I don't need this reset mechanic
so well I don't need this reset mechanic
actually at all because I have the
actually at all because I have the
map right
uh so let's just not load the bit map
in see if I just put it in the wrong
spot no I
spot no I
see one
see one
two wait one two three four 5 6 7 8 9
two wait one two three four 5 6 7 8 9
10 I see 10
10 I see 10
Towers is the number of agents that
Towers is the number of agents that
there are so that does not bode
there are so that does not bode
well tow flat is going to be
well tow flat is going to be
18 ah the D type is
18 ah the D type is
wrong and what we do is D type is going
wrong and what we do is D type is going
to be creep D type and dtype is going to
to be creep D type and dtype is going to
be Tower dtype let's see what happens
be Tower dtype let's see what happens
when I do that
uh it's the same isn't
it yeah that is actually the
it yeah that is actually the
same where are the darn
Towers like what
oh I'm not passing Towers so that's
awkward oh
duh tow
flat let's see how that
flat let's see how that
goes
goes
perfect so now we have Towers
um that looks
reasonable and uh we
reasonable and uh we
will figure out what to do with the
tower I need to take a quick
tower I need to take a quick
second let me read chat and read Twitter
second let me read chat and read Twitter
and stuff for a second
anything cool
happening where'd it
go 631 thank
you simplifying r enforcement learning
you simplifying r enforcement learning
libraries resembles MOBA game map like
libraries resembles MOBA game map like
open
open
A5 esoteric knowledge that deter damage
A5 esoteric knowledge that deter damage
not to mention
ulas that's
fun nothing going
on yeah chat GPT
on yeah chat GPT
okay all right back to
work uh let's do the attack function on
work uh let's do the attack function on
the
the
tower that shouldn't be hard
right so we'll just do
Towers get to go before
Towers get to go before
players or
players or
tower Tower is going to be get
tower Tower is going to be get
Tower going to
Tower going to
be Tower our
be Tower our
Tower we're going to go Y is going to be
Tower we're going to go Y is going to be
Tower to
Tower to
Y um The Towers don't move stupid stupid
Y um The Towers don't move stupid stupid
LM uh so what you do do is now we
do so we do
four we need uh d r and DC I
four we need uh d r and DC I
think
think
Dr
Dr
DC Dr in
range Tower Vision let's just do like
range Tower Vision let's just do like
Tower Vision equals
something Tower
something Tower
Vision
five um we do PID
so we need to get the uh the position
so we need to get the uh the position
right we need disk y dis
right we need disk y dis
X and then this should be DX and Dy
X and then this should be DX and Dy
right DX D yeah that's good
right DX D yeah that's good
this is dy this is
this is dy this is
DX
DX
disk y
disk y
dis now if this grid is going to be
dis now if this grid is going to be
equal
to was it
agent I should see
agent I should see
pids is not equal
pids is not equal
to1 then we
to1 then we
do
do
player is going to be equal to get the
player is going to be equal to get the
player
player
from the PID
from the PID
map uh do we have a
map uh do we have a
PID in
PID in
PID so PID is equal to
PID so PID is equal to
this PID not equal -1 you get the
this PID not equal -1 you get the
PID and then we
do if uh player. team is equal to tower.
do if uh player. team is equal to tower.
team we
team we
continue otherwise we
attack
Target damage just Tower damage
loo
damage uh target. health is minus equal
damage uh target. health is minus equal
damage and if it dies you respawn
it and that's it
right uh
right uh
the it's currently attacking everything
the it's currently attacking everything
within view but that's fine to start
within view but that's fine to start
with
right let's see if we have a tower that
right let's see if we have a tower that
attacks SH now
doesn't appear to be attacking
stuff yeah no not attacking
stuff yeah no not attacking
stuff let's see why
not target. team tower.
team in team
so we got player
teams I think we just need to start
teams I think we just need to start
adding some prints
right so I also should commit some of
right so I also should commit some of
this code
this code
up see Mo pix
okay uh
Loba
sets Okay so now next we will
sets Okay so now next we will
do uh we'll put some print statements in
do uh we'll put some print statements in
C MOA and understand why this is not
C MOA and understand why this is not
attacking
attacking
uh stuff like
uh stuff like
animations a little bit
animations a little bit
harder but for now we're just going to
harder but for now we're just going to
get the state based stuff
going print
okay hit Target
okay hit Target
print okay let's
print okay let's
see we can do
this target cannot convert player
star well there's no target ID so that's
star well there's no target ID so that's
stupid
it's supposed to be
PID okay go onsize that let's see if we
PID okay go onsize that let's see if we
get anything cool here
uh okay so I we're not seeing anything
uh okay so I we're not seeing anything
here there are no Tower hits or detects
here there are no Tower hits or detects
on anything so why is that
on anything so why is that
um PID map
dis y disk
X oh did you not type this
correctly no you did
I mean this is going to run right
okay uh checking team
okay uh checking team
one
17 checking team
17 checking team
one
at why is it always the same
team okay so this is garbage data
right well first of all I did Y and X
right well first of all I did Y and X
here but the team is also garbage
here but the team is also garbage
data so why is the tower
data so why is the tower
team uh garbage
data should have been
data should have been
instantiated
normally team is zero team is
normally team is zero team is
one very odd Let's uh let's fix some
one very odd Let's uh let's fix some
print statements
here Tower
here Tower
idx oh wait no Tower idx is fine
idx oh wait no Tower idx is fine
checking one team
checking one team
17 they 18
17 they 18
Towers uh
Towers uh
at this should
be dis Y and dis
X and we should be able to get from here
X and we should be able to get from here
we should be able to get um something
we should be able to get um something
out of
out of
this to debug the towers
okay so here we
okay so here we
have yeah so here we now actually have
have yeah so here we now actually have
reasonable Tower
reasonable Tower
prints and it looks like we're getting
prints and it looks like we're getting
decent checks
here it looks like we are getting decent
here it looks like we are getting decent
checks so I mean there it's possible
checks so I mean there it's possible
that we just don't have uh pids working
that we just don't have uh pids working
correctly right
correctly right
so let's remove this line for now and
so let's remove this line for now and
let's assume that there's something
let's assume that there's something
wrong with
wrong with
pids what did I miss in the past
pids what did I miss in the past
hour I'll show
you so we've got uh basic Towers added
you so we've got uh basic Towers added
we've got uh the 18 Towers added just
we've got uh the 18 Towers added just
hardcoded all the positions and stuff
hardcoded all the positions and stuff
and I'm currently working on really dumb
and I'm currently working on really dumb
basic Tower AI to attack anything that's
basic Tower AI to attack anything that's
nearby by and figuring out why that
nearby by and figuring out why that
Tower AI is not
Tower AI is not
working uh and then we'll figure out
working uh and then we'll figure out
where we go from
where we go from
there though that's probably going to be
there though that's probably going to be
I might get a couple more things in from
I might get a couple more things in from
that for today but that's going to be
that for today but that's going to be
mainly where we uh what we get done for
mainly where we uh what we get done for
today I'd say
Target PID
is1 when you do
is1 when you do
move do move two
it's pit does seem fine
so it's never finding
so it's never finding
anything here it's never finding
anything here it's never finding
anything here it's very
anything here it's very
weird i' expect it to be finding
weird i' expect it to be finding
um finding
something let's go check let's just go
something let's go check let's just go
check uh the MOBA file
I think I'm going to keep doing this for
I think I'm going to keep doing this for
the next 45 minutes and then I'm going
the next 45 minutes and then I'm going
to uh get myself dinner finish a couple
to uh get myself dinner finish a couple
last work things on a couple other
last work things on a couple other
projects off stream and that'll be it
projects off stream and that'll be it
for the day so that is the uh the plan
for the day so that is the uh the plan
I'm going to try to finish the tower
I'm going to try to finish the tower
basic basic Tower Ai and a couple other
basic basic Tower Ai and a couple other
things in the next 45
minutes so you reset the
minutes so you reset the
environment
environment
here I actually don't have access to
here I actually don't have access to
pids
pids
from from here so let's like
you have pids
you have pids
here well let's see if the players are
here well let's see if the players are
attacking each other that would also
attacking each other that would also
help right
stupid
stupid
printf okay there we go
okay so we get attack hit killed attack
okay so we get attack hit killed attack
get killed uh so this is actually
get killed uh so this is actually
working so PID
working so PID
map seems to
map seems to
be
be
good um the pids are correct it's just
good um the pids are correct it's just
the tower for some reason is not getting
the tower for some reason is not getting
it so this is y
+ dis y i maybe if I do it this way this
+ dis y i maybe if I do it this way this
is already an
INT that should be better
INT that should be better
anyways uh Tower y Tower X
anyways uh Tower y Tower X
you got the PID
you got the PID
map YX is that how you do
map YX is that how you do
it
yeah get
player this looks fine this looks like
player this looks fine this looks like
the tower should
the tower should
freaking do
freaking do
something me comment this again
these just don't hit anything they don't
these just don't hit anything they don't
see anything on the PID map that's so
see anything on the PID map that's so
weird why don't these see anything on
weird why don't these see anything on
the PID
map
y+ Tower y Tower
x
x
negative negative Tower Vision Tower
negative negative Tower Vision Tower
Vision Plus One
why this one can well first of all this
why this one can well first of all this
one can go here that's
nice PID
map this is always empty for some
map this is always empty for some
reason why is the pit map
empty it's not empty when uh the players
empty it's not empty when uh the players
go to attack each
other that discretization
other that discretization
works and it should be covering a pretty
works and it should be covering a pretty
wide area
here it is looping over the vision I
here it is looping over the vision I
checked
checked
that have you printed the PID map maybe
that have you printed the PID map maybe
X and Y are
X and Y are
swapped
um it's the thing is this there's a
um it's the thing is this there's a
tower in the middle so I don't think
tower in the middle so I don't think
that that would
that that would
matter
matter
um and also when I'm moving the function
um and also when I'm moving the function
I'm using to move
I'm using to move
stuff is right
stuff is right
here this looks fine right
so grid gets set to agent one or agent
so grid gets set to agent one or agent
2 old position gets set to
2 old position gets set to
-1 new position y comma X gets set to
-1 new position y comma X gets set to
PID player y gets d y player X gets d
PID player y gets d y player X gets d
x
um you know one thing I could do this is
um you know one thing I could do this is
really
really
stupid but I could do self. grid
stupid but I could do self. grid
I could do this is equal to
I could do this is equal to
like what's like a color I can do
like what's like a color I can do
wall
maybe so I can see the vision range
maybe so I can see the vision range
Maybe
okay so like the vision ranges look good
okay so like the vision ranges look good
right these are these squares are
right these are these squares are
approximately where they should
be yeah those those are pretty much
be yeah those those are pretty much
exactly where they should be so it's got
exactly where they should be so it's got
to be the PID map being
to be the PID map being
weird but I don't see how it's possible
weird but I don't see how it's possible
for the PID map to be being weird when
for the PID map to be being weird when
it works down
here maybe I have oh maybe no it cuz it
here maybe I have oh maybe no it cuz it
Doesn't print at all otherwise I was
Doesn't print at all otherwise I was
going to say maybe I have the damage
going to say maybe I have the damage
wrong but um no I it's not getting there
wrong but um no I it's not getting there
at
at
all it would get to either of these
all it would get to either of these
print
statements select a
statements select a
PID as the first
PID as the first
element can you try selecting a pit as
element can you try selecting a pit as
the first element in pit
the first element in pit
map instead of pulling something out by
map instead of pulling something out by
coordinate just to see if everything
coordinate just to see if everything
else is working working given hardcoded
else is working working given hardcoded
selection uh yes I can just kill zero
repeatedly that should work we'll see
okay so we get hit and killed it's
okay so we get hit and killed it's
spamming hit and
spamming hit and
killed and
uh I think if you look at this agent
uh I think if you look at this agent
here in the
here in the
center it's not able to move more than
center it's not able to move more than
one cell so I'm pretty sure this agent
one cell so I'm pretty sure this agent
here is just getting is the one that's
here is just getting is the one that's
just getting killed
repeatedly so that
repeatedly so that
works you can see hit and killed hit and
works you can see hit and killed hit and
killed hit and
killed hit and
killed new to chat no you're good you're
killed new to chat no you're good you're
totally
totally
good um welcome this is me attempting to
good um welcome this is me attempting to
make reinforcement learning be less
make reinforcement learning be less
cursed live so sometimes I do Sim Dev
cursed live so sometimes I do Sim Dev
sometimes I do experiments Dev uh
sometimes I do experiments Dev uh
sometimes I do like well I do a bunch of
sometimes I do like well I do a bunch of
fun stuff a lot of the recent results
fun stuff a lot of the recent results
are on my Twitter um this is the first
are on my Twitter um this is the first
day I've been working on this so decent
day I've been working on this so decent
little bit of progress uh I think it's
little bit of progress uh I think it's
going to end up being more complicated
going to end up being more complicated
than I thought but except for the creeps
than I thought but except for the creeps
I think everything else should be pretty
I think everything else should be pretty
decent
decent
um
yeah especially since open ai5 got me
yeah especially since open ai5 got me
into AI neural MMO got me back into RL
into AI neural MMO got me back into RL
opening I5 I've said this several times
opening I5 I've said this several times
it's the coolest project I've ever ever
it's the coolest project I've ever ever
seen I was 15 ft away from them when
seen I was 15 ft away from them when
they were doing that project I was
they were doing that project I was
hacking on the first version of neural
hacking on the first version of neural
MMO at open aai so yeah it was fun no
MMO at open aai so yeah it was fun no
idea why I was recommending this live
idea why I was recommending this live
stream I happen to run across your PhD
stream I happen to run across your PhD
video a while back that is probably why
video a while back that is probably why
and yeah I saw that people liked the uh
and yeah I saw that people liked the uh
the defense so I figured I'd just start
the defense so I figured I'd just start
streaming random Dev uh and see what
streaming random Dev uh and see what
comes of it maybe you know some folks
comes of it maybe you know some folks
come by Star Puffer lib check out the
come by Star Puffer lib check out the
project maybe some folks go and check
project maybe some folks go and check
out the Twitter it's all help to me um
out the Twitter it's all help to me um
and I will be doing more videos I don't
and I will be doing more videos I don't
want to do too many because they take a
want to do too many because they take a
lot of time away from Dev but I do have
lot of time away from Dev but I do have
a couple long form videos I want to do
a couple long form videos I want to do
there's one I want to do on puffer lib
there's one I want to do on puffer lib
and then there's one that I want to do
and then there's one that I want to do
on a new not announced project
on a new not announced project
yet remember watching opening I5 when I
yet remember watching opening I5 when I
was like 17 after sinking 10K hours into
was like 17 after sinking 10K hours into
Dota
Dota
2 yeah I hadn't played Dota 2 before I I
2 yeah I hadn't played Dota 2 before I I
saw the bot I spent like a week just
saw the bot I spent like a week just
trying to wrap my head around the game
trying to wrap my head around the game
cuz it's such a complicated game right
cuz it's such a complicated game right
to get into um just to try to like sort
to get into um just to try to like sort
of appreciate it and now I I can
of appreciate it and now I I can
understand a little bit better
understand a little bit better
it's the fact that people didn't just go
it's the fact that people didn't just go
wild for RL after open ai5 and they
wild for RL after open ai5 and they
still just like all in on language
still just like all in on language
models it's just like people not
models it's just like people not
understanding how complicated of a game
understanding how complicated of a game
Dota 2 is like if people understood how
Dota 2 is like if people understood how
impressive that result truly is we would
impressive that result truly is we would
be seeing
be seeing
the level of Interest we have in
the level of Interest we have in
language models now we'd see it in RL
language models now we'd see it in RL
now the fact that that doesn't happen
now the fact that that doesn't happen
kind of sucks but at the same time uh
kind of sucks but at the same time uh
I'm I've graduated and I'm now doing it
I'm I've graduated and I'm now doing it
right this is this is what I'm doing
right this is this is what I'm doing
full-time I'm using my experience that
full-time I'm using my experience that
I've gotten in reinforcement learning
I've gotten in reinforcement learning
over the last seven years to fix all of
over the last seven years to fix all of
the that's happened in this
the that's happened in this
field I'm uh not like a super mathy type
field I'm uh not like a super mathy type
that just wants to do a bunch of theory
that just wants to do a bunch of theory
this is like practical engineering and
this is like practical engineering and
infrastructure and whatever else is
infrastructure and whatever else is
needed to make reinforcement learning a
needed to make reinforcement learning a
reasonable field to do work
in another debugging is check if pit is
in another debugging is check if pit is
not equal negative 1 what if you include
not equal negative 1 what if you include
an El block that
an El block that
logs the disk Y and dis X that didn't
logs the disk Y and dis X that didn't
produce a map I thought I well I had
produce a map I thought I well I had
that before and it spams a lot because
that before and it spams a lot because
this is uh this is like several th000
this is uh this is like several th000
checks per
checks per
second
um the thing is it's just all the pids
um the thing is it's just all the pids
are negative one for some
are negative one for some
reason but they're not down
here because I can print this out if I I
here because I can print this out if I I
can enable these prints and uh the
can enable these prints and uh the
agents are attacking and killing each
agents are attacking and killing each
other and they're also targeting based
other and they're also targeting based
on
on
PID which is very odd
PID which is very odd
yeah it's good to see some people are
yeah it's good to see some people are
still into RL and I honestly I think
still into RL and I honestly I think
that RL is going to be picked up big
that RL is going to be picked up big
time by uh independent researchers new
time by uh independent researchers new
PhD students and hobbyists because like
PhD students and hobbyists because like
we're getting to the point where you
we're getting to the point where you
cannot do language modeling or language
cannot do language modeling or language
research without several $1,000 in open
research without several $1,000 in open
AI credits which is just ridiculous and
AI credits which is just ridiculous and
like with reinforcement learning at
like with reinforcement learning at
least if you build some fast Sims you're
least if you build some fast Sims you're
going to be able to do billion scale
going to be able to do billion scale
reinforcement learning uh on one GPU in
reinforcement learning uh on one GPU in
fact you kind of already can with puffer
fact you kind of already can with puffer
um so that's a lot of what I'm pushing
um so that's a lot of what I'm pushing
on at the moment and uh yeah after that
on at the moment and uh yeah after that
uh we we'll see where it goes from there
uh we we'll see where it goes from there
but I have a very small cluster that I
but I have a very small cluster that I
sponsor a few open source projects with
sponsor a few open source projects with
my hope is that I can scale up puffer
my hope is that I can scale up puffer
and get a little bit of a larger cluster
and get a little bit of a larger cluster
and just start really powering all of
and just start really powering all of
the open source uh research that's out
the open source uh research that's out
there on
RL going back to Brown for Gra schol to
RL going back to Brown for Gra schol to
focus precisely on RL either robotics or
focus precisely on RL either robotics or
otherwise yeah hang around glad to have
otherwise yeah hang around glad to have
you here um I mean I'm going to be doing
you here um I mean I'm going to be doing
this for quite a
this for quite a
while could comment out
while could comment out
the link key knows link key is on the
the link key knows link key is on the
puffer cluster it's a nice little
puffer cluster it's a nice little
cluster you could common out the
cluster you could common out the
movement piece spawn one at a guaranteed
movement piece spawn one at a guaranteed
location and change your Loop to only
location and change your Loop to only
check the that X and Y
check the that X and Y
value yes that would
value yes that would
be that would be a DE decent
idea so let's
idea so let's
do uh self. move
do uh self. move
to
to
zero and
zero and
then what's this 29 and
then what's this 29 and
100 uh let's just go find like next to a
100 uh let's just go find like next to a
tower
right I know
10666 huh yeah absolutely looking uh
10666 huh yeah absolutely looking uh
absolutely looking for contributors let
absolutely looking for contributors let
me know like the type of stuff you're
me know like the type of stuff you're
looking into um there's so much stuff to
looking into um there's so much stuff to
be done around puffer I can sponsor bits
be done around puffer I can sponsor bits
of compute here and there though I
of compute here and there though I
reserve that until I know people are
reserve that until I know people are
like actually going to do stuff and not
like actually going to do stuff and not
just like sit around and uh you know be
just like sit around and uh you know be
on the the cluster list and not like not
on the the cluster list and not like not
do stuff with it um but I am sponsoring
do stuff with it um but I am sponsoring
a little bit of stuff with with that and
a little bit of stuff with with that and
uh there's a lot a lot of stuff to be
uh there's a lot a lot of stuff to be
done around puffer I really would like
done around puffer I really would like
to have a nice quality set of baselines
to have a nice quality set of baselines
on all of the common rlms and just
on all of the common rlms and just
optimize the hell out of them for Speed
optimize the hell out of them for Speed
as well I think that's like something
as well I think that's like something
that can be reasonably done by uh like
that can be reasonably done by uh like
level of like new a new grad
student not sure your engineering
student not sure your engineering
experience and the like
let me do that thing that was
let me do that thing that was
suggested um that was a good suggestion
suggested um that was a good suggestion
and I'm like losing steam here because
and I'm like losing steam here because
it's towards it's only 6:30 Pacific but
it's towards it's only 6:30 Pacific but
this is actually late for me because I
this is actually late for me because I
wake up at 6:00 to run uh so my days
wake up at 6:00 to run uh so my days
start very early and I'm pretty much
start very early and I'm pretty much
like Dead Tired by 8 at the latest
I've been basically just working as hard
I've been basically just working as hard
as I can over the summer while uh also
as I can over the summer while uh also
taking a nice chunk of time to keep in
taking a nice chunk of time to keep in
shape pretty much just those two things
getting up at 6 to run tomorrow as well
getting up at 6 to run tomorrow as well
you'll appreciate this then the running
you'll appreciate this then the running
grind
grind
is the running grind is
real
uh okay so we have this is off week this
uh okay so we have this is off week this
is
is
yeah this is the last training block
yeah this is the last training block
from the previous
from the previous
month and this is the new training block
month and this is the new training block
here so this is off week starting at 50
here so this is off week starting at 50
miles last week this week will be 53
miles last week this week will be 53
miles next week will be
tiring I am very slow
tiring I am very slow
though and then most recent Marathon was
though and then most recent Marathon was
uh May 5th I
guess I've got two years fulltime ASW
guess I've got two years fulltime ASW
you big Tech
you big Tech
definitely Rusty on RL Basics we need
definitely Rusty on RL Basics we need
engineering a lot more than RL
engineering a lot more than RL
experience frankly so that's great the
experience frankly so that's great the
one thing I will say about uh big Tech
one thing I will say about uh big Tech
is that the way that code is in puffer
is that the way that code is in puffer
is decidedly way more small Tech so it's
is decidedly way more small Tech so it's
like it's meant to be like really really
like it's meant to be like really really
cons prise minimal abstractions possible
cons prise minimal abstractions possible
so because like the idea is it's white
so because like the idea is it's white
box software like any researcher is
box software like any researcher is
going to have to be able to touch any
going to have to be able to touch any
piece of this code so instead of like
piece of this code so instead of like
bundling up and abstracting stuff away
bundling up and abstracting stuff away
we try to just like make stuff as
we try to just like make stuff as
concise and simple as possible with as
concise and simple as possible with as
few like moving Parts uh as we can
few like moving Parts uh as we can
manage and if you but if you can do that
manage and if you but if you can do that
yeah there's absolutely tons and tons of
yeah there's absolutely tons and tons of
stuff you could contribute to if you're
stuff you could contribute to if you're
interested 19 miles a week at the moment
interested 19 miles a week at the moment
hey
hey
it's doing well two years ago I could
it's doing well two years ago I could
not run a mile
not run a mile
so it uh the running hat the running
so it uh the running hat the running
builds pretty
builds pretty
quick 19 miles a week is a solid base as
well I do like a hour hour and a half of
well I do like a hour hour and a half of
running and then hour hour and a half of
running and then hour hour and a half of
powerlifting every morning
let me go take that feedback from you
let me go take that feedback from you
because that was actually a good
idea interesting checking things out
idea interesting checking things out
been a Dev for 13 years nothing in your
been a Dev for 13 years nothing in your
world beo cool to contribute hey I mean
world beo cool to contribute hey I mean
that's a lot of the point of all this I
that's a lot of the point of all this I
really want to build up the open source
really want to build up the open source
stuff around puffer um there's just like
stuff around puffer um there's just like
I've kept my like I'm pretty darn good
I've kept my like I'm pretty darn good
at keeping small code bases and like
at keeping small code bases and like
building to midscale project solo but
building to midscale project solo but
there's just so much stuff around that I
there's just so much stuff around that I
haven't been able to get to um that
haven't been able to get to um that
could just benefit tremendously from
could just benefit tremendously from
even relatively new people that just
even relatively new people that just
have some ability to write decent code
have some ability to write decent code
that's really all we need um we've got
that's really all we need um we've got
some like some very very uh
some like some very very uh
talented contributors as well on like Po
talented contributors as well on like Po
RL that started out with no experience
RL that started out with no experience
and just like really ground on it and uh
and just like really ground on it and uh
have done incredibly well I don't know
have done incredibly well I don't know
if link is still around in chat but he
if link is still around in chat but he
came in with like no experience and has
came in with like no experience and has
just done amazing on the project so it
just done amazing on the project so it
can be learned and uh I do often you
can be learned and uh I do often you
know with the contributors I try to
know with the contributors I try to
share RL insights when I can to try to
share RL insights when I can to try to
help with some of the
help with some of the
intuitions that's really the main thing
intuitions that's really the main thing
is just understanding how everything
is just understanding how everything
fits together it's not like there's a
fits together it's not like there's a
little bit of math yeah but most of the
little bit of math yeah but most of the
time not it's not the main thing
let me take that suggest that debug
let me take that suggest that debug
suggestion on you been a Dev for 13
suggestion on you been a Dev for 13
years I I don't know how you count like
years I I don't know how you count like
been a Dev I've been programming as well
been a Dev I've been programming as well
since I was I don't know 13 so about the
since I was I don't know 13 so about the
same amount of time
same amount of time
um though I mean practically you could
um though I mean practically you could
probably you know count that a little
probably you know count that a little
later since that was me screwing around
later since that was me screwing around
writing Minecraft
writing Minecraft
mods I don't know I started doing
mods I don't know I started doing
research when I was like 16
professionally started coding and cod
professionally started coding and cod
okay that's pretty awesome then
okay that's pretty awesome then
yeah that's solid could definitely would
yeah that's solid could definitely would
definitely appreciate the uh the help
definitely appreciate the uh the help
and hey take a look at the puffer code
and hey take a look at the puffer code
tell me if you uh tell me what you think
tell me if you uh tell me what you think
of it um it should be pretty concise
of it um it should be pretty concise
I've got a new Dev Branch as well that
I've got a new Dev Branch as well that
I've been working on that this Min
I've been working on that this Min
config Branch I've put a lot of effort
config Branch I've put a lot of effort
into trying to figure out a decent way
into trying to figure out a decent way
to like get configurable experiments
to like get configurable experiments
that doesn't make researchers Hate
that doesn't make researchers Hate
Everything I think I've finally gotten
Everything I think I've finally gotten
it now the current one in 10 the yaml
it now the current one in 10 the yaml
thing isn't terrible it just has a
thing isn't terrible it just has a
really ugly load function um with some
really ugly load function um with some
Arc par Shenanigans uh the thing I'm
Arc par Shenanigans uh the thing I'm
doing now is a fair bit simpler I'd say
doing now is a fair bit simpler I'd say
it's with just Python's like config
it's with just Python's like config
parser
builtin I know I do a lot of stuff like
builtin I know I do a lot of stuff like
this uh let's see so if was it
this uh let's see so if was it
dis
x uh equals
besides benchmarking what are some big
besides benchmarking what are some big
to-dos for puffer seems like the court
to-dos for puffer seems like the court
INF is pretty well developed already um
INF is pretty well developed already um
okay so there's General hygiene stuff
okay so there's General hygiene stuff
like basically any anytime somebody hits
like basically any anytime somebody hits
an error that doesn't make sense now
an error that doesn't make sense now
like there needs to be a reasonable
like there needs to be a reasonable
error message um I've done an okay job
error message um I've done an okay job
of that but it could be better um there
of that but it could be better um there
is uh the benchmarking on lots of
is uh the benchmarking on lots of
different environments is a really big
different environments is a really big
one uh there's still a little bit to be
one uh there's still a little bit to be
done left on The Sweep stuff though
done left on The Sweep stuff though
that's close to being done uh there's
that's close to being done uh there's
just a lot of like user testing around
just a lot of like user testing around
all the new versions and all the new
all the new versions and all the new
tools that I've built um there's going
tools that I've built um there's going
to be a lot of work around simulation
to be a lot of work around simulation
though that's going to be definitely
though that's going to be definitely
much heavier on the engineering side
much heavier on the engineering side
um and then there's going to be like
um and then there's going to be like
research style work as well did you get
research style work as well did you get
the X and Y swapped in that check you
the X and Y swapped in that check you
made yes yes I did that's what happens
made yes yes I did that's what happens
when I don't bother to double check
when I don't bother to double check
the super Maven
the super Maven
suggestions oh by the way folks if you
suggestions oh by the way folks if you
have not tried super Maven I highly
have not tried super Maven I highly
recommend it uh it's just awesome it's
recommend it uh it's just awesome it's
just faster
just faster
co-pilot um
co-pilot um
just like super fast co-pilot has a vs
just like super fast co-pilot has a vs
code plugin has a neov them plugin
code plugin has a neov them plugin
really nice and
really nice and
easy and of course since there are a
easy and of course since there are a
couple new people here you want to help
couple new people here you want to help
me out just uh give the nice puffer a
me out just uh give the nice puffer a
star you know feed the puffer a
star you know feed the puffer a
star helps out a whole ton to get some
star helps out a whole ton to get some
exposure on this Library uh this the
exposure on this Library uh this the
growth has been amazing this is when I
growth has been amazing this is when I
started working on it full-time right
started working on it full-time right
here uh you can't see it on the screen
here uh you can't see it on the screen
hold on yeah so this is when I started
hold on yeah so this is when I started
working full-time on puffer right
working full-time on puffer right
here so growth has been awesome just got
here so growth has been awesome just got
to keep it
up detected
zero team zero okay so it's detecting
here yeah like the growth has been the
here yeah like the growth has been the
growth has been freaking awesome I've
growth has been freaking awesome I've
been very very happy with this
been very very happy with this
um I'm probably going to have to try to
um I'm probably going to have to try to
get the company some Revenue at some
get the company some Revenue at some
point uh I'm good on my own
point uh I'm good on my own
expenses um but hopefully when some
expenses um but hopefully when some
companies start using it we'll be able
companies start using it we'll be able
to get like some set up some support
to get like some set up some support
contracts around stuff um My Hope Is
contracts around stuff um My Hope Is
that in the next like year or so I'd
that in the next like year or so I'd
like to build out a substantially larger
like to build out a substantially larger
cluster so that more people can have
cluster so that more people can have
access to like contribute to cool open
access to like contribute to cool open
source stuff in RL and I'd also like to
source stuff in RL and I'd also like to
be able to put some uh you know some
be able to put some uh you know some
like bounties together for features so
like bounties together for features so
that like you know people can actually
that like you know people can actually
make a little bit of of money off of
make a little bit of of money off of
this stuff I mean I don't feel too bad
this stuff I mean I don't feel too bad
asking people to just contribute to open
asking people to just contribute to open
source at the moment since I'm also
source at the moment since I'm also
making zero do off of this but as soon
making zero do off of this but as soon
as that's no longer the case then uh
as that's no longer the case then uh
there will be you know some substantial
there will be you know some substantial
bounties
okay so this is
hit this actually says hit so
um I screw up to get Tower function
somehow no
are like some of these towers not
are like some of these towers not
working or something
working or something
weird range yourself. n num
Towers towers. shape of zero
got to be something weird here
H
interesting Tower y Tower
X have you seen as it what it has is the
X have you seen as it what it has is the
location of all the
location of all the
towers uh I printed that out before and
towers uh I printed that out before and
it looked
it looked
reasonable let me make sure it's
reasonable let me make sure it's
actually iterating overall all of
them okay it's iterating over all the
them okay it's iterating over all the
towers
um
um
at try this
these look good right
these look good right
um these look like the numbers that I
um these look like the numbers that I
put into
this right these look like
the 10333
uh oh no wait that's fine because eight
uh oh no wait that's fine because eight
is wait 8 is
10433 and
10433 and
yeah are they supposed to be ins no
yeah are they supposed to be ins no
they're not supposed to be
they're not supposed to be
ins the positions uh are technically
ins the positions uh are technically
continuous you know it's like a
continuous you know it's like a
continuous game and then we discretize
continuous game and then we discretize
it onto a grid
technically I could probably make the
technically I could probably make the
towers in if I wanted
towers in if I wanted
to um I don't see what that would do for
to um I don't see what that would do for
me
though come on this has got to just be
though come on this has got to just be
something stupid
right checking
Tower wait are any of these near the
center what if I just put one at like 64
center what if I just put one at like 64
64 right
oh yeah so if if you put the if you put
oh yeah so if if you put the if you put
it in the middle it kills everything so
it in the middle it kills everything so
why is it that like I can clearly see
why is it that like I can clearly see
the players wandering near the
the players wandering near the
tower but nothing happens
tower but nothing happens
right
like let me see
reward
reward
reward
checking
checking
let's just uh comment
this it's also possible that like the
this it's also possible that like the
ones from the teams are
ones from the teams are
not like if the gray one goes near the
not like if the gray one goes near the
gray Tower it should be
fine you think think I would have seen
fine you think think I would have seen
it at least a few times by now
though why can't I
though why can't I
freaking D
what open CV is weird
this is definitely on an opposing Tower
this is definitely on an opposing Tower
right
there I don't know what the heck is
there I don't know what the heck is
going on with it
do I have this
do I have this
in yeah this is in the right I thought
in yeah this is in the right I thought
it I put it in reset or something really
dumb no
dumb no
it's it's
it's it's
fine wait this is a
continue p is not equal to negative this
continue p is not equal to negative this
a continue yeah I don't have a break or
a continue yeah I don't have a break or
anything
uh why is this so
uh why is this so
weird this is a type of bug that should
weird this is a type of bug that should
have been solved half an hour ago I
have been solved half an hour ago I
would thought I would
think
think
respawn health
something isn't updating correctly as
something isn't updating correctly as
they
they
move yeah I was thinking about that I
move yeah I was thinking about that I
couldn't see how though
couldn't see how though
right let me see
um you actually could very well be right
um you actually could very well be right
let me see
let me see
so I have respawn
here oh wait I think you're totally
here oh wait I think you're totally
right cuz this here should
be yeah right
here yeah you're totally right it
is float well that's good intuition I
is float well that's good intuition I
thought of that as well but I discounted
it shouldn't have done
that so. move to so agent idx moves
that so. move to so agent idx moves
to
to
dest Y dest
dest Y dest
X and then I think I get to delete the
X and then I think I get to delete the
rest of this
right and do you get player. y player
right and do you get player. y player
dox updated as
dox updated as
well yep so you just pass it the floats
well yep so you just pass it the floats
it does the discretization
back to like 400
lines good
lines good
job see it's a good idea to stream Dev
job see it's a good idea to stream Dev
Butz sometimes when I'm really stupid
Butz sometimes when I'm really stupid
people solve things for
me yep hit and
killed
killed
um well that ain't supposed to to
happen they're now going through the
happen they're now going through the
walls I think that we need to add a
walls I think that we need to add a
little bit of a a change to
little bit of a a change to
this
move
move
yeah oh have you seen any of the the
yeah oh have you seen any of the the
demos I guess you haven't seen any other
demos I guess you haven't seen any other
cool demos I did
right and they're on my Twitter but we
right and they're on my Twitter but we
have all sorts of cool stuff like that
have all sorts of cool stuff like that
um I mean this is like day one project
um I mean this is like day one project
doesn't exactly look all that impressive
doesn't exactly look all that impressive
right here this is if you want to see
right here this is if you want to see
like the type of performance engineering
like the type of performance engineering
I do not
I do not
this yeah this will do so this is uh a
this yeah this will do so this is uh a
portion of 4096 player snake uh that
portion of 4096 player snake uh that
runs at 14 million steps per second so
runs at 14 million steps per second so
14 million snake steps per second on on
14 million snake steps per second on on
one CPU core and uh it trains a
one CPU core and uh it trains a
convolutional neural net plus lstm at 1
convolutional neural net plus lstm at 1
million steps per second on a single
million steps per second on a single
GPU um and you can train the policy in
GPU um and you can train the policy in
like five minutes to be decent you can
like five minutes to be decent you can
train it for like three billion steps in
train it for like three billion steps in
an hour and you can get quite a good
an hour and you can get quite a good
policy at
policy at
snake uh and the whole implementation of
snake uh and the whole implementation of
all this is like 450
all this is like 450
lines so this is like the some of the
lines so this is like the some of the
types of fun stuff that I do
there's another project I worked on over
there's another project I worked on over
the last few days that has some other
the last few days that has some other
cool results in it um
cool results in it um
yeah we do a lot of fun performance
yeah we do a lot of fun performance
engineering around here which is really
engineering around here which is really
funny cuz like you'd expect me to be
funny cuz like you'd expect me to be
coding this in like C but it's it's just
coding this in like C but it's it's just
scon and turns out that's all you need
scon and turns out that's all you need
it just it works
uh e
all right well they're not eating the uh
all right well they're not eating the uh
the map
the map
anymore so that's
good get killed that one got killed by
good get killed that one got killed by
Tower very
nice 655 we make a gift we put it on
nice 655 we make a gift we put it on
Twitter we call it a day no they do not
Twitter we call it a day no they do not
eat the
they might eat the
they might eat the
towers let me
towers let me
see they they might eat the towers okay
see they they might eat the towers okay
they might eat the towers
uh yep yep yep yep yep
uh yep yep yep yep yep
yep okay good I'm I'm tired okay I got
yep okay good I'm I'm tired okay I got
to stop coding
yeah they might need some
Towers that'd be really funny if you
Towers that'd be really funny if you
just had to get next to the Tower and
just had to get next to the Tower and
you just Nom
it oh yeah the other one I did I think I
it oh yeah the other one I did I think I
still have this gift around to show
still have this gift around to show
you so this is another project
you so this is another project
uh that I did oh I guess this is a weird
uh that I did oh I guess this is a weird
GIF but um so this is another simulation
GIF but um so this is another simulation
with 496 agents they're being trained to
with 496 agents they're being trained to
group together so if you watch them in
group together so if you watch them in
real time you can see that they're
real time you can see that they're
starting to Cluster they can only see a
starting to Cluster they can only see a
very short distance so they kind of have
very short distance so they kind of have
to like learn this local algorithm in
to like learn this local algorithm in
order to Cluster
order to Cluster
together uh fun to watch like if you see
together uh fun to watch like if you see
any like little groups get close to each
any like little groups get close to each
other you'll see that they very
other you'll see that they very
intentionally merge
intentionally merge
but you can yeah start to see all these
but you can yeah start to see all these
little clusters here's
one big particle Sim did this as well
one big particle Sim did this as well
this one runs like 15 million steps per
this one runs like 15 million steps per
second as
well I know there's a bunch of stuff
well I know there's a bunch of stuff
like this around
let's make a little
GIF
GIF
gif
for e
always been really man I found this
always been really man I found this
stuff like 10 years earlier in my life I
stuff like 10 years earlier in my life I
would have dumped huge time into it
would have dumped huge time into it
always been really interested in
always been really interested in
simulations Emer Behavior never know
simulations Emer Behavior never know
where to start now I don't have tons of
where to start now I don't have tons of
free time yeah it's
free time yeah it's
uh it's a big topic for sure um I mean
uh it's a big topic for sure um I mean
the neur like the neural stuff is my
the neur like the neural stuff is my
main thing right I've got more in that
main thing right I've got more in that
line coming out uh reasonable reasonably
line coming out uh reasonable reasonably
soon
um there's like a lot less to the
um there's like a lot less to the
emergence than you think yeah there's
emergence than you think yeah there's
some like there's some experimental
some like there's some experimental
stuff you need to do but if you make
stuff you need to do but if you make
good Sims that are correct and run
good Sims that are correct and run
really fast and you like format the data
really fast and you like format the data
in a way that's somewhat reasonable for
in a way that's somewhat reasonable for
RL uh stuff kind of will just
RL uh stuff kind of will just
learn I mean it's it's really that
learn I mean it's it's really that
simple at least now it is with Puffer
simple at least now it is with Puffer
um so yeah we're
um so yeah we're
uh we're making progress
uh we're making progress
here okay um I think that's going to be
here okay um I think that's going to be
about it for today I might do more on
about it for today I might do more on
this tomorrow or I might try to like
this tomorrow or I might try to like
head down grind um the integration of
head down grind um the integration of
this let me commit this first of all so
this let me commit this first of all so
it'll be online if you want to look at
it weep setup
it weep setup
add
setup
and it's in any
and it's in any
config which is I mean I can show you
config which is I mean I can show you
this the configs have been driving me
this the configs have been driving me
nuts so I wrote this new thing where the
nuts so I wrote this new thing where the
configs instead of having this giant
configs instead of having this giant
yaml file where I'm like implementing in
yaml file where I'm like implementing in
inheritance over this or instead of
inheritance over this or instead of
using something super heavy like Hydra
using something super heavy like Hydra
which is going to piss off researchers I
which is going to piss off researchers I
did uh this thing where you just have
did uh this thing where you just have
these any files and you know you have a
these any files and you know you have a
default but then you can also specify
default but then you can also specify
config ocean uh like MOA
config ocean uh like MOA
oops and you have this one as well that
oops and you have this one as well that
overrides it
overrides it
so that's the thing I got to merge in
so that's the thing I got to merge in
but I broke a bunch of stuff in the
but I broke a bunch of stuff in the
process it runs now but I probably broke
process it runs now but I probably broke
some other ends so I don't want to quite
some other ends so I don't want to quite
merge it to Dev yet but uh it'll be up
merge it to Dev yet but uh it'll be up
into Dev soon and then we'll figure out
into Dev soon and then we'll figure out
when to release it thanks for dropping
when to release it thanks for dropping
by thanks everyone uh it's actually kind
by thanks everyone uh it's actually kind
of cool it looks like I have at least
of cool it looks like I have at least
nine concurrent right now so
nine concurrent right now so
uh I'd uh I'd kind of like to just keep
uh I'd uh I'd kind of like to just keep
streaming this but I'm definitely fried
streaming this but I'm definitely fried
on dev I'll be back either tomorrow uh
on dev I'll be back either tomorrow uh
or Wednesday on stuff drop puffer a star
or Wednesday on stuff drop puffer a star
if you wouldn't mind helps me out a
if you wouldn't mind helps me out a
whole ton um there's a bunch of this
whole ton um there's a bunch of this
stuff posted on the Twitter it's Jay
stuff posted on the Twitter it's Jay
5341 if you want to check it out there
5341 if you want to check it out there
and other than that more reinforcement
and other than that more reinforcement
learning coming back soon than
