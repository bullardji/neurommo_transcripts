Kind: captions
Language: en
Good
morning. We are back
morning. We are back
live. I'm going to take a quick look at
live. I'm going to take a quick look at
some
some
experiments. Not these
ones. Just a very quick
ones. Just a very quick
look at the last results of these
look at the last results of these
experiments. And then I think we're
experiments. And then I think we're
going to work on some docks. Maybe we'll
going to work on some docks. Maybe we'll
work on a sample project. That'll be
work on a sample project. That'll be
better. We'll work on the sample project
better. We'll work on the sample project
for um the demo or the uh the new API
for um the demo or the uh the new API
like to demo the new API. It'll be
like to demo the new API. It'll be
good. Okay. So, this is what we got out
good. Okay. So, this is what we got out
of sweeps. Um this is not
of sweeps. Um this is not
amazing. So, breakout did like pretty
amazing. So, breakout did like pretty
well but not amazing. But then if we
well but not amazing. But then if we
look at the
mazes, mazes did very very
well. This is pretty much good enough to
well. This is pretty much good enough to
start iterating on though. So I think
start iterating on though. So I think
what we'll do is we'll spend uh a bit of
what we'll do is we'll spend uh a bit of
time right now on the sample
project and then we will go from there.
project and then we will go from there.
And I actually would like to
And I actually would like to
do, let me
see, can I get rendering to work in
failed to load
GLX. Well, that's
annoying. And it like crashes totally,
annoying. And it like crashes totally,
doesn't it?
doesn't it?
Okay.
Okay.
So, I will not use the new container. We
So, I will not use the new container. We
will fix the new container uh
later
tank. And hopefully this gives
tank. And hopefully this gives
us should give us the old container.
There I don't know what is wrong with
Um unknown or invalid runtime name
invidia. It should not be on Nvidia
invidia. It should not be on Nvidia
runtime.
I love having to debug stupid when
I love having to debug stupid when
I just want to get
I just want to get
my stuff
my stuff
done. Well, technically, we don't have
done. Well, technically, we don't have
to be able to render it to do the sample
to be able to render it to do the sample
project because I just I don't want to
project because I just I don't want to
deal with this right now. I want to do
deal with this right now. I want to do
the sample project and then I want to do
the sample project and then I want to do
this later in the
this later in the
day. Maybe we'll just do it that way
day. Maybe we'll just do it that way
instead. We'll go back to this
instead. We'll go back to this
container.
This is the
This is the
new uh 5070 UD to 128
container. So, what we're going to do
container. So, what we're going to do
with this
Let me take a look at pi
squ. Logic is in here.
I'm trying to think if I want to make
I'm trying to think if I want to make
this
this
like an even
simpler an even simpler thing, you know?
There's no need for me to like make like
There's no need for me to like make like
a new type of game or something as the
a new type of game or something as the
demo project. So, I guess the only
demo project. So, I guess the only
question is do I turn
question is do I turn
Squared into the sample
Squared into the sample
project? I've got four very nice yellow
project? I've got four very nice yellow
orioles on the uh the feeder right
orioles on the uh the feeder right
outside. Um do I make squared the sample
outside. Um do I make squared the sample
project or do I make like some dummy
project or do I make like some dummy
test N as the uh the
test N as the uh the
sample? I think that is the main
sample? I think that is the main
question.
The only thing that bothers me with
The only thing that bothers me with
square is it's not multi- aent, right?
So, like can I think of like some really
So, like can I think of like some really
basic that would be more representative
Like I could just make like a go to
Like I could just make like a go to
target type end, right?
target type end, right?
continuous. Do I still have the code for
continuous. Do I still have the code for
that uh that old
like I don't have like the old
like I don't have like the old
continuous end,
right? I guess I could make one really
right? I guess I could make one really
quick and that would be kind of fun and
quick and that would be kind of fun and
it would actually be like moderately
it would actually be like moderately
useful even.
Let's do
that. Now it'll support single and
that. Now it'll support single and
multi-
multi-
aent discrete and
aent discrete and
continuous. And then the question will
be what else should I do with it? Should
be what else should I do with it? Should
I have
Should I have like a pure Python version
Should I have like a pure Python version
or
no? I guess I technically Let's do the C
no? I guess I technically Let's do the C
version first and then we'll see.
Well, then what do I have squared for?
Well, then what do I have squared for?
Actually, if we're doing
that, that's still a useful sanity test.
I kind of just want a
I kind of just want a
new a new like little toy M to do stuff
with. What's wrong with this?
There we
go. We get rid of the
go. We get rid of the
Syon. No longer doing Syon.
This is getting a map
size as a basic binding.
get Like
I should probably make the um the env
I should probably make the um the env
work at some point with this, but we can
work at some point with this, but we can
do
Oh, you know what we'll do is we'll make
Oh, you know what we'll do is we'll make
this
this
one we'll instead of calling this just
one we'll instead of calling this just
example we'll call this um
target. So, we'll just have we'll have
target. So, we'll just have we'll have
two different levels of examples.
two different levels of examples.
That'll be
easier. Yeah, that makes way more sense
easier. Yeah, that makes way more sense
than what I was thinking of earlier.
All right, cool. So, now we have this
All right, cool. So, now we have this
one.
would like my autocomplete to freaking
would like my autocomplete to freaking
work.
I don't know why it doesn't
Okay, now we have all these
logs and we go to theh
file and then this will
file and then this will
be project. We'll probably just clean up
be project. We'll probably just clean up
both of these
Yeah.
Okay, so now we
Okay, so now we
have
allocations. It's going to be a pain
allocations. It's going to be a pain
without being able to render this, but
without being able to render this, but
we will get the initial bits of it done.
So this has it size.
Why? And then this can be like
Something like
that. Observations.
They're just going to
see. Do we want to make them be able to
see. Do we want to make them be able to
see the other agents?
And then the actions are going to
be the actions are going to be floats.
And honestly, these can go into the C
And honestly, these can go into the C
demo file, right?
demo file, right?
Like if I just take
these and go
Sir. Yeah. So this log function actually
Sir. Yeah. So this log function actually
does not need to
does not need to
exist.
Um I think what we will
Um I think what we will
do, we'll kind of shuffle some things.
do, we'll kind of shuffle some things.
We'll shuffle some things
around. So on
around. So on
reset, no need to mess the odds to zero.
We'll just do rand percent
size like this.
And we'll
And we'll
do this. N this should be entities
actually or
actually or
agent. I guess this should be agent.
And then we do
And then we do
compute observations.
So for
step we do XY
fly. Uh, do we give him a
fly. Uh, do we give him a
heading? Oh, I just realized that uh we
heading? Oh, I just realized that uh we
I don't have the chat up on my screen.
I don't have the chat up on my screen.
My bad. Hey,
My bad. Hey,
Captain. Uh, let me explain things
Captain. Uh, let me explain things
briefly. Ban this bot.
briefly. Ban this bot.
Thank you bot for popping something up
Thank you bot for popping something up
in the corner of my vision so I actually
in the corner of my vision so I actually
can grab my
chat inspect fix the background so I can
chat inspect fix the background so I can
actually see
it. Hello.
it. Hello.
So uh this is just a a sample n captain.
So uh this is just a a sample n captain.
I'm basically I am uh I'm just copy
I'm basically I am uh I'm just copy
pasting squared and I'm making uh I'm
pasting squared and I'm making uh I'm
going to the goal is to have two sample
going to the goal is to have two sample
ms right we have squared be the ultra
ms right we have squared be the ultra
ultra basic one which I'm going to
ultra basic one which I'm going to
refactor a little bit with uh you know
refactor a little bit with uh you know
the current stuff I know now how to like
the current stuff I know now how to like
make it really simple and then we're
make it really simple and then we're
going to have a multi-agent
going to have a multi-agent
uh continuous one. So we'll have a
uh continuous one. So we'll have a
multi-agent continuous one as well that
multi-agent continuous one as well that
also has very simple dynamics and very
also has very simple dynamics and very
little code but you know you get to see
little code but you know you get to see
that portion as well. So we'll have two
that portion as well. So we'll have two
sample M's and then basically they'll be
sample M's and then basically they'll be
nicely commented uh and this will be how
nicely commented uh and this will be how
you write your own M's and pretty much
you write your own M's and pretty much
anything you need to do should be in
here. That's the goal.
Grab myself coffee.
plan dynamics. You'll see it's not going
plan dynamics. You'll see it's not going
to take me very long at all to write.
to take me very long at all to write.
One second.
a little bit of exercise
in. I might as well tell you since it's
in. I might as well tell you since it's
going to take a minute before I can bend
going to take a minute before I can bend
my fingers again.
my fingers again.
Um, so I'm just going to make a very
Um, so I'm just going to make a very
simple target end where you got a bunch
simple target end where you got a bunch
of
of
puffers. You got a bunch of targets and
puffers. You got a bunch of targets and
the puffers have to get to the targets.
the puffers have to get to the targets.
That's
That's
it. Really
simple. And then the end will reset or
simple. And then the end will reset or
the targets will
the targets will
reset to new positions. But the M's
reset to new positions. But the M's
never
will. Need a minute before my fingers
will. Need a minute before my fingers
will bend
again. I
All right.
I literally didn't
consider the bad exercise to be doing on
consider the bad exercise to be doing on
stream. Can't freaking type for a
stream. Can't freaking type for a
second.
Okay. Now this compute observations and
Okay. Now this compute observations and
first
first
step the actions are going to be
and just make it
heading or um steering. I
heading or um steering. I
guess we do float
heading loop over
heading loop over
num
agents. And then we do
them
set. Do I not have a me set in
set. Do I not have a me set in
here? How was I doing it in
here? How was I doing it in
um I mean any of these M
Okay. And this is kind of all we need to
Okay. And this is kind of all we need to
uh to set I believe.
uh to set I believe.
We could technically set the terminal,
We could technically set the terminal,
but I don't think there's a need
to, which I think we just zero the uh
to, which I think we just zero the uh
the reward like
this. And then we do
float
float
actions I
And uh we can literally just apply this
And uh we can literally just apply this
thing,
right? So we just
right? So we just
do Oh, we also need the agent.
I don't know why my autocomplete isn't
I don't know why my autocomplete isn't
working. Didn't get sweep working. Can I
working. Didn't get sweep working. Can I
change down sampling
change down sampling
size from 10 to five? I've actually It's
size from 10 to five? I've actually It's
funny that you said that cuz that's one
funny that you said that cuz that's one
of the experiments I've been meaning to
of the experiments I've been meaning to
run. Why
run. Why
um why do you want to do that in
um why do you want to do that in
particular? Or is it cuz the uh is it
particular? Or is it cuz the uh is it
cuz the recommendations start taking a
cuz the recommendations start taking a
while after a bunch of runs or
while after a bunch of runs or
what? Let me take a look at your
results. Crashes on third sweep attempt.
can't
reshape. How do you only get that few
reshape. How do you only get that few
points? If you're only getting seven or
points? If you're only getting seven or
eight like points, that means that like
eight like points, that means that like
that's the number of logs you're getting
that's the number of logs you're getting
back from the end. So, yeah, you can
back from the end. So, yeah, you can
down sample. Each episode is 2K. It
down sample. Each episode is 2K. It
doesn't matter each episode. So, the way
doesn't matter each episode. So, the way
that the down sampling works is it just
that the down sampling works is it just
it collects logs from the whole of
it collects logs from the whole of
training. So that means you're only
training. So that means you're only
getting seven or eight logs during the
getting seven or eight logs during the
entirety of
training which doesn't seem right for
training which doesn't seem right for
200 mil
200 mil
steps. Let me see this result.
Oh, very nice. Good job,
man. That looks like you should run it
man. That looks like you should run it
for longer, doesn't it? Like it looks
for longer, doesn't it? Like it looks
like you cut the run off too short. It
like you cut the run off too short. It
was going up very, very steeply.
Is it an issue with log interval? I
Is it an issue with log interval? I
don't know. I'd have to look at the bug
don't know. I'd have to look at the bug
specifically. You can hack it for now.
specifically. You can hack it for now.
But um the way that this
works. Okay. So look at this. So this
works. Okay. So look at this. So this
gets back logs from the end and it tries
gets back logs from the end and it tries
to down sample them. Well, where does
to down sample them. Well, where does
this come
this come
from? All
logs. It comes from right here. So,
logs. It comes from right here. So,
literally, this just gives you the logs
literally, this just gives you the logs
that come back from training. So, my
that come back from training. So, my
guess would be that you're probably just
guess would be that you're probably just
logging very infrequently, which I think
logging very infrequently, which I think
I can confirm that if I look at your
I can confirm that if I look at your
graph real quick
graph real quick
again, I can show this graph, right?
again, I can show this graph, right?
There's no problem with that.
Um, you don't really have a ton of
Um, you don't really have a ton of
points on here. You see, like each of
points on here. You see, like each of
these clicks is a point. You You don't
these clicks is a point. You You don't
have that many points on here. So,
have that many points on here. So,
that's probably what's going
wrong. You just have very small amounts
wrong. You just have very small amounts
of logs. either issue with log interval
of logs. either issue with log interval
or just the fact that if the episodes
or just the fact that if the episodes
are very long you just don't get very
are very long you just don't get very
many logs
back split amongst many copies could be
back split amongst many copies could be
that happens with like pong for
that happens with like pong for
instance in that case you can just
instance in that case you can just
like you can mess with the interval I
like you can mess with the interval I
mean sweeps kind of does depend on
mean sweeps kind of does depend on
having those sample points in order to
having those sample points in order to
like make a good estimate but you can
like make a good estimate but you can
totally just mess with it for now you
totally just mess with it for now you
can also also literally just take that
can also also literally just take that
run that you sent me and run it for
run that you sent me and run it for
longer because it was still going
longer because it was still going
up. Well, that's what I would suggest
up. Well, that's what I would suggest
doing and we can chat on that later
doing and we can chat on that later
today for
today for
sure. I just want to get um this sample
sure. I just want to get um this sample
end done while I'm fresh because people
end done while I'm fresh because people
have been asking for sample ms. So, what
have been asking for sample ms. So, what
I'm doing now is I'm we have squared as
I'm doing now is I'm we have squared as
a single agent sample. I'm making a
a single agent sample. I'm making a
continuous multi-agent sample n. I'm
continuous multi-agent sample n. I'm
going to clean up both of them quite a
going to clean up both of them quite a
bit and then uh you know basically the M
bit and then uh you know basically the M
tutorial will be like hey walk through
tutorial will be like hey walk through
these repos like okay open this file
these repos like okay open this file
notice that this and that and so on and
notice that this and that and so on and
so
forth want me to reach out to them to
forth want me to reach out to them to
set a
set a
call. Um, we'll run it for longer first
call. Um, we'll run it for longer first
just to see if it does even better
just to see if it does even better
because it's very silly to give people a
because it's very silly to give people a
graph that's like going up very very
graph that's like going up very very
rapidly without having run it for longer
rapidly without having run it for longer
and then yes. Um, you don't even
and then yes. Um, you don't even
necessarily need to say like hey let's
necessarily need to say like hey let's
talk about this. I think we just deliver
talk about this. I think we just deliver
those I think we just deliver them the
those I think we just deliver them the
result and then they will probably want
result and then they will probably want
to set a call.
Yeah, I generally think it is better to
Yeah, I generally think it is better to
just ship results and then be available
just ship results and then be available
for meetings like very just be available
for meetings like very just be available
for meetings when people want
them. One of the things I've done
them. One of the things I've done
lately, you'll notice I don't have any
lately, you'll notice I don't have any
like regularly scheduled meetings with
like regularly scheduled meetings with
you or Aaron or like anybody doing any
you or Aaron or like anybody doing any
stuff on this. It's like it's just you
stuff on this. It's like it's just you
chat when we when you want to chat, we
chat when we when you want to chat, we
chat. And I'm just I make myself pretty
available. I literally have zero
available. I literally have zero
recurring things on my calendar.
Temple M. Yes, exactly. So that's what
Temple M. Yes, exactly. So that's what
I'm doing now.
Okay, so that's the
Okay, so that's the
heading and uh the actions can be
heading and uh the actions can be
clipped or whatever,
clipped or whatever,
right? And then we just
right? And then we just
do x
Equals
post
post
heading like this.
We do the same thing for
y. Okay, now we have our basic bounce
y. Okay, now we have our basic bounce
check code.
And now we have to do
um but we also have to compute rewards
um but we also have to compute rewards
don't we
They have to go together I think in this
They have to go together I think in this
end which is
fine. I mean, it doesn't even make sense
fine. I mean, it doesn't even make sense
to
do. We can just do check targets.
targets and OBS,
right? Okay. So now we get rid of the
right? Okay. So now we get rid of the
squared dynamics. This is from the old
squared dynamics. This is from the old
sample code. None of this is relevant.
And there is nothing that's going to be
And there is nothing that's going to be
in the C close
function. Start on
function. Start on
the update targets
function. Also replace
Wait. Is it percent
s? All right. So now for this target
s? All right. So now for this target
finding logic.
finding logic.
Uh we need to go through for each
Uh we need to go through for each
agent. And now we need to loop for each
target. We'll call this A. Or was
target. We'll call this A. Or was
it? We'll do A and T so we don't mess up
it? We'll do A and T so we don't mess up
the index variables as easily.
We'll
We'll
take the agent
here and we'll
here and we'll
do target
And then we will do
distals. Uh there's no need to do a
distals. Uh there's no need to do a
circular check,
circular check,
right? I guess maybe it looks slightly
right? I guess maybe it looks slightly
better with a circular check.
X. Okay.
And we also should probably make a
[Music]
velocity. Need to be
equals we just reset the target like
this. Okay.
this. Okay.
And then we do
And then we do
N
N
rewards LF.
Okay. So we have got our
Okay. So we have got our
distance less than
distance less than
10 and actually what we can do
continue and there we go.
continue and there we go.
This is now our target
checking. We should set
this. Well, hang on. We have to update
this. Well, hang on. We have to update
this one first. So, this is the OBS.
this one first. So, this is the OBS.
Maybe we do have to run this in two
Maybe we do have to run this in two
passes.
Maybe we do have to run this in two
passes. Okay, so maybe there is actually
passes. Okay, so maybe there is actually
going to be a cleaner way to split this
going to be a cleaner way to split this
stuff up. Let's get this code in place
stuff up. Let's get this code in place
for now. So,
So we give it dx and
dy. And
then we need um OBS index I
believe. So we
believe. So we
do int
Okay. Okay. And then we need this exact
Okay. Okay. And then we need this exact
same
same
logic for agent
OBS. We get some agents. We
get our
other see take this and now this is
other see take this and now this is
other
other cool. So this is pretty gross. We
other cool. So this is pretty gross. We
can definitely make this code a lot
can definitely make this code a lot
cleaner. pretty repetitive, but uh this
cleaner. pretty repetitive, but uh this
is basically what we
is basically what we
want. Yeah, this is like basically what
want. Yeah, this is like basically what
we want. Let's make sure that we
we want. Let's make sure that we
actually got the observations
actually got the observations
correct. Believe we did. Oh, we
correct. Believe we did. Oh, we
definitely
definitely
did. Now we have a reset. We've got
did. Now we have a reset. We've got
step. We don't need a close. We need
step. We don't need a close. We need
this function to exist, but that's about
this function to exist, but that's about
it.
target. This a 60fps
target. This a 60fps
end. And then we do actually need the
end. And then we do actually need the
puffer for this.
And let me just see how I
And let me just see how I
draw the puffer texture
draw the puffer texture
here. Believe I do it like this.
And then this
And then this
[Music]
is we need the
heading. So, it's actually got to be
heading. So, it's actually got to be
four.
Um, so we need to get
heading
heading
equals agent I
equals agent I
heading and
then it's if the thing
then it's if the thing
is abs is less
is abs is less
than what the heck is
this
this
in
equals heading
It's like this.
Okay. So, now we do rectangle. What's
Okay. So, now we do rectangle. What's
this? Rectangle
client XPAD.
No, we don't
No, we don't
need this. This just gets
drawn. We just need to know the uh the
drawn. We just need to know the uh the
puffer width and height, which I believe
puffer width and height, which I believe
is just 64. I think it's just
is just 64. I think it's just
um let's just get agent
Okay. So this
is the initial x which should be agent.x
is the initial x which should be agent.x
X -
64 agent.y -
28 is overfitting a thing in RL like can
28 is overfitting a thing in RL like can
I memorize my data set? Yeah,
I memorize my data set? Yeah,
absolutely. Especially when you're doing
absolutely. Especially when you're doing
RL on a thing that's just like not a
RL on a thing that's just like not a
real problem, which is kind of what
real problem, which is kind of what
you're doing right
now. It's not a thing. When you're
now. It's not a thing. When you're
environment is like some randomized
environment is like some randomized
thing where it's the actual goal task.
thing where it's the actual goal task.
When you're environment is like some
When you're environment is like some
dummy toy thing that doesn't represent
dummy toy thing that doesn't represent
the actual task you care about, then it
the actual task you care about, then it
is a problem, right? There's no such
is a problem, right? There's no such
thing as overfitting a Breakout agent
thing as overfitting a Breakout agent
when your goal is to play Breakout
when your goal is to play Breakout
because that's the actual thing you care
because that's the actual thing you care
about for that task, right?
But the thing is that if we're overfit,
But the thing is that if we're overfit,
so are they. So,
XY radius
XY radius
color. Easy
enough. So, we just do X
And I actually I want to draw the
And I actually I want to draw the
puffers on top. We'll do
puffers on top. We'll do
this.
Easy.
Easy.
Oops. So, not even cleaned up or
Oops. So, not even cleaned up or
anything. We're at We don't need any of
anything. We're at We don't need any of
this either.
lines. Can you reproduce one of my good
lines. Can you reproduce one of my good
runs
runs
locally on latest dev with CPUon device
locally on latest dev with CPUon device
having problems? Sure. I actually have
having problems? Sure. I actually have
to fix my new container to do that
to fix my new container to do that
because I don't have rendering working
because I don't have rendering working
on the new containers yet for some
on the new containers yet for some
reason.
But yes, I will do
that. Well, number went higher. Well,
that. Well, number went higher. Well,
the number should kind of go higher,
the number should kind of go higher,
right?
I mean, what's the maximum amount of
I mean, what's the maximum amount of
money you could make if you knew if you
money you could make if you knew if you
memorize that entire graph, then the
memorize that entire graph, then the
maximum amount of money you could make
maximum amount of money you could make
is equal to the sum of all the deltas in
is equal to the sum of all the deltas in
the graph, right? So, that's the that's
the graph, right? So, that's the that's
the high
the high
end. If you just like sum up all the
end. If you just like sum up all the
pointwise, like it's like abs of it's
pointwise, like it's like abs of it's
not the integral because it's like the
not the integral because it's like the
absolute value of it or whatever, but
absolute value of it or whatever, but
it's, you know, you get the idea.
It's like integral of abs of del
whatever some basic Just
Mhm. This will have to do.
Okay.
Okay.
So, let's see if I can get this to
So, let's see if I can get this to
compile and then we're going to have to
compile and then we're going to have to
fix some
fix some
errors. What did I do
here? Oh.
Okay, I actually have to
Okay, I actually have to
like let me see if I can just do this.
Starget.
Boom. Why do you look
Boom. Why do you look
sad? No
sad? No
idea. I'm doing pretty good.
Ed, I'm just missing semicolon
Ed, I'm just missing semicolon
somewhere. Dumb.
somewhere. Dumb.
It doesn't look like
it.
Ah, yeah. So, I totally messed up the
Ah, yeah. So, I totally messed up the
indexing here. This
indexing here. This
is make this
G. Whoops.
Ah, I
see. Yeah. So, we got to be careful with
see. Yeah. So, we got to be careful with
this.
This is Yep. This is a
This is Yep. This is a
goal I
goal I
renamed need
math math.h
Hend. Do I care if this copies
I kind of do care if this copies
I kind of do care if this copies
right. We'll do like
this. But then because that looks jank,
this. But then because that looks jank,
we'll put some
spacing. Okay. And then what we'll do is
spacing. Okay. And then what we'll do is
this is now
Goal
X. That's not
X. That's not
bad. Cool.
requires pointer
operand. Oh, this is Python, you dummy.
You can't be writing Python and
C. This is a plus.
I should probably get like a basic LSP
I should probably get like a basic LSP
at some
point. To be fair, I really don't spend
point. To be fair, I really don't spend
much time in the scheme of things
much time in the scheme of things
fixing small
quirks. Most of the time is on other
things. Okay, so this is
things. Okay, so this is
agent and then this needs to all be
agent and then this needs to all be
refactored to be
refactored to be
G because this is now goal.
And then we have the exact same issues
And then we have the exact same issues
from before. Basically this is and
from before. Basically this is and
percent get the
address and
address and
then other than that we just do this and
then other than that we just do this and
we are
good. And how about here? Probably same
good. And how about here? Probably same
thing.
thing.
I don't know how I make that same m like
I don't know how I make that same m like
basic basic mistake
basic basic mistake
repeatedly but
repeatedly but
um it's also we would like to use
I also don't know why I
I also don't know why I
have this
have this
way. Yeah, you don't need this 20 on any
way. Yeah, you don't need this 20 on any
of this
of this
stuff. This is already going to be
stuff. This is already going to be
scaled negative one to
one. This gets simplified a little bit.
Okay. And uh
Okay. And uh
now you know I don't need all these
now you know I don't need all these
lines to do this either now do All
right.
and I did the exact same thing here.
Hi.
initializing target. All right. This is
initializing target. All right. This is
just I renamed this Truck.
client
puffer and then we have numbum
puffer and then we have numbum
targets. Uh we're in the C file now.
goals. Now it's not numb
targets. Target is not a
targets. Target is not a
pointer. Yes. So this is now these are
pointer. Yes. So this is now these are
just
dots. We no longer need any of this
dots. We no longer need any of this
stuff.
Well, we get to
Well, we get to
that. All right. So, this is
now
Whoops. 86.
Right, we did not allocate
Right, we did not allocate
agents. So we need to uh make an init
agents. So we need to uh make an init
function for this thing.
believe this is all that needs to be
believe this is all that needs to be
allocated.
allocated.
Yes. And then we do
Yes. And then we do
three in here. This is the freeze.
All right.
So, we don't call a
So, we don't call a
net. Probably a good idea.
78. All right. So, possibly
78. All right. So, possibly
uh do we have the wrong size
observations? This seems fine to me. two
observations? This seems fine to me. two
times um agents plus numbum
goals.
Okay, let me add that to the container
Okay, let me add that to the container
before I
before I
forget. Have GDB on the container.
Okay. So, this doesn't immediately break
Okay. So, this doesn't immediately break
either.
Oh, it's is it in standard
IO? Yeah, there it
is. I forget where like basic library
is. I forget where like basic library
things are when I haven't written in a
things are when I haven't written in a
language for a while.
Yes. So, this is not printing
anything. Probably because I don't
anything. Probably because I don't
have flush on it.
have flush on it.
There we go. We get to
There we go. We get to
128. And I believe that if I'm correct,
128. And I believe that if I'm correct,
the total obsex, it should be
the total obsex, it should be
8, isn't it? 16 *
2. Oh, I just have this thing allocated
2. Oh, I just have this thing allocated
wrong, don't I?
I just have the thing allocated totally
wrong. Cool. So now that actually works
wrong. Cool. So now that actually works
and we just get to
and we just get to
uh
uh
this thing
this thing
failing. Now, I thought that I had
failing. Now, I thought that I had
exported some stuff to make this
work.
LFW. So, let me commit this initial
stuff. Wait, we can probably
Yeah, I'm not implementing this whole
Yeah, I'm not implementing this whole
freaking end in pure Python. Screw that.
What the hell? How is this ignored?
That's really obnoxious. This
Okay, so that is
synced. Now let's figure out
synced. Now let's figure out
why why this container is broken.
This was run with
everything. Did I have that commented in
everything. Did I have that commented in
the old um puffer tank? Hang on. cuz I
the old um puffer tank? Hang on. cuz I
did install there was a version of
did install there was a version of
GLFW that I installed that could have
GLFW that I installed that could have
broken some things potentially,
right? Puffer
depths. Hang on. There's a whole bunch
depths. Hang on. There's a whole bunch
of stuff in here that I just didn't add.
of stuff in here that I just didn't add.
Right.
Oh, that's literally it. You just need
Oh, that's literally it. You just need
lib GLFW3.
Cool. All right. And now we have our
Cool. All right. And now we have our
puffer
puffer
end. Looks like this. Whoop.
I've got 10ish minutes before breakfast.
I've got 10ish minutes before breakfast.
So, let's see if we can at least get
So, let's see if we can at least get
this into a a reasonable enough spot.
Okay, so here are the poppers.
Yeah. So, these actions are all at zero.
Yeah. So, these actions are all at zero.
So, this is like
rounding. Oh, I that's weird. I figured
rounding. Oh, I that's weird. I figured
that this would
bind. Is it this?
I thought that the uh the operator
I thought that the uh the operator
precedence was this, isn't
it?
Huh? Am I crazy or something? Like
Oh, wait.
I must be doing something very dumb
I must be doing something very dumb
here.
What do I have actions defined as?
What do I have actions defined as?
Instar. That's
why. All right. Now, here we go. Now the
why. All right. Now, here we go. Now the
puffers can go all over the
place. Okay. So now we
place. Okay. So now we
have
buffers. Yeah, there you go.
Now, it should be that if they get like
Now, it should be that if they get like
reasonably close, they uh will get the
reasonably close, they uh will get the
target. But anyways, I think that is
target. But anyways, I think that is
um that is pretty decent to start. Let's
um that is pretty decent to start. Let's
see real quick if we can get the binding
see real quick if we can get the binding
to set up.
We probably need to pass a whole bunch
We probably need to pass a whole bunch
of args now though with height agent
of args now though with height agent
goals.
Boom.
Okay. So, we have num ms, num
Okay. So, we have num ms, num
agents, the width
All right. And this actually
compiles. No config.
Just have to add it.
So this is going to be 512
So this is going to be 512
m
8. This has got to
be numb targets.
goals backend serial to
goals backend serial to
debug. We get a seg
fault and uh we can fix that.
Actually, I want a couple minutes to do
Actually, I want a couple minutes to do
a few things before breakfast. So,
a few things before breakfast. So,
here's what we're going to do. I'm going
here's what we're going to do. I'm going
to come back. I'm going to fix training
to come back. I'm going to fix training
at right after breakfast. We'll get this
at right after breakfast. We'll get this
working. We'll clean up the file. We'll
working. We'll clean up the file. We'll
comment this. We'll like clean up and
comment this. We'll like clean up and
comment the other one. We'll write some
comment the other one. We'll write some
tutorial docs and then uh we'll pretty
tutorial docs and then uh we'll pretty
much have the like custom M side of
much have the like custom M side of
Puffer set and ready to go. So, for the
Puffer set and ready to go. So, for the
folks watching, I'll be back in maybe 40
folks watching, I'll be back in maybe 40
minutes uh maybe a little
minutes uh maybe a little
less. If you're interested in all this
less. If you're interested in all this
stuff, it's all free and open source at
stuff, it's all free and open source at
puffer.ai. Want to help me out for free?
puffer.ai. Want to help me out for free?
Star the repo. You want to get involved
Star the repo. You want to get involved
in dev, join the Discord. Be back in a
in dev, join the Discord. Be back in a
bit.

Kind: captions
Language: en
Good
morning. We are back
morning. We are back
live. I'm going to take a quick look at
live. I'm going to take a quick look at
some
some
experiments. Not these
ones. Just a very quick
ones. Just a very quick
look at the last results of these
look at the last results of these
experiments. And then I think we're
experiments. And then I think we're
going to work on some docks. Maybe we'll
going to work on some docks. Maybe we'll
work on a sample project. That'll be
work on a sample project. That'll be
better. We'll work on the sample project
better. We'll work on the sample project
for um the demo or the uh the new API
for um the demo or the uh the new API
like to demo the new API. It'll be
like to demo the new API. It'll be
good. Okay. So, this is what we got out
good. Okay. So, this is what we got out
of sweeps. Um this is not
of sweeps. Um this is not
amazing. So, breakout did like pretty
amazing. So, breakout did like pretty
well but not amazing. But then if we
well but not amazing. But then if we
look at the
mazes, mazes did very very
well. This is pretty much good enough to
well. This is pretty much good enough to
start iterating on though. So I think
start iterating on though. So I think
what we'll do is we'll spend uh a bit of
what we'll do is we'll spend uh a bit of
time right now on the sample
project and then we will go from there.
project and then we will go from there.
And I actually would like to
And I actually would like to
do, let me
see, can I get rendering to work in
failed to load
GLX. Well, that's
annoying. And it like crashes totally,
annoying. And it like crashes totally,
doesn't it?
doesn't it?
Okay.
Okay.
So, I will not use the new container. We
So, I will not use the new container. We
will fix the new container uh
later
tank. And hopefully this gives
tank. And hopefully this gives
us should give us the old container.
There I don't know what is wrong with
Um unknown or invalid runtime name
invidia. It should not be on Nvidia
invidia. It should not be on Nvidia
runtime.
I love having to debug stupid when
I love having to debug stupid when
I just want to get
I just want to get
my stuff
my stuff
done. Well, technically, we don't have
done. Well, technically, we don't have
to be able to render it to do the sample
to be able to render it to do the sample
project because I just I don't want to
project because I just I don't want to
deal with this right now. I want to do
deal with this right now. I want to do
the sample project and then I want to do
the sample project and then I want to do
this later in the
this later in the
day. Maybe we'll just do it that way
day. Maybe we'll just do it that way
instead. We'll go back to this
instead. We'll go back to this
container.
This is the
This is the
new uh 5070 UD to 128
container. So, what we're going to do
container. So, what we're going to do
with this
Let me take a look at pi
squ. Logic is in here.
I'm trying to think if I want to make
I'm trying to think if I want to make
this
this
like an even
simpler an even simpler thing, you know?
There's no need for me to like make like
There's no need for me to like make like
a new type of game or something as the
a new type of game or something as the
demo project. So, I guess the only
demo project. So, I guess the only
question is do I turn
question is do I turn
Squared into the sample
Squared into the sample
project? I've got four very nice yellow
project? I've got four very nice yellow
orioles on the uh the feeder right
orioles on the uh the feeder right
outside. Um do I make squared the sample
outside. Um do I make squared the sample
project or do I make like some dummy
project or do I make like some dummy
test N as the uh the
test N as the uh the
sample? I think that is the main
sample? I think that is the main
question.
The only thing that bothers me with
The only thing that bothers me with
square is it's not multi- aent, right?
So, like can I think of like some really
So, like can I think of like some really
basic that would be more representative
Like I could just make like a go to
Like I could just make like a go to
target type end, right?
target type end, right?
continuous. Do I still have the code for
continuous. Do I still have the code for
that uh that old
like I don't have like the old
like I don't have like the old
continuous end,
right? I guess I could make one really
right? I guess I could make one really
quick and that would be kind of fun and
quick and that would be kind of fun and
it would actually be like moderately
it would actually be like moderately
useful even.
Let's do
that. Now it'll support single and
that. Now it'll support single and
multi-
multi-
aent discrete and
aent discrete and
continuous. And then the question will
be what else should I do with it? Should
be what else should I do with it? Should
I have
Should I have like a pure Python version
Should I have like a pure Python version
or
no? I guess I technically Let's do the C
no? I guess I technically Let's do the C
version first and then we'll see.
Well, then what do I have squared for?
Well, then what do I have squared for?
Actually, if we're doing
that, that's still a useful sanity test.
I kind of just want a
I kind of just want a
new a new like little toy M to do stuff
with. What's wrong with this?
There we
go. We get rid of the
go. We get rid of the
Syon. No longer doing Syon.
This is getting a map
size as a basic binding.
get Like
I should probably make the um the env
I should probably make the um the env
work at some point with this, but we can
work at some point with this, but we can
do
Oh, you know what we'll do is we'll make
Oh, you know what we'll do is we'll make
this
this
one we'll instead of calling this just
one we'll instead of calling this just
example we'll call this um
target. So, we'll just have we'll have
target. So, we'll just have we'll have
two different levels of examples.
two different levels of examples.
That'll be
easier. Yeah, that makes way more sense
easier. Yeah, that makes way more sense
than what I was thinking of earlier.
All right, cool. So, now we have this
All right, cool. So, now we have this
one.
would like my autocomplete to freaking
would like my autocomplete to freaking
work.
I don't know why it doesn't
Okay, now we have all these
logs and we go to theh
file and then this will
file and then this will
be project. We'll probably just clean up
be project. We'll probably just clean up
both of these
Yeah.
Okay, so now we
Okay, so now we
have
allocations. It's going to be a pain
allocations. It's going to be a pain
without being able to render this, but
without being able to render this, but
we will get the initial bits of it done.
So this has it size.
Why? And then this can be like
Something like
that. Observations.
They're just going to
see. Do we want to make them be able to
see. Do we want to make them be able to
see the other agents?
And then the actions are going to
be the actions are going to be floats.
And honestly, these can go into the C
And honestly, these can go into the C
demo file, right?
demo file, right?
Like if I just take
these and go
Sir. Yeah. So this log function actually
Sir. Yeah. So this log function actually
does not need to
does not need to
exist.
Um I think what we will
Um I think what we will
do, we'll kind of shuffle some things.
do, we'll kind of shuffle some things.
We'll shuffle some things
around. So on
around. So on
reset, no need to mess the odds to zero.
We'll just do rand percent
size like this.
And we'll
And we'll
do this. N this should be entities
actually or
actually or
agent. I guess this should be agent.
And then we do
And then we do
compute observations.
So for
step we do XY
fly. Uh, do we give him a
fly. Uh, do we give him a
heading? Oh, I just realized that uh we
heading? Oh, I just realized that uh we
I don't have the chat up on my screen.
I don't have the chat up on my screen.
My bad. Hey,
My bad. Hey,
Captain. Uh, let me explain things
Captain. Uh, let me explain things
briefly. Ban this bot.
briefly. Ban this bot.
Thank you bot for popping something up
Thank you bot for popping something up
in the corner of my vision so I actually
in the corner of my vision so I actually
can grab my
chat inspect fix the background so I can
chat inspect fix the background so I can
actually see
it. Hello.
it. Hello.
So uh this is just a a sample n captain.
So uh this is just a a sample n captain.
I'm basically I am uh I'm just copy
I'm basically I am uh I'm just copy
pasting squared and I'm making uh I'm
pasting squared and I'm making uh I'm
going to the goal is to have two sample
going to the goal is to have two sample
ms right we have squared be the ultra
ms right we have squared be the ultra
ultra basic one which I'm going to
ultra basic one which I'm going to
refactor a little bit with uh you know
refactor a little bit with uh you know
the current stuff I know now how to like
the current stuff I know now how to like
make it really simple and then we're
make it really simple and then we're
going to have a multi-agent
going to have a multi-agent
uh continuous one. So we'll have a
uh continuous one. So we'll have a
multi-agent continuous one as well that
multi-agent continuous one as well that
also has very simple dynamics and very
also has very simple dynamics and very
little code but you know you get to see
little code but you know you get to see
that portion as well. So we'll have two
that portion as well. So we'll have two
sample M's and then basically they'll be
sample M's and then basically they'll be
nicely commented uh and this will be how
nicely commented uh and this will be how
you write your own M's and pretty much
you write your own M's and pretty much
anything you need to do should be in
here. That's the goal.
Grab myself coffee.
plan dynamics. You'll see it's not going
plan dynamics. You'll see it's not going
to take me very long at all to write.
to take me very long at all to write.
One second.
a little bit of exercise
in. I might as well tell you since it's
in. I might as well tell you since it's
going to take a minute before I can bend
going to take a minute before I can bend
my fingers again.
my fingers again.
Um, so I'm just going to make a very
Um, so I'm just going to make a very
simple target end where you got a bunch
simple target end where you got a bunch
of
of
puffers. You got a bunch of targets and
puffers. You got a bunch of targets and
the puffers have to get to the targets.
the puffers have to get to the targets.
That's
That's
it. Really
simple. And then the end will reset or
simple. And then the end will reset or
the targets will
the targets will
reset to new positions. But the M's
reset to new positions. But the M's
never
will. Need a minute before my fingers
will. Need a minute before my fingers
will bend
again. I
All right.
I literally didn't
consider the bad exercise to be doing on
consider the bad exercise to be doing on
stream. Can't freaking type for a
stream. Can't freaking type for a
second.
Okay. Now this compute observations and
Okay. Now this compute observations and
first
first
step the actions are going to be
and just make it
heading or um steering. I
heading or um steering. I
guess we do float
heading loop over
heading loop over
num
agents. And then we do
them
set. Do I not have a me set in
set. Do I not have a me set in
here? How was I doing it in
here? How was I doing it in
um I mean any of these M
Okay. And this is kind of all we need to
Okay. And this is kind of all we need to
uh to set I believe.
uh to set I believe.
We could technically set the terminal,
We could technically set the terminal,
but I don't think there's a need
to, which I think we just zero the uh
to, which I think we just zero the uh
the reward like
this. And then we do
float
float
actions I
And uh we can literally just apply this
And uh we can literally just apply this
thing,
right? So we just
right? So we just
do Oh, we also need the agent.
I don't know why my autocomplete isn't
I don't know why my autocomplete isn't
working. Didn't get sweep working. Can I
working. Didn't get sweep working. Can I
change down sampling
change down sampling
size from 10 to five? I've actually It's
size from 10 to five? I've actually It's
funny that you said that cuz that's one
funny that you said that cuz that's one
of the experiments I've been meaning to
of the experiments I've been meaning to
run. Why
run. Why
um why do you want to do that in
um why do you want to do that in
particular? Or is it cuz the uh is it
particular? Or is it cuz the uh is it
cuz the recommendations start taking a
cuz the recommendations start taking a
while after a bunch of runs or
while after a bunch of runs or
what? Let me take a look at your
results. Crashes on third sweep attempt.
can't
reshape. How do you only get that few
reshape. How do you only get that few
points? If you're only getting seven or
points? If you're only getting seven or
eight like points, that means that like
eight like points, that means that like
that's the number of logs you're getting
that's the number of logs you're getting
back from the end. So, yeah, you can
back from the end. So, yeah, you can
down sample. Each episode is 2K. It
down sample. Each episode is 2K. It
doesn't matter each episode. So, the way
doesn't matter each episode. So, the way
that the down sampling works is it just
that the down sampling works is it just
it collects logs from the whole of
it collects logs from the whole of
training. So that means you're only
training. So that means you're only
getting seven or eight logs during the
getting seven or eight logs during the
entirety of
training which doesn't seem right for
training which doesn't seem right for
200 mil
200 mil
steps. Let me see this result.
Oh, very nice. Good job,
man. That looks like you should run it
man. That looks like you should run it
for longer, doesn't it? Like it looks
for longer, doesn't it? Like it looks
like you cut the run off too short. It
like you cut the run off too short. It
was going up very, very steeply.
Is it an issue with log interval? I
Is it an issue with log interval? I
don't know. I'd have to look at the bug
don't know. I'd have to look at the bug
specifically. You can hack it for now.
specifically. You can hack it for now.
But um the way that this
works. Okay. So look at this. So this
works. Okay. So look at this. So this
gets back logs from the end and it tries
gets back logs from the end and it tries
to down sample them. Well, where does
to down sample them. Well, where does
this come
this come
from? All
logs. It comes from right here. So,
logs. It comes from right here. So,
literally, this just gives you the logs
literally, this just gives you the logs
that come back from training. So, my
that come back from training. So, my
guess would be that you're probably just
guess would be that you're probably just
logging very infrequently, which I think
logging very infrequently, which I think
I can confirm that if I look at your
I can confirm that if I look at your
graph real quick
graph real quick
again, I can show this graph, right?
again, I can show this graph, right?
There's no problem with that.
Um, you don't really have a ton of
Um, you don't really have a ton of
points on here. You see, like each of
points on here. You see, like each of
these clicks is a point. You You don't
these clicks is a point. You You don't
have that many points on here. So,
have that many points on here. So,
that's probably what's going
wrong. You just have very small amounts
wrong. You just have very small amounts
of logs. either issue with log interval
of logs. either issue with log interval
or just the fact that if the episodes
or just the fact that if the episodes
are very long you just don't get very
are very long you just don't get very
many logs
back split amongst many copies could be
back split amongst many copies could be
that happens with like pong for
that happens with like pong for
instance in that case you can just
instance in that case you can just
like you can mess with the interval I
like you can mess with the interval I
mean sweeps kind of does depend on
mean sweeps kind of does depend on
having those sample points in order to
having those sample points in order to
like make a good estimate but you can
like make a good estimate but you can
totally just mess with it for now you
totally just mess with it for now you
can also also literally just take that
can also also literally just take that
run that you sent me and run it for
run that you sent me and run it for
longer because it was still going
longer because it was still going
up. Well, that's what I would suggest
up. Well, that's what I would suggest
doing and we can chat on that later
doing and we can chat on that later
today for
today for
sure. I just want to get um this sample
sure. I just want to get um this sample
end done while I'm fresh because people
end done while I'm fresh because people
have been asking for sample ms. So, what
have been asking for sample ms. So, what
I'm doing now is I'm we have squared as
I'm doing now is I'm we have squared as
a single agent sample. I'm making a
a single agent sample. I'm making a
continuous multi-agent sample n. I'm
continuous multi-agent sample n. I'm
going to clean up both of them quite a
going to clean up both of them quite a
bit and then uh you know basically the M
bit and then uh you know basically the M
tutorial will be like hey walk through
tutorial will be like hey walk through
these repos like okay open this file
these repos like okay open this file
notice that this and that and so on and
notice that this and that and so on and
so
forth want me to reach out to them to
forth want me to reach out to them to
set a
set a
call. Um, we'll run it for longer first
call. Um, we'll run it for longer first
just to see if it does even better
just to see if it does even better
because it's very silly to give people a
because it's very silly to give people a
graph that's like going up very very
graph that's like going up very very
rapidly without having run it for longer
rapidly without having run it for longer
and then yes. Um, you don't even
and then yes. Um, you don't even
necessarily need to say like hey let's
necessarily need to say like hey let's
talk about this. I think we just deliver
talk about this. I think we just deliver
those I think we just deliver them the
those I think we just deliver them the
result and then they will probably want
result and then they will probably want
to set a call.
Yeah, I generally think it is better to
Yeah, I generally think it is better to
just ship results and then be available
just ship results and then be available
for meetings like very just be available
for meetings like very just be available
for meetings when people want
them. One of the things I've done
them. One of the things I've done
lately, you'll notice I don't have any
lately, you'll notice I don't have any
like regularly scheduled meetings with
like regularly scheduled meetings with
you or Aaron or like anybody doing any
you or Aaron or like anybody doing any
stuff on this. It's like it's just you
stuff on this. It's like it's just you
chat when we when you want to chat, we
chat when we when you want to chat, we
chat. And I'm just I make myself pretty
available. I literally have zero
available. I literally have zero
recurring things on my calendar.
Temple M. Yes, exactly. So that's what
Temple M. Yes, exactly. So that's what
I'm doing now.
Okay, so that's the
Okay, so that's the
heading and uh the actions can be
heading and uh the actions can be
clipped or whatever,
clipped or whatever,
right? And then we just
right? And then we just
do x
Equals
post
post
heading like this.
We do the same thing for
y. Okay, now we have our basic bounce
y. Okay, now we have our basic bounce
check code.
And now we have to do
um but we also have to compute rewards
um but we also have to compute rewards
don't we
They have to go together I think in this
They have to go together I think in this
end which is
fine. I mean, it doesn't even make sense
fine. I mean, it doesn't even make sense
to
do. We can just do check targets.
targets and OBS,
right? Okay. So now we get rid of the
right? Okay. So now we get rid of the
squared dynamics. This is from the old
squared dynamics. This is from the old
sample code. None of this is relevant.
And there is nothing that's going to be
And there is nothing that's going to be
in the C close
function. Start on
function. Start on
the update targets
function. Also replace
Wait. Is it percent
s? All right. So now for this target
s? All right. So now for this target
finding logic.
finding logic.
Uh we need to go through for each
Uh we need to go through for each
agent. And now we need to loop for each
target. We'll call this A. Or was
target. We'll call this A. Or was
it? We'll do A and T so we don't mess up
it? We'll do A and T so we don't mess up
the index variables as easily.
We'll
We'll
take the agent
here and we'll
here and we'll
do target
And then we will do
distals. Uh there's no need to do a
distals. Uh there's no need to do a
circular check,
circular check,
right? I guess maybe it looks slightly
right? I guess maybe it looks slightly
better with a circular check.
X. Okay.
And we also should probably make a
[Music]
velocity. Need to be
equals we just reset the target like
this. Okay.
this. Okay.
And then we do
And then we do
N
N
rewards LF.
Okay. So we have got our
Okay. So we have got our
distance less than
distance less than
10 and actually what we can do
continue and there we go.
continue and there we go.
This is now our target
checking. We should set
this. Well, hang on. We have to update
this. Well, hang on. We have to update
this one first. So, this is the OBS.
this one first. So, this is the OBS.
Maybe we do have to run this in two
Maybe we do have to run this in two
passes.
Maybe we do have to run this in two
passes. Okay, so maybe there is actually
passes. Okay, so maybe there is actually
going to be a cleaner way to split this
going to be a cleaner way to split this
stuff up. Let's get this code in place
stuff up. Let's get this code in place
for now. So,
So we give it dx and
dy. And
then we need um OBS index I
believe. So we
believe. So we
do int
Okay. Okay. And then we need this exact
Okay. Okay. And then we need this exact
same
same
logic for agent
OBS. We get some agents. We
get our
other see take this and now this is
other see take this and now this is
other
other cool. So this is pretty gross. We
other cool. So this is pretty gross. We
can definitely make this code a lot
can definitely make this code a lot
cleaner. pretty repetitive, but uh this
cleaner. pretty repetitive, but uh this
is basically what we
is basically what we
want. Yeah, this is like basically what
want. Yeah, this is like basically what
we want. Let's make sure that we
we want. Let's make sure that we
actually got the observations
actually got the observations
correct. Believe we did. Oh, we
correct. Believe we did. Oh, we
definitely
definitely
did. Now we have a reset. We've got
did. Now we have a reset. We've got
step. We don't need a close. We need
step. We don't need a close. We need
this function to exist, but that's about
this function to exist, but that's about
it.
target. This a 60fps
target. This a 60fps
end. And then we do actually need the
end. And then we do actually need the
puffer for this.
And let me just see how I
And let me just see how I
draw the puffer texture
draw the puffer texture
here. Believe I do it like this.
And then this
And then this
[Music]
is we need the
heading. So, it's actually got to be
heading. So, it's actually got to be
four.
Um, so we need to get
heading
heading
equals agent I
equals agent I
heading and
then it's if the thing
then it's if the thing
is abs is less
is abs is less
than what the heck is
this
this
in
equals heading
It's like this.
Okay. So, now we do rectangle. What's
Okay. So, now we do rectangle. What's
this? Rectangle
client XPAD.
No, we don't
No, we don't
need this. This just gets
drawn. We just need to know the uh the
drawn. We just need to know the uh the
puffer width and height, which I believe
puffer width and height, which I believe
is just 64. I think it's just
is just 64. I think it's just
um let's just get agent
Okay. So this
is the initial x which should be agent.x
is the initial x which should be agent.x
X -
64 agent.y -
28 is overfitting a thing in RL like can
28 is overfitting a thing in RL like can
I memorize my data set? Yeah,
I memorize my data set? Yeah,
absolutely. Especially when you're doing
absolutely. Especially when you're doing
RL on a thing that's just like not a
RL on a thing that's just like not a
real problem, which is kind of what
real problem, which is kind of what
you're doing right
now. It's not a thing. When you're
now. It's not a thing. When you're
environment is like some randomized
environment is like some randomized
thing where it's the actual goal task.
thing where it's the actual goal task.
When you're environment is like some
When you're environment is like some
dummy toy thing that doesn't represent
dummy toy thing that doesn't represent
the actual task you care about, then it
the actual task you care about, then it
is a problem, right? There's no such
is a problem, right? There's no such
thing as overfitting a Breakout agent
thing as overfitting a Breakout agent
when your goal is to play Breakout
when your goal is to play Breakout
because that's the actual thing you care
because that's the actual thing you care
about for that task, right?
But the thing is that if we're overfit,
But the thing is that if we're overfit,
so are they. So,
XY radius
XY radius
color. Easy
enough. So, we just do X
And I actually I want to draw the
And I actually I want to draw the
puffers on top. We'll do
puffers on top. We'll do
this.
Easy.
Easy.
Oops. So, not even cleaned up or
Oops. So, not even cleaned up or
anything. We're at We don't need any of
anything. We're at We don't need any of
this either.
lines. Can you reproduce one of my good
lines. Can you reproduce one of my good
runs
runs
locally on latest dev with CPUon device
locally on latest dev with CPUon device
having problems? Sure. I actually have
having problems? Sure. I actually have
to fix my new container to do that
to fix my new container to do that
because I don't have rendering working
because I don't have rendering working
on the new containers yet for some
on the new containers yet for some
reason.
But yes, I will do
that. Well, number went higher. Well,
that. Well, number went higher. Well,
the number should kind of go higher,
the number should kind of go higher,
right?
I mean, what's the maximum amount of
I mean, what's the maximum amount of
money you could make if you knew if you
money you could make if you knew if you
memorize that entire graph, then the
memorize that entire graph, then the
maximum amount of money you could make
maximum amount of money you could make
is equal to the sum of all the deltas in
is equal to the sum of all the deltas in
the graph, right? So, that's the that's
the graph, right? So, that's the that's
the high
the high
end. If you just like sum up all the
end. If you just like sum up all the
pointwise, like it's like abs of it's
pointwise, like it's like abs of it's
not the integral because it's like the
not the integral because it's like the
absolute value of it or whatever, but
absolute value of it or whatever, but
it's, you know, you get the idea.
It's like integral of abs of del
whatever some basic Just
Mhm. This will have to do.
Okay.
Okay.
So, let's see if I can get this to
So, let's see if I can get this to
compile and then we're going to have to
compile and then we're going to have to
fix some
fix some
errors. What did I do
here? Oh.
Okay, I actually have to
Okay, I actually have to
like let me see if I can just do this.
Starget.
Boom. Why do you look
Boom. Why do you look
sad? No
sad? No
idea. I'm doing pretty good.
Ed, I'm just missing semicolon
Ed, I'm just missing semicolon
somewhere. Dumb.
somewhere. Dumb.
It doesn't look like
it.
Ah, yeah. So, I totally messed up the
Ah, yeah. So, I totally messed up the
indexing here. This
indexing here. This
is make this
G. Whoops.
Ah, I
see. Yeah. So, we got to be careful with
see. Yeah. So, we got to be careful with
this.
This is Yep. This is a
This is Yep. This is a
goal I
goal I
renamed need
math math.h
Hend. Do I care if this copies
I kind of do care if this copies
I kind of do care if this copies
right. We'll do like
this. But then because that looks jank,
this. But then because that looks jank,
we'll put some
spacing. Okay. And then what we'll do is
spacing. Okay. And then what we'll do is
this is now
Goal
X. That's not
X. That's not
bad. Cool.
requires pointer
operand. Oh, this is Python, you dummy.
You can't be writing Python and
C. This is a plus.
I should probably get like a basic LSP
I should probably get like a basic LSP
at some
point. To be fair, I really don't spend
point. To be fair, I really don't spend
much time in the scheme of things
much time in the scheme of things
fixing small
quirks. Most of the time is on other
things. Okay, so this is
things. Okay, so this is
agent and then this needs to all be
agent and then this needs to all be
refactored to be
refactored to be
G because this is now goal.
And then we have the exact same issues
And then we have the exact same issues
from before. Basically this is and
from before. Basically this is and
percent get the
address and
address and
then other than that we just do this and
then other than that we just do this and
we are
good. And how about here? Probably same
good. And how about here? Probably same
thing.
thing.
I don't know how I make that same m like
I don't know how I make that same m like
basic basic mistake
basic basic mistake
repeatedly but
repeatedly but
um it's also we would like to use
I also don't know why I
I also don't know why I
have this
have this
way. Yeah, you don't need this 20 on any
way. Yeah, you don't need this 20 on any
of this
of this
stuff. This is already going to be
stuff. This is already going to be
scaled negative one to
one. This gets simplified a little bit.
Okay. And uh
Okay. And uh
now you know I don't need all these
now you know I don't need all these
lines to do this either now do All
right.
and I did the exact same thing here.
Hi.
initializing target. All right. This is
initializing target. All right. This is
just I renamed this Truck.
client
puffer and then we have numbum
puffer and then we have numbum
targets. Uh we're in the C file now.
goals. Now it's not numb
targets. Target is not a
targets. Target is not a
pointer. Yes. So this is now these are
pointer. Yes. So this is now these are
just
dots. We no longer need any of this
dots. We no longer need any of this
stuff.
Well, we get to
Well, we get to
that. All right. So, this is
now
Whoops. 86.
Right, we did not allocate
Right, we did not allocate
agents. So we need to uh make an init
agents. So we need to uh make an init
function for this thing.
believe this is all that needs to be
believe this is all that needs to be
allocated.
allocated.
Yes. And then we do
Yes. And then we do
three in here. This is the freeze.
All right.
So, we don't call a
So, we don't call a
net. Probably a good idea.
78. All right. So, possibly
78. All right. So, possibly
uh do we have the wrong size
observations? This seems fine to me. two
observations? This seems fine to me. two
times um agents plus numbum
goals.
Okay, let me add that to the container
Okay, let me add that to the container
before I
before I
forget. Have GDB on the container.
Okay. So, this doesn't immediately break
Okay. So, this doesn't immediately break
either.
Oh, it's is it in standard
IO? Yeah, there it
is. I forget where like basic library
is. I forget where like basic library
things are when I haven't written in a
things are when I haven't written in a
language for a while.
Yes. So, this is not printing
anything. Probably because I don't
anything. Probably because I don't
have flush on it.
have flush on it.
There we go. We get to
There we go. We get to
128. And I believe that if I'm correct,
128. And I believe that if I'm correct,
the total obsex, it should be
the total obsex, it should be
8, isn't it? 16 *
2. Oh, I just have this thing allocated
2. Oh, I just have this thing allocated
wrong, don't I?
I just have the thing allocated totally
wrong. Cool. So now that actually works
wrong. Cool. So now that actually works
and we just get to
and we just get to
uh
uh
this thing
this thing
failing. Now, I thought that I had
failing. Now, I thought that I had
exported some stuff to make this
work.
LFW. So, let me commit this initial
stuff. Wait, we can probably
Yeah, I'm not implementing this whole
Yeah, I'm not implementing this whole
freaking end in pure Python. Screw that.
What the hell? How is this ignored?
That's really obnoxious. This
Okay, so that is
synced. Now let's figure out
synced. Now let's figure out
why why this container is broken.
This was run with
everything. Did I have that commented in
everything. Did I have that commented in
the old um puffer tank? Hang on. cuz I
the old um puffer tank? Hang on. cuz I
did install there was a version of
did install there was a version of
GLFW that I installed that could have
GLFW that I installed that could have
broken some things potentially,
right? Puffer
depths. Hang on. There's a whole bunch
depths. Hang on. There's a whole bunch
of stuff in here that I just didn't add.
of stuff in here that I just didn't add.
Right.
Oh, that's literally it. You just need
Oh, that's literally it. You just need
lib GLFW3.
Cool. All right. And now we have our
Cool. All right. And now we have our
puffer
puffer
end. Looks like this. Whoop.
I've got 10ish minutes before breakfast.
I've got 10ish minutes before breakfast.
So, let's see if we can at least get
So, let's see if we can at least get
this into a a reasonable enough spot.
Okay, so here are the poppers.
Yeah. So, these actions are all at zero.
Yeah. So, these actions are all at zero.
So, this is like
rounding. Oh, I that's weird. I figured
rounding. Oh, I that's weird. I figured
that this would
bind. Is it this?
I thought that the uh the operator
I thought that the uh the operator
precedence was this, isn't
it?
Huh? Am I crazy or something? Like
Oh, wait.
I must be doing something very dumb
I must be doing something very dumb
here.
What do I have actions defined as?
What do I have actions defined as?
Instar. That's
why. All right. Now, here we go. Now the
why. All right. Now, here we go. Now the
puffers can go all over the
place. Okay. So now we
place. Okay. So now we
have
buffers. Yeah, there you go.
Now, it should be that if they get like
Now, it should be that if they get like
reasonably close, they uh will get the
reasonably close, they uh will get the
target. But anyways, I think that is
target. But anyways, I think that is
um that is pretty decent to start. Let's
um that is pretty decent to start. Let's
see real quick if we can get the binding
see real quick if we can get the binding
to set up.
We probably need to pass a whole bunch
We probably need to pass a whole bunch
of args now though with height agent
of args now though with height agent
goals.
Boom.
Okay. So, we have num ms, num
Okay. So, we have num ms, num
agents, the width
All right. And this actually
compiles. No config.
Just have to add it.
So this is going to be 512
So this is going to be 512
m
8. This has got to
be numb targets.
goals backend serial to
goals backend serial to
debug. We get a seg
fault and uh we can fix that.
Actually, I want a couple minutes to do
Actually, I want a couple minutes to do
a few things before breakfast. So,
a few things before breakfast. So,
here's what we're going to do. I'm going
here's what we're going to do. I'm going
to come back. I'm going to fix training
to come back. I'm going to fix training
at right after breakfast. We'll get this
at right after breakfast. We'll get this
working. We'll clean up the file. We'll
working. We'll clean up the file. We'll
comment this. We'll like clean up and
comment this. We'll like clean up and
comment the other one. We'll write some
comment the other one. We'll write some
tutorial docs and then uh we'll pretty
tutorial docs and then uh we'll pretty
much have the like custom M side of
much have the like custom M side of
Puffer set and ready to go. So, for the
Puffer set and ready to go. So, for the
folks watching, I'll be back in maybe 40
folks watching, I'll be back in maybe 40
minutes uh maybe a little
minutes uh maybe a little
less. If you're interested in all this
less. If you're interested in all this
stuff, it's all free and open source at
stuff, it's all free and open source at
puffer.ai. Want to help me out for free?
puffer.ai. Want to help me out for free?
Star the repo. You want to get involved
Star the repo. You want to get involved
in dev, join the Discord. Be back in a
in dev, join the Discord. Be back in a
bit.
