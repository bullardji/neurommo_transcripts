Kind: captions
Language: en
okay we are
live close
that how's it
that how's it
going we got some stuff to do
going we got some stuff to do
today
oops lot of stuff to do today
actually so I started working on this
actually so I started working on this
mini grid M
mini grid M
yesterday I think we're going to finish
yesterday I think we're going to finish
that and then we have a couple other
that and then we have a couple other
things as
well very basic
oops but we got to implement a few
oops but we got to implement a few
little mechanics here um I kind of just
little mechanics here um I kind of just
wanted to do this to have like a one
wanted to do this to have like a one
toone comparison with an existing thing
toone comparison with an existing thing
in the field but let me just to jog my
in the field but let me just to jog my
memory and also to get us set up for the
memory and also to get us set up for the
day here let me just show what this is
day here let me just show what this is
going to
going to
be so
there's this mini grid environment it's
there's this mini grid environment it's
kind of silly how much RL is done on
kind of silly how much RL is done on
this cuz it's like it's a really simple
this cuz it's like it's a really simple
Suite of environments and uh the reasons
Suite of environments and uh the reasons
that it are that it is the reasons that
that it are that it is the reasons that
make it hard are very arbitrary and
make it hard are very arbitrary and
misguided um essentially like you can
misguided um essentially like you can
just keep making the environment bigger
just keep making the environment bigger
and like me looking at this I can see oh
and like me looking at this I can see oh
the goal is here I should go there but
the goal is here I should go there but
if you learn this tabular rasa that's
if you learn this tabular rasa that's
basically impossible to learn if you
basically impossible to learn if you
make it big enough um so I'm not going
make it big enough um so I'm not going
to do anything about that fundamentally
to do anything about that fundamentally
but I figure that puffer is just fast
but I figure that puffer is just fast
enough that it shouldn't matter we'll
enough that it shouldn't matter we'll
just connect enough samples and just win
just connect enough samples and just win
uh and that would be like a kind of a
uh and that would be like a kind of a
cool touch Point demo for people in the
cool touch Point demo for people in the
field the one that I was doing
field the one that I was doing
originally is let me find
originally is let me find
it yeah this one right
it yeah this one right
here I mean you can pretty much
here I mean you can pretty much
Implement whichever of these once I have
Implement whichever of these once I have
the basics but uh we're going to start
the basics but uh we're going to start
with with
this
okay
H pretty much we only have to um
what do we have to do
here I don't like that the walls are
here I don't like that the walls are
added in a reset that's really weird
right so we're going to have to clean up
right so we're going to have to clean up
the reset and then we got to add like
the reset and then we got to add like
the doors thing to
the doors thing to
this uh and then I think I have to
this uh and then I think I have to
hardcode the solution to this as a test
hardcode the solution to this as a test
right so that we can see what's going
right so that we can see what's going
on yeah so let's do that
um we're going to
um we're going to
go we're just going to like hardcode
go we're just going to like hardcode
this sequence of
this sequence of
actions that will solve this instance
actions that will solve this instance
and then that will let us test
and then that will let us test
essentially that'll be our test uh to
essentially that'll be our test uh to
solve this
solve this
thing me put these here
and we'll just do in
and we'll just do in
fixed uh where is it int actions I think
fixed uh where is it int actions I think
it's unsigned
it's unsigned
actions
actions and now I need to figure this
out so it's I think I have mine starting
out so it's I think I have mine starting
in the
middle why did they start it
middle why did they start it
here it should start in the middle
right
right
yeah so we're going to
yeah so we're going to
do uh
do uh
North
North it's one two three four five six
and
and
then
east east
east east
six east east east
six east east east
east east that gets us now we have to do
South
South
West West West
West West West
North uh east or west
oops
West
West
best then South a whole
bunch how many one it's going to be one
two 12 South that's
two 12 South that's
5 6 7 8 9 10 11
5 6 7 8 9 10 11
12 and we do
12 and we do
east
east six
more okay so that should be the
more okay so that should be the
solution to this
solution to this
which
which
like that's hard to learn from scratch
like that's hard to learn from scratch
right how many do we have
right how many do we have
here 2 three four five six seven eight 9
here 2 three four five six seven eight 9
10 11 12
41 sequence of 41 actions to solve this
41 sequence of 41 actions to solve this
environment you get no reward um I guess
environment you get no reward um I guess
you'll get reward for getting the
key but it's not like just 41 actions
key but it's not like just 41 actions
right like I think you're definitely
right like I think you're definitely
going to get the key
going to get the key
randomly we'll see whether
randomly we'll see whether
um
um
well we'll see otherwise
oh I think I also have to change the way
oh I think I also have to change the way
that the uh the doors are but that's
fine and
t
t
f t greater
f t greater
than =
than =
exit and
then we just do
four yeah we don't even need to do this
four yeah we don't even need to do this
it's just it's one line it's literally
it's just it's one line it's literally
just n actions Zer actions of
just n actions Zer actions of
T okay
grid
insed that compiles
cool
cool
so it doesn't move which is
so it doesn't move which is
weird
right if is key down
oh
oh
t t+
plus okay so this spawns off screen um
plus okay so this spawns off screen um
but nothing is happening
here let's figure out
why step here
F
F
action b y Bell
X okay so I
see well there are velocities and
see well there are velocities and
they're weird right
hi keep up the good work thank you
hi keep up the good work thank you
currently what we're doing here is uh I
currently what we're doing here is uh I
am implementing this in puffer Ultra
am implementing this in puffer Ultra
fast and we're going to just try to
fast and we're going to just try to
solve this
solve this
tabularasa with very simple
tabularasa with very simple
RL um I think we can do it I'm a
RL um I think we can do it I'm a
little well I said on Twitter I thought
little well I said on Twitter I thought
I could do it I'm looking at it now and
I could do it I'm looking at it now and
I think it's going to depend
if you think of like a random agent
if you think of like a random agent
having to get to this key I think if you
having to get to this key I think if you
run it long enough it'll get
run it long enough it'll get
there the question is if
there the question is if
you are you going to be able to get to
you are you going to be able to get to
the key and then get back to the
goal assuming I'm allowed to Define like
goal assuming I'm allowed to Define like
a reward for picking up a key a reward
a reward for picking up a key a reward
for unlocking and a reward for goal I
for unlocking and a reward for goal I
think that you can do
think that you can do
it I'll have to look up what's this
it I'll have to look up what's this
environment
get okay this is hard they literally
get okay this is hard they literally
just give a success fail
reward maybe we can do
reward maybe we can do
it maybe we can do it can you teach it
it maybe we can do it can you teach it
something simpler yeah you totally can
something simpler yeah you totally can
and that's curriculum learning and that
and that's curriculum learning and that
works tremendously well
works tremendously well
um but I don't think that that's going
um but I don't think that that's going
to impress like the RL Community as
to impress like the RL Community as
much basically this is just a short
much basically this is just a short
little exercise that shouldn't take me
little exercise that shouldn't take me
very long right implementing something
very long right implementing something
like this this is like a couple of days
like this this is like a couple of days
of work maybe um total to like get a
of work maybe um total to like get a
nice Ultra fasty version of stuff like
nice Ultra fasty version of stuff like
this this
this this
engine
engine
and the goal here is just like the RL
and the goal here is just like the RL
people they say right here it's
people they say right here it's
extremely difficult with vanilla RL
extremely difficult with vanilla RL
alone so like what if I just did that
alone so like what if I just did that
right
right
what if I just ran this thing for a
what if I just ran this thing for a
billion steps because I can do it that
billion steps because I can do it that
fast and I just brute force it and like
fast and I just brute force it and like
RL solves
RL solves
it having
it having
some simulations that start going to
Rooms uh I don't understand your comment
Rooms uh I don't understand your comment
there what do you
there what do you
mean also I realize I have to have this
mean also I realize I have to have this
window not be over camera I always
window not be over camera I always
forget that
case
case
only oh I just have the wrong logic
only oh I just have the wrong logic
entirely here don't I
I mean having so help it prior having
I mean having so help it prior having
some help to prioritize going into rooms
some help to prioritize going into rooms
yeah no that will work that will 100%
yeah no that will work that will 100%
work I mean in the extreme case right I
work I mean in the extreme case right I
could literally just draw a trail I
could literally just draw a trail I
could just draw a reward Trail to the
could just draw a reward Trail to the
key and then back once you have the key
key and then back once you have the key
back to the goal and it'll instantly
back to the goal and it'll instantly
solve the environment right this will be
solve the environment right this will be
solved in like a few
solved in like a few
seconds
seconds
um so I maybe I should just make a
um so I maybe I should just make a
couple quick comments here uh this is
couple quick comments here uh this is
actually a pretty good picture of what's
actually a pretty good picture of what's
wrong with RL and Academia because what
wrong with RL and Academia because what
you have here is what looks like a very
you have here is what looks like a very
simple environment that makes RL look
simple environment that makes RL look
really stupid when it fails to solve it
really stupid when it fails to solve it
right like this is so basic like a
right like this is so basic like a
toddler can do this right you go get the
toddler can do this right you go get the
key and then you take it back you can
key and then you take it back you can
literally do that into like the first
literally do that into like the first
try immediately right so easy
try immediately right so easy
um well I mean first of all you have
um well I mean first of all you have
partial observability that makes it a
partial observability that makes it a
little harder but you could still solve
little harder but you could still solve
it in like a minute instead of 10
it in like a minute instead of 10
seconds right um like you'd end up going
seconds right um like you'd end up going
into all the rooms first and then seeing
into all the rooms first and then seeing
oh okay I have this is the one with the
oh okay I have this is the one with the
key and I have to go back and I also
key and I have to go back and I also
know that the door is red and the key is
know that the door is red and the key is
red which the agent can't see and
red which the agent can't see and
doesn't understand but the bigger issue
doesn't understand but the bigger issue
here is that without any guide rails
here is that without any guide rails
whatsoever every every separation
whatsoever every every separation
between the agent and reward is an
between the agent and reward is an
exponentially deep search problem right
exponentially deep search problem right
so if you're going to say that the only
so if you're going to say that the only
reward is for solving the whole task
reward is for solving the whole task
this is an exponentially deep search
this is an exponentially deep search
problem so you've kind of just framed
problem so you've kind of just framed
the problem in a way that make something
the problem in a way that make something
uh something that's really hard look
uh something that's really hard look
really simple and makes RL look dumb
really simple and makes RL look dumb
when rl's actually incredibly powerful
when rl's actually incredibly powerful
and this is kind of a contrived
example can you break this up into
example can you break this up into
smaller tasks like one for going
smaller tasks like one for going
different rooms one yes you absolutely
different rooms one yes you absolutely
can do that you can absolutely do that
can do that you can absolutely do that
and the task will be very very easy if
and the task will be very very easy if
you do that and like I would like to do
you do that and like I would like to do
that as well because this task is not
that as well because this task is not
reasonable as post right this is
reasonable as post right this is
exponentially deep search to key
exponentially deep search to key
exponentially deep search back and in
exponentially deep search back and in
fact many much much much harder problems
fact many much much much harder problems
than this uh are easier for RL to learn
than this uh are easier for RL to learn
because they at least have some sort of
because they at least have some sort of
reward
reward
signal so I the point was I was hoping
signal so I the point was I was hoping
that we can just brute force it and get
that we can just brute force it and get
it to work anyways which I still think
it to work anyways which I still think
might work we'll have to maybe cheat a
might work we'll have to maybe cheat a
little on the rewards if not but uh I
little on the rewards if not but uh I
like that's not going to get us any any
like that's not going to get us any any
favors right if we do that I think like
favors right if we do that I think like
the the thing I kind of want to
the the thing I kind of want to
demonstrate here like if I run this for
demonstrate here like if I run this for
a billion steps eventually it's going to
a billion steps eventually it's going to
find the key right cuz it's not just to
find the key right cuz it's not just to
straight up like 41 coin flips in a row
straight up like 41 coin flips in a row
that's not happening right it's like a
that's not happening right it's like a
it's like brownie in motion or whatever
it's like brownie in motion or whatever
so it'll eventually get the key I don't
so it'll eventually get the key I don't
know if it'll eventually get from the
know if it'll eventually get from the
key all the way back that might be
key all the way back that might be
harder but maybe if you run it for long
harder but maybe if you run it for long
enough
enough
right especially if I don't reset the
right especially if I don't reset the
agent right if I just let this one agent
agent right if I just let this one agent
wander around for a long enough time
wander around for a long enough time
like eventually it'll get the key and
like eventually it'll get the key and
then it'll happen to get back right
then it'll happen to get back right
it'll just meander around the whole map
it'll just meander around the whole map
long enough and then it'll kind of learn
long enough and then it'll kind of learn
something probably the first time it
something probably the first time it
learns that it'll just learn that like
learns that it'll just learn that like
okay getting to the green thing like if
okay getting to the green thing like if
I'm next to the green thing like in here
I'm next to the green thing like in here
I should be able to get back to it that
I should be able to get back to it that
will probably learn very quickly and
will probably learn very quickly and
then it'll take longer to get the the
then it'll take longer to get the the
whole thing we'll see but I think it
whole thing we'll see but I think it
should be
should be
doable we'll see if I'm
right does the agent door colors yes but
right does the agent door colors yes but
not in the way that you or I would
not in the way that you or I would
recognize uh a good way to think about
recognize uh a good way to think about
it would be if you randomized all the
it would be if you randomized all the
colors so that like they're all
colors so that like they're all
different colors right so that the
different colors right so that the
different color Keys like you have to
different color Keys like you have to
figure out which key the door course uh
figure out which key the door course uh
the D it doesn't look like the key is
the D it doesn't look like the key is
the same color as the door that's a good
the same color as the door that's a good
way of thinking about it so this is
way of thinking about it so this is
another way in which the environment is
misleading big problem with RL is doing
misleading big problem with RL is doing
stuff like this but it's okay we will
stuff like this but it's okay we will
win anyways I also had somebody on
win anyways I also had somebody on
Twitter tell me that tic-tac-toe is hard
Twitter tell me that tic-tac-toe is hard
for RL to learn so uh My Hope Is that we
for RL to learn so uh My Hope Is that we
can just get this done quickly enough
can just get this done quickly enough
that I will also have time to just
that I will also have time to just
Implement Tic-tac-toe and immediately
Implement Tic-tac-toe and immediately
solve it because it's not hard for RL at
solve it because it's not hard for RL at
all that's ridiculous
so simple yeah it's it's not hard at all
so simple yeah it's it's not hard at all
for RL I don't know where the guy got
for RL I don't know where the guy got
that idea but people have some really
that idea but people have some really
messed up Notions about RL and what it
messed up Notions about RL and what it
can solve like rl's in incredibly
can solve like rl's in incredibly
incredibly powerful people just been
incredibly powerful people just been
doing it wrong with very bad info
rl's crazy
good I don't think people realize how
good I don't think people realize how
good the RL
is there we
go uh but this is not what it's supposed
go uh but this is not what it's supposed
to be I don't know why this
to be I don't know why this
happened the
if was it float Val y
there we go
there we go
north
north
south
east uh it got East wrong here East
east uh it got East wrong here East
should be one and West should be
should be one and West should be
negative
negative
one and this should be I don't know why
one and this should be I don't know why
it puts the numbers in either it should
it puts the numbers in either it should
be like
this it like repeated as
well there let's try
this okay this is a little Annoying that
this okay this is a little Annoying that
I can't um
it'll load on the other screen let me
it'll load on the other screen let me
watch it for a
second
why I gota like slow this
down we'll just run it with
GDB I play
GDB I play
Bridge with friends on the weekends can
Bridge with friends on the weekends can
we teach machines to play
we teach machines to play
it multiple so yes we can uh our AI has
it multiple so yes we can uh our AI has
been used for like uh for poker and such
been used for like uh for poker and such
before uh infrastructure
before uh infrastructure
wise there are a couple like the answer
wise there are a couple like the answer
to a lot of these things with RL it's
to a lot of these things with RL it's
almost always yes it's just that the
almost always yes it's just that the
infrastructure is a little bit tricky so
infrastructure is a little bit tricky so
with card games in particular
with card games in particular
um the only real difficulty
um the only real difficulty
is that it's a turn-based game and the
is that it's a turn-based game and the
infrastructure required per turn-based
infrastructure required per turn-based
games is a little bit different I
games is a little bit different I
technically already support it in puffer
technically already support it in puffer
lib it's just not as efficient as it
lib it's just not as efficient as it
could
be let me
think multi-agent definitely works right
think multi-agent definitely works right
with RL card games definitely work I've
with RL card games definitely work I've
been wanting to do this for a while now
been wanting to do this for a while now
honestly um like to get like a better
honestly um like to get like a better
turnbas system working for like card and
turnbas system working for like card and
board games I should definitely do
board games I should definitely do
that
that
yeah I think open spiels in C isn't
it
C++ I could technically bind this to
C++ I could technically bind this to
puffer with
C++ I think that they went crazy with
C++ I think that they went crazy with
this and have like all sorts of stuff in
this and have like all sorts of stuff in
like a million different languages or
like a million different languages or
maybe it's just the bindings in
maybe it's just the bindings in
different
different
languages they have bridge in here oh
languages they have bridge in here oh
look they got Bridge right
look they got Bridge right
here how hard is
here how hard is
this
geez how do you have a thousand lines
geez how do you have a thousand lines
for this
this is
this is
like this is obnoxiously overbuilt C++
code I mean I could just bind it I don't
code I mean I could just bind it I don't
know how fast this thing
is 88
is 88
Lines six
Lines six
lines what's
this okay
this okay
variant okay I not as bad as I thought
variant okay I not as bad as I thought
it's 870 lines I'm probably like half of
it's 870 lines I'm probably like half of
this is probably
fluff they've also Al got all this
fluff they've also Al got all this
additional Jank though like this is not
additional Jank though like this is not
a standalone at
a standalone at
all I can probably still get a binding
all I can probably still get a binding
for this at some point it's just a
for this at some point it's just a
question of whether people would
question of whether people would
actually use
actually use
it it's also um these games become
it it's also um these games become
dramatically easier if you just use like
dramatically easier if you just use like
hardcoded AI opponents so like you know
hardcoded AI opponents so like you know
have if you like you play bridge you
have if you like you play bridge you
play poker online versus an AI like a a
play poker online versus an AI like a a
classic AI not a neural network that
classic AI not a neural network that
makes it easier just from the
makes it easier just from the
perspective of the infrastructure
perspective of the infrastructure
so we could do that
maybe yeah this is a funky
project there's still merging stuff on
this I already technically have a
this I already technically have a
binding for it as
binding for it as
well I should do something at some point
well I should do something at some point
with
with
this two stages one where you
this two stages one where you
form contract with partial information
form contract with partial information
you play out the
you play out the
contract partial information communicate
contract partial information communicate
okay I will have to look that up then um
okay I will have to look that up then um
yeah partial information RL does partial
yeah partial information RL does partial
information RL does communication let
information RL does communication let
me I mean you might not be familiar with
me I mean you might not be familiar with
this then but like let me just give you
this then but like let me just give you
an idea this is going to be like not a
an idea this is going to be like not a
card game
card game
but this is my favorite result in all of
but this is my favorite result in all of
RL
let me see if I can find like Gifts of
let me see if I can find like Gifts of
this
thing is it going to give me dumb
ads okay so
ads okay so
like where's
like where's
the so this is dota this is a
the so this is dota this is a
ludicrously ludicrously complicated five
ludicrously ludicrously complicated five
versus 5 Team game it has well over a
versus 5 Team game it has well over a
100 characters they all play differently
100 characters they all play differently
you get five on your team the opponent
you get five on your team the opponent
team has a different five on their their
team has a different five on their their
team you get crazy numbers of
team you get crazy numbers of
interactions between all of these
interactions between all of these
characters there's like uh there are
characters there's like uh there are
these waves of Minions that have their
these waves of Minions that have their
own mechanics that everything interacts
own mechanics that everything interacts
with differently there are these towers
with differently there are these towers
you have to defend it's this like mind
you have to defend it's this like mind
bogglingly complicated game that takes
bogglingly complicated game that takes
weeks at least to even get a grasp of
weeks at least to even get a grasp of
what on Earth is going on uh RL solves
what on Earth is going on uh RL solves
this trained from scratch on its own
this trained from scratch on its own
with a relatively simple and small
with a relatively simple and small
neural network that is what RL can do RL
neural network that is what RL can do RL
is nuts in what it is capable of the
is nuts in what it is capable of the
infrastructure is very hard though
infrastructure is very hard though
that's the key thing infrastructure is
that's the key thing infrastructure is
very very hard to get right that's what
very very hard to get right that's what
I've been trying to build with puffer
I've been trying to build with puffer
and like we have my version which is way
and like we have my version which is way
simpler admittedly right but I've been
simpler admittedly right but I've been
trying to build towards this it's like a
trying to build towards this it's like a
similar style of game here with like
similar style of game here with like
different characters that play
different characters that play
differently
differently
a lot of like the same mechanics
a lot of like the same mechanics
obviously you don't have all the nice
obviously you don't have all the nice
Graphics right but yeah RL is crazy good
Graphics right but yeah RL is crazy good
so the answer is almost always yes if
so the answer is almost always yes if
you have like a game that you can
you have like a game that you can
simulate fast from scratch is this the
simulate fast from scratch is this the
game you're working on previously yeah
game you're working on previously yeah
yeah dota's like the game it's very
yeah dota's like the game it's very
similar the game I was working on
similar the game I was working on
inspired by
inspired by
it was what was the main issue with
it was what was the main issue with
masking for turn-based games there's no
masking for turn-based games there's no
issue Nathan it's just inefficient
issue Nathan it's just inefficient
because you need the observation buffer
because you need the observation buffer
to be a fixed size right so you have
to be a fixed size right so you have
like player one player two player three
like player one player two player three
and if you do like a round robin type
and if you do like a round robin type
thing then you have to get like
thing then you have to get like
observation for player one padding
observation for player one padding
padding so you're sending padding
padding so you're sending padding
through inefficiently wasting compute
through inefficiently wasting compute
and then like you know padding
and then like you know padding
observation for player two you know
observation for player two you know
padding send that through so there's
padding send that through so there's
just an inefficiency that's all it
is I have multiple envir ments that work
is I have multiple envir ments that work
in puffer right now that work like this
in puffer right now that work like this
it's just not as fast as it should be
it's just not as fast as it should be
because of
because of
that and it's a pretty tricky thing to
that and it's a pretty tricky thing to
work around I'm I'm still thinking about
work around I'm I'm still thinking about
that but it's a little
tricky what if you do single agent
tricky what if you do single agent
playing everyone store a number of
playing everyone store a number of
players
it still doesn't work Nathan because the
it still doesn't work Nathan because the
actions aren't simultaneous it's
actions aren't simultaneous it's
turn-based right so you have to wait for
turn-based right so you have to wait for
the first
the first
player story player of each
player story player of each
move the issue is that it's turn-based
move the issue is that it's turn-based
is the thing right it's like you have to
is the thing right it's like you have to
wait in order to apply the actions even
wait in order to apply the actions even
if it's the same policy right you can't
if it's the same policy right you can't
select the action
simultaneously I love watching people
simultaneously I love watching people
play games on a high level and so this
play games on a high level and so this
looks like magic yeah it really is Magic
looks like magic yeah it really is Magic
like if you haven't played
like if you haven't played
DOTA it is a mind bogglingly complicated
DOTA it is a mind bogglingly complicated
game like I think if you talk to most
game like I think if you talk to most
people especially people who don't play
people especially people who don't play
video games in particular like you
video games in particular like you
legitimately would not believe that
legitimately would not believe that
people have something this complicated
people have something this complicated
as a hobby it is a ridiculously
as a hobby it is a ridiculously
ridiculous complicated game
ridiculous complicated game
um I remember the first time I like I
um I remember the first time I like I
tried to play the game right and I've
tried to play the game right and I've
played games I grew up playing games
played games I grew up playing games
right I've played tons of games uh some
right I've played tons of games uh some
very complex games I was still like
very complex games I was still like
shocked at the depth that was there it
shocked at the depth that was there it
like I mean you can play the game for a
like I mean you can play the game for a
year and still have no idea what you're
year and still have no idea what you're
doing it's
doing it's
nuts how does the ml learn what's the
nuts how does the ml learn what's the
best thing to do so many moves has it
best thing to do so many moves has it
select the best
select the best
one it starts off completely random it
one it starts off completely random it
starts off playing the game completely
starts off playing the game completely
randomly and based on trial and error it
randomly and based on trial and error it
essentially it figures out what works
essentially it figures out what works
and what doesn't and then it gets
and what doesn't and then it gets
smarter at it it learns kind of like a
smarter at it it learns kind of like a
human would right it starts off doing
human would right it starts off doing
stuff that's basically random it
stuff that's basically random it
actually starts off worse than a human
actually starts off worse than a human
because it is actually random not just
because it is actually random not just
like kind of random and somewhat
like kind of random and somewhat
coherent and over time based on a reward
coherent and over time based on a reward
signal based on it winning or losing the
signal based on it winning or losing the
game based on it's leveling up getting
game based on it's leveling up getting
experience all the things in the game it
experience all the things in the game it
learns what works and what doesn't and
learns what works and what doesn't and
it becomes more coherent at learning to
it becomes more coherent at learning to
make
make
progress say there's a single agent
progress say there's a single agent
playing both
playing both
players then each step we collect one
players then each step we collect one
action and one
reward each step we collect one action
reward each step we collect one action
and one
and one
reward the
end each step we collect
end each step we collect
so Nathan that is what we do but you
so Nathan that is what we do but you
still need the buffers to have the
still need the buffers to have the
padding unless technically yes you could
padding unless technically yes you could
do it the way that you're suggesting but
do it the way that you're suggesting but
there would still be additional code
there would still be additional code
because you need to know which
because you need to know which
observations correspond to which agents
observations correspond to which agents
when your Computing trajectory segments
when your Computing trajectory segments
which is what the position and the
which is what the position and the
observation tells
observation tells
you You' need like an additional IDs
you You' need like an additional IDs
thing which technically technically the
thing which technically technically the
enpol API does this for you so you can
enpol API does this for you so you can
do it
do it
but it doesn't necessarily make things
but it doesn't necessarily make things
immediately easier
immediately easier
um maybe it
um maybe it
does let me think is that the
solution that's probably the solution
solution that's probably the solution
huh do you have to pass
IDs yeah I think you're right I think
IDs yeah I think you're right I think
you can do it it's just kind of a pain
you can do it it's just kind of a pain
yeah yeah I could do it that way it'd be
yeah yeah I could do it that way it'd be
a little
a little
tricky you're storing one ID per step
tricky you're storing one ID per step
instead of n yeah you're right Nathan
instead of n yeah you're right Nathan
you could do
you could do
it I'd have to make some changes to the
it I'd have to make some changes to the
V
V
infra but I could do it if people want
infra but I could do it if people want
turnbas games actually for your thing
turnbas games actually for your thing
you know if your game is if we'll get
you know if your game is if we'll get
your game working with the masking and
your game working with the masking and
then if you produce something cool I'll
then if you produce something cool I'll
do it for you how about that
do it for you how about that
that's a big ask because it's like it's
that's a big ask because it's like it's
a kind of tricky piece of code uh to
a kind of tricky piece of code uh to
change but I'll do
change but I'll do
it I mean it would be a really nice
it I mean it would be a really nice
Improvement to puffer lib
anyways I hope I'm not missing something
anyways I hope I'm not missing something
but I'm pretty sure the thing that
but I'm pretty sure the thing that
you're describing what with a couple
you're describing what with a couple
little tweaks would
work speaking of which how's your stuff
work speaking of which how's your stuff
going we got your uh we got your pong
online for folks watching Nathan wrote
this I just ported it it's his
code ah also it's very
hard boom
I tried playing it and never one I don't
I tried playing it and never one I don't
know if the ball moves too quickly or if
know if the ball moves too quickly or if
the opponent is too good I think that
the opponent is too good I think that
there's we should make some changes the
there's we should make some changes the
actual Atari version of pong is very
actual Atari version of pong is very
hard but I think that I think that we
hard but I think that I think that we
actually messed up with the Atari
actually messed up with the Atari
bindings because uh I was talking with
bindings because uh I was talking with
my mother and she said that she had pong
my mother and she said that she had pong
like the console the original Atari cons
like the console the original Atari cons
cons growing up and the ball moved
cons growing up and the ball moved
really slow so I don't know what the
really slow so I don't know what the
heck we did when we messed with Atari in
heck we did when we messed with Atari in
RL but like all the versions that I've
RL but like all the versions that I've
ever seen use for RL have the ball
ever seen use for RL have the ball
moving obnoxiously quickly and like the
moving obnoxiously quickly and like the
paddle can almost not get there in
paddle can almost not get there in
time I've gotten one point on this thing
time I've gotten one point on this thing
before here I'll do it real quick if I
before here I'll do it real quick if I
can if I can manage it I'll do uh I'll
can if I can manage it I'll do uh I'll
get a point real
quick can I do it
freaking
hard I think your goal is to like hard
hard I think your goal is to like hard
bounce it off of a wall or
something I have to figure out how the
something I have to figure out how the
the velocity works on it
there it goes I just got a point there
there it goes I just got a point there
you go see I got one point there by
you go see I got one point there by
bouncing it hard bouncing it off of a
bouncing it hard bouncing it off of a
wall it's hard though it's very
hard y speeds up if you hit the ball
hard y speeds up if you hit the ball
while moving in the same direction as
while moving in the same direction as
the ball is
the ball is
going X never changes I say
but it's hard because like the paddle
but it's hard because like the paddle
control is not precise enough to like
control is not precise enough to like
consistently get it maybe it's just the
consistently get it maybe it's just the
frame skip to be
fair but here I got a point so it's it's
fair but here I got a point so it's it's
possible
my agent learned it you just got improve
my agent learned it you just got improve
does it do you have an agent that plays
does it do you have an agent that plays
it
it
already did you did I miss a Discord
post do you actually get perfect score
post do you actually get perfect score
in that thing I'd be
impressed I didn't miss any
impressed I didn't miss any
posts also the puffer boxes will be back
posts also the puffer boxes will be back
soon I had to call main gear for that
soon I had to call main gear for that
today
I'd like to try learning how to do stuff
I'd like to try learning how to do stuff
like this
you totally
you totally
can
can
um the code is not that bad for a lot of
um the code is not that bad for a lot of
it it's pretty low level but it's not in
it it's pretty low level but it's not in
order to make it fast but it's not that
order to make it fast but it's not that
bad um here where's the pong code I'll
bad um here where's the pong code I'll
link it to
you it's all open
you it's all open
source Dar the puffer
so it's in this Dev Branch it's like
so it's in this Dev Branch it's like
this obnoxious
this obnoxious
environments
ocean uh yeah here's pong pong
Doh one of my economics classes had an
Doh one of my economics classes had an
example where we found which
example where we found which
arm was best to
arm was best to
pull yeah that's a classic
pull yeah that's a classic
uh multi-arm Bandits is a classic
uh multi-arm Bandits is a classic
mathematical phrasing of reinforcement
mathematical phrasing of reinforcement
learning it's we actually we technically
learning it's we actually we technically
have an environment in puffer lib is a
have an environment in puffer lib is a
test that is exactly that
test that is exactly that
here
sanity
sanity
oops at the top yeah right here this is
oops at the top yeah right here this is
literally that right
here here this is literally multi-arm
here here this is literally multi-arm
Bandit
tiny little bit of
code it's not the full problem there are
code it's not the full problem there are
lots of version versions of that problem
lots of version versions of that problem
so you can Define it in many ways but
so you can Define it in many ways but
this is the gist of it we use it as one
this is the gist of it we use it as one
of our sanity
of our sanity
tests RL will like trivially solve that
it won't get you the um it won't solve
it won't get you the um it won't solve
it like in the optimal number of checks
it like in the optimal number of checks
or anything because for specific
or anything because for specific
versions of that they're like you know
versions of that they're like you know
proven optimal algorithms or whatever
proven optimal algorithms or whatever
but it will solve it and it'll solve
but it will solve it and it'll solve
much harder versions where the optimal
much harder versions where the optimal
algorithms don't exist
Bo let me
Bo let me
see doing something here
see doing something here
right yeah if desti is
reward should be is
reward should be is
open t tile like this
check
dis oh
ho oh I did miss a
message that's really weird
message that's really weird
Nathan usually you don't train um
Nathan usually you don't train um
usually you don't change frame skip at
usually you don't change frame skip at
eval time because it can mess up the
algorithm cuz like it assumes it's going
algorithm cuz like it assumes it's going
to have to move all
to have to move all
four huh you don't have you're not
four huh you don't have you're not
required to use frame skip 4 during
training this is the same version of the
training this is the same version of the
game dude this is good
we I should try playing this with uh
we I should try playing this with uh
frame skip uh one at eval though because
frame skip uh one at eval though because
I think it would be a little easier I
I think it would be a little easier I
still would not be able to play it this
well have you fiddled with the
well have you fiddled with the
um 2 minutes is awesome have you fiddled
um 2 minutes is awesome have you fiddled
with
with
the uh with the settings at all to try
the uh with the settings at all to try
to get it to like hit a million train
to get it to like hit a million train
steps per second
what's frame skip frame skip is the
what's frame skip frame skip is the
number of frames for which your agent
number of frames for which your agent
will just repeat the same action it's an
will just repeat the same action it's an
efficiency met it's an efficiency
efficiency met it's an efficiency
optimization so that instead of having
optimization so that instead of having
to send the uh the data to the neural
to send the uh the data to the neural
network on every single frame you only
network on every single frame you only
do it every four frames but then it has
do it every four frames but then it has
to repeat the same action for four
to repeat the same action for four
frames so like if you're going to hold
frames so like if you're going to hold
down like if you're going to press right
down like if you're going to press right
then it has to go right for four frames
then it has to go right for four frames
which is like nice but also sometimes
which is like nice but also sometimes
you need more precise control than that
you need more precise control than that
welcome oh we've got Noah here as well
welcome oh we've got Noah here as well
hey Noah you saw this I think I showed
hey Noah you saw this I think I showed
you this the other day right or maybe
you this the other day right or maybe
you haven't seen this yet we've got
you haven't seen this yet we've got
yours and Nathan's environments
yours and Nathan's environments
online on puffer GG uh there will be
online on puffer GG uh there will be
attribution at the top of this page as
attribution at the top of this page as
soon as I figure out how to do it uh the
soon as I figure out how to do it uh the
HTML is autogenerated for this because
HTML is autogenerated for this because
uh of mcrip in so you know you'll have
uh of mcrip in so you know you'll have
your name at the top of this as soon as
your name at the top of this as soon as
I figure out how to do that and if I
I figure out how to do that and if I
can't figure out how to do it I'll just
can't figure out how to do it I'll just
like put it on top of the game or
like put it on top of the game or
something
something
something or in the uh the link to it
something or in the uh the link to it
but yeah here it
is if I get higher SPS on smaller
is if I get higher SPS on smaller
Horizons and it doesn't get as much
Horizons and it doesn't get as much
signal not sure how to solve that you
signal not sure how to solve that you
increase the batch size typically
increase the batch size typically
Nathan you just you use stupidly big
Nathan you just you use stupidly big
batch
batch
sizes I mean it's fine to have it be
sizes I mean it's fine to have it be
like it's fine not to do that I think
like it's fine not to do that I think
that you could solve this in less than
that you could solve this in less than
30 seconds though
30 seconds though
would be my
would be my
guess probably faster did I tell you um
guess probably faster did I tell you um
you know there's this NYU lab that has
you know there's this NYU lab that has
this GPU driving Sim and I took their
this GPU driving Sim and I took their
train time from two hours down to 28
train time from two hours down to 28
seconds with
seconds with
Puffer that was pretty fun not on all
Puffer that was pretty fun not on all
the versions of it just yet but it will
the versions of it just yet but it will
be on all the versions as soon as they
be on all the versions as soon as they
get a couple little efficiency
get a couple little efficiency
optimizations 2 minutes is 30 seconds 40
optimizations 2 minutes is 30 seconds 40
90 well then we can do it in 10 right
I mean it doesn't really matter at that
I mean it doesn't really matter at that
point it's kind of just like a flex but
point it's kind of just like a flex but
it's still kind of
funny PR the hyper prams for this if you
funny PR the hyper prams for this if you
want so that uh we like PR the hyper
want so that uh we like PR the hyper
parameters and stuff for this if you
want and it's cool that if this actually
want and it's cool that if this actually
works with Fram Skip One at eval then
works with Fram Skip One at eval then
we'll be able to upload like the bot and
we'll be able to upload like the bot and
you can play against it as the
you can play against it as the
opponent yeah maybe we'll make it so
opponent yeah maybe we'll make it so
that
that
like the green agent is the rl1 or
something Ed eval or something I don't
something Ed eval or something I don't
know I can help with
that
that
unbeatable like unbeatable pong RL
unbeatable like unbeatable pong RL
agent sounds good
after I submit my
after I submit my
thesis need to figure out how to do RL
thesis need to figure out how to do RL
vers RL at eval we can do that as well
vers RL at eval we can do that as well
after I submit my thesis at the end of
after I submit my thesis at the end of
the month I can integrate the other
the month I can integrate the other
changes on breakout into the C code
changes on breakout into the C code
awesome that'd be
awesome that'd be
great yeah I the challenge I gave to you
great yeah I the challenge I gave to you
and Nathan would be to uh I mean it
and Nathan would be to uh I mean it
looks like Nathan did it but like just
looks like Nathan did it but like just
train like a really good Agent on your
train like a really good Agent on your
environment
right we do have the ability to load the
right we do have the ability to load the
agents onto the web now so
this is very cool got to go thank you
this is very cool got to go thank you
thanks for dropping by
okay I think I messed something up here
okay I think I messed something up here
so north north north east east
so north north north east east
south west west
south west west
west
west
north I think there's supposed to be
north I think there's supposed to be
another North in here
breakouts training at 800 on 800k yeah
breakouts training at 800 on 800k yeah
okay that's good
okay that's good
then already ran carb sweep getting good
then already ran carb sweep getting good
agents should be fairly easy that's what
agents should be fairly easy that's what
we want to
hear what's happening with this
thing let's just do
GDB break
A8
R
R
okay
okay
so and
ah it doesn't have the ability to pick
ah it doesn't have the ability to pick
up the key is
why it's also occurred to me that we
why it's also occurred to me that we
don't have the ability like the open
don't have the ability like the open
doors thing doesn't even really make
doors thing doesn't even really make
sense
well it's fine we'll mess with this in a
well it's fine we'll mess with this in a
bit let's get the
keys e
are you working on a puer lip grid world
are you working on a puer lip grid world
kind of I just figured we'd do a mini
kind of I just figured we'd do a mini
grid en you know as a quick
grid en you know as a quick
thing so gets the
thing so gets the
key okay so I was wrong there's
uh
two this additional North is not needed
okay we get
overflow um Keys is six
huh
Dev till you
die how about Dev and solve Ai and not
die how about Dev and solve Ai and not
die that sounds
good and die for
mortality welcome will what's going on
mortality welcome will what's going on
has 01 got you has 01 got you down or
has 01 got you has 01 got you down or
something your repo looks like it's
something your repo looks like it's
doing pretty well
oh I just messed this up as
oh I just messed this up as
well that funny that this didn't catch
that no just trying to solve really
that no just trying to solve really
stupid DX
stupid DX
stuff DX
have you tried
integrating
integrating
H the Emoji still comes up as a water
H the Emoji still comes up as a water
pistol on a on this oh developer
pistol on a on this oh developer
experience
okay the best thing I've done for
okay the best thing I've done for
developer experience so far has been P
developer experience so far has been P
putting the source code to things uh for
putting the source code to things uh for
things into brain dead signal
things into brain dead signal
files is honestly the best thing I've
files is honestly the best thing I've
done for developer
done for developer
[Music]
[Music]
experience more than apis or Shenanigans
experience more than apis or Shenanigans
or whatever it's like yeah here's all
or whatever it's like yeah here's all
the code it's just right here it's
the code it's just right here it's
really
simple you
simple you
know why do complicated thing when
know why do complicated thing when
simple things suffice
like even if I
like even if I
do like no abstractions stop trying to
do like no abstractions stop trying to
think of clever abstractions just don't
think of clever abstractions just don't
use any right this m is 2000 some odd
use any right this m is 2000 some odd
lines of c and I guarantee you that any
lines of c and I guarantee you that any
scheme that you can think of to like
scheme that you can think of to like
break this up into multiple files or
break this up into multiple files or
like abstract out various components is
like abstract out various components is
going to make it harder not easier for
going to make it harder not easier for
people to understand what the heck this
people to understand what the heck this
is all
is all
about bare bare minimum abstraction okay
about bare bare minimum abstraction okay
maybe this data could go back into the
maybe this data could go back into the
uh the data. H file or whatever that's
uh the data. H file or whatever that's
about it
though each of these mes is like a
though each of these mes is like a
pretty much Standalone
Doh and then I work on stuff like how do
Doh and then I work on stuff like how do
we have less boiler plate a lot right
we have less boiler plate a lot right
like I've been trying to figure out how
like I've been trying to figure out how
to reduce the amount of boiler plate
to reduce the amount of boiler plate
cython you need in order to bind these
cython you need in order to bind these
CMS to python stuff like that that's
CMS to python stuff like that that's
pretty much what I've been doing it's
pretty much what I've been doing it's
been going very nicely it's really cool
been going very nicely it's really cool
to be able to onboard more people like
to be able to onboard more people like
new people new contributors and just say
new people new contributors and just say
yeah here read this file it's like
yeah here read this file it's like
completely brain dead code right you
completely brain dead code right you
just read the file top to bottom like
just read the file top to bottom like
you're not you can ask me questions but
you're not you can ask me questions but
I promise you're not going to have any
we do that for sure and
we do that for sure and
L I mean what's the code footprint of it
L I mean what's the code footprint of it
right is it like
right is it like
it gets sketchy Beyond a certain
it gets sketchy Beyond a certain
size but it like that size is larger
size but it like that size is larger
than people
than people
think like puffer lib vectorization is
think like puffer lib vectorization is
one file the whole vectorization is one
one file the whole vectorization is one
file puffer lib emulation is one file we
file puffer lib emulation is one file we
have a bunch of rappers and obnoxious
have a bunch of rappers and obnoxious
other things that take up more files but
other things that take up more files but
generally I'd like to reduce the amount
generally I'd like to reduce the amount
of files and the amount of like
of files and the amount of like
abstractions not increase
abstractions not increase
it eventually there's just going to be a
it eventually there's just going to be a
puffer li. C or puffer li. h one of
puffer li. C or puffer li. h one of
these
these
days we can do that after we get
Revenue speaking of
Revenue speaking of
which I think it's about time to start
which I think it's about time to start
sending out some emails with that uh
sending out some emails with that uh
that company of
that company of
yours so I might want to be paying
yours so I might want to be paying
[Laughter]
[Laughter]
you because I've been getting a couple
you because I've been getting a couple
organic leads on stuff but it could use
organic leads on stuff but it could use
some help and I hate networking
puffer lib on
puffer lib on
pip well puffer is not on a performance
pip well puffer is not on a performance
Improvement plan but yes the package is
Improvement plan but yes the package is
on the uh the repository it's 1.0 mind
on the uh the repository it's 1.0 mind
you uh so like the core Tools in 1.0 are
you uh so like the core Tools in 1.0 are
there the demo and train scripts are
there the demo and train scripts are
meant to be user edited so those are
meant to be user edited so those are
from Source um and then the dev stuff is
from Source um and then the dev stuff is
obviously on
obviously on
dev pip andall puffer Li though for 1
back to work good luck with your
stuff we're making mini
grid get the key
and then it
fails agent
Keys death
tile minus
key1 oh
uh I think I
know wish I could get these to spawn on
know wish I could get these to spawn on
my same
monitor doesn't open the door
still for
the destination's a lock
the destination's a lock
door do have the wrong color
key the key
key the key
red no I have the right color
key for
oh we literally just messed this up is
oh we literally just messed this up is
all I just messed this up that's all
all I just messed this up that's all
that's
that's
dumb agent Keys is equal to
dumb agent Keys is equal to
one like this
right e
we didn't get a reached
goal where's a reached
goal where's a reached
goal what
happened looks like it got stuck at the
happened looks like it got stuck at the
end
right e
yeah not printing anything
was it not detecting the
goal are we just not running it long
goal are we just not running it long
enough
yep we're not running it long enough
yep we're not running it long enough
that was
it here we'll do this and now it should
it here we'll do this and now it should
work oop yay reach
goal so we got to clean this up a bunch
goal so we got to clean this up a bunch
but that's the basics of it right
that is the basics those are the
basics for
I think I kind of want to just bind this
I think I kind of want to just bind this
and start training on it instead of
and start training on it instead of
making it one to one
exactly I use gray for the walls
this is the only time they get get a
this is the only time they get get a
reward so this should be
good H let's just get the binding done
good H let's just get the binding done
for this
thing e
this is the boiler plate that annoys me
this is the boiler plate that annoys me
but we'll try to get through this
quickly
for e
just do
observations rewards and
observations rewards and
DS and then the constants right
self. n equals
self. n equals
init
init
GD this is going to be
grid.
grid.
dat
star this needs to be allocate doesn't
it
it
yeah we need to change a couple things
which is a bit obnoxious because like
which is a bit obnoxious because like
we're going to end up having to change
we're going to end up having to change
him
him
back but it's
okay these have to go
here cool right
m
observations actions rewards yeah okay
observations actions rewards yeah okay
so these are going to be allocated here
so these are going to be allocated here
and then we just do
and then we just do
Reen then we just
Reen then we just
do
do
Reen free all these buffers should be
good
retest Undeclared
identifier
grid
huh oh right
here that's
here that's
good uh cuz this doesn't need to be here
good uh cuz this doesn't need to be here
this needs to just go
this needs to just go
away and then this is a nit
away and then this is a nit
grid unsign
grid unsign
charar this is observations data action
charar this is observations data action
rewards uh this now needs to
rewards uh this now needs to
be is there no done
be is there no done
signal it's a
problem I wish there were a better way
problem I wish there were a better way
to do
this start DS
are
DS Rd
DS Rd
agents okay
with height
Vision cool so what I'm trying to do
Vision cool so what I'm trying to do
here is I'm just trying to pass all this
here is I'm just trying to pass all this
data from python so that when I update
data from python so that when I update
it Inc it just gets updated in Python
it Inc it just gets updated in Python
rather than having to copy it uh
rather than having to copy it uh
eventually what you can do is you can
eventually what you can do is you can
have all the memory allocations come
have all the memory allocations come
from Python and then you have full
from Python and then you have full
transparent access to the game state
transparent access to the game state
from python that's really
from python that's really
nice that takes a little bit more work I
nice that takes a little bit more work I
haven't figured out how to minimize the
haven't figured out how to minimize the
boiler plate associated with it is the
boiler plate associated with it is the
main obnoxious
main obnoxious
thing we can delete this block I don't
thing we can delete this block I don't
need it
anymore really don't need any of this
anymore really don't need any of this
garbage do
we okay I'm sure that there's stuff
we okay I'm sure that there's stuff
missing here but
yeah we need like step Don't We step and
yeah we need like step Don't We step and
reset at
least
[Music]
three okay so this still runs
three okay so this still runs
demo is
demo is
still I
still I
okay and now we have to get the binding
okay and now we have to get the binding
for this
thing
x what do we think right
here for
place let me check one thing real
quick expected nine got 10
observations actions rewards
DS forgot to add it
here where's sea snake being
here where's sea snake being
used this should be n
oops
oops
s. obervations with
height
Horizon still doesn't
Horizon still doesn't
build I think this takes a seed doesn't
build I think this takes a seed doesn't
it
or
or
two
whatever okay so this now
builds
builds
oops this now builds
you want to go grab the signature
you want to go grab the signature
from uh
srid with height oops we'll put this
srid with height oops we'll put this
here so we have
here so we have
width height
the moderately obnoxious thing is we
the moderately obnoxious thing is we
didn't actually bind the um the make
didn't actually bind the um the make
function for this specific environment
right I guess that's not
right I guess that's not
terrible we can just do render mode for
terrible we can just do render mode for
now like
this uh we do need
this uh we do need
OB size right
OB size right
Vision
Vision
Vision equals
three just happened here did I I deleted
three just happened here did I I deleted
a class
a class
okay this
get rid of all
this don't need any of this to be in
this don't need any of this to be in
Python land
Python land
[Music]
[Music]
anymore be
anymore be
one
zeros Rewards
zeros Rewards
we need
we need
this don't think
so I think all we need is
um now this will get set in a reset
there's like a bunch of just garbage in
here I forgot there's just so much
here I forgot there's just so much
boiler
boiler
plate it's going to take a quick uh it's
plate it's going to take a quick uh it's
going to take a
going to take a
second B
we have the whole freaking client in
we have the whole freaking client in
here don't
we just do
this yeah like literally none of these
this yeah like literally none of these
things need to be
things need to be
be here
anymore
Secret
e e
we don't need any of these things it
we don't need any of these things it
should literally just
should literally just
be uh actually I copied the wrong
be uh actually I copied the wrong
signature didn't
signature didn't
I oh what am I doing s. buff.
I oh what am I doing s. buff.
observations
observations
actions rewards duns
the heck what am I
doing something like
this
this
agents I
reward
zero so much garbage
here
right no longer need any of this
just
just
need just need
this but forwards fill
zero way too much code here
I'm realizing that I have quite a bit to
I'm realizing that I have quite a bit to
for if I want to replicate both this new
for if I want to replicate both this new
thing and the functionality of my old
thing and the functionality of my old
grid
grid
en this might end up being a few Day
en this might end up being a few Day
project instead of like a one- day
project instead of like a one- day
project like I intended it to but it's
project like I intended it to but it's
okay cuz we'll get like I mean this is
okay cuz we'll get like I mean this is
the last other environment that I'd
the last other environment that I'd
already built that's like at least other
already built that's like at least other
than the like the secret one um so
than the like the secret one um so
getting this online will be cool you
getting this online will be cool you
know we'll have a lot of different
know we'll have a lot of different
versions of this that we can put
online
for e
I'm getting like brain lag doing this I
I'm getting like brain lag doing this I
don't know
come
on okay now we should be able to debug
on okay now we should be able to debug
this
right poer grid has
noer
grid n
let's
maybe we just bind like this for
maybe we just bind like this for
now and then we like
oops like maybe what we do is we just
oops like maybe what we do is we just
put
this we put this into grid. H right
and like precepts or
whatever and then we go right
here we don't actually need this if you
here we don't actually need this if you
think about it right we just
need like
need like
this and then we'll
this and then we'll
do like we don't even need
this for
just like
this oh we don't even have Vision in the
this oh we don't even have Vision in the
Sig just do
this one given reset
valid
action okay
What's Happening
What's Happening
Here is I have crazy settings and that I
Here is I have crazy settings and that I
they're not not optimized well enough
they're not not optimized well enough
yet yeah you can see the batch size is
yet yeah you can see the batch size is
like something
like something
crazy and then the number of Ms here
crazy and then the number of Ms here
should probably
be let's just do like this I don't
be let's just do like this I don't
know oh wait n batch size should
know oh wait n batch size should
be four probably
be four probably
right or 512
yeah there you go so now that's like an
yeah there you go so now that's like an
initial train thing working uh this is
initial train thing working uh this is
more than an order of magnitude too slow
more than an order of magnitude too slow
so we'll fix
so we'll fix
that and we'll fix a bunch of other
that and we'll fix a bunch of other
things from here and basically the goal
things from here and basically the goal
then will today will be to solve this
then will today will be to solve this
environment to get it working and to
environment to get it working and to
solve it I have no idea how hard it'll
solve it I have no idea how hard it'll
be to solve it we could do some back to
be to solve it we could do some back to
the
the
envelope but maybe you
know I'm going to be right back I'm just
know I'm going to be right back I'm just
going to use the restro from real quick
going to use the restro from real quick
grab a drink and uh then we will we'll
grab a drink and uh then we will we'll
get logging into this I'll show you how
get logging into this I'll show you how
we're going to speed this up and so on
we're going to speed this up and so on
be right
be right
back
sore
e
e
e
e e
you know I'm realizing here that
you know I'm realizing here that
uh once we do this if I just bind some
uh once we do this if I just bind some
existing board games for some stuff
existing board games for some stuff
we're going to have a whole bunch of
we're going to have a whole bunch of
more environments that are like already
more environments that are like already
implemented fast assuming I actually
implemented fast assuming I actually
that there are fast implementations of
that there are fast implementations of
board games but like you know throw in
board games but like you know throw in
puffer liit chess that could be kind of
puffer liit chess that could be kind of
cool
right I don't know maybe the alpha zero
right I don't know maybe the alpha zero
stuff is just like dated maybe we can
stuff is just like dated maybe we can
just do stuff
just do stuff
better I'm sure MCTS is hard to beat
better I'm sure MCTS is hard to beat
without MCTS
without MCTS
but maybe it's just fast
enough maybe we have the
technology Twitter was blowing
technology Twitter was blowing
up the heck is going on here oh
up the heck is going on here oh
literally just a meme
literally just a meme
okay nothing doing here let's go back to
okay nothing doing here let's go back to
real
real
work hey pdbs how's it
work hey pdbs how's it
going we're implementing this thing for
going we're implementing this thing for
puffer today super
puffer today super
fast because it says that you can't
fast because it says that you can't
really solve it with vanilla
really solve it with vanilla
RL and I think we probably
can also Pokemon has been somewhat
can also Pokemon has been somewhat
stalled by um the hardware curfuffle but
stalled by um the hardware curfuffle but
I just got off Main gear uh with main
I just got off Main gear uh with main
gear today and they say they're going to
gear today and they say they're going to
do some part swaps and send the stuff
back I think I showed I don't know if I
back I think I showed I don't know if I
showed you this but
showed you this but
uh this is cool we have m's online now
uh this is cool we have m's online now
they're like playable
they're like playable
they're not fully finished yet but like
they're not fully finished yet but like
you know beta of puffer
you know beta of puffer
mooba Dash strike the
neutrals there's like where is it who's
neutrals there's like where is it who's
cool yeah this guy's
cool yeah we've got the snake
cool yeah we've got the snake
en and then we have some by contributors
en and then we have some by contributors
that I just poured it over they did it
that I just poured it over they did it
in scon and then I help with the c Port
in scon and then I help with the c Port
so we got breakout and pong
so we got breakout and pong
now and they're ludicrously
now and they're ludicrously
fast we haven't even full optimized them
fast we haven't even full optimized them
yet and they are ludicrously fast like
yet and they are ludicrously fast like
why are we wasting all this compute on
why are we wasting all this compute on
slow Ms when we can just make the MS be
slow Ms when we can just make the MS be
fast and solve the same exact problem
fast and solve the same exact problem
but
but
faster yeah so we're going to add minig
faster yeah so we're going to add minig
grid to this we're going to try to get a
grid to this we're going to try to get a
build of mini grid to add to this today
build of mini grid to add to this today
or like puffer minig Grid at least with
or like puffer minig Grid at least with
a couple scenarios
a couple scenarios
um maybe it'll take me a couple days
um maybe it'll take me a couple days
we'll
we'll
see and we'll go from
there I've been enjoying my
there I've been enjoying my
sea I've been very much enjoying my sea
I will agree with you that this that if
I will agree with you that this that if
I did this in C++ it would probably not
I did this in C++ it would probably not
be a lot of
be a lot of
fun but I'm liking my very brain dead
fun but I'm liking my very brain dead
simple C
me figure out what I want to fix here I
me figure out what I want to fix here I
think we just need to
think we just need to
get we need to get like a step all
get we need to get like a step all
function
function
right there any reason that we need to
right there any reason that we need to
step all
step all
and see instead of
cython not really
like
this for
is it size of
is it size of
En I guess it is
but this is also this allocates as
well is this supposed to be an M star
well is this supposed to be an M star
star I don't like M star star
though okay that is somewhat
obnoxious cuz this is technically an
obnoxious cuz this is technically an
mstar star we'll do this gross thing for
mstar star we'll do this gross thing for
now
it should be fine
right e
standard up we also don't have
um we need the header stuff don't
we oops
yeah we need all
this we want cic not
Malik reset
okay canot
okay canot
assign okay we'll just
assign okay we'll just
do M star star
do M star star
oops this angle bracket cast syntax
and I'm sure this is we're missing an
and I'm sure this is we're missing an
ARG yep we're missing an
ARG oh we got a fair few folks on
ARG oh we got a fair few folks on
YouTube at the moment welcome
YouTube at the moment welcome
everyone we're currently
everyone we're currently
implementing this little RL environment
implementing this little RL environment
it's very simple but this is like a well
it's very simple but this is like a well
it looks simple but it's a pain to solve
it looks simple but it's a pain to solve
but regardless um this is like a very
but regardless um this is like a very
common thing that's played around with
common thing that's played around with
an RL we're implementing it really
an RL we're implementing it really
really fast in puffer lib and uh yeah
really fast in puffer lib and uh yeah
we're going to go from there so
we're going to go from there so
hopefully we'll have some version if I
hopefully we'll have some version if I
can get this written fast we'll have
can get this written fast we'll have
some version of this online uh end if
some version of this online uh end if
today as the hope we'll see though I got
today as the hope we'll see though I got
a really late start today I got to bed
a really late start today I got to bed
on time and everything I was like ready
on time and everything I was like ready
all ready to get an early start today
all ready to get an early start today
and I just couldn't
sleep too much cool stuff going
on so I messed up my schedule a bit
m
e e
agents let's try
this no attribute num
M's it's like funny cuz I'm at a stage
M's it's like funny cuz I'm at a stage
now where everything here makes
now where everything here makes
sense like everything I'm doing here
sense like everything I'm doing here
makes complete sense to me but there's
makes complete sense to me but there's
just too much boiler plate it's like too
just too much boiler plate it's like too
clunky you know what I
clunky you know what I
mean like I know every single thing
mean like I know every single thing
that's going wrong here everything is
that's going wrong here everything is
very easy but there's just too much
very easy but there's just too much
boiler plate also this is about to make
boiler plate also this is about to make
a trillion environment so let's fix that
a trillion environment so let's fix that
before that
happens m is going to be two
happens m is going to be two
that size will be two I think this is
that size will be two I think this is
how it works
right
oops M take zero
oops M take zero
time
interesting e
I don't know what's going on with the
I don't know what's going on with the
training taking that long that's weird
training taking that long that's weird
oh probably we just have some janky
oh probably we just have some janky
hyper parameters or
something yeah here it
is yeah we got batch size mini bat size
is yeah we got batch size mini bat size
can be like
can be like
32k size will be like 128
120 what 32k *
120 what 32k *
4 it's like 129
something
something
131 I should know
that uh interesting
I do something weird yes I did this is
I do something weird yes I did this is
insane this is supposed to be 16 and
insane this is supposed to be 16 and
this is supposed to be
131 there we go there's
131 there we go there's
400k and we're on the not as good
400k and we're on the not as good
desktop at the
desktop at the
moment uh so that's nice and fast but
moment uh so that's nice and fast but
we're not actually passing the data
we're not actually passing the data
around that we should be so we need to
around that we should be so we need to
fix that
which really shouldn't be very hard
which really shouldn't be very hard
we're really just suffering under the
we're really just suffering under the
weight of these um these bindings to be
weight of these um these bindings to be
honest with
you that's just the main thing that's a
you that's just the main thing that's a
pain the way to the
bindings let's see how this is
bindings let's see how this is
done so yeah this make locked room and
done so yeah this make locked room and
this needs to
this needs to
be uh we need like
be uh we need like
mstar in it locked room n or whatever
right and most of this code should go
there so we're going to copy the
there so we're going to copy the
imple and this is going to
be oops down here
okay so now we have an anit function
okay so now we have an anit function
instead of an allocate function
add the
add the
unsigned rations actions rewards flood
unsigned rations actions rewards flood
stes Okay cool so now we have an init
stes Okay cool so now we have an init
version of this uh that takes all of
version of this uh that takes all of
this and now the allocate
this and now the allocate
function or the make function should be
function or the make function should be
very very simple by comparison because
very very simple by comparison because
this should just be
me
me
say uh my head
hurts get rid of this for
now let's just get this working for
now let's just get this working for
testing
error s
error s
grid nit locked Rim okay
sure we'll just call this to
sure we'll just call this to
make this will just have to be
make this will just have to be
obnoxiously quick and dirty until we uh
obnoxiously quick and dirty until we uh
we figure this out because it's just
we figure this out because it's just
like the thing that's like the reason
like the thing that's like the reason
I'm being completely incoherent at the
I'm being completely incoherent at the
moment with this is that
moment with this is that
like when you when you want to run this
like when you when you want to run this
code from C you have to allocate all the
code from C you have to allocate all the
data but then when you want to run this
data but then when you want to run this
from python you have to pass in all the
from python you have to pass in all the
data structures so that data gets
data structures so that data gets
mirrored to uh between Python and c and
mirrored to uh between Python and c and
then you also have to run many of these
then you also have to run many of these
environments in the same time in the
environments in the same time in the
same process and you have to make sure
same process and you have to make sure
that the specific slices of data go
that the specific slices of data go
there and uh none of this is
there and uh none of this is
particularly difficult but it's very
particularly difficult but it's very
annoying to do with without like
annoying to do with without like
scattering these giant function call
scattering these giant function call
signatures everywhere um and having lots
signatures everywhere um and having lots
of different versions of them and it's
of different versions of them and it's
very confused but I mean regardless we
very confused but I mean regardless we
should be able to get like a basic thing
should be able to get like a basic thing
training first and then we can figure
training first and then we can figure
out how to like make this easier in a
out how to like make this easier in a
bit I really would like to just have
bit I really would like to just have
this thing training today by whatever
this thing training today by whatever
means
necessary so this needs to have
necessary so this needs to have
unsigned this needs to have a different
unsigned this needs to have a different
signature and then this needs to also
signature and then this needs to also
get
the this is where it gets to be a little
the this is where it gets to be a little
obnoxious right I think
it's see so this is kind of wrong it's
it's see so this is kind of wrong it's
observations like of
observations like of
i. data
I think this should do
it python
objects we not do this is it just
objects we not do this is it just
binding too
tightly I don't think it should in
see but here let's just make sure
see but here let's just make sure
python
objects cannot be cast to pointers of
objects cannot be cast to pointers of
primitive
types you sure
oh because it doesn't know that this is
oh because it doesn't know that this is
a a numpy array as
well uh that's obnoxious
um
um
CNP the
CNP the
array yeah I think you have to do this
array yeah I think you have to do this
it's it's just not it's it's not uh the
it's it's just not it's it's not uh the
compiler doesn't
compiler doesn't
know it gets confused between Python and
know it gets confused between Python and
C types even when it's correct I
think syntax
error
error
simple really what's wrong with this
observations this is why I think that
observations this is why I think that
actually the C is easier than the scon
actually the C is easier than the scon
the C has actual error messages that
the C has actual error messages that
make sense what the hell is this
right and
right and
simple and the
array syntax error
oh I'm
dumb it's literally just
dumb it's literally just
this but like the fact that it doesn't
this but like the fact that it doesn't
give you a reasonable error message is
give you a reasonable error message is
really
obnoxious and yeah you're not allowed to
obnoxious and yeah you're not allowed to
have
um you're not allowed to
um you're not allowed to
have you're not allowed to have
have you're not allowed to have
declarations in loops
declarations in loops
so I have to do this right and then I
so I have to do this right and then I
have to
have to
do like
this and now it'll
this and now it'll
build
almost 382
wrong
wrong
here oh do I have the wrong
types what's wrong with
this
this
oh I
oh I
copied I know how I did that
reasonable error messages reasonable
reasonable error messages reasonable
error messages my kingdom for reasonable
error messages my kingdom for reasonable
error
messages and do we need all
messages and do we need all
this this is Agent speed
right okay finally
compiles cannot
convert to
K not convert
oh hold
oh hold
on hold
on hold
on you need to pass a slice
on you need to pass a slice
here needs to be a
slice like this because otherwise
slice like this because otherwise
because you're slicing a single thing a
because you're slicing a single thing a
single variable it just turns it into an
single variable it just turns it into an
INT you want the memory
INT you want the memory
view Malik invalid
view Malik invalid
size
okay invalid
okay invalid
size what's wrong with
this un invalid size unsorted
what happens
B okay so this has got to be the invalid
size do eight this is disgusting never
size do eight this is disgusting never
do this
but still invalid
but still invalid
really I thought I'd just do the size of
really I thought I'd just do the size of
a
pointer I could do this portion in
uh I could do this portion in C I guess
instead of doing it in the scon
instead of doing it in the scon
layer might be a little
easier this has got to be because the
easier this has got to be because the
type is not fully defined
type is not fully defined
right I would imagine
can I just like paste this
can I just like paste this
stuff but then I have to do the agent as
well freaking scon we really need better
well freaking scon we really need better
ways to bind stuff uh from
ways to bind stuff uh from
c those bindings are just disgusting
we typed abstruct
you just have to we'll leave the
you just have to we'll leave the
semicolons on it doesn't hurt
anything but this is what I mean by the
anything but this is what I mean by the
bindings being a total
bindings being a total
pain like I'm doing this in the hopes
pain like I'm doing this in the hopes
that this will make the
that this will make the
compiler understand what I'm trying to
compiler understand what I'm trying to
do with this
allocation I got to do now I have to do
allocation I got to do now I have to do
bull to beant because
bull to beant because
some reason bull doesn't work in
some reason bull doesn't work in
scyon then I have num Keys here which is
scyon then I have num Keys here which is
like six hard code
whatever still doesn't
Malik by the V Star Maybe
Malik by the V Star Maybe
this should give me
eight is it not an
mstar it should be an mstar
no I mean M star star
I I can do this I don't think this is
I I can do this I don't think this is
correct
though yeah you see
n this should be correct like this
n this should be correct like this
something's
weird let me just make sure that it's
weird let me just make sure that it's
actually crashing where I
think maybe it's not crashing where I
think maybe it's not crashing where I
think
see it's not crashing where I
see it's not crashing where I
thought Malik invalid
thought Malik invalid
size where is it
uh where is it allocating wrong side
invalid size
unsorted it's on the second
call that's weird
maybe self. M's of I
this looks
good what is the invalid size being
good what is the invalid size being
passed no
wonder width times height
no
agents these are all hardcoded it should
agents these are all hardcoded it should
be
fine could be this stuff down here that
fine could be this stuff down here that
I'm overwriting
I'm overwriting
maybe I have a dress sanitizer on
though what do you is
this yeah so overwriting some
memory I should just redo the binding
memory I should just redo the binding
for C I should just like do this from
for C I should just like do this from
c um and that should probably find the
eror in fact I mean I could just like
eror in fact I mean I could just like
do the make all thing and
see I would also probably find it I
see I would also probably find it I
probably should not be doing my
probably should not be doing my
allocations from scyon that's like the
allocations from scyon that's like the
one place I probably should not be doing
one place I probably should not be doing
them right
h
lock room m
how can I rewrite this
maybe it should be like a setup or
something it's like weird because the
something it's like weird because the
inip function needs width and height and
inip function needs width and height and
such
right so this has to call the
right so this has to call the
initializer
I don't know why I'm stuck on this this
I don't know why I'm stuck on this this
should be very very
should be very very
easy like tremendously tremendously easy
easy like tremendously tremendously easy
but something is just not clicking here
like the
issue yes the issue is just like not
issue yes the issue is just like not
having default parameters I guess is
having default parameters I guess is
making it
making it
clunky it really shouldn't matter that
much yeah cuz like this
much yeah cuz like this
is these are fixed anyways right
I I could just for
I I could just for
now
right if I don't mind doing it this
right if I don't mind doing it this
way and like just completely
way and like just completely
ignoring for now we can just do allocate
here and then I can go to grid.
C now this can
C now this can
[Music]
be Al look
this is
this is
allocate
and Je okay
this is totally
fun this 408 bytes is from RB
what can I like not allocate multiple of
what can I like not allocate multiple of
these or something is that what going
on star star
do this this goes to the
top and then we'll just do like
I less than
41 plus
41 plus
plus do
I'm just trying to see if we can
I'm just trying to see if we can
reproduce this weird memory bug that we
reproduce this weird memory bug that we
can get this thing running already
okay so we're leaking a bunch of
bites let's figure out what we're
leaking oh well so we're obviously
leaking we didn't free this right so we
leaking we didn't free this right so we
have to
close free allocated
close free allocated
grid and then we're going to do
oops okay so we do have a double threee
oops okay so we do have a double threee
here
re ah okay so this free allocated
re ah okay so this free allocated
function is
redundant allocate does OBS actions
redundant allocate does OBS actions
rewards DS
agents so this allocates m grid
agents there we go no more memory
agents there we go no more memory
leaks does this help the um
no doesn't like it
no doesn't like it
still well maybe we should just do all
still well maybe we should just do all
of our inits from uh from C because this
of our inits from uh from C because this
is obnoxious right we saw how easy it
is obnoxious right we saw how easy it
was to do this in
purec I me it's pretty much just this
purec I me it's pretty much just this
code right
here the only thing is we're going to
here the only thing is we're going to
have to
have to
map observations over but it's
map observations over but it's
not that great
we're going to just do it in here
we're going to just do it in here
because I know that this should
because I know that this should
work allocate lock room
work allocate lock room
en we're going to this is init locked
en we're going to this is init locked
room en or whatever right make locked
room en or whatever right make locked
room
en make lock
rooms uh
unor for
like
this this is almost right but we have to
this this is almost right but we have to
do uh the offset
here this is and observations of
I
I
times Well division is three so 7 * 7 or
times Well division is three so 7 * 7 or
something obviously we're not going to
something obviously we're not going to
leave this
hardcoded
hardcoded
okay reset
I and that is
I and that is
all then you can just do step
all then you can just do step
Ms wait
Ms wait
step
M
right 3 m
reset
M bind all this to scon
need this don't need
this so now this
this so now this
goes we still have M star star here
goes we still have M star star here
but now we get to directly pass in
but now we get to directly pass in
uh this gets to just
be make locked
be make locked
rooms with all these data types uh like
this and then we'll just do reset ends
this and then we'll just do reset ends
like
this into
this into
here so we don't even have the loop in
here so we don't even have the loop in
scyon which is no big deal either way
scyon which is no big deal either way
but step
but step
ends uh sure this is fine and then we
ends uh sure this is fine and then we
have 3M
okay so this test still pass passes it
okay so this test still pass passes it
still
compiles cannot
compiles cannot
[Music]
[Music]
assign
3M cannot assign type
3M cannot assign type
M star
star
huh oh I it's all in all of them right
okay so we have the same
okay so we have the same
bug reset
M cannot assign
M cannot assign
we don't have it on the make though we
we don't have it on the make though we
just have it on
this it takes M star star M's
right cannot
assign
assign
type mstar star to mstar this is why you
type mstar star to mstar this is why you
never use freaking double
pointers like
pointers like
ever if I had been smarter I would have
ever if I had been smarter I would have
written it in a way that wouldn't have
written it in a way that wouldn't have
required it which I know how to
do but it would make require some more
do but it would make require some more
work at this point
is this actually happening
is this actually happening
what reset
what reset
Ms oh it it messed up the signatures
Ms oh it it messed up the signatures
here damn
here damn
it I don't know why I didn't get the
it I don't know why I didn't get the
error on uh make locked M I should have
error on uh make locked M I should have
gotten the error up
top there we
go cool so now this is training and
go cool so now this is training and
maybe there's actually reasonable data
maybe there's actually reasonable data
coming through this
maybe I mean regardless let's figure out
maybe I mean regardless let's figure out
uh what we're going to do
uh what we're going to do
here we definitely need to get rewards
here we definitely need to get rewards
from
this e
I'm trying to think how I want to record
I'm trying to think how I want to record
this data
i' like mentally got some sort of block
i' like mentally got some sort of block
with this right now I don't know what it
with this right now I don't know what it
is I think it's just making me
is I think it's just making me
uncomfortable that
uncomfortable that
um like all this binding stuff is just
um like all this binding stuff is just
making me very
making me very
uncomfortable cuz like I know that
uncomfortable cuz like I know that
there's so many places that could have
there's so many places that could have
potential
potential
errors but I really just need to charge
errors but I really just need to charge
ahead with this and get something
running this is absolutely awful code
though we got Horizon
and is there a time step on
here
here
tick do like
tick do like
this grid
this grid
reset just
reset just
do pick is zero
if
Horizon do I want this to reset it or do
Horizon do I want this to reset it or do
I want to reset it I want this to reset
I want to reset it I want this to reset
it right
I don't want to even bother setting
DS I the thing that's bothering me I
DS I the thing that's bothering me I
think I figured out what it is the thing
think I figured out what it is the thing
that is bothering me here is that I know
that is bothering me here is that I know
that this is like a very sparse task
that this is like a very sparse task
that's going to require this thing to be
that's going to require this thing to be
really correct and it's going to be very
really correct and it's going to be very
difficult for me to tell whether it's
difficult for me to tell whether it's
really correct um if I mess little
really correct um if I mess little
things up here and there
so but there are ways around that I can
so but there are ways around that I can
leave like a reward Trail or something
it's still just bothering me and it's
it's still just bothering me and it's
bothering to me to the point that I'm
bothering to me to the point that I'm
like stuck on writing code because I
like stuck on writing code because I
know that there going to be
issues
m
for I'm like really tempted to just take
for I'm like really tempted to just take
a step back and try to do this thing
a step back and try to do this thing
correctly as this is driving me
correctly as this is driving me
nuts it's also four and I haven't had a
nuts it's also four and I haven't had a
I need to get like a shake and some
stuff like what I should have done
here are you using po to train all these
here are you using po to train all these
M yeah
M yeah
poo kind of just solves
poo kind of just solves
everything when things are fast enough
everything when things are fast enough
as far as we've
as far as we've
seen when you have good hyper parameter
seen when you have good hyper parameter
sweeps and good
infra let me see if I'm making some
infra let me see if I'm making some
oversight here
because it really shouldn't be that bad
yeah I think I'm just overthinking it
yeah I think I'm just overthinking it
all I need to do is I need to figure out
all I need to do is I need to figure out
a good way to get
a good way to get
trajectory rewards and I should be
set for
how do I get that data back to
how do I get that data back to
the environment
the environment
cleanly when this has to run this fast
because I don't want to Loop over all
because I don't want to Loop over all
these M's in Python right
I don't know what the mental block is
here it should be so
here it should be so
easy there's something I'm like missing
I guess it's cuz like
um if you actually have to write any
um if you actually have to write any
Loop in Python since it's single agent
Loop in Python since it's single agent
like it's way worse than in the
like it's way worse than in the
multi-agent case I
guess so return
drink a
drink a
shake other Pi is making Gaines right
now while this Pi
now while this Pi
here squatted uh after nearly killing
here squatted uh after nearly killing
myself luckily I had safe
where's the
thing I should go get my shake though
thing I should go get my shake though
you're right my head is just all
you're right my head is just all
fuzzy this is is
fuzzy this is is
265 265 for 3 sets of
265 265 for 3 sets of
five I think I'm pretty good
there hey a carsh how's it going
man I'm currently trying to implement
man I'm currently trying to implement
minig Grid at like 10 million steps a
minig Grid at like 10 million steps a
second and I'm being very dumb about it
second and I'm being very dumb about it
how's it going
how's it going
though AAR is um one of Philip students
though AAR is um one of Philip students
former lab
former lab
mate I guess you're probably back at MIT
mate I guess you're probably back at MIT
right is MIT MIT must have started by
right is MIT MIT must have started by
now
now
right hope your Summer's been good
have you seen
have you seen
these These are
these These are
fun it's not quite league but uh you
fun it's not quite league but uh you
know it's a little bit of
it you got some Classics as
well a life project wrapping up
well a life project wrapping up
cool very nice
I was trying to figure out how to
I was trying to figure out how to
implement minig grid uh very fast but
implement minig grid uh very fast but
then I just
then I just
like I don't know there are a couple
like I don't know there are a couple
weird things with this that I didn't run
weird things with this that I didn't run
into for some reason with the other
into for some reason with the other
M's I mean they should in theory be the
M's I mean they should in theory be the
exact same come to think of
it didn't I literally do this in
pong the bindings here
I guess it's this reward Su
I guess it's this reward Su
thing yeah I guess I just did it in
Python oh no there is some additional
Python oh no there is some additional
loging
loging
here EOS alos came to MIT and shaded
here EOS alos came to MIT and shaded
building a large aife
building a large aife
simulator and training agents and is
simulator and training agents and is
doomed to
doomed to
succeed that's
cool I am somewhat well I don't know if
cool I am somewhat well I don't know if
I'd say suspicious I think you'll get I
I'd say suspicious I think you'll get I
think you'll get cool behaviors out of
think you'll get cool behaviors out of
aif for sure aif style Sims it's very
aif for sure aif style Sims it's very
hard to make them interpretable without
hard to make them interpretable without
tying them to something like a game
tying them to something like a game
though
but yeah as for building uh building
but yeah as for building uh building
Sims we're pretty much at a point where
Sims we're pretty much at a point where
we can build whatever we want Ultra
we can build whatever we want Ultra
Ultra fast now um and we have puffer
Ultra fast now um and we have puffer
will actually keep up with it which is
will actually keep up with it which is
nice you know we've got million step per
nice you know we've got million step per
second training runs once you optimize a
second training runs once you optimize a
bit neural MMO style
Sims oh I got to get my uh my secret
Sims oh I got to get my uh my secret
project done then
project done then
it's been like basically releasable for
it's been like basically releasable for
a long time now uh but what happened you
a long time now uh but what happened you
see
see
is I didn't want to release it without
is I didn't want to release it without
it being like something that would catch
it being like something that would catch
on and a lot of people would get to see
on and a lot of people would get to see
and interact with so I started porting
and interact with so I started porting
it to C so I could put it on the web and
it to C so I could put it on the web and
that's going to take a little time I
that's going to take a little time I
actually have a a demo of it ready but
actually have a a demo of it ready but
uh it just it needs a little bit more
uh it just it needs a little bit more
work it's like 3,000 lines of C plus a
work it's like 3,000 lines of C plus a
couple of shaders
couple of shaders
it's even longer than the Moa like 50%
it's even longer than the Moa like 50%
more code than the
more code than the
Moa it's quite a bit I think the next
Moa it's quite a bit I think the next
patch to puffer lib is going to be close
patch to puffer lib is going to be close
to 10,000 lines of C for the next puffer
to 10,000 lines of C for the next puffer
lib update which is way larger than the
lib update which is way larger than the
size of the puffer lip core
the key errors that I've seen with a lot
the key errors that I've seen with a lot
of these simulators that people build
of these simulators that people build
right is they either they try to do they
right is they either they try to do they
try to do them in Jacks and then they
try to do them in Jacks and then they
get limited on what they can actually
get limited on what they can actually
build or um you know they don't do them
build or um you know they don't do them
in Jacks but they don't like they do
in Jacks but they don't like they do
them in python or whatever and they end
them in python or whatever and they end
up being
up being
slow the two main things I've seen
WS come on this is so simple I should be
WS come on this is so simple I should be
able to have um
well there are kind of like things that
well there are kind of like things that
are a bit wrong here right because this
are a bit wrong here right because this
win
rate this win rate thing needs to get
reset oh no it is correct isn't
reset oh no it is correct isn't
it
it
uh not quite Maybe
h
okay I really need to just go make a
okay I really need to just go make a
shake and take a few minutes because my
shake and take a few minutes because my
brain is just like not letting me think
brain is just like not letting me think
about very simple things at this point
about very simple things at this point
um I basically all that needs to happen
um I basically all that needs to happen
here is I just need to come up with a
here is I just need to come up with a
clean and slightly more efficient way
clean and slightly more efficient way
than this to uh to get the log data back
than this to uh to get the log data back
into the minig grid end and we should
into the minig grid end and we should
already be able to train and I really
already be able to train and I really
want to have that working today so we
want to have that working today so we
can actually see things being solved so
can actually see things being solved so
uh yeah I'm going to take a couple
uh yeah I'm going to take a couple
minutes real quick I'm going to do that
minutes real quick I'm going to do that
and then I'll be right back and uh we'll
and then I'll be right back and uh we'll
finish this
properly
e
e
e
e
e
e
e
e
e
e
e
e
e
e
e
e e
[Music]
[Music]
okay so I don't think I was being as
okay so I don't think I was being as
dumb as I thought with the original
dumb as I thought with the original
thing there is kind of a little bit of
thing there is kind of a little bit of
subtlety to it
there's a little bit more subtlety than
there's a little bit more subtlety than
I originally gave the problem
I originally gave the problem
credit I have credit
for I think I really want this layer in
for I think I really want this layer in
scon
scon
um or
um or
rather I really want this
rather I really want this
layer here in
scon do
scon do
I well to be fair I can have these
I well to be fair I can have these
functions be in cython I mean in uh in C
functions be in cython I mean in uh in C
this is fine
this is fine
right and like for now at least oops
I can have these functions
I can have these functions
be uh in
scon and then I should be able to come
scon and then I should be able to come
over
over
to
Red I guess this step M thing causes a
Red I guess this step M thing causes a
problem huh
because basically what I would like to
because basically what I would like to
do right is I would like to do like
do right is I would like to do like
um
um
int num finished float
some
some
episode reward
episode reward
right and then I would like to just
go I'm not in
reset i' like step
this yeah this is what it was I just
this yeah this is what it was I just
didn't want to add like more structure
didn't want to add like more structure
into the C
code done equals
code done equals
this and then we'll just
this and then we'll just
do if done
episode where is it episode
return yeah it's funny I immediately
return yeah it's funny I immediately
feel better I literally just hadn't had
feel better I literally just hadn't had
anything to eat
this is what you
this is what you
want and then we'll be able to get these
want and then we'll be able to get these
variables from uh from
python for
okay now this m just needs to
okay now this m just needs to
have episode
return
return
this tick float episode return
tick episode return goes to
tick episode return goes to
zero and then when you
step this should be bull
step we're going to ignore the fact that
step we're going to ignore the fact that
it
it
is uh single
is uh single
agent for now we're going to do BU done
agent for now we're going to do BU done
is
false done this
through
this turn
done we also have to add the
pick plus equal 1
if
this there we go so now we should have
this there we go so now we should have
uh the thing that we want
here we no longer
here we no longer
need all these
functions um I think we'll leave them
functions um I think we'll leave them
for now just in
for now just in
case but this should be substantially
case but this should be substantially
easier and then the way that this is
easier and then the way that this is
going to look
going to look
right is we're going to have report
right is we're going to have report
interval
interval
for Interval is going to be
128 and then we're going to
say Port
interval
interval
if
if
interval equal to
interval equal to
zero you don't need episode return
like
this let's figure out what we have to
this let's figure out what we have to
fix in order to make this
work do not convert
really M has no attribute episode return
okay well it does but I didn't add it to
okay well it does but I didn't add it to
the struct I
believe right
here assign and then the the signature
here assign and then the the signature
Chang this is now a
Chang this is now a
bent and now this compiles
I think we also need to
change uh we need to add the tick
change uh we need to add the tick
right this is self. tick
but this is going to log very
infrequently H not that
bad and then of course this is getting
bad and then of course this is getting
zeros uh so what we're going to do is
zeros uh so what we're going to do is
we're going to
we're going to make this be something
we're going to make this be something
that is way easier
temporarily so this is spawn Y is going
temporarily so this is spawn Y is going
to be a seven plus
to be a seven plus
Vision spawn X is going to
Vision spawn X is going to
be I'm plus
Vision be
Vision be
goal so essentially
so essentially I'm just trying to make
so essentially I'm just trying to make
this a really easy task to see if we
this a really easy task to see if we
actually get the logs in our
learning looks like it
maybe we have some crazy hyper
maybe we have some crazy hyper
parameters
right I think we have some crazy
hyers yeah we don't need this to be this
hyers yeah we don't need this to be this
ridiculous
ridiculous
so what we have
4096 mini batch can be
4096 mini batch can be
like 9
like 9
two uh the batch size does have to be
two uh the batch size does have to be
insane though doesn't
insane though doesn't
it with 4096 M like
it with 4096 M like
this not
this not
really you can just do 4096 *
16 what's that
oh
oh
duh so we'll do
65k and uh we'll basically just see if
65k and uh we'll basically just see if
this does
anything interesting that it goes to one
immediately and it backs off
possibly rewards not getting set
possibly rewards not getting set
correctly
some
some
orang
orang
oops
some try this
some try this
I just want to see if we're actually
I just want to see if we're actually
getting any
rewards oh we
are and then it crashes
oh of course it does because when you
oh of course it does because when you
reset the environment right it doesn't
reset the environment right it doesn't
reset properly yeah we never did proper
reset properly yeah we never did proper
resets
m for
what's the intuition
what's the intuition
between how your modifying your
between how your modifying your
HPS hyper prams like batch size learning
HPS hyper prams like batch size learning
rate are there general
rate are there general
rules that you're following before carbs
rules that you're following before carbs
yeah so what I'm doing at the moment um
yeah so what I'm doing at the moment um
mini batch size is going to be at least
mini batch size is going to be at least
4096 that is for Hardware because it's
4096 that is for Hardware because it's
basically free to increase it up to that
basically free to increase it up to that
size with networks that small and then
size with networks that small and then
in order to get at least like 16 back
in order to get at least like 16 back
prop Through Time Horizon which is
prop Through Time Horizon which is
really on the low end it should really
really on the low end it should really
be much higher than that multiply by 16
be much higher than that multiply by 16
to get 65k
to get 65k
and then uh I deleted all the other
and then uh I deleted all the other
carbs perms because they were for
carbs perms because they were for
different environments um so like they
different environments um so like they
had some like crazy settings so it's
had some like crazy settings so it's
just using the defaults for the rest of
just using the defaults for the rest of
them but mainly it's just the uh you
them but mainly it's just the uh you
know get your reasonable Hardware
know get your reasonable Hardware
optimized ones uh the issue at the
optimized ones uh the issue at the
moment is not hyper prams the issue at
moment is not hyper prams the issue at
the moment is me not resetting the M's
correctly definitely that
got it thanks yeah
so all I'm trying to do now is get like
so all I'm trying to do now is get like
relatively efficient resets this is
relatively efficient resets this is
super hacky right but
uh I just really want to see this
uh I just really want to see this
environment get solved today and then we
environment get solved today and then we
can worry about everything else after
oh yeah right
here e
that's
funny e
grid address empty
grid address empty
failed okay
very obnoxious
I see the problem
I see the problem
here but I don't like it for
we could always just do
this still
this still
know really
oh yeah because you
have
really that's multiple
really that's multiple
M's reset lock room n
allocate locked room
end then reset
end then reset
locked room and
is it actually building
is it actually building
correctly it seems very
weird
yeah is building
correctly what I'm literally setting it
correctly what I'm literally setting it
all to empty as
well for
the heck would be
there oh wait maybe this is not where
there oh wait maybe this is not where
it's failing
no this literally it's failing right
here even though I'm clearing the whole
here even though I'm clearing the whole
damn
environment for
oh is the agent just not getting set to
oh is the agent just not getting set to
the
right yeah it must be that the agent is
right yeah it must be that the agent is
not getting set to the right
not getting set to the right
uh hold
on yeah I'm being dumb
so you need
so you need
this this
this this
thing needs to go
here and now it
works for
going
going
up
up
yeah look at
that this is the uh the dummy test
recall but yeah now this solves
it it should
it it should
it should definitely solve
it should definitely solve
it that's
nice now what we're going to
nice now what we're going to
do is we're going to see if it ever gets
do is we're going to see if it ever gets
the
key
okay for
I think this is going to have to be
I think this is going to have to be
substantially
what
what
actually how's that
possible e
that's kind of
that's kind of
weird where's there's nothing in here
zero
why is there nothing in the environment
why is there nothing in the environment
to see oh because it
to see oh because it
didn't that's file iio that's
obnoxious X
we need this annoying bit of code
here here we go so I don't know why it's
here here we go so I don't know why it's
like this but
like this but
like you know
like you know
here's this guy doing things for some
reason seems like he doesn't know how to
reason seems like he doesn't know how to
go
left is there an issue with going
left is there an issue with going
left possibly
can I control
can I control
him I should be able to control him
now no I can't control
them oh cuz we have to add this to the
well if I do the C code I should be able
well if I do the C code I should be able
to control them
right and then
set Lo
set Lo
room
and okay
okay here's the puffer
something's definitely wrong with the
something's definitely wrong with the
action space
what happened
here is it just not processing specific
here is it just not processing specific
actions this one
actions this one
processes this one processes
processes this one processes
this they all process except
for except for going west I
for except for going west I
guess north south east yeah except for
guess north south east yeah except for
West the
heck West is
heck West is
four oh I know
North uh this is
West so this does work I was going to
West so this does work I was going to
say there's like no way
right go like
this Chom we ate the star
done
done
done reset lock
done reset lock
room let's just make sure this
works it's slightly difficult the way
works it's slightly difficult the way
that I have it
that I have it
here because I
here because I
uh it's okay
uh it's okay
though that
it's kind of hard to do this the
it's kind of hard to do this the
controls at the moment need to
controls at the moment need to
Improvement oops do it not let me get
Improvement oops do it not let me get
the
the
key or did I just miss the key
before Oh wait I got the key and it just
before Oh wait I got the key and it just
reset me
here let's just fix this so I can
here let's just fix this so I can
actually do this
actually do this
correctly we make sure that we're I want
correctly we make sure that we're I want
to make sure that the m is reasonable
to make sure that the m is reasonable
before I try to make it do something
before I try to make it do something
harder
cool
interestingly it's telling me that the
interestingly it's telling me that the
key has been found on a lot of these
guys why does it never go left
guys why does it never go left
I assume the action space is wrong
right yeah this is five not
right yeah this is five not
four okay so let's try this
again okay so you can see it says I
again okay so you can see it says I
because I have 4,000 of these running in
because I have 4,000 of these running in
the background it says a few of them are
the background it says a few of them are
finding the key
finding the key
already so
here's what we're going to
do I didn't even think it would be that
do I didn't even think it would be that
fast so this is totally feasible then if
fast so this is totally feasible then if
it's actually going to find stuff that
it's actually going to find stuff that
fast
interestingly we don't have anybody
interestingly we don't have anybody
unlocking the
unlocking the
door at all
yet yeah no door
yet yeah no door
unlocks
unlocks
possibly we need to increase the horizon
2024 give it some more time to figure
2024 give it some more time to figure
this out
finds the key so
quickly I it's an exponentially deep
quickly I it's an exponentially deep
search problem right
come
on not even
once that's disappointing
recompile
did is the only way to do this to have
did is the only way to do this to have
like really long
like really long
Horizon you know like essentially
Horizon you know like essentially
unlimited
Horizon maybe then it'll find it
eventually if it's going to do brownie
eventually if it's going to do brownie
in motion it should right
just run wandering around
randomly shouldn't be anything to be
randomly shouldn't be anything to be
training on
h
why I would think if you wander around
why I would think if you wander around
the environment just randomly for that
the environment just randomly for that
amount of time you would solve it
no possibly the RL is doing something
no possibly the RL is doing something
weird
set the learning rate to
set the learning rate to
zero what
happens so it should just be wandering
happens so it should just be wandering
around
randomly still no huh
mean really
how long do we think is there any way to
how long do we think is there any way to
get a calculation of how long it should
get a calculation of how long it should
take
how about has
how about has
key you get like a has key or
something
e
e e
I just want to see how many of these
I just want to see how many of these
have the key it should go up over time
have the key it should go up over time
even without training right just by
even without training right just by
random
exploration just set up
93 with the
93 with the
key that should be going up over
time that should absolutely be going up
time that should absolutely be going up
over time it should not be able to go
over time it should not be able to go
down
am I resetting more than
expected oh
yeah why are we resetting
uh The Horizon is wrong here
okay they should do
it we should be able to at least see
it we should be able to at least see
um the keys go
um the keys go
up 86 with the
up 86 with the
key door
key door
unlocked reward found reward
unlocked reward found reward
found okay m is solvable m is so easily
solvable see what I mean it's always
solvable see what I mean it's always
shitty infrastructure and dumb like
shitty infrastructure and dumb like
annoying problems it's
annoying problems it's
never I mean this is like an exp this is
never I mean this is like an exp this is
literally an exponentially deep search
literally an exponentially deep search
problem and it's still going to do it
look at that you see they literally
look at that you see they literally
learned
it
it
saving agent paths
saving agent paths
saving every path made during training
saving every path made during training
would slow things
would slow things
right as a method of seeing what agents
right as a method of seeing what agents
are
are
doing as it means no I've done that
doing as it means no I've done that
before I've done that before it doesn't
before I've done that before it doesn't
slow anything
slow anything
down um at least not if you want to do
down um at least not if you want to do
it like
it like
reasonably it just takes a little
reasonably it just takes a little
infra here what we're going to do is
infra here what we're going to do is
we're just going to do like this crack
I mean we have it done literally I
I mean we have it done literally I
didn't run a hyper parameter sweep I
didn't run a hyper parameter sweep I
wrote the jankiest freaking code
wrote the jankiest freaking code
possible like I was I've been like just
possible like I was I've been like just
doing stupid things all day and it's
doing stupid things all day and it's
still
solved it will be at least
here we need to um
here we need to um
we'll have to refine this metric a
we'll have to refine this metric a
little
little
bit oh I forgot to rebuild the
bit oh I forgot to rebuild the
environment it's going to be super slow
environment it's going to be super slow
hold
on here I'll I'll rebuild this I'm going
on here I'll I'll rebuild this I'm going
to run the experiment yeah but there you
to run the experiment yeah but there you
can go see
it's
it's
three there we
three there we
go here I'll leave this here for a
go here I'll leave this here for a
moment I'm going to go use the restro
moment I'm going to go use the restro
I'll be right back and uh RL so hard
I'll be right back and uh RL so hard
guys yeah it's only hard when you write
guys yeah it's only hard when you write
your M's in Python and have no
data be right
back
e
e e
what is happening
so our metrics are weird as what's
so our metrics are weird as what's
happening
um I have no idea if this is solv the
um I have no idea if this is solv the
environment or not is the
problem I don't know let's just do
mil now we don't need multiprocessing
mil now we don't need multiprocessing
it'll be fun
I only made it like you know 50 times
I only made it like you know 50 times
faster maybe only like 25 times faster
faster maybe only like 25 times faster
even than the uh the standard training
even than the uh the standard training
implementation I mean I could make it a
implementation I mean I could make it a
few hundred times faster if I wanted
few hundred times faster if I wanted
to the stuff is not that hard if you
to the stuff is not that hard if you
just make it
just make it
fast you don't have enough samples it's
fast you don't have enough samples it's
that
[Music]
[Music]
simple let's see if this policy if we
simple let's see if this policy if we
can actually load it and watch it do
stuff and then we'll take a break from
stuff and then we'll take a break from
this to Sol Tic Tac Toe to prove the
this to Sol Tic Tac Toe to prove the
other guy on Twitter
wrong maybe we'll do that Ian if I just
wrong maybe we'll do that Ian if I just
do that in I can probably make that fast
do that in I can probably make that fast
enough in Python
enough in Python
right I mean that should just solve
instantly e
this would be easily a million with a
this would be easily a million with a
little bit of
optimization I don't even know what
optimization I don't even know what
policy this is
running I'm sure it doesn't make sense
running I'm sure it doesn't make sense
for what I'm
for what I'm
doing I think there's like a redundant
doing I think there's like a redundant
Com or whatever cuz the view field is
Com or whatever cuz the view field is
too
too
small whatever though
right all
right
for e
this might not be the right policy
h
h
[Music]
some
some
reward someone up here something
reward someone up here something
happened oh the value LW
happened oh the value LW
spiked something weird happened there
this to 1,24
maybe see about this one
bro need some help
yeah I mean several of them solve the
yeah I mean several of them solve the
environment in training so it's not once
environment in training so it's not once
you have that it's just a little bit of
you have that it's just a little bit of
fiddling away from
fixing you can see they're still getting
fixing you can see they're still getting
the key
need to
need to
rebuild I forget
that yeah
oh something got it
all
it's figuring something
out need some better
metrics for
it looks like it figured something out
it looks like it figured something out
right here
like there are some weird spikes but
like there are some weird spikes but
they're not huge like this is only from
they're not huge like this is only from
1.6 to
1.5 it does line
up It lines up right with the uh the
up It lines up right with the uh the
reward there
oh here you
have this is what it should be this
have this is what it should be this
return
I'm tempted to just optimize it a little
I'm tempted to just optimize it a little
bit and run a sweep
um e
how much faster is
this I mean it should just be faster on
this I mean it should just be faster on
the main box right
this is not even the fast box
this just do something
different be nice to just solve this
different be nice to just solve this
without needing to do a sweep but uh
it's funny how it oscillates like this
it's funny how it oscillates like this
is very weird
we probably just need to up the log
interval let's do this this should give
interval let's do this this should give
us some more
stable be more
stable it's every uh 4 million steps or
stable it's every uh 4 million steps or
whatever
maybe
maybe
uh
eight there we
go for
so what's happening with the one at the
so what's happening with the one at the
start is that
start is that
um only
um only
the only the environments where it does
the only the environments where it does
happen to find it are reporting in that
happen to find it are reporting in that
early
believe
e e
we'll just run a sweep on it this is no
we'll just run a sweep on it this is no
big
deal I don't really want to take my old
deal I don't really want to take my old
grid environment out until I uh
grid environment out until I uh
have this one working properly
have this one working properly
though maybe we'll make uh we'll like
though maybe we'll make uh we'll like
move this to a different branch or
move this to a different branch or
whatever something I don't
know that'll be
easiest okay this is more reasonable you
easiest okay this is more reasonable you
can see it's some tiny
can see it's some tiny
fraction of the environments that's
fraction of the environments that's
actually getting the uh the environment
solved yeah that's correct there we
go e
this ironment
reward for
all right do 100
Mil got anything for
us not
optimizing could just be
optimizing could just be
pams launch little sweep
right e
are boxes down what's going on
here do we have boxes down
oh this is still on this is the Moa
oh this is still on this is the Moa
here what's going on with my
here what's going on with my
box tail scale being
weird oops
oops I had a thing to reply to here as
oops I had a thing to reply to here as
well me fix this tail scale
first this should be
up yeah it was just tail scale being
up yeah it was just tail scale being
weird
what is wrong with the
network for
what the [ __ ] I can't
what the [ __ ] I can't
[Music]
[Music]
even oh did it
work why is it
detached the [ __ ] happened here
oh I'm
oh I'm
dumb just
tired I forgot
track yeah we're fine
and I'm sure that I just
forgot now there's something totally
forgot now there's something totally
wrong with this network what the hell is
wrong with this network what the hell is
this taking way too long for basic
stuff there we go 1.2 million steps per
stuff there we go 1.2 million steps per
second is that fast
enough that fast enough
eh e
yeah 1.1 mil 1.2
yeah 1.1 mil 1.2
mil yeah okay we didn't even optimize
mil yeah okay we didn't even optimize
the nets for this remotely
the nets for this remotely
either I think the upper end if I
either I think the upper end if I
optimize the Cuda stuff here we could
optimize the Cuda stuff here we could
probably hit 1.5 well I mean you can
probably hit 1.5 well I mean you can
look at the GPU utilization actually
look at the GPU utilization actually
according to that we should be able to
according to that we should be able to
probably hit 3 mil if we really
probably hit 3 mil if we really
optimized
it folks do star the
it folks do star the
puffer helps me out a
puffer helps me out a
lot here we go I'll put this in the chat
lot here we go I'll put this in the chat
all the code is here
all the code is here
star of the puffer helps me out a lot
star of the puffer helps me out a lot
it's uh where's our
it's uh where's our
chart it needs more stars it's at
10:36 he's
hungry so what we'll have here is this
hungry so what we'll have here is this
carb sweep
and hopefully this will give us
and hopefully this will give us
something reasonable within the next I
something reasonable within the next I
don't know several minutes we'll
see 601
I want to do tic tac toe real
quick just for the hell of
it why
it why
not I'm probably just finding
not I'm probably just finding
implementation right take tac
toe
e e
3x3 bases discret of
nine
nine
one num
mations is going to be zeros
mations is going to be zeros
by 3 by
three I need
this this
excuse
excuse
me just doing Tic Tac Toe real
me just doing Tic Tac Toe real
quick because it should be
easy the observations double as the
easy the observations double as the
state so that's kind of cool
I can see we already have the second run
there e
here's a crazy idea for multi-agent RL
brain
brain
what multiple
what multiple
actor all
let me see
the heck is
this
okay I'm confused what this gets you
okay I'm confused what this gets you
what is the like what what's the problem
what is the like what what's the problem
you're trying to solve
here like
here like
d DPG yeah ddpg but with two
inputs so you basically trying to train
inputs so you basically trying to train
a net to tell if one policy is better
a net to tell if one policy is better
than the other
up weits the good
up weits the good
responses and down weights
the what you get is a pairwise
the what you get is a pairwise
comparison rather than pointwise
is this standard in rhf this is the
is this standard in rhf this is the
first I've heard of this I don't do rhf
first I've heard of this I don't do rhf
so
crazy not that it
crazy not that it
was I'm conf when you say it gets you a
was I'm conf when you say it gets you a
parwiz comparison
parwiz comparison
signal
signal
like upweight good downweight bad is
like upweight good downweight bad is
just reward isn't
it I'm confused
let me I want to get this thing done
let me I want to get this thing done
real quick this is just a really dumb
real quick this is just a really dumb
little hack
little hack
project I just wanted to see if it's
project I just wanted to see if it's
like if it takes 10
minutes this probably doesn't take 10
minutes this probably doesn't take 10
minutes CU I'm kind of cooked for the
minutes CU I'm kind of cooked for the
time being
right also if I do it in Python it's
right also if I do it in Python it's
just going to be so freaking
just going to be so freaking
slow I could just do it in scyon and not
slow I could just do it in scyon and not
have to do bindings but
have to do bindings but
still I think I'll leave this for
now I would like to do it it would be
now I would like to do it it would be
funny well maybe I can is there like a
funny well maybe I can is there like a
really dumb simple
really dumb simple
I kind of just want a hash
table
to
table does has anybody just dumped
table does has anybody just dumped
the the hash
table now this is garbage code
why are there four parts of this dumb
why are there four parts of this dumb
project come
on no this can't be done in Python on me
on no this can't be done in Python on me
simply it's actually easier and it's
simply it's actually easier and it's
this is literally easier and
see because I can just interpret the
see because I can just interpret the
uh it doesn't fit in a bite as obnoxious
uh it doesn't fit in a bite as obnoxious
because it's nine cells not eight
yeah this would be cool to do today but
yeah this would be cool to do today but
I don't think I got I don't think I've
I don't think I got I don't think I've
got the gas left uh I do want to make
got the gas left uh I do want to make
sure that we're on a good track for the
sure that we're on a good track for the
other stuff though so let me see
here okay so this is going to run we'll
here okay so this is going to run we'll
see if this actually this solv something
see if this actually this solv something
would be
nice for
let see the parameters on this
still crazy value function stuff going
still crazy value function stuff going
on here
h
the value function in clip fra are
the value function in clip fra are
insane on this
be here
discouraging that none of these
discouraging that none of these
have decent curves on
them e
I guess in the
I guess in the
meantime the last thing I really want to
meantime the last thing I really want to
do today is I want to think about how I
do today is I want to think about how I
can make there just be less binding code
can make there just be less binding code
on all this
stuff I'm going to eat finish this
stuff I'm going to eat finish this
cookie and then I'm going to talk
cookie and then I'm going to talk
through my thoughts and then I'll call
through my thoughts and then I'll call
it a
day e
so the key issue at the
so the key issue at the
moment it's
moment it's
essentially the source of the problem is
essentially the source of the problem is
also The Source the way that we make
also The Source the way that we make
stuff so
fast when you make the environments from
fast when you make the environments from
python you pass
python you pass
in a bunch of memory
in a bunch of memory
buffers into the
environment you have to pass in a bunch
environment you have to pass in a bunch
of these memory buffers
and this blows up the type signature of
and this blows up the type signature of
all the
methods and then when you bind the
scon you need to redeclare
everything because the logs happen in
everything because the logs happen in
syon as well
h
python C barrier is just kind of
tough I mean the main thing is I need a
tough I mean the main thing is I need a
nice way to pull logging data out of
nice way to pull logging data out of
these environments
right e
I can't just keep pushing all the stuff
I can't just keep pushing all the stuff
into C because the problem is that I
into C because the problem is that I
need to be able to extract logs from
need to be able to extract logs from
Individual
Individual
environments and if I do the loop in C
environments and if I do the loop in C
that makes that portion harder
right I don't ever want to Loop over the
right I don't ever want to Loop over the
age of some
python the way I did it for this little
python the way I did it for this little
grid environment is actually not
grid environment is actually not
bad you put the
loops you put the loops into
loops you put the loops into
um into the
um into the
scyon and then since you have all the
scyon and then since you have all the
M's there
I don't like having this m star star
I don't like having this m star star
though I don't ever want to Loop over
though I don't ever want to Loop over
anything in Python
anything in Python
yeah I mean I think you've probably if
yeah I mean I think you've probably if
you've been saing me Dev you kind of see
you've been saing me Dev you kind of see
what I'm talking about right
like so look if I just open up like
like so look if I just open up like
um grid. py this isn't very bad this is
um grid. py this isn't very bad this is
100 lines of code and honestly most of
100 lines of code and honestly most of
this is just the API stuff we also we
this is just the API stuff we also we
don't even need these constants
don't even need these constants
anymore
anymore
like like these are redundant right so
like like these are redundant right so
really I can delete
really I can delete
these 80 lines of
code and most of this again like all
code and most of this again like all
this stuff in here is just API stuff so
this stuff in here is just API stuff so
it's going to be even shorter like this
it's going to be even shorter like this
it's basically going to be a nothing
it's basically going to be a nothing
file
right the only reason we even really
right the only reason we even really
have it is so
have it is so
um all these properties and such are
um all these properties and such are
exposed
exposed
technically it could just be a scyon
technically it could just be a scyon
thing right we could just have this be
thing right we could just have this be
scyon I don't think that makes sense
scyon I don't think that makes sense
though because like there's some
though because like there's some
gymnasium [ __ ] that has to go on
gymnasium [ __ ] that has to go on
here so I think you do need a little
here so I think you do need a little
rapper but then what happens
rapper but then what happens
right because of this
oops like this 13 lines of
oops like this 13 lines of
garbage basically doesn't even do
garbage basically doesn't even do
anything it's just this like giant
anything it's just this like giant
redundant
redundant
header we shouldn't have to have any of
header we shouldn't have to have any of
this here
right because you have to pass these
right because you have to pass these
observations actions rewards and stuff
and then it seems like this is the place
and then it seems like this is the place
that we'd have to
that we'd have to
do I like I don't want there to be any
do I like I don't want there to be any
logic in here if we have to have this as
logic in here if we have to have this as
a binding layer like it should be purely
a binding layer like it should be purely
a binding layer
but I don't want to have to have like a
but I don't want to have to have like a
multi- object or some [ __ ]
writing everything to have internal
writing everything to have internal
vectorization technically fixes it but
vectorization technically fixes it but
it also makes everything more obnoxious
it also makes everything more obnoxious
and
complicated e
and I think what solves this
problem it's also it's very obnoxious
problem it's also it's very obnoxious
that I have to
have I have to have a version that
have I have to have a version that
allocates it's memory and a version that
allocates it's memory and a version that
out that uh takes already allocated
out that uh takes already allocated
buffers that's pretty
obnoxious the damn type signatures are
obnoxious the damn type signatures are
so long right
I think at
I think at
least I think scyon supports yeah scon
least I think scyon supports yeah scon
supports default arguments at the very
supports default arguments at the very
least but that doesn't does that even
least but that doesn't does that even
help
me it really doesn't because the
me it really doesn't because the
defaults have to be in Python anyways
defaults have to be in Python anyways
right for
I'm not entirely sure with this I'm
I'm not entirely sure with this I'm
going have to do some
going have to do some
thinking I have to do some thinking I'm
thinking I have to do some thinking I'm
also I'm starting to really feel the
also I'm starting to really feel the
uh little bit of burnout on this
uh little bit of burnout on this
project you know the days keep getting
project you know the days keep getting
shorter and
shorter and
such
um I'm definitely going to have to take
um I'm definitely going to have to take
like a mental reset at some point soon
like a mental reset at some point soon
cuz I want to keep pushing on this I'd
cuz I want to keep pushing on this I'd
love to keep working on this all night
love to keep working on this all night
but my brain's just going to say
no
no
yeah I guess I can at least go through
yeah I guess I can at least go through
the plan then for the next few days
the plan then for the next few days
right um clean this up
right um clean this up
get this environment
learning make
learning make
like some reasonable number of specs or
like some reasonable number of specs or
something have a few different
something have a few different
versions maybe we just do a handful of
versions maybe we just do a handful of
them put those online on puffer
them put those online on puffer
G definitely been there take some time
G definitely been there take some time
yeah I don't know it's uh I like the
yeah I don't know it's uh I like the
project a lot right I like to work a lot
project a lot right I like to work a lot
it's
it's
just mentally kind of just
just mentally kind of just
burnt I the thing is it could be
burnt I the thing is it could be
multiple things as well right
multiple things as well right
um I I did like a really good two-month
um I I did like a really good two-month
block of work
block of work
uh but like I swap my exercise routine
uh but like I swap my exercise routine
after that and I'm going back to getting
after that and I'm going back to getting
heavier lifts in and I just know that
heavier lifts in and I just know that
whenever I do whenever I have to ramp
whenever I do whenever I have to ramp
back up to heavy lifts it like just I
back up to heavy lifts it like just I
where it burns my like burns my neurons
where it burns my like burns my neurons
for a few weeks or something until I get
for a few weeks or something until I get
used to it
again so I figured if I put it in the
again so I figured if I put it in the
evening maybe that would help but it
evening maybe that would help but it
hasn't I don't know I to optimize a
hasn't I don't know I to optimize a
couple
couple
things still though I like I can see
things still though I like I can see
where all this is going and it's going
where all this is going and it's going
in the right direction it's just taking
in the right direction it's just taking
a little bit longer than I would like is
a little bit longer than I would like is
all
I mean the
I mean the
Moa the Moa basically all we need to do
Moa the Moa basically all we need to do
is improve the visuals and like do a
is improve the visuals and like do a
little bit of work on getting good
little bit of work on getting good
trained
trained
policies it should be pretty set from
policies it should be pretty set from
there the side project that is
there the side project that is
unannounced is in a good spot it's just
unannounced is in a good spot it's just
going to take like I got to write some
going to take like I got to write some
shaders do some perf optimization and uh
shaders do some perf optimization and uh
port a couple of the missing features
port a couple of the missing features
it's hard but like I know how to do it I
it's hard but like I know how to do it I
just need to be fresh for that and then
just need to be fresh for that and then
uh this thing here this was just me
uh this thing here this was just me
wanting to Port the grid environment and
wanting to Port the grid environment and
like upgrade it at the same
like upgrade it at the same
time I probably got a like little
time I probably got a like little
carried away with
carried away with
it but
it but
um I mean it'll be nice if if it can be
um I mean it'll be nice if if it can be
used for
this yeah
I think from here we'll uh I'll step
I think from here we'll uh I'll step
back on the custom stuff just a little
back on the custom stuff just a little
bit since it's taking so long per
bit since it's taking so long per
environment I'll probably see if I can
environment I'll probably see if I can
get a couple bindings working for some
get a couple bindings working for some
existing
existing
Ms they're just not fast enough is the
Ms they're just not fast enough is the
one thing that's OB
obnoxious I mean I could go for like
obnoxious I mean I could go for like
Doom I've been wanting to do that one
Doom I've been wanting to do that one
for a while that's 100K
for a while that's 100K
FPS I think it's 100k FPS without frame
FPS I think it's 100k FPS without frame
skip that might be
rough the one thing that's a little bit
rough the one thing that's a little bit
annoying to me about
annoying to me about
um the more complex environments I've
um the more complex environments I've
been working on the Moa and this is true
been working on the Moa and this is true
the other one as well it's kind of hard
the other one as well it's kind of hard
to treat them as just like a standalone
to treat them as just like a standalone
Benchmark because they're competitive
Benchmark because they're competitive
games you need ELO and we have ELO but
games you need ELO and we have ELO but
ELO is you know it's a trickier to
ELO is you know it's a trickier to
evaluate metric than just like score or
whatever I really like the multi-agent
whatever I really like the multi-agent
environments but um the only ones that
environments but um the only ones that
are easy to evaluate are the ones that
are easy to evaluate are the ones that
are purely
Cooperative the adversarial ones are
Cooperative the adversarial ones are
much harder
so there's definitely like an EV like
so there's definitely like an EV like
and we have the evaluation solution we
and we have the evaluation solution we
have ELO but it's still kind of
have ELO but it's still kind of
unsatisfying because you always have to
unsatisfying because you always have to
evaluate ELO and it's always going to be
evaluate ELO and it's always going to be
non-trivial there's never going to be a
non-trivial there's never going to be a
non-trivial way I mean there's never
non-trivial way I mean there's never
going to be a fully trivial way to
going to be a fully trivial way to
evaluate ELO it just always involves
evaluate ELO it just always involves
loading up multiple neural networks and
loading up multiple neural networks and
such and running them against each other
so I mean like really the key thing with
so I mean like really the key thing with
puffer requires that I keep building out
puffer requires that I keep building out
this Suite of more complex and
this Suite of more complex and
interesting environments and we have
interesting environments and we have
them but they need to be easy to
them but they need to be easy to
evaluate you ever need for betting
evaluate you ever need for betting
Raiders better rating systems I may be a
Raiders better rating systems I may be a
to contribute well I mean hear me out
to contribute well I mean hear me out
here right like the issue isn't so much
here right like the issue isn't so much
the rating systems themselves as much as
the rating systems themselves as much as
like fundamentally
like fundamentally
right if you're training in an
right if you're training in an
environment that is in any way
environment that is in any way
adversarial then part of the difficulty
adversarial then part of the difficulty
of the environment is going to be how
of the environment is going to be how
good your opponents are which means that
good your opponents are which means that
your skill or your reward is relative
your skill or your reward is relative
and as soon as that happens that means
and as soon as that happens that means
that you can no longer just like run
that you can no longer just like run
your policy on the environment to
your policy on the environment to
evaluate and be done right you have to
evaluate and be done right you have to
load up multiple different policies
load up multiple different policies
maybe even just a baseline policy and
maybe even just a baseline policy and
you have to get like win rate versus
you have to get like win rate versus
Baseline it just makes the process
Baseline it just makes the process
harder
right it's more of a logistical
right it's more of a logistical
challenge than anything like we have it
challenge than anything like we have it
with the Moa it
with the Moa it
works but uh it's still like it's adding
works but uh it's still like it's adding
an extra step to what is already a
an extra step to what is already a
complicated area of
research I mean I guess
research I mean I guess
technically like technically if I made
technically like technically if I made
um like fast
enough if I made like some fast little C
enough if I made like some fast little C
policies or
policies or
something we could embed the network as
something we could embed the network as
part of the environment so you could
part of the environment so you could
have like easy medium and hard bot
have like easy medium and hard bot
opponents or something like that that
opponents or something like that that
are just built
in I've seen that done
in I've seen that done
before that's hard but it's doable
maybe that's the way
I could definitely see
that I wonder how fast you can run the
that I wonder how fast you can run the
thing is the network forward passes are
thing is the network forward passes are
going to cut down a lot on the they're
going to cut down a lot on the they're
going to really be expensive on the
compute which leads back to the original
compute which leads back to the original
problem of this environment's having to
problem of this environment's having to
be fast
enough at the same time it's like you
enough at the same time it's like you
really need
really need
that you need the environments to be
that you need the environments to be
able to be multi-agent at the same time
able to be multi-agent at the same time
it's like fun fundamentally an important
it's like fun fundamentally an important
learning
Dynamic you can't just make everything
Dynamic you can't just make everything
single agent and hope it and hope for
single agent and hope it and hope for
the
best it could just be a case of um you
best it could just be a case of um you
know we make
know we make
the we just make the evals as nice as we
the we just make the evals as nice as we
can possibly make them right we make
can possibly make them right we make
like the ELO evaluation code as nice as
like the ELO evaluation code as nice as
we can possibly make them we have some
we can possibly make them we have some
set of baselines that you can evaluate
set of baselines that you can evaluate
against and uh you know it is what it is
against and uh you know it is what it is
it adds extra step but we make it as
it adds extra step but we make it as
minimal as possible that's probably the
minimal as possible that's probably the
simplest way to do
simplest way to do
it so like let's say that we release you
it so like let's say that we release you
know the the Capstone or so for this
know the the Capstone or so for this
project is we
project is we
release we release the agents we release
release we release the agents we release
the
the
environment we make it nice and easy to
environment we make it nice and easy to
evaluate against them
evaluate against them
and you just give you you just like give
and you just give you you just like give
a pie torch
a pie torch
model
right could
work yeah
it's not that bad
with the board games they used MCTS
with the board games they used MCTS
agents for a lot of
agents for a lot of
them I think that's what they
them I think that's what they
did as the opponents I
did as the opponents I
mean which I've seen before it works but
mean which I've seen before it works but
it slows the environment down massively
all right well I mean that's enough
all right well I mean that's enough
musing I'm going to check the
musing I'm going to check the
experiments and call it because I really
experiments and call it because I really
I should just go get some exercise get
I should just go get some exercise get
some food and go to
some food and go to
bed trying to get to bed earlier so I
bed trying to get to bed earlier so I
can get up
can get up
earlier be back on this
stuff
oh oh this might be something
oh oh this might be something
looks like this one is start was
looks like this one is start was
starting to go
up we'll
up we'll
see we will see for sure I will leave
see we will see for sure I will leave
this one going overnight this one is
this one going overnight this one is
still running as
still running as
well this uh this carb sweep is still
well this uh this carb sweep is still
running
and where's this
and where's this
sweep I hope it's still running right
sweep I hope it's still running right
yeah
we'll see if this does any
we'll see if this does any
better some of these metrics they look
better some of these metrics they look
pretty good
already all right then I'm Ni Call today
already all right then I'm Ni Call today
night everyone

Kind: captions
Language: en
okay we are
live close
that how's it
that how's it
going we got some stuff to do
going we got some stuff to do
today
oops lot of stuff to do today
actually so I started working on this
actually so I started working on this
mini grid M
mini grid M
yesterday I think we're going to finish
yesterday I think we're going to finish
that and then we have a couple other
that and then we have a couple other
things as
well very basic
oops but we got to implement a few
oops but we got to implement a few
little mechanics here um I kind of just
little mechanics here um I kind of just
wanted to do this to have like a one
wanted to do this to have like a one
toone comparison with an existing thing
toone comparison with an existing thing
in the field but let me just to jog my
in the field but let me just to jog my
memory and also to get us set up for the
memory and also to get us set up for the
day here let me just show what this is
day here let me just show what this is
going to
going to
be so
there's this mini grid environment it's
there's this mini grid environment it's
kind of silly how much RL is done on
kind of silly how much RL is done on
this cuz it's like it's a really simple
this cuz it's like it's a really simple
Suite of environments and uh the reasons
Suite of environments and uh the reasons
that it are that it is the reasons that
that it are that it is the reasons that
make it hard are very arbitrary and
make it hard are very arbitrary and
misguided um essentially like you can
misguided um essentially like you can
just keep making the environment bigger
just keep making the environment bigger
and like me looking at this I can see oh
and like me looking at this I can see oh
the goal is here I should go there but
the goal is here I should go there but
if you learn this tabular rasa that's
if you learn this tabular rasa that's
basically impossible to learn if you
basically impossible to learn if you
make it big enough um so I'm not going
make it big enough um so I'm not going
to do anything about that fundamentally
to do anything about that fundamentally
but I figure that puffer is just fast
but I figure that puffer is just fast
enough that it shouldn't matter we'll
enough that it shouldn't matter we'll
just connect enough samples and just win
just connect enough samples and just win
uh and that would be like a kind of a
uh and that would be like a kind of a
cool touch Point demo for people in the
cool touch Point demo for people in the
field the one that I was doing
field the one that I was doing
originally is let me find
originally is let me find
it yeah this one right
it yeah this one right
here I mean you can pretty much
here I mean you can pretty much
Implement whichever of these once I have
Implement whichever of these once I have
the basics but uh we're going to start
the basics but uh we're going to start
with with
this
okay
H pretty much we only have to um
what do we have to do
here I don't like that the walls are
here I don't like that the walls are
added in a reset that's really weird
right so we're going to have to clean up
right so we're going to have to clean up
the reset and then we got to add like
the reset and then we got to add like
the doors thing to
the doors thing to
this uh and then I think I have to
this uh and then I think I have to
hardcode the solution to this as a test
hardcode the solution to this as a test
right so that we can see what's going
right so that we can see what's going
on yeah so let's do that
um we're going to
um we're going to
go we're just going to like hardcode
go we're just going to like hardcode
this sequence of
this sequence of
actions that will solve this instance
actions that will solve this instance
and then that will let us test
and then that will let us test
essentially that'll be our test uh to
essentially that'll be our test uh to
solve this
solve this
thing me put these here
and we'll just do in
and we'll just do in
fixed uh where is it int actions I think
fixed uh where is it int actions I think
it's unsigned
it's unsigned
actions
actions and now I need to figure this
out so it's I think I have mine starting
out so it's I think I have mine starting
in the
middle why did they start it
middle why did they start it
here it should start in the middle
right
right
yeah so we're going to
yeah so we're going to
do uh
do uh
North
North it's one two three four five six
and
and
then
east east
east east
six east east east
six east east east
east east that gets us now we have to do
South
South
West West West
West West West
North uh east or west
oops
West
West
best then South a whole
bunch how many one it's going to be one
two 12 South that's
two 12 South that's
5 6 7 8 9 10 11
5 6 7 8 9 10 11
12 and we do
12 and we do
east
east six
more okay so that should be the
more okay so that should be the
solution to this
solution to this
which
which
like that's hard to learn from scratch
like that's hard to learn from scratch
right how many do we have
right how many do we have
here 2 three four five six seven eight 9
here 2 three four five six seven eight 9
10 11 12
41 sequence of 41 actions to solve this
41 sequence of 41 actions to solve this
environment you get no reward um I guess
environment you get no reward um I guess
you'll get reward for getting the
key but it's not like just 41 actions
key but it's not like just 41 actions
right like I think you're definitely
right like I think you're definitely
going to get the key
going to get the key
randomly we'll see whether
randomly we'll see whether
um
um
well we'll see otherwise
oh I think I also have to change the way
oh I think I also have to change the way
that the uh the doors are but that's
fine and
t
t
f t greater
f t greater
than =
than =
exit and
then we just do
four yeah we don't even need to do this
four yeah we don't even need to do this
it's just it's one line it's literally
it's just it's one line it's literally
just n actions Zer actions of
just n actions Zer actions of
T okay
grid
insed that compiles
cool
cool
so it doesn't move which is
so it doesn't move which is
weird
right if is key down
oh
oh
t t+
plus okay so this spawns off screen um
plus okay so this spawns off screen um
but nothing is happening
here let's figure out
why step here
F
F
action b y Bell
X okay so I
see well there are velocities and
see well there are velocities and
they're weird right
hi keep up the good work thank you
hi keep up the good work thank you
currently what we're doing here is uh I
currently what we're doing here is uh I
am implementing this in puffer Ultra
am implementing this in puffer Ultra
fast and we're going to just try to
fast and we're going to just try to
solve this
solve this
tabularasa with very simple
tabularasa with very simple
RL um I think we can do it I'm a
RL um I think we can do it I'm a
little well I said on Twitter I thought
little well I said on Twitter I thought
I could do it I'm looking at it now and
I could do it I'm looking at it now and
I think it's going to depend
if you think of like a random agent
if you think of like a random agent
having to get to this key I think if you
having to get to this key I think if you
run it long enough it'll get
run it long enough it'll get
there the question is if
there the question is if
you are you going to be able to get to
you are you going to be able to get to
the key and then get back to the
goal assuming I'm allowed to Define like
goal assuming I'm allowed to Define like
a reward for picking up a key a reward
a reward for picking up a key a reward
for unlocking and a reward for goal I
for unlocking and a reward for goal I
think that you can do
think that you can do
it I'll have to look up what's this
it I'll have to look up what's this
environment
get okay this is hard they literally
get okay this is hard they literally
just give a success fail
reward maybe we can do
reward maybe we can do
it maybe we can do it can you teach it
it maybe we can do it can you teach it
something simpler yeah you totally can
something simpler yeah you totally can
and that's curriculum learning and that
and that's curriculum learning and that
works tremendously well
works tremendously well
um but I don't think that that's going
um but I don't think that that's going
to impress like the RL Community as
to impress like the RL Community as
much basically this is just a short
much basically this is just a short
little exercise that shouldn't take me
little exercise that shouldn't take me
very long right implementing something
very long right implementing something
like this this is like a couple of days
like this this is like a couple of days
of work maybe um total to like get a
of work maybe um total to like get a
nice Ultra fasty version of stuff like
nice Ultra fasty version of stuff like
this this
this this
engine
engine
and the goal here is just like the RL
and the goal here is just like the RL
people they say right here it's
people they say right here it's
extremely difficult with vanilla RL
extremely difficult with vanilla RL
alone so like what if I just did that
alone so like what if I just did that
right
right
what if I just ran this thing for a
what if I just ran this thing for a
billion steps because I can do it that
billion steps because I can do it that
fast and I just brute force it and like
fast and I just brute force it and like
RL solves
RL solves
it having
it having
some simulations that start going to
Rooms uh I don't understand your comment
Rooms uh I don't understand your comment
there what do you
there what do you
mean also I realize I have to have this
mean also I realize I have to have this
window not be over camera I always
window not be over camera I always
forget that
case
case
only oh I just have the wrong logic
only oh I just have the wrong logic
entirely here don't I
I mean having so help it prior having
I mean having so help it prior having
some help to prioritize going into rooms
some help to prioritize going into rooms
yeah no that will work that will 100%
yeah no that will work that will 100%
work I mean in the extreme case right I
work I mean in the extreme case right I
could literally just draw a trail I
could literally just draw a trail I
could just draw a reward Trail to the
could just draw a reward Trail to the
key and then back once you have the key
key and then back once you have the key
back to the goal and it'll instantly
back to the goal and it'll instantly
solve the environment right this will be
solve the environment right this will be
solved in like a few
solved in like a few
seconds
seconds
um so I maybe I should just make a
um so I maybe I should just make a
couple quick comments here uh this is
couple quick comments here uh this is
actually a pretty good picture of what's
actually a pretty good picture of what's
wrong with RL and Academia because what
wrong with RL and Academia because what
you have here is what looks like a very
you have here is what looks like a very
simple environment that makes RL look
simple environment that makes RL look
really stupid when it fails to solve it
really stupid when it fails to solve it
right like this is so basic like a
right like this is so basic like a
toddler can do this right you go get the
toddler can do this right you go get the
key and then you take it back you can
key and then you take it back you can
literally do that into like the first
literally do that into like the first
try immediately right so easy
try immediately right so easy
um well I mean first of all you have
um well I mean first of all you have
partial observability that makes it a
partial observability that makes it a
little harder but you could still solve
little harder but you could still solve
it in like a minute instead of 10
it in like a minute instead of 10
seconds right um like you'd end up going
seconds right um like you'd end up going
into all the rooms first and then seeing
into all the rooms first and then seeing
oh okay I have this is the one with the
oh okay I have this is the one with the
key and I have to go back and I also
key and I have to go back and I also
know that the door is red and the key is
know that the door is red and the key is
red which the agent can't see and
red which the agent can't see and
doesn't understand but the bigger issue
doesn't understand but the bigger issue
here is that without any guide rails
here is that without any guide rails
whatsoever every every separation
whatsoever every every separation
between the agent and reward is an
between the agent and reward is an
exponentially deep search problem right
exponentially deep search problem right
so if you're going to say that the only
so if you're going to say that the only
reward is for solving the whole task
reward is for solving the whole task
this is an exponentially deep search
this is an exponentially deep search
problem so you've kind of just framed
problem so you've kind of just framed
the problem in a way that make something
the problem in a way that make something
uh something that's really hard look
uh something that's really hard look
really simple and makes RL look dumb
really simple and makes RL look dumb
when rl's actually incredibly powerful
when rl's actually incredibly powerful
and this is kind of a contrived
example can you break this up into
example can you break this up into
smaller tasks like one for going
smaller tasks like one for going
different rooms one yes you absolutely
different rooms one yes you absolutely
can do that you can absolutely do that
can do that you can absolutely do that
and the task will be very very easy if
and the task will be very very easy if
you do that and like I would like to do
you do that and like I would like to do
that as well because this task is not
that as well because this task is not
reasonable as post right this is
reasonable as post right this is
exponentially deep search to key
exponentially deep search to key
exponentially deep search back and in
exponentially deep search back and in
fact many much much much harder problems
fact many much much much harder problems
than this uh are easier for RL to learn
than this uh are easier for RL to learn
because they at least have some sort of
because they at least have some sort of
reward
reward
signal so I the point was I was hoping
signal so I the point was I was hoping
that we can just brute force it and get
that we can just brute force it and get
it to work anyways which I still think
it to work anyways which I still think
might work we'll have to maybe cheat a
might work we'll have to maybe cheat a
little on the rewards if not but uh I
little on the rewards if not but uh I
like that's not going to get us any any
like that's not going to get us any any
favors right if we do that I think like
favors right if we do that I think like
the the thing I kind of want to
the the thing I kind of want to
demonstrate here like if I run this for
demonstrate here like if I run this for
a billion steps eventually it's going to
a billion steps eventually it's going to
find the key right cuz it's not just to
find the key right cuz it's not just to
straight up like 41 coin flips in a row
straight up like 41 coin flips in a row
that's not happening right it's like a
that's not happening right it's like a
it's like brownie in motion or whatever
it's like brownie in motion or whatever
so it'll eventually get the key I don't
so it'll eventually get the key I don't
know if it'll eventually get from the
know if it'll eventually get from the
key all the way back that might be
key all the way back that might be
harder but maybe if you run it for long
harder but maybe if you run it for long
enough
enough
right especially if I don't reset the
right especially if I don't reset the
agent right if I just let this one agent
agent right if I just let this one agent
wander around for a long enough time
wander around for a long enough time
like eventually it'll get the key and
like eventually it'll get the key and
then it'll happen to get back right
then it'll happen to get back right
it'll just meander around the whole map
it'll just meander around the whole map
long enough and then it'll kind of learn
long enough and then it'll kind of learn
something probably the first time it
something probably the first time it
learns that it'll just learn that like
learns that it'll just learn that like
okay getting to the green thing like if
okay getting to the green thing like if
I'm next to the green thing like in here
I'm next to the green thing like in here
I should be able to get back to it that
I should be able to get back to it that
will probably learn very quickly and
will probably learn very quickly and
then it'll take longer to get the the
then it'll take longer to get the the
whole thing we'll see but I think it
whole thing we'll see but I think it
should be
should be
doable we'll see if I'm
right does the agent door colors yes but
right does the agent door colors yes but
not in the way that you or I would
not in the way that you or I would
recognize uh a good way to think about
recognize uh a good way to think about
it would be if you randomized all the
it would be if you randomized all the
colors so that like they're all
colors so that like they're all
different colors right so that the
different colors right so that the
different color Keys like you have to
different color Keys like you have to
figure out which key the door course uh
figure out which key the door course uh
the D it doesn't look like the key is
the D it doesn't look like the key is
the same color as the door that's a good
the same color as the door that's a good
way of thinking about it so this is
way of thinking about it so this is
another way in which the environment is
misleading big problem with RL is doing
misleading big problem with RL is doing
stuff like this but it's okay we will
stuff like this but it's okay we will
win anyways I also had somebody on
win anyways I also had somebody on
Twitter tell me that tic-tac-toe is hard
Twitter tell me that tic-tac-toe is hard
for RL to learn so uh My Hope Is that we
for RL to learn so uh My Hope Is that we
can just get this done quickly enough
can just get this done quickly enough
that I will also have time to just
that I will also have time to just
Implement Tic-tac-toe and immediately
Implement Tic-tac-toe and immediately
solve it because it's not hard for RL at
solve it because it's not hard for RL at
all that's ridiculous
so simple yeah it's it's not hard at all
so simple yeah it's it's not hard at all
for RL I don't know where the guy got
for RL I don't know where the guy got
that idea but people have some really
that idea but people have some really
messed up Notions about RL and what it
messed up Notions about RL and what it
can solve like rl's in incredibly
can solve like rl's in incredibly
incredibly powerful people just been
incredibly powerful people just been
doing it wrong with very bad info
rl's crazy
good I don't think people realize how
good I don't think people realize how
good the RL
is there we
go uh but this is not what it's supposed
go uh but this is not what it's supposed
to be I don't know why this
to be I don't know why this
happened the
if was it float Val y
there we go
there we go
north
north
south
east uh it got East wrong here East
east uh it got East wrong here East
should be one and West should be
should be one and West should be
negative
negative
one and this should be I don't know why
one and this should be I don't know why
it puts the numbers in either it should
it puts the numbers in either it should
be like
this it like repeated as
well there let's try
this okay this is a little Annoying that
this okay this is a little Annoying that
I can't um
it'll load on the other screen let me
it'll load on the other screen let me
watch it for a
second
why I gota like slow this
down we'll just run it with
GDB I play
GDB I play
Bridge with friends on the weekends can
Bridge with friends on the weekends can
we teach machines to play
we teach machines to play
it multiple so yes we can uh our AI has
it multiple so yes we can uh our AI has
been used for like uh for poker and such
been used for like uh for poker and such
before uh infrastructure
before uh infrastructure
wise there are a couple like the answer
wise there are a couple like the answer
to a lot of these things with RL it's
to a lot of these things with RL it's
almost always yes it's just that the
almost always yes it's just that the
infrastructure is a little bit tricky so
infrastructure is a little bit tricky so
with card games in particular
with card games in particular
um the only real difficulty
um the only real difficulty
is that it's a turn-based game and the
is that it's a turn-based game and the
infrastructure required per turn-based
infrastructure required per turn-based
games is a little bit different I
games is a little bit different I
technically already support it in puffer
technically already support it in puffer
lib it's just not as efficient as it
lib it's just not as efficient as it
could
be let me
think multi-agent definitely works right
think multi-agent definitely works right
with RL card games definitely work I've
with RL card games definitely work I've
been wanting to do this for a while now
been wanting to do this for a while now
honestly um like to get like a better
honestly um like to get like a better
turnbas system working for like card and
turnbas system working for like card and
board games I should definitely do
board games I should definitely do
that
that
yeah I think open spiels in C isn't
it
C++ I could technically bind this to
C++ I could technically bind this to
puffer with
C++ I think that they went crazy with
C++ I think that they went crazy with
this and have like all sorts of stuff in
this and have like all sorts of stuff in
like a million different languages or
like a million different languages or
maybe it's just the bindings in
maybe it's just the bindings in
different
different
languages they have bridge in here oh
languages they have bridge in here oh
look they got Bridge right
look they got Bridge right
here how hard is
here how hard is
this
geez how do you have a thousand lines
geez how do you have a thousand lines
for this
this is
this is
like this is obnoxiously overbuilt C++
code I mean I could just bind it I don't
code I mean I could just bind it I don't
know how fast this thing
is 88
is 88
Lines six
Lines six
lines what's
this okay
this okay
variant okay I not as bad as I thought
variant okay I not as bad as I thought
it's 870 lines I'm probably like half of
it's 870 lines I'm probably like half of
this is probably
fluff they've also Al got all this
fluff they've also Al got all this
additional Jank though like this is not
additional Jank though like this is not
a standalone at
a standalone at
all I can probably still get a binding
all I can probably still get a binding
for this at some point it's just a
for this at some point it's just a
question of whether people would
question of whether people would
actually use
actually use
it it's also um these games become
it it's also um these games become
dramatically easier if you just use like
dramatically easier if you just use like
hardcoded AI opponents so like you know
hardcoded AI opponents so like you know
have if you like you play bridge you
have if you like you play bridge you
play poker online versus an AI like a a
play poker online versus an AI like a a
classic AI not a neural network that
classic AI not a neural network that
makes it easier just from the
makes it easier just from the
perspective of the infrastructure
perspective of the infrastructure
so we could do that
maybe yeah this is a funky
project there's still merging stuff on
this I already technically have a
this I already technically have a
binding for it as
binding for it as
well I should do something at some point
well I should do something at some point
with
with
this two stages one where you
this two stages one where you
form contract with partial information
form contract with partial information
you play out the
you play out the
contract partial information communicate
contract partial information communicate
okay I will have to look that up then um
okay I will have to look that up then um
yeah partial information RL does partial
yeah partial information RL does partial
information RL does communication let
information RL does communication let
me I mean you might not be familiar with
me I mean you might not be familiar with
this then but like let me just give you
this then but like let me just give you
an idea this is going to be like not a
an idea this is going to be like not a
card game
card game
but this is my favorite result in all of
but this is my favorite result in all of
RL
let me see if I can find like Gifts of
let me see if I can find like Gifts of
this
thing is it going to give me dumb
ads okay so
ads okay so
like where's
like where's
the so this is dota this is a
the so this is dota this is a
ludicrously ludicrously complicated five
ludicrously ludicrously complicated five
versus 5 Team game it has well over a
versus 5 Team game it has well over a
100 characters they all play differently
100 characters they all play differently
you get five on your team the opponent
you get five on your team the opponent
team has a different five on their their
team has a different five on their their
team you get crazy numbers of
team you get crazy numbers of
interactions between all of these
interactions between all of these
characters there's like uh there are
characters there's like uh there are
these waves of Minions that have their
these waves of Minions that have their
own mechanics that everything interacts
own mechanics that everything interacts
with differently there are these towers
with differently there are these towers
you have to defend it's this like mind
you have to defend it's this like mind
bogglingly complicated game that takes
bogglingly complicated game that takes
weeks at least to even get a grasp of
weeks at least to even get a grasp of
what on Earth is going on uh RL solves
what on Earth is going on uh RL solves
this trained from scratch on its own
this trained from scratch on its own
with a relatively simple and small
with a relatively simple and small
neural network that is what RL can do RL
neural network that is what RL can do RL
is nuts in what it is capable of the
is nuts in what it is capable of the
infrastructure is very hard though
infrastructure is very hard though
that's the key thing infrastructure is
that's the key thing infrastructure is
very very hard to get right that's what
very very hard to get right that's what
I've been trying to build with puffer
I've been trying to build with puffer
and like we have my version which is way
and like we have my version which is way
simpler admittedly right but I've been
simpler admittedly right but I've been
trying to build towards this it's like a
trying to build towards this it's like a
similar style of game here with like
similar style of game here with like
different characters that play
different characters that play
differently
differently
a lot of like the same mechanics
a lot of like the same mechanics
obviously you don't have all the nice
obviously you don't have all the nice
Graphics right but yeah RL is crazy good
Graphics right but yeah RL is crazy good
so the answer is almost always yes if
so the answer is almost always yes if
you have like a game that you can
you have like a game that you can
simulate fast from scratch is this the
simulate fast from scratch is this the
game you're working on previously yeah
game you're working on previously yeah
yeah dota's like the game it's very
yeah dota's like the game it's very
similar the game I was working on
similar the game I was working on
inspired by
inspired by
it was what was the main issue with
it was what was the main issue with
masking for turn-based games there's no
masking for turn-based games there's no
issue Nathan it's just inefficient
issue Nathan it's just inefficient
because you need the observation buffer
because you need the observation buffer
to be a fixed size right so you have
to be a fixed size right so you have
like player one player two player three
like player one player two player three
and if you do like a round robin type
and if you do like a round robin type
thing then you have to get like
thing then you have to get like
observation for player one padding
observation for player one padding
padding so you're sending padding
padding so you're sending padding
through inefficiently wasting compute
through inefficiently wasting compute
and then like you know padding
and then like you know padding
observation for player two you know
observation for player two you know
padding send that through so there's
padding send that through so there's
just an inefficiency that's all it
is I have multiple envir ments that work
is I have multiple envir ments that work
in puffer right now that work like this
in puffer right now that work like this
it's just not as fast as it should be
it's just not as fast as it should be
because of
because of
that and it's a pretty tricky thing to
that and it's a pretty tricky thing to
work around I'm I'm still thinking about
work around I'm I'm still thinking about
that but it's a little
tricky what if you do single agent
tricky what if you do single agent
playing everyone store a number of
playing everyone store a number of
players
it still doesn't work Nathan because the
it still doesn't work Nathan because the
actions aren't simultaneous it's
actions aren't simultaneous it's
turn-based right so you have to wait for
turn-based right so you have to wait for
the first
the first
player story player of each
player story player of each
move the issue is that it's turn-based
move the issue is that it's turn-based
is the thing right it's like you have to
is the thing right it's like you have to
wait in order to apply the actions even
wait in order to apply the actions even
if it's the same policy right you can't
if it's the same policy right you can't
select the action
simultaneously I love watching people
simultaneously I love watching people
play games on a high level and so this
play games on a high level and so this
looks like magic yeah it really is Magic
looks like magic yeah it really is Magic
like if you haven't played
like if you haven't played
DOTA it is a mind bogglingly complicated
DOTA it is a mind bogglingly complicated
game like I think if you talk to most
game like I think if you talk to most
people especially people who don't play
people especially people who don't play
video games in particular like you
video games in particular like you
legitimately would not believe that
legitimately would not believe that
people have something this complicated
people have something this complicated
as a hobby it is a ridiculously
as a hobby it is a ridiculously
ridiculous complicated game
ridiculous complicated game
um I remember the first time I like I
um I remember the first time I like I
tried to play the game right and I've
tried to play the game right and I've
played games I grew up playing games
played games I grew up playing games
right I've played tons of games uh some
right I've played tons of games uh some
very complex games I was still like
very complex games I was still like
shocked at the depth that was there it
shocked at the depth that was there it
like I mean you can play the game for a
like I mean you can play the game for a
year and still have no idea what you're
year and still have no idea what you're
doing it's
doing it's
nuts how does the ml learn what's the
nuts how does the ml learn what's the
best thing to do so many moves has it
best thing to do so many moves has it
select the best
select the best
one it starts off completely random it
one it starts off completely random it
starts off playing the game completely
starts off playing the game completely
randomly and based on trial and error it
randomly and based on trial and error it
essentially it figures out what works
essentially it figures out what works
and what doesn't and then it gets
and what doesn't and then it gets
smarter at it it learns kind of like a
smarter at it it learns kind of like a
human would right it starts off doing
human would right it starts off doing
stuff that's basically random it
stuff that's basically random it
actually starts off worse than a human
actually starts off worse than a human
because it is actually random not just
because it is actually random not just
like kind of random and somewhat
like kind of random and somewhat
coherent and over time based on a reward
coherent and over time based on a reward
signal based on it winning or losing the
signal based on it winning or losing the
game based on it's leveling up getting
game based on it's leveling up getting
experience all the things in the game it
experience all the things in the game it
learns what works and what doesn't and
learns what works and what doesn't and
it becomes more coherent at learning to
it becomes more coherent at learning to
make
make
progress say there's a single agent
progress say there's a single agent
playing both
playing both
players then each step we collect one
players then each step we collect one
action and one
reward each step we collect one action
reward each step we collect one action
and one
and one
reward the
end each step we collect
end each step we collect
so Nathan that is what we do but you
so Nathan that is what we do but you
still need the buffers to have the
still need the buffers to have the
padding unless technically yes you could
padding unless technically yes you could
do it the way that you're suggesting but
do it the way that you're suggesting but
there would still be additional code
there would still be additional code
because you need to know which
because you need to know which
observations correspond to which agents
observations correspond to which agents
when your Computing trajectory segments
when your Computing trajectory segments
which is what the position and the
which is what the position and the
observation tells
observation tells
you You' need like an additional IDs
you You' need like an additional IDs
thing which technically technically the
thing which technically technically the
enpol API does this for you so you can
enpol API does this for you so you can
do it
do it
but it doesn't necessarily make things
but it doesn't necessarily make things
immediately easier
immediately easier
um maybe it
um maybe it
does let me think is that the
solution that's probably the solution
solution that's probably the solution
huh do you have to pass
IDs yeah I think you're right I think
IDs yeah I think you're right I think
you can do it it's just kind of a pain
you can do it it's just kind of a pain
yeah yeah I could do it that way it'd be
yeah yeah I could do it that way it'd be
a little
a little
tricky you're storing one ID per step
tricky you're storing one ID per step
instead of n yeah you're right Nathan
instead of n yeah you're right Nathan
you could do
you could do
it I'd have to make some changes to the
it I'd have to make some changes to the
V
V
infra but I could do it if people want
infra but I could do it if people want
turnbas games actually for your thing
turnbas games actually for your thing
you know if your game is if we'll get
you know if your game is if we'll get
your game working with the masking and
your game working with the masking and
then if you produce something cool I'll
then if you produce something cool I'll
do it for you how about that
do it for you how about that
that's a big ask because it's like it's
that's a big ask because it's like it's
a kind of tricky piece of code uh to
a kind of tricky piece of code uh to
change but I'll do
change but I'll do
it I mean it would be a really nice
it I mean it would be a really nice
Improvement to puffer lib
anyways I hope I'm not missing something
anyways I hope I'm not missing something
but I'm pretty sure the thing that
but I'm pretty sure the thing that
you're describing what with a couple
you're describing what with a couple
little tweaks would
work speaking of which how's your stuff
work speaking of which how's your stuff
going we got your uh we got your pong
online for folks watching Nathan wrote
this I just ported it it's his
code ah also it's very
hard boom
I tried playing it and never one I don't
I tried playing it and never one I don't
know if the ball moves too quickly or if
know if the ball moves too quickly or if
the opponent is too good I think that
the opponent is too good I think that
there's we should make some changes the
there's we should make some changes the
actual Atari version of pong is very
actual Atari version of pong is very
hard but I think that I think that we
hard but I think that I think that we
actually messed up with the Atari
actually messed up with the Atari
bindings because uh I was talking with
bindings because uh I was talking with
my mother and she said that she had pong
my mother and she said that she had pong
like the console the original Atari cons
like the console the original Atari cons
cons growing up and the ball moved
cons growing up and the ball moved
really slow so I don't know what the
really slow so I don't know what the
heck we did when we messed with Atari in
heck we did when we messed with Atari in
RL but like all the versions that I've
RL but like all the versions that I've
ever seen use for RL have the ball
ever seen use for RL have the ball
moving obnoxiously quickly and like the
moving obnoxiously quickly and like the
paddle can almost not get there in
paddle can almost not get there in
time I've gotten one point on this thing
time I've gotten one point on this thing
before here I'll do it real quick if I
before here I'll do it real quick if I
can if I can manage it I'll do uh I'll
can if I can manage it I'll do uh I'll
get a point real
quick can I do it
freaking
hard I think your goal is to like hard
hard I think your goal is to like hard
bounce it off of a wall or
something I have to figure out how the
something I have to figure out how the
the velocity works on it
there it goes I just got a point there
there it goes I just got a point there
you go see I got one point there by
you go see I got one point there by
bouncing it hard bouncing it off of a
bouncing it hard bouncing it off of a
wall it's hard though it's very
hard y speeds up if you hit the ball
hard y speeds up if you hit the ball
while moving in the same direction as
while moving in the same direction as
the ball is
the ball is
going X never changes I say
but it's hard because like the paddle
but it's hard because like the paddle
control is not precise enough to like
control is not precise enough to like
consistently get it maybe it's just the
consistently get it maybe it's just the
frame skip to be
fair but here I got a point so it's it's
fair but here I got a point so it's it's
possible
my agent learned it you just got improve
my agent learned it you just got improve
does it do you have an agent that plays
does it do you have an agent that plays
it
it
already did you did I miss a Discord
post do you actually get perfect score
post do you actually get perfect score
in that thing I'd be
impressed I didn't miss any
impressed I didn't miss any
posts also the puffer boxes will be back
posts also the puffer boxes will be back
soon I had to call main gear for that
soon I had to call main gear for that
today
I'd like to try learning how to do stuff
I'd like to try learning how to do stuff
like this
you totally
you totally
can
can
um the code is not that bad for a lot of
um the code is not that bad for a lot of
it it's pretty low level but it's not in
it it's pretty low level but it's not in
order to make it fast but it's not that
order to make it fast but it's not that
bad um here where's the pong code I'll
bad um here where's the pong code I'll
link it to
you it's all open
you it's all open
source Dar the puffer
so it's in this Dev Branch it's like
so it's in this Dev Branch it's like
this obnoxious
this obnoxious
environments
ocean uh yeah here's pong pong
Doh one of my economics classes had an
Doh one of my economics classes had an
example where we found which
example where we found which
arm was best to
arm was best to
pull yeah that's a classic
pull yeah that's a classic
uh multi-arm Bandits is a classic
uh multi-arm Bandits is a classic
mathematical phrasing of reinforcement
mathematical phrasing of reinforcement
learning it's we actually we technically
learning it's we actually we technically
have an environment in puffer lib is a
have an environment in puffer lib is a
test that is exactly that
test that is exactly that
here
sanity
sanity
oops at the top yeah right here this is
oops at the top yeah right here this is
literally that right
here here this is literally multi-arm
here here this is literally multi-arm
Bandit
tiny little bit of
code it's not the full problem there are
code it's not the full problem there are
lots of version versions of that problem
lots of version versions of that problem
so you can Define it in many ways but
so you can Define it in many ways but
this is the gist of it we use it as one
this is the gist of it we use it as one
of our sanity
of our sanity
tests RL will like trivially solve that
it won't get you the um it won't solve
it won't get you the um it won't solve
it like in the optimal number of checks
it like in the optimal number of checks
or anything because for specific
or anything because for specific
versions of that they're like you know
versions of that they're like you know
proven optimal algorithms or whatever
proven optimal algorithms or whatever
but it will solve it and it'll solve
but it will solve it and it'll solve
much harder versions where the optimal
much harder versions where the optimal
algorithms don't exist
Bo let me
Bo let me
see doing something here
see doing something here
right yeah if desti is
reward should be is
reward should be is
open t tile like this
check
dis oh
ho oh I did miss a
message that's really weird
message that's really weird
Nathan usually you don't train um
Nathan usually you don't train um
usually you don't change frame skip at
usually you don't change frame skip at
eval time because it can mess up the
algorithm cuz like it assumes it's going
algorithm cuz like it assumes it's going
to have to move all
to have to move all
four huh you don't have you're not
four huh you don't have you're not
required to use frame skip 4 during
training this is the same version of the
training this is the same version of the
game dude this is good
we I should try playing this with uh
we I should try playing this with uh
frame skip uh one at eval though because
frame skip uh one at eval though because
I think it would be a little easier I
I think it would be a little easier I
still would not be able to play it this
well have you fiddled with the
well have you fiddled with the
um 2 minutes is awesome have you fiddled
um 2 minutes is awesome have you fiddled
with
with
the uh with the settings at all to try
the uh with the settings at all to try
to get it to like hit a million train
to get it to like hit a million train
steps per second
what's frame skip frame skip is the
what's frame skip frame skip is the
number of frames for which your agent
number of frames for which your agent
will just repeat the same action it's an
will just repeat the same action it's an
efficiency met it's an efficiency
efficiency met it's an efficiency
optimization so that instead of having
optimization so that instead of having
to send the uh the data to the neural
to send the uh the data to the neural
network on every single frame you only
network on every single frame you only
do it every four frames but then it has
do it every four frames but then it has
to repeat the same action for four
to repeat the same action for four
frames so like if you're going to hold
frames so like if you're going to hold
down like if you're going to press right
down like if you're going to press right
then it has to go right for four frames
then it has to go right for four frames
which is like nice but also sometimes
which is like nice but also sometimes
you need more precise control than that
you need more precise control than that
welcome oh we've got Noah here as well
welcome oh we've got Noah here as well
hey Noah you saw this I think I showed
hey Noah you saw this I think I showed
you this the other day right or maybe
you this the other day right or maybe
you haven't seen this yet we've got
you haven't seen this yet we've got
yours and Nathan's environments
yours and Nathan's environments
online on puffer GG uh there will be
online on puffer GG uh there will be
attribution at the top of this page as
attribution at the top of this page as
soon as I figure out how to do it uh the
soon as I figure out how to do it uh the
HTML is autogenerated for this because
HTML is autogenerated for this because
uh of mcrip in so you know you'll have
uh of mcrip in so you know you'll have
your name at the top of this as soon as
your name at the top of this as soon as
I figure out how to do that and if I
I figure out how to do that and if I
can't figure out how to do it I'll just
can't figure out how to do it I'll just
like put it on top of the game or
like put it on top of the game or
something
something
something or in the uh the link to it
something or in the uh the link to it
but yeah here it
is if I get higher SPS on smaller
is if I get higher SPS on smaller
Horizons and it doesn't get as much
Horizons and it doesn't get as much
signal not sure how to solve that you
signal not sure how to solve that you
increase the batch size typically
increase the batch size typically
Nathan you just you use stupidly big
Nathan you just you use stupidly big
batch
batch
sizes I mean it's fine to have it be
sizes I mean it's fine to have it be
like it's fine not to do that I think
like it's fine not to do that I think
that you could solve this in less than
that you could solve this in less than
30 seconds though
30 seconds though
would be my
would be my
guess probably faster did I tell you um
guess probably faster did I tell you um
you know there's this NYU lab that has
you know there's this NYU lab that has
this GPU driving Sim and I took their
this GPU driving Sim and I took their
train time from two hours down to 28
train time from two hours down to 28
seconds with
seconds with
Puffer that was pretty fun not on all
Puffer that was pretty fun not on all
the versions of it just yet but it will
the versions of it just yet but it will
be on all the versions as soon as they
be on all the versions as soon as they
get a couple little efficiency
get a couple little efficiency
optimizations 2 minutes is 30 seconds 40
optimizations 2 minutes is 30 seconds 40
90 well then we can do it in 10 right
I mean it doesn't really matter at that
I mean it doesn't really matter at that
point it's kind of just like a flex but
point it's kind of just like a flex but
it's still kind of
funny PR the hyper prams for this if you
funny PR the hyper prams for this if you
want so that uh we like PR the hyper
want so that uh we like PR the hyper
parameters and stuff for this if you
want and it's cool that if this actually
want and it's cool that if this actually
works with Fram Skip One at eval then
works with Fram Skip One at eval then
we'll be able to upload like the bot and
we'll be able to upload like the bot and
you can play against it as the
you can play against it as the
opponent yeah maybe we'll make it so
opponent yeah maybe we'll make it so
that
that
like the green agent is the rl1 or
something Ed eval or something I don't
something Ed eval or something I don't
know I can help with
that
that
unbeatable like unbeatable pong RL
unbeatable like unbeatable pong RL
agent sounds good
after I submit my
after I submit my
thesis need to figure out how to do RL
thesis need to figure out how to do RL
vers RL at eval we can do that as well
vers RL at eval we can do that as well
after I submit my thesis at the end of
after I submit my thesis at the end of
the month I can integrate the other
the month I can integrate the other
changes on breakout into the C code
changes on breakout into the C code
awesome that'd be
awesome that'd be
great yeah I the challenge I gave to you
great yeah I the challenge I gave to you
and Nathan would be to uh I mean it
and Nathan would be to uh I mean it
looks like Nathan did it but like just
looks like Nathan did it but like just
train like a really good Agent on your
train like a really good Agent on your
environment
right we do have the ability to load the
right we do have the ability to load the
agents onto the web now so
this is very cool got to go thank you
this is very cool got to go thank you
thanks for dropping by
okay I think I messed something up here
okay I think I messed something up here
so north north north east east
so north north north east east
south west west
south west west
west
west
north I think there's supposed to be
north I think there's supposed to be
another North in here
breakouts training at 800 on 800k yeah
breakouts training at 800 on 800k yeah
okay that's good
okay that's good
then already ran carb sweep getting good
then already ran carb sweep getting good
agents should be fairly easy that's what
agents should be fairly easy that's what
we want to
hear what's happening with this
thing let's just do
GDB break
A8
R
R
okay
okay
so and
ah it doesn't have the ability to pick
ah it doesn't have the ability to pick
up the key is
why it's also occurred to me that we
why it's also occurred to me that we
don't have the ability like the open
don't have the ability like the open
doors thing doesn't even really make
doors thing doesn't even really make
sense
well it's fine we'll mess with this in a
well it's fine we'll mess with this in a
bit let's get the
keys e
are you working on a puer lip grid world
are you working on a puer lip grid world
kind of I just figured we'd do a mini
kind of I just figured we'd do a mini
grid en you know as a quick
grid en you know as a quick
thing so gets the
thing so gets the
key okay so I was wrong there's
uh
two this additional North is not needed
okay we get
overflow um Keys is six
huh
Dev till you
die how about Dev and solve Ai and not
die how about Dev and solve Ai and not
die that sounds
good and die for
mortality welcome will what's going on
mortality welcome will what's going on
has 01 got you has 01 got you down or
has 01 got you has 01 got you down or
something your repo looks like it's
something your repo looks like it's
doing pretty well
oh I just messed this up as
oh I just messed this up as
well that funny that this didn't catch
that no just trying to solve really
that no just trying to solve really
stupid DX
stupid DX
stuff DX
have you tried
integrating
integrating
H the Emoji still comes up as a water
H the Emoji still comes up as a water
pistol on a on this oh developer
pistol on a on this oh developer
experience
okay the best thing I've done for
okay the best thing I've done for
developer experience so far has been P
developer experience so far has been P
putting the source code to things uh for
putting the source code to things uh for
things into brain dead signal
things into brain dead signal
files is honestly the best thing I've
files is honestly the best thing I've
done for developer
done for developer
[Music]
[Music]
experience more than apis or Shenanigans
experience more than apis or Shenanigans
or whatever it's like yeah here's all
or whatever it's like yeah here's all
the code it's just right here it's
the code it's just right here it's
really
simple you
simple you
know why do complicated thing when
know why do complicated thing when
simple things suffice
like even if I
like even if I
do like no abstractions stop trying to
do like no abstractions stop trying to
think of clever abstractions just don't
think of clever abstractions just don't
use any right this m is 2000 some odd
use any right this m is 2000 some odd
lines of c and I guarantee you that any
lines of c and I guarantee you that any
scheme that you can think of to like
scheme that you can think of to like
break this up into multiple files or
break this up into multiple files or
like abstract out various components is
like abstract out various components is
going to make it harder not easier for
going to make it harder not easier for
people to understand what the heck this
people to understand what the heck this
is all
is all
about bare bare minimum abstraction okay
about bare bare minimum abstraction okay
maybe this data could go back into the
maybe this data could go back into the
uh the data. H file or whatever that's
uh the data. H file or whatever that's
about it
though each of these mes is like a
though each of these mes is like a
pretty much Standalone
Doh and then I work on stuff like how do
Doh and then I work on stuff like how do
we have less boiler plate a lot right
we have less boiler plate a lot right
like I've been trying to figure out how
like I've been trying to figure out how
to reduce the amount of boiler plate
to reduce the amount of boiler plate
cython you need in order to bind these
cython you need in order to bind these
CMS to python stuff like that that's
CMS to python stuff like that that's
pretty much what I've been doing it's
pretty much what I've been doing it's
been going very nicely it's really cool
been going very nicely it's really cool
to be able to onboard more people like
to be able to onboard more people like
new people new contributors and just say
new people new contributors and just say
yeah here read this file it's like
yeah here read this file it's like
completely brain dead code right you
completely brain dead code right you
just read the file top to bottom like
just read the file top to bottom like
you're not you can ask me questions but
you're not you can ask me questions but
I promise you're not going to have any
we do that for sure and
we do that for sure and
L I mean what's the code footprint of it
L I mean what's the code footprint of it
right is it like
right is it like
it gets sketchy Beyond a certain
it gets sketchy Beyond a certain
size but it like that size is larger
size but it like that size is larger
than people
than people
think like puffer lib vectorization is
think like puffer lib vectorization is
one file the whole vectorization is one
one file the whole vectorization is one
file puffer lib emulation is one file we
file puffer lib emulation is one file we
have a bunch of rappers and obnoxious
have a bunch of rappers and obnoxious
other things that take up more files but
other things that take up more files but
generally I'd like to reduce the amount
generally I'd like to reduce the amount
of files and the amount of like
of files and the amount of like
abstractions not increase
abstractions not increase
it eventually there's just going to be a
it eventually there's just going to be a
puffer li. C or puffer li. h one of
puffer li. C or puffer li. h one of
these
these
days we can do that after we get
Revenue speaking of
Revenue speaking of
which I think it's about time to start
which I think it's about time to start
sending out some emails with that uh
sending out some emails with that uh
that company of
that company of
yours so I might want to be paying
yours so I might want to be paying
[Laughter]
[Laughter]
you because I've been getting a couple
you because I've been getting a couple
organic leads on stuff but it could use
organic leads on stuff but it could use
some help and I hate networking
puffer lib on
puffer lib on
pip well puffer is not on a performance
pip well puffer is not on a performance
Improvement plan but yes the package is
Improvement plan but yes the package is
on the uh the repository it's 1.0 mind
on the uh the repository it's 1.0 mind
you uh so like the core Tools in 1.0 are
you uh so like the core Tools in 1.0 are
there the demo and train scripts are
there the demo and train scripts are
meant to be user edited so those are
meant to be user edited so those are
from Source um and then the dev stuff is
from Source um and then the dev stuff is
obviously on
obviously on
dev pip andall puffer Li though for 1
back to work good luck with your
stuff we're making mini
grid get the key
and then it
fails agent
Keys death
tile minus
key1 oh
uh I think I
know wish I could get these to spawn on
know wish I could get these to spawn on
my same
monitor doesn't open the door
still for
the destination's a lock
the destination's a lock
door do have the wrong color
key the key
key the key
red no I have the right color
key for
oh we literally just messed this up is
oh we literally just messed this up is
all I just messed this up that's all
all I just messed this up that's all
that's
that's
dumb agent Keys is equal to
dumb agent Keys is equal to
one like this
right e
we didn't get a reached
goal where's a reached
goal where's a reached
goal what
happened looks like it got stuck at the
happened looks like it got stuck at the
end
right e
yeah not printing anything
was it not detecting the
goal are we just not running it long
goal are we just not running it long
enough
yep we're not running it long enough
yep we're not running it long enough
that was
it here we'll do this and now it should
it here we'll do this and now it should
work oop yay reach
goal so we got to clean this up a bunch
goal so we got to clean this up a bunch
but that's the basics of it right
that is the basics those are the
basics for
I think I kind of want to just bind this
I think I kind of want to just bind this
and start training on it instead of
and start training on it instead of
making it one to one
exactly I use gray for the walls
this is the only time they get get a
this is the only time they get get a
reward so this should be
good H let's just get the binding done
good H let's just get the binding done
for this
thing e
this is the boiler plate that annoys me
this is the boiler plate that annoys me
but we'll try to get through this
quickly
for e
just do
observations rewards and
observations rewards and
DS and then the constants right
self. n equals
self. n equals
init
init
GD this is going to be
grid.
grid.
dat
star this needs to be allocate doesn't
it
it
yeah we need to change a couple things
which is a bit obnoxious because like
which is a bit obnoxious because like
we're going to end up having to change
we're going to end up having to change
him
him
back but it's
okay these have to go
here cool right
m
observations actions rewards yeah okay
observations actions rewards yeah okay
so these are going to be allocated here
so these are going to be allocated here
and then we just do
and then we just do
Reen then we just
Reen then we just
do
do
Reen free all these buffers should be
good
retest Undeclared
identifier
grid
huh oh right
here that's
here that's
good uh cuz this doesn't need to be here
good uh cuz this doesn't need to be here
this needs to just go
this needs to just go
away and then this is a nit
away and then this is a nit
grid unsign
grid unsign
charar this is observations data action
charar this is observations data action
rewards uh this now needs to
rewards uh this now needs to
be is there no done
be is there no done
signal it's a
problem I wish there were a better way
problem I wish there were a better way
to do
this start DS
are
DS Rd
DS Rd
agents okay
with height
Vision cool so what I'm trying to do
Vision cool so what I'm trying to do
here is I'm just trying to pass all this
here is I'm just trying to pass all this
data from python so that when I update
data from python so that when I update
it Inc it just gets updated in Python
it Inc it just gets updated in Python
rather than having to copy it uh
rather than having to copy it uh
eventually what you can do is you can
eventually what you can do is you can
have all the memory allocations come
have all the memory allocations come
from Python and then you have full
from Python and then you have full
transparent access to the game state
transparent access to the game state
from python that's really
from python that's really
nice that takes a little bit more work I
nice that takes a little bit more work I
haven't figured out how to minimize the
haven't figured out how to minimize the
boiler plate associated with it is the
boiler plate associated with it is the
main obnoxious
main obnoxious
thing we can delete this block I don't
thing we can delete this block I don't
need it
anymore really don't need any of this
anymore really don't need any of this
garbage do
we okay I'm sure that there's stuff
we okay I'm sure that there's stuff
missing here but
yeah we need like step Don't We step and
yeah we need like step Don't We step and
reset at
least
[Music]
three okay so this still runs
three okay so this still runs
demo is
demo is
still I
still I
okay and now we have to get the binding
okay and now we have to get the binding
for this
thing
x what do we think right
here for
place let me check one thing real
quick expected nine got 10
observations actions rewards
DS forgot to add it
here where's sea snake being
here where's sea snake being
used this should be n
oops
oops
s. obervations with
height
Horizon still doesn't
Horizon still doesn't
build I think this takes a seed doesn't
build I think this takes a seed doesn't
it
or
or
two
whatever okay so this now
builds
builds
oops this now builds
you want to go grab the signature
you want to go grab the signature
from uh
srid with height oops we'll put this
srid with height oops we'll put this
here so we have
here so we have
width height
the moderately obnoxious thing is we
the moderately obnoxious thing is we
didn't actually bind the um the make
didn't actually bind the um the make
function for this specific environment
right I guess that's not
right I guess that's not
terrible we can just do render mode for
terrible we can just do render mode for
now like
this uh we do need
this uh we do need
OB size right
OB size right
Vision
Vision
Vision equals
three just happened here did I I deleted
three just happened here did I I deleted
a class
a class
okay this
get rid of all
this don't need any of this to be in
this don't need any of this to be in
Python land
Python land
[Music]
[Music]
anymore be
anymore be
one
zeros Rewards
zeros Rewards
we need
we need
this don't think
so I think all we need is
um now this will get set in a reset
there's like a bunch of just garbage in
here I forgot there's just so much
here I forgot there's just so much
boiler
boiler
plate it's going to take a quick uh it's
plate it's going to take a quick uh it's
going to take a
going to take a
second B
we have the whole freaking client in
we have the whole freaking client in
here don't
we just do
this yeah like literally none of these
this yeah like literally none of these
things need to be
things need to be
be here
anymore
Secret
e e
we don't need any of these things it
we don't need any of these things it
should literally just
should literally just
be uh actually I copied the wrong
be uh actually I copied the wrong
signature didn't
signature didn't
I oh what am I doing s. buff.
I oh what am I doing s. buff.
observations
observations
actions rewards duns
the heck what am I
doing something like
this
this
agents I
reward
zero so much garbage
here
right no longer need any of this
just
just
need just need
this but forwards fill
zero way too much code here
I'm realizing that I have quite a bit to
I'm realizing that I have quite a bit to
for if I want to replicate both this new
for if I want to replicate both this new
thing and the functionality of my old
thing and the functionality of my old
grid
grid
en this might end up being a few Day
en this might end up being a few Day
project instead of like a one- day
project instead of like a one- day
project like I intended it to but it's
project like I intended it to but it's
okay cuz we'll get like I mean this is
okay cuz we'll get like I mean this is
the last other environment that I'd
the last other environment that I'd
already built that's like at least other
already built that's like at least other
than the like the secret one um so
than the like the secret one um so
getting this online will be cool you
getting this online will be cool you
know we'll have a lot of different
know we'll have a lot of different
versions of this that we can put
online
for e
I'm getting like brain lag doing this I
I'm getting like brain lag doing this I
don't know
come
on okay now we should be able to debug
on okay now we should be able to debug
this
right poer grid has
noer
grid n
let's
maybe we just bind like this for
maybe we just bind like this for
now and then we like
oops like maybe what we do is we just
oops like maybe what we do is we just
put
this we put this into grid. H right
and like precepts or
whatever and then we go right
here we don't actually need this if you
here we don't actually need this if you
think about it right we just
need like
need like
this and then we'll
this and then we'll
do like we don't even need
this for
just like
this oh we don't even have Vision in the
this oh we don't even have Vision in the
Sig just do
this one given reset
valid
action okay
What's Happening
What's Happening
Here is I have crazy settings and that I
Here is I have crazy settings and that I
they're not not optimized well enough
they're not not optimized well enough
yet yeah you can see the batch size is
yet yeah you can see the batch size is
like something
like something
crazy and then the number of Ms here
crazy and then the number of Ms here
should probably
be let's just do like this I don't
be let's just do like this I don't
know oh wait n batch size should
know oh wait n batch size should
be four probably
be four probably
right or 512
yeah there you go so now that's like an
yeah there you go so now that's like an
initial train thing working uh this is
initial train thing working uh this is
more than an order of magnitude too slow
more than an order of magnitude too slow
so we'll fix
so we'll fix
that and we'll fix a bunch of other
that and we'll fix a bunch of other
things from here and basically the goal
things from here and basically the goal
then will today will be to solve this
then will today will be to solve this
environment to get it working and to
environment to get it working and to
solve it I have no idea how hard it'll
solve it I have no idea how hard it'll
be to solve it we could do some back to
be to solve it we could do some back to
the
the
envelope but maybe you
know I'm going to be right back I'm just
know I'm going to be right back I'm just
going to use the restro from real quick
going to use the restro from real quick
grab a drink and uh then we will we'll
grab a drink and uh then we will we'll
get logging into this I'll show you how
get logging into this I'll show you how
we're going to speed this up and so on
we're going to speed this up and so on
be right
be right
back
sore
e
e
e
e e
you know I'm realizing here that
you know I'm realizing here that
uh once we do this if I just bind some
uh once we do this if I just bind some
existing board games for some stuff
existing board games for some stuff
we're going to have a whole bunch of
we're going to have a whole bunch of
more environments that are like already
more environments that are like already
implemented fast assuming I actually
implemented fast assuming I actually
that there are fast implementations of
that there are fast implementations of
board games but like you know throw in
board games but like you know throw in
puffer liit chess that could be kind of
puffer liit chess that could be kind of
cool
right I don't know maybe the alpha zero
right I don't know maybe the alpha zero
stuff is just like dated maybe we can
stuff is just like dated maybe we can
just do stuff
just do stuff
better I'm sure MCTS is hard to beat
better I'm sure MCTS is hard to beat
without MCTS
without MCTS
but maybe it's just fast
enough maybe we have the
technology Twitter was blowing
technology Twitter was blowing
up the heck is going on here oh
up the heck is going on here oh
literally just a meme
literally just a meme
okay nothing doing here let's go back to
okay nothing doing here let's go back to
real
real
work hey pdbs how's it
work hey pdbs how's it
going we're implementing this thing for
going we're implementing this thing for
puffer today super
puffer today super
fast because it says that you can't
fast because it says that you can't
really solve it with vanilla
really solve it with vanilla
RL and I think we probably
can also Pokemon has been somewhat
can also Pokemon has been somewhat
stalled by um the hardware curfuffle but
stalled by um the hardware curfuffle but
I just got off Main gear uh with main
I just got off Main gear uh with main
gear today and they say they're going to
gear today and they say they're going to
do some part swaps and send the stuff
back I think I showed I don't know if I
back I think I showed I don't know if I
showed you this but
showed you this but
uh this is cool we have m's online now
uh this is cool we have m's online now
they're like playable
they're like playable
they're not fully finished yet but like
they're not fully finished yet but like
you know beta of puffer
you know beta of puffer
mooba Dash strike the
neutrals there's like where is it who's
neutrals there's like where is it who's
cool yeah this guy's
cool yeah we've got the snake
cool yeah we've got the snake
en and then we have some by contributors
en and then we have some by contributors
that I just poured it over they did it
that I just poured it over they did it
in scon and then I help with the c Port
in scon and then I help with the c Port
so we got breakout and pong
so we got breakout and pong
now and they're ludicrously
now and they're ludicrously
fast we haven't even full optimized them
fast we haven't even full optimized them
yet and they are ludicrously fast like
yet and they are ludicrously fast like
why are we wasting all this compute on
why are we wasting all this compute on
slow Ms when we can just make the MS be
slow Ms when we can just make the MS be
fast and solve the same exact problem
fast and solve the same exact problem
but
but
faster yeah so we're going to add minig
faster yeah so we're going to add minig
grid to this we're going to try to get a
grid to this we're going to try to get a
build of mini grid to add to this today
build of mini grid to add to this today
or like puffer minig Grid at least with
or like puffer minig Grid at least with
a couple scenarios
a couple scenarios
um maybe it'll take me a couple days
um maybe it'll take me a couple days
we'll
we'll
see and we'll go from
there I've been enjoying my
there I've been enjoying my
sea I've been very much enjoying my sea
I will agree with you that this that if
I will agree with you that this that if
I did this in C++ it would probably not
I did this in C++ it would probably not
be a lot of
be a lot of
fun but I'm liking my very brain dead
fun but I'm liking my very brain dead
simple C
me figure out what I want to fix here I
me figure out what I want to fix here I
think we just need to
think we just need to
get we need to get like a step all
get we need to get like a step all
function
function
right there any reason that we need to
right there any reason that we need to
step all
step all
and see instead of
cython not really
like
this for
is it size of
is it size of
En I guess it is
but this is also this allocates as
well is this supposed to be an M star
well is this supposed to be an M star
star I don't like M star star
though okay that is somewhat
obnoxious cuz this is technically an
obnoxious cuz this is technically an
mstar star we'll do this gross thing for
mstar star we'll do this gross thing for
now
it should be fine
right e
standard up we also don't have
um we need the header stuff don't
we oops
yeah we need all
this we want cic not
Malik reset
okay canot
okay canot
assign okay we'll just
assign okay we'll just
do M star star
do M star star
oops this angle bracket cast syntax
and I'm sure this is we're missing an
and I'm sure this is we're missing an
ARG yep we're missing an
ARG oh we got a fair few folks on
ARG oh we got a fair few folks on
YouTube at the moment welcome
YouTube at the moment welcome
everyone we're currently
everyone we're currently
implementing this little RL environment
implementing this little RL environment
it's very simple but this is like a well
it's very simple but this is like a well
it looks simple but it's a pain to solve
it looks simple but it's a pain to solve
but regardless um this is like a very
but regardless um this is like a very
common thing that's played around with
common thing that's played around with
an RL we're implementing it really
an RL we're implementing it really
really fast in puffer lib and uh yeah
really fast in puffer lib and uh yeah
we're going to go from there so
we're going to go from there so
hopefully we'll have some version if I
hopefully we'll have some version if I
can get this written fast we'll have
can get this written fast we'll have
some version of this online uh end if
some version of this online uh end if
today as the hope we'll see though I got
today as the hope we'll see though I got
a really late start today I got to bed
a really late start today I got to bed
on time and everything I was like ready
on time and everything I was like ready
all ready to get an early start today
all ready to get an early start today
and I just couldn't
sleep too much cool stuff going
on so I messed up my schedule a bit
m
e e
agents let's try
this no attribute num
M's it's like funny cuz I'm at a stage
M's it's like funny cuz I'm at a stage
now where everything here makes
now where everything here makes
sense like everything I'm doing here
sense like everything I'm doing here
makes complete sense to me but there's
makes complete sense to me but there's
just too much boiler plate it's like too
just too much boiler plate it's like too
clunky you know what I
clunky you know what I
mean like I know every single thing
mean like I know every single thing
that's going wrong here everything is
that's going wrong here everything is
very easy but there's just too much
very easy but there's just too much
boiler plate also this is about to make
boiler plate also this is about to make
a trillion environment so let's fix that
a trillion environment so let's fix that
before that
happens m is going to be two
happens m is going to be two
that size will be two I think this is
that size will be two I think this is
how it works
right
oops M take zero
oops M take zero
time
interesting e
I don't know what's going on with the
I don't know what's going on with the
training taking that long that's weird
training taking that long that's weird
oh probably we just have some janky
oh probably we just have some janky
hyper parameters or
something yeah here it
is yeah we got batch size mini bat size
is yeah we got batch size mini bat size
can be like
can be like
32k size will be like 128
120 what 32k *
120 what 32k *
4 it's like 129
something
something
131 I should know
that uh interesting
I do something weird yes I did this is
I do something weird yes I did this is
insane this is supposed to be 16 and
insane this is supposed to be 16 and
this is supposed to be
131 there we go there's
131 there we go there's
400k and we're on the not as good
400k and we're on the not as good
desktop at the
desktop at the
moment uh so that's nice and fast but
moment uh so that's nice and fast but
we're not actually passing the data
we're not actually passing the data
around that we should be so we need to
around that we should be so we need to
fix that
which really shouldn't be very hard
which really shouldn't be very hard
we're really just suffering under the
we're really just suffering under the
weight of these um these bindings to be
weight of these um these bindings to be
honest with
you that's just the main thing that's a
you that's just the main thing that's a
pain the way to the
bindings let's see how this is
bindings let's see how this is
done so yeah this make locked room and
done so yeah this make locked room and
this needs to
this needs to
be uh we need like
be uh we need like
mstar in it locked room n or whatever
right and most of this code should go
there so we're going to copy the
there so we're going to copy the
imple and this is going to
be oops down here
okay so now we have an anit function
okay so now we have an anit function
instead of an allocate function
add the
add the
unsigned rations actions rewards flood
unsigned rations actions rewards flood
stes Okay cool so now we have an init
stes Okay cool so now we have an init
version of this uh that takes all of
version of this uh that takes all of
this and now the allocate
this and now the allocate
function or the make function should be
function or the make function should be
very very simple by comparison because
very very simple by comparison because
this should just be
me
me
say uh my head
hurts get rid of this for
now let's just get this working for
now let's just get this working for
testing
error s
error s
grid nit locked Rim okay
sure we'll just call this to
sure we'll just call this to
make this will just have to be
make this will just have to be
obnoxiously quick and dirty until we uh
obnoxiously quick and dirty until we uh
we figure this out because it's just
we figure this out because it's just
like the thing that's like the reason
like the thing that's like the reason
I'm being completely incoherent at the
I'm being completely incoherent at the
moment with this is that
moment with this is that
like when you when you want to run this
like when you when you want to run this
code from C you have to allocate all the
code from C you have to allocate all the
data but then when you want to run this
data but then when you want to run this
from python you have to pass in all the
from python you have to pass in all the
data structures so that data gets
data structures so that data gets
mirrored to uh between Python and c and
mirrored to uh between Python and c and
then you also have to run many of these
then you also have to run many of these
environments in the same time in the
environments in the same time in the
same process and you have to make sure
same process and you have to make sure
that the specific slices of data go
that the specific slices of data go
there and uh none of this is
there and uh none of this is
particularly difficult but it's very
particularly difficult but it's very
annoying to do with without like
annoying to do with without like
scattering these giant function call
scattering these giant function call
signatures everywhere um and having lots
signatures everywhere um and having lots
of different versions of them and it's
of different versions of them and it's
very confused but I mean regardless we
very confused but I mean regardless we
should be able to get like a basic thing
should be able to get like a basic thing
training first and then we can figure
training first and then we can figure
out how to like make this easier in a
out how to like make this easier in a
bit I really would like to just have
bit I really would like to just have
this thing training today by whatever
this thing training today by whatever
means
necessary so this needs to have
necessary so this needs to have
unsigned this needs to have a different
unsigned this needs to have a different
signature and then this needs to also
signature and then this needs to also
get
the this is where it gets to be a little
the this is where it gets to be a little
obnoxious right I think
it's see so this is kind of wrong it's
it's see so this is kind of wrong it's
observations like of
observations like of
i. data
I think this should do
it python
objects we not do this is it just
objects we not do this is it just
binding too
tightly I don't think it should in
see but here let's just make sure
see but here let's just make sure
python
objects cannot be cast to pointers of
objects cannot be cast to pointers of
primitive
types you sure
oh because it doesn't know that this is
oh because it doesn't know that this is
a a numpy array as
well uh that's obnoxious
um
um
CNP the
CNP the
array yeah I think you have to do this
array yeah I think you have to do this
it's it's just not it's it's not uh the
it's it's just not it's it's not uh the
compiler doesn't
compiler doesn't
know it gets confused between Python and
know it gets confused between Python and
C types even when it's correct I
think syntax
error
error
simple really what's wrong with this
observations this is why I think that
observations this is why I think that
actually the C is easier than the scon
actually the C is easier than the scon
the C has actual error messages that
the C has actual error messages that
make sense what the hell is this
right and
right and
simple and the
array syntax error
oh I'm
dumb it's literally just
dumb it's literally just
this but like the fact that it doesn't
this but like the fact that it doesn't
give you a reasonable error message is
give you a reasonable error message is
really
obnoxious and yeah you're not allowed to
obnoxious and yeah you're not allowed to
have
um you're not allowed to
um you're not allowed to
have you're not allowed to have
have you're not allowed to have
declarations in loops
declarations in loops
so I have to do this right and then I
so I have to do this right and then I
have to
have to
do like
this and now it'll
this and now it'll
build
almost 382
wrong
wrong
here oh do I have the wrong
types what's wrong with
this
this
oh I
oh I
copied I know how I did that
reasonable error messages reasonable
reasonable error messages reasonable
error messages my kingdom for reasonable
error messages my kingdom for reasonable
error
messages and do we need all
messages and do we need all
this this is Agent speed
right okay finally
compiles cannot
convert to
K not convert
oh hold
oh hold
on hold
on hold
on you need to pass a slice
on you need to pass a slice
here needs to be a
slice like this because otherwise
slice like this because otherwise
because you're slicing a single thing a
because you're slicing a single thing a
single variable it just turns it into an
single variable it just turns it into an
INT you want the memory
INT you want the memory
view Malik invalid
view Malik invalid
size
okay invalid
okay invalid
size what's wrong with
this un invalid size unsorted
what happens
B okay so this has got to be the invalid
size do eight this is disgusting never
size do eight this is disgusting never
do this
but still invalid
but still invalid
really I thought I'd just do the size of
really I thought I'd just do the size of
a
pointer I could do this portion in
uh I could do this portion in C I guess
instead of doing it in the scon
instead of doing it in the scon
layer might be a little
easier this has got to be because the
easier this has got to be because the
type is not fully defined
type is not fully defined
right I would imagine
can I just like paste this
can I just like paste this
stuff but then I have to do the agent as
well freaking scon we really need better
well freaking scon we really need better
ways to bind stuff uh from
ways to bind stuff uh from
c those bindings are just disgusting
we typed abstruct
you just have to we'll leave the
you just have to we'll leave the
semicolons on it doesn't hurt
anything but this is what I mean by the
anything but this is what I mean by the
bindings being a total
bindings being a total
pain like I'm doing this in the hopes
pain like I'm doing this in the hopes
that this will make the
that this will make the
compiler understand what I'm trying to
compiler understand what I'm trying to
do with this
allocation I got to do now I have to do
allocation I got to do now I have to do
bull to beant because
bull to beant because
some reason bull doesn't work in
some reason bull doesn't work in
scyon then I have num Keys here which is
scyon then I have num Keys here which is
like six hard code
whatever still doesn't
Malik by the V Star Maybe
Malik by the V Star Maybe
this should give me
eight is it not an
mstar it should be an mstar
no I mean M star star
I I can do this I don't think this is
I I can do this I don't think this is
correct
though yeah you see
n this should be correct like this
n this should be correct like this
something's
weird let me just make sure that it's
weird let me just make sure that it's
actually crashing where I
think maybe it's not crashing where I
think maybe it's not crashing where I
think
see it's not crashing where I
see it's not crashing where I
thought Malik invalid
thought Malik invalid
size where is it
uh where is it allocating wrong side
invalid size
unsorted it's on the second
call that's weird
maybe self. M's of I
this looks
good what is the invalid size being
good what is the invalid size being
passed no
wonder width times height
no
agents these are all hardcoded it should
agents these are all hardcoded it should
be
fine could be this stuff down here that
fine could be this stuff down here that
I'm overwriting
I'm overwriting
maybe I have a dress sanitizer on
though what do you is
this yeah so overwriting some
memory I should just redo the binding
memory I should just redo the binding
for C I should just like do this from
for C I should just like do this from
c um and that should probably find the
eror in fact I mean I could just like
eror in fact I mean I could just like
do the make all thing and
see I would also probably find it I
see I would also probably find it I
probably should not be doing my
probably should not be doing my
allocations from scyon that's like the
allocations from scyon that's like the
one place I probably should not be doing
one place I probably should not be doing
them right
h
lock room m
how can I rewrite this
maybe it should be like a setup or
something it's like weird because the
something it's like weird because the
inip function needs width and height and
inip function needs width and height and
such
right so this has to call the
right so this has to call the
initializer
I don't know why I'm stuck on this this
I don't know why I'm stuck on this this
should be very very
should be very very
easy like tremendously tremendously easy
easy like tremendously tremendously easy
but something is just not clicking here
like the
issue yes the issue is just like not
issue yes the issue is just like not
having default parameters I guess is
having default parameters I guess is
making it
making it
clunky it really shouldn't matter that
much yeah cuz like this
much yeah cuz like this
is these are fixed anyways right
I I could just for
I I could just for
now
right if I don't mind doing it this
right if I don't mind doing it this
way and like just completely
way and like just completely
ignoring for now we can just do allocate
here and then I can go to grid.
C now this can
C now this can
[Music]
be Al look
this is
this is
allocate
and Je okay
this is totally
fun this 408 bytes is from RB
what can I like not allocate multiple of
what can I like not allocate multiple of
these or something is that what going
on star star
do this this goes to the
top and then we'll just do like
I less than
41 plus
41 plus
plus do
I'm just trying to see if we can
I'm just trying to see if we can
reproduce this weird memory bug that we
reproduce this weird memory bug that we
can get this thing running already
okay so we're leaking a bunch of
bites let's figure out what we're
leaking oh well so we're obviously
leaking we didn't free this right so we
leaking we didn't free this right so we
have to
close free allocated
close free allocated
grid and then we're going to do
oops okay so we do have a double threee
oops okay so we do have a double threee
here
re ah okay so this free allocated
re ah okay so this free allocated
function is
redundant allocate does OBS actions
redundant allocate does OBS actions
rewards DS
agents so this allocates m grid
agents there we go no more memory
agents there we go no more memory
leaks does this help the um
no doesn't like it
no doesn't like it
still well maybe we should just do all
still well maybe we should just do all
of our inits from uh from C because this
of our inits from uh from C because this
is obnoxious right we saw how easy it
is obnoxious right we saw how easy it
was to do this in
purec I me it's pretty much just this
purec I me it's pretty much just this
code right
here the only thing is we're going to
here the only thing is we're going to
have to
have to
map observations over but it's
map observations over but it's
not that great
we're going to just do it in here
we're going to just do it in here
because I know that this should
because I know that this should
work allocate lock room
work allocate lock room
en we're going to this is init locked
en we're going to this is init locked
room en or whatever right make locked
room en or whatever right make locked
room
en make lock
rooms uh
unor for
like
this this is almost right but we have to
this this is almost right but we have to
do uh the offset
here this is and observations of
I
I
times Well division is three so 7 * 7 or
times Well division is three so 7 * 7 or
something obviously we're not going to
something obviously we're not going to
leave this
hardcoded
hardcoded
okay reset
I and that is
I and that is
all then you can just do step
all then you can just do step
Ms wait
Ms wait
step
M
right 3 m
reset
M bind all this to scon
need this don't need
this so now this
this so now this
goes we still have M star star here
goes we still have M star star here
but now we get to directly pass in
but now we get to directly pass in
uh this gets to just
be make locked
be make locked
rooms with all these data types uh like
this and then we'll just do reset ends
this and then we'll just do reset ends
like
this into
this into
here so we don't even have the loop in
here so we don't even have the loop in
scyon which is no big deal either way
scyon which is no big deal either way
but step
but step
ends uh sure this is fine and then we
ends uh sure this is fine and then we
have 3M
okay so this test still pass passes it
okay so this test still pass passes it
still
compiles cannot
compiles cannot
[Music]
[Music]
assign
3M cannot assign type
3M cannot assign type
M star
star
huh oh I it's all in all of them right
okay so we have the same
okay so we have the same
bug reset
M cannot assign
M cannot assign
we don't have it on the make though we
we don't have it on the make though we
just have it on
this it takes M star star M's
right cannot
assign
assign
type mstar star to mstar this is why you
type mstar star to mstar this is why you
never use freaking double
pointers like
pointers like
ever if I had been smarter I would have
ever if I had been smarter I would have
written it in a way that wouldn't have
written it in a way that wouldn't have
required it which I know how to
do but it would make require some more
do but it would make require some more
work at this point
is this actually happening
is this actually happening
what reset
what reset
Ms oh it it messed up the signatures
Ms oh it it messed up the signatures
here damn
here damn
it I don't know why I didn't get the
it I don't know why I didn't get the
error on uh make locked M I should have
error on uh make locked M I should have
gotten the error up
top there we
go cool so now this is training and
go cool so now this is training and
maybe there's actually reasonable data
maybe there's actually reasonable data
coming through this
maybe I mean regardless let's figure out
maybe I mean regardless let's figure out
uh what we're going to do
uh what we're going to do
here we definitely need to get rewards
here we definitely need to get rewards
from
this e
I'm trying to think how I want to record
I'm trying to think how I want to record
this data
i' like mentally got some sort of block
i' like mentally got some sort of block
with this right now I don't know what it
with this right now I don't know what it
is I think it's just making me
is I think it's just making me
uncomfortable that
uncomfortable that
um like all this binding stuff is just
um like all this binding stuff is just
making me very
making me very
uncomfortable cuz like I know that
uncomfortable cuz like I know that
there's so many places that could have
there's so many places that could have
potential
potential
errors but I really just need to charge
errors but I really just need to charge
ahead with this and get something
running this is absolutely awful code
though we got Horizon
and is there a time step on
here
here
tick do like
tick do like
this grid
this grid
reset just
reset just
do pick is zero
if
Horizon do I want this to reset it or do
Horizon do I want this to reset it or do
I want to reset it I want this to reset
I want to reset it I want this to reset
it right
I don't want to even bother setting
DS I the thing that's bothering me I
DS I the thing that's bothering me I
think I figured out what it is the thing
think I figured out what it is the thing
that is bothering me here is that I know
that is bothering me here is that I know
that this is like a very sparse task
that this is like a very sparse task
that's going to require this thing to be
that's going to require this thing to be
really correct and it's going to be very
really correct and it's going to be very
difficult for me to tell whether it's
difficult for me to tell whether it's
really correct um if I mess little
really correct um if I mess little
things up here and there
so but there are ways around that I can
so but there are ways around that I can
leave like a reward Trail or something
it's still just bothering me and it's
it's still just bothering me and it's
bothering to me to the point that I'm
bothering to me to the point that I'm
like stuck on writing code because I
like stuck on writing code because I
know that there going to be
issues
m
for I'm like really tempted to just take
for I'm like really tempted to just take
a step back and try to do this thing
a step back and try to do this thing
correctly as this is driving me
correctly as this is driving me
nuts it's also four and I haven't had a
nuts it's also four and I haven't had a
I need to get like a shake and some
stuff like what I should have done
here are you using po to train all these
here are you using po to train all these
M yeah
M yeah
poo kind of just solves
poo kind of just solves
everything when things are fast enough
everything when things are fast enough
as far as we've
as far as we've
seen when you have good hyper parameter
seen when you have good hyper parameter
sweeps and good
infra let me see if I'm making some
infra let me see if I'm making some
oversight here
because it really shouldn't be that bad
yeah I think I'm just overthinking it
yeah I think I'm just overthinking it
all I need to do is I need to figure out
all I need to do is I need to figure out
a good way to get
a good way to get
trajectory rewards and I should be
set for
how do I get that data back to
how do I get that data back to
the environment
the environment
cleanly when this has to run this fast
because I don't want to Loop over all
because I don't want to Loop over all
these M's in Python right
I don't know what the mental block is
here it should be so
here it should be so
easy there's something I'm like missing
I guess it's cuz like
um if you actually have to write any
um if you actually have to write any
Loop in Python since it's single agent
Loop in Python since it's single agent
like it's way worse than in the
like it's way worse than in the
multi-agent case I
guess so return
drink a
drink a
shake other Pi is making Gaines right
now while this Pi
now while this Pi
here squatted uh after nearly killing
here squatted uh after nearly killing
myself luckily I had safe
where's the
thing I should go get my shake though
thing I should go get my shake though
you're right my head is just all
you're right my head is just all
fuzzy this is is
fuzzy this is is
265 265 for 3 sets of
265 265 for 3 sets of
five I think I'm pretty good
there hey a carsh how's it going
man I'm currently trying to implement
man I'm currently trying to implement
minig Grid at like 10 million steps a
minig Grid at like 10 million steps a
second and I'm being very dumb about it
second and I'm being very dumb about it
how's it going
how's it going
though AAR is um one of Philip students
though AAR is um one of Philip students
former lab
former lab
mate I guess you're probably back at MIT
mate I guess you're probably back at MIT
right is MIT MIT must have started by
right is MIT MIT must have started by
now
now
right hope your Summer's been good
have you seen
have you seen
these These are
these These are
fun it's not quite league but uh you
fun it's not quite league but uh you
know it's a little bit of
it you got some Classics as
well a life project wrapping up
well a life project wrapping up
cool very nice
I was trying to figure out how to
I was trying to figure out how to
implement minig grid uh very fast but
implement minig grid uh very fast but
then I just
then I just
like I don't know there are a couple
like I don't know there are a couple
weird things with this that I didn't run
weird things with this that I didn't run
into for some reason with the other
into for some reason with the other
M's I mean they should in theory be the
M's I mean they should in theory be the
exact same come to think of
it didn't I literally do this in
pong the bindings here
I guess it's this reward Su
I guess it's this reward Su
thing yeah I guess I just did it in
Python oh no there is some additional
Python oh no there is some additional
loging
loging
here EOS alos came to MIT and shaded
here EOS alos came to MIT and shaded
building a large aife
building a large aife
simulator and training agents and is
simulator and training agents and is
doomed to
doomed to
succeed that's
cool I am somewhat well I don't know if
cool I am somewhat well I don't know if
I'd say suspicious I think you'll get I
I'd say suspicious I think you'll get I
think you'll get cool behaviors out of
think you'll get cool behaviors out of
aif for sure aif style Sims it's very
aif for sure aif style Sims it's very
hard to make them interpretable without
hard to make them interpretable without
tying them to something like a game
tying them to something like a game
though
but yeah as for building uh building
but yeah as for building uh building
Sims we're pretty much at a point where
Sims we're pretty much at a point where
we can build whatever we want Ultra
we can build whatever we want Ultra
Ultra fast now um and we have puffer
Ultra fast now um and we have puffer
will actually keep up with it which is
will actually keep up with it which is
nice you know we've got million step per
nice you know we've got million step per
second training runs once you optimize a
second training runs once you optimize a
bit neural MMO style
Sims oh I got to get my uh my secret
Sims oh I got to get my uh my secret
project done then
project done then
it's been like basically releasable for
it's been like basically releasable for
a long time now uh but what happened you
a long time now uh but what happened you
see
see
is I didn't want to release it without
is I didn't want to release it without
it being like something that would catch
it being like something that would catch
on and a lot of people would get to see
on and a lot of people would get to see
and interact with so I started porting
and interact with so I started porting
it to C so I could put it on the web and
it to C so I could put it on the web and
that's going to take a little time I
that's going to take a little time I
actually have a a demo of it ready but
actually have a a demo of it ready but
uh it just it needs a little bit more
uh it just it needs a little bit more
work it's like 3,000 lines of C plus a
work it's like 3,000 lines of C plus a
couple of shaders
couple of shaders
it's even longer than the Moa like 50%
it's even longer than the Moa like 50%
more code than the
more code than the
Moa it's quite a bit I think the next
Moa it's quite a bit I think the next
patch to puffer lib is going to be close
patch to puffer lib is going to be close
to 10,000 lines of C for the next puffer
to 10,000 lines of C for the next puffer
lib update which is way larger than the
lib update which is way larger than the
size of the puffer lip core
the key errors that I've seen with a lot
the key errors that I've seen with a lot
of these simulators that people build
of these simulators that people build
right is they either they try to do they
right is they either they try to do they
try to do them in Jacks and then they
try to do them in Jacks and then they
get limited on what they can actually
get limited on what they can actually
build or um you know they don't do them
build or um you know they don't do them
in Jacks but they don't like they do
in Jacks but they don't like they do
them in python or whatever and they end
them in python or whatever and they end
up being
up being
slow the two main things I've seen
WS come on this is so simple I should be
WS come on this is so simple I should be
able to have um
well there are kind of like things that
well there are kind of like things that
are a bit wrong here right because this
are a bit wrong here right because this
win
rate this win rate thing needs to get
reset oh no it is correct isn't
reset oh no it is correct isn't
it
it
uh not quite Maybe
h
okay I really need to just go make a
okay I really need to just go make a
shake and take a few minutes because my
shake and take a few minutes because my
brain is just like not letting me think
brain is just like not letting me think
about very simple things at this point
about very simple things at this point
um I basically all that needs to happen
um I basically all that needs to happen
here is I just need to come up with a
here is I just need to come up with a
clean and slightly more efficient way
clean and slightly more efficient way
than this to uh to get the log data back
than this to uh to get the log data back
into the minig grid end and we should
into the minig grid end and we should
already be able to train and I really
already be able to train and I really
want to have that working today so we
want to have that working today so we
can actually see things being solved so
can actually see things being solved so
uh yeah I'm going to take a couple
uh yeah I'm going to take a couple
minutes real quick I'm going to do that
minutes real quick I'm going to do that
and then I'll be right back and uh we'll
and then I'll be right back and uh we'll
finish this
properly
e
e
e
e
e
e
e
e
e
e
e
e
e
e
e
e e
[Music]
[Music]
okay so I don't think I was being as
okay so I don't think I was being as
dumb as I thought with the original
dumb as I thought with the original
thing there is kind of a little bit of
thing there is kind of a little bit of
subtlety to it
there's a little bit more subtlety than
there's a little bit more subtlety than
I originally gave the problem
I originally gave the problem
credit I have credit
for I think I really want this layer in
for I think I really want this layer in
scon
scon
um or
um or
rather I really want this
rather I really want this
layer here in
scon do
scon do
I well to be fair I can have these
I well to be fair I can have these
functions be in cython I mean in uh in C
functions be in cython I mean in uh in C
this is fine
this is fine
right and like for now at least oops
I can have these functions
I can have these functions
be uh in
scon and then I should be able to come
scon and then I should be able to come
over
over
to
Red I guess this step M thing causes a
Red I guess this step M thing causes a
problem huh
because basically what I would like to
because basically what I would like to
do right is I would like to do like
do right is I would like to do like
um
um
int num finished float
some
some
episode reward
episode reward
right and then I would like to just
go I'm not in
reset i' like step
this yeah this is what it was I just
this yeah this is what it was I just
didn't want to add like more structure
didn't want to add like more structure
into the C
code done equals
code done equals
this and then we'll just
this and then we'll just
do if done
episode where is it episode
return yeah it's funny I immediately
return yeah it's funny I immediately
feel better I literally just hadn't had
feel better I literally just hadn't had
anything to eat
this is what you
this is what you
want and then we'll be able to get these
want and then we'll be able to get these
variables from uh from
python for
okay now this m just needs to
okay now this m just needs to
have episode
return
return
this tick float episode return
tick episode return goes to
tick episode return goes to
zero and then when you
step this should be bull
step we're going to ignore the fact that
step we're going to ignore the fact that
it
it
is uh single
is uh single
agent for now we're going to do BU done
agent for now we're going to do BU done
is
false done this
through
this turn
done we also have to add the
pick plus equal 1
if
this there we go so now we should have
this there we go so now we should have
uh the thing that we want
here we no longer
here we no longer
need all these
functions um I think we'll leave them
functions um I think we'll leave them
for now just in
for now just in
case but this should be substantially
case but this should be substantially
easier and then the way that this is
easier and then the way that this is
going to look
going to look
right is we're going to have report
right is we're going to have report
interval
interval
for Interval is going to be
128 and then we're going to
say Port
interval
interval
if
if
interval equal to
interval equal to
zero you don't need episode return
like
this let's figure out what we have to
this let's figure out what we have to
fix in order to make this
work do not convert
really M has no attribute episode return
okay well it does but I didn't add it to
okay well it does but I didn't add it to
the struct I
believe right
here assign and then the the signature
here assign and then the the signature
Chang this is now a
Chang this is now a
bent and now this compiles
I think we also need to
change uh we need to add the tick
change uh we need to add the tick
right this is self. tick
but this is going to log very
infrequently H not that
bad and then of course this is getting
bad and then of course this is getting
zeros uh so what we're going to do is
zeros uh so what we're going to do is
we're going to
we're going to make this be something
we're going to make this be something
that is way easier
temporarily so this is spawn Y is going
temporarily so this is spawn Y is going
to be a seven plus
to be a seven plus
Vision spawn X is going to
Vision spawn X is going to
be I'm plus
Vision be
Vision be
goal so essentially
so essentially I'm just trying to make
so essentially I'm just trying to make
this a really easy task to see if we
this a really easy task to see if we
actually get the logs in our
learning looks like it
maybe we have some crazy hyper
maybe we have some crazy hyper
parameters
right I think we have some crazy
hyers yeah we don't need this to be this
hyers yeah we don't need this to be this
ridiculous
ridiculous
so what we have
4096 mini batch can be
4096 mini batch can be
like 9
like 9
two uh the batch size does have to be
two uh the batch size does have to be
insane though doesn't
insane though doesn't
it with 4096 M like
it with 4096 M like
this not
this not
really you can just do 4096 *
16 what's that
oh
oh
duh so we'll do
65k and uh we'll basically just see if
65k and uh we'll basically just see if
this does
anything interesting that it goes to one
immediately and it backs off
possibly rewards not getting set
possibly rewards not getting set
correctly
some
some
orang
orang
oops
some try this
some try this
I just want to see if we're actually
I just want to see if we're actually
getting any
rewards oh we
are and then it crashes
oh of course it does because when you
oh of course it does because when you
reset the environment right it doesn't
reset the environment right it doesn't
reset properly yeah we never did proper
reset properly yeah we never did proper
resets
m for
what's the intuition
what's the intuition
between how your modifying your
between how your modifying your
HPS hyper prams like batch size learning
HPS hyper prams like batch size learning
rate are there general
rate are there general
rules that you're following before carbs
rules that you're following before carbs
yeah so what I'm doing at the moment um
yeah so what I'm doing at the moment um
mini batch size is going to be at least
mini batch size is going to be at least
4096 that is for Hardware because it's
4096 that is for Hardware because it's
basically free to increase it up to that
basically free to increase it up to that
size with networks that small and then
size with networks that small and then
in order to get at least like 16 back
in order to get at least like 16 back
prop Through Time Horizon which is
prop Through Time Horizon which is
really on the low end it should really
really on the low end it should really
be much higher than that multiply by 16
be much higher than that multiply by 16
to get 65k
to get 65k
and then uh I deleted all the other
and then uh I deleted all the other
carbs perms because they were for
carbs perms because they were for
different environments um so like they
different environments um so like they
had some like crazy settings so it's
had some like crazy settings so it's
just using the defaults for the rest of
just using the defaults for the rest of
them but mainly it's just the uh you
them but mainly it's just the uh you
know get your reasonable Hardware
know get your reasonable Hardware
optimized ones uh the issue at the
optimized ones uh the issue at the
moment is not hyper prams the issue at
moment is not hyper prams the issue at
the moment is me not resetting the M's
correctly definitely that
got it thanks yeah
so all I'm trying to do now is get like
so all I'm trying to do now is get like
relatively efficient resets this is
relatively efficient resets this is
super hacky right but
uh I just really want to see this
uh I just really want to see this
environment get solved today and then we
environment get solved today and then we
can worry about everything else after
oh yeah right
here e
that's
funny e
grid address empty
grid address empty
failed okay
very obnoxious
I see the problem
I see the problem
here but I don't like it for
we could always just do
this still
this still
know really
oh yeah because you
have
really that's multiple
really that's multiple
M's reset lock room n
allocate locked room
end then reset
end then reset
locked room and
is it actually building
is it actually building
correctly it seems very
weird
yeah is building
correctly what I'm literally setting it
correctly what I'm literally setting it
all to empty as
well for
the heck would be
there oh wait maybe this is not where
there oh wait maybe this is not where
it's failing
no this literally it's failing right
here even though I'm clearing the whole
here even though I'm clearing the whole
damn
environment for
oh is the agent just not getting set to
oh is the agent just not getting set to
the
right yeah it must be that the agent is
right yeah it must be that the agent is
not getting set to the right
not getting set to the right
uh hold
on yeah I'm being dumb
so you need
so you need
this this
this this
thing needs to go
here and now it
works for
going
going
up
up
yeah look at
that this is the uh the dummy test
recall but yeah now this solves
it it should
it it should
it should definitely solve
it should definitely solve
it that's
nice now what we're going to
nice now what we're going to
do is we're going to see if it ever gets
do is we're going to see if it ever gets
the
key
okay for
I think this is going to have to be
I think this is going to have to be
substantially
what
what
actually how's that
possible e
that's kind of
that's kind of
weird where's there's nothing in here
zero
why is there nothing in the environment
why is there nothing in the environment
to see oh because it
to see oh because it
didn't that's file iio that's
obnoxious X
we need this annoying bit of code
here here we go so I don't know why it's
here here we go so I don't know why it's
like this but
like this but
like you know
like you know
here's this guy doing things for some
reason seems like he doesn't know how to
reason seems like he doesn't know how to
go
left is there an issue with going
left is there an issue with going
left possibly
can I control
can I control
him I should be able to control him
now no I can't control
them oh cuz we have to add this to the
well if I do the C code I should be able
well if I do the C code I should be able
to control them
right and then
set Lo
set Lo
room
and okay
okay here's the puffer
something's definitely wrong with the
something's definitely wrong with the
action space
what happened
here is it just not processing specific
here is it just not processing specific
actions this one
actions this one
processes this one processes
processes this one processes
this they all process except
for except for going west I
for except for going west I
guess north south east yeah except for
guess north south east yeah except for
West the
heck West is
heck West is
four oh I know
North uh this is
West so this does work I was going to
West so this does work I was going to
say there's like no way
right go like
this Chom we ate the star
done
done
done reset lock
done reset lock
room let's just make sure this
works it's slightly difficult the way
works it's slightly difficult the way
that I have it
that I have it
here because I
here because I
uh it's okay
uh it's okay
though that
it's kind of hard to do this the
it's kind of hard to do this the
controls at the moment need to
controls at the moment need to
Improvement oops do it not let me get
Improvement oops do it not let me get
the
the
key or did I just miss the key
before Oh wait I got the key and it just
before Oh wait I got the key and it just
reset me
here let's just fix this so I can
here let's just fix this so I can
actually do this
actually do this
correctly we make sure that we're I want
correctly we make sure that we're I want
to make sure that the m is reasonable
to make sure that the m is reasonable
before I try to make it do something
before I try to make it do something
harder
cool
interestingly it's telling me that the
interestingly it's telling me that the
key has been found on a lot of these
guys why does it never go left
guys why does it never go left
I assume the action space is wrong
right yeah this is five not
right yeah this is five not
four okay so let's try this
again okay so you can see it says I
again okay so you can see it says I
because I have 4,000 of these running in
because I have 4,000 of these running in
the background it says a few of them are
the background it says a few of them are
finding the key
finding the key
already so
here's what we're going to
do I didn't even think it would be that
do I didn't even think it would be that
fast so this is totally feasible then if
fast so this is totally feasible then if
it's actually going to find stuff that
it's actually going to find stuff that
fast
interestingly we don't have anybody
interestingly we don't have anybody
unlocking the
unlocking the
door at all
yet yeah no door
yet yeah no door
unlocks
unlocks
possibly we need to increase the horizon
2024 give it some more time to figure
2024 give it some more time to figure
this out
finds the key so
quickly I it's an exponentially deep
quickly I it's an exponentially deep
search problem right
come
on not even
once that's disappointing
recompile
did is the only way to do this to have
did is the only way to do this to have
like really long
like really long
Horizon you know like essentially
Horizon you know like essentially
unlimited
Horizon maybe then it'll find it
eventually if it's going to do brownie
eventually if it's going to do brownie
in motion it should right
just run wandering around
randomly shouldn't be anything to be
randomly shouldn't be anything to be
training on
h
why I would think if you wander around
why I would think if you wander around
the environment just randomly for that
the environment just randomly for that
amount of time you would solve it
no possibly the RL is doing something
no possibly the RL is doing something
weird
set the learning rate to
set the learning rate to
zero what
happens so it should just be wandering
happens so it should just be wandering
around
randomly still no huh
mean really
how long do we think is there any way to
how long do we think is there any way to
get a calculation of how long it should
get a calculation of how long it should
take
how about has
how about has
key you get like a has key or
something
e
e e
I just want to see how many of these
I just want to see how many of these
have the key it should go up over time
have the key it should go up over time
even without training right just by
even without training right just by
random
exploration just set up
93 with the
93 with the
key that should be going up over
time that should absolutely be going up
time that should absolutely be going up
over time it should not be able to go
over time it should not be able to go
down
am I resetting more than
expected oh
yeah why are we resetting
uh The Horizon is wrong here
okay they should do
it we should be able to at least see
it we should be able to at least see
um the keys go
um the keys go
up 86 with the
up 86 with the
key door
key door
unlocked reward found reward
unlocked reward found reward
found okay m is solvable m is so easily
solvable see what I mean it's always
solvable see what I mean it's always
shitty infrastructure and dumb like
shitty infrastructure and dumb like
annoying problems it's
annoying problems it's
never I mean this is like an exp this is
never I mean this is like an exp this is
literally an exponentially deep search
literally an exponentially deep search
problem and it's still going to do it
look at that you see they literally
look at that you see they literally
learned
it
it
saving agent paths
saving agent paths
saving every path made during training
saving every path made during training
would slow things
would slow things
right as a method of seeing what agents
right as a method of seeing what agents
are
are
doing as it means no I've done that
doing as it means no I've done that
before I've done that before it doesn't
before I've done that before it doesn't
slow anything
slow anything
down um at least not if you want to do
down um at least not if you want to do
it like
it like
reasonably it just takes a little
reasonably it just takes a little
infra here what we're going to do is
infra here what we're going to do is
we're just going to do like this crack
I mean we have it done literally I
I mean we have it done literally I
didn't run a hyper parameter sweep I
didn't run a hyper parameter sweep I
wrote the jankiest freaking code
wrote the jankiest freaking code
possible like I was I've been like just
possible like I was I've been like just
doing stupid things all day and it's
doing stupid things all day and it's
still
solved it will be at least
here we need to um
here we need to um
we'll have to refine this metric a
we'll have to refine this metric a
little
little
bit oh I forgot to rebuild the
bit oh I forgot to rebuild the
environment it's going to be super slow
environment it's going to be super slow
hold
on here I'll I'll rebuild this I'm going
on here I'll I'll rebuild this I'm going
to run the experiment yeah but there you
to run the experiment yeah but there you
can go see
it's
it's
three there we
three there we
go here I'll leave this here for a
go here I'll leave this here for a
moment I'm going to go use the restro
moment I'm going to go use the restro
I'll be right back and uh RL so hard
I'll be right back and uh RL so hard
guys yeah it's only hard when you write
guys yeah it's only hard when you write
your M's in Python and have no
data be right
back
e
e e
what is happening
so our metrics are weird as what's
so our metrics are weird as what's
happening
um I have no idea if this is solv the
um I have no idea if this is solv the
environment or not is the
problem I don't know let's just do
mil now we don't need multiprocessing
mil now we don't need multiprocessing
it'll be fun
I only made it like you know 50 times
I only made it like you know 50 times
faster maybe only like 25 times faster
faster maybe only like 25 times faster
even than the uh the standard training
even than the uh the standard training
implementation I mean I could make it a
implementation I mean I could make it a
few hundred times faster if I wanted
few hundred times faster if I wanted
to the stuff is not that hard if you
to the stuff is not that hard if you
just make it
just make it
fast you don't have enough samples it's
fast you don't have enough samples it's
that
[Music]
[Music]
simple let's see if this policy if we
simple let's see if this policy if we
can actually load it and watch it do
stuff and then we'll take a break from
stuff and then we'll take a break from
this to Sol Tic Tac Toe to prove the
this to Sol Tic Tac Toe to prove the
other guy on Twitter
wrong maybe we'll do that Ian if I just
wrong maybe we'll do that Ian if I just
do that in I can probably make that fast
do that in I can probably make that fast
enough in Python
enough in Python
right I mean that should just solve
instantly e
this would be easily a million with a
this would be easily a million with a
little bit of
optimization I don't even know what
optimization I don't even know what
policy this is
running I'm sure it doesn't make sense
running I'm sure it doesn't make sense
for what I'm
for what I'm
doing I think there's like a redundant
doing I think there's like a redundant
Com or whatever cuz the view field is
Com or whatever cuz the view field is
too
too
small whatever though
right all
right
for e
this might not be the right policy
h
h
[Music]
some
some
reward someone up here something
reward someone up here something
happened oh the value LW
happened oh the value LW
spiked something weird happened there
this to 1,24
maybe see about this one
bro need some help
yeah I mean several of them solve the
yeah I mean several of them solve the
environment in training so it's not once
environment in training so it's not once
you have that it's just a little bit of
you have that it's just a little bit of
fiddling away from
fixing you can see they're still getting
fixing you can see they're still getting
the key
need to
need to
rebuild I forget
that yeah
oh something got it
all
it's figuring something
out need some better
metrics for
it looks like it figured something out
it looks like it figured something out
right here
like there are some weird spikes but
like there are some weird spikes but
they're not huge like this is only from
they're not huge like this is only from
1.6 to
1.5 it does line
up It lines up right with the uh the
up It lines up right with the uh the
reward there
oh here you
have this is what it should be this
have this is what it should be this
return
I'm tempted to just optimize it a little
I'm tempted to just optimize it a little
bit and run a sweep
um e
how much faster is
this I mean it should just be faster on
this I mean it should just be faster on
the main box right
this is not even the fast box
this just do something
different be nice to just solve this
different be nice to just solve this
without needing to do a sweep but uh
it's funny how it oscillates like this
it's funny how it oscillates like this
is very weird
we probably just need to up the log
interval let's do this this should give
interval let's do this this should give
us some more
stable be more
stable it's every uh 4 million steps or
stable it's every uh 4 million steps or
whatever
maybe
maybe
uh
eight there we
go for
so what's happening with the one at the
so what's happening with the one at the
start is that
start is that
um only
um only
the only the environments where it does
the only the environments where it does
happen to find it are reporting in that
happen to find it are reporting in that
early
believe
e e
we'll just run a sweep on it this is no
we'll just run a sweep on it this is no
big
deal I don't really want to take my old
deal I don't really want to take my old
grid environment out until I uh
grid environment out until I uh
have this one working properly
have this one working properly
though maybe we'll make uh we'll like
though maybe we'll make uh we'll like
move this to a different branch or
move this to a different branch or
whatever something I don't
know that'll be
easiest okay this is more reasonable you
easiest okay this is more reasonable you
can see it's some tiny
can see it's some tiny
fraction of the environments that's
fraction of the environments that's
actually getting the uh the environment
solved yeah that's correct there we
go e
this ironment
reward for
all right do 100
Mil got anything for
us not
optimizing could just be
optimizing could just be
pams launch little sweep
right e
are boxes down what's going on
here do we have boxes down
oh this is still on this is the Moa
oh this is still on this is the Moa
here what's going on with my
here what's going on with my
box tail scale being
weird oops
oops I had a thing to reply to here as
oops I had a thing to reply to here as
well me fix this tail scale
first this should be
up yeah it was just tail scale being
up yeah it was just tail scale being
weird
what is wrong with the
network for
what the [ __ ] I can't
what the [ __ ] I can't
[Music]
[Music]
even oh did it
work why is it
detached the [ __ ] happened here
oh I'm
oh I'm
dumb just
tired I forgot
track yeah we're fine
and I'm sure that I just
forgot now there's something totally
forgot now there's something totally
wrong with this network what the hell is
wrong with this network what the hell is
this taking way too long for basic
stuff there we go 1.2 million steps per
stuff there we go 1.2 million steps per
second is that fast
enough that fast enough
eh e
yeah 1.1 mil 1.2
yeah 1.1 mil 1.2
mil yeah okay we didn't even optimize
mil yeah okay we didn't even optimize
the nets for this remotely
the nets for this remotely
either I think the upper end if I
either I think the upper end if I
optimize the Cuda stuff here we could
optimize the Cuda stuff here we could
probably hit 1.5 well I mean you can
probably hit 1.5 well I mean you can
look at the GPU utilization actually
look at the GPU utilization actually
according to that we should be able to
according to that we should be able to
probably hit 3 mil if we really
probably hit 3 mil if we really
optimized
it folks do star the
it folks do star the
puffer helps me out a
puffer helps me out a
lot here we go I'll put this in the chat
lot here we go I'll put this in the chat
all the code is here
all the code is here
star of the puffer helps me out a lot
star of the puffer helps me out a lot
it's uh where's our
it's uh where's our
chart it needs more stars it's at
10:36 he's
hungry so what we'll have here is this
hungry so what we'll have here is this
carb sweep
and hopefully this will give us
and hopefully this will give us
something reasonable within the next I
something reasonable within the next I
don't know several minutes we'll
see 601
I want to do tic tac toe real
quick just for the hell of
it why
it why
not I'm probably just finding
not I'm probably just finding
implementation right take tac
toe
e e
3x3 bases discret of
nine
nine
one num
mations is going to be zeros
mations is going to be zeros
by 3 by
three I need
this this
excuse
excuse
me just doing Tic Tac Toe real
me just doing Tic Tac Toe real
quick because it should be
easy the observations double as the
easy the observations double as the
state so that's kind of cool
I can see we already have the second run
there e
here's a crazy idea for multi-agent RL
brain
brain
what multiple
what multiple
actor all
let me see
the heck is
this
okay I'm confused what this gets you
okay I'm confused what this gets you
what is the like what what's the problem
what is the like what what's the problem
you're trying to solve
here like
here like
d DPG yeah ddpg but with two
inputs so you basically trying to train
inputs so you basically trying to train
a net to tell if one policy is better
a net to tell if one policy is better
than the other
up weits the good
up weits the good
responses and down weights
the what you get is a pairwise
the what you get is a pairwise
comparison rather than pointwise
is this standard in rhf this is the
is this standard in rhf this is the
first I've heard of this I don't do rhf
first I've heard of this I don't do rhf
so
crazy not that it
crazy not that it
was I'm conf when you say it gets you a
was I'm conf when you say it gets you a
parwiz comparison
parwiz comparison
signal
signal
like upweight good downweight bad is
like upweight good downweight bad is
just reward isn't
it I'm confused
let me I want to get this thing done
let me I want to get this thing done
real quick this is just a really dumb
real quick this is just a really dumb
little hack
little hack
project I just wanted to see if it's
project I just wanted to see if it's
like if it takes 10
minutes this probably doesn't take 10
minutes this probably doesn't take 10
minutes CU I'm kind of cooked for the
minutes CU I'm kind of cooked for the
time being
right also if I do it in Python it's
right also if I do it in Python it's
just going to be so freaking
just going to be so freaking
slow I could just do it in scyon and not
slow I could just do it in scyon and not
have to do bindings but
have to do bindings but
still I think I'll leave this for
now I would like to do it it would be
now I would like to do it it would be
funny well maybe I can is there like a
funny well maybe I can is there like a
really dumb simple
really dumb simple
I kind of just want a hash
table
to
table does has anybody just dumped
table does has anybody just dumped
the the hash
table now this is garbage code
why are there four parts of this dumb
why are there four parts of this dumb
project come
on no this can't be done in Python on me
on no this can't be done in Python on me
simply it's actually easier and it's
simply it's actually easier and it's
this is literally easier and
see because I can just interpret the
see because I can just interpret the
uh it doesn't fit in a bite as obnoxious
uh it doesn't fit in a bite as obnoxious
because it's nine cells not eight
yeah this would be cool to do today but
yeah this would be cool to do today but
I don't think I got I don't think I've
I don't think I got I don't think I've
got the gas left uh I do want to make
got the gas left uh I do want to make
sure that we're on a good track for the
sure that we're on a good track for the
other stuff though so let me see
here okay so this is going to run we'll
here okay so this is going to run we'll
see if this actually this solv something
see if this actually this solv something
would be
nice for
let see the parameters on this
still crazy value function stuff going
still crazy value function stuff going
on here
h
the value function in clip fra are
the value function in clip fra are
insane on this
be here
discouraging that none of these
discouraging that none of these
have decent curves on
them e
I guess in the
I guess in the
meantime the last thing I really want to
meantime the last thing I really want to
do today is I want to think about how I
do today is I want to think about how I
can make there just be less binding code
can make there just be less binding code
on all this
stuff I'm going to eat finish this
stuff I'm going to eat finish this
cookie and then I'm going to talk
cookie and then I'm going to talk
through my thoughts and then I'll call
through my thoughts and then I'll call
it a
day e
so the key issue at the
so the key issue at the
moment it's
moment it's
essentially the source of the problem is
essentially the source of the problem is
also The Source the way that we make
also The Source the way that we make
stuff so
fast when you make the environments from
fast when you make the environments from
python you pass
python you pass
in a bunch of memory
in a bunch of memory
buffers into the
environment you have to pass in a bunch
environment you have to pass in a bunch
of these memory buffers
and this blows up the type signature of
and this blows up the type signature of
all the
methods and then when you bind the
scon you need to redeclare
everything because the logs happen in
everything because the logs happen in
syon as well
h
python C barrier is just kind of
tough I mean the main thing is I need a
tough I mean the main thing is I need a
nice way to pull logging data out of
nice way to pull logging data out of
these environments
right e
I can't just keep pushing all the stuff
I can't just keep pushing all the stuff
into C because the problem is that I
into C because the problem is that I
need to be able to extract logs from
need to be able to extract logs from
Individual
Individual
environments and if I do the loop in C
environments and if I do the loop in C
that makes that portion harder
right I don't ever want to Loop over the
right I don't ever want to Loop over the
age of some
python the way I did it for this little
python the way I did it for this little
grid environment is actually not
grid environment is actually not
bad you put the
loops you put the loops into
loops you put the loops into
um into the
um into the
scyon and then since you have all the
scyon and then since you have all the
M's there
I don't like having this m star star
I don't like having this m star star
though I don't ever want to Loop over
though I don't ever want to Loop over
anything in Python
anything in Python
yeah I mean I think you've probably if
yeah I mean I think you've probably if
you've been saing me Dev you kind of see
you've been saing me Dev you kind of see
what I'm talking about right
like so look if I just open up like
like so look if I just open up like
um grid. py this isn't very bad this is
um grid. py this isn't very bad this is
100 lines of code and honestly most of
100 lines of code and honestly most of
this is just the API stuff we also we
this is just the API stuff we also we
don't even need these constants
don't even need these constants
anymore
anymore
like like these are redundant right so
like like these are redundant right so
really I can delete
really I can delete
these 80 lines of
code and most of this again like all
code and most of this again like all
this stuff in here is just API stuff so
this stuff in here is just API stuff so
it's going to be even shorter like this
it's going to be even shorter like this
it's basically going to be a nothing
it's basically going to be a nothing
file
right the only reason we even really
right the only reason we even really
have it is so
have it is so
um all these properties and such are
um all these properties and such are
exposed
exposed
technically it could just be a scyon
technically it could just be a scyon
thing right we could just have this be
thing right we could just have this be
scyon I don't think that makes sense
scyon I don't think that makes sense
though because like there's some
though because like there's some
gymnasium [ __ ] that has to go on
gymnasium [ __ ] that has to go on
here so I think you do need a little
here so I think you do need a little
rapper but then what happens
rapper but then what happens
right because of this
oops like this 13 lines of
oops like this 13 lines of
garbage basically doesn't even do
garbage basically doesn't even do
anything it's just this like giant
anything it's just this like giant
redundant
redundant
header we shouldn't have to have any of
header we shouldn't have to have any of
this here
right because you have to pass these
right because you have to pass these
observations actions rewards and stuff
and then it seems like this is the place
and then it seems like this is the place
that we'd have to
that we'd have to
do I like I don't want there to be any
do I like I don't want there to be any
logic in here if we have to have this as
logic in here if we have to have this as
a binding layer like it should be purely
a binding layer like it should be purely
a binding layer
but I don't want to have to have like a
but I don't want to have to have like a
multi- object or some [ __ ]
writing everything to have internal
writing everything to have internal
vectorization technically fixes it but
vectorization technically fixes it but
it also makes everything more obnoxious
it also makes everything more obnoxious
and
complicated e
and I think what solves this
problem it's also it's very obnoxious
problem it's also it's very obnoxious
that I have to
have I have to have a version that
have I have to have a version that
allocates it's memory and a version that
allocates it's memory and a version that
out that uh takes already allocated
out that uh takes already allocated
buffers that's pretty
obnoxious the damn type signatures are
obnoxious the damn type signatures are
so long right
I think at
I think at
least I think scyon supports yeah scon
least I think scyon supports yeah scon
supports default arguments at the very
supports default arguments at the very
least but that doesn't does that even
least but that doesn't does that even
help
me it really doesn't because the
me it really doesn't because the
defaults have to be in Python anyways
defaults have to be in Python anyways
right for
I'm not entirely sure with this I'm
I'm not entirely sure with this I'm
going have to do some
going have to do some
thinking I have to do some thinking I'm
thinking I have to do some thinking I'm
also I'm starting to really feel the
also I'm starting to really feel the
uh little bit of burnout on this
uh little bit of burnout on this
project you know the days keep getting
project you know the days keep getting
shorter and
shorter and
such
um I'm definitely going to have to take
um I'm definitely going to have to take
like a mental reset at some point soon
like a mental reset at some point soon
cuz I want to keep pushing on this I'd
cuz I want to keep pushing on this I'd
love to keep working on this all night
love to keep working on this all night
but my brain's just going to say
no
no
yeah I guess I can at least go through
yeah I guess I can at least go through
the plan then for the next few days
the plan then for the next few days
right um clean this up
right um clean this up
get this environment
learning make
learning make
like some reasonable number of specs or
like some reasonable number of specs or
something have a few different
something have a few different
versions maybe we just do a handful of
versions maybe we just do a handful of
them put those online on puffer
them put those online on puffer
G definitely been there take some time
G definitely been there take some time
yeah I don't know it's uh I like the
yeah I don't know it's uh I like the
project a lot right I like to work a lot
project a lot right I like to work a lot
it's
it's
just mentally kind of just
just mentally kind of just
burnt I the thing is it could be
burnt I the thing is it could be
multiple things as well right
multiple things as well right
um I I did like a really good two-month
um I I did like a really good two-month
block of work
block of work
uh but like I swap my exercise routine
uh but like I swap my exercise routine
after that and I'm going back to getting
after that and I'm going back to getting
heavier lifts in and I just know that
heavier lifts in and I just know that
whenever I do whenever I have to ramp
whenever I do whenever I have to ramp
back up to heavy lifts it like just I
back up to heavy lifts it like just I
where it burns my like burns my neurons
where it burns my like burns my neurons
for a few weeks or something until I get
for a few weeks or something until I get
used to it
again so I figured if I put it in the
again so I figured if I put it in the
evening maybe that would help but it
evening maybe that would help but it
hasn't I don't know I to optimize a
hasn't I don't know I to optimize a
couple
couple
things still though I like I can see
things still though I like I can see
where all this is going and it's going
where all this is going and it's going
in the right direction it's just taking
in the right direction it's just taking
a little bit longer than I would like is
a little bit longer than I would like is
all
I mean the
I mean the
Moa the Moa basically all we need to do
Moa the Moa basically all we need to do
is improve the visuals and like do a
is improve the visuals and like do a
little bit of work on getting good
little bit of work on getting good
trained
trained
policies it should be pretty set from
policies it should be pretty set from
there the side project that is
there the side project that is
unannounced is in a good spot it's just
unannounced is in a good spot it's just
going to take like I got to write some
going to take like I got to write some
shaders do some perf optimization and uh
shaders do some perf optimization and uh
port a couple of the missing features
port a couple of the missing features
it's hard but like I know how to do it I
it's hard but like I know how to do it I
just need to be fresh for that and then
just need to be fresh for that and then
uh this thing here this was just me
uh this thing here this was just me
wanting to Port the grid environment and
wanting to Port the grid environment and
like upgrade it at the same
like upgrade it at the same
time I probably got a like little
time I probably got a like little
carried away with
carried away with
it but
it but
um I mean it'll be nice if if it can be
um I mean it'll be nice if if it can be
used for
this yeah
I think from here we'll uh I'll step
I think from here we'll uh I'll step
back on the custom stuff just a little
back on the custom stuff just a little
bit since it's taking so long per
bit since it's taking so long per
environment I'll probably see if I can
environment I'll probably see if I can
get a couple bindings working for some
get a couple bindings working for some
existing
existing
Ms they're just not fast enough is the
Ms they're just not fast enough is the
one thing that's OB
obnoxious I mean I could go for like
obnoxious I mean I could go for like
Doom I've been wanting to do that one
Doom I've been wanting to do that one
for a while that's 100K
for a while that's 100K
FPS I think it's 100k FPS without frame
FPS I think it's 100k FPS without frame
skip that might be
rough the one thing that's a little bit
rough the one thing that's a little bit
annoying to me about
annoying to me about
um the more complex environments I've
um the more complex environments I've
been working on the Moa and this is true
been working on the Moa and this is true
the other one as well it's kind of hard
the other one as well it's kind of hard
to treat them as just like a standalone
to treat them as just like a standalone
Benchmark because they're competitive
Benchmark because they're competitive
games you need ELO and we have ELO but
games you need ELO and we have ELO but
ELO is you know it's a trickier to
ELO is you know it's a trickier to
evaluate metric than just like score or
whatever I really like the multi-agent
whatever I really like the multi-agent
environments but um the only ones that
environments but um the only ones that
are easy to evaluate are the ones that
are easy to evaluate are the ones that
are purely
Cooperative the adversarial ones are
Cooperative the adversarial ones are
much harder
so there's definitely like an EV like
so there's definitely like an EV like
and we have the evaluation solution we
and we have the evaluation solution we
have ELO but it's still kind of
have ELO but it's still kind of
unsatisfying because you always have to
unsatisfying because you always have to
evaluate ELO and it's always going to be
evaluate ELO and it's always going to be
non-trivial there's never going to be a
non-trivial there's never going to be a
non-trivial way I mean there's never
non-trivial way I mean there's never
going to be a fully trivial way to
going to be a fully trivial way to
evaluate ELO it just always involves
evaluate ELO it just always involves
loading up multiple neural networks and
loading up multiple neural networks and
such and running them against each other
so I mean like really the key thing with
so I mean like really the key thing with
puffer requires that I keep building out
puffer requires that I keep building out
this Suite of more complex and
this Suite of more complex and
interesting environments and we have
interesting environments and we have
them but they need to be easy to
them but they need to be easy to
evaluate you ever need for betting
evaluate you ever need for betting
Raiders better rating systems I may be a
Raiders better rating systems I may be a
to contribute well I mean hear me out
to contribute well I mean hear me out
here right like the issue isn't so much
here right like the issue isn't so much
the rating systems themselves as much as
the rating systems themselves as much as
like fundamentally
like fundamentally
right if you're training in an
right if you're training in an
environment that is in any way
environment that is in any way
adversarial then part of the difficulty
adversarial then part of the difficulty
of the environment is going to be how
of the environment is going to be how
good your opponents are which means that
good your opponents are which means that
your skill or your reward is relative
your skill or your reward is relative
and as soon as that happens that means
and as soon as that happens that means
that you can no longer just like run
that you can no longer just like run
your policy on the environment to
your policy on the environment to
evaluate and be done right you have to
evaluate and be done right you have to
load up multiple different policies
load up multiple different policies
maybe even just a baseline policy and
maybe even just a baseline policy and
you have to get like win rate versus
you have to get like win rate versus
Baseline it just makes the process
Baseline it just makes the process
harder
right it's more of a logistical
right it's more of a logistical
challenge than anything like we have it
challenge than anything like we have it
with the Moa it
with the Moa it
works but uh it's still like it's adding
works but uh it's still like it's adding
an extra step to what is already a
an extra step to what is already a
complicated area of
research I mean I guess
research I mean I guess
technically like technically if I made
technically like technically if I made
um like fast
enough if I made like some fast little C
enough if I made like some fast little C
policies or
policies or
something we could embed the network as
something we could embed the network as
part of the environment so you could
part of the environment so you could
have like easy medium and hard bot
have like easy medium and hard bot
opponents or something like that that
opponents or something like that that
are just built
in I've seen that done
in I've seen that done
before that's hard but it's doable
maybe that's the way
I could definitely see
that I wonder how fast you can run the
that I wonder how fast you can run the
thing is the network forward passes are
thing is the network forward passes are
going to cut down a lot on the they're
going to cut down a lot on the they're
going to really be expensive on the
compute which leads back to the original
compute which leads back to the original
problem of this environment's having to
problem of this environment's having to
be fast
enough at the same time it's like you
enough at the same time it's like you
really need
really need
that you need the environments to be
that you need the environments to be
able to be multi-agent at the same time
able to be multi-agent at the same time
it's like fun fundamentally an important
it's like fun fundamentally an important
learning
Dynamic you can't just make everything
Dynamic you can't just make everything
single agent and hope it and hope for
single agent and hope it and hope for
the
best it could just be a case of um you
best it could just be a case of um you
know we make
know we make
the we just make the evals as nice as we
the we just make the evals as nice as we
can possibly make them right we make
can possibly make them right we make
like the ELO evaluation code as nice as
like the ELO evaluation code as nice as
we can possibly make them we have some
we can possibly make them we have some
set of baselines that you can evaluate
set of baselines that you can evaluate
against and uh you know it is what it is
against and uh you know it is what it is
it adds extra step but we make it as
it adds extra step but we make it as
minimal as possible that's probably the
minimal as possible that's probably the
simplest way to do
simplest way to do
it so like let's say that we release you
it so like let's say that we release you
know the the Capstone or so for this
know the the Capstone or so for this
project is we
project is we
release we release the agents we release
release we release the agents we release
the
the
environment we make it nice and easy to
environment we make it nice and easy to
evaluate against them
evaluate against them
and you just give you you just like give
and you just give you you just like give
a pie torch
a pie torch
model
right could
work yeah
it's not that bad
with the board games they used MCTS
with the board games they used MCTS
agents for a lot of
agents for a lot of
them I think that's what they
them I think that's what they
did as the opponents I
did as the opponents I
mean which I've seen before it works but
mean which I've seen before it works but
it slows the environment down massively
all right well I mean that's enough
all right well I mean that's enough
musing I'm going to check the
musing I'm going to check the
experiments and call it because I really
experiments and call it because I really
I should just go get some exercise get
I should just go get some exercise get
some food and go to
some food and go to
bed trying to get to bed earlier so I
bed trying to get to bed earlier so I
can get up
can get up
earlier be back on this
stuff
oh oh this might be something
oh oh this might be something
looks like this one is start was
looks like this one is start was
starting to go
up we'll
up we'll
see we will see for sure I will leave
see we will see for sure I will leave
this one going overnight this one is
this one going overnight this one is
still running as
still running as
well this uh this carb sweep is still
well this uh this carb sweep is still
running
and where's this
and where's this
sweep I hope it's still running right
sweep I hope it's still running right
yeah
we'll see if this does any
we'll see if this does any
better some of these metrics they look
better some of these metrics they look
pretty good
already all right then I'm Ni Call today
already all right then I'm Ni Call today
night everyone
