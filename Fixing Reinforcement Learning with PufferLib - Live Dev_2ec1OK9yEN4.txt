Kind: captions
Language: en
okay we
okay we
are
back should be set for a
bit got some questions
answered um
now this is going to
be well we'll deal with committing this
be well we'll deal with committing this
code later because it's a little awkward
code later because it's a little awkward
because it's a fork of my own
because it's a fork of my own
repo um but whatever so we'll
[Music]
[Music]
do you know
do you know
what I can probably save myself a lot of
what I can probably save myself a lot of
heada
heada
if I uh just go figure out their repo
if I uh just go figure out their repo
structure real quick
all right so they've got
all right so they've got
this is this a
fork so this is a
fork so this is a
fork can I fork their
fork can I fork their
Fork no I can't all right so that's
Fork no I can't all right so that's
going to be kind of awkward because
going to be kind of awkward because
they've kind of vendored a thing but
they've kind of vendored a thing but
they it's still a fork so
they it's still a fork so
um they'll have to give me perms or
um they'll have to give me perms or
whatever
Val
okay so this should now
okay so this should now
be play well
be play well
actually do this
actually do this
first we have this line and then this is
first we have this line and then this is
play and then it's I would have not
play and then it's I would have not
figured this out
figured this out
evaluator policy.
evaluator policy.
URI
equals train der slash run name so
wanty
no H
frame trer
this do
it
[Music]
maybe what's wrong with w
my
gosh let me make sure I didn't mess this
up I a comment anything no I didn't do
up I a comment anything no I didn't do
anything
here
for
e for
okay so what we're going to do to get
okay so what we're going to do to get
this implemented
um this is a curriculum
um this is a curriculum
algorithm we're going to get working in
algorithm we're going to get working in
this other repo
yeah here we go now we get the
diff so I pretty much should just need
diff so I pretty much should just need
to figure
to figure
out which of these
portions need to get added in
OB
shape right so I add
this so I pretty much I think I can just
this so I pretty much I think I can just
Port this uh
Port this uh
directly B
directly B
size ke mini
size ke mini
B then this is hidden
size and here an experience
size and here an experience
hidden
hidden
size then I just need this thing here
size then I just need this thing here
under
values B
inverse and then actually there's very
inverse and then actually there's very
little else to change in clean puff
little else to change in clean puff
RL which they've renamed trainer I
RL which they've renamed trainer I
suppose BPT mini
suppose BPT mini
bat
bat
policy o
this should
this should
be now I got to figure out what they did
be now I got to figure out what they did
here
here
so
so
see okay they do have
policy self. policy.
policy self. policy.
hidden size like
hidden size like
this and then we'll just leave that as
this and then we'll just leave that as
is
then they should
then they should
have this
is right
is right
here you put this e3b buffer
here you put this e3b buffer
in you put this in eal
in you put this in eal
forward right here you get the e3b
buffer um
this is very
this is very
similar just go like
similar just go like
this we'll have to modify the policy API
this we'll have to modify the policy API
which unfortunately theirs a little bit
which unfortunately theirs a little bit
more fancy than mine
more fancy than mine
is we have to deal with
that um but then in trainer. forward we
that um but then in trainer. forward we
should be pretty well
should be pretty well
set yeah they have right here
set yeah they have right here
and then all we have to do is we add two
and then all we have to do is we add two
new things here that do not matter for
new things here that do not matter for
training from the
policy and then experience we already
policy and then experience we already
handled so that's it for the the whole
handled so that's it for the the whole
trainer file uh we don't care about
trainer file uh we don't care about
these
these
configs but we do have to deal with the
configs but we do have to deal with the
policy API and I hate this type of thing
policy API and I hate this type of thing
where you have to add stuff and add
where you have to add stuff and add
stuff to the policy
stuff to the policy
API hey how's it going we're adding um
API hey how's it going we're adding um
e3b exploration algorithm into a a
e3b exploration algorithm into a a
different repo for some
folks uh let me see here
so what do they do for their
policy they have a policy
policy they have a policy
store they
store they
have they have extra stuff though
quite a bit of extra
quite a bit of extra
stuff I think the easiest way to figure
stuff I think the easiest way to figure
this out is just literally going to be
this out is just literally going to be
um
um
Dynamic so we just do put a break
Dynamic so we just do put a break
[Music]
point right
point right
here test yeah I see it welcome
works on both
works on both
platforms Sometimes some of them have
platforms Sometimes some of them have
more lag than others but it should work
more lag than others but it should work
on both
platforms uh and I was just given
platforms uh and I was just given
a extra command to
a extra command to
try try that in a second
watching on X and chatting on
watching on X and chatting on
Twitch that's funny
[Music]
okay so this is cool this actually
okay so this is cool this actually
runs and you can click on
runs and you can click on
[Music]
[Music]
stuff looks like the uh the font's a
stuff looks like the uh the font's a
little
little
screwy but yeah you can
see they're doing some
stuff
oops for
h
I run
train are you're not supposed to give it
train are you're not supposed to give it
a URI for train
user
warning oh
right just pushed me a fix for that
well I have to think my Force Fork
all right
and then this one is going to just be
and then this one is going to just be
Doc
Doc
configs and then this is just config for
configs and then this is just config for
now and then we should be able to do
now and then we should be able to do
train
all right
all right
policy
cool policy store
policy
door
policy trainer.
initial how about this dot
create V
create V
n
n okay you have to go down a little bit
n okay you have to go down a little bit
here until you get the
VM and there we go so we
have only one extra layer m some extra
have only one extra layer m some extra
rappers it looks like we've got
rappers it looks like we've got
recurrent
recurrent
policy of recurrent of puffer agent
policy of recurrent of puffer agent
rapper lots of
rapper lots of
rappers um
so you have to add e3b to all of this
so you have to add e3b to all of this
unfortunately the uh the issue
unfortunately the uh the issue
here unless they pass a config all the
here unless they pass a config all the
way
way
down but I think even then you still
down but I think even then you still
have to do it
okay give me something else
n hang
on yeah
getting um prototype curriculum
getting um prototype curriculum
algorithm ported to a fork of puffer lib
algorithm ported to a fork of puffer lib
that's mostly puffer lib has a few
that's mostly puffer lib has a few
things okay so this works
let me just train
yeah know this is a a crazy crazy
week like legit 80 hour
week like legit 80 hour
week if you include the weekend
uh this is my fault so this is
okay so we're getting tweaks in from uh
okay so we're getting tweaks in from uh
from them in the meantime I should do
puffer agent rapper what did we say this
puffer agent rapper what did we say this
was guess it's too far up now I think it
was guess it's too far up now I think it
was
recurrent um puffer agent rapper
so I think I actually have to go
so I think I actually have to go
into well hold on this is supposed to be
into well hold on this is supposed to be
puffa but this doesn't have any of our
puffa but this doesn't have any of our
stuff in
stuff in
it so where are they
getting is
getting is
this now this this is just
one okay wait this is the
one okay wait this is the
recurrent puffer cleen
RL oh they have um I guess they have
RL oh they have um I guess they have
puffer
puffer
lib
lib
installed hang
on have
so they clone puffer
so they clone puffer
lib and they build
lib and they build
it and it's their
Branch oh okay so they've got puffer lib
Branch oh okay so they've got puffer lib
like their fork and then they have some
like their fork and then they have some
additional puffer Li
additional puffer Li
utils and and probably their Fork is
utils and and probably their Fork is
going to be way more
going to be way more
similar to
mine I wonder what they use from uh from
mine I wonder what they use from uh from
puffer Li actually if I just CD into
metag puffer m
well we don't have to do all this today
well we don't have to do all this today
I can kind of just give them a
I can kind of just give them a
quick Port of
quick Port of
this cuz literally it's just the clean
this cuz literally it's just the clean
RL files I believe
hold on
what oh no no no hold up
what oh no no no hold up
meta and
meta and
then
def so they run it from here they clone
def so they run it from here they clone
it CD they stash like that
it CD they stash like that
and then they go hold on but then
they okay there is a new
they okay there is a new
config they've been pushing more
commits thought that's normal is not not
commits thought that's normal is not not
exactly I don't mind doing it just as
exactly I don't mind doing it just as
long as I'm not doing it for like
long as I'm not doing it for like
sustained very many weeks and you know
sustained very many weeks and you know
not getting exercise or sleep or
not getting exercise or sleep or
whatever it's kind of fun to work hard
whatever it's kind of fun to work hard
in uh in bursts
all right
so okay so they got this
factors
cool
steps where's their train command
go this may or may not work with this
go this may or may not work with this
policy
and then we have to add this
I should be able to do do train on this
I should be able to do do train on this
oops
okay
oh shoot
agent this is
may be fine
I a math student starting to learn RL
I a math student starting to learn RL
what sources do you
what sources do you
recommend reading intro yeah so that
recommend reading intro yeah so that
will give you the math heavy version of
will give you the math heavy version of
it um the thing is there's really not
it um the thing is there's really not
that much crazy math in the RL
that much crazy math in the RL
algorithms that like widely work um I
algorithms that like widely work um I
think the hard part for you is going to
think the hard part for you is going to
be more the engineering side I have a
be more the engineering side I have a
quick start off on that that does
quick start off on that that does
include some papers as well uh but yeah
include some papers as well uh but yeah
the tricky thing in RL it's a very
the tricky thing in RL it's a very
engineering heavy area of AI so like we
engineering heavy area of AI so like we
do ultra high performance stuff these
do ultra high performance stuff these
M's are like a thousand times faster
M's are like a thousand times faster
than the majority of what you're going
than the majority of what you're going
to find out there in Academia and most
to find out there in Academia and most
of industry and it's just because we
of industry and it's just because we
built them to be
built them to be
fast um if you check here I'll link this
fast um if you check here I'll link this
to you
this is my quick start guide for how I
this is my quick start guide for how I
recommend people get into
RL it's written more with uh well
RL it's written more with uh well
there's some there's some like more
there's some there's some like more
mathy papers in there but it's it's
mathy papers in there but it's it's
pretty
practical for
yep you also I mean we have a Discord
yep you also I mean we have a Discord
for people uh who want to get involved
for people uh who want to get involved
with this stuff
with this stuff
um there is like there is to be fair
um there is like there is to be fair
there is some stuff on the math side
there is some stuff on the math side
that we have uh for people who are
that we have uh for people who are
interested in my math my own math is
interested in my math my own math is
pretty weak so if you want to take a
pretty weak so if you want to take a
look at some of the stuff I'm doing on
look at some of the stuff I'm doing on
that side You' be more than happy uh
that side You' be more than happy uh
I'll link you one cool thing that I'm
I'll link you one cool thing that I'm
working on at the moment
working on at the moment
that's more math heavy the thing is
that's more math heavy the thing is
there's really not too too much of this
there's really not too too much of this
work at the moment in RL it's a lot a
work at the moment in RL it's a lot a
lot of engineering but every so often
lot of engineering but every so often
something crops up where uh it is
something crops up where uh it is
actually very
actually very
useful so I have at the moment an
useful so I have at the moment an
updated version of this algorithm in
updated version of this algorithm in
puffer lib uh I've changed some of the
puffer lib uh I've changed some of the
way that they're modeling stuff with
way that they're modeling stuff with
this this is a hyper pram sweep
this this is a hyper pram sweep
algorithm but the thing that I'm trying
algorithm but the thing that I'm trying
to figure out is how to formally model
to figure out is how to formally model
the following process uh mathematically
the following process uh mathematically
so what you want really when you're
so what you want really when you're
running experiments right you want to
running experiments right you want to
uncover the Paro front so you want to
uncover the Paro front so you want to
get a dense set of points along the
get a dense set of points along the
curve of uh increasing cost so you run
curve of uh increasing cost so you run
the experiment for longer and than the
the experiment for longer and than the
score that you can get and ideally you
score that you can get and ideally you
know the longer you run the experiment
know the longer you run the experiment
the more score you should get and you
the more score you should get and you
want a nice dense set of points along
want a nice dense set of points along
that
that
curve uh that really tell you how you
curve uh that really tell you how you
can do for any level of investment
can do for any level of investment
you're willing to put what I want to do
you're willing to put what I want to do
is formulate this process um as an
is formulate this process um as an
overarching optimization process in
overarching optimization process in
which you have a total budget of time
which you have a total budget of time
you're spending on running experiments
you're spending on running experiments
and what you want to do is you want to
and what you want to do is you want to
run experiments such that you uncover
run experiments such that you uncover
that curve while minimizing the total
that curve while minimizing the total
time of all the experiments that you're
time of all the experiments that you're
running so I'm still trying to figure
running so I'm still trying to figure
out how to do that portion but that's
out how to do that portion but that's
like one example of something on the
like one example of something on the
more math heavy side
all right so they should have puffer lib
all right so they should have puffer lib
in here but I don't see it which is
weird what's their Fork look
like no they've got a full puffer lib
it clone
they move anything
around I don't see puffer
Leb oh there it is
all right so now we get to go look at
all right so now we get to go look at
this and I just have to add I just have
this and I just have to add I just have
to change these signatures
to change these signatures
here yeah so this is just straight up uh
here yeah so this is just straight up uh
they yeah they haven't even changed this
they yeah they haven't even changed this
this is just this goes
this is just this goes
here
here
uhoh
wait no it's right here we're good
and then
and then
return an
return an
intrinsic E3 is
intrinsic E3 is
[Music]
[Music]
none
none
e3b then we do the same on the
e3b then we do the same on the
recurrent we
recurrent we
do hi size
and what the heck oh this
justy okay so that is the clean RL
justy okay so that is the clean RL
[Music]
change we'll need this in
change we'll need this in
models as well if they I don't actually
models as well if they I don't actually
know if they use any of our default
know if they use any of our default
models we have to go check on that
Huffer agent ramp so I think that they
Huffer agent ramp so I think that they
have their
own and
agent yeah so they've got their own
agent yeah so they've got their own
agent I
agent I
think and
think and
uh let's do
uh let's do
GP
GP
include.
I
oops and they just use a couple things
oops and they just use a couple things
they don't use
um they don't seem to use our default
um they don't seem to use our default
policies so I don't have to modify those
policies so I don't have to modify those
at all which is
at all which is
fine
fine
simple meta
simple meta
agent
agent
encoder
decoder so can I put
this the only let's see you only really
this the only let's see you only really
need
code
observations you need I need to add this
observations you need I need to add this
to the
uh oh they use tensor
uh oh they use tensor
decks so I basically I can just add this
decks so I basically I can just add this
to
to
their tensor dick
I I might be able to just do this
I I might be able to just do this
here no because this is actually pretty
here no because this is actually pretty
far deep into the rapper so I think that
far deep into the rapper so I think that
the clean RL interface
gets how the heck does this thing even
gets how the heck does this thing even
work I guess it's their
work I guess it's their
wrapper let me
see uh puffer agent wrapper
see uh puffer agent wrapper
upper agent rapper is here
did my camera freeze let me fix
that they make a tensor dick somewhere
that they make a tensor dick somewhere
ah they
ah they
do that's kind of
funny so this thing needs to get e3bd I
funny so this thing needs to get e3bd I
think
yeah so it just goes into e3b and then
yeah so it just goes into e3b and then
into decode
none and then this goes into
none and then this goes into
decode
decode
um E3 and we'll just put e3b is
um E3 and we'll just put e3b is
e3b and then this is going to
e3b and then this is going to
[Music]
return return whatever decode returns
return return whatever decode returns
and then decode
I could put it
here do I even need to go this deep with
it wait this is yeah no no cuz it's
it wait this is yeah no no cuz it's
agent and then meta so I
think I think I put it
here value e3b and and then
intrinsic reward like this okay and then
intrinsic reward like this okay and then
what we
do yeah this goes in
do yeah this goes in
decode so we can just take
decode so we can just take
this here
this here
actually and do this
and
actually I'll put this up
actually I'll put this up
here value action and then this is flat
here value action and then this is flat
hidden.
detach
detach
transic there you
go B yeah so this should be fine
go B yeah so this should be fine
and I don't think we even need to go any
and I don't think we even need to go any
deeper so we don't even need to mess
deeper so we don't even need to mess
with their
with their
apis we just need to mess with
apis we just need to mess with
RS let's see if this
RS let's see if this
works probably have to fix some
stuff and what I would like to do
stuff and what I would like to do
actually
is put this in my other window so I stop
is put this in my other window so I stop
having to to tab so much
can you give me a short rundown of Pros
can you give me a short rundown of Pros
cons well you never run stuff on Native
cons well you never run stuff on Native
Windows that's just being stupid uh you
Windows that's just being stupid uh you
can run it on WSL which is supposed to
can run it on WSL which is supposed to
have close to Native
have close to Native
performance and will give you a mostly
performance and will give you a mostly
native Linux environment uh except that
native Linux environment uh except that
then when I went to run my perf tests on
then when I went to run my perf tests on
that a while ago it was like down by
that a while ago it was like down by
25% somehow I don't even know how they
25% somehow I don't even know how they
managed to do that so that pissed me off
managed to do that so that pissed me off
enough that I just deleted windows and
enough that I just deleted windows and
uh I'm running everything on a to which
uh I'm running everything on a to which
has the side effect of having me play
has the side effect of having me play
fewer games because it is harder to get
fewer games because it is harder to get
to most of
them so that is the that is uh how that
works why never you're trolling if you
works why never you're trolling if you
do any Dev on Windows I mean if you do
do any Dev on Windows I mean if you do
any Dev on Windows outside of the
any Dev on Windows outside of the
ecosystems that are clearly designed for
ecosystems that are clearly designed for
Windows like you know you're doing Unity
Windows like you know you're doing Unity
Dev or something you're just
trolling it's just it's not this is just
trolling it's just it's not this is just
not the operating system for Dev
man nobody bothers testing their
man nobody bothers testing their
packages against Windows half of [ __ ]
packages against Windows half of [ __ ]
doesn't even work like you're just
doesn't even work like you're just
rolling you're just wasting your time
rolling you're just wasting your time
you're going to just waste your time on
you're going to just waste your time on
setup and dumb
stuff look the setup that we have at the
stuff look the setup that we have at the
moment is really really solid especially
moment is really really solid especially
with as bad as the python like uh python
with as bad as the python like uh python
tooling is you Dev on either WSL or
tooling is you Dev on either WSL or
native Linux in a container the
native Linux in a container the
container has everything set up
container has everything set up
perfectly so you have an exact replica
perfectly so you have an exact replica
of the uh the dev setup in anywhere
of the uh the dev setup in anywhere
you're going to Dev it's always going to
you're going to Dev it's always going to
be the same if anything goes wrong you
be the same if anything goes wrong you
can nuke the container and spin a new
can nuke the container and spin a new
one up from the exact you know starting
one up from the exact you know starting
point in 5 seconds it's very very nice
dude yeah
dude yeah
I get like do some lenux man
I get like do some lenux man
it's this this is like in terms of like
it's this this is like in terms of like
like colossal like fuckups and like
like colossal like fuckups and like
colossal fuckups um this would be more
colossal fuckups um this would be more
on the Colossal fuckups side of things
just like the amount of dumb [ __ ] that
just like the amount of dumb [ __ ] that
you're going to waste your time dealing
you're going to waste your time dealing
with like using something that is not
with like using something that is not
like not a Dev platform yeah it's no
like not a Dev platform yeah it's no
bueno now look if you already have W
bueno now look if you already have W
Windows and you use that just as your
Windows and you use that just as your
standard just get WSL and you'll be fine
standard just get WSL and you'll be fine
it'll be good enough it'll give you a
it'll be good enough it'll give you a
native Dev
native Dev
environment um Sometimes some of it will
environment um Sometimes some of it will
drop perf but it'll be vast vastly
drop perf but it'll be vast vastly
better than anything else other than
better than anything else other than
like just a native Linux
setup can't have things
break okay well things break things are
break okay well things break things are
going to break constantly in
going to break constantly in
Windows yeah don't don't mess around
Windows yeah don't don't mess around
with dual booting your machine or
with dual booting your machine or
anything then just like WSL it's just
anything then just like WSL it's just
it's probably even pre-installed or you
it's probably even pre-installed or you
just WSL D- install or something like
just WSL D- install or something like
that um it comes like it's just there
that um it comes like it's just there
with Windows it's Microsoft's like layer
with Windows it's Microsoft's like layer
for Windows uh for Linux compat
well you'll have to fix
that I mean you like you're like no
that I mean you like you're like no
serious Dev work is done like outside of
serious Dev work is done like outside of
like things like Unity or whatever where
like things like Unity or whatever where
it is literally intended to be done Dev
it is literally intended to be done Dev
on Windows because the target is Windows
on Windows because the target is Windows
cuz it's games or stuff like that like
cuz it's games or stuff like that like
just no serious Dev is done on Windows
just no serious Dev is done on Windows
period
current
current
policy okay so I missed one here
what's
what's
up currently we are reporting a
up currently we are reporting a
curriculum learning algorithm to run on
curriculum learning algorithm to run on
a different environment that is part of
a different environment that is part of
a uh somebody's puffer Li
a uh somebody's puffer Li
Fork quick little
Fork quick little
port and then I think what we're going
port and then I think what we're going
to probably do if I finish this in not a
to probably do if I finish this in not a
horrible amount of time is uh we're
horrible amount of time is uh we're
going to try to Port this maze
going to try to Port this maze
environment so we have like a native
environment so we have like a native
puffer maze environment because I've
puffer maze environment because I've
wanted one for a while and uh I do not
wanted one for a while and uh I do not
trust the experiments in this repository
trust the experiments in this repository
to give us clear feedback on stuff
let me um one
second
e e
all right decisions that concern me
all right decisions that concern me
being made without my input that I
being made without my input that I
overheard so we are I'm just handling
overheard so we are I'm just handling
that um
see oh yeah yeah there's the
lstm in puffer Li
models puffer
model
oops where's my uh lstm rapper there it
oops where's my uh lstm rapper there it
is I just missed one so this is just
is I just missed one so this is just
[Music]
[Music]
three
three
[Music]
[Music]
none
and word and this is going to just be
and word and this is going to just be
decode gives you e3b let's codeb
all right
all right
so
now I don't have
that never give you dude I you got to
that never give you dude I you got to
have like some sort of conversation
have like some sort of conversation
there that WSL is literally like
there that WSL is literally like
just I that's just like Linux act I
just I that's just like Linux act I
don't know what to tell
don't know what to tell
you I mean that's bizarre
I mean it's bizarre to have pareno walks
I mean it's bizarre to have pareno walks
on a 16-year-old in the first place but
on a 16-year-old in the first place but
uh I mean that's a conversation for you
uh I mean that's a conversation for you
and your family not for
me
for e
evaluator oh hold
on how is this
on how is this
thing I guess they run this in between
ah yeah think you just have to add two
ah yeah think you just have to add two
extras to this
it opponent
policies okay so luckily I don't think
policies okay so luckily I don't think
we
we
need we don't need any of these things
need we don't need any of these things
at EV all
time only thing we need to do is uh
time only thing we need to do is uh
integrate the intrinsic reward
okay that looks to be
running and uh all we have to do
is where is
is where is
it
TR underscore about yes so right here
TR underscore about yes so right here
this is where stuff gets changed for
this is where stuff gets changed for
e3b then we do
oops oh come
on so the only other thing we got to do
on so the only other thing we got to do
here
right
right
here that's
here that's
it this is it right here this goes right
underneath uh right above synchronize
underneath uh right above synchronize
actually that was close let mess that up
and e3b in and
and e3b in and
R okay
R okay
so I'll add them a flag obviously to use
so I'll add them a flag obviously to use
this but
this but
uh here's what we will
uh here's what we will
do we
do we
will let's just add that flag
quarks um config
E3
E3
B
false use
e3b all right and then we'll do for e3b
if else
if else
none and then we'll just do
we go we'll try
this and uh I
will make sure that this is getting
will make sure that this is getting
registered
we got to syn the fork as
well
false and then let's see if this
false and then let's see if this
[Music]
runs should run
I is
I is
running so I got
running so I got
a oh come on
how does it uh where's the oh I guess
how does it uh where's the oh I guess
it's this break point screwing it
it's this break point screwing it
up
up
okay so what we'll do is we'll do
okay so what we'll do is we'll do
this uh we should pull a config fix
this uh we should pull a config fix
first
first
though we should pull our config fix
all right so now it's tools
all right so now it's tools
train and then this is going to
train and then this is going to
be we'll do this will
be we'll do this will
be maze based line
and then a
and then a
hardware H
box and we will see in a moment moment
[Music]
[Music]
H that's so
funny we get anything
here oh wait error in call
here oh wait error in call
agent rapper has no
attribute that's weird that it just spun
attribute that's weird that it just spun
and didn't
and didn't
exit no attribute hidden
exit no attribute hidden
size yeah okay so we need to fix this
size yeah okay so we need to fix this
one break point I forgot about
this more
DMS good com up and working oh that's
DMS good com up and working oh that's
funny that's what kills my
camera it's not drivers it's the
camera it's not drivers it's the
freaking Cuda memory it looks like it's
freaking Cuda memory it looks like it's
like he we don't have memory for this
like he we don't have memory for this
anymore CU you're running all these
anymore CU you're running all these
neural Nets
error in
call why would I not want the full stack
call why would I not want the full stack
pra ever Hydra why is this such a shitty
pra ever Hydra why is this such a shitty
config Library it's like oh no I don't
config Library it's like oh no I don't
need the error message why would why
need the error message why would why
would I need an error message to debug
would I need an error message to debug
my code ah nobody uses
those all right no attribute
instantiate
trainer no attribute hidden
trainer no attribute hidden
size
what so there's a bunch of hydro
what so there's a bunch of hydro
garbage instantiate
trainer this isn't code [ __ ] off this is
trainer this isn't code [ __ ] off this is
not
code agent rapper has no attribute
code agent rapper has no attribute
hidden
size I think that I fixed this one
size I think that I fixed this one
now I think I added this to the
now I think I added this to the
recurrent
recurrent
rapper and then I think it's RL Puffer
where do I use hidden
size no attribute hidden
size actor hidden sizes
who but I don't know where I even use
this I mean look at this error message
this I mean look at this error message
and tell
and tell
me hold on is it
me hold on is it
here clean
RL okay maybe okay it's up here but I
RL okay maybe okay it's up here but I
don't know why there were two blocks of
don't know why there were two blocks of
these if I understand quickly back prop
these if I understand quickly back prop
leaps so for some time
leaps so for some time
steps so I should I set it to one if
steps so I should I set it to one if
every time step contains
every time step contains
information for the
information for the
hidden so yeah if you don't actually
hidden so yeah if you don't actually
need
need
recurrence um you can either not use the
recurrence um you can either not use the
lstm or you can use the lstm as
lstm or you can use the lstm as
basically a glorified couple of like
basically a glorified couple of like
linear layers and set that to one um
linear layers and set that to one um
usually the correct thing to do is to
usually the correct thing to do is to
sweep it um cuz sometimes that time
sweep it um cuz sometimes that time
information can be useful even if you
information can be useful even if you
don't require it um
don't require it um
yeah I mean it's a nice alternative to
yeah I mean it's a nice alternative to
frame stacking is the thing it's usually
faster like by the time you're frame
faster like by the time you're frame
stacking to
stacking to
before or whatever it's an lstm can be
before or whatever it's an lstm can be
faster if it's implemented well which
faster if it's implemented well which
ours is
changes in the code so when you
changes in the code so when you
train um you have like a mini batch size
train um you have like a mini batch size
right and uh we reshape the mini batch
right and uh we reshape the mini batch
into segments so let's say that you've
into segments so let's say that you've
gotten 128 time steps of data from the
gotten 128 time steps of data from the
INF first environment if you set BPT
INF first environment if you set BPT
Horizon to 16 it will break it up into
Horizon to 16 it will break it up into
uh eight length 16 segments and then it
uh eight length 16 segments and then it
will Ford pass through those 16 time
will Ford pass through those 16 time
steps All In Parallel across those eight
steps All In Parallel across those eight
and then it will backrop through 16 time
and then it will backrop through 16 time
steps so it's basically it's learning
steps so it's basically it's learning
over uh like a context if you will of 16
over uh like a context if you will of 16
time
time
steps the reshape is inside of uh the
steps the reshape is inside of uh the
train function
let's see if this works
let's see if this works
I TR tried to
I TR tried to
recalculate it seems like it's doing
recalculate it seems like it's doing
leaps on the same
leaps on the same
index if it is then I've dramatically
index if it is then I've dramatically
screwed something up and if that's
screwed something up and if that's
actually the case and you figure that
actually the case and you figure that
out that will be a tremendous help to us
out that will be a tremendous help to us
I don't think I did but if I did then
I don't think I did but if I did then
let me
know because it should not be doing that
it would be hilarious if we've gotten as
it would be hilarious if we've gotten as
good results as we've gotten with it
good results as we've gotten with it
doing
that this index out of
range I'm confused how the hell this
range I'm confused how the hell this
works oh it's decoder
outsize we just do this
no I sometimes screw stuff
up and if nobody actually digs into the
up and if nobody actually digs into the
code then it never gets caught so this
code then it never gets caught so this
is the point of Open Source right here
is the point of Open Source right here
is if you find
is if you find
something you let me know and we fix it
something you let me know and we fix it
I already know that our losses are
I already know that our losses are
scaled wrong I screwed that one
scaled wrong I screwed that one
up um I got to fix that still I haven't
up um I got to fix that still I haven't
had any time but I got to fix that
had any time but I got to fix that
that's just like a logging thing though
that's just like a logging thing though
that doesn't affect
learning okay this seems to
learning okay this seems to
run
run
maybe yes this
maybe yes this
runs so now we just get to
runs so now we just get to
do uh hard
Hardware puffer
box
e e
why are you maxing a leg
press wait wait wait wait wait wait wait
press wait wait wait wait wait wait wait
you got to be [ __ ] me watch
you got to be [ __ ] me watch
this press press press press lock it
out did
out did
all right we're not taking athletic
all right we're not taking athletic
advice from this guy we'll buy his
advice from this guy we'll buy his
supplements but holy hell we're not
supplements but holy hell we're not
taking athletic advice from this
taking athletic advice from this
guy one more time while we're waiting
guy one more time while we're waiting
for the logs to finish wait watch this
for the logs to finish wait watch this
this is where he
starts that's the range of motion
not quite as bad as I originally thought
not quite as bad as I originally thought
still though
still though
like
like
that's that's like barely I don't that's
that's that's like barely I don't that's
not even quite parallel I don't think
not even quite parallel I don't think
all
all
right yeah no we're
not yeah
all
right here we
are I don't know why
uh so this is running
uh so this is running
training not seeing anything here
some other day you hold some other day
some other day you hold some other day
you mentioned notay State zeroing
you mentioned notay State zeroing
doesn't make a big
doesn't make a big
difference bootstrap H that I have not
difference bootstrap H that I have not
tested as well we so we do
tested as well we so we do
have we should be handling in uh in J is
have we should be handling in uh in J is
there something I'm missing here I've
there something I'm missing here I've
been told there's something I'm missing
been told there's something I'm missing
here I thought it was handled in
here I thought it was handled in
generalized Advantage
generalized Advantage
estimation
estimation
um I have not looked at this in a long
um I have not looked at this in a long
time though to be fair so I'll show you
time though to be fair so I'll show you
where that
where that
is all right so we have
hang
on so we got clean puff RL right and
on so we got clean puff RL right and
then we have
J compute
J compute
J so this gets called right here and
J so this gets called right here and
this does actually have duns I don't
this does actually have duns I don't
think we handle terminals here correctly
think we handle terminals here correctly
we probably should handle terminals here
we probably should handle terminals here
um yeah I don't know if because I'm
um yeah I don't know if because I'm
handling duns but I don't think I'm
handling duns but I don't think I'm
handling terminals so I'll you can take
handling terminals so I'll you can take
a look at this implementation and see if
a look at this implementation and see if
I'm missing stuff uh we take a PR on
I'm missing stuff uh we take a PR on
that for sure if it doesn't totally
that for sure if it doesn't totally
screw up like add you know a loop to it
screw up like add you know a loop to it
but here so we have where is
it CJ so here's our generalized
it CJ so here's our generalized
Advantage estimation right
Advantage estimation right
here okay so this runs in C this this is
here okay so this runs in C this this is
very nice and fast and you can see we do
very nice and fast and you can see we do
use where's the
use where's the
rewards we do use the duns here to
rewards we do use the duns here to
handle uh
terminals for
terminals for
this oh yeah I guess we don't bootstrap
this oh yeah I guess we don't bootstrap
the value
the value
function uh across segment
function uh across segment
bounds does that matter
that maybe
matters but like how do you even do that
matters but like how do you even do that
right no wait we can do that because you
right no wait we can do that because you
haven't
haven't
pre-computed without adding another
pre-computed without adding another
loop yeah I think that could be added to
loop yeah I think that could be added to
J
J
actually I think that's probably missing
actually I think that's probably missing
and should just be added
in I have no idea how much that matters
in I have no idea how much that matters
and I haven't really cared that much
and I haven't really cared that much
because in my mind J kind of sucks um J
because in my mind J kind of sucks um J
is one of the things that I actually
is one of the things that I actually
want to rip out of reinforcement
want to rip out of reinforcement
learning completely within the next uh
learning completely within the next uh
few months because it adds two hyper
few months because it adds two hyper
parameters gamma and Lambda which are
parameters gamma and Lambda which are
fundamentally different across
fundamentally different across
environments and even sometimes within
environments and even sometimes within
like different parts of the same
like different parts of the same
environment and if they're not correct
environment and if they're not correct
then you just your algorithm cannot work
then you just your algorithm cannot work
fundamentally so this prevents you from
fundamentally so this prevents you from
actually having the same algorithm
actually having the same algorithm
working on different environments with
working on different environments with
the same hypers for the most part and
the same hypers for the most part and
actually this like this invalidates uh
actually this like this invalidates uh
multiple different benchmarks like if
multiple different benchmarks like if
you go look at prop gen right you're
you go look at prop gen right you're
supposed to do it with one set of hypers
supposed to do it with one set of hypers
but actually you can solve all of proen
but actually you can solve all of proen
just by tuning per environment po
just by tuning per environment po
parameters because of je because the
parameters because of je because the
optimal parameter is like 7 in some
optimal parameter is like 7 in some
environments and 999 in others so it's
environments and 999 in others so it's
fundamentally imposs uh to solve with
fundamentally imposs uh to solve with
one set of parameters if you're doing it
one set of parameters if you're doing it
if you have something like this and
if you have something like this and
there so this is one of the things I
there so this is one of the things I
hopefully I'm looking to replace uh I
hopefully I'm looking to replace uh I
don't have any great leads on how I'm
don't have any great leads on how I'm
going to do that but in my mind like we
going to do that but in my mind like we
have so many test environments and
have so many test environments and
they're so fast now that once I get a
they're so fast now that once I get a
bit more time and I start onboarding a
bit more time and I start onboarding a
couple more contributors to the science
couple more contributors to the science
side of puffer like we can just run tens
side of puffer like we can just run tens
of thousands of comprehensive
of thousands of comprehensive
experiments on like new thing we come up
experiments on like new thing we come up
with versus old thing and we will be way
with versus old thing and we will be way
way way more confident in those results
way way more confident in those results
than basically anybody else running
than basically anybody else running
experiments in the field because of just
experiments in the field because of just
the number of different trials we can
the number of different trials we can
run on everything
what's up with
this oh there it goes
I don't know what your uh current
I don't know what your uh current
situation is but if you're interested in
situation is but if you're interested in
doing any of this stuff all sorts of fun
doing any of this stuff all sorts of fun
things that
things that
puffer oops Miss some DMs
e
e
e e
found that using slice object is
faster a slice
faster a slice
object yes if you index with a tensor
object yes if you index with a tensor
you're making a copy uh you're doing a
you're making a copy uh you're doing a
data copy if you're using a slice you
data copy if you're using a slice you
use a view if you use the colon index
use a view if you use the colon index
like one through whatever or whatever
like one through whatever or whatever
that's a slice so that's also a
view
e
e
e e
hang on is this crazy crazy slow
this might be crazy
slow
e
e
e
e e
I'm might have to take a quick call for
I'm might have to take a quick call for
this
a range would work identical to
zero
zero
um I don't think so a range is a
um I don't think so a range is a
generator wait are you saying that a
generator wait are you saying that a
range works better CU that shouldn't be
range works better CU that shouldn't be
a slice I don't
a slice I don't
think there's an actual slice object
think there's an actual slice object
that you can make like slice is a
keyword zero colon 256 should work
yeah you would not index with an A Range
yeah you would not index with an A Range
like that um probably it's going to
like that um probably it's going to
convert that a range into an array and
convert that a range into an array and
then it's going to index Within an array
then it's going to index Within an array
and every time you index with an array
and every time you index with an array
it copies so that's a redundant copy
operation that's true anytime you index
operation that's true anytime you index
with with any
array I think
um yeah that's true for anytime you
um yeah that's true for anytime you
index with any
index with any
array I mean you have to think about it
array I mean you have to think about it
right like it doesn't know that the
right like it doesn't know that the
array is Con technically they could
array is Con technically they could
build in an optimization to check if the
build in an optimization to check if the
array is contiguous but that would add
array is contiguous but that would add
overhead um and then it would make it
overhead um and then it would make it
contextual so just what they do is every
contextual so just what they do is every
time you give it an array to Index right
time you give it an array to Index right
they go grab the elements from those
they go grab the elements from those
those indices and copy them but if you
those indices and copy them but if you
give it a slice or if you give it you
give it a slice or if you give it you
know the colon index which is the same
know the colon index which is the same
thing as the slice then uh it will
thing as the slice then uh it will
always

Kind: captions
Language: en
okay we
okay we
are
back should be set for a
bit got some questions
answered um
now this is going to
be well we'll deal with committing this
be well we'll deal with committing this
code later because it's a little awkward
code later because it's a little awkward
because it's a fork of my own
because it's a fork of my own
repo um but whatever so we'll
[Music]
[Music]
do you know
do you know
what I can probably save myself a lot of
what I can probably save myself a lot of
heada
heada
if I uh just go figure out their repo
if I uh just go figure out their repo
structure real quick
all right so they've got
all right so they've got
this is this a
fork so this is a
fork so this is a
fork can I fork their
fork can I fork their
Fork no I can't all right so that's
Fork no I can't all right so that's
going to be kind of awkward because
going to be kind of awkward because
they've kind of vendored a thing but
they've kind of vendored a thing but
they it's still a fork so
they it's still a fork so
um they'll have to give me perms or
um they'll have to give me perms or
whatever
Val
okay so this should now
okay so this should now
be play well
be play well
actually do this
actually do this
first we have this line and then this is
first we have this line and then this is
play and then it's I would have not
play and then it's I would have not
figured this out
figured this out
evaluator policy.
evaluator policy.
URI
equals train der slash run name so
wanty
no H
frame trer
this do
it
[Music]
maybe what's wrong with w
my
gosh let me make sure I didn't mess this
up I a comment anything no I didn't do
up I a comment anything no I didn't do
anything
here
for
e for
okay so what we're going to do to get
okay so what we're going to do to get
this implemented
um this is a curriculum
um this is a curriculum
algorithm we're going to get working in
algorithm we're going to get working in
this other repo
yeah here we go now we get the
diff so I pretty much should just need
diff so I pretty much should just need
to figure
to figure
out which of these
portions need to get added in
OB
shape right so I add
this so I pretty much I think I can just
this so I pretty much I think I can just
Port this uh
Port this uh
directly B
directly B
size ke mini
size ke mini
B then this is hidden
size and here an experience
size and here an experience
hidden
hidden
size then I just need this thing here
size then I just need this thing here
under
values B
inverse and then actually there's very
inverse and then actually there's very
little else to change in clean puff
little else to change in clean puff
RL which they've renamed trainer I
RL which they've renamed trainer I
suppose BPT mini
suppose BPT mini
bat
bat
policy o
this should
this should
be now I got to figure out what they did
be now I got to figure out what they did
here
here
so
so
see okay they do have
policy self. policy.
policy self. policy.
hidden size like
hidden size like
this and then we'll just leave that as
this and then we'll just leave that as
is
then they should
then they should
have this
is right
is right
here you put this e3b buffer
here you put this e3b buffer
in you put this in eal
in you put this in eal
forward right here you get the e3b
buffer um
this is very
this is very
similar just go like
similar just go like
this we'll have to modify the policy API
this we'll have to modify the policy API
which unfortunately theirs a little bit
which unfortunately theirs a little bit
more fancy than mine
more fancy than mine
is we have to deal with
that um but then in trainer. forward we
that um but then in trainer. forward we
should be pretty well
should be pretty well
set yeah they have right here
set yeah they have right here
and then all we have to do is we add two
and then all we have to do is we add two
new things here that do not matter for
new things here that do not matter for
training from the
policy and then experience we already
policy and then experience we already
handled so that's it for the the whole
handled so that's it for the the whole
trainer file uh we don't care about
trainer file uh we don't care about
these
these
configs but we do have to deal with the
configs but we do have to deal with the
policy API and I hate this type of thing
policy API and I hate this type of thing
where you have to add stuff and add
where you have to add stuff and add
stuff to the policy
stuff to the policy
API hey how's it going we're adding um
API hey how's it going we're adding um
e3b exploration algorithm into a a
e3b exploration algorithm into a a
different repo for some
folks uh let me see here
so what do they do for their
policy they have a policy
policy they have a policy
store they
store they
have they have extra stuff though
quite a bit of extra
quite a bit of extra
stuff I think the easiest way to figure
stuff I think the easiest way to figure
this out is just literally going to be
this out is just literally going to be
um
um
Dynamic so we just do put a break
Dynamic so we just do put a break
[Music]
point right
point right
here test yeah I see it welcome
works on both
works on both
platforms Sometimes some of them have
platforms Sometimes some of them have
more lag than others but it should work
more lag than others but it should work
on both
platforms uh and I was just given
platforms uh and I was just given
a extra command to
a extra command to
try try that in a second
watching on X and chatting on
watching on X and chatting on
Twitch that's funny
[Music]
okay so this is cool this actually
okay so this is cool this actually
runs and you can click on
runs and you can click on
[Music]
[Music]
stuff looks like the uh the font's a
stuff looks like the uh the font's a
little
little
screwy but yeah you can
see they're doing some
stuff
oops for
h
I run
train are you're not supposed to give it
train are you're not supposed to give it
a URI for train
user
warning oh
right just pushed me a fix for that
well I have to think my Force Fork
all right
and then this one is going to just be
and then this one is going to just be
Doc
Doc
configs and then this is just config for
configs and then this is just config for
now and then we should be able to do
now and then we should be able to do
train
all right
all right
policy
cool policy store
policy
door
policy trainer.
initial how about this dot
create V
create V
n
n okay you have to go down a little bit
n okay you have to go down a little bit
here until you get the
VM and there we go so we
have only one extra layer m some extra
have only one extra layer m some extra
rappers it looks like we've got
rappers it looks like we've got
recurrent
recurrent
policy of recurrent of puffer agent
policy of recurrent of puffer agent
rapper lots of
rapper lots of
rappers um
so you have to add e3b to all of this
so you have to add e3b to all of this
unfortunately the uh the issue
unfortunately the uh the issue
here unless they pass a config all the
here unless they pass a config all the
way
way
down but I think even then you still
down but I think even then you still
have to do it
okay give me something else
n hang
on yeah
getting um prototype curriculum
getting um prototype curriculum
algorithm ported to a fork of puffer lib
algorithm ported to a fork of puffer lib
that's mostly puffer lib has a few
that's mostly puffer lib has a few
things okay so this works
let me just train
yeah know this is a a crazy crazy
week like legit 80 hour
week like legit 80 hour
week if you include the weekend
uh this is my fault so this is
okay so we're getting tweaks in from uh
okay so we're getting tweaks in from uh
from them in the meantime I should do
puffer agent rapper what did we say this
puffer agent rapper what did we say this
was guess it's too far up now I think it
was guess it's too far up now I think it
was
recurrent um puffer agent rapper
so I think I actually have to go
so I think I actually have to go
into well hold on this is supposed to be
into well hold on this is supposed to be
puffa but this doesn't have any of our
puffa but this doesn't have any of our
stuff in
stuff in
it so where are they
getting is
getting is
this now this this is just
one okay wait this is the
one okay wait this is the
recurrent puffer cleen
RL oh they have um I guess they have
RL oh they have um I guess they have
puffer
puffer
lib
lib
installed hang
on have
so they clone puffer
so they clone puffer
lib and they build
lib and they build
it and it's their
Branch oh okay so they've got puffer lib
Branch oh okay so they've got puffer lib
like their fork and then they have some
like their fork and then they have some
additional puffer Li
additional puffer Li
utils and and probably their Fork is
utils and and probably their Fork is
going to be way more
going to be way more
similar to
mine I wonder what they use from uh from
mine I wonder what they use from uh from
puffer Li actually if I just CD into
metag puffer m
well we don't have to do all this today
well we don't have to do all this today
I can kind of just give them a
I can kind of just give them a
quick Port of
quick Port of
this cuz literally it's just the clean
this cuz literally it's just the clean
RL files I believe
hold on
what oh no no no hold up
what oh no no no hold up
meta and
meta and
then
def so they run it from here they clone
def so they run it from here they clone
it CD they stash like that
it CD they stash like that
and then they go hold on but then
they okay there is a new
they okay there is a new
config they've been pushing more
commits thought that's normal is not not
commits thought that's normal is not not
exactly I don't mind doing it just as
exactly I don't mind doing it just as
long as I'm not doing it for like
long as I'm not doing it for like
sustained very many weeks and you know
sustained very many weeks and you know
not getting exercise or sleep or
not getting exercise or sleep or
whatever it's kind of fun to work hard
whatever it's kind of fun to work hard
in uh in bursts
all right
so okay so they got this
factors
cool
steps where's their train command
go this may or may not work with this
go this may or may not work with this
policy
and then we have to add this
I should be able to do do train on this
I should be able to do do train on this
oops
okay
oh shoot
agent this is
may be fine
I a math student starting to learn RL
I a math student starting to learn RL
what sources do you
what sources do you
recommend reading intro yeah so that
recommend reading intro yeah so that
will give you the math heavy version of
will give you the math heavy version of
it um the thing is there's really not
it um the thing is there's really not
that much crazy math in the RL
that much crazy math in the RL
algorithms that like widely work um I
algorithms that like widely work um I
think the hard part for you is going to
think the hard part for you is going to
be more the engineering side I have a
be more the engineering side I have a
quick start off on that that does
quick start off on that that does
include some papers as well uh but yeah
include some papers as well uh but yeah
the tricky thing in RL it's a very
the tricky thing in RL it's a very
engineering heavy area of AI so like we
engineering heavy area of AI so like we
do ultra high performance stuff these
do ultra high performance stuff these
M's are like a thousand times faster
M's are like a thousand times faster
than the majority of what you're going
than the majority of what you're going
to find out there in Academia and most
to find out there in Academia and most
of industry and it's just because we
of industry and it's just because we
built them to be
built them to be
fast um if you check here I'll link this
fast um if you check here I'll link this
to you
this is my quick start guide for how I
this is my quick start guide for how I
recommend people get into
RL it's written more with uh well
RL it's written more with uh well
there's some there's some like more
there's some there's some like more
mathy papers in there but it's it's
mathy papers in there but it's it's
pretty
practical for
yep you also I mean we have a Discord
yep you also I mean we have a Discord
for people uh who want to get involved
for people uh who want to get involved
with this stuff
with this stuff
um there is like there is to be fair
um there is like there is to be fair
there is some stuff on the math side
there is some stuff on the math side
that we have uh for people who are
that we have uh for people who are
interested in my math my own math is
interested in my math my own math is
pretty weak so if you want to take a
pretty weak so if you want to take a
look at some of the stuff I'm doing on
look at some of the stuff I'm doing on
that side You' be more than happy uh
that side You' be more than happy uh
I'll link you one cool thing that I'm
I'll link you one cool thing that I'm
working on at the moment
working on at the moment
that's more math heavy the thing is
that's more math heavy the thing is
there's really not too too much of this
there's really not too too much of this
work at the moment in RL it's a lot a
work at the moment in RL it's a lot a
lot of engineering but every so often
lot of engineering but every so often
something crops up where uh it is
something crops up where uh it is
actually very
actually very
useful so I have at the moment an
useful so I have at the moment an
updated version of this algorithm in
updated version of this algorithm in
puffer lib uh I've changed some of the
puffer lib uh I've changed some of the
way that they're modeling stuff with
way that they're modeling stuff with
this this is a hyper pram sweep
this this is a hyper pram sweep
algorithm but the thing that I'm trying
algorithm but the thing that I'm trying
to figure out is how to formally model
to figure out is how to formally model
the following process uh mathematically
the following process uh mathematically
so what you want really when you're
so what you want really when you're
running experiments right you want to
running experiments right you want to
uncover the Paro front so you want to
uncover the Paro front so you want to
get a dense set of points along the
get a dense set of points along the
curve of uh increasing cost so you run
curve of uh increasing cost so you run
the experiment for longer and than the
the experiment for longer and than the
score that you can get and ideally you
score that you can get and ideally you
know the longer you run the experiment
know the longer you run the experiment
the more score you should get and you
the more score you should get and you
want a nice dense set of points along
want a nice dense set of points along
that
that
curve uh that really tell you how you
curve uh that really tell you how you
can do for any level of investment
can do for any level of investment
you're willing to put what I want to do
you're willing to put what I want to do
is formulate this process um as an
is formulate this process um as an
overarching optimization process in
overarching optimization process in
which you have a total budget of time
which you have a total budget of time
you're spending on running experiments
you're spending on running experiments
and what you want to do is you want to
and what you want to do is you want to
run experiments such that you uncover
run experiments such that you uncover
that curve while minimizing the total
that curve while minimizing the total
time of all the experiments that you're
time of all the experiments that you're
running so I'm still trying to figure
running so I'm still trying to figure
out how to do that portion but that's
out how to do that portion but that's
like one example of something on the
like one example of something on the
more math heavy side
all right so they should have puffer lib
all right so they should have puffer lib
in here but I don't see it which is
weird what's their Fork look
like no they've got a full puffer lib
it clone
they move anything
around I don't see puffer
Leb oh there it is
all right so now we get to go look at
all right so now we get to go look at
this and I just have to add I just have
this and I just have to add I just have
to change these signatures
to change these signatures
here yeah so this is just straight up uh
here yeah so this is just straight up uh
they yeah they haven't even changed this
they yeah they haven't even changed this
this is just this goes
this is just this goes
here
here
uhoh
wait no it's right here we're good
and then
and then
return an
return an
intrinsic E3 is
intrinsic E3 is
[Music]
[Music]
none
none
e3b then we do the same on the
e3b then we do the same on the
recurrent we
recurrent we
do hi size
and what the heck oh this
justy okay so that is the clean RL
justy okay so that is the clean RL
[Music]
change we'll need this in
change we'll need this in
models as well if they I don't actually
models as well if they I don't actually
know if they use any of our default
know if they use any of our default
models we have to go check on that
Huffer agent ramp so I think that they
Huffer agent ramp so I think that they
have their
own and
agent yeah so they've got their own
agent yeah so they've got their own
agent I
agent I
think and
think and
uh let's do
uh let's do
GP
GP
include.
I
oops and they just use a couple things
oops and they just use a couple things
they don't use
um they don't seem to use our default
um they don't seem to use our default
policies so I don't have to modify those
policies so I don't have to modify those
at all which is
at all which is
fine
fine
simple meta
simple meta
agent
agent
encoder
decoder so can I put
this the only let's see you only really
this the only let's see you only really
need
code
observations you need I need to add this
observations you need I need to add this
to the
uh oh they use tensor
uh oh they use tensor
decks so I basically I can just add this
decks so I basically I can just add this
to
to
their tensor dick
I I might be able to just do this
I I might be able to just do this
here no because this is actually pretty
here no because this is actually pretty
far deep into the rapper so I think that
far deep into the rapper so I think that
the clean RL interface
gets how the heck does this thing even
gets how the heck does this thing even
work I guess it's their
work I guess it's their
wrapper let me
see uh puffer agent wrapper
see uh puffer agent wrapper
upper agent rapper is here
did my camera freeze let me fix
that they make a tensor dick somewhere
that they make a tensor dick somewhere
ah they
ah they
do that's kind of
funny so this thing needs to get e3bd I
funny so this thing needs to get e3bd I
think
yeah so it just goes into e3b and then
yeah so it just goes into e3b and then
into decode
none and then this goes into
none and then this goes into
decode
decode
um E3 and we'll just put e3b is
um E3 and we'll just put e3b is
e3b and then this is going to
e3b and then this is going to
[Music]
return return whatever decode returns
return return whatever decode returns
and then decode
I could put it
here do I even need to go this deep with
it wait this is yeah no no cuz it's
it wait this is yeah no no cuz it's
agent and then meta so I
think I think I put it
here value e3b and and then
intrinsic reward like this okay and then
intrinsic reward like this okay and then
what we
do yeah this goes in
do yeah this goes in
decode so we can just take
decode so we can just take
this here
this here
actually and do this
and
actually I'll put this up
actually I'll put this up
here value action and then this is flat
here value action and then this is flat
hidden.
detach
detach
transic there you
go B yeah so this should be fine
go B yeah so this should be fine
and I don't think we even need to go any
and I don't think we even need to go any
deeper so we don't even need to mess
deeper so we don't even need to mess
with their
with their
apis we just need to mess with
apis we just need to mess with
RS let's see if this
RS let's see if this
works probably have to fix some
stuff and what I would like to do
stuff and what I would like to do
actually
is put this in my other window so I stop
is put this in my other window so I stop
having to to tab so much
can you give me a short rundown of Pros
can you give me a short rundown of Pros
cons well you never run stuff on Native
cons well you never run stuff on Native
Windows that's just being stupid uh you
Windows that's just being stupid uh you
can run it on WSL which is supposed to
can run it on WSL which is supposed to
have close to Native
have close to Native
performance and will give you a mostly
performance and will give you a mostly
native Linux environment uh except that
native Linux environment uh except that
then when I went to run my perf tests on
then when I went to run my perf tests on
that a while ago it was like down by
that a while ago it was like down by
25% somehow I don't even know how they
25% somehow I don't even know how they
managed to do that so that pissed me off
managed to do that so that pissed me off
enough that I just deleted windows and
enough that I just deleted windows and
uh I'm running everything on a to which
uh I'm running everything on a to which
has the side effect of having me play
has the side effect of having me play
fewer games because it is harder to get
fewer games because it is harder to get
to most of
them so that is the that is uh how that
works why never you're trolling if you
works why never you're trolling if you
do any Dev on Windows I mean if you do
do any Dev on Windows I mean if you do
any Dev on Windows outside of the
any Dev on Windows outside of the
ecosystems that are clearly designed for
ecosystems that are clearly designed for
Windows like you know you're doing Unity
Windows like you know you're doing Unity
Dev or something you're just
trolling it's just it's not this is just
trolling it's just it's not this is just
not the operating system for Dev
man nobody bothers testing their
man nobody bothers testing their
packages against Windows half of [ __ ]
packages against Windows half of [ __ ]
doesn't even work like you're just
doesn't even work like you're just
rolling you're just wasting your time
rolling you're just wasting your time
you're going to just waste your time on
you're going to just waste your time on
setup and dumb
stuff look the setup that we have at the
stuff look the setup that we have at the
moment is really really solid especially
moment is really really solid especially
with as bad as the python like uh python
with as bad as the python like uh python
tooling is you Dev on either WSL or
tooling is you Dev on either WSL or
native Linux in a container the
native Linux in a container the
container has everything set up
container has everything set up
perfectly so you have an exact replica
perfectly so you have an exact replica
of the uh the dev setup in anywhere
of the uh the dev setup in anywhere
you're going to Dev it's always going to
you're going to Dev it's always going to
be the same if anything goes wrong you
be the same if anything goes wrong you
can nuke the container and spin a new
can nuke the container and spin a new
one up from the exact you know starting
one up from the exact you know starting
point in 5 seconds it's very very nice
dude yeah
dude yeah
I get like do some lenux man
I get like do some lenux man
it's this this is like in terms of like
it's this this is like in terms of like
like colossal like fuckups and like
like colossal like fuckups and like
colossal fuckups um this would be more
colossal fuckups um this would be more
on the Colossal fuckups side of things
just like the amount of dumb [ __ ] that
just like the amount of dumb [ __ ] that
you're going to waste your time dealing
you're going to waste your time dealing
with like using something that is not
with like using something that is not
like not a Dev platform yeah it's no
like not a Dev platform yeah it's no
bueno now look if you already have W
bueno now look if you already have W
Windows and you use that just as your
Windows and you use that just as your
standard just get WSL and you'll be fine
standard just get WSL and you'll be fine
it'll be good enough it'll give you a
it'll be good enough it'll give you a
native Dev
native Dev
environment um Sometimes some of it will
environment um Sometimes some of it will
drop perf but it'll be vast vastly
drop perf but it'll be vast vastly
better than anything else other than
better than anything else other than
like just a native Linux
setup can't have things
break okay well things break things are
break okay well things break things are
going to break constantly in
going to break constantly in
Windows yeah don't don't mess around
Windows yeah don't don't mess around
with dual booting your machine or
with dual booting your machine or
anything then just like WSL it's just
anything then just like WSL it's just
it's probably even pre-installed or you
it's probably even pre-installed or you
just WSL D- install or something like
just WSL D- install or something like
that um it comes like it's just there
that um it comes like it's just there
with Windows it's Microsoft's like layer
with Windows it's Microsoft's like layer
for Windows uh for Linux compat
well you'll have to fix
that I mean you like you're like no
that I mean you like you're like no
serious Dev work is done like outside of
serious Dev work is done like outside of
like things like Unity or whatever where
like things like Unity or whatever where
it is literally intended to be done Dev
it is literally intended to be done Dev
on Windows because the target is Windows
on Windows because the target is Windows
cuz it's games or stuff like that like
cuz it's games or stuff like that like
just no serious Dev is done on Windows
just no serious Dev is done on Windows
period
current
current
policy okay so I missed one here
what's
what's
up currently we are reporting a
up currently we are reporting a
curriculum learning algorithm to run on
curriculum learning algorithm to run on
a different environment that is part of
a different environment that is part of
a uh somebody's puffer Li
a uh somebody's puffer Li
Fork quick little
Fork quick little
port and then I think what we're going
port and then I think what we're going
to probably do if I finish this in not a
to probably do if I finish this in not a
horrible amount of time is uh we're
horrible amount of time is uh we're
going to try to Port this maze
going to try to Port this maze
environment so we have like a native
environment so we have like a native
puffer maze environment because I've
puffer maze environment because I've
wanted one for a while and uh I do not
wanted one for a while and uh I do not
trust the experiments in this repository
trust the experiments in this repository
to give us clear feedback on stuff
let me um one
second
e e
all right decisions that concern me
all right decisions that concern me
being made without my input that I
being made without my input that I
overheard so we are I'm just handling
overheard so we are I'm just handling
that um
see oh yeah yeah there's the
lstm in puffer Li
models puffer
model
oops where's my uh lstm rapper there it
oops where's my uh lstm rapper there it
is I just missed one so this is just
is I just missed one so this is just
[Music]
[Music]
three
three
[Music]
[Music]
none
and word and this is going to just be
and word and this is going to just be
decode gives you e3b let's codeb
all right
all right
so
now I don't have
that never give you dude I you got to
that never give you dude I you got to
have like some sort of conversation
have like some sort of conversation
there that WSL is literally like
there that WSL is literally like
just I that's just like Linux act I
just I that's just like Linux act I
don't know what to tell
don't know what to tell
you I mean that's bizarre
I mean it's bizarre to have pareno walks
I mean it's bizarre to have pareno walks
on a 16-year-old in the first place but
on a 16-year-old in the first place but
uh I mean that's a conversation for you
uh I mean that's a conversation for you
and your family not for
me
for e
evaluator oh hold
on how is this
on how is this
thing I guess they run this in between
ah yeah think you just have to add two
ah yeah think you just have to add two
extras to this
it opponent
policies okay so luckily I don't think
policies okay so luckily I don't think
we
we
need we don't need any of these things
need we don't need any of these things
at EV all
time only thing we need to do is uh
time only thing we need to do is uh
integrate the intrinsic reward
okay that looks to be
running and uh all we have to do
is where is
is where is
it
TR underscore about yes so right here
TR underscore about yes so right here
this is where stuff gets changed for
this is where stuff gets changed for
e3b then we do
oops oh come
on so the only other thing we got to do
on so the only other thing we got to do
here
right
right
here that's
here that's
it this is it right here this goes right
underneath uh right above synchronize
underneath uh right above synchronize
actually that was close let mess that up
and e3b in and
and e3b in and
R okay
R okay
so I'll add them a flag obviously to use
so I'll add them a flag obviously to use
this but
this but
uh here's what we will
uh here's what we will
do we
do we
will let's just add that flag
quarks um config
E3
E3
B
false use
e3b all right and then we'll do for e3b
if else
if else
none and then we'll just do
we go we'll try
this and uh I
will make sure that this is getting
will make sure that this is getting
registered
we got to syn the fork as
well
false and then let's see if this
false and then let's see if this
[Music]
runs should run
I is
I is
running so I got
running so I got
a oh come on
how does it uh where's the oh I guess
how does it uh where's the oh I guess
it's this break point screwing it
it's this break point screwing it
up
up
okay so what we'll do is we'll do
okay so what we'll do is we'll do
this uh we should pull a config fix
this uh we should pull a config fix
first
first
though we should pull our config fix
all right so now it's tools
all right so now it's tools
train and then this is going to
train and then this is going to
be we'll do this will
be we'll do this will
be maze based line
and then a
and then a
hardware H
box and we will see in a moment moment
[Music]
[Music]
H that's so
funny we get anything
here oh wait error in call
here oh wait error in call
agent rapper has no
attribute that's weird that it just spun
attribute that's weird that it just spun
and didn't
and didn't
exit no attribute hidden
exit no attribute hidden
size yeah okay so we need to fix this
size yeah okay so we need to fix this
one break point I forgot about
this more
DMS good com up and working oh that's
DMS good com up and working oh that's
funny that's what kills my
camera it's not drivers it's the
camera it's not drivers it's the
freaking Cuda memory it looks like it's
freaking Cuda memory it looks like it's
like he we don't have memory for this
like he we don't have memory for this
anymore CU you're running all these
anymore CU you're running all these
neural Nets
error in
call why would I not want the full stack
call why would I not want the full stack
pra ever Hydra why is this such a shitty
pra ever Hydra why is this such a shitty
config Library it's like oh no I don't
config Library it's like oh no I don't
need the error message why would why
need the error message why would why
would I need an error message to debug
would I need an error message to debug
my code ah nobody uses
those all right no attribute
instantiate
trainer no attribute hidden
trainer no attribute hidden
size
what so there's a bunch of hydro
what so there's a bunch of hydro
garbage instantiate
trainer this isn't code [ __ ] off this is
trainer this isn't code [ __ ] off this is
not
code agent rapper has no attribute
code agent rapper has no attribute
hidden
size I think that I fixed this one
size I think that I fixed this one
now I think I added this to the
now I think I added this to the
recurrent
recurrent
rapper and then I think it's RL Puffer
where do I use hidden
size no attribute hidden
size actor hidden sizes
who but I don't know where I even use
this I mean look at this error message
this I mean look at this error message
and tell
and tell
me hold on is it
me hold on is it
here clean
RL okay maybe okay it's up here but I
RL okay maybe okay it's up here but I
don't know why there were two blocks of
don't know why there were two blocks of
these if I understand quickly back prop
these if I understand quickly back prop
leaps so for some time
leaps so for some time
steps so I should I set it to one if
steps so I should I set it to one if
every time step contains
every time step contains
information for the
information for the
hidden so yeah if you don't actually
hidden so yeah if you don't actually
need
need
recurrence um you can either not use the
recurrence um you can either not use the
lstm or you can use the lstm as
lstm or you can use the lstm as
basically a glorified couple of like
basically a glorified couple of like
linear layers and set that to one um
linear layers and set that to one um
usually the correct thing to do is to
usually the correct thing to do is to
sweep it um cuz sometimes that time
sweep it um cuz sometimes that time
information can be useful even if you
information can be useful even if you
don't require it um
don't require it um
yeah I mean it's a nice alternative to
yeah I mean it's a nice alternative to
frame stacking is the thing it's usually
faster like by the time you're frame
faster like by the time you're frame
stacking to
stacking to
before or whatever it's an lstm can be
before or whatever it's an lstm can be
faster if it's implemented well which
faster if it's implemented well which
ours is
changes in the code so when you
changes in the code so when you
train um you have like a mini batch size
train um you have like a mini batch size
right and uh we reshape the mini batch
right and uh we reshape the mini batch
into segments so let's say that you've
into segments so let's say that you've
gotten 128 time steps of data from the
gotten 128 time steps of data from the
INF first environment if you set BPT
INF first environment if you set BPT
Horizon to 16 it will break it up into
Horizon to 16 it will break it up into
uh eight length 16 segments and then it
uh eight length 16 segments and then it
will Ford pass through those 16 time
will Ford pass through those 16 time
steps All In Parallel across those eight
steps All In Parallel across those eight
and then it will backrop through 16 time
and then it will backrop through 16 time
steps so it's basically it's learning
steps so it's basically it's learning
over uh like a context if you will of 16
over uh like a context if you will of 16
time
time
steps the reshape is inside of uh the
steps the reshape is inside of uh the
train function
let's see if this works
let's see if this works
I TR tried to
I TR tried to
recalculate it seems like it's doing
recalculate it seems like it's doing
leaps on the same
leaps on the same
index if it is then I've dramatically
index if it is then I've dramatically
screwed something up and if that's
screwed something up and if that's
actually the case and you figure that
actually the case and you figure that
out that will be a tremendous help to us
out that will be a tremendous help to us
I don't think I did but if I did then
I don't think I did but if I did then
let me
know because it should not be doing that
it would be hilarious if we've gotten as
it would be hilarious if we've gotten as
good results as we've gotten with it
good results as we've gotten with it
doing
that this index out of
range I'm confused how the hell this
range I'm confused how the hell this
works oh it's decoder
outsize we just do this
no I sometimes screw stuff
up and if nobody actually digs into the
up and if nobody actually digs into the
code then it never gets caught so this
code then it never gets caught so this
is the point of Open Source right here
is the point of Open Source right here
is if you find
is if you find
something you let me know and we fix it
something you let me know and we fix it
I already know that our losses are
I already know that our losses are
scaled wrong I screwed that one
scaled wrong I screwed that one
up um I got to fix that still I haven't
up um I got to fix that still I haven't
had any time but I got to fix that
had any time but I got to fix that
that's just like a logging thing though
that's just like a logging thing though
that doesn't affect
learning okay this seems to
learning okay this seems to
run
run
maybe yes this
maybe yes this
runs so now we just get to
runs so now we just get to
do uh hard
Hardware puffer
box
e e
why are you maxing a leg
press wait wait wait wait wait wait wait
press wait wait wait wait wait wait wait
you got to be [ __ ] me watch
you got to be [ __ ] me watch
this press press press press lock it
out did
out did
all right we're not taking athletic
all right we're not taking athletic
advice from this guy we'll buy his
advice from this guy we'll buy his
supplements but holy hell we're not
supplements but holy hell we're not
taking athletic advice from this
taking athletic advice from this
guy one more time while we're waiting
guy one more time while we're waiting
for the logs to finish wait watch this
for the logs to finish wait watch this
this is where he
starts that's the range of motion
not quite as bad as I originally thought
not quite as bad as I originally thought
still though
still though
like
like
that's that's like barely I don't that's
that's that's like barely I don't that's
not even quite parallel I don't think
not even quite parallel I don't think
all
all
right yeah no we're
not yeah
all
right here we
are I don't know why
uh so this is running
uh so this is running
training not seeing anything here
some other day you hold some other day
some other day you hold some other day
you mentioned notay State zeroing
you mentioned notay State zeroing
doesn't make a big
doesn't make a big
difference bootstrap H that I have not
difference bootstrap H that I have not
tested as well we so we do
tested as well we so we do
have we should be handling in uh in J is
have we should be handling in uh in J is
there something I'm missing here I've
there something I'm missing here I've
been told there's something I'm missing
been told there's something I'm missing
here I thought it was handled in
here I thought it was handled in
generalized Advantage
generalized Advantage
estimation
estimation
um I have not looked at this in a long
um I have not looked at this in a long
time though to be fair so I'll show you
time though to be fair so I'll show you
where that
where that
is all right so we have
hang
on so we got clean puff RL right and
on so we got clean puff RL right and
then we have
J compute
J compute
J so this gets called right here and
J so this gets called right here and
this does actually have duns I don't
this does actually have duns I don't
think we handle terminals here correctly
think we handle terminals here correctly
we probably should handle terminals here
we probably should handle terminals here
um yeah I don't know if because I'm
um yeah I don't know if because I'm
handling duns but I don't think I'm
handling duns but I don't think I'm
handling terminals so I'll you can take
handling terminals so I'll you can take
a look at this implementation and see if
a look at this implementation and see if
I'm missing stuff uh we take a PR on
I'm missing stuff uh we take a PR on
that for sure if it doesn't totally
that for sure if it doesn't totally
screw up like add you know a loop to it
screw up like add you know a loop to it
but here so we have where is
it CJ so here's our generalized
it CJ so here's our generalized
Advantage estimation right
Advantage estimation right
here okay so this runs in C this this is
here okay so this runs in C this this is
very nice and fast and you can see we do
very nice and fast and you can see we do
use where's the
use where's the
rewards we do use the duns here to
rewards we do use the duns here to
handle uh
terminals for
terminals for
this oh yeah I guess we don't bootstrap
this oh yeah I guess we don't bootstrap
the value
the value
function uh across segment
function uh across segment
bounds does that matter
that maybe
matters but like how do you even do that
matters but like how do you even do that
right no wait we can do that because you
right no wait we can do that because you
haven't
haven't
pre-computed without adding another
pre-computed without adding another
loop yeah I think that could be added to
loop yeah I think that could be added to
J
J
actually I think that's probably missing
actually I think that's probably missing
and should just be added
in I have no idea how much that matters
in I have no idea how much that matters
and I haven't really cared that much
and I haven't really cared that much
because in my mind J kind of sucks um J
because in my mind J kind of sucks um J
is one of the things that I actually
is one of the things that I actually
want to rip out of reinforcement
want to rip out of reinforcement
learning completely within the next uh
learning completely within the next uh
few months because it adds two hyper
few months because it adds two hyper
parameters gamma and Lambda which are
parameters gamma and Lambda which are
fundamentally different across
fundamentally different across
environments and even sometimes within
environments and even sometimes within
like different parts of the same
like different parts of the same
environment and if they're not correct
environment and if they're not correct
then you just your algorithm cannot work
then you just your algorithm cannot work
fundamentally so this prevents you from
fundamentally so this prevents you from
actually having the same algorithm
actually having the same algorithm
working on different environments with
working on different environments with
the same hypers for the most part and
the same hypers for the most part and
actually this like this invalidates uh
actually this like this invalidates uh
multiple different benchmarks like if
multiple different benchmarks like if
you go look at prop gen right you're
you go look at prop gen right you're
supposed to do it with one set of hypers
supposed to do it with one set of hypers
but actually you can solve all of proen
but actually you can solve all of proen
just by tuning per environment po
just by tuning per environment po
parameters because of je because the
parameters because of je because the
optimal parameter is like 7 in some
optimal parameter is like 7 in some
environments and 999 in others so it's
environments and 999 in others so it's
fundamentally imposs uh to solve with
fundamentally imposs uh to solve with
one set of parameters if you're doing it
one set of parameters if you're doing it
if you have something like this and
if you have something like this and
there so this is one of the things I
there so this is one of the things I
hopefully I'm looking to replace uh I
hopefully I'm looking to replace uh I
don't have any great leads on how I'm
don't have any great leads on how I'm
going to do that but in my mind like we
going to do that but in my mind like we
have so many test environments and
have so many test environments and
they're so fast now that once I get a
they're so fast now that once I get a
bit more time and I start onboarding a
bit more time and I start onboarding a
couple more contributors to the science
couple more contributors to the science
side of puffer like we can just run tens
side of puffer like we can just run tens
of thousands of comprehensive
of thousands of comprehensive
experiments on like new thing we come up
experiments on like new thing we come up
with versus old thing and we will be way
with versus old thing and we will be way
way way more confident in those results
way way more confident in those results
than basically anybody else running
than basically anybody else running
experiments in the field because of just
experiments in the field because of just
the number of different trials we can
the number of different trials we can
run on everything
what's up with
this oh there it goes
I don't know what your uh current
I don't know what your uh current
situation is but if you're interested in
situation is but if you're interested in
doing any of this stuff all sorts of fun
doing any of this stuff all sorts of fun
things that
things that
puffer oops Miss some DMs
e
e
e e
found that using slice object is
faster a slice
faster a slice
object yes if you index with a tensor
object yes if you index with a tensor
you're making a copy uh you're doing a
you're making a copy uh you're doing a
data copy if you're using a slice you
data copy if you're using a slice you
use a view if you use the colon index
use a view if you use the colon index
like one through whatever or whatever
like one through whatever or whatever
that's a slice so that's also a
view
e
e
e e
hang on is this crazy crazy slow
this might be crazy
slow
e
e
e
e e
I'm might have to take a quick call for
I'm might have to take a quick call for
this
a range would work identical to
zero
zero
um I don't think so a range is a
um I don't think so a range is a
generator wait are you saying that a
generator wait are you saying that a
range works better CU that shouldn't be
range works better CU that shouldn't be
a slice I don't
a slice I don't
think there's an actual slice object
think there's an actual slice object
that you can make like slice is a
keyword zero colon 256 should work
yeah you would not index with an A Range
yeah you would not index with an A Range
like that um probably it's going to
like that um probably it's going to
convert that a range into an array and
convert that a range into an array and
then it's going to index Within an array
then it's going to index Within an array
and every time you index with an array
and every time you index with an array
it copies so that's a redundant copy
operation that's true anytime you index
operation that's true anytime you index
with with any
array I think
um yeah that's true for anytime you
um yeah that's true for anytime you
index with any
index with any
array I mean you have to think about it
array I mean you have to think about it
right like it doesn't know that the
right like it doesn't know that the
array is Con technically they could
array is Con technically they could
build in an optimization to check if the
build in an optimization to check if the
array is contiguous but that would add
array is contiguous but that would add
overhead um and then it would make it
overhead um and then it would make it
contextual so just what they do is every
contextual so just what they do is every
time you give it an array to Index right
time you give it an array to Index right
they go grab the elements from those
they go grab the elements from those
those indices and copy them but if you
those indices and copy them but if you
give it a slice or if you give it you
give it a slice or if you give it you
know the colon index which is the same
know the colon index which is the same
thing as the slice then uh it will
thing as the slice then uh it will
always
