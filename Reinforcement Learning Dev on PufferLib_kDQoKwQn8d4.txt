Kind: captions
Language: en
Good
Good
morning. Okay, today the plan is
to go through the improvements to the
to go through the improvements to the
training code uh that I was on up late
training code uh that I was on up late
last night discussing with uh a few of
last night discussing with uh a few of
our
our
users. We're going to see if we can get
users. We're going to see if we can get
like a really clean entry point style uh
like a really clean entry point style uh
interface to the main training code.
interface to the main training code.
Then we're going to see if we can write
Then we're going to see if we can write
some decent docs for that. Put together
some decent docs for that. Put together
a good sample
project and then we'll see where that
project and then we'll see where that
puts us. Probably have to start on the
puts us. Probably have to start on the
packaging, all that stuff. Uh next
packaging, all that stuff. Uh next
couple of days is just going to be like
couple of days is just going to be like
really trying to crank out the last
really trying to crank out the last
things for this uh for this release.
Okay. So, to get started
here, the thing that we want to do is
here, the thing that we want to do is
take all of these little
take all of these little
snippets and uh cleanly make entry
snippets and uh cleanly make entry
points for these
points for these
separately. That was the suggestion that
separately. That was the suggestion that
we
had do like this little config
Now, this stuff I don't quite know what
Now, this stuff I don't quite know what
we're going to do with, but I think for
we're going to do with, but I think for
now what we do is we just take this blob
now what we do is we just take this blob
of
code, and this will go like
here. And then this one here, this is
here. And then this one here, this is
the training entry
point. This probably will be able to be
simplified. And what else do we have in
simplified. And what else do we have in
here? There's all this importing.
There's also this loading
code. I don't know if this should go
code. I don't know if this should go
into this is not loading of configs.
We do know this is going to go into
We do know this is going to go into
evaluate.
Missed one
line. I missed a
line profile.
and then
export. Now, the main thing is just
export. Now, the main thing is just
going to be how we get this loading code
going to be how we get this loading code
into a a decent spot.
into a a decent spot.
We just get rid of all
this. I mean, that's still a fair chunk
this. I mean, that's still a fair chunk
of code,
right? So, this can
right? So, this can
be let's see realistically. So, this
be let's see realistically. So, this
loads the
loads the
N and then we have a bunch of policy
N and then we have a bunch of policy
loading code.
And then this local rank this just has
And then this local rank this just has
to be called
before where's this has to where does
before where's this has to where does
this have to get
called? I think when you make the
called? I think when you make the
policy, you have to do this,
right? Yeah, we can punt on that for
right? Yeah, we can punt on that for
just a little
bit. So, this can be load
checkpoint and um
We still have tons of stuff here.
Do you want to pass vechan
policy? It's a little bit at odds,
policy? It's a little bit at odds,
right? trying to provide a
right? trying to provide a
um entry point
um entry point
interface and at the same time trying to
interface and at the same time trying to
provide uh a importable interface
The entry point has to not take arcs,
The entry point has to not take arcs,
right?
I mean realistically I could just make
I mean realistically I could just make
like a load everything
right? Can you make um can you make the
right? Can you make um can you make the
entry point function take optional
arguments? You probably can, right?
arguments? You probably can, right?
like you might be not be able to pass
like you might be not be able to pass
them from
CLI, but you should be able to make them
CLI, but you should be able to make them
take like starark bars or
take like starark bars or
whatever. Okay, let's assume that that's
whatever. Okay, let's assume that that's
possible.
possible.
And then this is like load
config. And then we do like
config. And then we do like
load
envir load.
We're not going to keep all these little
We're not going to keep all these little
functions,
I thought there's like a second
I thought there's like a second
distributed
distributed
thing. We can leave it alone for now.
This loads the
This loads the
policy. Oh, you need a back end though.
if you wanted to like just have a load
if you wanted to like just have a load
everything, right? So it's like args
everything, right? So it's like args
equals load
equals load
config and then
like go
like go
spenser forcing actions to
spenser forcing actions to
be yes. So that is a thing. I thought
be yes. So that is a thing. I thought
that I'd fix
that I'd fix
that. Um it shouldn't be the end binding
that. Um it shouldn't be the end binding
though. It should be the dtype of the
though. It should be the dtype of the
numpy array that you pass to it. Right.
you're doing continuous
you're doing continuous
right or
right or
something. So by default the gymnasium
something. So by default the gymnasium
space is a float 64 and you should
space is a float 64 and you should
double check if uh also numpy zeros
double check if uh also numpy zeros
defaults to float
defaults to float
64 just
multidiscrete end bindings forcing
multidiscrete end bindings forcing
actions to
actions to
be well how's that even possible like
be well how's that even possible like
where are you seeing
where are you seeing
it hang on let's just do this jer
Okay. No. Y second. Let
Okay. No. Y second. Let
me freaking paranoid about every time
me freaking paranoid about every time
something itches like do I have a tip?
So, what's going on?
So, what's going on?
Um, in my GPU drive.py file, Mhm. when
Um, in my GPU drive.py file, Mhm. when
I'm passing in my slice of actions,
it creates this like ghost error where
it creates this like ghost error where
it's assuming I'm passing in well I'm
it's assuming I'm passing in well I'm
passing in I guess a float 32 somehow
passing in I guess a float 32 somehow
and it's only accepting float 64s like
and it's only accepting float 64s like
what do you mean it's only the only way
what do you mean it's only the only way
I was able to it it wouldn't even get to
I was able to it it wouldn't even get to
the binding like endbinding.h each file
the binding like endbinding.h each file
it would just fail immediately in the
it would just fail immediately in the
attempt of calling it. What's the error
attempt of calling it. What's the error
message?
Action tensor passes float 64 parenthesy
Action tensor passes float 64 parenthesy
pass np float 32 buffer. Okay, so that's
pass np float 32 buffer. Okay, so that's
supposed to do the
supposed to do the
opposite. So that's supposed to prevent
opposite. So that's supposed to prevent
you from passing float 64s by mistake.
you from passing float 64s by mistake.
So right now it's only forcing it as if
So right now it's only forcing it as if
if I force the actions to be a float 64
if I force the actions to be a float 64
then it goes through.
then it goes through.
So I mean I have this on my screen here.
So I mean I have this on my screen here.
Incorrect because like it should just be
Incorrect because like it should just be
whatever the type I pass it in in the
whatever the type I pass it in in the
first place. Well the reason we did this
first place. Well the reason we did this
is because like there's this really dumb
is because like there's this really dumb
quirk where like uh so people are used
quirk where like uh so people are used
to torch tensors which default float 32
to torch tensors which default float 32
but if you do numpy it defaults to float
but if you do numpy it defaults to float
64 which will totally screw you in most
64 which will totally screw you in most
cases. So, we just disable float 64. Um,
cases. So, we just disable float 64. Um,
so this is supposed to be doing the
so this is supposed to be doing the
opposite. This is supposed to be
opposite. This is supposed to be
disabling float
64. Is there a reason that it would be I
64. Is there a reason that it would be I
mean, look, it's a it's a check that the
mean, look, it's a it's a check that the
action stride
is size of. Do you have two actions?
is size of. Do you have two actions?
Yes. I wonder if that's why
because multidiscreet so it's two
because multidiscreet so it's two
actions. I wonder if that's why it does
actions. I wonder if that's why it does
it because it's checking the
it because it's checking the
stride and I'm pyra
stride and I'm pyra
stride. This probably gives me bites.
stride. This probably gives me bites.
I couldn't even find where you're this
I couldn't even find where you're this
like error is being tossed.
like error is being tossed.
Line 74.
If you just look for the error string,
If you just look for the error string,
it's in the end binding
file.
The Why does yours look different than
The Why does yours look different than
mine? But wait, are you an M binding
mine? But wait, are you an M binding
right now? Mhm.
Yeah. So, is the file you're in right
Yeah. So, is the file you're in right
now? What file are you in? Ocean and
now? What file are you in? Ocean and
binding.h.
binding.h.
Uh,
what? This should be item size, I
guess. Am I in the wrong file? I'm so
guess. Am I in the wrong file? I'm so
confused.
Maybe I can do item size.
I feel like I'm like looking at a
ghost because in my endbinding file,
ghost because in my endbinding file,
although it claims that error is being
although it claims that error is being
tossed, I don't if I type in command
tossed, I don't if I type in command
float 64, it doesn't exist in my file.
float 64, it doesn't exist in my file.
Huh.
Well, I see what could be an error here.
Well, I see what could be an error here.
So this could just be item
size. I'm pretty sure that would fix it.
give that a
give that a
shot. Um, okay. Well, step one is this
shot. Um, okay. Well, step one is this
is weird because I don't even see the
is weird because I don't even see the
thing you're looking at in terms of my
files should be there. does not sync my
files should be there. does not sync my
I'll sink my fork again. But I mean, I
I'll sink my fork again. But I mean, I
can push this as well if you want this
can push this as well if you want this
item size change.
I'm in the middle of packing up the
I'm in the middle of packing up the
clean puff pile,
though. One sec. Because like this is
though. One sec. Because like this is
just like really trippy to me because I
just like really trippy to me because I
don't even understand where this is.
Wait, what? It just like magically
Wait, what? It just like magically
appeared,
dude. That is like real
weird. The version of I must have had a
weird. The version of I must have had a
different All right. Well, let's try
different All right. Well, let's try
again. See what happens.
This may have been like I just had a a a
This may have been like I just had a a a
dev that was just like that didn't exist
dev that was just like that didn't exist
right before I pulled it. I don't
know. Find out what happens
know. Find out what happens
though. Okay. So, what was the fix you
though. Okay. So, what was the fix you
did? You changed it to item size. I can
did? You changed it to item size. I can
push it for
you. I didn't test it, but
Okay, we'll try this. Okay.
And then yeah, my plan is to attempt to
And then yeah, my plan is to attempt to
get the version of the clean puff roll
get the version of the clean puff roll
pretty well that we want to ship today
pretty well that we want to ship today
and to have entry points and docks and
and to have entry points and docks and
all of it
all of it
done. However much coffee that takes.
negative. Still
negative. Still
angry. Did it actually
rebuild? I'll delete the build folder.
Man, it is crazy how bad like release
Man, it is crazy how bad like release
work just messes with me. It's like I
work just messes with me. It's like I
woke up feeling like good and ready to
woke up feeling like good and ready to
like finish this stuff and as soon as I
like finish this stuff and as soon as I
like look at it, I'm just like
like look at it, I'm just like
bored. is why it's it's like it's like
bored. is why it's it's like it's like
this is why it's so important that like
this is why it's so important that like
if I don't get a release done in like a
if I don't get a release done in like a
week or whatever, it's it's going to be
week or whatever, it's it's going to be
a month because like of how slow
a month because like of how slow
everything gets. I'm just going to try
everything gets. I'm just going to try
to like blaze through this today as much
to like blaze through this today as much
as I possibly can and just like have
as I possibly can and just like have
something damn
shippable cuz otherwise it's just like
shippable cuz otherwise it's just like
it's just ridiculous.
your goal is to get all this kind of
your goal is to get all this kind of
early stuff done and then still run
early stuff done and then still run
experiments.
experiments.
Yeah, I think that the main things I
Yeah, I think that the main things I
have to finish, right? So, I have to
have to finish, right? So, I have to
finish cleaning. I This is kind of part
finish cleaning. I This is kind of part
documentation in a sense cuz like me
documentation in a sense cuz like me
cleaning this up makes the docs really
cleaning this up makes the docs really
easy. I think the docs are literally
easy. I think the docs are literally
going to take me like an hour once I
going to take me like an hour once I
have the demo file cleaned up because
have the demo file cleaned up because
there's going to be nothing to document.
there's going to be nothing to document.
It's going to be so easy.
It's going to be so easy.
Um, so I want to do that. I want to have
Um, so I want to do that. I want to have
the docs. I got to get the package built
the docs. I got to get the package built
right. And then we have to dial in the
right. And then we have to dial in the
final sweep defaults that we're going to
final sweep defaults that we're going to
ship, which I've been running
ship, which I've been running
experiments for in the background over
experiments for in the background over
the last few days.
the last few days.
Um, we have to like go through the old
Um, we have to like go through the old
M. Honestly, I think I'm going to just
M. Honestly, I think I'm going to just
delete half of the so-called supported M
delete half of the so-called supported M
that aren't really supported because
that aren't really supported because
nobody uses them and they just like add
nobody uses them and they just like add
bloat. Um, like all the old shitty ones
bloat. Um, like all the old shitty ones
that you'd have to be insane to want to
that you'd have to be insane to want to
use anyways will just delete. And uh
use anyways will just delete. And uh
we'll make like Atari work, we'll make
we'll make like Atari work, we'll make
Proctton work, we'll make like the
Proctton work, we'll make like the
classic ones that people want to work,
classic ones that people want to work,
right? And you know, maybe we'll ship
right? And you know, maybe we'll ship
like an Atari baseline as well from a
like an Atari baseline as well from a
sweep.
sweep.
Um yeah, and then other than that, I
Um yeah, and then other than that, I
it's just like little bits of clean up
it's just like little bits of clean up
here and there, you know, like make sure
here and there, you know, like make sure
all the M's are on the new bindings,
all the M's are on the new bindings,
make sure all the logs are good, make
make sure all the logs are good, make
sure all the M's have like baselines,
sure all the M's have like baselines,
all that crap.
Any
Any
luck? No. I'm going to use one of the
luck? No. I'm going to use one of the
other things in
the I think it's just like a how I'm
the I think it's just like a how I'm
passing it. I think I just need to give
passing it. I think I just need to give
it
the right
thing. But at least at this point, I can
thing. But at least at this point, I can
actually like work with it because
actually like work with it because
before
Well, I Yeah, you're not. This is stuff
Well, I Yeah, you're not. This is stuff
that's going to confuse you though.
that's going to confuse you though.
Like, well, maybe not. You've done
Like, well, maybe not. You've done
enough system dev. So I mean the issue
enough system dev. So I mean the issue
here right is that like you can't
here right is that like you can't
introspect types in C right so the idea
introspect types in C right so the idea
was to the only thing you can do is you
was to the only thing you can do is you
can check the bite size. So if you pass
can check the bite size. So if you pass
me something that's not four
me something that's not four
bytes, I it should complain.
You see?
You see?
Well, I'm just saying at least I can
Well, I'm just saying at least I can
like work with it. Before it was like
like work with it. Before it was like
saying an error existed on a code that
saying an error existed on a code that
didn't exist in my file and must have
didn't exist in my file and must have
compiled it and then pulled or
compiled it and then pulled or
something. Yeah, I must have compiled an
something. Yeah, I must have compiled an
old version, pulled, changed it, and
old version, pulled, changed it, and
then
then
even so apparently even if you run force
even so apparently even if you run force
on setup.pay Pi does not over it doesn't
on setup.pay Pi does not over it doesn't
overwrite. You have to actually delete
overwrite. You have to actually delete
the build folder. Yep.
the build folder. Yep.
I might have a work around for that. I
I might have a work around for that. I
have to figure out I don't know if just
have to figure out I don't know if just
including the the extra files, the
including the the extra files, the
source files would fix that. The thing
source files would fix that. The thing
is like you could technically have an
is like you could technically have an
arbitrary number ofh files. So like
arbitrary number ofh files. So like
yeah, but I mean I think we can at least
yeah, but I mean I think we can at least
get your main one. And if you decide to
get your main one. And if you decide to
write extra files for no reason, that's
write extra files for no reason, that's
kind of your
kind of your
problem.
Anything else I can do up here or can I
Anything else I can do up here or can I
get back to doing dish? No, you can go
get back to doing dish? No, you can go
back to doing your thing. I I'll figure
back to doing your thing. I I'll figure
this out from here. All right. See you,
Spencer. Who's yacking at me in
Spencer. Who's yacking at me in
development? Oh, no.
there. All right, one second. Let me
there. All right, one second. Let me
check a couple messages.
Oh, perfect. Uh, I'm going to have to
Oh, perfect. Uh, I'm going to have to
take a freight delivery
take a freight delivery
soon. I think what we'll do is we'll
soon. I think what we'll do is we'll
just
just
11. I will keep on this for a bit till I
11. I will keep on this for a bit till I
have to take freight. Then I get my new
have to take freight. Then I get my new
chair.
or
Anthony. few questions for you
hopefully. Yeah, go for
it. Are you in like a garage that looks
it. Are you in like a garage that looks
like a gym behind you? I'm in the puffer
like a gym behind you? I'm in the puffer
training
training
facility. It is for training agents and
facility. It is for training agents and
for training
for training
myself. So, servers go on the racks in
myself. So, servers go on the racks in
the back. Uh we are in the process of
the back. Uh we are in the process of
moving our servers here and also getting
moving our servers here and also getting
some new ones. And then yes, we also
some new ones. And then yes, we also
have some gym equipment for training of
me. It's a warehouse. This would be a
me. It's a warehouse. This would be a
ridiculously large garage.
It's pretty nice because like I get so
It's pretty nice because like I get so
much more exercise in having this
much more exercise in having this
literally be in the same room because I
literally be in the same room because I
can just decide like, eh, all right,
can just decide like, eh, all right,
I've done a bit of work. Let me go clear
I've done a bit of work. Let me go clear
my head for a second and just do this.
There you
There you
go. Robotics PhD student in my second
go. Robotics PhD student in my second
year. I feel the urge to go the full
year. I feel the urge to go the full
Unix
Unix
setup. I don't want to give up
setup. I don't want to give up
Windows. Then use WSL if you have to.
Windows. Then use WSL if you have to.
I've gotten I got sick of it and I just
I've gotten I got sick of it and I just
ditched Windows and I deal with, you
ditched Windows and I deal with, you
know, the occasional Linux
know, the occasional Linux
bugs.
bugs.
Um, but if you don't, just use WSL if
Um, but if you don't, just use WSL if
you don't want to do
that.
that.
Seamless. Well, it's a little different
Seamless. Well, it's a little different
if you're on a laptop
if you're on a laptop
primarily. Linux on laptop, there's
primarily. Linux on laptop, there's
always freaking issues. Heck, I put
always freaking issues. Heck, I put
Linux on my new Razer laptop and I've
Linux on my new Razer laptop and I've
barely used it cuz well, one, I have
barely used it cuz well, one, I have
this set up, but also it's got trackpad
this set up, but also it's got trackpad
issues, the drivers.
But honestly,
But honestly,
like if you want to keep both, what I
like if you want to keep both, what I
would suggest you do is you just get you
would suggest you do is you just get you
get an extra box. Well, I guess it kind
get an extra box. Well, I guess it kind
of depends on budget and stuff, but like
of depends on budget and stuff, but like
if your lab gets you a box or whatever,
if your lab gets you a box or whatever,
you just have a separate box that just
you just have a separate box that just
has full Linux or even a server build of
has full Linux or even a server build of
Linux, doesn't matter. And then you just
Linux, doesn't matter. And then you just
like run your training runs there,
like run your training runs there,
sshed. So like I have this box here.
sshed. So like I have this box here.
This box has a 4090 which is like nice
This box has a 4090 which is like nice
for me testing stuff locally, but I
for me testing stuff locally, but I
don't really train stuff on this, right?
don't really train stuff on this, right?
Like other than like doing perf tests
Like other than like doing perf tests
and things. I do most of the training
and things. I do most of the training
runs sshed into any of our uh our server
runs sshed into any of our uh our server
boxes. Like we've
boxes. Like we've
got it set, we've got this set up
got it set, we've got this set up
here. These machines are actually going
here. These machines are actually going
to get moved to right behind me from
to get moved to right behind me from
where they are right now. Um yeah and we
where they are right now. Um yeah and we
just do our dev like we just do our
just do our dev like we just do our
experiments as stitched into these
Google Slides, Google like Google Slides
Google Slides, Google like Google Slides
or Google
or Google
Docs. I haven't used Word in like I
Docs. I haven't used Word in like I
don't think I've used Word since I was
don't think I've used Word since I was
like
14. Quicks quick. That's an amusing
14. Quicks quick. That's an amusing
name.
Welcome. All right. So, this actually
Welcome. All right. So, this actually
works
works
here. This train
here. This train
correctly. Yeah, this
correctly. Yeah, this
does. So, I mean, this isn't bad. We
does. So, I mean, this isn't bad. We
like can clean this up a little bit and
like can clean this up a little bit and
then just have
then just have
like the load stuff split up a little
I know. I don't really miss
I know. I don't really miss
like having standalone Word apps or
like having standalone Word apps or
what? Like it's kind of just bad.
what? Like it's kind of just bad.
Anyways, if you want like a non-web
Anyways, if you want like a non-web
local option though, I used Libre for a
local option though, I used Libre for a
little bit in undergrad. Was like fine
little bit in undergrad. Was like fine
because I didn't have to write that
because I didn't have to write that
much.
much.
Um, well, that's not totally true. I
Um, well, that's not totally true. I
kind of did do a bit of write, a fair
kind of did do a bit of write, a fair
bit of writing in
bit of writing in
undergrad, but it wasn't like technical
undergrad, but it wasn't like technical
writing. So, like you didn't really need
writing. So, like you didn't really need
to format [ __ ] He just needed to
write. Okay. So, this needs to be loaded
write. Okay. So, this needs to be loaded
in here. So it should be args.
Not what I
wanted. doing something screwy.
200 lines of
200 lines of
code used to scare me back then looks
code used to scare me back then looks
scarier now. Look. Okay, this config
scarier now. Look. Okay, this config
loading stuff. I hate having 200 lines
loading stuff. I hate having 200 lines
of config more than any of my users do.
of config more than any of my users do.
I've been trying to cut this thing down
I've been trying to cut this thing down
a
a
ton, but it's actually pretty damn
ton, but it's actually pretty damn
complicated what it has to do. It's not
complicated what it has to do. It's not
just like it's not like a oneline load
just like it's not like a oneline load
thing. This thing actually gives you let
thing. This thing actually gives you let
me see if it works right
me see if it works right
now. Okay, look at that. So this thing
now. Okay, look at that. So this thing
gives you this whole menu of args. This
gives you this whole menu of args. This
thing is dynamically
thing is dynamically
populated based on the end that's
populated based on the end that's
specified. So the default is breakout
specified. So the default is breakout
here. So this has this frame skip param
here. So this has this frame skip param
because breakout has frame skip. All
because breakout has frame skip. All
right. Right? So you have your full help
right. Right? So you have your full help
menu. But I can
do I can do
this. And now look at this. I have snake
this. And now look at this. I have snake
ends. So dynamic help menu populated by
ends. So dynamic help menu populated by
config
files. So I had to do some extra stuff
files. So I had to do some extra stuff
for that.
But it means that you if you need help,
But it means that you if you need help,
if you don't know what the args are or
if you don't know what the args are or
whatever, you immediately have access to
everything. Oh, hey, welcome YouTube
everything. Oh, hey, welcome YouTube
folks. Fair on
folks. Fair on
today. For anyone new here, this is
today. For anyone new here, this is
ultra high performance reinforcement
ultra high performance reinforcement
learning dev and research done live. Uh,
learning dev and research done live. Uh,
this is all open source and free at
this is all open source and free at
puffer.ai. You can play some of the
puffer.ai. You can play some of the
games. You can watch like the neural
games. You can watch like the neural
nets play some of the games in here as
nets play some of the games in here as
well. And uh you can start on GitHub to
well. And uh you can start on GitHub to
support and you can join the discord if
support and you can join the discord if
you want to get involved with open
you want to get involved with open
source contribution. It's a great way to
source contribution. It's a great way to
get into
get into
RL. And what we're doing these this
RL. And what we're doing these this
week, this is all like pre-release
week, this is all like pre-release
packaging work because um we're leading
packaging work because um we're leading
up to our next big milestone release. Uh
up to our next big milestone release. Uh
so there's like a lot of just little
so there's like a lot of just little
fiddly bits of dev work around that. But
fiddly bits of dev work around that. But
as soon as this is released, the plan is
as soon as this is released, the plan is
that uh I'm going to be doing like a ton
that uh I'm going to be doing like a ton
of just hardcore algorithm dev and just
of just hardcore algorithm dev and just
trying to really figure out how we push
trying to really figure out how we push
RL to be well to be what it should have
RL to be well to be what it should have
been for the last 5
years. Okay. So, what we're going to do
years. Okay. So, what we're going to do
here, the point is that we add entry
points. Can you do
points. Can you do
like
like
train? I wonder if this like works.
is so freaking
slow. So this is how long it takes
slow. So this is how long it takes
Python to do anything. uh when it's
Python to do anything. uh when it's
literally it's not even installing
literally it's not even installing
anything because everything's already
anything because everything's already
pre-installed. I I mean I should just be
pre-installed. I I mean I should just be
using
UV. I haven't had time to fully
UV. I haven't had time to fully
integrate like I haven't really had time
integrate like I haven't really had time
to integrate UB yet.
It makes like some dumb opinionated
It makes like some dumb opinionated
choices about how you should do dev. And
choices about how you should do dev. And
there is my
there is my
freight. I'm going to go get this chair
freight. I'm going to go get this chair
delivered. And uh then I will be back
delivered. And uh then I will be back
here with more dev. You streaming all
here with more dev. You streaming all
day? Yes. as soon as I get um as soon as
day? Yes. as soon as I get um as soon as
I go get this chair
I go get this chair
delivered where I woke up. And so I'm
delivered where I woke up. And so I'm
streaming. I'm about to go and get What
streaming. I'm about to go and get What
time do you wake up? I wake up usually
time do you wake up? I wake up usually
between like between 7 and 8, but then
between like between 7 and 8, but then
like I go run. I get a little bit of
like I go run. I get a little bit of
exercise. I do other stuff like several
exercise. I do other stuff like several
days of the week. So it takes me a while
days of the week. So it takes me a while
to get here. I don't know. The hour the
to get here. I don't know. The hour the
work hours honestly aren't that crazy at
work hours honestly aren't that crazy at
the moment. Like releases always are
the moment. Like releases always are
just a drag. So I always work fewer
just a drag. So I always work fewer
hours like around release. Anyways, let
hours like around release. Anyways, let
me go get this chair and then uh I will
me go get this chair and then uh I will
be back in a
Okay, we're back here.
Okay, we're back here.
So, let me at least fix the camera setup
So, let me at least fix the camera setup
for now. But uh I I'm like sitting way
for now. But uh I I'm like sitting way
too low down in this
too low down in this
thing. Do like this for
now. Yeah.
I uh I do like this chair, but I
I uh I do like this chair, but I
neglected to
consider if it doesn't swivel. It's kind
consider if it doesn't swivel. It's kind
of tough to put it in front of a
of tough to put it in front of a
desk. Yeah, this keyboard's super high
up. How comfortable I can get thing.
That would be a keyboard on lap angle
That would be a keyboard on lap angle
for
now. It is very comfortable
now. It is very comfortable
though. I'm just down too low.
I'm trying to think what I want to do
I'm trying to think what I want to do
for now to make this like reasonable.
This isn't
terrible. Well,
terrible. Well,
whatever. We will um we'll try it like
whatever. We will um we'll try it like
this for now and then we'll see how this
this for now and then we'll see how this
goes.
I think realistically I'm just going to
I think realistically I'm just going to
get like um like a 4 in swivel base to
get like um like a 4 in swivel base to
put under this thing and then I'll be
good. Oh, I am sorry.
Hey keyboard on
lap.
lap.
Nah, do it
either. Well, I'll just deal with it for
either. Well, I'll just deal with it for
now. It's just it's like very very
now. It's just it's like very very
clearly 4 in too low.
One thing I am going to do is bump this
One thing I am going to do is bump this
up because super far from
monitor and I should probably do the mic
monitor and I should probably do the mic
a little bit as well. Yeah, we'll do
a little bit as well. Yeah, we'll do
that.
Okay. So, plan for now is get the uh the
Okay. So, plan for now is get the uh the
entry points all set
entry points all set
up
up
and see how uh how the train file looks
and see how uh how the train file looks
after we do that.
I can tell this is going to be good,
I can tell this is going to be good,
though. It's kind of crazy how big of a
though. It's kind of crazy how big of a
difference it made in uh in Florida when
difference it made in uh in Florida when
I like replace the office chair with a
I like replace the office chair with a
lounge
chair. It's just like immediately the
chair. It's just like immediately the
desire to just get up constantly and not
desire to just get up constantly and not
be at the screen. It just goes away.
So this now
runs. How do you do like
runs. How do you do like
multi-word console
multi-word console
scripts? This doesn't work.
I already did
This try it with hypens for now.
Then we'll see if uh I can get spaces to
Then we'll see if uh I can get spaces to
work at some point.
still building.
Okay. So, this works with um without the
Okay. So, this works with um without the
hyphen. So, what we're just going to do
hyphen. So, what we're just going to do
is we're going to like let's just define
is we're going to like let's just define
them all and then we shouldn't have to
them all and then we shouldn't have to
keep waiting for this bloody thing to
keep waiting for this bloody thing to
reinstall every time.
Okay. So, this is like pretty much what
Okay. So, this is like pretty much what
we'd want to expose, right?
And now when we edit the code, it'll
And now when we edit the code, it'll
just edit the uh it'll update in place
just edit the uh it'll update in place
and we won't have to keep
and we won't have to keep
rebuilding. I think what this
rebuilding. I think what this
technically does is it just generates
technically does is it just generates
you
you
um it probably just generates like a dot
um it probably just generates like a dot
file or something somewhere.
What time is it for you? Noon.
So this should run
eval but it runs training for some weird
reason. Is it running training?
Oh yeah, it is running printing because
Oh yeah, it is running printing because
I have experiment
here. So this should now run
here. So this should now run
eval. There we
eval. There we
go. Except it's
go. Except it's
uh not doing anything which is a little
awkward. Extra window for this.
Okay. I do have to have the font super
Okay. I do have to have the font super
big here though because I have a little
big here though because I have a little
bit of a glare and I'm sitting uh way
bit of a glare and I'm sitting uh way
too far away from the
too far away from the
monitor. I'll have to order something
monitor. I'll have to order something
for
that and probably get like a just
that and probably get like a just
I need like a 4 inch thick lazy Susan
I need like a 4 inch thick lazy Susan
pretty much to just stick this chair on
pretty much to just stick this chair on
top
Oh, So, we do just get a clean break
point.
point.
True.
True.
Okay. So, rerender
Okay, so we get actions,
right? Oh, something just got
right? Oh, something just got
unindented, didn't
unindented, didn't
it? Yeah, something got
unindented. Wait, what?
Wow. Uh, am I just not seeing it
Wow. Uh, am I just not seeing it
here? It's like
here? It's like
looping without stepping the
end. Okay. All
end. Okay. All
true
render.
Okay. So, no grad
Okay. So, no grad
here. Sample
here. Sample
logits.
logits.
Reshape. And it just freaking skips the
Reshape. And it just freaking skips the
rest of
rest of
this. How does it skip the rest? Like,
this. How does it skip the rest? Like,
how's it skipping this?
That's bizaro,
right? Oh no, there it just
stepped. Wait, why the heck is the
stepped. Wait, why the heck is the
puffer fish like
The puffer's way up
top.
top.
Oh, hang on. It's
Oh, hang on. It's
[Music]
[Music]
because I see
because I see
it. This goes here.
There we
go. There. There we go. Now this works.
go. There. There we go. Now this works.
We can just call paparel
We can just call paparel
eval and this will load
eval and this will load
whatever.
whatever.
Okay. Do papel train.
We should be able to
load. Was it
load. Was it
load model
path? Okay. So, here's the these are not
path? Okay. So, here's the these are not
good hypers or it's like not running
good hypers or it's like not running
long enough. one of the
two. So what we can do
is load model
is load model
app
63. So now we actually can just load in
63. So now we actually can just load in
the model we just trained which Not a
the model we just trained which Not a
great
great
model, but you know, it does
okay. Pretty
decent. Now, we just need
decent. Now, we just need
profile, export, and sweep to
profile, export, and sweep to
work. And uh yeah, we should be
work. And uh yeah, we should be
good. Profile, export, and sweep.
The way that we do
this, we get args as load
this, we get args as load
config. Then we take this
config. Then we take this
stuff. We put this here.
this
this now. Sweep is probably still going
this now. Sweep is probably still going
to take Neptune, right? So
paparel item size did
paparel item size did
work doesn't overwrite the build pile.
work doesn't overwrite the build pile.
Yep. I'm trying to figure out why that
Yep. I'm trying to figure out why that
is, Spencer. But uh yeah, it's kind of
gross. Oh, wait. Even if you delete the
gross. Oh, wait. Even if you delete the
build
build
file doesn't overwrite the build file in
file doesn't overwrite the build file in
Ocean M. Okay, that's
screwy. That's really
gross. We're going to move Neptune
gross. We're going to move Neptune
anyways.
What do we think of this
What do we think of this
though? This sort of a
thing. Can you pass some quarks?
Like if I do like
this, you can pass
this, you can pass
bars. I can do
bars. I can do
like I can do like args is none.
I do think I need to have a way to
I do think I need to have a way to
separate the loading of the back end and
separate the loading of the back end and
the policy which is a little
annoying. Be dropped like a rock.
annoying. Be dropped like a rock.
MISK time is
MISK time is
71. Uh, which
71. Uh, which
MISK? Train MISK or EVAL
MISK? Uh, logging Spencer. It's probably
MISK? Uh, logging Spencer. It's probably
logging every tick or some weird
thing. That'd be my initial
guess. Amazon
guess. Amazon
on
on
late
air. Oh yeah, they sell these
Let me uh message
Damn that, man. That's quite the setup.
Damn that, man. That's quite the setup.
Well, I'm about uh the new chair is
Well, I'm about uh the new chair is
about 4 in too low, so I'm like sitting
about 4 in too low, so I'm like sitting
super down here. But
super down here. But
yeah, buffer CLI is not in 20. No, it's
yeah, buffer CLI is not in 20. No, it's
literally being developed right now. And
literally being developed right now. And
literally all it is, it's the same as
literally all it is, it's the same as
just importing the fi importing the file
just importing the fi importing the file
and running the function. It's just to
and running the function. It's just to
give you um the ability to run training
give you um the ability to run training
without having to clone the repo. That's
all cuz people ask for that.
Well, this thing can be like some of
Well, this thing can be like some of
these are pretty easy to fix if I just
these are pretty easy to fix if I just
do these like one by
do these like one by
one like
one like
[Music]
[Music]
args args of end of name.
Why syntax highlighter still show
this? Oh, you have to do this
dummy. All right. And then
paparel evaluate.
paparel evaluate.
So this is now
just I guess I need like the first
just I guess I need like the first
however many lines of experiment.
It'll probably be something like this.
Okay. So the only thing that I need to
Okay. So the only thing that I need to
figure out now is how I do how I make it
figure out now is how I do how I make it
so you can also pass this thing right
so you can also pass this thing right
without making a total
without making a total
mess and then we will be
good. Let me look at the load functions.
If I don't mind repeating a little
If I don't mind repeating a little
logic, it's easy,
right? Um 2.0 has sweeps, but it doesn't
right? Um 2.0 has sweeps, but it doesn't
have our custom sweeps. It just has
have our custom sweeps. It just has
integration with WandB's existing sweeps
integration with WandB's existing sweeps
method as well as with
method as well as with
carbs. the new protein algorithm and our
carbs. the new protein algorithm and our
new sweep stuff is in dev. Yeah, I mean
new sweep stuff is in dev. Yeah, I mean
our dev cycles are pretty long, right?
our dev cycles are pretty long, right?
Like we only do two to three major
Like we only do two to three major
updates a year. Um it's all open source,
updates a year. Um it's all open source,
so you're free to like grab dev at any
so you're free to like grab dev at any
time and like if you have problems, I
time and like if you have problems, I
will help in Discord. But then this is
will help in Discord. But then this is
also something that we do for companies,
also something that we do for companies,
right? Is like we deliver like the
right? Is like we deliver like the
bleeding edge features from dev like
bleeding edge features from dev like
integrated for people specifically under
integrated for people specifically under
contracts.
So, we keep our dev cycles long and if
So, we keep our dev cycles long and if
you want the stuff that's like leading
you want the stuff that's like leading
edge early in a corporate setting and
edge early in a corporate setting and
pay us for that. Um, otherwise, you
pay us for that. Um, otherwise, you
know, you're more than welcome to like
know, you're more than welcome to like
just jump on the Discord and say like,
just jump on the Discord and say like,
"Hey, I'm trying to build like an end
"Hey, I'm trying to build like an end
for I'm trying to do something for my
for I'm trying to do something for my
project. How do I like pull the latest
project. How do I like pull the latest
stuff?" And we'll help you.
Actually, this kind of helps. I can sit
Actually, this kind of helps. I can sit
up like this. This chair is actually big
up like this. This chair is actually big
enough that I can sit cross-legged on
enough that I can sit cross-legged on
it.
in
in
Discord. Yeah. I mean, we're so far
Discord. Yeah. I mean, we're so far
ahead in dev right now. Like, it's
ahead in dev right now. Like, it's
literally our reinforcement learning is
literally our reinforcement learning is
a different field with puffer lab uh
a different field with puffer lab uh
puffer dev versus 20. It's straight up a
puffer dev versus 20. It's straight up a
different field.
slowly piecing it together. It's going
slowly piecing it together. It's going
to be very easy. It's just like there
to be very easy. It's just like there
are a few last annoyances that are like
are a few last annoyances that are like
making stuff confusing, but it's going
making stuff confusing, but it's going
to be very easy.
At least that is my
At least that is my
goal is that this will be See?
So here's the uh the
So here's the uh the
idea is that like we'll just do like
idea is that like we'll just do like
args equals args or load
config. Super maven must know my coding
config. Super maven must know my coding
style
style
because this is not the common way you
because this is not the common way you
would do this.
That's pretty
good. Do the same
good. Do the same
for Well, for sweeps, you don't need to
for Well, for sweeps, you don't need to
be able to
do you don't need to be able to pass a
do you don't need to be able to pass a
vean or a policy for sweeps.
vean or a policy for sweeps.
Do Yeah.
Do you need to be able to pass policy to
Do you need to be able to pass policy to
sweeps?
[Music]
need a policy creator, I guess,
right? Which is not
right? Which is not
like we're going to just leave the
like we're going to just leave the
stupid thing as is for now.
fix the rest of this and not stress over
fix the rest of this and not stress over
the small
stuff. All right.
autotune. Have not used this in forever.
autotune. Have not used this in forever.
So, we'll like
We punt a little tiny bit
here. We can probably still clean
here. We can probably still clean
uh some things up here.
Now you can call this
Now you can call this
yourself. You can call this yourself
yourself. You can call this yourself
just
fine. This still feels like a deep call
fine. This still feels like a deep call
graph, right?
Like, is it just me or does this still
Like, is it just me or does this still
feel like a super deep call
graph? I think the main thing I don't
graph? I think the main thing I don't
like
here, I don't like that train calls
here, I don't like that train calls
experiment like this. Experiment feels
experiment like this. Experiment feels
redundant.
redundant.
I think what this should be
is so
experiment we put this
experiment we put this
here. All
right. So this code is now just here.
right. So this code is now just here.
And then for
sweeps, train of
sweeps, train of
args, back
end, and
end, and
policy. And
policy. And
honestly, do we
honestly, do we
need
need
backends? No. Do we need policy?
backends? No. Do we need policy?
No. So we can literally just
do train of
arts. That's even easier,
right? Boom.
Now this is pretty flat, right? So
Now this is pretty flat, right? So
obviously sweep is going to call
obviously sweep is going to call
train. But then train is this like
train. But then train is this like
relatively short piece of code that just
relatively short piece of code that just
interacts with this clean puffl and
interacts with this clean puffl and
clean puffer is clean puffl. So like in
clean puffer is clean puffl. So like in
terms of the depth of
terms of the depth of
things, this is two layers
things, this is two layers
deep pretty much right. This makes clean
deep pretty much right. This makes clean
puffer. Clean puffer does
training. I think we're happy enough
training. I think we're happy enough
with that.
And then this make policy function
And then this make policy function
literally gets called
once. So this can just go
once. So this can just go
here and this
here and this
takes
takes
vecd driver
N driver N.
Not
bad. Now we get rid of this annoy that
bad. Now we get rid of this annoy that
annoying little make
annoying little make
function. And the only last little
function. And the only last little
annoying function frankly is this down
annoying function frankly is this down
sample
sample
linear which like we'll get something
linear which like we'll get something
for
for
that. And now we are pretty
that. And now we are pretty
flat. Now we still want to do something
flat. Now we still want to do something
with init.
with init.
Where does this get inited? We only call
Where does this get inited? We only call
this here,
this here,
right? Yeah. So this whole init function
right? Yeah. So this whole init function
is just because we have logging done in
is just because we have logging done in
clean
clean
puffl. Um we could equally well do this
puffl. Um we could equally well do this
inside of experiment,
inside of experiment,
right? Or inside of our new train
right? Or inside of our new train
rather. Let me just
rather. Let me just
see see what happens.
If I delete
this and then
this and then
here we make
here we make
our trainer.
Config of
Config of
tag. This takes args of tag.
tag. This takes args of tag.
Now run
ID. Yes.
for this.
for this.
Yeah, we don't need this tag in here, do
we? Don't see tag
anywhere. Nope. No
tag. This goes away.
This is just return
logs. Found this game replica cube. Ever
logs. Found this game replica cube. Ever
heard of it? Nope.
Oh, yeah. Yeah, I saw this on uh I saw
Oh, yeah. Yeah, I saw this on uh I saw
this on X,
this on X,
actually. Oh, that's funny. This guy's
actually. Oh, that's funny. This guy's
actually gotten himself
actually gotten himself
uh quite a bunch
uh quite a bunch
of of uh sales, it looks like. Good for
of of uh sales, it looks like. Good for
him.
I play a few games. I try not to too
I play a few games. I try not to too
much though because I try to just get my
much though because I try to just get my
work hours up. But especially around
work hours up. But especially around
releases, it's hard. A lot of the
releases, it's hard. A lot of the
release work is just super
release work is just super
boring. And it's not even like boring
boring. And it's not even like boring
work that I can like sandbag on either,
work that I can like sandbag on either,
right? Like the stuff I'm doing here,
right? Like the stuff I'm doing here,
like making it a little simpler or not
like making it a little simpler or not
as simple is like a huge difference for
as simple is like a huge difference for
usability. It's just freaking
usability. It's just freaking
boring. I want to be back to algorithm
boring. I want to be back to algorithm
dev or like experiments or like
dev or like experiments or like
engineering something, right?
Let me see how bad this is going to look
Let me see how bad this is going to look
if I do it this
way. I think it's like this. And this
way. I think it's like this. And this
gets copied one more time
gets copied one more time
here.
Like so it's something like this.
Turn model
Turn model
path
shutil.copy model
shutil.copy model
path to
path. Why did I do this again?
opinions on Absolute
opinions on Absolute
Zero. That's the uh the new evolutionary
Zero. That's the uh the new evolutionary
thing,
thing,
right? Like you assume I've read it. I
right? Like you assume I've read it. I
haven't. Looks like cool stuff, but like
haven't. Looks like cool stuff, but like
LLM land is LLM land.
I've been stuck doing this release and
I've been stuck doing this release and
that's actually not even necessarily on
that's actually not even necessarily on
the list like the list of papers that I
the list like the list of papers that I
really want to dig
really want to dig
into. It's going to be like you know
into. It's going to be like you know
some searchbased stuff from Uzero. It's
some searchbased stuff from Uzero. It's
going to be like some world model stuff,
going to be like some world model stuff,
some off policy stuff and like whatever
some off policy stuff and like whatever
else Deep Mind is like maybe some
else Deep Mind is like maybe some
algorithm stuff.
We need to copy this at
all. Let's do it like this.
Wait,
Wait,
what? No, it's
return turn model path.
Oh, and then I actually do I have run
ID? Need this for checkpoint anyways.
All
right. So now we
right. So now we
have Yeah, this doesn't get used
have Yeah, this doesn't get used
anywhere else.
These can get pasted.
These can get pasted.
This is a net
w. Okay. Neptune goes here.
lost and offline. This is super annoying
lost and offline. This is super annoying
to sync. So, we're just going to do
this. This
All right. So, what is uh what did I
All right. So, what is uh what did I
break
here parenthesis?
What did I forget to
close? Not seeing it.
Oh,
bracket. Have to close this.
Okay. So, if we can get this to be like
Okay. So, if we can get this to be like
a
a
reasonable size piece of
reasonable size piece of
code, we will have really cut down on
code, we will have really cut down on
the uh the function bloat here.
Does it make sense to have
um a
um a
log
log
class? It probably does, doesn't it?
Yeah, it's Python.
Yeah, it's Python.
Python. You do it that way. Fine. Let me
Python. You do it that way. Fine. Let me
try it.
breakout also just dropped in
breakout also just dropped in
speed. All right, I will
speed. All right, I will
test. That's weird. Something screwed up
then. Is it on debug mode?
then. Is it on debug mode?
It's possible it's compiling a debug
build. I don't freaking know, man. I'll
build. I don't freaking know, man. I'll
fix everything, though.
and we'll fix like this
and we'll fix like this
weird
thing.
Getting somewhere. Now,
Okay. So now we can do like this.
Okay. So now we can do like this.
Get rid of this if
statement. And that's now something
statement. And that's now something
that's like kind of
reasonable here.
I mean that's getting to be close
to and then you just do like this right
to and then you just do like this right
run ID is logger run I do.
Okay, so we load the config, we load the
Okay, so we load the config, we load the
end, we load the policy, we have a
logger, make some args, we instantiate,
logger, make some args, we instantiate,
make a puffer, whatever.
Eval we
train do this. We do this. We do this.
train do this. We do this. We do this.
Cool. That seems a lot simpler,
right? And I can even do this. So I can
right? And I can even do this. So I can
give you
I don't like that.
Yeah, this is it's okay. I think it's
Yeah, this is it's okay. I think it's
okay. Have like
this. Oh yeah. 1086 lines through a
this. Oh yeah. 1086 lines through a
little
little
bit. I think we can get rid of some of
bit. I think we can get rid of some of
it maybe.
Oh, this has this calls a
Oh, this has this calls a
net net wand to be doesn't
net net wand to be doesn't
it? Missed
that. We'll get to that.
All
right. Multiple values for run ID.
right. Multiple values for run ID.
Really?
I guess cuz you can pass a run
I guess cuz you can pass a run
ID. The thing
This thing run ID.
Okay, so we're back to this
Okay, so we're back to this
training. This is
nice. We'll have to fix a few like
nice. We'll have to fix a few like
little things.
little things.
Um, I'm
Um, I'm
mostly Let me see if like layoutwise I'm
mostly Let me see if like layoutwise I'm
happy with this or not. I don't think
happy with this or not. I don't think
I'm fully happy with this quite yet.
I'm fully happy with this quite yet.
It's getting there though. It's
It's getting there though. It's
definitely getting there.
The things that I'm annoyed
about. This function is
fine. This is like generally kind of
fine. This is like generally kind of
okay. And there's like sweeps.
I think it's mostly like the
I think it's mostly like the
um the eval load stuff.
Oh, wait. You can
actually you could make the logger
actually you could make the logger
thing. I
guess you could make the logger thing
guess you could make the logger thing
here.
how I want to do this.
We'll do like this, I
guess, and then Download.
Okay, this will look like something like
Okay, this will look like something like
this, I believe.
Okay. So we have use artifact.
Okay. So we have use artifact.
This is resume
must load
must load
ID and
resume. We'll like fix what the resume
resume. We'll like fix what the resume
is as
well. Okay. So we do this. So now we
well. Okay. So we do this. So now we
have data
dur. You just have to
return the whole freaking path, don't
return the whole freaking path, don't
you?
like
this. Okay. So, and now we do
this. Okay. So, and now we do
[Music]
path. This is path.
path. This is path.
Okay. So, assuming I get all of this to
Okay. So, assuming I get all of this to
work as written here, right? Assuming I
work as written here, right? Assuming I
get all this to like to work as it's
get all this to like to work as it's
written here and I just debug all the
written here and I just debug all the
dumb little things. I think this is
dumb little things. I think this is
pretty
pretty
decent. I mean, compared to what I had
decent. I mean, compared to what I had
before, we have entry points. It's
before, we have entry points. It's
importable. It's callable as a script.
importable. It's callable as a script.
Uh you no longer have to read all the
Uh you no longer have to read all the
config like loading crap if you don't
config like loading crap if you don't
want to because like you know you start
want to because like you know you start
reading
reading
here and like the first function
here and like the first function
after after these helpers right the
after after these helpers right the
first real thing here you get is train.
train is this 50
train is this 50
lines
lines
806 45. Okay, so it's like not even 40
806 45. Okay, so it's like not even 40
lines of
lines of
code. Loads config, loads M, loads
code. Loads config, loads M, loads
policy. It calls functions, but they're
policy. It calls functions, but they're
pretty
pretty
flat. Get your logger thing, which is
flat. Get your logger thing, which is
just like super dummy little easy class.
just like super dummy little easy class.
It's in the same file. You can really
It's in the same file. You can really
easily just jump there and see what
easily just jump there and see what
you're looking at. You make the train
you're looking at. You make the train
config make puffer which
config make puffer which
is now stateful and kind of has to be
is now stateful and kind of has to be
because
because
Python I think this is
Python I think this is
fine. You do eval
fine. You do eval
train. You have your
train. You have your
logger. You're
logger. You're
set. It's pretty
decent. I think pretty decent overall.
decent. I think pretty decent overall.
And let's just see how much crap is
And let's just see how much crap is
duplicated. I mean, obviously this
duplicated. I mean, obviously this
little load stuff is going to be
little load stuff is going to be
semi-duplicated,
right? But then aside from
that, it's like pretty
decent. Calls this just calls train in a
loop. Got profile, which probably needs
loop. Got profile, which probably needs
to be updated, but whatever. We don't
to be updated, but whatever. We don't
care that much about this one. We got
care that much about this one. We got
export, we got
autotune, I don't even know if you need
autotune, I don't even know if you need
to be able to do all these things from
to be able to do all these things from
the main script.
Frankly, keep them in there for now. And
Frankly, keep them in there for now. And
then you have your loads. Load m load
then you have your loads. Load m load
policy, load checkpoint, load
config, reasonableish.
Yeah. So, I think we just make
Yeah. So, I think we just make
everything
everything
work and uh we test stuff and we should
work and uh we test stuff and we should
be we should be good with this.
Uh, you need to know steps.
[Music]
[Music]
this.
Fine. We'll do one B
Fine. We'll do one B
after I get this train working. Okay,
after I get this train working. Okay,
train actually runs. Very good.
Try with
Neptune. Tags is bad. Let's fix tags.
This module Neptune sis
Okay, so now we can run.
Then we're going to want eval. So we're
Then we're going to want eval. So we're
going to want to be able to load this
going to want to be able to load this
thing.
And then we do proper
evalu 130.
and it's got what's this use RNN
We don't have a load policy in here.
cuz you didn't call load policy, right?
Okay. So,
like should be able to download
Okay. It's just not in there,
Okay. It's just not in there,
right? No, it's not in there. That's a
right? No, it's not in there. That's a
one v one.
It's a little bit annoying that it just
It's a little bit annoying that it just
kind of doesn't
kind of doesn't
download a
thing. Is this it? No, this isn't it
thing. Is this it? No, this isn't it
either,
right? Not
here. See if this gives you
anything. Attempting to log a
anything. Attempting to log a
type. Read only mode.
Okay. So, you
have hell.
have hell.
Oh, wait. Download destination as
Oh, wait. Download destination as
artifact. File
artifact. File
path
path
model
O126. They
see I did this before. I must have had
see I did this before. I must have had
some rename thing on this.
That was probably what the move was for.
Yeah. So, here's this is what it was
Yeah. So, here's this is what it was
for, right? Is that you copy
for, right? Is that you copy
this and you name it the run
ID? So that way that it actually
like Yeah. Uh so that way it actually
like Yeah. Uh so that way it actually
like uploads it under a reasonable
name. Move it.
Well, I have to rerun training now,
Well, I have to rerun training now,
don't
don't
I? Fine.
Welcome YouTube
folks. Goal at the moment
folks. Goal at the moment
is we just have a nice clean set of
is we just have a nice clean set of
entry points for puffer lab. uh you
entry points for puffer lab. uh you
should be able to like train eval do all
should be able to like train eval do all
your stuff from command line if you just
your stuff from command line if you just
want to like run puffer on one of your
want to like run puffer on one of your
M's or on one of our M's and then you
M's or on one of our M's and then you
will also be able to like import and use
will also be able to like import and use
these if you want a little bit of uh
these if you want a little bit of uh
slightly more granular control and then
slightly more granular control and then
you can of course just edit this file if
you can of course just edit this file if
you are actually a researcher and want
you are actually a researcher and want
full control over
Everything self run ID. This should be
Everything self run ID. This should be
self
dot. Yes.
Okay, so there's a decent
model.
Load ID is
38.
Boom. That easy.
We can make wannabe work real quick as
We can make wannabe work real quick as
well,
valid for
valid for
[Music]
[Music]
resume.
Allow by default. This should be
allow. No attribute run
ID. Okay. Okay. And there now we're
ID. Okay. Okay. And there now we're
tracked with W Okay.
The load ID is right
here. Looks pretty good.
Looks pretty
Looks pretty
good. Do have the ability to save and
good. Do have the ability to save and
load Neptune, save and load
womb. A few other things we need to be
womb. A few other things we need to be
able to do here, but that is uh a very
able to do here, but that is uh a very
solid
solid
start. I don't think where we go from
start. I don't think where we go from
here. I guess I just want to like read
here. I guess I just want to like read
through line by
through line by
line just like maybe from here
down. Here's a restroom real quick. Go
down. Here's a restroom real quick. Go
walk
walk
around. I'll be back in a couple
minutes. And I need to get the damn lazy
minutes. And I need to get the damn lazy
Susan for this thing cuz it's impossible
Susan for this thing cuz it's impossible
to get into this chair.
All
right, we start reading
code. Going to play with this interpret
code. Going to play with this interpret
at some point. Other than
at some point. Other than
that, easy dumb noop class.
Neptune
logger. This is fine.
this. They have a
line. The Neptune
log double
redundant is
redundant is
fine. One B
Fine. Go
Fine. Go
change. Don't save all the code. It's
change. Don't save all the code. It's
huge. Config
tags. I think it's fine.
Log is just
log and file. Log
log and file. Log
artifact.
artifact.
Finish. Then
Finish. Then
download artifactor data der model file
path. Okay.
Training our triple
Training our triple
load followed by logger.
I let you pass your own logger in if you
I let you pass your own logger in if you
want.
want.
Train config
paparl confix is
fine generally is all
good have clean
good have clean
paparel okay all logs
paparel okay all logs
You append to
logs do 100
logs do 100
iterations which is going to be um this
iterations which is going to be um this
is going to be dependent on our final
is going to be dependent on our final
experiment. What we do with this piece,
experiment. What we do with this piece,
we take mean and
we take mean and
log. Do log
log. Do log
again. Append a log like that. The order
again. Append a log like that. The order
is different for
is different for
this. We'll do it this
way.
way.
Yeah, that's good.
Yeah, that's good.
An
eval does have this slightly
eval does have this slightly
janky override, but no big
deal. Reset the end. Now, the one thing
deal. Reset the end. Now, the one thing
I don't like is that load
policy load policy is the thing that
policy load policy is the thing that
sets train of use
sets train of use
RNN, which I I don't like that at all.
If anything, I think that I'd like to do
If anything, I think that I'd like to do
it on load
it on load
config, right?
RNN
class. This is going to be argn name.
We'll put it there if
anywhere until I figure out a better way
anywhere until I figure out a better way
of doing that at
of doing that at
least better than I had before.
least better than I had before.
And so now an
And so now an
eval get the
eval get the
policy which now this can
go. This still kind of just goes here,
go. This still kind of just goes here,
doesn't
it? Do
it? Do
this. Then this is our normal state
this. Then this is our normal state
code. Our save
code. Our save
frames. Few small to-dos.
Got our sweep
code. Target key told time's okay. We
code. Target key told time's okay. We
set up and do our sweep.
profile. We haven't messed with this. We
profile. We haven't messed with this. We
don't care about this. We don't care
don't care about this. We don't care
about this. Load end. Okay. Let's see
about this. Load end. Okay. Let's see
how redundant stuff gets
here. Like a little bit redundant.
sense that we do
this. It's not bad
this. It's not bad
though. We get policy
class. Why do I do this stuff up here?
and do
this. Do like this,
this. Do like this,
right? Way easier.
Okay, now this local rank
thing. We do this on
train. I think we can do this in
train. I think we can do this in
train, right?
Okay. So now that'll always get
called load policy way cleaner.
Then this calls load
checkpoint which is a little weird
checkpoint which is a little weird
because I think we also have
because I think we also have
load we also have try load checkpoint.
So, if I only call this here, I think I
So, if I only call this here, I think I
should just
should just
put I think I just put the code in like
this for
now. But we have load policy here.
This never gets cold.
We don't have a way to
We don't have a way to
resume like an existing experiment. I
guess it's kind of scuff, isn't it?
slightly bigger map. Working on port
slightly bigger map. Working on port
should be sending me more soon.
should be sending me more soon.
Hopefully one is giant.
Hopefully one is giant.
Awesome. I'm working on making the
Awesome. I'm working on making the
release done.
Just get rid of this for now.
I
I
mean, I kind of should have a
resume. I kind of should have a resume,
resume. I kind of should have a resume,
right?
So I guess the way to do this is I just
So I guess the way to do this is I just
I can actually make this easier though,
I can actually make this easier though,
right? So we just go
to like this load policy thing.
Resume
state. It's like
No, this is just args. Hang on. The path
No, this is just args. Hang on. The path
is just the load
path. Load model
path. Wait, we do like optim path.
app
dot. Yeah, we can do something like
dot. Yeah, we can do something like
this,
right?
Eight. Okay.
It's going to be like something like
this. Okay. Okay. And then what we
do to flow this thing
We do now load
policy. That's still awkward as hell,
policy. That's still awkward as hell,
isn't it?
I mean
realistically like realistically this
realistically like realistically this
gets called once. So like
Cool.
Cool.
So now I think we have
everything.
Cuz does it make
sense? Hang on. Does it make more sense
sense? Hang on. Does it make more sense
to have this clean puffer
load? I don't think so. Right.
The thing is like this load function
The thing is like this load function
also gives
you it's both like getting the class and
you it's both like getting the class and
then potentially loading weights for
then potentially loading weights for
you.
It's irritating because like you You
It's irritating because like you You
don't want to have to make you don't
don't want to have to make you don't
want to make one of these at evil time,
want to make one of these at evil time,
right? I think it's better to just
like Damn, I mean, it's like awkward is
like Damn, I mean, it's like awkward is
the thing. It's just It's awkward that
the thing. It's just It's awkward that
you
can't use the same loading
Okay. What if we actually keep this
It's like it's irritating because you
It's like it's irritating because you
have like the downloading, you have
have like the downloading, you have
local stuff, you got like a lot of
local stuff, you got like a lot of
different things to consider here. I
different things to consider here. I
want to make it not confusing.
I think we uh I think I'm going to go
I think we uh I think I'm going to go
nuts if I keep looking at this. I think
nuts if I keep looking at this. I think
I'm just going to do it this way for
now. Okay. So, if I just say we're going
now. Okay. So, if I just say we're going
to do it this
to do it this
way, write a reasonable code size again.
way, write a reasonable code size again.
The load is not
awful. Hang on. This still doesn't load.
awful. Hang on. This still doesn't load.
It still didn't do it.
Oh, no. I
Oh, no. I
did. Yeah, I did.
Okay. So, this is like somewhat
Okay. So, this is like somewhat
janky. Not that bad,
janky. Not that bad,
though. I'm sick of looking at it. So,
though. I'm sick of looking at it. So,
let's just get this thing working
let's just get this thing working
now. Start running some tests.
expected all temperatures on this. Get
expected all temperatures on this. Get
out of here.
How is this still not any good?
Okay.
Hey
Hey
Maxwell, passionate about electronics
Maxwell, passionate about electronics
and artificial intelligence is to build
and artificial intelligence is to build
a career that combines the two buildings
a career that combines the two buildings
into one
into one
profession. Kindly guide me on what I
profession. Kindly guide me on what I
should
should
focus. Well, that's going to depend very
focus. Well, that's going to depend very
well uh you know how far along you are.
well uh you know how far along you are.
What book should I read? How to create
What book should I read? How to create
an effective road
map professional
map professional
expert would mean a lot.
So, electronics and
AI. I mean, hardware and AI generally is
AI. I mean, hardware and AI generally is
robotic
robotic
stuff.
stuff.
Um, but I don't know if you mean like
Um, but I don't know if you mean like
that's more
I mean, there's all sorts of stuff in
I mean, there's all sorts of stuff in
that, man. Like, there's AI used being
that, man. Like, there's AI used being
used for chip design right now, right?
used for chip design right now, right?
That's like right up your alley. That
That's like right up your alley. That
would be right up your alley there. Um,
would be right up your alley there. Um,
that's probably going to keep increasing
that's probably going to keep increasing
and there's going to be more of that in
and there's going to be more of that in
the future.
Um, you kindly you kind of just have to
Um, you kindly you kind of just have to
learn both things and then look for
learn both things and then look for
opportunities, right? like I'm not like
opportunities, right? like I'm not like
I don't do electronics so I'm not going
I don't do electronics so I'm not going
to be able to tell you what the best
to be able to tell you what the best
opportunities are for overlap there.
opportunities are for overlap there.
Right? It's like you kind of you have to
Right? It's like you kind of you have to
kind of be one of the only people that's
kind of be one of the only people that's
doing two things in order
doing two things in order
to be able to see the opportunities
to be able to see the opportunities
though those are pretty that's like
though those are pretty that's like
probably a more common overlap um than
probably a more common overlap um than
many other things.
Yeah, I'd have to know like you like you
Yeah, I'd have to know like you like you
could be anywhere from high school to
could be anywhere from high school to
like grad school to like you know midway
like grad school to like you know midway
through career and wanting to do
through career and wanting to do
something new. So like the answer is
something new. So like the answer is
kind of going to depend a heck of a lot
kind of going to depend a heck of a lot
on that. Generally though like if you
on that. Generally though like if you
have some base background uh of course
have some base background uh of course
work some like pretty minimal base
work some like pretty minimal base
background um on the research side of
background um on the research side of
what I do like you start building
what I do like you start building
projects and reading papers and just
projects and reading papers and just
like the way that you learn to do
like the way that you learn to do
research is to do research. Uh that's
research is to do research. Uh that's
true of many
things. Like I don't have a reading list
things. Like I don't have a reading list
for you because I've literally never
for you because I've literally never
read an AI textbook.
It's just not like a particularly
It's just not like a particularly
effective way to learn
stuff. I mean what I did is I read a
stuff. I mean what I did is I read a
bunch of papers. I implemented a bunch
bunch of papers. I implemented a bunch
of projects. I started doing my own
of projects. I started doing my own
research that like you know you take an
research that like you know you take an
existing thing. Oh, what if I did it
existing thing. Oh, what if I did it
like this other way instead? And then
like this other way instead? And then
from there, you know, as I got better, I
from there, you know, as I got better, I
started instead of doing that, it's like
started instead of doing that, it's like
instead of what if this but that, it's
instead of what if this but that, it's
like what if entirely new thing and then
like what if entirely new thing and then
try it, build it, see if it like helps.
try it, build it, see if it like helps.
And you just gain more and more
And you just gain more and more
independence and autonomy and uh in your
independence and autonomy and uh in your
work in the process of doing
that. So yeah, give me some more
that. So yeah, give me some more
details. I'll give you some better
details. I'll give you some better
advice.
Yeah. So, this ended up being on CPU for
Yeah. So, this ended up being on CPU for
some dumb reason.
probably
Thank you for answering me. I mean, I
Thank you for answering me. I mean, I
didn't give you a great answer. Like, I
didn't give you a great answer. Like, I
kind of would need to like I'm going to
kind of would need to like I'm going to
give you very different advice if you
give you very different advice if you
tell me like you're in high school
tell me like you're in high school
versus like you have some background in
versus like you have some background in
some other thing and you're trying to
some other thing and you're trying to
like pivot, right? Like I get people
like pivot, right? Like I get people
that ask me for things that are very
that ask me for things that are very
very different points in life and like
very different points in life and like
have very different base levels of
have very different base levels of
experience.
interest in learning RL but have no
interest in learning RL but have no
background in AI. Prefer to avoid heavy
background in AI. Prefer to avoid heavy
theory. Generally in AI like it's better
theory. Generally in AI like it's better
to have some math than no math. Um at
to have some math than no math. Um at
least you got to understand what a
least you got to understand what a
partial derivative is and you got to be
partial derivative is and you got to be
comfortable working with matrices and
comfortable working with matrices and
tensors. Um my own approach to AI is
tensors. Um my own approach to AI is
like actually very like I do very little
like actually very like I do very little
math in what I do. I mean lately I've
math in what I do. I mean lately I've
had to do a bit more of it and I don't
had to do a bit more of it and I don't
like it just takes me longer because I
like it just takes me longer because I
haven't focused on that. But um I still
haven't focused on that. But um I still
get it done.
get it done.
if you want um if like you kind of have
if you want um if like you kind of have
to pick, right? Like you have to either
to pick, right? Like you have to either
go engineering heavy or math heavy um if
go engineering heavy or math heavy um if
you're not just one of the people who
you're not just one of the people who
can do both.
can do both.
Um I'm more engineering heavy and that
Um I'm more engineering heavy and that
just means like do stuff, right? The
just means like do stuff, right? The
most effective way to get started is to
most effective way to get started is to
get started. Like pick a thing that you
get started. Like pick a thing that you
can build and build it,
can build and build it,
right? And like learn what you need to
right? And like learn what you need to
do along the way to do that. Don't pick
do along the way to do that. Don't pick
like when you're new, you don't want to
like when you're new, you don't want to
pick some like ridiculously ambitious
pick some like ridiculously ambitious
thing that you're not going to be able
thing that you're not going to be able
to actually
to actually
complete.
complete.
Um, here I actually did like a a very
Um, here I actually did like a a very
dumb electronics AI thing when I was I
dumb electronics AI thing when I was I
don't know
16.
16.
Uh, is
it the site still work?
it the site still work?
Yeah. All right. Here I did this in like
Yeah. All right. Here I did this in like
I don't know a few
I don't know a few
days. I just
like I wrote up some like if you call
like I wrote up some like if you call
this is a schematic. It's a schematic
this is a schematic. It's a schematic
and like I wired some basic flex sensors
and like I wired some basic flex sensors
to an Arduino and then ran a K nearest
to an Arduino and then ran a K nearest
neighbor on this thing and then that you
neighbor on this thing and then that you
get like very basic crappy gesture
get like very basic crappy gesture
recognition in a glove. Like you can do
recognition in a glove. Like you can do
stuff like that. You can do
stuff like that. You can do
substantially more sophisticated stuff,
substantially more sophisticated stuff,
right?
Welcome folks.
Okay, loading still
works. So, 30 second, like 30 seconds to
works. So, 30 second, like 30 seconds to
train a model, pull the model down from
train a model, pull the model down from
uh where I saved it on Neptune and Eval
uh where I saved it on Neptune and Eval
is pretty nice. It's like a good work
is pretty nice. It's like a good work
loop.
I guess we get sweeps. We make sure
I guess we get sweeps. We make sure
sweeps
sweeps
works. What about all this other
works. What about all this other
autotune
autotune
stuff? I really don't care about it
stuff? I really don't care about it
right now. To be honest, I kind of want
right now. To be honest, I kind of want
to just like be done with working on
to just like be done with working on
this for right
this for right
now. Why don't we just like commit what
now. Why don't we just like commit what
I
I
have and uh find something else to do
have and uh find something else to do
here.
you write the main functionality in C++
you write the main functionality in C++
and then use PIBind. No. So our M's are
and then use PIBind. No. So our M's are
written in C and then they're bound with
written in C and then they're bound with
the Python C API.
the Python C API.
Um I think Puffer is like 30 probably 30
Um I think Puffer is like 30 probably 30
some odd thousand lines of C now for all
some odd thousand lines of C now for all
the ends we have like 20 M ends and then
the ends we have like 20 M ends and then
uh the actual core of Puffer is just a
uh the actual core of Puffer is just a
few thousand lines of Python with
few thousand lines of Python with
PyTorch mind you heavily optimized but
PyTorch mind you heavily optimized but
it's we're just using PyTorch for
it's we're just using PyTorch for
training and
training and
um now mind you there are a few things
um now mind you there are a few things
in the middle that like make everything
in the middle that like make everything
fast. So for instance, we're not doing a
fast. So for instance, we're not doing a
ton of redundant data copies. We're
ton of redundant data copies. We're
processing like a few gigabytes of data
processing like a few gigabytes of data
per second. Um so redundant copies are
per second. Um so redundant copies are
really bad. So like everything gets
really bad. So like everything gets
simulated into static shared memory
simulated into static shared memory
which is nice.
Um we've cut out like a lot of the
Um we've cut out like a lot of the
overhead that's usually there in RL and
overhead that's usually there in RL and
then we just have like a really well
then we just have like a really well
optimized trainer.
We technically could write a
We technically could write a
um like a C++ pietorch trainer, but I
um like a C++ pietorch trainer, but I
don't think that there's really much
don't think that there's really much
point in it cuz
point in it cuz
like there's a lot of freaking overhead
like there's a lot of freaking overhead
in the uh the
in the uh the
C++ torch. API.
C++ torch. API.
Anyways, a lot of like binding overhead
Anyways, a lot of like binding overhead
and
and
crap. If it had like a nice C API or a
crap. If it had like a nice C API or a
nice like minimal C++ API that wasn't so
nice like minimal C++ API that wasn't so
bloated, then I would be tempted to do
bloated, then I would be tempted to do
it. But I don't even think you get much
it. But I don't even think you get much
out of doing that at this
point. How do we do CUDA fall
point. How do we do CUDA fall
back? Can we do Cuda fall back real
quick? Oh, we did do Cuda fall back,
quick? Oh, we did do Cuda fall back,
right?
It's usebin and puffernet. You can't use
It's usebin and puffernet. You can't use
pt. How do you generate the bin? So, let
pt. How do you generate the bin? So, let
me show
me show
you. So, puffernet is just for the demos
you. So, puffernet is just for the demos
on the website, right? It's just so that
on the website, right? It's just so that
we can load stuff into pure C and we can
we can load stuff into pure C and we can
run networks on on the site. So, we have
run networks on on the site. So, we have
a little script which I have not updated
a little script which I have not updated
for a while, but we're going to make it
for a while, but we're going to make it
work for
release. And this is it. We just go
release. And this is it. We just go
through the parameters and concatenate
through the parameters and concatenate
them and save them to a file. That's
it. And then we have, you know, we have
it. And then we have, you know, we have
a test. So when we update the operations
a test. So when we update the operations
in puffer net we have a test such that
in puffer net we have a test such that
when we make a net in puffer uh with
when we make a net in puffer uh with
puffer net it's identical to the way
puffer net it's identical to the way
that the network behaves in torch that's
that the network behaves in torch that's
all
Okay, so Spencer said that this got like
Okay, so Spencer said that this got like
way
slower. Okay, doesn't import now. Which
slower. Okay, doesn't import now. Which
branches branches didn't? since I was on
branches branches didn't? since I was on
dev and I clerked
for.bin. We might manually rename them.
for.bin. We might manually rename them.
I honestly don't remember. But it's just
I honestly don't remember. But it's just
um well, I'm about to push this thing
um well, I'm about to push this thing
which has like the code in here. Let me
which has like the code in here. Let me
let me just find it for
you. Okay, it's just
you. Okay, it's just
this. Let me link this to you.
this. Let me link this to you.
This is all it
is. And then it gets loaded from the uh
is. And then it gets loaded from the uh
the
C. I mean again we don't use this for
C. I mean again we don't use this for
like our actual like the the demos that
like our actual like the the demos that
we run locally. We run those like
we run locally. We run those like
loading in those nets. We often just run
loading in those nets. We often just run
them through Python. It's that when we
them through Python. It's that when we
it's mostly for when we compile the
it's mostly for when we compile the
demos to web that we run everything pure
demos to web that we run everything pure
C. You can compile it locally as well. I
guess
yeah. Uh yeah. So this didn't install
yeah. Uh yeah. So this didn't install
anything which is kind of weird.
See if this makes it
I think Ray has
I think Ray has
it. That
bot. Welcome all the YouTube
folks. We are
folks. We are
currently getting the uh entry points
currently getting the uh entry points
for puffer liib to work nice and
for puffer liib to work nice and
cleanly. So from CLI you'll just be able
cleanly. So from CLI you'll just be able
to do like puffer train or puffer eval
to do like puffer train or puffer eval
whatever in addition to using the
whatever in addition to using the
library normally like you have an option
library normally like you have an option
to run training just from the pit
to run training just from the pit
package. No export mode available on my
package. No export mode available on my
version. Yeah cuz it was a separate
version. Yeah cuz it was a separate
script. We had like a saveen flat.py or
script. We had like a saveen flat.py or
whatever. It's like five lines of code.
whatever. It's like five lines of code.
It's literally just iterate over weights
It's literally just iterate over weights
and then concatenate them all together.
and then concatenate them all together.
That's all it is.
And like you know if you train a model
And like you know if you train a model
and you run it in Python and the model
and you run it in Python and the model
plays the game and then you load it into
plays the game and then you load it into
C and the model doesn't play the game,
C and the model doesn't play the game,
it's probably loaded wrong, right?
Okay. So, this thing is still not making
Okay. So, this thing is still not making
bindings, which is weird.
Um, we'll see if this does
Um, we'll see if this does
it. In the meantime, I want to go look
it. In the meantime, I want to go look
at how Ray does
it. Okay. So, there's ray
it. Okay. So, there's ray
train
thing. Oh, is this not it? I thought
thing. Oh, is this not it? I thought
they had like a CLI
thing. I just want to see their entry
thing. I just want to see their entry
points, man.
They have entry points in
They have entry points in
here.
here.
Nope. Okay. So, what's up with Muan?
Nope. Okay. So, what's up with Muan?
It's just
It's just
good. So, you should use it.
good. So, you should use it.
It's our
default. Do they not have a
default. Do they not have a
setup.py?
setup.py?
Wait, they have a ton of dot
files.
Huh? Why does Bet say his GPU can't
Oh, I don't know, man. It's
like that would be weird. I didn't think
like that would be weird. I didn't think
there was a GPU requirement on it, but
there was a GPU requirement on it, but
if Bet says there is, then there might
if Bet says there is, then there might
be. It's probably because of Heavy Ball
be. It's probably because of Heavy Ball
like compiling everything super weird.
like compiling everything super weird.
I've been meaning to mess with that.
distributions can specify console
distributions can specify console
scripts entry
point. Create a command line wrapper for
point. Create a command line wrapper for
each entry point.
How does it do this?
there like a dot entry points or like
there like a dot entry points or like
something or how does it
um how does it make the entry
points we can just
points we can just
like I bet this will expose
this
this
exit. Okay. So, it
makes it just makes like a weird steel
makes it just makes like a weird steel
eye thing.
I
guess. Oh, and it just puts it in bin as
guess. Oh, and it just puts it in bin as
well. So, like this probably has to
have. This probably has to have um
Uh, it probably has to have a dash, not
Uh, it probably has to have a dash, not
spaces.
Annoying. Unless I make Yeah, I'd have
Annoying. Unless I make Yeah, I'd have
to make like a
to make like a
custom a custom bind thing.
which defeats the point of like breaking
which defeats the point of like breaking
all these things up, right?
You really should be able to
do you really should be able to do like
do you really should be able to do like
more than this. I would think it's just
more than this. I would think it's just
the the entry points API itself is kind
the the entry points API itself is kind
of limited.
Entry points.ext text.
Wait. The main may contain the name may
Wait. The main may contain the name may
contain any characters but it cannot
contain any characters but it cannot
start or end with any whites space
start or end with any whites space
character.
So wait then this can have white space
So wait then this can have white space
in the
middle and not start or
And
And
okay, let's try
okay, let's try
this. If I do
Can I get it to be like puffer train,
Can I get it to be like puffer train,
puffer eval, puffer sweep? That'd be
puffer eval, puffer sweep? That'd be
nice.
solve Sudoku. It just hasn't solved a
solve Sudoku. It just hasn't solved a
Sudoku with less than
Sudoku with less than
37 and it starts taking like 3 hours per
37 and it starts taking like 3 hours per
solve.
What? Wait, 37
What? Wait, 37
numbers. Isn't it 9 by 9? So it's 81.
It's
It's
80. I'm pretty sure we could make that
80. I'm pretty sure we could make that
much
much
better. I actually I don't know how hard
better. I actually I don't know how hard
that of a sudoku that is. Like 37
that of a sudoku that is. Like 37
numbers.
numbers.
I've like not really done uh many
Sudoku. Six out of
10. 10 being almost impossible.
We'll do graphs.
the graph. goes
up. You have a
graph. Did we say this was user bin? The
graph. Did we say this was user bin? The
user bin local or something.
and it's not there anymore.
M eyes.
Name does not seem to
Name does not seem to
be good here.
Python space.
commands.
Okay. So, click does this.
What I've seen is all log
What I've seen is all log
scale is simply harder. Need to make it
scale is simply harder. Need to make it
easier with backtracking or have another
easier with backtracking or have another
bug in my if it's your PO implementation
bug in my if it's your PO implementation
then I guarantee you you have lots of
then I guarantee you you have lots of
bugs simply because these like it's not
bugs simply because these like it's not
easy to do that
correctly. Anyone know how to do command
correctly. Anyone know how to do command
groups in
groups in
um an easy way to do is there like an
um an easy way to do is there like an
easy way that doesn't require me to use
easy way that doesn't require me to use
like external
like external
libraries hard parse or click
I guess it would just
be You'd have to add something to the
be You'd have to add something to the
bottom of it, right?
Oh, wait.
Oh, wait.
My this a
thing my package.subcomand
Hang
Hang
on. This make any sense.
This does not seem like a good
answer. Entry
points. What's the difference? console
points. What's the difference? console
script in
this. What I want to know
Register entry points under arbitrary
Register entry points under arbitrary
group name.
So this is a special entry
point. These are not automatically
point. These are not automatically
turned into
turned into
scripts but can be
discovered. Okay. Okay, so this doesn't
discovered. Okay. Okay, so this doesn't
actually create any
actually create any
scripts. I
scripts. I
see. So I think then the easiest thing
see. So I think then the easiest thing
would be is if I really want this
would be is if I really want this
um I need to
um I need to
do I need to do like a a very short
do I need to do like a a very short
which if statement
thing like it would just be like
I do something like this, I
guess. How
guess. How
long? I guess this isn't terrible if I
long? I guess this isn't terrible if I
just do it this
way. All right.
And what's this takes like args bars or
whatever. I guess it'll get from like
whatever. I guess it'll get from like
cisarchv
there
there. Try
this. Let's see if this gives us um the
this. Let's see if this gives us um the
behavior we want.
and then you have to art pop
it and not import. Okay. So now we this
it and not import. Okay. So now we this
this actually this entry point
this actually this entry point
works.
Um the entry point actually does work
Um the entry point actually does work
but we have weird compile shenanigans
but we have weird compile shenanigans
now.
you see breakout anywhere.
Now uh I only see a bunch of Syon.
Now uh I only see a bunch of Syon.
I don't
I don't
see my other extensions getting
built. You know what I did actually try
built. You know what I did actually try
to do?
So, this actually should give me
So, this actually should give me
something right here, right?
Yeah, there's
Yeah, there's
C the
extensions. App is
Ocean breakout binding seat. Yeah, this
Ocean breakout binding seat. Yeah, this
is the correct
sources. Seems like correct binding as
sources. Seems like correct binding as
well.
very
screwy. Doesn't give me like even the
screwy. Doesn't give me like even the
copy messages anymore.
copy messages anymore.
of like building the
of like building the
thing. Build
X. Oh,
dummy. Well, no. supposed to
dummy. Well, no. supposed to
do. It is supposed to do this
do. It is supposed to do this
right. Build C.
It does. It does make the binding, but
It does. It does make the binding, but
now it doesn't copy
it
really. Yeah. Did you figure anything
really. Yeah. Did you figure anything
out for
that? It's It is building, but it's not
copying cuz the freaking setup tool
copying cuz the freaking setup tool
sucks. But
just deleted the file
manually. That's
manually. That's
bizarre. Very much bizarre.
But is there a
But is there a
manifest? I have to like
That doesn't do anything
either.
either.
Okay. Um, let me copy that file for now.
Okay, this works.
I bet if I go
I bet if I go
like this probably doesn't work,
right?
right?
Yeah, that's fine. We just have to fix
Yeah, that's fine. We just have to fix
um global path.
How do you get dirt to show everything?
Backtracking. Auto complete
Okay, this does something.
That uh that seems like that ought to
That uh that seems like that ought to
have worked, right?
Oh, backtracking seemingly.
Oh, backtracking seemingly.
What did you
implement? This
runs now. This runs. Cool.
allowing not to change a square after it
allowing not to change a square after it
number it's numbered
number it's numbered
one. Still not allowed to edit the
one. Still not allowed to edit the
starting hint. Oh yeah, that makes
starting hint. Oh yeah, that makes
sense.
You're going to probably have to give it
You're going to probably have to give it
like a time budget or something because
like a time budget or something because
like eventually it'll solve stuff.
like eventually it'll solve stuff.
Probably just take
forever. I think we're on to figuring
forever. I think we're on to figuring
out um I mean there are obviously some
out um I mean there are obviously some
more things to do, but I think we can
more things to do, but I think we can
start sort of trying to figure out the
start sort of trying to figure out the
packaging of this.
think that's probably a good thing to
do. I mean, it's a little bit annoying
do. I mean, it's a little bit annoying
that we had to do this thing,
but I think it's fairly clean overall.
be a lot less confusing cuz like even if
be a lot less confusing cuz like even if
you like look at this from here you just
you like look at this from here you just
go to train and boom you're immediately
at the fact I have two train functions
at the fact I have two train functions
one in puffer and one outside is a
one in puffer and one outside is a
little
little
sketch for now this is this is
sketch for now this is this is
substantially
better. All right, I'm going to go walk
better. All right, I'm going to go walk
around, do a couple quick things, and
around, do a couple quick things, and
then we will start on uh packaging. Be
then we will start on uh packaging. Be
right back.
Okay. Packaging.
If I just
um if I just do this, what happens?
What did it
just What did Did it just
do? Oh, it should be in disc,
right? All right.
So has a bunch of RIB stuff.
This
has not have the binding
file. But I think we still have the same
issue, which we should probably just fix
issue, which we should probably just fix
locally First
Do we have to like list out all the
Do we have to like list out all the
things to
things to
include? Is that the
include? Is that the
thing? We didn't have to do this
thing? We didn't have to do this
before. Something changed.
You would think that this would do
something. I could get every C file in
something. I could get every C file in
the directory, I
guess. I don't think that's the issue,
guess. I don't think that's the issue,
though, right? Because it is building.
though, right? Because it is building.
It's just not copying.
So manifest.in
Does this have to go in
manifest? Find name spaces. Find
manifest? Find name spaces. Find
packages.
build is a temporary location. Yeah. Did
build is a temporary location. Yeah. Did
you see the difference? Do you post a
thing? But wait, what
thing? But wait, what
is what's this graph then? because I
is what's this graph then? because I
thought this was like um like number of
thought this was like um like number of
positions that are
set. You should also probably run this
set. You should also probably run this
thing with a random policy for
comparison. Numbers less
comparison. Numbers less
81 y ais is time.
81 y ais is time.
What?
Okay. Typically one makes the x axis
Okay. Typically one makes the x axis
time.
Okay. Missing package
Okay. Missing package
data manifest. All right. So, yeah, it's
data manifest. All right. So, yeah, it's
one of
these include the package
directory. I didn't sleep just here.
directory. I didn't sleep just here.
Well, you should probably do
that. I have done that before. It's not
that. I have done that before. It's not
fun.
I think the worst I've ever done
I think the worst I've ever done
was I was at like this summer
thing. This Where's the the damn thing?
thing. This Where's the the damn thing?
Do I have it on here? Yeah, this
Do I have it on here? Yeah, this
freaking thing is the worst I've ever
freaking thing is the worst I've ever
done. So, this was
done. So, this was
like I think I did this when I was 16.
like I think I did this when I was 16.
So, I was taking a Stamford course like
So, I was taking a Stamford course like
over the summer uh with like a bunch of
over the summer uh with like a bunch of
undergrads or whatever and I think like
undergrads or whatever and I think like
a quarter of the class finished this
a quarter of the class finished this
project to give you an idea. Um I had
project to give you an idea. Um I had
the most compact design there and I
the most compact design there and I
started off like finishing this thing
started off like finishing this thing
that like the final like work session to
that like the final like work session to
finish this thing. I was already
finish this thing. I was already
starting off super sleep deprived and
starting off super sleep deprived and
then I was up doing this for I think
then I was up doing this for I think
like 65 out of 70 hours or something
like 65 out of 70 hours or something
ridiculous.
ridiculous.
just in the
lab. That was
ridiculous. It's kind of fun to remember
ridiculous. It's kind of fun to remember
that like I did a couple ridiculous
that like I did a couple ridiculous
things, but like I do not want to do
things, but like I do not want to do
that [ __ ] anymore.
for 15 hours in like
for 15 hours in like
five. Yeah, you should probably do that.
You should also probably like get up and
You should also probably like get up and
walk around once in a while. You can
walk around once in a while. You can
just drop dead from blood clots. Like
just drop dead from blood clots. Like
that is a thing that happens to
that is a thing that happens to
people. 81 to 52. Very
nice. You should probably like play the
nice. You should probably like play the
policy and like watch it to see what
policy and like watch it to see what
it's doing some
point. 81 to 20.
81 minus
81 minus
51. I have no metric for how hard those
51. I have no metric for how hard those
are. We will see the policies when you
are. We will see the policies when you
are in a state to like you know actually
are in a state to like you know actually
clean up an like put source code
clean up an like put source code
together and then maybe we can throw
together and then maybe we can throw
muan at it and I can throw uh we can see
muan at it and I can throw uh we can see
how fast things can get solved.
be a cool
NPR. Believe the Sudoku problem like
NPR. Believe the Sudoku problem like
Sudoku is like the uh like second course
Sudoku is like the uh like second course
in CS
in CS
uh one of the assignments for Stanford.
uh one of the assignments for Stanford.
It's like second CS course.
If you need
self.mmemory probably 81.
one it's 9
one it's 9
by9 right I don't know what selfmemory
by9 right I don't know what selfmemory
is I don't have a selfmemory so I'm
is I don't have a selfmemory so I'm
assuming like you're backtracking or I
assuming like you're backtracking or I
don't
know they're not they're 81
cells Yeah. Okay. You're doing something
cells Yeah. Okay. You're doing something
wrong. Yeah, you're doing something
wrong. Yeah, you're doing something
wrong. It's okay
though. If you just like get the end
though. If you just like get the end
nicely into the puffer format, like we
nicely into the puffer format, like we
can throw our like we can throw the
can throw our like we can throw the
power tools at it, right? And then
power tools at it, right? And then
you'll have some fun with that.
Oh
jeez. Yeah, if that's what this the
jeez. Yeah, if that's what this the
train code looks like, you will see uh
train code looks like, you will see uh
you'll see quite a difference when uh
you'll see quite a difference when uh
You throw it at
You throw it at
puffer like
jeez. How does this freaking
work? No, you're just you're writing
work? No, you're just you're writing
like really
like really
unoptimized like you're probably just
unoptimized like you're probably just
writing ludicrously unoptimized code.
writing ludicrously unoptimized code.
Um, like realistically we can get your
Um, like realistically we can get your
Sudoku thing training at
Sudoku thing training at
like
probably 200,000 steps per second on a
probably 200,000 steps per second on a
CPU with Puffer, including an LSTM.
Oh Yeah.
Okay. So, this actually does it.
Okay. So, this actually does it.
It just needs to have all these
It just needs to have all these
extension paths.
But this actually just worked, huh?
big
big
map.
map.
Holy, that's
Holy, that's
cool. That's very
cool. That's very
cool. And drive all over
there. Very nice.
there. Very nice.
You're having more fun than I am.
You're having more fun than I am.
Packaging is crap.
Okay, we did update the 5.5 I believe.
weird copies freaking Good
thing build
error. What the hell is this?
Downloading. Did it
Downloading. Did it
actually Oh, download
Rayb 53.
This works.
Not a gzip. Not a
Not a gzip. Not a
bzzip. Invalid
header. Well, I think we probably just
header. Well, I think we probably just
need to do a clean setup of all this
need to do a clean setup of all this
stuff at some point here, right?
I guess we are kind of ready to do the
I guess we are kind of ready to do the
release testing in a sense
release testing in a sense
because like anything else we should
because like anything else we should
change wouldn't really mess with it very
change wouldn't really mess with it very
much.
My goal is to make enough project
My goal is to make enough project
progress on this that I do not have to
progress on this that I do not have to
do this on Saturday because I think if I
do this on Saturday because I think if I
spend all day doing release [ __ ] on
spend all day doing release [ __ ] on
Saturday, I'm going to go
nuts. Hey,
Plasma here. Let me show you the latest.
So we still have
So we still have
this tiny thing at the bottom but other
this tiny thing at the bottom but other
than that we've
than that we've
got that we've got load config load
got that we've got load config load
policy load end we've got all the
policy load end we've got all the
individual
individual
functions this is the train function
now and you can do you can do
now and you can do you can do
this you can do puffer
So, that should hopefully be
reasonable. I figured I'd work on a big
reasonable. I figured I'd work on a big
map because I can't diagnose why train
map because I can't diagnose why train
speed dropped. Um, hang on.
It should be
It should be
getting Well, I'll have to figure that
getting Well, I'll have to figure that
out for you. Something's weird
out for you. Something's weird
there. Better yet.
Okay.
R file.open.
platform to G is
could not be opened successfully.
Huh? Did something move or whatever? Cuz
Oh, they have just zips
Oh, they have just zips
now. They moved.
Um, wait, no, the web assembly is char
Um, wait, no, the web assembly is char
zip.
zip.
Okay, dang it.
I like new puffer train. It's smooth.
I like new puffer train. It's smooth.
Thank you. I'm working on it, man. I'm
Thank you. I'm working on it, man. I'm
going to have to take a break on
going to have to take a break on
Saturday and like do something else. I
Saturday and like do something else. I
don't know if I start algorithm like
don't know if I start algorithm like
algorithm research or if I like come
algorithm research or if I like come
help you on M's or something, but like
help you on M's or something, but like
release work is just freaking so boring.
release work is just freaking so boring.
And I just uh I do not work well when
And I just uh I do not work well when
I'm bored like at
What are we getting
now? These stupid error messages.
Break
that like blew up a surprising amount
that like blew up a surprising amount
for a random retweet.
We have a real error message
here. Okay, so we do have a real error
here. Okay, so we do have a real error
message
message
platform. The hell's the URL on this
platform. The hell's the URL on this
thing?
5.5 download 5.5
5.5 download 5.5
RAI 5.5 Web
Assembly.zip. Oh, and then it's probably
Assembly.zip. Oh, and then it's probably
this Bar
this Bar
lights plus
platform. Well, this is not
found. Where the hell is
found. Where the hell is
it? 17.
it? 17.
[Music]
[Music]
You should probably render it to make
You should probably render it to make
sure it's doing what you expect.
It is very
good. It's kind of surprising if you're
good. It's kind of surprising if you're
able to get that to work on like some
able to get that to work on like some
random trainer.
random trainer.
Well, we have our first visitors.
Hang on. A picture of these
guys. I uh I put a bird feeder out and
guys. I uh I put a bird feeder out and
we have
we have
two bright yellow orals.
three of
three of
them. That was very nice.
This thing has been up for a day and a
This thing has been up for a day and a
half, and these are the first ones that
half, and these are the first ones that
have uh come to get
it. I'm going to be momentarily
it. I'm going to be momentarily
distracted because I uh I actually don't
distracted because I uh I actually don't
ever think I've seen one of
ever think I've seen one of
those.
Oh, there they go. Okay.
Okay, so this doesn't exist.
Okay, this totally does exist.
You think for bigger maps I'll need to
You think for bigger maps I'll need to
set up a star to set mini goals.
Um, no
idea. I think if we get the sim right,
idea. I think if we get the sim right,
we can probably actually get like a
we can probably actually get like a
pretty darn cool like efficient routing
pretty darn cool like efficient routing
to goal result, right?
to goal result, right?
where like instead of just completion
where like instead of just completion
rate, we can actually get a metric
rate, we can actually get a metric
that's like, you know,
that's like, you know,
um time to goal or something and we can
um time to goal or something and we can
actually get something that continues to
actually get something that continues to
improve.
If you actually have like superhuman uh
If you actually have like superhuman uh
superhuman solve with RL, that's pretty
superhuman solve with RL, that's pretty
cool.
Like that will be a pretty darn cool
Like that will be a pretty darn cool
environment.
Okay. So, this is how it works.
All
right. So, this builds
Okay, so our lights here is
Okay, so our lights here is
apparently not the URL we were looking
for. Probably this
one. Want like the raw URL.
Damn.
At what point does it become easier when
At what point does it become easier when
you have uh fewer hints?
Never. If it's zero hints, I can just
Never. If it's zero hints, I can just
fill in whatever. No, I can just fill in
fill in whatever. No, I can just fill in
any valid
Okay. Well, this says it
installs undefined symbol blah blah blah
installs undefined symbol blah blah blah
blah blah. Lovely.
You'll contradict
yourself.
yourself.
Really? You're telling me it's easier to
Really? You're telling me it's easier to
like fill in the last whatever than like
like fill in the last whatever than like
it is to just come up with any random
it is to just come up with any random
board.
No
No
way. Can I not just do
like there's got to be like some basic
like there's got to be like some basic
ass pattern?
Now, look at that.
Wait. Three.
Wait. Three.
[Music]
Look at the spam we get these days.
Uh, do we need underscore See?
You fill the first 3x3
grid. That seems very weird.
Like with zero hints, if I get one board
Like with zero hints, if I get one board
right, I can just keep reusing it
right, I can just keep reusing it
everywhere.
Well, I mean it can totally if you like
Well, I mean it can totally if you like
train it on zero hints and like it
train it on zero hints and like it
randomly does stuff when it eventually
randomly does stuff when it eventually
finds the solution, it will it will
finds the solution, it will it will
hardcode it into the waves.
How the heck can it possibly be that
How the heck can it possibly be that
difficult? I don't know. I never did
difficult? I don't know. I never did
freaking sudoku.
Orioles are back.
I am a simple creature.
The goal was to get
The goal was to get
orioles, cardinals, and uh
bluebirds. So far, we have just seen the
bluebirds. So far, we have just seen the
orals here.
So this still does not import.
Wait, wait, wait. It actually put a
Wait, wait, wait. It actually put a
puffer fish. Look at
puffer fish. Look at
this puffer.
ridiculous. Need to build
Okay, so now it's
Holding freaking Grock.
This still doesn't have
pepper_c. Oh, it's not designed to
pepper_c. Oh, it's not designed to
build. Oh, it doesn't build
extensions.
D because it's sist.
Well, how the heck do you generate the
Well, how the heck do you generate the
damn things
then? Cuz otherwise it would be like a
then? Cuz otherwise it would be like a
exponential like 81 deep search. Like
exponential like 81 deep search. Like
there have got to be a lot of valid
there have got to be a lot of valid
boards for you to even be able to
boards for you to even be able to
generate the things,
right? Like you just start filling in
right? Like you just start filling in
numbers. Isn't the algorithm like to
numbers. Isn't the algorithm like to
generate the things you just start
generate the things you just start
filling in numbers and then like
filling in numbers and then like
backtrack until you get a valid solve
backtrack until you get a valid solve
and then like delete some of the
and then like delete some of the
numbers?
Those two things don't add up.
Maybe this is it.
Are you double checking that this thing
Are you double checking that this thing
is actually doing what you think it is?
I mean, if it actually works, then
I mean, if it actually works, then
that'll be a pretty darn cool end. I
that'll be a pretty darn cool end. I
will
say well I just know how what a pain RL
say well I just know how what a pain RL
is to get working when you don't have
is to get working when you don't have
you don't have puffer tools.
Just double check a thing.
Maybe like a negative 10 hit solve next.
Heck is
the I gota double check Gmail.
read graph song.
We still don't have this package. This
We still don't have this package. This
is
weird
really. I guess we should be able to
really. I guess we should be able to
tell just from
tell just from
um what gets copied, huh?
I don't see this
copying extensions. Maybe
I'm telling you, just get it set up for
I'm telling you, just get it set up for
puffer and like whatever you're getting
puffer and like whatever you're getting
will make it way better.
like our implementation kind of just set
like our implementation kind of just set
soda on everything out of the
box. It's pretty
good. You hope it would be with the
good. You hope it would be with the
amount of work I freaking put into it.
Okay, now it's actually copying the
Okay, now it's actually copying the
files.
Oops.
Oops.
See if this builds.
This thing still doesn't freaking exist.
This thing still doesn't freaking exist.
Like, you kidding me?
MSP.
What? This an actual issue.
We now do have underscore
C and the wheel file.
has right the wheel file should actually
has right the wheel file should actually
have the right stuff in
it. Yeah. So we have extensions you
see. And how did we get the uh the
see. And how did we get the uh the
underscore
underscore
C
build? So it's the name of the torch
build? So it's the name of the torch
extension,
extension,
right? Torch sources.
Then we have like
torch and build should run both, right?
torch and build should run both, right?
So we do like
build.
Yeah. So why does this not run?
still. No.
I do editable or
something cuz it's not installing it
something cuz it's not installing it
here, right? It's like
Okay. So, you have you can't do editable
Okay. So, you have you can't do editable
of a
zip. So, uh I guess I just have to
zip. So, uh I guess I just have to
find where this gets installed.
doesn't seem to
doesn't seem to
where Oh, that's info.
Okay, there's the binding file that we
want. And there's the underscore C
file, right?
sources need to be included in
sources need to be included in
manifest. Okay, let's check that.
That's everything, right?
That's everything, right?
They're all included.
from popper
from popper
li_c See?
Okay. So it can't link
Try
this. Okay. Still doesn't work.
It depends on
everything. You got it working.
So obnoxious that this like these chats
So obnoxious that this like these chats
to just break.
Oh, I mean we have
Oh, I mean we have
um do I think it's linking against the
um do I think it's linking against the
law wrong lib
law wrong lib
C
something. God damn.
made available by torch. Okay, hang on.
Nope. Okay, so now we're back to the
Nope. Okay, so now we're back to the
same
error. So this thing was completely
error. So this thing was completely
freaking wrong.
What the heck is wrong with this
thing? Undefined
thing? Undefined
symbol jit parse schema.
Get
11. What exactly does Muan change? It's
11. What exactly does Muan change? It's
a different
a different
optimizer. It's not just Muan anymore.
optimizer. It's not just Muan anymore.
We have more stuff in there. It's like
We have more stuff in there. It's like
upper implementation is just better at
upper implementation is just better at
this point, you know?
What's different about it that is better
What's different about it that is better
than Adam? Fancy math.
If you really want, I have a chat with a
If you really want, I have a chat with a
bunch of very fancy optimizer folks who
bunch of very fancy optimizer folks who
will explain loads upon loads of second
will explain loads upon loads of second
order approximations
order approximations
uh to
You would I understand it? Probably
You would I understand it? Probably
not. You would understand. You could
not. You would understand. You could
probably understand the highle idea of
probably understand the highle idea of
it
though approximate. It's a second order
though approximate. It's a second order
approximation. You're approximating the
approximation. You're approximating the
curvature of um the loss landscape with
curvature of um the loss landscape with
some math that I haven't frankly even
some math that I haven't frankly even
bothered to check the details of cuz
bothered to check the details of cuz
like there are a whole bunch of these
like there are a whole bunch of these
that technically try to do this.
that technically try to do this.
I don't know why their approximation is
I don't know why their approximation is
better or what it does
specifically. There is a paper though
specifically. There is a paper though
you can like check the uh there's an
you can like check the uh there's an
archive paper or
whatever. God damn it.
whatever. God damn it.
It actually was the [ __ ] build
It actually was the [ __ ] build
isolation. [ __ ] Python devs.
isolation. [ __ ] Python devs.
God, such [ __ ] dog
God, such [ __ ] dog
[ __ ] God damn
it. I
it. I
hate these [ __ ] Python engineers that
hate these [ __ ] Python engineers that
just come up with dumb [ __ ] best
practices. Best practice. Let's do the
practices. Best practice. Let's do the
whole [ __ ] build in a like in an
whole [ __ ] build in a like in an
isolated setup where we reinstall Torch
isolated setup where we reinstall Torch
under the hood without telling you and
under the hood without telling you and
install the wrong version cuz this is
install the wrong version cuz this is
going to make you very
going to make you very
happy.
[ __ ] [ __ ]
hell. I was thinking about it.
hell. I was thinking about it.
I do try to keep this more professional
I do try to keep this more professional
though than my
streams. A guido you in
streams. A guido you in
particular. God damn it.
I'm going to go figure out how the hell
I'm going to go figure out how the hell
we make sure this doesn't happen in
we make sure this doesn't happen in
practice.
Um, let me use a restroom. Let me go
Um, let me use a restroom. Let me go
walk around a bit and lift some weights
walk around a bit and lift some weights
and [ __ ] and then we'll finish this.
and [ __ ] and then we'll finish this.
That is so
That is so
stupid. Who the hell thought this was a
stupid. Who the hell thought this was a
good idea, right? Like, we're going to
good idea, right? Like, we're going to
ignore the fact that you have gigabytes
ignore the fact that you have gigabytes
of packages installed systemwide and
of packages installed systemwide and
that the Python installer sucks. We're
that the Python installer sucks. We're
going to reinstall everything from
going to reinstall everything from
scratch in like a container that we're
scratch in like a container that we're
not going to tell you about. We're going
not going to tell you about. We're going
to get the versions wrong cuz [ __ ] you.
to get the versions wrong cuz [ __ ] you.
And then you're going to debug it
blind. Oh, and we're not even going to
blind. Oh, and we're not even going to
tell you this option exists. It's just
tell you this option exists. It's just
in some random pep. So, like, have
fun. I swear the devs of like the
fun. I swear the devs of like the
tooling for this language are just
tooling for this language are just
[ __ ]
[ __ ]
It's like, and also did you notice like
It's like, and also did you notice like
it's been like virtualization by default
it's been like virtualization by default
now. It's like you need a VM by default
now. It's like you need a VM by default
to do anything. If you need a VM by
to do anything. If you need a VM by
default to do anything, even in a Docker
default to do anything, even in a Docker
container, your language is ass.
Well, I feel way way better. Hey,
Classic. We build Puffer Lib around
Classic. We build Puffer Lib around
here.
here.
ultra high
ultra high
performance reinforcement learning
performance reinforcement learning
toolkit and we're almost ready to ship
toolkit and we're almost ready to ship
our next update.
We just figured out why the package
We just figured out why the package
wasn't
building. Now I have to figure out what
building. Now I have to figure out what
do we do about it. Nice to meet you as
do we do about it. Nice to meet you as
well.
So
technically this is just sucky because
technically this is just sucky because
like the requirement is that the torch
like the requirement is that the torch
version used for build is the same as
version used for build is the same as
the torch version that you have on your
the torch version that you have on your
system, right?
Got to love this chat. This chat's
Got to love this chat. This chat's
breaking after three
messages. No, I mean, all the LLMs are
messages. No, I mean, all the LLMs are
bad. Like, they're all bad.
bad. Like, they're all bad.
They're going to just keep like
They're going to just keep like
leaprogging each other every couple
leaprogging each other every couple
months though for the foreseeable
months though for the foreseeable
future. So like you can either subscribe
future. So like you can either subscribe
to everything and then like hop around
to everything and then like hop around
them constantly or you can just pick one
them constantly or you can just pick one
and then keep using it unless the
and then keep using it unless the
company massively screws up. And Grock
company massively screws up. And Grock
is already included with Twitter
is already included with Twitter
anyways.
anyways.
So, it's uh convenient enough and the
So, it's uh convenient enough and the
generation is fast and like frankly all
generation is fast and like frankly all
the platforms have great problems with
the platforms have great problems with
like cats randomly dropping
I mean, all the language models are
I mean, all the language models are
pretty dumb, frankly.
You can like gaslight yourself into
You can like gaslight yourself into
thinking that they're good, but they're
thinking that they're good, but they're
really
external
Wait, how do I mark it as
journal? Huh?
Wait. It doesn't make sense.
Okay, so like the thing is this thing
Okay, so like the thing is this thing
here just generated me like paragraphs
here just generated me like paragraphs
and paragraphs and this is all
and paragraphs and this is all
[ __ ] This is completely wrong.
I mean I can
technically what I can do technically
here. What type of error was it? Import
here. What type of error was it? Import
error.
We'll try this. This is probably decent
We'll try this. This is probably decent
enough.
I've got all these damn bug bites and
I've got all these damn bug bites and
I'm like so freaking paranoid that I've
I'm like so freaking paranoid that I've
got ticks on me. There's so many of them
got ticks on me. There's so many of them
around
here. I think I'm fine.
I'm in Maryland. I'm on a farm, so it's
I'm in Maryland. I'm on a farm, so it's
like tons of stuff. And I have like I
like tons of stuff. And I have like I
run as well around.
So, it sucks. You get like normal bug
So, it sucks. You get like normal bug
bites and then it's like I don't know,
bites and then it's like I don't know,
is it a
is it a
tick? Literally, like I'll go running in
tick? Literally, like I'll go running in
the morning and I'll just be the whole
the morning and I'll just be the whole
time I'm running I'll just be like
time I'm running I'll just be like
pulling bugs that are biting me off my
pulling bugs that are biting me off my
back.
Freaking bugs, man.
There's something wrong here.
Like, hang
on. I want to take a picture. I can like
on. I want to take a picture. I can like
freaking see. It's in like this blind
freaking see. It's in like this blind
spot where I can't reach. And we'll go
spot where I can't reach. And we'll go
back to Dev.
There's literally nothing
There's literally nothing
there. No
idea. We actually have not really had
idea. We actually have not really had
any mice problems
any mice problems
surprisingly. All right, so I mean that
surprisingly. All right, so I mean that
at least fixes it enough,
right? But we do have pip installable
right? But we do have pip installable
package now. Let's see if uh we can
package now. Let's see if uh we can
actually run
it. No config for M name
it. No config for M name
breakout really.
right
right
here. Yeah, we have uh we have the
here. Yeah, we have uh we have the
default. We literally have
default. We literally have
this this uh
this this uh
default. I bet you config is not in the
resources. That's got to be it.
all the any
files. Oops. With no build
files. Oops. With no build
isolation.
Could work without build isolation,
Could work without build isolation,
right? All
right? All
right. Upper
train.
train.
No config.
Really? We should see stuff getting
Really? We should see stuff getting
included
here. Ocean
No
configs.
Ah, packaging. No
Ah, packaging. No
fun. No fun at all.
Still
no. Do we still not have the config
no. Do we still not have the config
files in
there? No, we do. Look, cuz see we have
there? No, we do. Look, cuz see we have
config files in here
now. Uh-huh.
now. Uh-huh.
Yeah, we got our
configs. So, uh what gives right
Upper lip popper lip
Upper lip popper lip
config. Yeah, this totally
worked
now. Should be in the same directory as
now. Should be in the same directory as
well.
Let's just break point here.
I actually want to specifically
I actually want to specifically
know build
Nathaniel J.
Smith. This guy is a
Smith. This guy is a
[ __ ] Cool. Thank you for screwing over
[ __ ] Cool. Thank you for screwing over
Python.
Cool. We get a break
point user
local. Wait, what's puffer?
Okay.
This should totally have uh that
This should totally have uh that
breakout in it,
right? Huh?
right? Huh?
Wait, this suddenly
works. Oh, wait. Then how does something
works. Oh, wait. Then how does something
just cash weird? I guess
If this works. It does. We have bas
If this works. It does. We have bas
basic packaging done and we can do other
basic packaging done and we can do other
things which would be very nice. I got
things which would be very nice. I got
45 minutes before dinner and I do not
45 minutes before dinner and I do not
want to keep doing this.
Cool. So then you can do puffer train.
Cool. So then you can do puffer train.
Actually, I want to go let's go up a
Actually, I want to go let's go up a
dirt and let's see what happens.
All right, we have
All right, we have
experiments and then we have uh our
experiments and then we have uh our
model file, right? So we just do
Or what? Puffer
eval.
eval.
Boom. Except this model doesn't seem to
Boom. Except this model doesn't seem to
be loading correctly because it
be loading correctly because it
sucks. Is that the
sucks. Is that the
case? Uh
Well, that's weird.
policy load state
policy load state
dict cuz you've already passed it to
dict cuz you've already passed it to
um you've already passed it to puffer is
um you've already passed it to puffer is
the
I think we'll go look at the uh
I think we'll go look at the uh
experiment results that we've had
experiment results that we've had
running after
running after
this to ship this
Is the Python requirement greater than
Is the Python requirement greater than
or equal to 3.12 for puffer lib? It
or equal to 3.12 for puffer lib? It
should not
should not
be. I think that would be too far ahead
be. I think that would be too far ahead
to go,
to go,
right? What's the current Python release
right? What's the current Python release
versioning?
though. Technically, it should be 39 or
though. Technically, it should be 39 or
310. It should be what we uh
310. It should be what we uh
require. Possibly 310. I don't think
require. Possibly 310. I don't think
anyone's still on 39 so much
anymore. Yeah, 312 would be too recent
anymore. Yeah, 312 would be too recent
of a wreck.
How's this still not
work? How's this still not work?
work? How's this still not work?
Well, at least we can um
This stupid thing. I can tell by how
This stupid thing. I can tell by how
long it's
long it's
taking. It's trying to install yet
taking. It's trying to install yet
another version of Torch.
We are going to just fix this policy
We are going to just fix this policy
loading thing real quick first.
Yes, this model is not very good
Yes, this model is not very good
apparently. Okay.
Oh, dummy. This is for
training. Load
training. Load
config. Does it load policy?
Let me see. So, load model path actually
Let me see. So, load model path actually
has to do a
thing. A bit inconvenient.
There we go.
Okay, that has been a lot of obnoxious
Okay, that has been a lot of obnoxious
packaging done.
Um, finally.
No more strawberry
man. Okay, let's go look at the
man. Okay, let's go look at the
experiments.
We still have to write
We still have to write
docs. I actually got a bunch of the
docs. I actually got a bunch of the
stuff done today for uh packaging, but
stuff done today for uh packaging, but
we still have to write
docks. How's this
doing? Okay, so time this thing
doing? Okay, so time this thing
does not particularly
well and this
well and this
one does
terribly. Well, that's worth figuring
terribly. Well, that's worth figuring
out what the heck went wrong there.
Hey,
Weston. Get myself set up with
Weston. Get myself set up with
womb. Yeah, you should do
that. Just look at some of our codes. so
that. Just look at some of our codes. so
you don't make a mess. Just like look at
you don't make a mess. Just like look at
like the snake code or
something group discord
something group discord
page your YouTube channel
page your YouTube channel
I1 we have a discord discord.gg/puffer
GG/puffer. Got like,00 people in it or
GG/puffer. Got like,00 people in it or
whatever.
What extent do I think this is bad
What extent do I think this is bad
defaults versus bad
eval? Why don't we take a
look? It's not like we're just stuck and
look? It's not like we're just stuck and
not exploring hyper pram space, right?
It's
It's
wand, but uh I mean that's kind of what
wand, but uh I mean that's kind of what
they get for naming it that,
they get for naming it that,
right? It's going to be WandyB. And you
right? It's going to be WandyB. And you
know, if they don't like that, they can
know, if they don't like that, they can
call the Wambbulance.
It's pretty funny because I've seen them
It's pretty funny because I've seen them
giving like given presentations where
giving like given presentations where
like they clearly instructed the
like they clearly instructed the
presenter to like like annunciate wand
presenter to like like annunciate wand
B. All
right. I think that what we have to do
right. I think that what we have to do
here I'm a bit confused
here I'm a bit confused
here. All I did was got some better
here. All I did was got some better
default
ranges. One that's really bad is the
ranges. One that's really bad is the
mazes. Can we figure out what happened
mazes. Can we figure out what happened
to the
mazes? Cuz they should get like way
mazes? Cuz they should get like way
better
perf. It's weird, you know, cuz
perf. It's weird, you know, cuz
like it looks like it's finding good
like it looks like it's finding good
params and then the score just sucks.
Like it's sweeping all reasonable ranges
here.
here.
Oh, okay.
Oh, okay.
Well, this will do it,
right? No, we
right? No, we
actually Was this a good run or
not? Okay. No, this is a still screwy
run. Okay, this is the good run.
just runs for way longer,
right? So, this is just deciding to not
right? So, this is just deciding to not
do
that. Oh, I bet I know what's happening.
Take a little look at some of our sweep
Take a little look at some of our sweep
stuff to correct for this.
Total time
steps equals args of train of total time
steps equals args of train of total time
steps. This is in the wrong spot.
This needs to
This needs to
go
here. Let's see if this alone solves it.
So, we have our new
So, we have our new
uh we've got our new code
here. Quite some changes.
Solid work today.
[ __ ] I think what I'm going to do is
[ __ ] I think what I'm going to do is
I'm just going to set it so that
I'm just going to set it so that
um Python just does no build isolation
um Python just does no build isolation
and uh it doesn't editable like it does
and uh it doesn't editable like it does
no build isolation. It does break system
no build isolation. It does break system
packages by default on our dockers cuz
packages by default on our dockers cuz
this VM [ __ ] is just so
stupid. Like those are both just dumb
stupid. Like those are both just dumb
peps, right?
They're both just like dumb like dumb
They're both just like dumb like dumb
virtualization peps.
upper
upper
train works.
Yeah, there we
go. And we will see whether this uh this
go. And we will see whether this uh this
works or not.
And I guess that we
do. Boom.
We will see how this
We will see how this
does. Hopefully should be
does. Hopefully should be
decent. That's just the bug. Then
decent. That's just the bug. Then
um we should be able to actually get
um we should be able to actually get
better results out of our sweeps from
better results out of our sweeps from
that cuz it's been pushing everything to
that cuz it's been pushing everything to
like min time steps or
whatever.
whatever.
Oops.
Would you recommend I scrape a scrap
Would you recommend I scrape a scrap
womb and use Neptune? You can try either
womb and use Neptune? You can try either
one.
I prefer Neptune personally and I think
I prefer Neptune personally and I think
that they both have free versions.
We are making progress on this sweep
We are making progress on this sweep
stuff. Like I'm starting to figure out
stuff. Like I'm starting to figure out
the like the last remaining variables
the like the last remaining variables
that are screwing with
things. And hopefully we should really
things. And hopefully we should really
be able to launch all the sweeps from
there. It's
5:40. See if
5:40. See if
anybody's asking for stuff in the
Discord. Actually, I I wouldn't mind
Discord. Actually, I I wouldn't mind
taking a look at your Sedokco code real
taking a look at your Sedokco code real
quick if you uh if you'd like me to. I
quick if you uh if you'd like me to. I
uh Let me go do a couple quick steps,
though. I got to get a swivel for this
though. I got to get a swivel for this
chair.
literally no way to get in this chair.
Okay. No code.
Whatever is easiest. Why don't you have
Whatever is easiest. Why don't you have
your code on GitHub, man? Put your code
your code on GitHub, man? Put your code
on
on
GitHub. Like, editing [ __ ] locally is
GitHub. Like, editing [ __ ] locally is
just dumb. like you're going to be fine
just dumb. like you're going to be fine
for like 99% of the time and then you're
for like 99% of the time and then you're
eventually going to lose a file. I have
eventually going to lose a file. I have
[ __ ] on
GitHub like by
default is on GitHub then DM me the link
default is on GitHub then DM me the link
what are you
what are you
doing or put it in chat or whatever.
You're supposed to do
You're supposed to do
that. No.
It's crazy how much of a difference
It's crazy how much of a difference
sleep makes.
sleep makes.
Like honestly, lately I've been starting
Like honestly, lately I've been starting
to suspect I don't even have like
to suspect I don't even have like
particularly [ __ ] athletic genetics.
particularly [ __ ] athletic genetics.
It's just straight up that when I was
It's just straight up that when I was
younger, like I wasn't sleeping at all.
So, like, yeah, you're going to be near
So, like, yeah, you're going to be near
last in everything if you're sleeping
last in everything if you're sleeping
four hours a night and everyone else is
four hours a night and everyone else is
sleeping seven or
eight. I swear I don't know how you
eight. I swear I don't know how you
randomly run a six-minute
mile. Like, I'm training and I'm almost
mile. Like, I'm training and I'm almost
at the point where I think I could
at the point where I think I could
probably do a seven.
Like I can do I did a 630 pace 1
Like I can do I did a 630 pace 1
kilometer interval the other
kilometer interval the other
day. I'm 5'9. It doesn't make that big
day. I'm 5'9. It doesn't make that big
of a difference.
We do have the
We do have the
uh the 195 bench for 12, though. I'm
uh the 195 bench for 12, though. I'm
starting to get my pressing strength
starting to get my pressing strength
back at the very
least. Touch and go. 195 for 12. Not
least. Touch and go. 195 for 12. Not
paused, but still.
Western's
Western's
code. I got to go in like 10. I want to
code. I got to go in like 10. I want to
take a quick
look. Plates plus
five. I've done 20 on like a plate and
five. I've done 20 on like a plate and
change or
change or
whatever. It's weird. Like it takes a
whatever. It's weird. Like it takes a
while to get used to training that way
though. Like I I don't even think I did
though. Like I I don't even think I did
I recently did 135 for like 20 or 25,
I recently did 135 for like 20 or 25,
whatever it was. Um I don't think I
whatever it was. Um I don't think I
could have done that when I when I hit
could have done that when I when I hit
my like 265 single. I don't think I
my like 265 single. I don't think I
could have done a plate for 20.
You have to train high reps. If you want
You have to train high reps. If you want
to be able to do high
reps, to train strength, if you want to
reps, to train strength, if you want to
be
strong, I will say I'm absolutely uh
strong, I will say I'm absolutely uh
loving the the super squat back there. I
loving the the super squat back there. I
haven't used it for squatting once. I've
haven't used it for squatting once. I've
been just using it for push press and
been just using it for push press and
it's
great. It's like very quickly just
great. It's like very quickly just
become my favorite movement. What'd you
become my favorite movement. What'd you
get done today? Uh we have a a dev build
get done today? Uh we have a a dev build
with uh of the pit package. Um, we also
with uh of the pit package. Um, we also
have entry points. So, you can just do
have entry points. So, you can just do
this from anywhere on your system. You
this from anywhere on your system. You
can do puffer
train and then wherever you are, it'll
train and then wherever you are, it'll
just like it'll save the checkpoints
there. Buffer train.
I actually still have to read that repo
more. Buffer train.
more. Buffer train.
Yep. Well, there's a default, right? The
Yep. Well, there's a default, right? The
defaults are breakout, but
like So then what I can do is puffer
like So then what I can do is puffer
eval.
Oops. And that'll just work from the pit
Oops. And that'll just work from the pit
package. And you can actually pull files
package. And you can actually pull files
down from Neptune or Wand as well. You
down from Neptune or Wand as well. You
can load stuff from
there. You can run like everything from
there. You can run like everything from
this
Uh getting just latest is kind of hard
Uh getting just latest is kind of hard
from uh from like
from uh from like
Neptune. Get
Neptune. Get
get Google deep
get Google deep
moon.
What? These are things I'm sure were
What? These are things I'm sure were
very funny with no sleep.
So you did multidiscreet I guess. Wait 0
So you did multidiscreet I guess. Wait 0
to 70. Oh no I see what you did. Okay
to 70. Oh no I see what you did. Okay
that's fine.
Oh
jeez. Oh, David stopped
jeez. Oh, David stopped
by. Wait, when did he must have stopped
by. Wait, when did he must have stopped
by late
then? Do they have a better model than
then? Do they have a better model than
the puffer one
yet? I don't think
yet? I don't think
so. We still We try to ship them good
so. We still We try to ship them good
models.
Wait, this
Wait, this
is Dude, this is this is off policy
is Dude, this is this is off policy
PO. This is like not supposed to work at
all. Right.
When's this memory get reset? Oh, no.
When's this memory get reset? Oh, no.
Never mind. Okay, it's still on policy.
Never mind. Okay, it's still on policy.
You're
You're
fine. So, it's funny. You're doing
fine. So, it's funny. You're doing
batch. You're doing this batched, right?
batch. You're doing this batched, right?
You don't have many batching at
Oh gosh, the nested functions.
Yeah, you're definitely going to be able
Yeah, you're definitely going to be able
to do a heck of a lot. Like you got too
to do a heck of a lot. Like you got too
many
variables. Like if you want to make your
variables. Like if you want to make your
own if you want to make your own
own if you want to make your own
training implementations, you should do
training implementations, you should do
them on an existing an existing model or
them on an existing an existing model or
I mean an existing environment. And if
I mean an existing environment. And if
you want to make your own environment,
you want to make your own environment,
you should use an existing training
you should use an existing training
implementation. It'll be way easier. I
implementation. It'll be way easier. I
mean, here like port the M to C and try
mean, here like port the M to C and try
it on Puffer and see how it works.
it on Puffer and see how it works.
That'll be some good engineering
That'll be some good engineering
experience for you as
well. You'll get to do some C. You
well. You'll get to do some C. You
should get some sleep first, otherwise
should get some sleep first, otherwise
you're going to make a mess of
it.
Right. I am about to go get dinner
Right. I am about to go get dinner
though. So, um I think I will be back
though. So, um I think I will be back
after dinner to look at some
after dinner to look at some
experiments. I got to figure out a
experiments. I got to figure out a
couple other things I can do. I might
couple other things I can do. I might
even start looking at like what research
even start looking at like what research
I want to start working on next. Um
I want to start working on next. Um
because I'm going crazy from doing
because I'm going crazy from doing
release stuff.
release stuff.
Um yeah. So, for folks
Um yeah. So, for folks
watching, thanks for stopping by. It's
watching, thanks for stopping by. It's
been a pretty darn good stream day.
been a pretty darn good stream day.
Um, all my stuff's free and open source.
Um, all my stuff's free and open source.
So, if you want to check that out, it's
So, if you want to check that out, it's
at
at
puffer.ai. You can help me out for free
puffer.ai. You can help me out for free
by starting the repository. That really
by starting the repository. That really
helps. And if you want to get involved
helps. And if you want to get involved
with dev, like most of our top
with dev, like most of our top
contributors came in with no RL
contributors came in with no RL
background at all. So, if you know how
background at all. So, if you know how
to program and you want to do some AI
to program and you want to do some AI
and like do some really hardcore ultra
and like do some really hardcore ultra
high performance
high performance
dev, run Discord. Also follow me on X
dev, run Discord. Also follow me on X
where I occasionally post reinforcement
where I occasionally post reinforcement
learning things. Other than that, thanks
learning things. Other than that, thanks
and I will be back probably after
and I will be back probably after
dinner.

Kind: captions
Language: en
Good
Good
morning. Okay, today the plan is
to go through the improvements to the
to go through the improvements to the
training code uh that I was on up late
training code uh that I was on up late
last night discussing with uh a few of
last night discussing with uh a few of
our
our
users. We're going to see if we can get
users. We're going to see if we can get
like a really clean entry point style uh
like a really clean entry point style uh
interface to the main training code.
interface to the main training code.
Then we're going to see if we can write
Then we're going to see if we can write
some decent docs for that. Put together
some decent docs for that. Put together
a good sample
project and then we'll see where that
project and then we'll see where that
puts us. Probably have to start on the
puts us. Probably have to start on the
packaging, all that stuff. Uh next
packaging, all that stuff. Uh next
couple of days is just going to be like
couple of days is just going to be like
really trying to crank out the last
really trying to crank out the last
things for this uh for this release.
Okay. So, to get started
here, the thing that we want to do is
here, the thing that we want to do is
take all of these little
take all of these little
snippets and uh cleanly make entry
snippets and uh cleanly make entry
points for these
points for these
separately. That was the suggestion that
separately. That was the suggestion that
we
had do like this little config
Now, this stuff I don't quite know what
Now, this stuff I don't quite know what
we're going to do with, but I think for
we're going to do with, but I think for
now what we do is we just take this blob
now what we do is we just take this blob
of
code, and this will go like
here. And then this one here, this is
here. And then this one here, this is
the training entry
point. This probably will be able to be
simplified. And what else do we have in
simplified. And what else do we have in
here? There's all this importing.
There's also this loading
code. I don't know if this should go
code. I don't know if this should go
into this is not loading of configs.
We do know this is going to go into
We do know this is going to go into
evaluate.
Missed one
line. I missed a
line profile.
and then
export. Now, the main thing is just
export. Now, the main thing is just
going to be how we get this loading code
going to be how we get this loading code
into a a decent spot.
into a a decent spot.
We just get rid of all
this. I mean, that's still a fair chunk
this. I mean, that's still a fair chunk
of code,
right? So, this can
right? So, this can
be let's see realistically. So, this
be let's see realistically. So, this
loads the
loads the
N and then we have a bunch of policy
N and then we have a bunch of policy
loading code.
And then this local rank this just has
And then this local rank this just has
to be called
before where's this has to where does
before where's this has to where does
this have to get
called? I think when you make the
called? I think when you make the
policy, you have to do this,
right? Yeah, we can punt on that for
right? Yeah, we can punt on that for
just a little
bit. So, this can be load
checkpoint and um
We still have tons of stuff here.
Do you want to pass vechan
policy? It's a little bit at odds,
policy? It's a little bit at odds,
right? trying to provide a
right? trying to provide a
um entry point
um entry point
interface and at the same time trying to
interface and at the same time trying to
provide uh a importable interface
The entry point has to not take arcs,
The entry point has to not take arcs,
right?
I mean realistically I could just make
I mean realistically I could just make
like a load everything
right? Can you make um can you make the
right? Can you make um can you make the
entry point function take optional
arguments? You probably can, right?
arguments? You probably can, right?
like you might be not be able to pass
like you might be not be able to pass
them from
CLI, but you should be able to make them
CLI, but you should be able to make them
take like starark bars or
take like starark bars or
whatever. Okay, let's assume that that's
whatever. Okay, let's assume that that's
possible.
possible.
And then this is like load
config. And then we do like
config. And then we do like
load
envir load.
We're not going to keep all these little
We're not going to keep all these little
functions,
I thought there's like a second
I thought there's like a second
distributed
distributed
thing. We can leave it alone for now.
This loads the
This loads the
policy. Oh, you need a back end though.
if you wanted to like just have a load
if you wanted to like just have a load
everything, right? So it's like args
everything, right? So it's like args
equals load
equals load
config and then
like go
like go
spenser forcing actions to
spenser forcing actions to
be yes. So that is a thing. I thought
be yes. So that is a thing. I thought
that I'd fix
that I'd fix
that. Um it shouldn't be the end binding
that. Um it shouldn't be the end binding
though. It should be the dtype of the
though. It should be the dtype of the
numpy array that you pass to it. Right.
you're doing continuous
you're doing continuous
right or
right or
something. So by default the gymnasium
something. So by default the gymnasium
space is a float 64 and you should
space is a float 64 and you should
double check if uh also numpy zeros
double check if uh also numpy zeros
defaults to float
defaults to float
64 just
multidiscrete end bindings forcing
multidiscrete end bindings forcing
actions to
actions to
be well how's that even possible like
be well how's that even possible like
where are you seeing
where are you seeing
it hang on let's just do this jer
Okay. No. Y second. Let
Okay. No. Y second. Let
me freaking paranoid about every time
me freaking paranoid about every time
something itches like do I have a tip?
So, what's going on?
So, what's going on?
Um, in my GPU drive.py file, Mhm. when
Um, in my GPU drive.py file, Mhm. when
I'm passing in my slice of actions,
it creates this like ghost error where
it creates this like ghost error where
it's assuming I'm passing in well I'm
it's assuming I'm passing in well I'm
passing in I guess a float 32 somehow
passing in I guess a float 32 somehow
and it's only accepting float 64s like
and it's only accepting float 64s like
what do you mean it's only the only way
what do you mean it's only the only way
I was able to it it wouldn't even get to
I was able to it it wouldn't even get to
the binding like endbinding.h each file
the binding like endbinding.h each file
it would just fail immediately in the
it would just fail immediately in the
attempt of calling it. What's the error
attempt of calling it. What's the error
message?
Action tensor passes float 64 parenthesy
Action tensor passes float 64 parenthesy
pass np float 32 buffer. Okay, so that's
pass np float 32 buffer. Okay, so that's
supposed to do the
supposed to do the
opposite. So that's supposed to prevent
opposite. So that's supposed to prevent
you from passing float 64s by mistake.
you from passing float 64s by mistake.
So right now it's only forcing it as if
So right now it's only forcing it as if
if I force the actions to be a float 64
if I force the actions to be a float 64
then it goes through.
then it goes through.
So I mean I have this on my screen here.
So I mean I have this on my screen here.
Incorrect because like it should just be
Incorrect because like it should just be
whatever the type I pass it in in the
whatever the type I pass it in in the
first place. Well the reason we did this
first place. Well the reason we did this
is because like there's this really dumb
is because like there's this really dumb
quirk where like uh so people are used
quirk where like uh so people are used
to torch tensors which default float 32
to torch tensors which default float 32
but if you do numpy it defaults to float
but if you do numpy it defaults to float
64 which will totally screw you in most
64 which will totally screw you in most
cases. So, we just disable float 64. Um,
cases. So, we just disable float 64. Um,
so this is supposed to be doing the
so this is supposed to be doing the
opposite. This is supposed to be
opposite. This is supposed to be
disabling float
64. Is there a reason that it would be I
64. Is there a reason that it would be I
mean, look, it's a it's a check that the
mean, look, it's a it's a check that the
action stride
is size of. Do you have two actions?
is size of. Do you have two actions?
Yes. I wonder if that's why
because multidiscreet so it's two
because multidiscreet so it's two
actions. I wonder if that's why it does
actions. I wonder if that's why it does
it because it's checking the
it because it's checking the
stride and I'm pyra
stride and I'm pyra
stride. This probably gives me bites.
stride. This probably gives me bites.
I couldn't even find where you're this
I couldn't even find where you're this
like error is being tossed.
like error is being tossed.
Line 74.
If you just look for the error string,
If you just look for the error string,
it's in the end binding
file.
The Why does yours look different than
The Why does yours look different than
mine? But wait, are you an M binding
mine? But wait, are you an M binding
right now? Mhm.
Yeah. So, is the file you're in right
Yeah. So, is the file you're in right
now? What file are you in? Ocean and
now? What file are you in? Ocean and
binding.h.
binding.h.
Uh,
what? This should be item size, I
guess. Am I in the wrong file? I'm so
guess. Am I in the wrong file? I'm so
confused.
Maybe I can do item size.
I feel like I'm like looking at a
ghost because in my endbinding file,
ghost because in my endbinding file,
although it claims that error is being
although it claims that error is being
tossed, I don't if I type in command
tossed, I don't if I type in command
float 64, it doesn't exist in my file.
float 64, it doesn't exist in my file.
Huh.
Well, I see what could be an error here.
Well, I see what could be an error here.
So this could just be item
size. I'm pretty sure that would fix it.
give that a
give that a
shot. Um, okay. Well, step one is this
shot. Um, okay. Well, step one is this
is weird because I don't even see the
is weird because I don't even see the
thing you're looking at in terms of my
files should be there. does not sync my
files should be there. does not sync my
I'll sink my fork again. But I mean, I
I'll sink my fork again. But I mean, I
can push this as well if you want this
can push this as well if you want this
item size change.
I'm in the middle of packing up the
I'm in the middle of packing up the
clean puff pile,
though. One sec. Because like this is
though. One sec. Because like this is
just like really trippy to me because I
just like really trippy to me because I
don't even understand where this is.
Wait, what? It just like magically
Wait, what? It just like magically
appeared,
dude. That is like real
weird. The version of I must have had a
weird. The version of I must have had a
different All right. Well, let's try
different All right. Well, let's try
again. See what happens.
This may have been like I just had a a a
This may have been like I just had a a a
dev that was just like that didn't exist
dev that was just like that didn't exist
right before I pulled it. I don't
know. Find out what happens
know. Find out what happens
though. Okay. So, what was the fix you
though. Okay. So, what was the fix you
did? You changed it to item size. I can
did? You changed it to item size. I can
push it for
you. I didn't test it, but
Okay, we'll try this. Okay.
And then yeah, my plan is to attempt to
And then yeah, my plan is to attempt to
get the version of the clean puff roll
get the version of the clean puff roll
pretty well that we want to ship today
pretty well that we want to ship today
and to have entry points and docks and
and to have entry points and docks and
all of it
all of it
done. However much coffee that takes.
negative. Still
negative. Still
angry. Did it actually
rebuild? I'll delete the build folder.
Man, it is crazy how bad like release
Man, it is crazy how bad like release
work just messes with me. It's like I
work just messes with me. It's like I
woke up feeling like good and ready to
woke up feeling like good and ready to
like finish this stuff and as soon as I
like finish this stuff and as soon as I
like look at it, I'm just like
like look at it, I'm just like
bored. is why it's it's like it's like
bored. is why it's it's like it's like
this is why it's so important that like
this is why it's so important that like
if I don't get a release done in like a
if I don't get a release done in like a
week or whatever, it's it's going to be
week or whatever, it's it's going to be
a month because like of how slow
a month because like of how slow
everything gets. I'm just going to try
everything gets. I'm just going to try
to like blaze through this today as much
to like blaze through this today as much
as I possibly can and just like have
as I possibly can and just like have
something damn
shippable cuz otherwise it's just like
shippable cuz otherwise it's just like
it's just ridiculous.
your goal is to get all this kind of
your goal is to get all this kind of
early stuff done and then still run
early stuff done and then still run
experiments.
experiments.
Yeah, I think that the main things I
Yeah, I think that the main things I
have to finish, right? So, I have to
have to finish, right? So, I have to
finish cleaning. I This is kind of part
finish cleaning. I This is kind of part
documentation in a sense cuz like me
documentation in a sense cuz like me
cleaning this up makes the docs really
cleaning this up makes the docs really
easy. I think the docs are literally
easy. I think the docs are literally
going to take me like an hour once I
going to take me like an hour once I
have the demo file cleaned up because
have the demo file cleaned up because
there's going to be nothing to document.
there's going to be nothing to document.
It's going to be so easy.
It's going to be so easy.
Um, so I want to do that. I want to have
Um, so I want to do that. I want to have
the docs. I got to get the package built
the docs. I got to get the package built
right. And then we have to dial in the
right. And then we have to dial in the
final sweep defaults that we're going to
final sweep defaults that we're going to
ship, which I've been running
ship, which I've been running
experiments for in the background over
experiments for in the background over
the last few days.
the last few days.
Um, we have to like go through the old
Um, we have to like go through the old
M. Honestly, I think I'm going to just
M. Honestly, I think I'm going to just
delete half of the so-called supported M
delete half of the so-called supported M
that aren't really supported because
that aren't really supported because
nobody uses them and they just like add
nobody uses them and they just like add
bloat. Um, like all the old shitty ones
bloat. Um, like all the old shitty ones
that you'd have to be insane to want to
that you'd have to be insane to want to
use anyways will just delete. And uh
use anyways will just delete. And uh
we'll make like Atari work, we'll make
we'll make like Atari work, we'll make
Proctton work, we'll make like the
Proctton work, we'll make like the
classic ones that people want to work,
classic ones that people want to work,
right? And you know, maybe we'll ship
right? And you know, maybe we'll ship
like an Atari baseline as well from a
like an Atari baseline as well from a
sweep.
sweep.
Um yeah, and then other than that, I
Um yeah, and then other than that, I
it's just like little bits of clean up
it's just like little bits of clean up
here and there, you know, like make sure
here and there, you know, like make sure
all the M's are on the new bindings,
all the M's are on the new bindings,
make sure all the logs are good, make
make sure all the logs are good, make
sure all the M's have like baselines,
sure all the M's have like baselines,
all that crap.
Any
Any
luck? No. I'm going to use one of the
luck? No. I'm going to use one of the
other things in
the I think it's just like a how I'm
the I think it's just like a how I'm
passing it. I think I just need to give
passing it. I think I just need to give
it
the right
thing. But at least at this point, I can
thing. But at least at this point, I can
actually like work with it because
actually like work with it because
before
Well, I Yeah, you're not. This is stuff
Well, I Yeah, you're not. This is stuff
that's going to confuse you though.
that's going to confuse you though.
Like, well, maybe not. You've done
Like, well, maybe not. You've done
enough system dev. So I mean the issue
enough system dev. So I mean the issue
here right is that like you can't
here right is that like you can't
introspect types in C right so the idea
introspect types in C right so the idea
was to the only thing you can do is you
was to the only thing you can do is you
can check the bite size. So if you pass
can check the bite size. So if you pass
me something that's not four
me something that's not four
bytes, I it should complain.
You see?
You see?
Well, I'm just saying at least I can
Well, I'm just saying at least I can
like work with it. Before it was like
like work with it. Before it was like
saying an error existed on a code that
saying an error existed on a code that
didn't exist in my file and must have
didn't exist in my file and must have
compiled it and then pulled or
compiled it and then pulled or
something. Yeah, I must have compiled an
something. Yeah, I must have compiled an
old version, pulled, changed it, and
old version, pulled, changed it, and
then
then
even so apparently even if you run force
even so apparently even if you run force
on setup.pay Pi does not over it doesn't
on setup.pay Pi does not over it doesn't
overwrite. You have to actually delete
overwrite. You have to actually delete
the build folder. Yep.
the build folder. Yep.
I might have a work around for that. I
I might have a work around for that. I
have to figure out I don't know if just
have to figure out I don't know if just
including the the extra files, the
including the the extra files, the
source files would fix that. The thing
source files would fix that. The thing
is like you could technically have an
is like you could technically have an
arbitrary number ofh files. So like
arbitrary number ofh files. So like
yeah, but I mean I think we can at least
yeah, but I mean I think we can at least
get your main one. And if you decide to
get your main one. And if you decide to
write extra files for no reason, that's
write extra files for no reason, that's
kind of your
kind of your
problem.
Anything else I can do up here or can I
Anything else I can do up here or can I
get back to doing dish? No, you can go
get back to doing dish? No, you can go
back to doing your thing. I I'll figure
back to doing your thing. I I'll figure
this out from here. All right. See you,
Spencer. Who's yacking at me in
Spencer. Who's yacking at me in
development? Oh, no.
there. All right, one second. Let me
there. All right, one second. Let me
check a couple messages.
Oh, perfect. Uh, I'm going to have to
Oh, perfect. Uh, I'm going to have to
take a freight delivery
take a freight delivery
soon. I think what we'll do is we'll
soon. I think what we'll do is we'll
just
just
11. I will keep on this for a bit till I
11. I will keep on this for a bit till I
have to take freight. Then I get my new
have to take freight. Then I get my new
chair.
or
Anthony. few questions for you
hopefully. Yeah, go for
it. Are you in like a garage that looks
it. Are you in like a garage that looks
like a gym behind you? I'm in the puffer
like a gym behind you? I'm in the puffer
training
training
facility. It is for training agents and
facility. It is for training agents and
for training
for training
myself. So, servers go on the racks in
myself. So, servers go on the racks in
the back. Uh we are in the process of
the back. Uh we are in the process of
moving our servers here and also getting
moving our servers here and also getting
some new ones. And then yes, we also
some new ones. And then yes, we also
have some gym equipment for training of
me. It's a warehouse. This would be a
me. It's a warehouse. This would be a
ridiculously large garage.
It's pretty nice because like I get so
It's pretty nice because like I get so
much more exercise in having this
much more exercise in having this
literally be in the same room because I
literally be in the same room because I
can just decide like, eh, all right,
can just decide like, eh, all right,
I've done a bit of work. Let me go clear
I've done a bit of work. Let me go clear
my head for a second and just do this.
There you
There you
go. Robotics PhD student in my second
go. Robotics PhD student in my second
year. I feel the urge to go the full
year. I feel the urge to go the full
Unix
Unix
setup. I don't want to give up
setup. I don't want to give up
Windows. Then use WSL if you have to.
Windows. Then use WSL if you have to.
I've gotten I got sick of it and I just
I've gotten I got sick of it and I just
ditched Windows and I deal with, you
ditched Windows and I deal with, you
know, the occasional Linux
know, the occasional Linux
bugs.
bugs.
Um, but if you don't, just use WSL if
Um, but if you don't, just use WSL if
you don't want to do
that.
that.
Seamless. Well, it's a little different
Seamless. Well, it's a little different
if you're on a laptop
if you're on a laptop
primarily. Linux on laptop, there's
primarily. Linux on laptop, there's
always freaking issues. Heck, I put
always freaking issues. Heck, I put
Linux on my new Razer laptop and I've
Linux on my new Razer laptop and I've
barely used it cuz well, one, I have
barely used it cuz well, one, I have
this set up, but also it's got trackpad
this set up, but also it's got trackpad
issues, the drivers.
But honestly,
But honestly,
like if you want to keep both, what I
like if you want to keep both, what I
would suggest you do is you just get you
would suggest you do is you just get you
get an extra box. Well, I guess it kind
get an extra box. Well, I guess it kind
of depends on budget and stuff, but like
of depends on budget and stuff, but like
if your lab gets you a box or whatever,
if your lab gets you a box or whatever,
you just have a separate box that just
you just have a separate box that just
has full Linux or even a server build of
has full Linux or even a server build of
Linux, doesn't matter. And then you just
Linux, doesn't matter. And then you just
like run your training runs there,
like run your training runs there,
sshed. So like I have this box here.
sshed. So like I have this box here.
This box has a 4090 which is like nice
This box has a 4090 which is like nice
for me testing stuff locally, but I
for me testing stuff locally, but I
don't really train stuff on this, right?
don't really train stuff on this, right?
Like other than like doing perf tests
Like other than like doing perf tests
and things. I do most of the training
and things. I do most of the training
runs sshed into any of our uh our server
runs sshed into any of our uh our server
boxes. Like we've
boxes. Like we've
got it set, we've got this set up
got it set, we've got this set up
here. These machines are actually going
here. These machines are actually going
to get moved to right behind me from
to get moved to right behind me from
where they are right now. Um yeah and we
where they are right now. Um yeah and we
just do our dev like we just do our
just do our dev like we just do our
experiments as stitched into these
Google Slides, Google like Google Slides
Google Slides, Google like Google Slides
or Google
or Google
Docs. I haven't used Word in like I
Docs. I haven't used Word in like I
don't think I've used Word since I was
don't think I've used Word since I was
like
14. Quicks quick. That's an amusing
14. Quicks quick. That's an amusing
name.
Welcome. All right. So, this actually
Welcome. All right. So, this actually
works
works
here. This train
here. This train
correctly. Yeah, this
correctly. Yeah, this
does. So, I mean, this isn't bad. We
does. So, I mean, this isn't bad. We
like can clean this up a little bit and
like can clean this up a little bit and
then just have
then just have
like the load stuff split up a little
I know. I don't really miss
I know. I don't really miss
like having standalone Word apps or
like having standalone Word apps or
what? Like it's kind of just bad.
what? Like it's kind of just bad.
Anyways, if you want like a non-web
Anyways, if you want like a non-web
local option though, I used Libre for a
local option though, I used Libre for a
little bit in undergrad. Was like fine
little bit in undergrad. Was like fine
because I didn't have to write that
because I didn't have to write that
much.
much.
Um, well, that's not totally true. I
Um, well, that's not totally true. I
kind of did do a bit of write, a fair
kind of did do a bit of write, a fair
bit of writing in
bit of writing in
undergrad, but it wasn't like technical
undergrad, but it wasn't like technical
writing. So, like you didn't really need
writing. So, like you didn't really need
to format [ __ ] He just needed to
write. Okay. So, this needs to be loaded
write. Okay. So, this needs to be loaded
in here. So it should be args.
Not what I
wanted. doing something screwy.
200 lines of
200 lines of
code used to scare me back then looks
code used to scare me back then looks
scarier now. Look. Okay, this config
scarier now. Look. Okay, this config
loading stuff. I hate having 200 lines
loading stuff. I hate having 200 lines
of config more than any of my users do.
of config more than any of my users do.
I've been trying to cut this thing down
I've been trying to cut this thing down
a
a
ton, but it's actually pretty damn
ton, but it's actually pretty damn
complicated what it has to do. It's not
complicated what it has to do. It's not
just like it's not like a oneline load
just like it's not like a oneline load
thing. This thing actually gives you let
thing. This thing actually gives you let
me see if it works right
me see if it works right
now. Okay, look at that. So this thing
now. Okay, look at that. So this thing
gives you this whole menu of args. This
gives you this whole menu of args. This
thing is dynamically
thing is dynamically
populated based on the end that's
populated based on the end that's
specified. So the default is breakout
specified. So the default is breakout
here. So this has this frame skip param
here. So this has this frame skip param
because breakout has frame skip. All
because breakout has frame skip. All
right. Right? So you have your full help
right. Right? So you have your full help
menu. But I can
do I can do
this. And now look at this. I have snake
this. And now look at this. I have snake
ends. So dynamic help menu populated by
ends. So dynamic help menu populated by
config
files. So I had to do some extra stuff
files. So I had to do some extra stuff
for that.
But it means that you if you need help,
But it means that you if you need help,
if you don't know what the args are or
if you don't know what the args are or
whatever, you immediately have access to
everything. Oh, hey, welcome YouTube
everything. Oh, hey, welcome YouTube
folks. Fair on
folks. Fair on
today. For anyone new here, this is
today. For anyone new here, this is
ultra high performance reinforcement
ultra high performance reinforcement
learning dev and research done live. Uh,
learning dev and research done live. Uh,
this is all open source and free at
this is all open source and free at
puffer.ai. You can play some of the
puffer.ai. You can play some of the
games. You can watch like the neural
games. You can watch like the neural
nets play some of the games in here as
nets play some of the games in here as
well. And uh you can start on GitHub to
well. And uh you can start on GitHub to
support and you can join the discord if
support and you can join the discord if
you want to get involved with open
you want to get involved with open
source contribution. It's a great way to
source contribution. It's a great way to
get into
get into
RL. And what we're doing these this
RL. And what we're doing these this
week, this is all like pre-release
week, this is all like pre-release
packaging work because um we're leading
packaging work because um we're leading
up to our next big milestone release. Uh
up to our next big milestone release. Uh
so there's like a lot of just little
so there's like a lot of just little
fiddly bits of dev work around that. But
fiddly bits of dev work around that. But
as soon as this is released, the plan is
as soon as this is released, the plan is
that uh I'm going to be doing like a ton
that uh I'm going to be doing like a ton
of just hardcore algorithm dev and just
of just hardcore algorithm dev and just
trying to really figure out how we push
trying to really figure out how we push
RL to be well to be what it should have
RL to be well to be what it should have
been for the last 5
years. Okay. So, what we're going to do
years. Okay. So, what we're going to do
here, the point is that we add entry
points. Can you do
points. Can you do
like
like
train? I wonder if this like works.
is so freaking
slow. So this is how long it takes
slow. So this is how long it takes
Python to do anything. uh when it's
Python to do anything. uh when it's
literally it's not even installing
literally it's not even installing
anything because everything's already
anything because everything's already
pre-installed. I I mean I should just be
pre-installed. I I mean I should just be
using
UV. I haven't had time to fully
UV. I haven't had time to fully
integrate like I haven't really had time
integrate like I haven't really had time
to integrate UB yet.
It makes like some dumb opinionated
It makes like some dumb opinionated
choices about how you should do dev. And
choices about how you should do dev. And
there is my
there is my
freight. I'm going to go get this chair
freight. I'm going to go get this chair
delivered. And uh then I will be back
delivered. And uh then I will be back
here with more dev. You streaming all
here with more dev. You streaming all
day? Yes. as soon as I get um as soon as
day? Yes. as soon as I get um as soon as
I go get this chair
I go get this chair
delivered where I woke up. And so I'm
delivered where I woke up. And so I'm
streaming. I'm about to go and get What
streaming. I'm about to go and get What
time do you wake up? I wake up usually
time do you wake up? I wake up usually
between like between 7 and 8, but then
between like between 7 and 8, but then
like I go run. I get a little bit of
like I go run. I get a little bit of
exercise. I do other stuff like several
exercise. I do other stuff like several
days of the week. So it takes me a while
days of the week. So it takes me a while
to get here. I don't know. The hour the
to get here. I don't know. The hour the
work hours honestly aren't that crazy at
work hours honestly aren't that crazy at
the moment. Like releases always are
the moment. Like releases always are
just a drag. So I always work fewer
just a drag. So I always work fewer
hours like around release. Anyways, let
hours like around release. Anyways, let
me go get this chair and then uh I will
me go get this chair and then uh I will
be back in a
Okay, we're back here.
Okay, we're back here.
So, let me at least fix the camera setup
So, let me at least fix the camera setup
for now. But uh I I'm like sitting way
for now. But uh I I'm like sitting way
too low down in this
too low down in this
thing. Do like this for
now. Yeah.
I uh I do like this chair, but I
I uh I do like this chair, but I
neglected to
consider if it doesn't swivel. It's kind
consider if it doesn't swivel. It's kind
of tough to put it in front of a
of tough to put it in front of a
desk. Yeah, this keyboard's super high
up. How comfortable I can get thing.
That would be a keyboard on lap angle
That would be a keyboard on lap angle
for
now. It is very comfortable
now. It is very comfortable
though. I'm just down too low.
I'm trying to think what I want to do
I'm trying to think what I want to do
for now to make this like reasonable.
This isn't
terrible. Well,
terrible. Well,
whatever. We will um we'll try it like
whatever. We will um we'll try it like
this for now and then we'll see how this
this for now and then we'll see how this
goes.
I think realistically I'm just going to
I think realistically I'm just going to
get like um like a 4 in swivel base to
get like um like a 4 in swivel base to
put under this thing and then I'll be
good. Oh, I am sorry.
Hey keyboard on
lap.
lap.
Nah, do it
either. Well, I'll just deal with it for
either. Well, I'll just deal with it for
now. It's just it's like very very
now. It's just it's like very very
clearly 4 in too low.
One thing I am going to do is bump this
One thing I am going to do is bump this
up because super far from
monitor and I should probably do the mic
monitor and I should probably do the mic
a little bit as well. Yeah, we'll do
a little bit as well. Yeah, we'll do
that.
Okay. So, plan for now is get the uh the
Okay. So, plan for now is get the uh the
entry points all set
entry points all set
up
up
and see how uh how the train file looks
and see how uh how the train file looks
after we do that.
I can tell this is going to be good,
I can tell this is going to be good,
though. It's kind of crazy how big of a
though. It's kind of crazy how big of a
difference it made in uh in Florida when
difference it made in uh in Florida when
I like replace the office chair with a
I like replace the office chair with a
lounge
chair. It's just like immediately the
chair. It's just like immediately the
desire to just get up constantly and not
desire to just get up constantly and not
be at the screen. It just goes away.
So this now
runs. How do you do like
runs. How do you do like
multi-word console
multi-word console
scripts? This doesn't work.
I already did
This try it with hypens for now.
Then we'll see if uh I can get spaces to
Then we'll see if uh I can get spaces to
work at some point.
still building.
Okay. So, this works with um without the
Okay. So, this works with um without the
hyphen. So, what we're just going to do
hyphen. So, what we're just going to do
is we're going to like let's just define
is we're going to like let's just define
them all and then we shouldn't have to
them all and then we shouldn't have to
keep waiting for this bloody thing to
keep waiting for this bloody thing to
reinstall every time.
Okay. So, this is like pretty much what
Okay. So, this is like pretty much what
we'd want to expose, right?
And now when we edit the code, it'll
And now when we edit the code, it'll
just edit the uh it'll update in place
just edit the uh it'll update in place
and we won't have to keep
and we won't have to keep
rebuilding. I think what this
rebuilding. I think what this
technically does is it just generates
technically does is it just generates
you
you
um it probably just generates like a dot
um it probably just generates like a dot
file or something somewhere.
What time is it for you? Noon.
So this should run
eval but it runs training for some weird
reason. Is it running training?
Oh yeah, it is running printing because
Oh yeah, it is running printing because
I have experiment
here. So this should now run
here. So this should now run
eval. There we
eval. There we
go. Except it's
go. Except it's
uh not doing anything which is a little
awkward. Extra window for this.
Okay. I do have to have the font super
Okay. I do have to have the font super
big here though because I have a little
big here though because I have a little
bit of a glare and I'm sitting uh way
bit of a glare and I'm sitting uh way
too far away from the
too far away from the
monitor. I'll have to order something
monitor. I'll have to order something
for
that and probably get like a just
that and probably get like a just
I need like a 4 inch thick lazy Susan
I need like a 4 inch thick lazy Susan
pretty much to just stick this chair on
pretty much to just stick this chair on
top
Oh, So, we do just get a clean break
point.
point.
True.
True.
Okay. So, rerender
Okay, so we get actions,
right? Oh, something just got
right? Oh, something just got
unindented, didn't
unindented, didn't
it? Yeah, something got
unindented. Wait, what?
Wow. Uh, am I just not seeing it
Wow. Uh, am I just not seeing it
here? It's like
here? It's like
looping without stepping the
end. Okay. All
end. Okay. All
true
render.
Okay. So, no grad
Okay. So, no grad
here. Sample
here. Sample
logits.
logits.
Reshape. And it just freaking skips the
Reshape. And it just freaking skips the
rest of
rest of
this. How does it skip the rest? Like,
this. How does it skip the rest? Like,
how's it skipping this?
That's bizaro,
right? Oh no, there it just
stepped. Wait, why the heck is the
stepped. Wait, why the heck is the
puffer fish like
The puffer's way up
top.
top.
Oh, hang on. It's
Oh, hang on. It's
[Music]
[Music]
because I see
because I see
it. This goes here.
There we
go. There. There we go. Now this works.
go. There. There we go. Now this works.
We can just call paparel
We can just call paparel
eval and this will load
eval and this will load
whatever.
whatever.
Okay. Do papel train.
We should be able to
load. Was it
load. Was it
load model
path? Okay. So, here's the these are not
path? Okay. So, here's the these are not
good hypers or it's like not running
good hypers or it's like not running
long enough. one of the
two. So what we can do
is load model
is load model
app
63. So now we actually can just load in
63. So now we actually can just load in
the model we just trained which Not a
the model we just trained which Not a
great
great
model, but you know, it does
okay. Pretty
decent. Now, we just need
decent. Now, we just need
profile, export, and sweep to
profile, export, and sweep to
work. And uh yeah, we should be
work. And uh yeah, we should be
good. Profile, export, and sweep.
The way that we do
this, we get args as load
this, we get args as load
config. Then we take this
config. Then we take this
stuff. We put this here.
this
this now. Sweep is probably still going
this now. Sweep is probably still going
to take Neptune, right? So
paparel item size did
paparel item size did
work doesn't overwrite the build pile.
work doesn't overwrite the build pile.
Yep. I'm trying to figure out why that
Yep. I'm trying to figure out why that
is, Spencer. But uh yeah, it's kind of
gross. Oh, wait. Even if you delete the
gross. Oh, wait. Even if you delete the
build
build
file doesn't overwrite the build file in
file doesn't overwrite the build file in
Ocean M. Okay, that's
screwy. That's really
gross. We're going to move Neptune
gross. We're going to move Neptune
anyways.
What do we think of this
What do we think of this
though? This sort of a
thing. Can you pass some quarks?
Like if I do like
this, you can pass
this, you can pass
bars. I can do
bars. I can do
like I can do like args is none.
I do think I need to have a way to
I do think I need to have a way to
separate the loading of the back end and
separate the loading of the back end and
the policy which is a little
annoying. Be dropped like a rock.
annoying. Be dropped like a rock.
MISK time is
MISK time is
71. Uh, which
71. Uh, which
MISK? Train MISK or EVAL
MISK? Uh, logging Spencer. It's probably
MISK? Uh, logging Spencer. It's probably
logging every tick or some weird
thing. That'd be my initial
guess. Amazon
guess. Amazon
on
on
late
air. Oh yeah, they sell these
Let me uh message
Damn that, man. That's quite the setup.
Damn that, man. That's quite the setup.
Well, I'm about uh the new chair is
Well, I'm about uh the new chair is
about 4 in too low, so I'm like sitting
about 4 in too low, so I'm like sitting
super down here. But
super down here. But
yeah, buffer CLI is not in 20. No, it's
yeah, buffer CLI is not in 20. No, it's
literally being developed right now. And
literally being developed right now. And
literally all it is, it's the same as
literally all it is, it's the same as
just importing the fi importing the file
just importing the fi importing the file
and running the function. It's just to
and running the function. It's just to
give you um the ability to run training
give you um the ability to run training
without having to clone the repo. That's
all cuz people ask for that.
Well, this thing can be like some of
Well, this thing can be like some of
these are pretty easy to fix if I just
these are pretty easy to fix if I just
do these like one by
do these like one by
one like
one like
[Music]
[Music]
args args of end of name.
Why syntax highlighter still show
this? Oh, you have to do this
dummy. All right. And then
paparel evaluate.
paparel evaluate.
So this is now
just I guess I need like the first
just I guess I need like the first
however many lines of experiment.
It'll probably be something like this.
Okay. So the only thing that I need to
Okay. So the only thing that I need to
figure out now is how I do how I make it
figure out now is how I do how I make it
so you can also pass this thing right
so you can also pass this thing right
without making a total
without making a total
mess and then we will be
good. Let me look at the load functions.
If I don't mind repeating a little
If I don't mind repeating a little
logic, it's easy,
right? Um 2.0 has sweeps, but it doesn't
right? Um 2.0 has sweeps, but it doesn't
have our custom sweeps. It just has
have our custom sweeps. It just has
integration with WandB's existing sweeps
integration with WandB's existing sweeps
method as well as with
method as well as with
carbs. the new protein algorithm and our
carbs. the new protein algorithm and our
new sweep stuff is in dev. Yeah, I mean
new sweep stuff is in dev. Yeah, I mean
our dev cycles are pretty long, right?
our dev cycles are pretty long, right?
Like we only do two to three major
Like we only do two to three major
updates a year. Um it's all open source,
updates a year. Um it's all open source,
so you're free to like grab dev at any
so you're free to like grab dev at any
time and like if you have problems, I
time and like if you have problems, I
will help in Discord. But then this is
will help in Discord. But then this is
also something that we do for companies,
also something that we do for companies,
right? Is like we deliver like the
right? Is like we deliver like the
bleeding edge features from dev like
bleeding edge features from dev like
integrated for people specifically under
integrated for people specifically under
contracts.
So, we keep our dev cycles long and if
So, we keep our dev cycles long and if
you want the stuff that's like leading
you want the stuff that's like leading
edge early in a corporate setting and
edge early in a corporate setting and
pay us for that. Um, otherwise, you
pay us for that. Um, otherwise, you
know, you're more than welcome to like
know, you're more than welcome to like
just jump on the Discord and say like,
just jump on the Discord and say like,
"Hey, I'm trying to build like an end
"Hey, I'm trying to build like an end
for I'm trying to do something for my
for I'm trying to do something for my
project. How do I like pull the latest
project. How do I like pull the latest
stuff?" And we'll help you.
Actually, this kind of helps. I can sit
Actually, this kind of helps. I can sit
up like this. This chair is actually big
up like this. This chair is actually big
enough that I can sit cross-legged on
enough that I can sit cross-legged on
it.
in
in
Discord. Yeah. I mean, we're so far
Discord. Yeah. I mean, we're so far
ahead in dev right now. Like, it's
ahead in dev right now. Like, it's
literally our reinforcement learning is
literally our reinforcement learning is
a different field with puffer lab uh
a different field with puffer lab uh
puffer dev versus 20. It's straight up a
puffer dev versus 20. It's straight up a
different field.
slowly piecing it together. It's going
slowly piecing it together. It's going
to be very easy. It's just like there
to be very easy. It's just like there
are a few last annoyances that are like
are a few last annoyances that are like
making stuff confusing, but it's going
making stuff confusing, but it's going
to be very easy.
At least that is my
At least that is my
goal is that this will be See?
So here's the uh the
So here's the uh the
idea is that like we'll just do like
idea is that like we'll just do like
args equals args or load
config. Super maven must know my coding
config. Super maven must know my coding
style
style
because this is not the common way you
because this is not the common way you
would do this.
That's pretty
good. Do the same
good. Do the same
for Well, for sweeps, you don't need to
for Well, for sweeps, you don't need to
be able to
do you don't need to be able to pass a
do you don't need to be able to pass a
vean or a policy for sweeps.
vean or a policy for sweeps.
Do Yeah.
Do you need to be able to pass policy to
Do you need to be able to pass policy to
sweeps?
[Music]
need a policy creator, I guess,
right? Which is not
right? Which is not
like we're going to just leave the
like we're going to just leave the
stupid thing as is for now.
fix the rest of this and not stress over
fix the rest of this and not stress over
the small
stuff. All right.
autotune. Have not used this in forever.
autotune. Have not used this in forever.
So, we'll like
We punt a little tiny bit
here. We can probably still clean
here. We can probably still clean
uh some things up here.
Now you can call this
Now you can call this
yourself. You can call this yourself
yourself. You can call this yourself
just
fine. This still feels like a deep call
fine. This still feels like a deep call
graph, right?
Like, is it just me or does this still
Like, is it just me or does this still
feel like a super deep call
graph? I think the main thing I don't
graph? I think the main thing I don't
like
here, I don't like that train calls
here, I don't like that train calls
experiment like this. Experiment feels
experiment like this. Experiment feels
redundant.
redundant.
I think what this should be
is so
experiment we put this
experiment we put this
here. All
right. So this code is now just here.
right. So this code is now just here.
And then for
sweeps, train of
sweeps, train of
args, back
end, and
end, and
policy. And
policy. And
honestly, do we
honestly, do we
need
need
backends? No. Do we need policy?
backends? No. Do we need policy?
No. So we can literally just
do train of
arts. That's even easier,
right? Boom.
Now this is pretty flat, right? So
Now this is pretty flat, right? So
obviously sweep is going to call
obviously sweep is going to call
train. But then train is this like
train. But then train is this like
relatively short piece of code that just
relatively short piece of code that just
interacts with this clean puffl and
interacts with this clean puffl and
clean puffer is clean puffl. So like in
clean puffer is clean puffl. So like in
terms of the depth of
terms of the depth of
things, this is two layers
things, this is two layers
deep pretty much right. This makes clean
deep pretty much right. This makes clean
puffer. Clean puffer does
training. I think we're happy enough
training. I think we're happy enough
with that.
And then this make policy function
And then this make policy function
literally gets called
once. So this can just go
once. So this can just go
here and this
here and this
takes
takes
vecd driver
N driver N.
Not
bad. Now we get rid of this annoy that
bad. Now we get rid of this annoy that
annoying little make
annoying little make
function. And the only last little
function. And the only last little
annoying function frankly is this down
annoying function frankly is this down
sample
sample
linear which like we'll get something
linear which like we'll get something
for
for
that. And now we are pretty
that. And now we are pretty
flat. Now we still want to do something
flat. Now we still want to do something
with init.
with init.
Where does this get inited? We only call
Where does this get inited? We only call
this here,
this here,
right? Yeah. So this whole init function
right? Yeah. So this whole init function
is just because we have logging done in
is just because we have logging done in
clean
clean
puffl. Um we could equally well do this
puffl. Um we could equally well do this
inside of experiment,
inside of experiment,
right? Or inside of our new train
right? Or inside of our new train
rather. Let me just
rather. Let me just
see see what happens.
If I delete
this and then
this and then
here we make
here we make
our trainer.
Config of
Config of
tag. This takes args of tag.
tag. This takes args of tag.
Now run
ID. Yes.
for this.
for this.
Yeah, we don't need this tag in here, do
we? Don't see tag
anywhere. Nope. No
tag. This goes away.
This is just return
logs. Found this game replica cube. Ever
logs. Found this game replica cube. Ever
heard of it? Nope.
Oh, yeah. Yeah, I saw this on uh I saw
Oh, yeah. Yeah, I saw this on uh I saw
this on X,
this on X,
actually. Oh, that's funny. This guy's
actually. Oh, that's funny. This guy's
actually gotten himself
actually gotten himself
uh quite a bunch
uh quite a bunch
of of uh sales, it looks like. Good for
of of uh sales, it looks like. Good for
him.
I play a few games. I try not to too
I play a few games. I try not to too
much though because I try to just get my
much though because I try to just get my
work hours up. But especially around
work hours up. But especially around
releases, it's hard. A lot of the
releases, it's hard. A lot of the
release work is just super
release work is just super
boring. And it's not even like boring
boring. And it's not even like boring
work that I can like sandbag on either,
work that I can like sandbag on either,
right? Like the stuff I'm doing here,
right? Like the stuff I'm doing here,
like making it a little simpler or not
like making it a little simpler or not
as simple is like a huge difference for
as simple is like a huge difference for
usability. It's just freaking
usability. It's just freaking
boring. I want to be back to algorithm
boring. I want to be back to algorithm
dev or like experiments or like
dev or like experiments or like
engineering something, right?
Let me see how bad this is going to look
Let me see how bad this is going to look
if I do it this
way. I think it's like this. And this
way. I think it's like this. And this
gets copied one more time
gets copied one more time
here.
Like so it's something like this.
Turn model
Turn model
path
shutil.copy model
shutil.copy model
path to
path. Why did I do this again?
opinions on Absolute
opinions on Absolute
Zero. That's the uh the new evolutionary
Zero. That's the uh the new evolutionary
thing,
thing,
right? Like you assume I've read it. I
right? Like you assume I've read it. I
haven't. Looks like cool stuff, but like
haven't. Looks like cool stuff, but like
LLM land is LLM land.
I've been stuck doing this release and
I've been stuck doing this release and
that's actually not even necessarily on
that's actually not even necessarily on
the list like the list of papers that I
the list like the list of papers that I
really want to dig
really want to dig
into. It's going to be like you know
into. It's going to be like you know
some searchbased stuff from Uzero. It's
some searchbased stuff from Uzero. It's
going to be like some world model stuff,
going to be like some world model stuff,
some off policy stuff and like whatever
some off policy stuff and like whatever
else Deep Mind is like maybe some
else Deep Mind is like maybe some
algorithm stuff.
We need to copy this at
all. Let's do it like this.
Wait,
Wait,
what? No, it's
return turn model path.
Oh, and then I actually do I have run
ID? Need this for checkpoint anyways.
All
right. So now we
right. So now we
have Yeah, this doesn't get used
have Yeah, this doesn't get used
anywhere else.
These can get pasted.
These can get pasted.
This is a net
w. Okay. Neptune goes here.
lost and offline. This is super annoying
lost and offline. This is super annoying
to sync. So, we're just going to do
this. This
All right. So, what is uh what did I
All right. So, what is uh what did I
break
here parenthesis?
What did I forget to
close? Not seeing it.
Oh,
bracket. Have to close this.
Okay. So, if we can get this to be like
Okay. So, if we can get this to be like
a
a
reasonable size piece of
reasonable size piece of
code, we will have really cut down on
code, we will have really cut down on
the uh the function bloat here.
Does it make sense to have
um a
um a
log
log
class? It probably does, doesn't it?
Yeah, it's Python.
Yeah, it's Python.
Python. You do it that way. Fine. Let me
Python. You do it that way. Fine. Let me
try it.
breakout also just dropped in
breakout also just dropped in
speed. All right, I will
speed. All right, I will
test. That's weird. Something screwed up
then. Is it on debug mode?
then. Is it on debug mode?
It's possible it's compiling a debug
build. I don't freaking know, man. I'll
build. I don't freaking know, man. I'll
fix everything, though.
and we'll fix like this
and we'll fix like this
weird
thing.
Getting somewhere. Now,
Okay. So now we can do like this.
Okay. So now we can do like this.
Get rid of this if
statement. And that's now something
statement. And that's now something
that's like kind of
reasonable here.
I mean that's getting to be close
to and then you just do like this right
to and then you just do like this right
run ID is logger run I do.
Okay, so we load the config, we load the
Okay, so we load the config, we load the
end, we load the policy, we have a
logger, make some args, we instantiate,
logger, make some args, we instantiate,
make a puffer, whatever.
Eval we
train do this. We do this. We do this.
train do this. We do this. We do this.
Cool. That seems a lot simpler,
right? And I can even do this. So I can
right? And I can even do this. So I can
give you
I don't like that.
Yeah, this is it's okay. I think it's
Yeah, this is it's okay. I think it's
okay. Have like
this. Oh yeah. 1086 lines through a
this. Oh yeah. 1086 lines through a
little
little
bit. I think we can get rid of some of
bit. I think we can get rid of some of
it maybe.
Oh, this has this calls a
Oh, this has this calls a
net net wand to be doesn't
net net wand to be doesn't
it? Missed
that. We'll get to that.
All
right. Multiple values for run ID.
right. Multiple values for run ID.
Really?
I guess cuz you can pass a run
I guess cuz you can pass a run
ID. The thing
This thing run ID.
Okay, so we're back to this
Okay, so we're back to this
training. This is
nice. We'll have to fix a few like
nice. We'll have to fix a few like
little things.
little things.
Um, I'm
Um, I'm
mostly Let me see if like layoutwise I'm
mostly Let me see if like layoutwise I'm
happy with this or not. I don't think
happy with this or not. I don't think
I'm fully happy with this quite yet.
I'm fully happy with this quite yet.
It's getting there though. It's
It's getting there though. It's
definitely getting there.
The things that I'm annoyed
about. This function is
fine. This is like generally kind of
fine. This is like generally kind of
okay. And there's like sweeps.
I think it's mostly like the
I think it's mostly like the
um the eval load stuff.
Oh, wait. You can
actually you could make the logger
actually you could make the logger
thing. I
guess you could make the logger thing
guess you could make the logger thing
here.
how I want to do this.
We'll do like this, I
guess, and then Download.
Okay, this will look like something like
Okay, this will look like something like
this, I believe.
Okay. So we have use artifact.
Okay. So we have use artifact.
This is resume
must load
must load
ID and
resume. We'll like fix what the resume
resume. We'll like fix what the resume
is as
well. Okay. So we do this. So now we
well. Okay. So we do this. So now we
have data
dur. You just have to
return the whole freaking path, don't
return the whole freaking path, don't
you?
like
this. Okay. So, and now we do
this. Okay. So, and now we do
[Music]
path. This is path.
path. This is path.
Okay. So, assuming I get all of this to
Okay. So, assuming I get all of this to
work as written here, right? Assuming I
work as written here, right? Assuming I
get all this to like to work as it's
get all this to like to work as it's
written here and I just debug all the
written here and I just debug all the
dumb little things. I think this is
dumb little things. I think this is
pretty
pretty
decent. I mean, compared to what I had
decent. I mean, compared to what I had
before, we have entry points. It's
before, we have entry points. It's
importable. It's callable as a script.
importable. It's callable as a script.
Uh you no longer have to read all the
Uh you no longer have to read all the
config like loading crap if you don't
config like loading crap if you don't
want to because like you know you start
want to because like you know you start
reading
reading
here and like the first function
here and like the first function
after after these helpers right the
after after these helpers right the
first real thing here you get is train.
train is this 50
train is this 50
lines
lines
806 45. Okay, so it's like not even 40
806 45. Okay, so it's like not even 40
lines of
lines of
code. Loads config, loads M, loads
code. Loads config, loads M, loads
policy. It calls functions, but they're
policy. It calls functions, but they're
pretty
pretty
flat. Get your logger thing, which is
flat. Get your logger thing, which is
just like super dummy little easy class.
just like super dummy little easy class.
It's in the same file. You can really
It's in the same file. You can really
easily just jump there and see what
easily just jump there and see what
you're looking at. You make the train
you're looking at. You make the train
config make puffer which
config make puffer which
is now stateful and kind of has to be
is now stateful and kind of has to be
because
because
Python I think this is
Python I think this is
fine. You do eval
fine. You do eval
train. You have your
train. You have your
logger. You're
logger. You're
set. It's pretty
decent. I think pretty decent overall.
decent. I think pretty decent overall.
And let's just see how much crap is
And let's just see how much crap is
duplicated. I mean, obviously this
duplicated. I mean, obviously this
little load stuff is going to be
little load stuff is going to be
semi-duplicated,
right? But then aside from
that, it's like pretty
decent. Calls this just calls train in a
loop. Got profile, which probably needs
loop. Got profile, which probably needs
to be updated, but whatever. We don't
to be updated, but whatever. We don't
care that much about this one. We got
care that much about this one. We got
export, we got
autotune, I don't even know if you need
autotune, I don't even know if you need
to be able to do all these things from
to be able to do all these things from
the main script.
Frankly, keep them in there for now. And
Frankly, keep them in there for now. And
then you have your loads. Load m load
then you have your loads. Load m load
policy, load checkpoint, load
config, reasonableish.
Yeah. So, I think we just make
Yeah. So, I think we just make
everything
everything
work and uh we test stuff and we should
work and uh we test stuff and we should
be we should be good with this.
Uh, you need to know steps.
[Music]
[Music]
this.
Fine. We'll do one B
Fine. We'll do one B
after I get this train working. Okay,
after I get this train working. Okay,
train actually runs. Very good.
Try with
Neptune. Tags is bad. Let's fix tags.
This module Neptune sis
Okay, so now we can run.
Then we're going to want eval. So we're
Then we're going to want eval. So we're
going to want to be able to load this
going to want to be able to load this
thing.
And then we do proper
evalu 130.
and it's got what's this use RNN
We don't have a load policy in here.
cuz you didn't call load policy, right?
Okay. So,
like should be able to download
Okay. It's just not in there,
Okay. It's just not in there,
right? No, it's not in there. That's a
right? No, it's not in there. That's a
one v one.
It's a little bit annoying that it just
It's a little bit annoying that it just
kind of doesn't
kind of doesn't
download a
thing. Is this it? No, this isn't it
thing. Is this it? No, this isn't it
either,
right? Not
here. See if this gives you
anything. Attempting to log a
anything. Attempting to log a
type. Read only mode.
Okay. So, you
have hell.
have hell.
Oh, wait. Download destination as
Oh, wait. Download destination as
artifact. File
artifact. File
path
path
model
O126. They
see I did this before. I must have had
see I did this before. I must have had
some rename thing on this.
That was probably what the move was for.
Yeah. So, here's this is what it was
Yeah. So, here's this is what it was
for, right? Is that you copy
for, right? Is that you copy
this and you name it the run
ID? So that way that it actually
like Yeah. Uh so that way it actually
like Yeah. Uh so that way it actually
like uploads it under a reasonable
name. Move it.
Well, I have to rerun training now,
Well, I have to rerun training now,
don't
don't
I? Fine.
Welcome YouTube
folks. Goal at the moment
folks. Goal at the moment
is we just have a nice clean set of
is we just have a nice clean set of
entry points for puffer lab. uh you
entry points for puffer lab. uh you
should be able to like train eval do all
should be able to like train eval do all
your stuff from command line if you just
your stuff from command line if you just
want to like run puffer on one of your
want to like run puffer on one of your
M's or on one of our M's and then you
M's or on one of our M's and then you
will also be able to like import and use
will also be able to like import and use
these if you want a little bit of uh
these if you want a little bit of uh
slightly more granular control and then
slightly more granular control and then
you can of course just edit this file if
you can of course just edit this file if
you are actually a researcher and want
you are actually a researcher and want
full control over
Everything self run ID. This should be
Everything self run ID. This should be
self
dot. Yes.
Okay, so there's a decent
model.
Load ID is
38.
Boom. That easy.
We can make wannabe work real quick as
We can make wannabe work real quick as
well,
valid for
valid for
[Music]
[Music]
resume.
Allow by default. This should be
allow. No attribute run
ID. Okay. Okay. And there now we're
ID. Okay. Okay. And there now we're
tracked with W Okay.
The load ID is right
here. Looks pretty good.
Looks pretty
Looks pretty
good. Do have the ability to save and
good. Do have the ability to save and
load Neptune, save and load
womb. A few other things we need to be
womb. A few other things we need to be
able to do here, but that is uh a very
able to do here, but that is uh a very
solid
solid
start. I don't think where we go from
start. I don't think where we go from
here. I guess I just want to like read
here. I guess I just want to like read
through line by
through line by
line just like maybe from here
down. Here's a restroom real quick. Go
down. Here's a restroom real quick. Go
walk
walk
around. I'll be back in a couple
minutes. And I need to get the damn lazy
minutes. And I need to get the damn lazy
Susan for this thing cuz it's impossible
Susan for this thing cuz it's impossible
to get into this chair.
All
right, we start reading
code. Going to play with this interpret
code. Going to play with this interpret
at some point. Other than
at some point. Other than
that, easy dumb noop class.
Neptune
logger. This is fine.
this. They have a
line. The Neptune
log double
redundant is
redundant is
fine. One B
Fine. Go
Fine. Go
change. Don't save all the code. It's
change. Don't save all the code. It's
huge. Config
tags. I think it's fine.
Log is just
log and file. Log
log and file. Log
artifact.
artifact.
Finish. Then
Finish. Then
download artifactor data der model file
path. Okay.
Training our triple
Training our triple
load followed by logger.
I let you pass your own logger in if you
I let you pass your own logger in if you
want.
want.
Train config
paparl confix is
fine generally is all
good have clean
good have clean
paparel okay all logs
paparel okay all logs
You append to
logs do 100
logs do 100
iterations which is going to be um this
iterations which is going to be um this
is going to be dependent on our final
is going to be dependent on our final
experiment. What we do with this piece,
experiment. What we do with this piece,
we take mean and
we take mean and
log. Do log
log. Do log
again. Append a log like that. The order
again. Append a log like that. The order
is different for
is different for
this. We'll do it this
way.
way.
Yeah, that's good.
Yeah, that's good.
An
eval does have this slightly
eval does have this slightly
janky override, but no big
deal. Reset the end. Now, the one thing
deal. Reset the end. Now, the one thing
I don't like is that load
policy load policy is the thing that
policy load policy is the thing that
sets train of use
sets train of use
RNN, which I I don't like that at all.
If anything, I think that I'd like to do
If anything, I think that I'd like to do
it on load
it on load
config, right?
RNN
class. This is going to be argn name.
We'll put it there if
anywhere until I figure out a better way
anywhere until I figure out a better way
of doing that at
of doing that at
least better than I had before.
least better than I had before.
And so now an
And so now an
eval get the
eval get the
policy which now this can
go. This still kind of just goes here,
go. This still kind of just goes here,
doesn't
it? Do
it? Do
this. Then this is our normal state
this. Then this is our normal state
code. Our save
code. Our save
frames. Few small to-dos.
Got our sweep
code. Target key told time's okay. We
code. Target key told time's okay. We
set up and do our sweep.
profile. We haven't messed with this. We
profile. We haven't messed with this. We
don't care about this. We don't care
don't care about this. We don't care
about this. Load end. Okay. Let's see
about this. Load end. Okay. Let's see
how redundant stuff gets
here. Like a little bit redundant.
sense that we do
this. It's not bad
this. It's not bad
though. We get policy
class. Why do I do this stuff up here?
and do
this. Do like this,
this. Do like this,
right? Way easier.
Okay, now this local rank
thing. We do this on
train. I think we can do this in
train. I think we can do this in
train, right?
Okay. So now that'll always get
called load policy way cleaner.
Then this calls load
checkpoint which is a little weird
checkpoint which is a little weird
because I think we also have
because I think we also have
load we also have try load checkpoint.
So, if I only call this here, I think I
So, if I only call this here, I think I
should just
should just
put I think I just put the code in like
this for
now. But we have load policy here.
This never gets cold.
We don't have a way to
We don't have a way to
resume like an existing experiment. I
guess it's kind of scuff, isn't it?
slightly bigger map. Working on port
slightly bigger map. Working on port
should be sending me more soon.
should be sending me more soon.
Hopefully one is giant.
Hopefully one is giant.
Awesome. I'm working on making the
Awesome. I'm working on making the
release done.
Just get rid of this for now.
I
I
mean, I kind of should have a
resume. I kind of should have a resume,
resume. I kind of should have a resume,
right?
So I guess the way to do this is I just
So I guess the way to do this is I just
I can actually make this easier though,
I can actually make this easier though,
right? So we just go
to like this load policy thing.
Resume
state. It's like
No, this is just args. Hang on. The path
No, this is just args. Hang on. The path
is just the load
path. Load model
path. Wait, we do like optim path.
app
dot. Yeah, we can do something like
dot. Yeah, we can do something like
this,
right?
Eight. Okay.
It's going to be like something like
this. Okay. Okay. And then what we
do to flow this thing
We do now load
policy. That's still awkward as hell,
policy. That's still awkward as hell,
isn't it?
I mean
realistically like realistically this
realistically like realistically this
gets called once. So like
Cool.
Cool.
So now I think we have
everything.
Cuz does it make
sense? Hang on. Does it make more sense
sense? Hang on. Does it make more sense
to have this clean puffer
load? I don't think so. Right.
The thing is like this load function
The thing is like this load function
also gives
you it's both like getting the class and
you it's both like getting the class and
then potentially loading weights for
then potentially loading weights for
you.
It's irritating because like you You
It's irritating because like you You
don't want to have to make you don't
don't want to have to make you don't
want to make one of these at evil time,
want to make one of these at evil time,
right? I think it's better to just
like Damn, I mean, it's like awkward is
like Damn, I mean, it's like awkward is
the thing. It's just It's awkward that
the thing. It's just It's awkward that
you
can't use the same loading
Okay. What if we actually keep this
It's like it's irritating because you
It's like it's irritating because you
have like the downloading, you have
have like the downloading, you have
local stuff, you got like a lot of
local stuff, you got like a lot of
different things to consider here. I
different things to consider here. I
want to make it not confusing.
I think we uh I think I'm going to go
I think we uh I think I'm going to go
nuts if I keep looking at this. I think
nuts if I keep looking at this. I think
I'm just going to do it this way for
now. Okay. So, if I just say we're going
now. Okay. So, if I just say we're going
to do it this
to do it this
way, write a reasonable code size again.
way, write a reasonable code size again.
The load is not
awful. Hang on. This still doesn't load.
awful. Hang on. This still doesn't load.
It still didn't do it.
Oh, no. I
Oh, no. I
did. Yeah, I did.
Okay. So, this is like somewhat
Okay. So, this is like somewhat
janky. Not that bad,
janky. Not that bad,
though. I'm sick of looking at it. So,
though. I'm sick of looking at it. So,
let's just get this thing working
let's just get this thing working
now. Start running some tests.
expected all temperatures on this. Get
expected all temperatures on this. Get
out of here.
How is this still not any good?
Okay.
Hey
Hey
Maxwell, passionate about electronics
Maxwell, passionate about electronics
and artificial intelligence is to build
and artificial intelligence is to build
a career that combines the two buildings
a career that combines the two buildings
into one
into one
profession. Kindly guide me on what I
profession. Kindly guide me on what I
should
should
focus. Well, that's going to depend very
focus. Well, that's going to depend very
well uh you know how far along you are.
well uh you know how far along you are.
What book should I read? How to create
What book should I read? How to create
an effective road
map professional
map professional
expert would mean a lot.
So, electronics and
AI. I mean, hardware and AI generally is
AI. I mean, hardware and AI generally is
robotic
robotic
stuff.
stuff.
Um, but I don't know if you mean like
Um, but I don't know if you mean like
that's more
I mean, there's all sorts of stuff in
I mean, there's all sorts of stuff in
that, man. Like, there's AI used being
that, man. Like, there's AI used being
used for chip design right now, right?
used for chip design right now, right?
That's like right up your alley. That
That's like right up your alley. That
would be right up your alley there. Um,
would be right up your alley there. Um,
that's probably going to keep increasing
that's probably going to keep increasing
and there's going to be more of that in
and there's going to be more of that in
the future.
Um, you kindly you kind of just have to
Um, you kindly you kind of just have to
learn both things and then look for
learn both things and then look for
opportunities, right? like I'm not like
opportunities, right? like I'm not like
I don't do electronics so I'm not going
I don't do electronics so I'm not going
to be able to tell you what the best
to be able to tell you what the best
opportunities are for overlap there.
opportunities are for overlap there.
Right? It's like you kind of you have to
Right? It's like you kind of you have to
kind of be one of the only people that's
kind of be one of the only people that's
doing two things in order
doing two things in order
to be able to see the opportunities
to be able to see the opportunities
though those are pretty that's like
though those are pretty that's like
probably a more common overlap um than
probably a more common overlap um than
many other things.
Yeah, I'd have to know like you like you
Yeah, I'd have to know like you like you
could be anywhere from high school to
could be anywhere from high school to
like grad school to like you know midway
like grad school to like you know midway
through career and wanting to do
through career and wanting to do
something new. So like the answer is
something new. So like the answer is
kind of going to depend a heck of a lot
kind of going to depend a heck of a lot
on that. Generally though like if you
on that. Generally though like if you
have some base background uh of course
have some base background uh of course
work some like pretty minimal base
work some like pretty minimal base
background um on the research side of
background um on the research side of
what I do like you start building
what I do like you start building
projects and reading papers and just
projects and reading papers and just
like the way that you learn to do
like the way that you learn to do
research is to do research. Uh that's
research is to do research. Uh that's
true of many
things. Like I don't have a reading list
things. Like I don't have a reading list
for you because I've literally never
for you because I've literally never
read an AI textbook.
It's just not like a particularly
It's just not like a particularly
effective way to learn
stuff. I mean what I did is I read a
stuff. I mean what I did is I read a
bunch of papers. I implemented a bunch
bunch of papers. I implemented a bunch
of projects. I started doing my own
of projects. I started doing my own
research that like you know you take an
research that like you know you take an
existing thing. Oh, what if I did it
existing thing. Oh, what if I did it
like this other way instead? And then
like this other way instead? And then
from there, you know, as I got better, I
from there, you know, as I got better, I
started instead of doing that, it's like
started instead of doing that, it's like
instead of what if this but that, it's
instead of what if this but that, it's
like what if entirely new thing and then
like what if entirely new thing and then
try it, build it, see if it like helps.
try it, build it, see if it like helps.
And you just gain more and more
And you just gain more and more
independence and autonomy and uh in your
independence and autonomy and uh in your
work in the process of doing
that. So yeah, give me some more
that. So yeah, give me some more
details. I'll give you some better
details. I'll give you some better
advice.
Yeah. So, this ended up being on CPU for
Yeah. So, this ended up being on CPU for
some dumb reason.
probably
Thank you for answering me. I mean, I
Thank you for answering me. I mean, I
didn't give you a great answer. Like, I
didn't give you a great answer. Like, I
kind of would need to like I'm going to
kind of would need to like I'm going to
give you very different advice if you
give you very different advice if you
tell me like you're in high school
tell me like you're in high school
versus like you have some background in
versus like you have some background in
some other thing and you're trying to
some other thing and you're trying to
like pivot, right? Like I get people
like pivot, right? Like I get people
that ask me for things that are very
that ask me for things that are very
very different points in life and like
very different points in life and like
have very different base levels of
have very different base levels of
experience.
interest in learning RL but have no
interest in learning RL but have no
background in AI. Prefer to avoid heavy
background in AI. Prefer to avoid heavy
theory. Generally in AI like it's better
theory. Generally in AI like it's better
to have some math than no math. Um at
to have some math than no math. Um at
least you got to understand what a
least you got to understand what a
partial derivative is and you got to be
partial derivative is and you got to be
comfortable working with matrices and
comfortable working with matrices and
tensors. Um my own approach to AI is
tensors. Um my own approach to AI is
like actually very like I do very little
like actually very like I do very little
math in what I do. I mean lately I've
math in what I do. I mean lately I've
had to do a bit more of it and I don't
had to do a bit more of it and I don't
like it just takes me longer because I
like it just takes me longer because I
haven't focused on that. But um I still
haven't focused on that. But um I still
get it done.
get it done.
if you want um if like you kind of have
if you want um if like you kind of have
to pick, right? Like you have to either
to pick, right? Like you have to either
go engineering heavy or math heavy um if
go engineering heavy or math heavy um if
you're not just one of the people who
you're not just one of the people who
can do both.
can do both.
Um I'm more engineering heavy and that
Um I'm more engineering heavy and that
just means like do stuff, right? The
just means like do stuff, right? The
most effective way to get started is to
most effective way to get started is to
get started. Like pick a thing that you
get started. Like pick a thing that you
can build and build it,
can build and build it,
right? And like learn what you need to
right? And like learn what you need to
do along the way to do that. Don't pick
do along the way to do that. Don't pick
like when you're new, you don't want to
like when you're new, you don't want to
pick some like ridiculously ambitious
pick some like ridiculously ambitious
thing that you're not going to be able
thing that you're not going to be able
to actually
to actually
complete.
complete.
Um, here I actually did like a a very
Um, here I actually did like a a very
dumb electronics AI thing when I was I
dumb electronics AI thing when I was I
don't know
16.
16.
Uh, is
it the site still work?
it the site still work?
Yeah. All right. Here I did this in like
Yeah. All right. Here I did this in like
I don't know a few
I don't know a few
days. I just
like I wrote up some like if you call
like I wrote up some like if you call
this is a schematic. It's a schematic
this is a schematic. It's a schematic
and like I wired some basic flex sensors
and like I wired some basic flex sensors
to an Arduino and then ran a K nearest
to an Arduino and then ran a K nearest
neighbor on this thing and then that you
neighbor on this thing and then that you
get like very basic crappy gesture
get like very basic crappy gesture
recognition in a glove. Like you can do
recognition in a glove. Like you can do
stuff like that. You can do
stuff like that. You can do
substantially more sophisticated stuff,
substantially more sophisticated stuff,
right?
Welcome folks.
Okay, loading still
works. So, 30 second, like 30 seconds to
works. So, 30 second, like 30 seconds to
train a model, pull the model down from
train a model, pull the model down from
uh where I saved it on Neptune and Eval
uh where I saved it on Neptune and Eval
is pretty nice. It's like a good work
is pretty nice. It's like a good work
loop.
I guess we get sweeps. We make sure
I guess we get sweeps. We make sure
sweeps
sweeps
works. What about all this other
works. What about all this other
autotune
autotune
stuff? I really don't care about it
stuff? I really don't care about it
right now. To be honest, I kind of want
right now. To be honest, I kind of want
to just like be done with working on
to just like be done with working on
this for right
this for right
now. Why don't we just like commit what
now. Why don't we just like commit what
I
I
have and uh find something else to do
have and uh find something else to do
here.
you write the main functionality in C++
you write the main functionality in C++
and then use PIBind. No. So our M's are
and then use PIBind. No. So our M's are
written in C and then they're bound with
written in C and then they're bound with
the Python C API.
the Python C API.
Um I think Puffer is like 30 probably 30
Um I think Puffer is like 30 probably 30
some odd thousand lines of C now for all
some odd thousand lines of C now for all
the ends we have like 20 M ends and then
the ends we have like 20 M ends and then
uh the actual core of Puffer is just a
uh the actual core of Puffer is just a
few thousand lines of Python with
few thousand lines of Python with
PyTorch mind you heavily optimized but
PyTorch mind you heavily optimized but
it's we're just using PyTorch for
it's we're just using PyTorch for
training and
training and
um now mind you there are a few things
um now mind you there are a few things
in the middle that like make everything
in the middle that like make everything
fast. So for instance, we're not doing a
fast. So for instance, we're not doing a
ton of redundant data copies. We're
ton of redundant data copies. We're
processing like a few gigabytes of data
processing like a few gigabytes of data
per second. Um so redundant copies are
per second. Um so redundant copies are
really bad. So like everything gets
really bad. So like everything gets
simulated into static shared memory
simulated into static shared memory
which is nice.
Um we've cut out like a lot of the
Um we've cut out like a lot of the
overhead that's usually there in RL and
overhead that's usually there in RL and
then we just have like a really well
then we just have like a really well
optimized trainer.
We technically could write a
We technically could write a
um like a C++ pietorch trainer, but I
um like a C++ pietorch trainer, but I
don't think that there's really much
don't think that there's really much
point in it cuz
point in it cuz
like there's a lot of freaking overhead
like there's a lot of freaking overhead
in the uh the
in the uh the
C++ torch. API.
C++ torch. API.
Anyways, a lot of like binding overhead
Anyways, a lot of like binding overhead
and
and
crap. If it had like a nice C API or a
crap. If it had like a nice C API or a
nice like minimal C++ API that wasn't so
nice like minimal C++ API that wasn't so
bloated, then I would be tempted to do
bloated, then I would be tempted to do
it. But I don't even think you get much
it. But I don't even think you get much
out of doing that at this
point. How do we do CUDA fall
point. How do we do CUDA fall
back? Can we do Cuda fall back real
quick? Oh, we did do Cuda fall back,
quick? Oh, we did do Cuda fall back,
right?
It's usebin and puffernet. You can't use
It's usebin and puffernet. You can't use
pt. How do you generate the bin? So, let
pt. How do you generate the bin? So, let
me show
me show
you. So, puffernet is just for the demos
you. So, puffernet is just for the demos
on the website, right? It's just so that
on the website, right? It's just so that
we can load stuff into pure C and we can
we can load stuff into pure C and we can
run networks on on the site. So, we have
run networks on on the site. So, we have
a little script which I have not updated
a little script which I have not updated
for a while, but we're going to make it
for a while, but we're going to make it
work for
release. And this is it. We just go
release. And this is it. We just go
through the parameters and concatenate
through the parameters and concatenate
them and save them to a file. That's
it. And then we have, you know, we have
it. And then we have, you know, we have
a test. So when we update the operations
a test. So when we update the operations
in puffer net we have a test such that
in puffer net we have a test such that
when we make a net in puffer uh with
when we make a net in puffer uh with
puffer net it's identical to the way
puffer net it's identical to the way
that the network behaves in torch that's
that the network behaves in torch that's
all
Okay, so Spencer said that this got like
Okay, so Spencer said that this got like
way
slower. Okay, doesn't import now. Which
slower. Okay, doesn't import now. Which
branches branches didn't? since I was on
branches branches didn't? since I was on
dev and I clerked
for.bin. We might manually rename them.
for.bin. We might manually rename them.
I honestly don't remember. But it's just
I honestly don't remember. But it's just
um well, I'm about to push this thing
um well, I'm about to push this thing
which has like the code in here. Let me
which has like the code in here. Let me
let me just find it for
you. Okay, it's just
you. Okay, it's just
this. Let me link this to you.
this. Let me link this to you.
This is all it
is. And then it gets loaded from the uh
is. And then it gets loaded from the uh
the
C. I mean again we don't use this for
C. I mean again we don't use this for
like our actual like the the demos that
like our actual like the the demos that
we run locally. We run those like
we run locally. We run those like
loading in those nets. We often just run
loading in those nets. We often just run
them through Python. It's that when we
them through Python. It's that when we
it's mostly for when we compile the
it's mostly for when we compile the
demos to web that we run everything pure
demos to web that we run everything pure
C. You can compile it locally as well. I
guess
yeah. Uh yeah. So this didn't install
yeah. Uh yeah. So this didn't install
anything which is kind of weird.
See if this makes it
I think Ray has
I think Ray has
it. That
bot. Welcome all the YouTube
folks. We are
folks. We are
currently getting the uh entry points
currently getting the uh entry points
for puffer liib to work nice and
for puffer liib to work nice and
cleanly. So from CLI you'll just be able
cleanly. So from CLI you'll just be able
to do like puffer train or puffer eval
to do like puffer train or puffer eval
whatever in addition to using the
whatever in addition to using the
library normally like you have an option
library normally like you have an option
to run training just from the pit
to run training just from the pit
package. No export mode available on my
package. No export mode available on my
version. Yeah cuz it was a separate
version. Yeah cuz it was a separate
script. We had like a saveen flat.py or
script. We had like a saveen flat.py or
whatever. It's like five lines of code.
whatever. It's like five lines of code.
It's literally just iterate over weights
It's literally just iterate over weights
and then concatenate them all together.
and then concatenate them all together.
That's all it is.
And like you know if you train a model
And like you know if you train a model
and you run it in Python and the model
and you run it in Python and the model
plays the game and then you load it into
plays the game and then you load it into
C and the model doesn't play the game,
C and the model doesn't play the game,
it's probably loaded wrong, right?
Okay. So, this thing is still not making
Okay. So, this thing is still not making
bindings, which is weird.
Um, we'll see if this does
Um, we'll see if this does
it. In the meantime, I want to go look
it. In the meantime, I want to go look
at how Ray does
it. Okay. So, there's ray
it. Okay. So, there's ray
train
thing. Oh, is this not it? I thought
thing. Oh, is this not it? I thought
they had like a CLI
thing. I just want to see their entry
thing. I just want to see their entry
points, man.
They have entry points in
They have entry points in
here.
here.
Nope. Okay. So, what's up with Muan?
Nope. Okay. So, what's up with Muan?
It's just
It's just
good. So, you should use it.
good. So, you should use it.
It's our
default. Do they not have a
default. Do they not have a
setup.py?
setup.py?
Wait, they have a ton of dot
files.
Huh? Why does Bet say his GPU can't
Oh, I don't know, man. It's
like that would be weird. I didn't think
like that would be weird. I didn't think
there was a GPU requirement on it, but
there was a GPU requirement on it, but
if Bet says there is, then there might
if Bet says there is, then there might
be. It's probably because of Heavy Ball
be. It's probably because of Heavy Ball
like compiling everything super weird.
like compiling everything super weird.
I've been meaning to mess with that.
distributions can specify console
distributions can specify console
scripts entry
point. Create a command line wrapper for
point. Create a command line wrapper for
each entry point.
How does it do this?
there like a dot entry points or like
there like a dot entry points or like
something or how does it
um how does it make the entry
points we can just
points we can just
like I bet this will expose
this
this
exit. Okay. So, it
makes it just makes like a weird steel
makes it just makes like a weird steel
eye thing.
I
guess. Oh, and it just puts it in bin as
guess. Oh, and it just puts it in bin as
well. So, like this probably has to
have. This probably has to have um
Uh, it probably has to have a dash, not
Uh, it probably has to have a dash, not
spaces.
Annoying. Unless I make Yeah, I'd have
Annoying. Unless I make Yeah, I'd have
to make like a
to make like a
custom a custom bind thing.
which defeats the point of like breaking
which defeats the point of like breaking
all these things up, right?
You really should be able to
do you really should be able to do like
do you really should be able to do like
more than this. I would think it's just
more than this. I would think it's just
the the entry points API itself is kind
the the entry points API itself is kind
of limited.
Entry points.ext text.
Wait. The main may contain the name may
Wait. The main may contain the name may
contain any characters but it cannot
contain any characters but it cannot
start or end with any whites space
start or end with any whites space
character.
So wait then this can have white space
So wait then this can have white space
in the
middle and not start or
And
And
okay, let's try
okay, let's try
this. If I do
Can I get it to be like puffer train,
Can I get it to be like puffer train,
puffer eval, puffer sweep? That'd be
puffer eval, puffer sweep? That'd be
nice.
solve Sudoku. It just hasn't solved a
solve Sudoku. It just hasn't solved a
Sudoku with less than
Sudoku with less than
37 and it starts taking like 3 hours per
37 and it starts taking like 3 hours per
solve.
What? Wait, 37
What? Wait, 37
numbers. Isn't it 9 by 9? So it's 81.
It's
It's
80. I'm pretty sure we could make that
80. I'm pretty sure we could make that
much
much
better. I actually I don't know how hard
better. I actually I don't know how hard
that of a sudoku that is. Like 37
that of a sudoku that is. Like 37
numbers.
numbers.
I've like not really done uh many
Sudoku. Six out of
10. 10 being almost impossible.
We'll do graphs.
the graph. goes
up. You have a
graph. Did we say this was user bin? The
graph. Did we say this was user bin? The
user bin local or something.
and it's not there anymore.
M eyes.
Name does not seem to
Name does not seem to
be good here.
Python space.
commands.
Okay. So, click does this.
What I've seen is all log
What I've seen is all log
scale is simply harder. Need to make it
scale is simply harder. Need to make it
easier with backtracking or have another
easier with backtracking or have another
bug in my if it's your PO implementation
bug in my if it's your PO implementation
then I guarantee you you have lots of
then I guarantee you you have lots of
bugs simply because these like it's not
bugs simply because these like it's not
easy to do that
correctly. Anyone know how to do command
correctly. Anyone know how to do command
groups in
groups in
um an easy way to do is there like an
um an easy way to do is there like an
easy way that doesn't require me to use
easy way that doesn't require me to use
like external
like external
libraries hard parse or click
I guess it would just
be You'd have to add something to the
be You'd have to add something to the
bottom of it, right?
Oh, wait.
Oh, wait.
My this a
thing my package.subcomand
Hang
Hang
on. This make any sense.
This does not seem like a good
answer. Entry
points. What's the difference? console
points. What's the difference? console
script in
this. What I want to know
Register entry points under arbitrary
Register entry points under arbitrary
group name.
So this is a special entry
point. These are not automatically
point. These are not automatically
turned into
turned into
scripts but can be
discovered. Okay. Okay, so this doesn't
discovered. Okay. Okay, so this doesn't
actually create any
actually create any
scripts. I
scripts. I
see. So I think then the easiest thing
see. So I think then the easiest thing
would be is if I really want this
would be is if I really want this
um I need to
um I need to
do I need to do like a a very short
do I need to do like a a very short
which if statement
thing like it would just be like
I do something like this, I
guess. How
guess. How
long? I guess this isn't terrible if I
long? I guess this isn't terrible if I
just do it this
way. All right.
And what's this takes like args bars or
whatever. I guess it'll get from like
whatever. I guess it'll get from like
cisarchv
there
there. Try
this. Let's see if this gives us um the
this. Let's see if this gives us um the
behavior we want.
and then you have to art pop
it and not import. Okay. So now we this
it and not import. Okay. So now we this
this actually this entry point
this actually this entry point
works.
Um the entry point actually does work
Um the entry point actually does work
but we have weird compile shenanigans
but we have weird compile shenanigans
now.
you see breakout anywhere.
Now uh I only see a bunch of Syon.
Now uh I only see a bunch of Syon.
I don't
I don't
see my other extensions getting
built. You know what I did actually try
built. You know what I did actually try
to do?
So, this actually should give me
So, this actually should give me
something right here, right?
Yeah, there's
Yeah, there's
C the
extensions. App is
Ocean breakout binding seat. Yeah, this
Ocean breakout binding seat. Yeah, this
is the correct
sources. Seems like correct binding as
sources. Seems like correct binding as
well.
very
screwy. Doesn't give me like even the
screwy. Doesn't give me like even the
copy messages anymore.
copy messages anymore.
of like building the
of like building the
thing. Build
X. Oh,
dummy. Well, no. supposed to
dummy. Well, no. supposed to
do. It is supposed to do this
do. It is supposed to do this
right. Build C.
It does. It does make the binding, but
It does. It does make the binding, but
now it doesn't copy
it
really. Yeah. Did you figure anything
really. Yeah. Did you figure anything
out for
that? It's It is building, but it's not
copying cuz the freaking setup tool
copying cuz the freaking setup tool
sucks. But
just deleted the file
manually. That's
manually. That's
bizarre. Very much bizarre.
But is there a
But is there a
manifest? I have to like
That doesn't do anything
either.
either.
Okay. Um, let me copy that file for now.
Okay, this works.
I bet if I go
I bet if I go
like this probably doesn't work,
right?
right?
Yeah, that's fine. We just have to fix
Yeah, that's fine. We just have to fix
um global path.
How do you get dirt to show everything?
Backtracking. Auto complete
Okay, this does something.
That uh that seems like that ought to
That uh that seems like that ought to
have worked, right?
Oh, backtracking seemingly.
Oh, backtracking seemingly.
What did you
implement? This
runs now. This runs. Cool.
allowing not to change a square after it
allowing not to change a square after it
number it's numbered
number it's numbered
one. Still not allowed to edit the
one. Still not allowed to edit the
starting hint. Oh yeah, that makes
starting hint. Oh yeah, that makes
sense.
You're going to probably have to give it
You're going to probably have to give it
like a time budget or something because
like a time budget or something because
like eventually it'll solve stuff.
like eventually it'll solve stuff.
Probably just take
forever. I think we're on to figuring
forever. I think we're on to figuring
out um I mean there are obviously some
out um I mean there are obviously some
more things to do, but I think we can
more things to do, but I think we can
start sort of trying to figure out the
start sort of trying to figure out the
packaging of this.
think that's probably a good thing to
do. I mean, it's a little bit annoying
do. I mean, it's a little bit annoying
that we had to do this thing,
but I think it's fairly clean overall.
be a lot less confusing cuz like even if
be a lot less confusing cuz like even if
you like look at this from here you just
you like look at this from here you just
go to train and boom you're immediately
at the fact I have two train functions
at the fact I have two train functions
one in puffer and one outside is a
one in puffer and one outside is a
little
little
sketch for now this is this is
sketch for now this is this is
substantially
better. All right, I'm going to go walk
better. All right, I'm going to go walk
around, do a couple quick things, and
around, do a couple quick things, and
then we will start on uh packaging. Be
then we will start on uh packaging. Be
right back.
Okay. Packaging.
If I just
um if I just do this, what happens?
What did it
just What did Did it just
do? Oh, it should be in disc,
right? All right.
So has a bunch of RIB stuff.
This
has not have the binding
file. But I think we still have the same
issue, which we should probably just fix
issue, which we should probably just fix
locally First
Do we have to like list out all the
Do we have to like list out all the
things to
things to
include? Is that the
include? Is that the
thing? We didn't have to do this
thing? We didn't have to do this
before. Something changed.
You would think that this would do
something. I could get every C file in
something. I could get every C file in
the directory, I
guess. I don't think that's the issue,
guess. I don't think that's the issue,
though, right? Because it is building.
though, right? Because it is building.
It's just not copying.
So manifest.in
Does this have to go in
manifest? Find name spaces. Find
manifest? Find name spaces. Find
packages.
build is a temporary location. Yeah. Did
build is a temporary location. Yeah. Did
you see the difference? Do you post a
thing? But wait, what
thing? But wait, what
is what's this graph then? because I
is what's this graph then? because I
thought this was like um like number of
thought this was like um like number of
positions that are
set. You should also probably run this
set. You should also probably run this
thing with a random policy for
comparison. Numbers less
comparison. Numbers less
81 y ais is time.
81 y ais is time.
What?
Okay. Typically one makes the x axis
Okay. Typically one makes the x axis
time.
Okay. Missing package
Okay. Missing package
data manifest. All right. So, yeah, it's
data manifest. All right. So, yeah, it's
one of
these include the package
directory. I didn't sleep just here.
directory. I didn't sleep just here.
Well, you should probably do
that. I have done that before. It's not
that. I have done that before. It's not
fun.
I think the worst I've ever done
I think the worst I've ever done
was I was at like this summer
thing. This Where's the the damn thing?
thing. This Where's the the damn thing?
Do I have it on here? Yeah, this
Do I have it on here? Yeah, this
freaking thing is the worst I've ever
freaking thing is the worst I've ever
done. So, this was
done. So, this was
like I think I did this when I was 16.
like I think I did this when I was 16.
So, I was taking a Stamford course like
So, I was taking a Stamford course like
over the summer uh with like a bunch of
over the summer uh with like a bunch of
undergrads or whatever and I think like
undergrads or whatever and I think like
a quarter of the class finished this
a quarter of the class finished this
project to give you an idea. Um I had
project to give you an idea. Um I had
the most compact design there and I
the most compact design there and I
started off like finishing this thing
started off like finishing this thing
that like the final like work session to
that like the final like work session to
finish this thing. I was already
finish this thing. I was already
starting off super sleep deprived and
starting off super sleep deprived and
then I was up doing this for I think
then I was up doing this for I think
like 65 out of 70 hours or something
like 65 out of 70 hours or something
ridiculous.
ridiculous.
just in the
lab. That was
ridiculous. It's kind of fun to remember
ridiculous. It's kind of fun to remember
that like I did a couple ridiculous
that like I did a couple ridiculous
things, but like I do not want to do
things, but like I do not want to do
that [ __ ] anymore.
for 15 hours in like
for 15 hours in like
five. Yeah, you should probably do that.
You should also probably like get up and
You should also probably like get up and
walk around once in a while. You can
walk around once in a while. You can
just drop dead from blood clots. Like
just drop dead from blood clots. Like
that is a thing that happens to
that is a thing that happens to
people. 81 to 52. Very
nice. You should probably like play the
nice. You should probably like play the
policy and like watch it to see what
policy and like watch it to see what
it's doing some
point. 81 to 20.
81 minus
81 minus
51. I have no metric for how hard those
51. I have no metric for how hard those
are. We will see the policies when you
are. We will see the policies when you
are in a state to like you know actually
are in a state to like you know actually
clean up an like put source code
clean up an like put source code
together and then maybe we can throw
together and then maybe we can throw
muan at it and I can throw uh we can see
muan at it and I can throw uh we can see
how fast things can get solved.
be a cool
NPR. Believe the Sudoku problem like
NPR. Believe the Sudoku problem like
Sudoku is like the uh like second course
Sudoku is like the uh like second course
in CS
in CS
uh one of the assignments for Stanford.
uh one of the assignments for Stanford.
It's like second CS course.
If you need
self.mmemory probably 81.
one it's 9
one it's 9
by9 right I don't know what selfmemory
by9 right I don't know what selfmemory
is I don't have a selfmemory so I'm
is I don't have a selfmemory so I'm
assuming like you're backtracking or I
assuming like you're backtracking or I
don't
know they're not they're 81
cells Yeah. Okay. You're doing something
cells Yeah. Okay. You're doing something
wrong. Yeah, you're doing something
wrong. Yeah, you're doing something
wrong. It's okay
though. If you just like get the end
though. If you just like get the end
nicely into the puffer format, like we
nicely into the puffer format, like we
can throw our like we can throw the
can throw our like we can throw the
power tools at it, right? And then
power tools at it, right? And then
you'll have some fun with that.
Oh
jeez. Yeah, if that's what this the
jeez. Yeah, if that's what this the
train code looks like, you will see uh
train code looks like, you will see uh
you'll see quite a difference when uh
you'll see quite a difference when uh
You throw it at
You throw it at
puffer like
jeez. How does this freaking
work? No, you're just you're writing
work? No, you're just you're writing
like really
like really
unoptimized like you're probably just
unoptimized like you're probably just
writing ludicrously unoptimized code.
writing ludicrously unoptimized code.
Um, like realistically we can get your
Um, like realistically we can get your
Sudoku thing training at
Sudoku thing training at
like
probably 200,000 steps per second on a
probably 200,000 steps per second on a
CPU with Puffer, including an LSTM.
Oh Yeah.
Okay. So, this actually does it.
Okay. So, this actually does it.
It just needs to have all these
It just needs to have all these
extension paths.
But this actually just worked, huh?
big
big
map.
map.
Holy, that's
Holy, that's
cool. That's very
cool. That's very
cool. And drive all over
there. Very nice.
there. Very nice.
You're having more fun than I am.
You're having more fun than I am.
Packaging is crap.
Okay, we did update the 5.5 I believe.
weird copies freaking Good
thing build
error. What the hell is this?
Downloading. Did it
Downloading. Did it
actually Oh, download
Rayb 53.
This works.
Not a gzip. Not a
Not a gzip. Not a
bzzip. Invalid
header. Well, I think we probably just
header. Well, I think we probably just
need to do a clean setup of all this
need to do a clean setup of all this
stuff at some point here, right?
I guess we are kind of ready to do the
I guess we are kind of ready to do the
release testing in a sense
release testing in a sense
because like anything else we should
because like anything else we should
change wouldn't really mess with it very
change wouldn't really mess with it very
much.
My goal is to make enough project
My goal is to make enough project
progress on this that I do not have to
progress on this that I do not have to
do this on Saturday because I think if I
do this on Saturday because I think if I
spend all day doing release [ __ ] on
spend all day doing release [ __ ] on
Saturday, I'm going to go
nuts. Hey,
Plasma here. Let me show you the latest.
So we still have
So we still have
this tiny thing at the bottom but other
this tiny thing at the bottom but other
than that we've
than that we've
got that we've got load config load
got that we've got load config load
policy load end we've got all the
policy load end we've got all the
individual
individual
functions this is the train function
now and you can do you can do
now and you can do you can do
this you can do puffer
So, that should hopefully be
reasonable. I figured I'd work on a big
reasonable. I figured I'd work on a big
map because I can't diagnose why train
map because I can't diagnose why train
speed dropped. Um, hang on.
It should be
It should be
getting Well, I'll have to figure that
getting Well, I'll have to figure that
out for you. Something's weird
out for you. Something's weird
there. Better yet.
Okay.
R file.open.
platform to G is
could not be opened successfully.
Huh? Did something move or whatever? Cuz
Oh, they have just zips
Oh, they have just zips
now. They moved.
Um, wait, no, the web assembly is char
Um, wait, no, the web assembly is char
zip.
zip.
Okay, dang it.
I like new puffer train. It's smooth.
I like new puffer train. It's smooth.
Thank you. I'm working on it, man. I'm
Thank you. I'm working on it, man. I'm
going to have to take a break on
going to have to take a break on
Saturday and like do something else. I
Saturday and like do something else. I
don't know if I start algorithm like
don't know if I start algorithm like
algorithm research or if I like come
algorithm research or if I like come
help you on M's or something, but like
help you on M's or something, but like
release work is just freaking so boring.
release work is just freaking so boring.
And I just uh I do not work well when
And I just uh I do not work well when
I'm bored like at
What are we getting
now? These stupid error messages.
Break
that like blew up a surprising amount
that like blew up a surprising amount
for a random retweet.
We have a real error message
here. Okay, so we do have a real error
here. Okay, so we do have a real error
message
message
platform. The hell's the URL on this
platform. The hell's the URL on this
thing?
5.5 download 5.5
5.5 download 5.5
RAI 5.5 Web
Assembly.zip. Oh, and then it's probably
Assembly.zip. Oh, and then it's probably
this Bar
this Bar
lights plus
platform. Well, this is not
found. Where the hell is
found. Where the hell is
it? 17.
it? 17.
[Music]
[Music]
You should probably render it to make
You should probably render it to make
sure it's doing what you expect.
It is very
good. It's kind of surprising if you're
good. It's kind of surprising if you're
able to get that to work on like some
able to get that to work on like some
random trainer.
random trainer.
Well, we have our first visitors.
Hang on. A picture of these
guys. I uh I put a bird feeder out and
guys. I uh I put a bird feeder out and
we have
we have
two bright yellow orals.
three of
three of
them. That was very nice.
This thing has been up for a day and a
This thing has been up for a day and a
half, and these are the first ones that
half, and these are the first ones that
have uh come to get
it. I'm going to be momentarily
it. I'm going to be momentarily
distracted because I uh I actually don't
distracted because I uh I actually don't
ever think I've seen one of
ever think I've seen one of
those.
Oh, there they go. Okay.
Okay, so this doesn't exist.
Okay, this totally does exist.
You think for bigger maps I'll need to
You think for bigger maps I'll need to
set up a star to set mini goals.
Um, no
idea. I think if we get the sim right,
idea. I think if we get the sim right,
we can probably actually get like a
we can probably actually get like a
pretty darn cool like efficient routing
pretty darn cool like efficient routing
to goal result, right?
to goal result, right?
where like instead of just completion
where like instead of just completion
rate, we can actually get a metric
rate, we can actually get a metric
that's like, you know,
that's like, you know,
um time to goal or something and we can
um time to goal or something and we can
actually get something that continues to
actually get something that continues to
improve.
If you actually have like superhuman uh
If you actually have like superhuman uh
superhuman solve with RL, that's pretty
superhuman solve with RL, that's pretty
cool.
Like that will be a pretty darn cool
Like that will be a pretty darn cool
environment.
Okay. So, this is how it works.
All
right. So, this builds
Okay, so our lights here is
Okay, so our lights here is
apparently not the URL we were looking
for. Probably this
one. Want like the raw URL.
Damn.
At what point does it become easier when
At what point does it become easier when
you have uh fewer hints?
Never. If it's zero hints, I can just
Never. If it's zero hints, I can just
fill in whatever. No, I can just fill in
fill in whatever. No, I can just fill in
any valid
Okay. Well, this says it
installs undefined symbol blah blah blah
installs undefined symbol blah blah blah
blah blah. Lovely.
You'll contradict
yourself.
yourself.
Really? You're telling me it's easier to
Really? You're telling me it's easier to
like fill in the last whatever than like
like fill in the last whatever than like
it is to just come up with any random
it is to just come up with any random
board.
No
No
way. Can I not just do
like there's got to be like some basic
like there's got to be like some basic
ass pattern?
Now, look at that.
Wait. Three.
Wait. Three.
[Music]
Look at the spam we get these days.
Uh, do we need underscore See?
You fill the first 3x3
grid. That seems very weird.
Like with zero hints, if I get one board
Like with zero hints, if I get one board
right, I can just keep reusing it
right, I can just keep reusing it
everywhere.
Well, I mean it can totally if you like
Well, I mean it can totally if you like
train it on zero hints and like it
train it on zero hints and like it
randomly does stuff when it eventually
randomly does stuff when it eventually
finds the solution, it will it will
finds the solution, it will it will
hardcode it into the waves.
How the heck can it possibly be that
How the heck can it possibly be that
difficult? I don't know. I never did
difficult? I don't know. I never did
freaking sudoku.
Orioles are back.
I am a simple creature.
The goal was to get
The goal was to get
orioles, cardinals, and uh
bluebirds. So far, we have just seen the
bluebirds. So far, we have just seen the
orals here.
So this still does not import.
Wait, wait, wait. It actually put a
Wait, wait, wait. It actually put a
puffer fish. Look at
puffer fish. Look at
this puffer.
ridiculous. Need to build
Okay, so now it's
Holding freaking Grock.
This still doesn't have
pepper_c. Oh, it's not designed to
pepper_c. Oh, it's not designed to
build. Oh, it doesn't build
extensions.
D because it's sist.
Well, how the heck do you generate the
Well, how the heck do you generate the
damn things
then? Cuz otherwise it would be like a
then? Cuz otherwise it would be like a
exponential like 81 deep search. Like
exponential like 81 deep search. Like
there have got to be a lot of valid
there have got to be a lot of valid
boards for you to even be able to
boards for you to even be able to
generate the things,
right? Like you just start filling in
right? Like you just start filling in
numbers. Isn't the algorithm like to
numbers. Isn't the algorithm like to
generate the things you just start
generate the things you just start
filling in numbers and then like
filling in numbers and then like
backtrack until you get a valid solve
backtrack until you get a valid solve
and then like delete some of the
and then like delete some of the
numbers?
Those two things don't add up.
Maybe this is it.
Are you double checking that this thing
Are you double checking that this thing
is actually doing what you think it is?
I mean, if it actually works, then
I mean, if it actually works, then
that'll be a pretty darn cool end. I
that'll be a pretty darn cool end. I
will
say well I just know how what a pain RL
say well I just know how what a pain RL
is to get working when you don't have
is to get working when you don't have
you don't have puffer tools.
Just double check a thing.
Maybe like a negative 10 hit solve next.
Heck is
the I gota double check Gmail.
read graph song.
We still don't have this package. This
We still don't have this package. This
is
weird
really. I guess we should be able to
really. I guess we should be able to
tell just from
tell just from
um what gets copied, huh?
I don't see this
copying extensions. Maybe
I'm telling you, just get it set up for
I'm telling you, just get it set up for
puffer and like whatever you're getting
puffer and like whatever you're getting
will make it way better.
like our implementation kind of just set
like our implementation kind of just set
soda on everything out of the
box. It's pretty
good. You hope it would be with the
good. You hope it would be with the
amount of work I freaking put into it.
Okay, now it's actually copying the
Okay, now it's actually copying the
files.
Oops.
Oops.
See if this builds.
This thing still doesn't freaking exist.
This thing still doesn't freaking exist.
Like, you kidding me?
MSP.
What? This an actual issue.
We now do have underscore
C and the wheel file.
has right the wheel file should actually
has right the wheel file should actually
have the right stuff in
it. Yeah. So we have extensions you
see. And how did we get the uh the
see. And how did we get the uh the
underscore
underscore
C
build? So it's the name of the torch
build? So it's the name of the torch
extension,
extension,
right? Torch sources.
Then we have like
torch and build should run both, right?
torch and build should run both, right?
So we do like
build.
Yeah. So why does this not run?
still. No.
I do editable or
something cuz it's not installing it
something cuz it's not installing it
here, right? It's like
Okay. So, you have you can't do editable
Okay. So, you have you can't do editable
of a
zip. So, uh I guess I just have to
zip. So, uh I guess I just have to
find where this gets installed.
doesn't seem to
doesn't seem to
where Oh, that's info.
Okay, there's the binding file that we
want. And there's the underscore C
file, right?
sources need to be included in
sources need to be included in
manifest. Okay, let's check that.
That's everything, right?
That's everything, right?
They're all included.
from popper
from popper
li_c See?
Okay. So it can't link
Try
this. Okay. Still doesn't work.
It depends on
everything. You got it working.
So obnoxious that this like these chats
So obnoxious that this like these chats
to just break.
Oh, I mean we have
Oh, I mean we have
um do I think it's linking against the
um do I think it's linking against the
law wrong lib
law wrong lib
C
something. God damn.
made available by torch. Okay, hang on.
Nope. Okay, so now we're back to the
Nope. Okay, so now we're back to the
same
error. So this thing was completely
error. So this thing was completely
freaking wrong.
What the heck is wrong with this
thing? Undefined
thing? Undefined
symbol jit parse schema.
Get
11. What exactly does Muan change? It's
11. What exactly does Muan change? It's
a different
a different
optimizer. It's not just Muan anymore.
optimizer. It's not just Muan anymore.
We have more stuff in there. It's like
We have more stuff in there. It's like
upper implementation is just better at
upper implementation is just better at
this point, you know?
What's different about it that is better
What's different about it that is better
than Adam? Fancy math.
If you really want, I have a chat with a
If you really want, I have a chat with a
bunch of very fancy optimizer folks who
bunch of very fancy optimizer folks who
will explain loads upon loads of second
will explain loads upon loads of second
order approximations
order approximations
uh to
You would I understand it? Probably
You would I understand it? Probably
not. You would understand. You could
not. You would understand. You could
probably understand the highle idea of
probably understand the highle idea of
it
though approximate. It's a second order
though approximate. It's a second order
approximation. You're approximating the
approximation. You're approximating the
curvature of um the loss landscape with
curvature of um the loss landscape with
some math that I haven't frankly even
some math that I haven't frankly even
bothered to check the details of cuz
bothered to check the details of cuz
like there are a whole bunch of these
like there are a whole bunch of these
that technically try to do this.
that technically try to do this.
I don't know why their approximation is
I don't know why their approximation is
better or what it does
specifically. There is a paper though
specifically. There is a paper though
you can like check the uh there's an
you can like check the uh there's an
archive paper or
whatever. God damn it.
whatever. God damn it.
It actually was the [ __ ] build
It actually was the [ __ ] build
isolation. [ __ ] Python devs.
isolation. [ __ ] Python devs.
God, such [ __ ] dog
God, such [ __ ] dog
[ __ ] God damn
it. I
it. I
hate these [ __ ] Python engineers that
hate these [ __ ] Python engineers that
just come up with dumb [ __ ] best
practices. Best practice. Let's do the
practices. Best practice. Let's do the
whole [ __ ] build in a like in an
whole [ __ ] build in a like in an
isolated setup where we reinstall Torch
isolated setup where we reinstall Torch
under the hood without telling you and
under the hood without telling you and
install the wrong version cuz this is
install the wrong version cuz this is
going to make you very
going to make you very
happy.
[ __ ] [ __ ]
hell. I was thinking about it.
hell. I was thinking about it.
I do try to keep this more professional
I do try to keep this more professional
though than my
streams. A guido you in
streams. A guido you in
particular. God damn it.
I'm going to go figure out how the hell
I'm going to go figure out how the hell
we make sure this doesn't happen in
we make sure this doesn't happen in
practice.
Um, let me use a restroom. Let me go
Um, let me use a restroom. Let me go
walk around a bit and lift some weights
walk around a bit and lift some weights
and [ __ ] and then we'll finish this.
and [ __ ] and then we'll finish this.
That is so
That is so
stupid. Who the hell thought this was a
stupid. Who the hell thought this was a
good idea, right? Like, we're going to
good idea, right? Like, we're going to
ignore the fact that you have gigabytes
ignore the fact that you have gigabytes
of packages installed systemwide and
of packages installed systemwide and
that the Python installer sucks. We're
that the Python installer sucks. We're
going to reinstall everything from
going to reinstall everything from
scratch in like a container that we're
scratch in like a container that we're
not going to tell you about. We're going
not going to tell you about. We're going
to get the versions wrong cuz [ __ ] you.
to get the versions wrong cuz [ __ ] you.
And then you're going to debug it
blind. Oh, and we're not even going to
blind. Oh, and we're not even going to
tell you this option exists. It's just
tell you this option exists. It's just
in some random pep. So, like, have
fun. I swear the devs of like the
fun. I swear the devs of like the
tooling for this language are just
tooling for this language are just
[ __ ]
[ __ ]
It's like, and also did you notice like
It's like, and also did you notice like
it's been like virtualization by default
it's been like virtualization by default
now. It's like you need a VM by default
now. It's like you need a VM by default
to do anything. If you need a VM by
to do anything. If you need a VM by
default to do anything, even in a Docker
default to do anything, even in a Docker
container, your language is ass.
Well, I feel way way better. Hey,
Classic. We build Puffer Lib around
Classic. We build Puffer Lib around
here.
here.
ultra high
ultra high
performance reinforcement learning
performance reinforcement learning
toolkit and we're almost ready to ship
toolkit and we're almost ready to ship
our next update.
We just figured out why the package
We just figured out why the package
wasn't
building. Now I have to figure out what
building. Now I have to figure out what
do we do about it. Nice to meet you as
do we do about it. Nice to meet you as
well.
So
technically this is just sucky because
technically this is just sucky because
like the requirement is that the torch
like the requirement is that the torch
version used for build is the same as
version used for build is the same as
the torch version that you have on your
the torch version that you have on your
system, right?
Got to love this chat. This chat's
Got to love this chat. This chat's
breaking after three
messages. No, I mean, all the LLMs are
messages. No, I mean, all the LLMs are
bad. Like, they're all bad.
bad. Like, they're all bad.
They're going to just keep like
They're going to just keep like
leaprogging each other every couple
leaprogging each other every couple
months though for the foreseeable
months though for the foreseeable
future. So like you can either subscribe
future. So like you can either subscribe
to everything and then like hop around
to everything and then like hop around
them constantly or you can just pick one
them constantly or you can just pick one
and then keep using it unless the
and then keep using it unless the
company massively screws up. And Grock
company massively screws up. And Grock
is already included with Twitter
is already included with Twitter
anyways.
anyways.
So, it's uh convenient enough and the
So, it's uh convenient enough and the
generation is fast and like frankly all
generation is fast and like frankly all
the platforms have great problems with
the platforms have great problems with
like cats randomly dropping
I mean, all the language models are
I mean, all the language models are
pretty dumb, frankly.
You can like gaslight yourself into
You can like gaslight yourself into
thinking that they're good, but they're
thinking that they're good, but they're
really
external
Wait, how do I mark it as
journal? Huh?
Wait. It doesn't make sense.
Okay, so like the thing is this thing
Okay, so like the thing is this thing
here just generated me like paragraphs
here just generated me like paragraphs
and paragraphs and this is all
and paragraphs and this is all
[ __ ] This is completely wrong.
I mean I can
technically what I can do technically
here. What type of error was it? Import
here. What type of error was it? Import
error.
We'll try this. This is probably decent
We'll try this. This is probably decent
enough.
I've got all these damn bug bites and
I've got all these damn bug bites and
I'm like so freaking paranoid that I've
I'm like so freaking paranoid that I've
got ticks on me. There's so many of them
got ticks on me. There's so many of them
around
here. I think I'm fine.
I'm in Maryland. I'm on a farm, so it's
I'm in Maryland. I'm on a farm, so it's
like tons of stuff. And I have like I
like tons of stuff. And I have like I
run as well around.
So, it sucks. You get like normal bug
So, it sucks. You get like normal bug
bites and then it's like I don't know,
bites and then it's like I don't know,
is it a
is it a
tick? Literally, like I'll go running in
tick? Literally, like I'll go running in
the morning and I'll just be the whole
the morning and I'll just be the whole
time I'm running I'll just be like
time I'm running I'll just be like
pulling bugs that are biting me off my
pulling bugs that are biting me off my
back.
Freaking bugs, man.
There's something wrong here.
Like, hang
on. I want to take a picture. I can like
on. I want to take a picture. I can like
freaking see. It's in like this blind
freaking see. It's in like this blind
spot where I can't reach. And we'll go
spot where I can't reach. And we'll go
back to Dev.
There's literally nothing
There's literally nothing
there. No
idea. We actually have not really had
idea. We actually have not really had
any mice problems
any mice problems
surprisingly. All right, so I mean that
surprisingly. All right, so I mean that
at least fixes it enough,
right? But we do have pip installable
right? But we do have pip installable
package now. Let's see if uh we can
package now. Let's see if uh we can
actually run
it. No config for M name
it. No config for M name
breakout really.
right
right
here. Yeah, we have uh we have the
here. Yeah, we have uh we have the
default. We literally have
default. We literally have
this this uh
this this uh
default. I bet you config is not in the
resources. That's got to be it.
all the any
files. Oops. With no build
files. Oops. With no build
isolation.
Could work without build isolation,
Could work without build isolation,
right? All
right? All
right. Upper
train.
train.
No config.
Really? We should see stuff getting
Really? We should see stuff getting
included
here. Ocean
No
configs.
Ah, packaging. No
Ah, packaging. No
fun. No fun at all.
Still
no. Do we still not have the config
no. Do we still not have the config
files in
there? No, we do. Look, cuz see we have
there? No, we do. Look, cuz see we have
config files in here
now. Uh-huh.
now. Uh-huh.
Yeah, we got our
configs. So, uh what gives right
Upper lip popper lip
Upper lip popper lip
config. Yeah, this totally
worked
now. Should be in the same directory as
now. Should be in the same directory as
well.
Let's just break point here.
I actually want to specifically
I actually want to specifically
know build
Nathaniel J.
Smith. This guy is a
Smith. This guy is a
[ __ ] Cool. Thank you for screwing over
[ __ ] Cool. Thank you for screwing over
Python.
Cool. We get a break
point user
local. Wait, what's puffer?
Okay.
This should totally have uh that
This should totally have uh that
breakout in it,
right? Huh?
right? Huh?
Wait, this suddenly
works. Oh, wait. Then how does something
works. Oh, wait. Then how does something
just cash weird? I guess
If this works. It does. We have bas
If this works. It does. We have bas
basic packaging done and we can do other
basic packaging done and we can do other
things which would be very nice. I got
things which would be very nice. I got
45 minutes before dinner and I do not
45 minutes before dinner and I do not
want to keep doing this.
Cool. So then you can do puffer train.
Cool. So then you can do puffer train.
Actually, I want to go let's go up a
Actually, I want to go let's go up a
dirt and let's see what happens.
All right, we have
All right, we have
experiments and then we have uh our
experiments and then we have uh our
model file, right? So we just do
Or what? Puffer
eval.
eval.
Boom. Except this model doesn't seem to
Boom. Except this model doesn't seem to
be loading correctly because it
be loading correctly because it
sucks. Is that the
sucks. Is that the
case? Uh
Well, that's weird.
policy load state
policy load state
dict cuz you've already passed it to
dict cuz you've already passed it to
um you've already passed it to puffer is
um you've already passed it to puffer is
the
I think we'll go look at the uh
I think we'll go look at the uh
experiment results that we've had
experiment results that we've had
running after
running after
this to ship this
Is the Python requirement greater than
Is the Python requirement greater than
or equal to 3.12 for puffer lib? It
or equal to 3.12 for puffer lib? It
should not
should not
be. I think that would be too far ahead
be. I think that would be too far ahead
to go,
to go,
right? What's the current Python release
right? What's the current Python release
versioning?
though. Technically, it should be 39 or
though. Technically, it should be 39 or
310. It should be what we uh
310. It should be what we uh
require. Possibly 310. I don't think
require. Possibly 310. I don't think
anyone's still on 39 so much
anymore. Yeah, 312 would be too recent
anymore. Yeah, 312 would be too recent
of a wreck.
How's this still not
work? How's this still not work?
work? How's this still not work?
Well, at least we can um
This stupid thing. I can tell by how
This stupid thing. I can tell by how
long it's
long it's
taking. It's trying to install yet
taking. It's trying to install yet
another version of Torch.
We are going to just fix this policy
We are going to just fix this policy
loading thing real quick first.
Yes, this model is not very good
Yes, this model is not very good
apparently. Okay.
Oh, dummy. This is for
training. Load
training. Load
config. Does it load policy?
Let me see. So, load model path actually
Let me see. So, load model path actually
has to do a
thing. A bit inconvenient.
There we go.
Okay, that has been a lot of obnoxious
Okay, that has been a lot of obnoxious
packaging done.
Um, finally.
No more strawberry
man. Okay, let's go look at the
man. Okay, let's go look at the
experiments.
We still have to write
We still have to write
docs. I actually got a bunch of the
docs. I actually got a bunch of the
stuff done today for uh packaging, but
stuff done today for uh packaging, but
we still have to write
docks. How's this
doing? Okay, so time this thing
doing? Okay, so time this thing
does not particularly
well and this
well and this
one does
terribly. Well, that's worth figuring
terribly. Well, that's worth figuring
out what the heck went wrong there.
Hey,
Weston. Get myself set up with
Weston. Get myself set up with
womb. Yeah, you should do
that. Just look at some of our codes. so
that. Just look at some of our codes. so
you don't make a mess. Just like look at
you don't make a mess. Just like look at
like the snake code or
something group discord
something group discord
page your YouTube channel
page your YouTube channel
I1 we have a discord discord.gg/puffer
GG/puffer. Got like,00 people in it or
GG/puffer. Got like,00 people in it or
whatever.
What extent do I think this is bad
What extent do I think this is bad
defaults versus bad
eval? Why don't we take a
look? It's not like we're just stuck and
look? It's not like we're just stuck and
not exploring hyper pram space, right?
It's
It's
wand, but uh I mean that's kind of what
wand, but uh I mean that's kind of what
they get for naming it that,
they get for naming it that,
right? It's going to be WandyB. And you
right? It's going to be WandyB. And you
know, if they don't like that, they can
know, if they don't like that, they can
call the Wambbulance.
It's pretty funny because I've seen them
It's pretty funny because I've seen them
giving like given presentations where
giving like given presentations where
like they clearly instructed the
like they clearly instructed the
presenter to like like annunciate wand
presenter to like like annunciate wand
B. All
right. I think that what we have to do
right. I think that what we have to do
here I'm a bit confused
here I'm a bit confused
here. All I did was got some better
here. All I did was got some better
default
ranges. One that's really bad is the
ranges. One that's really bad is the
mazes. Can we figure out what happened
mazes. Can we figure out what happened
to the
mazes? Cuz they should get like way
mazes? Cuz they should get like way
better
perf. It's weird, you know, cuz
perf. It's weird, you know, cuz
like it looks like it's finding good
like it looks like it's finding good
params and then the score just sucks.
Like it's sweeping all reasonable ranges
here.
here.
Oh, okay.
Oh, okay.
Well, this will do it,
right? No, we
right? No, we
actually Was this a good run or
not? Okay. No, this is a still screwy
run. Okay, this is the good run.
just runs for way longer,
right? So, this is just deciding to not
right? So, this is just deciding to not
do
that. Oh, I bet I know what's happening.
Take a little look at some of our sweep
Take a little look at some of our sweep
stuff to correct for this.
Total time
steps equals args of train of total time
steps equals args of train of total time
steps. This is in the wrong spot.
This needs to
This needs to
go
here. Let's see if this alone solves it.
So, we have our new
So, we have our new
uh we've got our new code
here. Quite some changes.
Solid work today.
[ __ ] I think what I'm going to do is
[ __ ] I think what I'm going to do is
I'm just going to set it so that
I'm just going to set it so that
um Python just does no build isolation
um Python just does no build isolation
and uh it doesn't editable like it does
and uh it doesn't editable like it does
no build isolation. It does break system
no build isolation. It does break system
packages by default on our dockers cuz
packages by default on our dockers cuz
this VM [ __ ] is just so
stupid. Like those are both just dumb
stupid. Like those are both just dumb
peps, right?
They're both just like dumb like dumb
They're both just like dumb like dumb
virtualization peps.
upper
upper
train works.
Yeah, there we
go. And we will see whether this uh this
go. And we will see whether this uh this
works or not.
And I guess that we
do. Boom.
We will see how this
We will see how this
does. Hopefully should be
does. Hopefully should be
decent. That's just the bug. Then
decent. That's just the bug. Then
um we should be able to actually get
um we should be able to actually get
better results out of our sweeps from
better results out of our sweeps from
that cuz it's been pushing everything to
that cuz it's been pushing everything to
like min time steps or
whatever.
whatever.
Oops.
Would you recommend I scrape a scrap
Would you recommend I scrape a scrap
womb and use Neptune? You can try either
womb and use Neptune? You can try either
one.
I prefer Neptune personally and I think
I prefer Neptune personally and I think
that they both have free versions.
We are making progress on this sweep
We are making progress on this sweep
stuff. Like I'm starting to figure out
stuff. Like I'm starting to figure out
the like the last remaining variables
the like the last remaining variables
that are screwing with
things. And hopefully we should really
things. And hopefully we should really
be able to launch all the sweeps from
there. It's
5:40. See if
5:40. See if
anybody's asking for stuff in the
Discord. Actually, I I wouldn't mind
Discord. Actually, I I wouldn't mind
taking a look at your Sedokco code real
taking a look at your Sedokco code real
quick if you uh if you'd like me to. I
quick if you uh if you'd like me to. I
uh Let me go do a couple quick steps,
though. I got to get a swivel for this
though. I got to get a swivel for this
chair.
literally no way to get in this chair.
Okay. No code.
Whatever is easiest. Why don't you have
Whatever is easiest. Why don't you have
your code on GitHub, man? Put your code
your code on GitHub, man? Put your code
on
on
GitHub. Like, editing [ __ ] locally is
GitHub. Like, editing [ __ ] locally is
just dumb. like you're going to be fine
just dumb. like you're going to be fine
for like 99% of the time and then you're
for like 99% of the time and then you're
eventually going to lose a file. I have
eventually going to lose a file. I have
[ __ ] on
GitHub like by
default is on GitHub then DM me the link
default is on GitHub then DM me the link
what are you
what are you
doing or put it in chat or whatever.
You're supposed to do
You're supposed to do
that. No.
It's crazy how much of a difference
It's crazy how much of a difference
sleep makes.
sleep makes.
Like honestly, lately I've been starting
Like honestly, lately I've been starting
to suspect I don't even have like
to suspect I don't even have like
particularly [ __ ] athletic genetics.
particularly [ __ ] athletic genetics.
It's just straight up that when I was
It's just straight up that when I was
younger, like I wasn't sleeping at all.
So, like, yeah, you're going to be near
So, like, yeah, you're going to be near
last in everything if you're sleeping
last in everything if you're sleeping
four hours a night and everyone else is
four hours a night and everyone else is
sleeping seven or
eight. I swear I don't know how you
eight. I swear I don't know how you
randomly run a six-minute
mile. Like, I'm training and I'm almost
mile. Like, I'm training and I'm almost
at the point where I think I could
at the point where I think I could
probably do a seven.
Like I can do I did a 630 pace 1
Like I can do I did a 630 pace 1
kilometer interval the other
kilometer interval the other
day. I'm 5'9. It doesn't make that big
day. I'm 5'9. It doesn't make that big
of a difference.
We do have the
We do have the
uh the 195 bench for 12, though. I'm
uh the 195 bench for 12, though. I'm
starting to get my pressing strength
starting to get my pressing strength
back at the very
least. Touch and go. 195 for 12. Not
least. Touch and go. 195 for 12. Not
paused, but still.
Western's
Western's
code. I got to go in like 10. I want to
code. I got to go in like 10. I want to
take a quick
look. Plates plus
five. I've done 20 on like a plate and
five. I've done 20 on like a plate and
change or
change or
whatever. It's weird. Like it takes a
whatever. It's weird. Like it takes a
while to get used to training that way
though. Like I I don't even think I did
though. Like I I don't even think I did
I recently did 135 for like 20 or 25,
I recently did 135 for like 20 or 25,
whatever it was. Um I don't think I
whatever it was. Um I don't think I
could have done that when I when I hit
could have done that when I when I hit
my like 265 single. I don't think I
my like 265 single. I don't think I
could have done a plate for 20.
You have to train high reps. If you want
You have to train high reps. If you want
to be able to do high
reps, to train strength, if you want to
reps, to train strength, if you want to
be
strong, I will say I'm absolutely uh
strong, I will say I'm absolutely uh
loving the the super squat back there. I
loving the the super squat back there. I
haven't used it for squatting once. I've
haven't used it for squatting once. I've
been just using it for push press and
been just using it for push press and
it's
great. It's like very quickly just
great. It's like very quickly just
become my favorite movement. What'd you
become my favorite movement. What'd you
get done today? Uh we have a a dev build
get done today? Uh we have a a dev build
with uh of the pit package. Um, we also
with uh of the pit package. Um, we also
have entry points. So, you can just do
have entry points. So, you can just do
this from anywhere on your system. You
this from anywhere on your system. You
can do puffer
train and then wherever you are, it'll
train and then wherever you are, it'll
just like it'll save the checkpoints
there. Buffer train.
I actually still have to read that repo
more. Buffer train.
more. Buffer train.
Yep. Well, there's a default, right? The
Yep. Well, there's a default, right? The
defaults are breakout, but
like So then what I can do is puffer
like So then what I can do is puffer
eval.
Oops. And that'll just work from the pit
Oops. And that'll just work from the pit
package. And you can actually pull files
package. And you can actually pull files
down from Neptune or Wand as well. You
down from Neptune or Wand as well. You
can load stuff from
there. You can run like everything from
there. You can run like everything from
this
Uh getting just latest is kind of hard
Uh getting just latest is kind of hard
from uh from like
from uh from like
Neptune. Get
Neptune. Get
get Google deep
get Google deep
moon.
What? These are things I'm sure were
What? These are things I'm sure were
very funny with no sleep.
So you did multidiscreet I guess. Wait 0
So you did multidiscreet I guess. Wait 0
to 70. Oh no I see what you did. Okay
to 70. Oh no I see what you did. Okay
that's fine.
Oh
jeez. Oh, David stopped
jeez. Oh, David stopped
by. Wait, when did he must have stopped
by. Wait, when did he must have stopped
by late
then? Do they have a better model than
then? Do they have a better model than
the puffer one
yet? I don't think
yet? I don't think
so. We still We try to ship them good
so. We still We try to ship them good
models.
Wait, this
Wait, this
is Dude, this is this is off policy
is Dude, this is this is off policy
PO. This is like not supposed to work at
all. Right.
When's this memory get reset? Oh, no.
When's this memory get reset? Oh, no.
Never mind. Okay, it's still on policy.
Never mind. Okay, it's still on policy.
You're
You're
fine. So, it's funny. You're doing
fine. So, it's funny. You're doing
batch. You're doing this batched, right?
batch. You're doing this batched, right?
You don't have many batching at
Oh gosh, the nested functions.
Yeah, you're definitely going to be able
Yeah, you're definitely going to be able
to do a heck of a lot. Like you got too
to do a heck of a lot. Like you got too
many
variables. Like if you want to make your
variables. Like if you want to make your
own if you want to make your own
own if you want to make your own
training implementations, you should do
training implementations, you should do
them on an existing an existing model or
them on an existing an existing model or
I mean an existing environment. And if
I mean an existing environment. And if
you want to make your own environment,
you want to make your own environment,
you should use an existing training
you should use an existing training
implementation. It'll be way easier. I
implementation. It'll be way easier. I
mean, here like port the M to C and try
mean, here like port the M to C and try
it on Puffer and see how it works.
it on Puffer and see how it works.
That'll be some good engineering
That'll be some good engineering
experience for you as
well. You'll get to do some C. You
well. You'll get to do some C. You
should get some sleep first, otherwise
should get some sleep first, otherwise
you're going to make a mess of
it.
Right. I am about to go get dinner
Right. I am about to go get dinner
though. So, um I think I will be back
though. So, um I think I will be back
after dinner to look at some
after dinner to look at some
experiments. I got to figure out a
experiments. I got to figure out a
couple other things I can do. I might
couple other things I can do. I might
even start looking at like what research
even start looking at like what research
I want to start working on next. Um
I want to start working on next. Um
because I'm going crazy from doing
because I'm going crazy from doing
release stuff.
release stuff.
Um yeah. So, for folks
Um yeah. So, for folks
watching, thanks for stopping by. It's
watching, thanks for stopping by. It's
been a pretty darn good stream day.
been a pretty darn good stream day.
Um, all my stuff's free and open source.
Um, all my stuff's free and open source.
So, if you want to check that out, it's
So, if you want to check that out, it's
at
at
puffer.ai. You can help me out for free
puffer.ai. You can help me out for free
by starting the repository. That really
by starting the repository. That really
helps. And if you want to get involved
helps. And if you want to get involved
with dev, like most of our top
with dev, like most of our top
contributors came in with no RL
contributors came in with no RL
background at all. So, if you know how
background at all. So, if you know how
to program and you want to do some AI
to program and you want to do some AI
and like do some really hardcore ultra
and like do some really hardcore ultra
high performance
high performance
dev, run Discord. Also follow me on X
dev, run Discord. Also follow me on X
where I occasionally post reinforcement
where I occasionally post reinforcement
learning things. Other than that, thanks
learning things. Other than that, thanks
and I will be back probably after
and I will be back probably after
dinner.
