Kind: captions
Language: en
yeah
yeah
hi I have gotten so distracted today
hi I have gotten so distracted today
with meetings and Twitter and a variety
with meetings and Twitter and a variety
of things but now it is
of things but now it is
time to write some C
time to write some C
code uh almost I'm going to do a couple
code uh almost I'm going to do a couple
quick things
quick things
first and then what we're going to do is
first and then what we're going to do is
we're going to finish the render client
we're going to finish the render client
Inc which will be fun oops that is my
Inc which will be fun oops that is my
email let's not do
email let's not do
that couple quick announcements here
that couple quick announcements here
so this post has done pretty darn
so this post has done pretty darn
well uh this video here you can see it's
well uh this video here you can see it's
at 238 on Twitter so that's awesome I
at 238 on Twitter so that's awesome I
need to click this up by one yeah so
need to click this up by one yeah so
that's awesome um and on YouTube I
that's awesome um and on YouTube I
actually haven't checked yet
we're at 6:40 on
we're at 6:40 on
YouTube with some comments
well so this is doing I mean this is not
well so this is doing I mean this is not
blown up at all you know on YouTube
blown up at all you know on YouTube
we'll see if it does and the one other
we'll see if it does and the one other
thing I was very excited about
thing I was very excited about
today look at
today look at
this we're closing on a thousand
this we're closing on a thousand
stars this Spike from the video here
stars this Spike from the video here
so we'll see if we hit that this week
so we'll see if we hit that this week
that would be
that would be
amazing hey don't forget to feed the
amazing hey don't forget to feed the
puffer aside from that the breakout
puffer aside from that the breakout
sweep why is this so laggy um the
sweep why is this so laggy um the
breakout sweep here with the revised
breakout sweep here with the revised
carbs you can see we have 500 score on
carbs you can see we have 500 score on
breakout is pretty
breakout is pretty
awesome we're not going to be doing
awesome we're not going to be doing
anything with that today but it's good
anything with that today but it's good
to know that we have improved carbs for
to know that we have improved carbs for
the next MOBA sweep and that's about it
the next MOBA sweep and that's about it
so I think what we're going to get
so I think what we're going to get
started on
here welcome YouTube
here welcome YouTube
folks uh what we're going to get started
folks uh what we're going to get started
on here is what I was working on last
on here is what I was working on last
night
where is
it upper lib environments ocean
it upper lib environments ocean
MOA
and we've got our mooba
and we've got our mooba
here and if I
here and if I
recall we had it to the point that it
recall we had it to the point that it
was actually
running uh let me remember how this was
running uh let me remember how this was
running
running
I believe it was running if I just
I believe it was running if I just
do
do
MOA do I have the command in
MOA do I have the command in
here
nope yeah I need the uh the Linker
thing
thing
export what's LD Library path equals Ray
export what's LD Library path equals Ray
lib flash
lib flash
lib I think it's just
this there we go
this there we go
so here we have the
so here we have the
Moa and this is not very fun to look at
Moa and this is not very fun to look at
right this is not particularly
right this is not particularly
impressive uh but the goal
impressive uh but the goal
is to implement the full
is to implement the full
client and then this will be able to run
client and then this will be able to run
on the web and you guys will be able to
on the web and you guys will be able to
play with it and tell me if stuff is
play with it and tell me if stuff is
broken and it'll be fun to collaborate
broken and it'll be fun to collaborate
on and there'll be some cool stuff to do
on and there'll be some cool stuff to do
with it there but in order to get to
with it there but in order to get to
that we have to get this thing to
that we have to get this thing to
actually work correctly because as you
actually work correctly because as you
can see nothing is actually happening
can see nothing is actually happening
it's spawning stuff but nothing is
it's spawning stuff but nothing is
really
really
moving so we have to figure out what is
moving so we have to figure out what is
going on here um
going on here um
um
yeah so I think if I
recall we
recall we
were somewhere here
351 and let me make this
visible okay pop your
distracting so MOA do
distracting so MOA do
H
B1 and
now we're here in Step
neutrals action is two
H action is 255
so that's
so that's
interesting if I recall I think that the
interesting if I recall I think that the
uh the destinations were
screwy okay so if I'm looking at these
screwy okay so if I'm looking at these
here the
the position of this agent is reasonable
the position of this agent is reasonable
but it's pathing somewhere that doesn't
but it's pathing somewhere that doesn't
make any
make any
sense
sense
so let's figure out why that
so let's figure out why that
is this is
in
in
792 uh one one second I actually I have
792 uh one one second I actually I have
to turn this down one tick I can't deal
to turn this down one tick I can't deal
with this in my eyes all day like this
with this in my eyes all day like this
um can I just fix the green screen a
um can I just fix the green screen a
little bit so that I can be so that it
little bit so that I can be so that it
will work with the green screen a little
will work with the green screen a little
bit less
bit less
ridiculous nah I think this will be okay
ridiculous nah I think this will be okay
for now we have a little bit of green
for now we have a little bit of green
Haze here but this light is too bright
Haze here but this light is too bright
for me to stare at all
for me to stare at all
day good for recording videos not good
day good for recording videos not good
for
for
uh you know working all
day 351 we
day 351 we
say Okay so this says that we scanned a
say Okay so this says that we scanned a
Target that has a nonsense position
Target that has a nonsense position
basically
right so it's either the scan
right so it's either the scan
function or
function or
the target
the target
function I bet it's in scan AOE so let's
function I bet it's in scan AOE so let's
start
there which would be 643
okay interesting
so
so
this never gets there really
let me just make sure of
this okay so as you can see this never
this okay so as you can see this never
gets to this
gets to this
line um so this nearest scan Target
line um so this nearest scan Target
thing should be
thing should be
normal let me see how the logic looks
normal let me see how the logic looks
for this
so this does scan
AOE let's go to
here okay so now we've hit
here okay so now we've hit
this oops I hate how it like changes
this oops I hate how it like changes
your
focus okay tick zero so we definitely
focus okay tick zero so we definitely
scanned AOE
right so this is saying
right so this is saying
that the entity is not
no or gets PID
zero is that not how you do
null I thought it
what am I dumb here
zero so it is just
zero okay so according to this this is
zero okay so according to this this is
zero
neutral
spawn
791 yeah so right here it skipped over
this
783 uh and according to
783 uh and according to
this
we according to this we never actually
we according to this we never actually
hit anything which is weird I thought we
hit anything which is weird I thought we
were hitting something
were hitting something
before uh oh are we is it here neutral
before uh oh are we is it here neutral
spawn why is this what's messed up
352 okay
352 okay
so y d x d so this is the nonsense right
so y d x d so this is the nonsense right
and then if I go into
and then if I go into
oops neutrals
AI ah so I had this wrong before it's
AI ah so I had this wrong before it's
the spawn Y and the spawn X that don't
the spawn Y and the spawn X that don't
make sense
make sense
here so let's figure out why that
is so we have respawn
neutral and this is not where spawn
neutral and this is not where spawn
X and spawn y are getting added
X and spawn y are getting added
right respawn player
so do we do this in a nmoa
somewhere I think that these guys are
somewhere I think that these guys are
not getting
not getting
um they're not getting spawned correctly
um they're not getting spawned correctly
we have this
we have this
here
right so 1428
okay
okay
so neutral SP
Yol on
Yol on
X this looks reasonable to
me
me
back all this data
all this data looks reasonable so it
all this data looks reasonable so it
must be getting assigned
must be getting assigned
incorrectly
incorrectly
Camp how many elements do we have
here
n 18
n 18
elements and
then 18
then 18
total camps but this is totally
total camps but this is totally
reasonable
right neutral PID it's also
correct the
correct the
heck I mean somewhere here this is
heck I mean somewhere here this is
getting messed up right
let's go back to this and see if we can
let's go back to this and see if we can
figure out
where
okay so this is where it's getting
okay so this is where it's getting
messed up
messed up
right y dust is one
PID
110 neutral offset
110 neutral offset
10 it's 110 so this is the very first
10 it's 110 so this is the very first
neutral
neutral
right and this is saying that
okay this is all reasonable here right
73 just say
73 just say
70 73
70 73
43 yeah this is reasonable because it's
43 yeah this is reasonable because it's
a little bit of a random spawn around
a little bit of a random spawn around
here so that's a good position I think
here so that's a good position I think
that that's correct
and then the
destination has got to be the weird
part is right here with the spawn
part is right here with the spawn
so let's quit
so let's quit
here mo.
here mo.
H7 2
run
and spawn
y oh cool you can print if you
y oh cool you can print if you
dreference it you actually get the whole
dreference it you actually get the whole
stru that's really
stru that's really
nice I'm actually surprised how nice the
nice I'm actually surprised how nice the
uh the print format is in uh in just
GDB so if we look here we can actually
GDB so if we look here we can actually
see that the spawns look good
right
okay y
okay y
s y
s y
best
44 hold on so this gets
truncated spawn Y and spawn X are right
here
ah I changed this I changed the stupid
ah I changed this I changed the stupid
signature of this function like a dummy
signature of this function like a dummy
and I forgot to refactor
immediately
immediately
okay let it be known I am
stupid let it be known that I am stupid
and we need all of this to
and we need all of this to
be I'm sure this gets called elsewhere
right and
right and
creep it's good right
agent speed last agent speed
agent speed last agent speed
last yeah it only gets C in four places
cool uh build
local well the pathing is totally
local well the pathing is totally
screwed
screwed
up they are
up they are
fighting look at that
okay pathing is totally messed up on the
okay pathing is totally messed up on the
creeps but they do actually do
something wait
what I'm sure that we're just like
what I'm sure that we're just like
wrapping way points
wrapping way points
wrong I'm use a rest real quick and then
wrong I'm use a rest real quick and then
what we're going to do is we're going to
what we're going to do is we're going to
fix this and um
fix this and um
yeah we'll go from
there
e e
whoops one sec
I don't need these on at all do I I used
I don't need these on at all do I I used
to editing the
video if I message the output of GLX
info oh
info oh
what what
yeah this leaks we don't care we know
yeah this leaks we don't care we know
that this leaks this is
that this leaks this is
uh just
uh just
[Music]
unloading I think there's like a couple
unloading I think there's like a couple
hundred like bite leak in like some rayb
hundred like bite leak in like some rayb
dependence see but it's only when you go
dependence see but it's only when you go
to exit the whole thing it's only a few
to exit the whole thing it's only a few
hundred bytes as well it doesn't
hundred bytes as well it doesn't
accumulate
[Music]
right
right
so what we needed to do was figure out
so what we needed to do was figure out
why these waypoints are weird
way points
of did I declare this thing
of did I declare this thing
correctly I think I
did way
points okay this is the creep AI right
so we'll put right
here right
oops right
on
right run this
and
and
Lane way point
Lan okay
point
one okay so this
one okay so this
is wait
is wait
huh oh no this
huh oh no this
is you can see that the coordinates are
is you can see that the coordinates are
flipped here right
something got YX and then
XY that's what's wrong the data
error man
so right
so right
here right here we're doing
here right here we're doing
um this is it right it should
um this is it right it should
be neutral Camp X neutral Camp y okay
be neutral Camp X neutral Camp y okay
and
and
then where is the darn thing ah right
then where is the darn thing ah right
here
this seems wrong to me
this seems wrong to me
though this seems wrong to
me oh wait wait because yeah yeah look
me oh wait wait because yeah yeah look
the spawn is getting inserted correctly
the spawn is getting inserted correctly
and then this is getting inserted
and then this is getting inserted
inserted
inserted
wrong that's easy that's an easy
wrong that's easy that's an easy
fix process neutrals
Pi
Pi
dot.
text
text
9614 9314 okay now we have the way
9614 9314 okay now we have the way
points correct in here what I'm going to
points correct in here what I'm going to
do is
text I'm going to grab the Waypoint
text I'm going to grab the Waypoint
chords which should be the only things I
chords which should be the only things I
need
need
right
yeah and then this just goes into m.h
we
rebuild and now we run the game in all
rebuild and now we run the game in all
of its Glory
of its Glory
look at
this look at
that very nice
indeed are we
online did we just have an internet blip
we'll see if uh if Xfinity decides to
we'll see if uh if Xfinity decides to
die again
today hopefully
not let's Commit This up in the
not let's Commit This up in the
meantime oops
happening
okay we now get to start on the real
okay we now get to start on the real
client which is going to be fun and this
client which is going to be fun and this
is the main thing that I wanted to do
is the main thing that I wanted to do
today
so the Ste the uh the story with this is
so the Ste the uh the story with this is
right now we have
right now we have
m.p which is using RB for this
m.p which is using RB for this
rendering we are using the C style RB
rendering we are using the C style RB
API meaning that the code should be even
API meaning that the code should be even
though it's python it should be almost
though it's python it should be almost
one to one with
one to one with
C that said we still have a little bit
C that said we still have a little bit
of work to do porting it because you
of work to do porting it because you
know maybe we use some dictionaries
know maybe we use some dictionaries
maybe we use some other
things but it's pretty
things but it's pretty
self-contained so I think we're going to
self-contained so I think we're going to
just be able to do
this just grab all the python code
see how much code is
this 373
this 373
lines and now we got to Port this to
lines and now we got to Port this to
Native
Native
C so let's just
C so let's just
do this will go to render map
this will become a nit map
this will become a nit map
renderer this will become
renderer this will become
close map
close map
renderer this will become map renderer
renderer this will become map renderer
like
this level map
this level map
overview and then this one will
overview and then this one will
be uh
be uh
player one Cent
View and we'll be able to reuse a couple
View and we'll be able to reuse a couple
small things I
think actually does this need to store
think actually does this need to store
anything other
anything other
than we'll make a separate struct for
than we'll make a separate struct for
now but we might end up being able to
now but we might end up being able to
just reuse this one
we've
we've
got
got
renderer game
renderer uh we'll
renderer uh we'll
copy some of this to start I
think game renderer
okay game
renderer and I don't know why
renderer and I don't know why
we're doing this this
way this is
way this is
fine
yeah and now we need to start copying
yeah and now we need to start copying
logic in so
what do we have game map path in
here we have the game map included
here we have the game map included
apparently because of the Shader
but this is fine because we don't
but this is fine because we don't
actually we are only loading this fun uh
actually we are only loading this fun uh
this file using RB so we don't have to
this file using RB so we don't have to
do any weird CIO
right I think we can just start copying
right I think we can just start copying
this stuff into here so we have renderer
this stuff into here so we have renderer
width renderer
width renderer
height this is where we are right
height this is where we are right
then asset map what is asset map
here we do not use it it's down
here so this is not
here so this is not
needed this is not
needed this is not
needed uh we are going to need to
needed uh we are going to need to
declare asset map in the array
this is the next piece we need
here how many different things do we
here how many different things do we
want in here
I think it tells us up top
I think it tells us up top
right
16 16
by4 and then what we do is
by4 and then what we do is
render asset map is is going to be equal
to 0 0
to 0 0
z0 then there's nothing on one so 0 0 0
Z then two is going to
Z then two is going to
be
384 41
128 and then three here is also
128 and then three here is also
384 we're basically just copying this
384 we're basically just copying this
from a dictionary into a flat
array uh except this one is a little
array uh except this one is a little
different right this one is
different right this one is
zero four is going to be
zero four is going to be
256 five is going to
256 five is going to
be 384
yep then now it gets this one
yep then now it gets this one
right this one is
256 56
yep
yep
4 256 128
4 256 128
128 and then 128 256
128 and then 128 256
yep nine is
10 11 is now we're back up to here
10 11 is now we're back up to here
256 256
256 and now it's caught on to the
256 and now it's caught on to the
pattern 14
pattern 14
z0 three four okay
now we have all of these These are
done and then we'll just
done and then we'll just
do in stun
UV or slow UV speed
UV stun UV slow
UV stun UV slow
UV speed
UV speed
UV
UV
okay so we don't have any maps to play
okay so we don't have any maps to play
around with in C but we don't need them
around with in C but we don't need them
because we can just use a
race and this will actually be faster as
race and this will actually be faster as
well cuz now we're no longer using
well cuz now we're no longer using
hashmaps fun fact dictionaries are not
hashmaps fun fact dictionaries are not
fast they are slow oh of one with a
fast they are slow oh of one with a
giant constant on
it okay and this this was janky to begin
it okay and this this was janky to begin
with so um we'll have to do something
with so um we'll have to do something
about the paths or whatever but I'm
about the paths or whatever but I'm
going to get rid of this for now
going to get rid of this for now
from rib import RL and color this
from rib import RL and color this
doesn't exist in C we'll get rid of this
doesn't exist in C we'll get rid of this
get rid of this get rid of
get rid of this get rid of
this target fps to
this target fps to
60 is
important and now these things
important and now these things
here are also going to end up being
here are also going to end up being
important
I don't know what
I don't know what
these the types of these
these the types of these
are so we'll find that out in a
moment um I think we're going to have to
moment um I think we're going to have to
do Textra 2D
oh game
oh game
map and then do we do self
puffer this get used yes it
puffer this get used yes it
does so
oops so game
oops so game
map second texture 2D puffer and then
Shader and we'll just do
Shader and we'll just do
render game
render game
map we no longer need encode I believe
map we no longer need encode I believe
this is just going to be gam
this is just going to be gam
map.png like this and then puffer is
map.png like this and then puffer is
going to be puffer is that the
going to be puffer is that the
path puffer
assets oh look at this all the paths are
assets oh look at this all the paths are
wrong let's just go grab this code back
wrong let's just go grab this code back
for a second
buer
buer
welcome we're jamming some
welcome we're jamming some
sea today having a good
time in my
time in my
path
oops something's weird here
what's this like self.
what's this like self.
puffer Sprite sheet path is self. puffer
okay which is MOA
assets uh I don't know why it's doing
assets uh I don't know why it's doing
this nonsense this should
be load what the
hell
so Shader path is OB Shader
so Shader path is OB Shader
FS so game map
FS so game map
Shader and then what do we
Shader and then what do we
have lots of different things
here game map is done puffer's done this
here game map is done puffer's done this
Shader is done holy [ __ ] this is the
Shader is done holy [ __ ] this is the
biggest DL effort in SE that I know of
biggest DL effort in SE that I know of
After Dark
After Dark
Net not really this sea did not exist
Net not really this sea did not exist
until
until
um
um
Saturday I ported like I ported the
Saturday I ported like I ported the
first 1400 lines or whatever on Saturday
first 1400 lines or whatever on Saturday
and then I just cleaned it up yesterday
and then I just cleaned it up yesterday
and today finished a couple things and
and today finished a couple things and
now I'm porting the renderer so the goal
now I'm porting the renderer so the goal
is this is going to be like a 2,000 line
is this is going to be like a 2,000 line
C project that's just a miniature
C project that's just a miniature
version of DOTA that runs at a million
version of DOTA that runs at a million
FPS for RL and uh since it's in see
FPS for RL and uh since it's in see
we're going to be able to play it in the
we're going to be able to play it in the
browser isn't that nice so I'll be able
browser isn't that nice so I'll be able
to put it online and Link it to you all
to put it online and Link it to you all
and you'll all be able to play against
and you'll all be able to play against
the RL agents and tell me what needs to
the RL agents and tell me what needs to
be rebalanced
this is also pretty much the first time
this is also pretty much the first time
I've written C in like 10 years so this
I've written C in like 10 years so this
is going to get much
faster that's crazy nice yeah it's not
faster that's crazy nice yeah it's not
that hard either like this doing this in
that hard either like this doing this in
C is really not any harder than doing it
C is really not any harder than doing it
in scon which isn't really any harder
in scon which isn't really any harder
than doing it in Python on
than doing it in Python on
so turns out you can just do
stuff which is why I say if anybody's
stuff which is why I say if anybody's
interested in writing stupidly High perf
interested in writing stupidly High perf
RL simulators which is basically just
RL simulators which is basically just
simple games programming but with ultra
simple games programming but with ultra
high perf let me know we've got
high perf let me know we've got
definitely uh we've got some people
definitely uh we've got some people
doing that already and we're always
doing that already and we're always
looking for
more it's a good time
the see is not
the see is not
required scyon at least is required but
required scyon at least is required but
that takes all of Five Seconds To
Learn Shader going to be Bloom Shader FS
um this
is I think you have to do like this or
is I think you have to do like this or
something because this syntax isn't
something because this syntax isn't
valid and also this RL is not valid here
valid and also this RL is not valid here
all these like RL calls this should just
all these like RL calls this should just
be load texture it's C there's no name
be load texture it's C there's no name
space with this
I guess the only thing that's a little
I guess the only thing that's a little
bit weird about what I'm doing here is
bit weird about what I'm doing here is
um I am kind of snake casing everything
um I am kind of snake casing everything
which is not exactly idiomatic C but
which is not exactly idiomatic C but
whatever
right you write python for a long time
right you write python for a long time
and this is how you end up doing things
I got too used to snake case to go
back okay we'll do Bloom
back okay we'll do Bloom
Shader and then Shader canvas
let's do like this just order these
let's do like this just order these
things
things
nicely variables of yeah it doesn't
matter I'm sure this will annoy some
matter I'm sure this will annoy some
people but
whatever let me write my C in peace
right I'm having so much fun with this
right I'm having so much fun with this
as well like this is just generally a
as well like this is just generally a
good time
what is this here is this an INT
what is this here is this an INT
float is a float
maybe we have to add a few variables up
maybe we have to add a few variables up
here
what do shaders
what do shaders
do uh I will show
do uh I will show
you so this is what the game looks like
you so this is what the game looks like
now you can see that there's like this
now you can see that there's like this
nice outline that kind of glows and like
nice outline that kind of glows and like
the transition as well it goes from uh
the transition as well it goes from uh
this s over to here it'll kind of fade
this s over to here it'll kind of fade
in fade out as well over time and then
in fade out as well over time and then
there's also this nice texture in the
there's also this nice texture in the
background there's like the subtle wavy
background there's like the subtle wavy
pattern so yeah we have a few uh a few
pattern so yeah we have a few uh a few
fun shaders for this just to Jazz it up
fun shaders for this just to Jazz it up
a little
a little
bit the hope is to Port all of this into
bit the hope is to Port all of this into
C
today also how's your environment
going I want to get a lot of these fun
going I want to get a lot of these fun
projects online as fast as I can because
projects online as fast as I can because
buffer really uh I mean the new video
buffer really uh I mean the new video
did a pretty nice number for us like
did a pretty nice number for us like
look at this this says 881 from before
look at this this says 881 from before
950 look at this
growth 70 Stars over
night speaking of which don't forget to
night speaking of which don't forget to
feed the puffer he eats Stars
rising to the cars
rising to the cars
yeah 950 with me thank you very much for
yeah 950 with me thank you very much for
your
service the Stars help a
service the Stars help a
lot just to get the world word out there
lot just to get the world word out there
on the project and such
right the silly thing
okay this is the syntax
right okay so these are the glsl
right okay so these are the glsl
variables that we got to grab from our
variables that we got to grab from our
shaders so now we
shaders so now we
are we're down to
here
here
uh okay so here I'm actually going to
uh okay so here I'm actually going to
have to look up the API spec for C
have to look up the API spec for C
because I need to make a
because I need to make a
camera in
camera in
C so we'll have to do
that not much progress finishing writing
that not much progress finishing writing
damn thesis once that's done hey do what
damn thesis once that's done hey do what
you got to do
you got to do
right and I swear having like getting
right and I swear having like getting
stuck just writing annoying things in
stuck just writing annoying things in
Academia was just one of the worst like
Academia was just one of the worst like
H most demotivating things out there
H most demotivating things out there
it's so much better when you don't have
it's so much better when you don't have
to do
that going to make some cool
that going to make some cool
UI I mean we're going to get this
UI I mean we're going to get this
running on the browser to begin with
running on the browser to begin with
right we're going to Port the full UI to
right we're going to Port the full UI to
run on a
run on a
browser and then I'm going to be able to
browser and then I'm going to be able to
put it on on the puffer website
put it on on the puffer website
actually I think I
actually I think I
have don't I own
this I'm pretty sure I own this
this I'm pretty sure I own this
domain yeah this is
mine so we'll make uh we'll probably
mine so we'll make uh we'll probably
like put all the games on puffer Dogg
I'm pretty sure I just have it set to
I'm pretty sure I just have it set to
Auto
Auto
renew too many things
renew too many things
moving well yeah we also just don't have
moving well yeah we also just don't have
good enough artwork have you ever played
good enough artwork have you ever played
Dota or League of
Legends e
so cool that they have this in a popup
so cool that they have this in a popup
and it works like
this okay where's the camera in
this okay where's the camera in
it right
it right
here yeah wait do you have both minions
here yeah wait do you have both minions
and heroes oh yeah yeah we have creep
and heroes oh yeah yeah we have creep
waves we've got five unique Heroes so to
waves we've got five unique Heroes so to
mirror match 5v5 and we have uh
mirror match 5v5 and we have uh
neutrals last time I played doas four
neutrals last time I played doas four
years ago I was 16 got yelled at by
years ago I was 16 got yelled at by
Chinese for two Irish players that's
Chinese for two Irish players that's
what you call Welcome to the game right
what you call Welcome to the game right
that's just
welcome you ever played an MMO you'll
welcome you ever played an MMO you'll
get flamed way worse it'll make all the
get flamed way worse it'll make all the
the mobile players look like just great
the mobile players look like just great
people
hey everyone on YouTube looks like the
hey everyone on YouTube looks like the
stream's warmed up nicely
welcome uh that paste okay we were doing
welcome uh that paste okay we were doing
this only ever see Russians on DotA
like
like
this don't like these
spaces okay so we made the camera here
spaces okay so we made the camera here
and then the target Vector is it's zero
right and then the offset is not
right and then the offset is not
set rotation zero Zoom one
yeah so we'll have to figure out where
yeah so we'll have to figure out where
offset is getting messed
with this was the one thing that I used
with this was the one thing that I used
the python style API for with RB because
the python style API for with RB because
um ffi is really
obnoxious and uh in Python if you want
obnoxious and uh in Python if you want
to do camera directly you have you see
to do camera directly you have you see
the cffi [ __ ]
the cffi [ __ ]
it's not
fun I see last
click
click
oops oh set no paste that's what's going
on
on
okay and uh I also don't like this Malik
okay and uh I also don't like this Malik
where is this before I get burned by
where is this before I get burned by
this don't Malik stuff use
this don't Malik stuff use
C zero is the memory for
you why use Malik when you can cic
okay so we don't need this C data numpy
okay so we don't need this C data numpy
[ __ ] uh and now this renderer thing
[ __ ] uh and now this renderer thing
is the function that we need to Port so
is the function that we need to Port so
we're just going to take this entire
we're just going to take this entire
blob of
code right
code right
here we're going to put it up
here we're going to put it up
here and then we're going going to
here and then we're going going to
unindent it and we're just going to
unindent it and we're just going to
start porting like one: one python to
start porting like one: one python to
C and it's like a massive function that
C and it's like a massive function that
we're going to have to clean up but this
we're going to have to clean up but this
is what we're starting
is what we're starting
with so
with so
void
void
render map render
render map render
MOBA and I'm sure that we'll need this
MOBA and I'm sure that we'll need this
signature so I'll leave it up
here we don't need any of these
here we don't need any of these
my player equal entities of human
player which
is we'll just pound Define for now I
think ler to be
think ler to be
zero this will be a
to-do and I believe this is going to be
to-do and I believe this is going to be
entity
entity
star my player is going to be entity is
star my player is going to be entity is
of human player like
of human player like
this uh tile
size this is an
size this is an
INT pile
size and we have all this stuff here so
a y = 0 xal 0 I don't even know why
a y = 0 xal 0 I don't even know why
we're defining these here but uh we're
we're defining these here but uh we're
just going to Port one to one brain dead
just going to Port one to one brain dead
for now skill Target
Heroes
so frames
is f frames
12 or frame zer this is the number of uh
12 or frame zer this is the number of uh
frames per tick which is at the moment
frames per tick which is at the moment
12 frames for every game update because
12 frames for every game update because
it ticks
at is that
at is that
wrong no it takes five times per second
wrong no it takes five times per second
so 5 * 12 is
60 RL get screen with uh why do I think
60 RL get screen with uh why do I think
that that's not the right
that that's not the right
signature get screen because it's not
signature get screen because it's not
the right
signature okay so we have set the width
signature okay so we have set the width
and the height so this is now
and the height so this is now
resizable uh we have float tick Frack
resizable uh we have float tick Frack
going to be
going to be
zero this doesn't need to be defined up
zero this doesn't need to be defined up
here we're in C we can do like this
here we're in C we can do like this
float tick
float tick
Frack oops float tick Frack frame over
Frack oops float tick Frack frame over
frames and then we we
frames and then we we
do Lo main R it's going to be R last
do Lo main R it's going to be R last
y tick Frack
y tick Frack
of my player y minus my player last y
of my player y minus my player last y
okay so this is this is us doing
okay so this is this is us doing
animations manually um because the game
animations manually um because the game
only updates five times per second and
only updates five times per second and
then we smooth the animation so like if
then we smooth the animation so like if
you're moving in a certain direction
you're moving in a certain direction
we'll like Smooth it so that it looks
we'll like Smooth it so that it looks
like uh you're moving cleanly even
like uh you're moving cleanly even
though it's only updating in chunks of
though it's only updating in chunks of
uh 200
uh 200
milliseconds so this will make it
milliseconds so this will make it
cleaner and then we do to main R Shader
cleaner and then we do to main R Shader
main C Shader yeah these things will
main C Shader yeah these things will
just Auto Port pretty
just Auto Port pretty
much and we'll do renderer camera Target
much and we'll do renderer camera Target
Y and
Y and
X this is not a valid cast we also don't
X this is not a valid cast we also don't
need to do a valid cast uh I
need to do a valid cast uh I
believe because c will do it for us so
believe because c will do it for us so
ironically this becomes easier than in
ironically this becomes easier than in
Python I think is pretty
Python I think is pretty
funny and
then F main r f main
then F main r f main
c f
c f
f and then we do main
f and then we do main
R equals F main
R equals F main
R and then this will AutoCast for us
R and then this will AutoCast for us
and then we have rmin R Max so we have
and then we have rmin R Max so we have
in
in
rmin going be like
this so now we ported the array
bounds and then we have back to pause
bounds and then we have back to pause
get mouse
get mouse
position Mouse
position Mouse
X Y then we have int
this is actually just so much
easier and like this is just
easier and like this is just
automatically going to be fast as well
automatically going to be fast as well
it's just going to automatically be at
it's just going to automatically be at
least 10 times faster than the client
least 10 times faster than the client
was
before literally zero effort
yep I don't want to save this as a v 2
yep I don't want to save this as a v 2
in the stru because it's unnecessary
in the stru because it's unnecessary
know why use a v two when a couple slops
know why use a v two when a couple slops
will
suffice um
now now I have to consider this
now I have to consider
this I think what I do is I check for
this I think what I do is I check for
negative
negative
one is this a
one is this a
float yeah it is a float but I think I
float yeah it is a float but I think I
can still use negative one
renderer ah look it literally
renderer ah look it literally
understands what I'm doing
understands what I'm doing
here yeah
if then what we do is oh
actually that is kind of a nice thing
actually that is kind of a nice thing
that I could do with the vector
I don't want to have to allocate another
I don't want to have to allocate another
a new vector and stuff I think this is
a new vector and stuff I think this is
fine like
this we'll leave a little Todo
this we'll leave a little Todo
there okay so in D
there okay so in D
X I think this is
X I think this is
float D
float D
X Y so we have all all
these then we
these then we
rescale
um
um
mag s root
F
F
fine if mag is greater than one then
fine if mag is greater than one then
basically the exact same code
basically the exact same code
right we do if this we know the click
now we do a y is a y defined up
now we do a y is a y defined up
here it
is think you can find some more people
is think you can find some more people
who might be interested in lowlevel deep
who might be interested in lowlevel deep
learning in geohot community yeah I've
learning in geohot community yeah I've
got to thank the guy honestly because uh
got to thank the guy honestly because uh
he starred puffer lib uh pretty early on
he starred puffer lib uh pretty early on
in development and we got like 150 Stars
in development and we got like 150 Stars
overnight on the
project I'm hoping eventually we'll be
project I'm hoping eventually we'll be
able to do something with like uh puffer
able to do something with like uh puffer
lib plus tiny boxes or something but
lib plus tiny boxes or something but
right now like we would have to get
right now like we would have to get
multi-gpu stuff working in RL and the
multi-gpu stuff working in RL and the
whole stack is so cursed that first
whole stack is so cursed that first
we're getting like really really good
we're getting like really really good
single GPU demos running um and then
single GPU demos running um and then
we'll go to multi GPU like there's no
we'll go to multi GPU like there's no
point in doing multi GPU when the whole
point in doing multi GPU when the whole
rest of the field is sat at like 5% GPU
rest of the field is sat at like 5% GPU
utilization in RL it's pathetic
else
zero made
this Exit Zero
oh this is not a this is not a thing
oh this is not a this is not a thing
though you can't just type Exit Zero
right
right
and this should be an INT instead of a
and this should be an INT instead of a
void this should be an INT and it should
void this should be an INT and it should
actually return one not negative
actually return one not negative
one because in a c for whatever reason
one because in a c for whatever reason
this is an error code
okay so now we don't have to free it's
okay so now we don't have to free it's
the responsibility the caller to
free that's a pretty
free that's a pretty
easy translation right there these are
easy translation right there these are
already defined up top so we should be
already defined up top so we should be
good uh and now this action thing here
good uh and now this action thing here
is well this is screwy right
I think this should be
n this is where you're supposed to do
n this is where you're supposed to do
player
control this is where you're supposed to
control this is where you're supposed to
do player control
okay for now we'll do it this
okay for now we'll do it this
way we have envin here we do right it's
way we have envin here we do right it's
defined up
defined up
top yeah so this is going to be en
top yeah so this is going to be en
entities human player
oh no it's n of actions
right
right
yeah so we're just going to put all of
yeah so we're just going to put all of
these things that you've selected into
these things that you've selected into
the environment's action buffer directly
the environment's action buffer directly
so now you are able to control the
player and then we do begin
player and then we do begin
drawing clear back
background is this color a zero yes it
is and then we
is and then we
do begin Shader
do begin Shader
mode your Shader we don't need these
mode your Shader we don't need these
prints see all this garbage
prints see all this garbage
here camera X
pointer main C Shader what the hell
main C
main C
Shader
Shader
oh well this
is all the way up there for some reason
is all the way up there for some reason
right doesn't need to be all the way up
right doesn't need to be all the way up
there unless is it saving a loop or
there unless is it saving a loop or
something by putting it up
something by putting it up
there it's not even saving a
there it's not even saving a
loop putting it up there
yeah oops let's just put it down here
yeah oops let's just put it down here
closer to where it
belongs um float
belongs um float
star camera X pointer I don't understand
star camera X pointer I don't understand
what the hell this is why we're giving
what the hell this is why we're giving
it a pointer to a float for some
reason and main R
Shader this is a local variable I don't
Shader this is a local variable I don't
understand this
whatsoever
whatsoever
Soo isn't this a
Soo isn't this a
local so I don't understand what this is
doing uh import time time is not what we
doing uh import time time is not what we
want
want
so include time. H time
okay let's do
okay let's do
float Sher time is time of
float Sher time is time of
null we have Shader time
null we have Shader time
pointer okay and now we can do set
Shader renderer Shader renderer
trater camera
trater camera
X camera X
X camera X
pointer uniform float and this is not RL
pointer uniform float and this is not RL
because that's it's
because that's it's
C
okay now we do RL or Draw
okay now we do RL or Draw
texture
texture
white and then we we do
white and then we we do
end Shader mode and I think I'll do this
end Shader mode and I think I'll do this
in one big block right here so this is
in one big block right here so this is
the
Shader
boom so this is the I believe this is
boom so this is the I believe this is
the Shader that does
um main like environment
Gator there's another one after I
believe in mode 2D render a camera this
believe in mode 2D render a camera this
is all common until we delete
is all common until we delete
it and then we'll have to do these Loops
it and then we'll have to do these Loops
I'm use the restroom again real quick
I'm use the restroom again real quick
and uh then we'll start on
that
e e
folks if you haven't seen the um the new
folks if you haven't seen the um the new
YouTube video I suggest watching it at
YouTube video I suggest watching it at
some point it's um pretty high effort
some point it's um pretty high effort
high production video and it's me going
high production video and it's me going
through the whole reinforcement learning
through the whole reinforcement learning
stack kind of outlining where I see the
stack kind of outlining where I see the
field going what puffer is going to do
field going what puffer is going to do
about it and how the whole next wave of
about it and how the whole next wave of
progress is going to be made that's on
progress is going to be made that's on
YouTube RL
Iceberg and yep as bet says star the
Iceberg and yep as bet says star the
puffer got to feed him he eats
puffer got to feed him he eats
Stars helps me out a
Stars helps me out a
ton welcome bet how's it
going our res
proelite the video was deck
what I hope it's doing
what I hope it's doing
well it's done pretty well on Twitter so
far speaking a
witch yeah look at
that decent I hope it's better than
that decent I hope it's better than
decent we've got 20K views on it on
decent we've got 20K views on it on
Twitter
Twitter
240 and
uh
uh
oops I forgot to reply to a thing
if you watched it on 1.5x there's no way
if you watched it on 1.5x there's no way
you're following it bet it's
you're following it bet it's
dense you
nutcase
nutcase
H I will show you check this out we've
H I will show you check this out we've
got from 881
got from 881
yesterday
yesterday
950 so it's done pretty well for the
950 so it's done pretty well for the
GitHub
that video has several stuff like I
that video has several stuff like I
guarantee you there's not a single
guarantee you there's not a single
person watching that video who is not
person watching that video who is not
learning at least
learning at least
something I mean I compressed like a
something I mean I compressed like a
whole overview of the entire stack into
whole overview of the entire stack into
minutes
what yeah the RL
Iceberg didn't understand aov it saw
Iceberg didn't understand aov it saw
graphs go up and good enough for me
graphs go up and good enough for me
welcome South resident artist in here
welcome South resident artist in here
we're getting this thing built so it'll
we're getting this thing built so it'll
run on the web right now I'm porting
run on the web right now I'm porting
this right here this is the client that
this right here this is the client that
I'm porting no surprises in there
I'm porting no surprises in there
seriously I mean maybe you've heard me
seriously I mean maybe you've heard me
Yap about this stuff plenty but I swear
Yap about this stuff plenty but I swear
you can be a world expert in RL and
you can be a world expert in RL and
there will be stuff there that you were
there will be stuff there that you were
not aware
of there's a lot of stuff in
that reminds me of like Elon Musk
that reminds me of like Elon Musk
posting that he was watching The Iliad
posting that he was watching The Iliad
at like 1.25 or 1.5 or whatever like
at like 1.25 or 1.5 or whatever like
what what are you doing
all right
all right
so yeah this is a slight
so yeah this is a slight
issue this is a dynamic length
issue this is a dynamic length
thing PRS to
submit okay so I have to figure out how
submit okay so I have to figure out how
to do this
um I need didn't know how many they're
um I need didn't know how many they're
going to
going to
be right
let's just
let's just
make should I just make a large buffer
make should I just make a large buffer
to begin
with thousand steps to a gabillion stack
with thousand steps to a gabillion stack
yeah gab billion
so this is one of the obnoxious
so this is one of the obnoxious
things this is one of the very few
things this is one of the very few
obnoxious things I have to get this
obnoxious things I have to get this
Dynamic list I have to do like a static
Dynamic list I have to do like a static
thing here I'll show you what I'm going
thing here I'll show you what I'm going
to do with this one second environment
to do with this one second environment
busted mind light speed so I'll what I
busted mind light speed so I'll what I
want to do with this I realized that I
want to do with this I realized that I
actually I own the domain puffer Dogg in
actually I own the domain puffer Dogg in
addition to
addition to
puffer so I think what we're going to do
puffer so I think what we're going to do
is we're going to make like a games page
is we're going to make like a games page
that's going to have all the different
that's going to have all the different
simulators that have been ported to see
simulators that have been ported to see
and uh you're just going to be able to
and uh you're just going to be able to
play them online and that page will just
play them online and that page will just
get
get
larger that's going to be the
larger that's going to be the
idea it really shouldn't take that long
idea it really shouldn't take that long
to Port the existing stuff that I have
to Port the existing stuff that I have
to see so we can do that and then uh you
to see so we can do that and then uh you
know start deving more stuff
know start deving more stuff
fast should be
good so here's what we're going to do in
good so here's what we're going to do in
the meantime I'm going to allocate
the meantime I'm going to allocate
preallocate at
least how many tiles could this possibly
least how many tiles could this possibly
be let's
be let's
say uh let's say that you have uh
3840 30
3840 30
840 32
840 32
120 we'll just do 128 time 128
and I think it's entity
star or just in
star or just in
Star hang on a second I just have to
Star hang on a second I just have to
figure out how I'm recording this
data
data
uh PID YX okay so all I need is I need
uh PID YX okay so all I need is I need
the PID so that's not bad at all then
the PID so that's not bad at all then
what we're going to do is we're going to
what we're going to do is we're going to
add to the renderer and this is a little
add to the renderer and this is a little
bit janky but bear with me here we're
bit janky but bear with me here we're
going to add
going to add
int
um render
entities 128 *
128 okay and then what we're going to do
128 okay and then what we're going to do
here is we're going to do int
here is we're going to do int
render idx it's going to be zero
render idx it's going to be zero
and we'll convert these Loops so
and we'll convert these Loops so
for y is going to go from R Min to R Max
for y is going to go from R Min to R Max
then we'll do X from C Min to C
then we'll do X from C Min to C
Max and we'll just do if this is a
Max and we'll just do if this is a
balance
check uh this is a little bit different
check uh this is a little bit different
from the renderer height this needs to
be this should be
be this should be
n height I
believe does this even
believe does this even
have I don't even know if this has
have I don't even know if this has
MOA with height I think it's hardcoded
MOA with height I think it's hardcoded
to
128 we'll just do this for now
and this is a
and this is a
continue then we do in pile it's going
continue then we do in pile it's going
to be grid actually it's not an INT
to be grid actually it's not an INT
right it's an unsigned Char tile which
right it's an unsigned Char tile which
is going to be M grid
is going to be M grid
YX then we'll do if tiles empty
YX then we'll do if tiles empty
continue and then we have
continue and then we have
inid we IDs YX uh you're forgetting here
inid we IDs YX uh you're forgetting here
that I need the map address so this has
that I need the map address so this has
got to be int Adder
got to be int Adder
map
map
offset right yeah yeah yeah so you can't
offset right yeah yeah yeah so you can't
do this is not a 2d array it's a 1D
do this is not a 2d array it's a 1D
array so I have this convenient function
array so I have this convenient function
to get myself the indices so this is now
to get myself the indices so this is now
going to be
adder adder same
address okay and now we'll do if it is
address okay and now we'll do if it is
ne1 you draw a rectangle
I don't know where got this continue
from this is red like
from this is red like
this
this
okay and then get rid of
okay and then get rid of
this and now instead of render entities
this and now instead of render entities
append this is the key thing here we do
append this is the key thing here we do
uh
uh
renderer render entities of render index
renderer render entities of render index
is equal to PID
is equal to PID
and we do render idx or where is it
render no render
render no render
idx ID
idx ID
x++ so what this is going to do now is
x++ so what this is going to do now is
we have this giant flat buffer that we
we have this giant flat buffer that we
know is big enough for whatever we need
know is big enough for whatever we need
so instead of having a dynamic buffer
so instead of having a dynamic buffer
we're just going to fill this thing up
we're just going to fill this thing up
and then we're going to need to tell you
and then we're going to need to tell you
uh we're going to need to tell
uh we're going to need to tell
it uh the very last one which is going
it uh the very last one which is going
to have to be
to have to be
so we close these Loops
so we close these Loops
whoops we close these
whoops we close these
loops and yes it actually gets it right
loops and yes it actually gets it right
here so this has been incremented and
here so this has been incremented and
then the last one gets set to negative
then the last one gets set to negative
one so this is the Sentinel that tells
one so this is the Sentinel that tells
us when to
us when to
stop ah welcome even more YouTube
folks we are currently
porting this game which is a high
porting this game which is a high
performance Simulator for r enforcement
performance Simulator for r enforcement
learning runs a million steps per second
learning runs a million steps per second
reporting this to run a native sea so
reporting this to run a native sea so
that I can put it on a browser uh and
that I can put it on a browser uh and
then you all can just play it and see
then you all can just play it and see
whether uh there are any bugs in it
whether uh there are any bugs in it
stuff like that and soon we'll be able
stuff like that and soon we'll be able
to have you playing against the RL
to have you playing against the RL
agents in the browser like you can with
agents in the browser like you can with
the other snake demo at the
the other snake demo at the
moment this is of course a much more
moment this is of course a much more
complicated
complicated
project basically miniature version of
project basically miniature version of
Dota or League of
Dota or League of
Legends with those
Legends with those
and it's going to be about 2,000 lines
and it's going to be about 2,000 lines
of C for the whole thing really not that
of C for the whole thing really not that
bad for this amount of
complexity okay
so oh this is actually even easier we
so oh this is actually even easier we
don't even need the Sentinel value here
don't even need the Sentinel value here
I don't
I don't
think yeah we actually don't even need
think yeah we actually don't even need
this this Sentinel here because since
this this Sentinel here because since
this is in one function
this is in one function
we can just literally
we can just literally
do less than render idx i++ yeah yeah
do less than render idx i++ yeah yeah
yeah cuz we're not even going to have to
yeah cuz we're not even going to have to
read and check the
Sentinel okay so we do entity star
Sentinel okay so we do entity star
entity
okay let's let's back up int hid is
okay let's let's back up int hid is
going to be render render entities of I
going to be render render entities of I
and then we're going to
do if pit is negative 1 you continue and
do if pit is negative 1 you continue and
then we'll do entity ENT uh we're going
then we'll do entity ENT uh we're going
to make an entity which is going to be
to make an entity which is going to be
containing
containing
the thing that we just
the thing that we just
saved and
now we can do check the target pit
now we can do check the target pit
continue and now this is where we do
continue and now this is where we do
targeting right
yeah Lo entity
yeah Lo entity
X let's do it correct so we have last X
X let's do it correct so we have last X
last X take Frack yeah all we had to do
last X take Frack yeah all we had to do
is change here the pointers to uh the
is change here the pointers to uh the
dot notation to
dot notation to
pointers this one's
pointers this one's
fine uh Target is this the
fine uh Target is this the
same no we have to declare this and
same no we have to declare this and
then let's actually
then let's actually
do in Target PID let's just cach
this and then we'll
do it entity star Target Target PID
do it entity star Target Target PID
that's cleaner and now we have these two
that's cleaner and now we have these two
lines are basically the same as
above I like this a little better this
above I like this a little better this
is
is
clean and now this whole block is very
clean and now this whole block is very
easy to Port I believe except it's a
easy to Port I believe except it's a
little
different because we have to do
color base right and then color accent
color base right and then color accent
like this and then we do if he is zero
like this and then we do if he is zero
base is going to be
base is going to be
red and the accent can
red and the accent can
be this is not just red though this is
be this is not just red though this is
going to
be we'll do like this
be we'll do like this
right yeah and we'll make the custom
right yeah and we'll make the custom
color and then this should give us
color and then this should give us
yeah this one this now should be able to
yeah this one this now should be able to
auto complete
right yes this auto complete is
right yes this auto complete is
correct now we have our colors for our
correct now we have our colors for our
different cases
different cases
here in Target fix we don't need that
here in Target fix we don't need that
Awkward cast anymore uh we also don't
Awkward cast anymore uh we also don't
need this weird floor division
notation maybe someday we'll add an ELO
notation maybe someday we'll add an ELO
system to match against similarly
system to match against similarly
skilled bottles already done my friend
skilled bottles already done my friend
already done let me show you how cool
already done let me show you how cool
this
is you want to see some uh some really
is you want to see some uh some really
cool research stuff over
cool research stuff over
here so we have here all of the
here so we have here all of the
experiments that we're
running yeah this is pretty sweet I'll
running yeah this is pretty sweet I'll
show you I just have to find the
show you I just have to find the
sweep is it maybe this one
it takes forever to load because this
it takes forever to load because this
page is not written in
page is not written in
C uh this is the wrong one it's one
below metrics on metrics yeah so okay
below metrics on metrics yeah so okay
here we have 500 different experiments
here we have 500 different experiments
that have been trained so 500 different
that have been trained so 500 different
agents that have been trained on this
agents that have been trained on this
MOA you can see we have tons of stats
MOA you can see we have tons of stats
like damage dealt for each class levels
like damage dealt for each class levels
gained stuff like
gained stuff like
that and here we have this massive ELO
that and here we have this massive ELO
overtime chart so you can see as we run
overtime chart so you can see as we run
more experiments what happens is that
more experiments what happens is that
you train the agent in a mirror match
you train the agent in a mirror match
versus itself so it's playing Just
versus itself so it's playing Just
against itself it's like you're playing
against itself it's like you're playing
on chess and you just split the chess
on chess and you just split the chess
board around and like you take both
board around and like you take both
moves or whatever right but this is how
moves or whatever right but this is how
it's trained but then when we go to
it's trained but then when we go to
evaluate it we sample some of the agents
evaluate it we sample some of the agents
from previous experiments and we
from previous experiments and we
calculate ELO based on win rate against
calculate ELO based on win rate against
all these different experiments
all these different experiments
so then we can see over these 500
so then we can see over these 500
different experiments the ELO goes up
different experiments the ELO goes up
and up and up over
and up and up over
time that's pretty cool
time that's pretty cool
right and it's like a couple hundred
right and it's like a couple hundred
lines of code to do this this was the
lines of code to do this this was the
main thing that they did in open ai5 and
main thing that they did in open ai5 and
uh we can kind of just do I'll be at a
uh we can kind of just do I'll be at a
much smaller scale but we can just do
much smaller scale but we can just do
that and we get all these different
that and we get all these different
experimental results and we lag the heck
experimental results and we lag the heck
out of wand B Because JavaScript is
out of wand B Because JavaScript is
awful um and yeah here you
awful um and yeah here you
go so the cool thing is like as soon as
go so the cool thing is like as soon as
we have this
we have this
ported uh we'll see oops not neural MMO
ported uh we'll see oops not neural MMO
that's my other thing as soon as we have
that's my other thing as soon as we have
this ported like you see this button up
this ported like you see this button up
top on the main
top on the main
website well this is a not JavaScript
website well this is a not JavaScript
very fast snake game that I can just
very fast snake game that I can just
play I'm controlling this yellow snake
play I'm controlling this yellow snake
now and uh you know if I take my hands
now and uh you know if I take my hands
off then it will take over and it's not
off then it will take over and it's not
very smart but it is pretty good at
very smart but it is pretty good at
mechanics
mechanics
right you can see it's pretty good at
right you can see it's pretty good at
doing the mechanics and now it's going
doing the mechanics and now it's going
to get itself into a bad situation so I
to get itself into a bad situation so I
can just like you know get it out of
can just like you know get it out of
that situation and I'm bad at mechanics
that situation and I'm bad at mechanics
so I messed up but yeah we're going to
so I messed up but yeah we're going to
be able to play uh we're going to be
be able to play uh we're going to be
able to play versus the agent in browser
able to play versus the agent in browser
which will be
which will be
cool and if anybody wants to help out
cool and if anybody wants to help out
with you know making more Ms and stuff
with you know making more Ms and stuff
to do all this stuff stuff with it's not
to do all this stuff stuff with it's not
that hard like yeah you see me editing
that hard like yeah you see me editing
two 2,000 lines worth of C here but like
two 2,000 lines worth of C here but like
if you go look at the snake
if you go look at the snake
code at least the original scon before
code at least the original scon before
it went into
it went into
C uh it's really not that bad and we
C uh it's really not that bad and we
have several people around that are
have several people around that are
don't have RL experience prior to this
don't have RL experience prior to this
that are able to
that are able to
contribute because here the snake I
contribute because here the snake I
always go to the snake demo just to show
always go to the snake demo just to show
how simp simple it is um no not this one
how simp simple it is um no not this one
SE snake
SE snake
yeah so this is the entire
yeah so this is the entire
implementation it's 200 lines of code
implementation it's 200 lines of code
for the snake implementation in
for the snake implementation in
syon and it reads like brain dead python
syon and it reads like brain dead python
like this literally if you just read
like this literally if you just read
through this it looks like brain dead
through this it looks like brain dead
python it's just write the python in the
python it's just write the python in the
stupidest way possible and this runs it
stupidest way possible and this runs it
like 10 million steps per second per CPU
like 10 million steps per second per CPU
core so it doesn't have to be that
hard and we are definitely looking for
hard and we are definitely looking for
more environments for perer
more environments for perer
because we can run all sorts of cool RL
because we can run all sorts of cool RL
on
them brain dead million
them brain dead million
FPS yeah no not a million the mooba runs
FPS yeah no not a million the mooba runs
at a million the snake M runs at like 10
at a million the snake M runs at like 10
million
just don't call python yeah
exactly but it is really brain dead like
exactly but it is really brain dead like
if you look at the code I'm not doing
if you look at the code I'm not doing
anything smart it's the opposite I'm
anything smart it's the opposite I'm
doing everything as dumb as humanly
doing everything as dumb as humanly
possible right like I don't have any
possible right like I don't have any
fancy data structures I don't have any
fancy data structures I don't have any
fancy algorithms I don't have any like
fancy algorithms I don't have any like
fancy code structure with objects this
fancy code structure with objects this
and that it's just like really dumb
and that it's just like really dumb
simple procedural code where you just
simple procedural code where you just
write out all the loops and write out
write out all the loops and write out
all the conditionals that's all it
is it's really easy to make that type of
is it's really easy to make that type of
code
fast I swear we've just been nerd
fast I swear we've just been nerd
sniping ourselves on like software
sniping ourselves on like software
development for the past decade it's not
development for the past decade it's not
hard to write stuff that's this fast
yeah assembly is not easy to write
yeah assembly is not easy to write
though bet C on the other hand is not
though bet C on the other hand is not
bad at
all like actually the C here is not any
all like actually the C here is not any
harder to write than the
harder to write than the
scon I let people I tell people hey you
scon I let people I tell people hey you
can just write the scyon because people
can just write the scyon because people
go like well I don't want to have to
go like well I don't want to have to
write in C that sounds crazy it's like
write in C that sounds crazy it's like
okay you can just write python that
okay you can just write python that
looks you know scon that looks exactly
looks you know scon that looks exactly
like Python and then once you do that
like Python and then once you do that
for a bit then you realize like wait a
for a bit then you realize like wait a
second this is basically just C it's
second this is basically just C it's
like yeah it's like wait but C is
like yeah it's like wait but C is
supposed to be hard no no it's not
supposed to be hard no no it's not
you've been lied
to is that
to is that
easy now I will say C is incredibly hard
easy now I will say C is incredibly hard
if you don't know that there is no dress
if you don't know that there is no dress
sanitizer all right that's the one thing
sanitizer all right that's the one thing
there are like some debug tools that
there are like some debug tools that
tell you exactly where you're like seg
tell you exactly where you're like seg
falting and leaking memory if you don't
falting and leaking memory if you don't
know that those exist then yeah it's
miserable but they do exist
so don't CL don't skip lesson three of
so don't CL don't skip lesson three of
your learn c tutorial well Stanford
your learn c tutorial well Stanford
managed to skip that one entirely in
managed to skip that one entirely in
their systems courses so
I never knew this
existed at Stanford you're smart enough
existed at Stanford you're smart enough
to figure it out no I I got to Stanford
to figure it out no I I got to Stanford
by being way too stubborn to like ask
by being way too stubborn to like ask
for help and like not do everything
for help and like not do everything
myself so I would just like suffer
myself so I would just like suffer
through the assignments for 40 hours and
through the assignments for 40 hours and
be really mad and not learn
be really mad and not learn
anything that's what happened well
anything that's what happened well
that's how I did
stuff this RL here needs this AR needs
stuff this RL here needs this AR needs
to go
away best difference can't be like
I don't know they actually ruined like
I don't know they actually ruined like
low-l programming for me it's taking me
low-l programming for me it's taking me
a decade to get back to it almost but
a decade to get back to it almost but
it's so much easier than it was made out
it's so much easier than it was made out
to be it's so much
easier and now I'm just generally having
easier and now I'm just generally having
a good time you know
um okay so Source wck here needs to be
I think this will probably need a vector
I think this will probably need a vector
type or
something okay so we do begin Shader
something okay so we do begin Shader
mode and then we
mode and then we
do raw texture Pro
right and then
right and then
we in Shader
mode do I like
mode do I like
that what if I do it without
the what if I do it like
the what if I do it like
this that looks worse
we'll leave
that
mobs
mobs
what why the heck did I do it this
what why the heck did I do it this
way oh because I wanted one draw call
way oh because I wanted one draw call
yeah we don't need to care about that
there's no push back this isn't
C++
oops and that's literally
it so now this is here draw uh status
it so now this is here draw uh status
icons and then this
one this block here
is a
is a
Blom I don't need that we're
good now we have this draw circle thing
good now we have this draw circle thing
draw
Circle and mode
Circle and mode
2D now we do the
2D now we do the
HUD already all the way to the
HUD already all the way to the
HUD at least on the initial
portd star player and entity is human
portd star player and entity is human
player then we do
player then we do
color off color it's going to be this
then color
then color
on
color yeah we just do a turn
AR very sad to inform that Jax is also
AR very sad to inform that Jax is also
not going to make it
not going to make it
yeah I do not like Jack I really
don't like think about it right just
don't like think about it right just
think about it if you were going to
think about it if you were going to
implement this
implement this
mooba would you rather get to write it
mooba would you rather get to write it
in Python but you have to write the
in Python but you have to write the
entire logic as array operations you
entire logic as array operations you
can't use like normal conditionals and
can't use like normal conditionals and
loops and stuff and you have to think
loops and stuff and you have to think
about branching paths because the GPU
about branching paths because the GPU
executes every single br aning path of
executes every single br aning path of
logic or just write it in like brain
logic or just write it in like brain
dead simple
c
c
yeah like this is not the way to do
yeah like this is not the way to do
things right like you're not going to
things right like you're not going to
magically run everything on the GPU it's
magically run everything on the GPU it's
not just well we should run stuff on the
not just well we should run stuff on the
GPU because gpus are faster than CPUs no
GPU because gpus are faster than CPUs no
gpus are faster at very specific
gpus are faster at very specific
operations CPUs are what you use to run
operations CPUs are what you use to run
general purpose code which is what a
general purpose code which is what a
simulator is
so Jax has some Niche applications I
so Jax has some Niche applications I
cover this in my video
right I don't know if I mentioned Jacks
right I don't know if I mentioned Jacks
explicitly I do say GPU environments
explicitly I do say GPU environments
though which is basically
Jacks I also just generally think that
Jacks I also just generally think that
their libraries are
their libraries are
garbage it's like it reminds me of the
garbage it's like it reminds me of the
node ecosystem it's just
disgusting you present the opinions
disgusting you present the opinions
neutral the options neutrally I don't
neutral the options neutrally I don't
have to present the options neutrally
have to present the options neutrally
I'm allowed to be
opinionated you doing the video if you
opinionated you doing the video if you
think that that's neutrally then you can
think that that's neutrally then you can
say so but I mean there was no I was
say so but I mean there was no I was
under no obligation or you know any
under no obligation or you know any
effort to be neutral about it right I'm
effort to be neutral about it right I'm
drawing on my own experience here
I feel remember clean Yeah clean R is
I feel remember clean Yeah clean R is
awesome that's what we use I mean
awesome that's what we use I mean
here where is
this so this thing is currently less
this so this thing is currently less
than 800 lines but if I go to like line
than 800 lines but if I go to like line
400ish okay this is already done the
400ish okay this is already done the
train Loop ends at before 400 and
train Loop ends at before 400 and
there's like an extra 100 line
there's like an extra 100 line
experience buffer so like roughly we'll
experience buffer so like roughly we'll
say 500ish lines in order to handle
say 500ish lines in order to handle
everything in RL ever pretty
everything in RL ever pretty
much and that's the full implementation
much and that's the full implementation
as well like look we're not importing a
as well like look we're not importing a
million million different things
million million different things
here so and then the rest is just
here so and then the rest is just
logging and stuff so yeah clean RL rocks
logging and stuff so yeah clean RL rocks
love clean RL
it needs a little bit of extra it needs
it needs a little bit of extra it needs
some extras to really be able to like do
some extras to really be able to like do
the type of stuff we're doing with
the type of stuff we're doing with
puffer but it's such a good thing to
puffer but it's such a good thing to
start off of and it's really really hard
start off of and it's really really hard
uh it was really hard for me to build it
uh it was really hard for me to build it
into like clean puff RL because you
into like clean puff RL because you
actually you have to give so much
actually you have to give so much
respect to the design of clean ARL it's
respect to the design of clean ARL it's
like oh well I can just add this extra
like oh well I can just add this extra
thing here no no you can't the whole
thing here no no you can't the whole
point is that it's really really simple
point is that it's really really simple
tightly coupled code um you have to be
tightly coupled code um you have to be
you have to be very careful not to like
you have to be very careful not to like
break the Simplicity of
it okay we replace these turn
it okay we replace these turn
Aras then we
Aras then we
do you cool down I think this is whoops
do you cool down I think this is whoops
VI cool
down and then draw a text like this and
down and then draw a text like this and
we do not
encode ah crap how do I do
this e
okay uh I don't like this at
all we're going to just punt on the
all we're going to just punt on the
cooldowns to start
with yeah we're going to just punt on
with yeah we're going to just punt on
the cool
the cool
Downs because we're going to have to do
Downs because we're going to have to do
some string stuff
and what do we
have
have
return
zero uh we return zero down here don't
we so that only took us a half
we so that only took us a half
hour PR of view of model training setup
hour PR of view of model training setup
Jack is
great is it better to be honest I don't
great is it better to be honest I don't
know if it is
know if it is
better I really don't know if it is
better I really don't know if it is
better have you read like Jack's Library
better have you read like Jack's Library
code it's really awful they have like
code it's really awful they have like
especially in RL they have just like
especially in RL they have just like
tons of nested function definitions it's
tons of nested function definitions it's
like really gross functional bro code
like really gross functional bro code
it's like people who think that like
it's like people who think that like
hcll is like the most easy to read thing
hcll is like the most easy to read thing
ever it's really not and it's not only
ever it's really not and it's not only
that it's like they did that but then
that it's like they did that but then
they wanted to put some Fang style
they wanted to put some Fang style
objectoriented stuff into that as well
objectoriented stuff into that as well
so it's just the worst parts of
so it's just the worst parts of
objectoriented and functional code mixed
objectoriented and functional code mixed
together it's God awful
it's like an impressively badly designed
it's like an impressively badly designed
and it's not even the core Jacks it's
and it's not even the core Jacks it's
the fact that like Jacks exist and then
the fact that like Jacks exist and then
you have all these third party like
you have all these third party like
flaks and whatever other uh learning
flaks and whatever other uh learning
things around it and they just none of
things around it and they just none of
them make any sense
uh we have to still Port this draw bars
uh we have to still Port this draw bars
function don't
function don't
we okay let's put this down at the
we okay let's put this down at the
bottom now we
bottom now we
do void draw bars
on
on
TRL good for learning nrl's
TRL good for learning nrl's
good what TR what T what are you saying
good what TR what T what are you saying
for TRL
oh
TLX
TLX
wait this ls's thing yeah yeah yeah this
wait this ls's thing yeah yeah yeah this
is Lewis's thing but this is not RL this
is Lewis's thing but this is not RL this
is
is
rhf yeah I know this is Lewis's thing
like it does reinforcement learning it's
like it does reinforcement learning it's
not just arbitrary Transformer RL it's
not just arbitrary Transformer RL it's
specifically for
language very very very different thing
language very very very different thing
very different set of problems
is open
CL I don't really understand many of
CL I don't really understand many of
your messages Jason
there Canan or do I have to
there Canan or do I have to
do we'll see
do
this we we have to punt on the draw
text and then this one
text and then this one
here is also this goes
here is also this goes
into here as well but
we get the rectangles regardless
right
okay and we close this
okay and we close this
here
here
lines which is probably about what it's
lines which is probably about what it's
going to end up being
there's going to be a [ __ ] ton of
there's going to be a [ __ ] ton of
debugging involved with this
debugging involved with this
[Music]
[Music]
um yeah so what we're going to do here
um yeah so what we're going to do here
and I see that more people are joining
and I see that more people are joining
stream
stream
so this is what we're trying to get
so this is what we're trying to get
ported from scon Toc so that we can run
ported from scon Toc so that we can run
it in the
it in the
browser and you all can play with it um
browser and you all can play with it um
I just did the initial Port it's like 3
I just did the initial Port it's like 3
400 lines of rib stuff um from Python
400 lines of rib stuff um from Python
original to see uh so I just did the
original to see uh so I just did the
original port and then we're probably
original port and then we're probably
going to do like a really tight Loop
going to do like a really tight Loop
debugging type thing um in just a moment
debugging type thing um in just a moment
here I'm going to go use the restro real
here I'm going to go use the restro real
quick and then we'll do that we'll be
quick and then we'll do that we'll be
right back
all
right oh
right oh
wow 14 a second ago on YouTube
welcome I'm going to show you the
welcome I'm going to show you the
um the tight little debugging Loop that
um the tight little debugging Loop that
we're going to have here
so I should probably move the puffer for
so I should probably move the puffer for
a
second
second
um we're compiling the main things
um we're compiling the main things
are we've got all warnings on I might
are we've got all warnings on I might
have to remove that
initially I might have to remove this
initially I might have to remove this
initially because this is just going to
initially because this is just going to
spam way too much stuff but I like
spam way too much stuff but I like
uninitialized misleading
uninitialized misleading
indentation um and F sanitizer dress is
indentation um and F sanitizer dress is
the really big
the really big
one and the nice thing about doing this
one and the nice thing about doing this
in Native C compared to scyon is our
in Native C compared to scyon is our
compile times are going to be so much
compile times are going to be so much
better
better
so that's our compile
so that's our compile
time and now I have it limited to three
time and now I have it limited to three
errors so I just get to start here and
errors so I just get to start here and
start debugging super quick
have you ever thought about going on the
have you ever thought about going on the
machine learning Street
machine learning Street
talk I don't know I actually don't know
talk I don't know I actually don't know
very
very
many like AI podcasts and stuff
I mean pretty much I'll talk about
I mean pretty much I'll talk about
whatever um if it gives me a chance
whatever um if it gives me a chance
to you know promote puffer and uh share
to you know promote puffer and uh share
some of this stuff the one thing I want
some of this stuff the one thing I want
to avoid is like I don't know what this
to avoid is like I don't know what this
this specific podcast but the like
this specific podcast but the like
random AI speculation like Ai and
random AI speculation like Ai and
Society speculation stuff I'm not doing
Society speculation stuff I'm not doing
that
but if it's Tech if it's just talking
but if it's Tech if it's just talking
Tech that's
good unknown type oops
um
okay this needs to
be this
be this
right do I have this in Tex wrong
here just Hadid ho okay that's legit
here just Hadid ho okay that's legit
that's
cool what is
this I see so
o see
o see
these yeah this is the type of stuff I'm
these yeah this is the type of stuff I'm
not going to
not going to
be this is really freaking irresponsible
be this is really freaking irresponsible
in my
in my
mind I mean this is literally the thing
mind I mean this is literally the thing
I pretty much said on stream if I do
I pretty much said on stream if I do
this please shoot me right I think I
this please shoot me right I think I
said that yesterday right
rlms
rlms
yeah so here's the thing I consider that
yeah so here's the thing I consider that
type of stuff incredibly
type of stuff incredibly
irresponsible because it's one thing for
irresponsible because it's one thing for
me to be hanging out on stream and just
me to be hanging out on stream and just
like speculating about random stuff this
like speculating about random stuff this
is a very casual setting it's another
is a very casual setting it's another
thing when you have like a well produced
thing when you have like a well produced
podcast that's getting a bunch of views
podcast that's getting a bunch of views
going to people that don't know any
going to people that don't know any
better taking this stuff seriously right
better taking this stuff seriously right
it's like oh MIT PhD says that AI is
it's like oh MIT PhD says that AI is
going to kill us all it's like no no AI
going to kill us all it's like no no AI
PhD wildly speculates may as well be
PhD wildly speculates may as well be
throwing a dart you know a dart at a
throwing a dart you know a dart at a
dart bird A Million Miles
Away it's like but like scientists can't
Away it's like but like scientists can't
assign a probability that AI is going to
assign a probability that AI is going to
kill all of us that's what makes it so
kill all of us that's what makes it so
dangerous it's like no I can't assign a
dangerous it's like no I can't assign a
probability that Nanobots are going to
probability that Nanobots are going to
kill us all either
right come
on other thing I can't do is remember
on other thing I can't do is remember
how the hell struct assignments work in
how the hell struct assignments work in
C when I'm doing them in line like this
where is this thing
where is this thing
oops 500
assment skeptical
xrk was with the AI snake oil guide
xrk was with the AI snake oil guide
debunking a bunch of stuff I see okay
debunking a bunch of stuff I see okay
that's better that I saw the title's
that's better that I saw the title's
kind of clickbait but you know you get
kind of clickbait but you know you get
forgiven for
forgiven for
that ah it's a cast right wait what
that makes no sense
this is what I was looking for I don't
this is what I was looking for I don't
like this syntax though to be
honest I really don't like that c
intact really
intact really
obnoxious how do I do this without
obnoxious how do I do this without
making this a total mess
we'll use the weird Syntax for
now wait this is just a
pointer damn it
we'll do this for now uh I will do this
we'll do this for now uh I will do this
under
protest I do this under protest let it
protest I do this under protest let it
be
known I'm sure I'm going to find a
known I'm sure I'm going to find a
better way of doing this and GPT is just
better way of doing this and GPT is just
dumb as
dumb as
always
always
but who do unshit ify
coding under
coding under
duress
duress
nah Library function mem
nah Library function mem
copy what how do I not have mem
copy then standard lib
wait
void okay so I mean I think this is just
void okay so I mean I think this is just
GPT being stupid this is this has to
GPT being stupid this is this has to
just be wrong
right error expected
right error expected
expression so this just need like a cast
expression so this just need like a cast
like is it the same as right here
also what is the um the type of this I
also what is the um the type of this I
might not even have to do this because I
might not even have to do this because I
think RB
has
raw these are colors or something
raw these are colors or something
right
UV done
UV done
UV draw texture Pro
rectangle
right so this should actually
right so this should actually
be let's just fix it here and then we'll
be let's just fix it here and then we'll
see if it carries
over yeah let's fix the easier case
first so there's dun
first so there's dun
UV uh there's no reason to not just make
UV uh there's no reason to not just make
this rectangle
this rectangle
DV like
this and then we'll just
do
do
renderer yeah and then you can cast like
renderer yeah and then you can cast like
this
right okay so we can actually see here
right okay so we can actually see here
that um now it is
happy so I think that this will be this
happy so I think that this will be this
is a
is a
color
color
color asset map wait no this is
UVS so it's actually
UVS so it's actually
rectangle 16 asset map right like
this so this is just wrong
oops
nope wait the first two are actually
nope wait the first two are actually
zero aren't
they wait did this get all 16 1 2 3
they wait did this get all 16 1 2 3
three
three
four now this is did not get all 16 this
four now this is did not get all 16 this
did something
screwy okay I don't trust the
llm don't trust it not mess up my
data doesn't take that long to just do
data doesn't take that long to just do
this I don't even type that fast doesn't
this I don't even type that fast doesn't
take that
long
long
okay rectangle asset map wrong
okay rectangle asset map wrong
syntax uh this should be
expected
expression am I stupid why did I just
expression am I stupid why did I just
set this to color this is
rectangle one two yeah I think it got it
rectangle one two yeah I think it got it
right this time those look to be the
right this time those look to be the
same size
I know that I did this
before color colors equals
let's just do it like
let's just do it like
this uh
re angle
what does this
do I'm just screwing up syntact
somewhere color
somewhere color
colors
yeah rackets go here
array type is not
assignable um I can technically copy it
right
right
no where the heck is M
Copy isn't it in uh
Copy isn't it in uh
where the heck is it it's in standard
where the heck is it it's in standard
it's in string what or standard
it's in string what or standard
IO I think standard IO
IO I think standard IO
right d
Force oh
Force oh
okay this take a
okay this take a
size yes it does
oops damn stupid garbage Noob
site is that actually in
site is that actually in
string huh well that got us past this
string huh well that got us past this
error now what do we have
load
texture error
texture error
assigning to texture 2D
star okay these don't need to be
star okay these don't need to be
pointers there's absolutely no reason
pointers there's absolutely no reason
for these to be pointers
not at
all color this needs a
cast
cast
cast
1652 we forgot some semicolons Maybe
1660 screen width
70 incompatible type yeah so this is
70 incompatible type yeah so this is
game
renderer good now we in it compiles
uh
what oh this binds tightly
wait
really I think it's just
really I think it's just
this
this
somehow somehow something screwed up
somehow somehow something screwed up
here
that's weird
no member name camera
okay fair point we need a camera here
Undeclared n is
Undeclared oh this is
Undeclared oh this is
renderer of course
and Screen width I don't know why that
and Screen width I don't know why that
this redid uh the same [ __ ] again
this redid uh the same [ __ ] again
like
this okay so now we're all the way down
this okay so now we're all the way down
to
here uh no module named camera and map
here uh no module named camera and map
render
render
what put it in the wrong one or
what put it in the wrong one or
something
something
camera map
camera map
renderer oh wait
renderer oh wait
map yeah this is game
renderer we have this as fman
Undeclared
Undeclared
identifier this is
int and then
is is key down
is is key down
1736 that's way down there that's nice
1736 that's way down there that's nice
we just have to fix some API calls that
we just have to fix some API calls that
ported
incorrectly we're going to get this
incorrectly we're going to get this
pretty soon at least we're going to get
pretty soon at least we're going to get
it compiling pretty soon we'll see how
it compiling pretty soon we'll see how
long it takes to debug runtime
long it takes to debug runtime
errors I'm hopeful that we can have this
errors I'm hopeful that we can have this
running something that looks like the
running something that looks like the
old client
old client
today I'm
hopeful it is already five
hopeful it is already five
I got such a late start today that's my
bad I'll try to work
late
um
um
what instar actions
wait I'm trying to remember how actions
wait I'm trying to remember how actions
works ah you see here I have this Jank
works ah you see here I have this Jank
cast
right just so I can use the um
right just so I can use the um
nicer
syntax okay nice we're all the way down
syntax okay nice we're all the way down
to here now I forgot some semicolons
apparently a lot of
apparently a lot of
semicolons holy a lot of
semicolons and now we're already
1801 what's wrong with
1801 what's wrong with
this uh this is the end map
this uh this is the end map
let's do map let's just Define map up
let's do map let's just Define map up
top CU I think we're going to use this a
lot yeah so like down here this is now
lot yeah so like down here this is now
just
just
map and now this is
map and now this is
map then this is M red
incompatible this is just m
map we're all the way down to here
now this is map grid
whoops
whoops
1807 this is also map heads
uh all the way 1855 that's
uh all the way 1855 that's
nice what do we have
nice what do we have
here too many
here too many
arguments expected four have six
really start pause end
really start pause end
pause thickness
pause thickness
color well shoot
two yeah there you go that's the API
two yeah there you go that's the API
oops 18 6

Kind: captions
Language: en
yeah
yeah
hi I have gotten so distracted today
hi I have gotten so distracted today
with meetings and Twitter and a variety
with meetings and Twitter and a variety
of things but now it is
of things but now it is
time to write some C
time to write some C
code uh almost I'm going to do a couple
code uh almost I'm going to do a couple
quick things
quick things
first and then what we're going to do is
first and then what we're going to do is
we're going to finish the render client
we're going to finish the render client
Inc which will be fun oops that is my
Inc which will be fun oops that is my
email let's not do
email let's not do
that couple quick announcements here
that couple quick announcements here
so this post has done pretty darn
so this post has done pretty darn
well uh this video here you can see it's
well uh this video here you can see it's
at 238 on Twitter so that's awesome I
at 238 on Twitter so that's awesome I
need to click this up by one yeah so
need to click this up by one yeah so
that's awesome um and on YouTube I
that's awesome um and on YouTube I
actually haven't checked yet
we're at 6:40 on
we're at 6:40 on
YouTube with some comments
well so this is doing I mean this is not
well so this is doing I mean this is not
blown up at all you know on YouTube
blown up at all you know on YouTube
we'll see if it does and the one other
we'll see if it does and the one other
thing I was very excited about
thing I was very excited about
today look at
today look at
this we're closing on a thousand
this we're closing on a thousand
stars this Spike from the video here
stars this Spike from the video here
so we'll see if we hit that this week
so we'll see if we hit that this week
that would be
that would be
amazing hey don't forget to feed the
amazing hey don't forget to feed the
puffer aside from that the breakout
puffer aside from that the breakout
sweep why is this so laggy um the
sweep why is this so laggy um the
breakout sweep here with the revised
breakout sweep here with the revised
carbs you can see we have 500 score on
carbs you can see we have 500 score on
breakout is pretty
breakout is pretty
awesome we're not going to be doing
awesome we're not going to be doing
anything with that today but it's good
anything with that today but it's good
to know that we have improved carbs for
to know that we have improved carbs for
the next MOBA sweep and that's about it
the next MOBA sweep and that's about it
so I think what we're going to get
so I think what we're going to get
started on
here welcome YouTube
here welcome YouTube
folks uh what we're going to get started
folks uh what we're going to get started
on here is what I was working on last
on here is what I was working on last
night
where is
it upper lib environments ocean
it upper lib environments ocean
MOA
and we've got our mooba
and we've got our mooba
here and if I
here and if I
recall we had it to the point that it
recall we had it to the point that it
was actually
running uh let me remember how this was
running uh let me remember how this was
running
running
I believe it was running if I just
I believe it was running if I just
do
do
MOA do I have the command in
MOA do I have the command in
here
nope yeah I need the uh the Linker
thing
thing
export what's LD Library path equals Ray
export what's LD Library path equals Ray
lib flash
lib flash
lib I think it's just
this there we go
this there we go
so here we have the
so here we have the
Moa and this is not very fun to look at
Moa and this is not very fun to look at
right this is not particularly
right this is not particularly
impressive uh but the goal
impressive uh but the goal
is to implement the full
is to implement the full
client and then this will be able to run
client and then this will be able to run
on the web and you guys will be able to
on the web and you guys will be able to
play with it and tell me if stuff is
play with it and tell me if stuff is
broken and it'll be fun to collaborate
broken and it'll be fun to collaborate
on and there'll be some cool stuff to do
on and there'll be some cool stuff to do
with it there but in order to get to
with it there but in order to get to
that we have to get this thing to
that we have to get this thing to
actually work correctly because as you
actually work correctly because as you
can see nothing is actually happening
can see nothing is actually happening
it's spawning stuff but nothing is
it's spawning stuff but nothing is
really
really
moving so we have to figure out what is
moving so we have to figure out what is
going on here um
going on here um
um
yeah so I think if I
recall we
recall we
were somewhere here
351 and let me make this
visible okay pop your
distracting so MOA do
distracting so MOA do
H
B1 and
now we're here in Step
neutrals action is two
H action is 255
so that's
so that's
interesting if I recall I think that the
interesting if I recall I think that the
uh the destinations were
screwy okay so if I'm looking at these
screwy okay so if I'm looking at these
here the
the position of this agent is reasonable
the position of this agent is reasonable
but it's pathing somewhere that doesn't
but it's pathing somewhere that doesn't
make any
make any
sense
sense
so let's figure out why that
so let's figure out why that
is this is
in
in
792 uh one one second I actually I have
792 uh one one second I actually I have
to turn this down one tick I can't deal
to turn this down one tick I can't deal
with this in my eyes all day like this
with this in my eyes all day like this
um can I just fix the green screen a
um can I just fix the green screen a
little bit so that I can be so that it
little bit so that I can be so that it
will work with the green screen a little
will work with the green screen a little
bit less
bit less
ridiculous nah I think this will be okay
ridiculous nah I think this will be okay
for now we have a little bit of green
for now we have a little bit of green
Haze here but this light is too bright
Haze here but this light is too bright
for me to stare at all
for me to stare at all
day good for recording videos not good
day good for recording videos not good
for
for
uh you know working all
day 351 we
day 351 we
say Okay so this says that we scanned a
say Okay so this says that we scanned a
Target that has a nonsense position
Target that has a nonsense position
basically
right so it's either the scan
right so it's either the scan
function or
function or
the target
the target
function I bet it's in scan AOE so let's
function I bet it's in scan AOE so let's
start
there which would be 643
okay interesting
so
so
this never gets there really
let me just make sure of
this okay so as you can see this never
this okay so as you can see this never
gets to this
gets to this
line um so this nearest scan Target
line um so this nearest scan Target
thing should be
thing should be
normal let me see how the logic looks
normal let me see how the logic looks
for this
so this does scan
AOE let's go to
here okay so now we've hit
here okay so now we've hit
this oops I hate how it like changes
this oops I hate how it like changes
your
focus okay tick zero so we definitely
focus okay tick zero so we definitely
scanned AOE
right so this is saying
right so this is saying
that the entity is not
no or gets PID
zero is that not how you do
null I thought it
what am I dumb here
zero so it is just
zero okay so according to this this is
zero okay so according to this this is
zero
neutral
spawn
791 yeah so right here it skipped over
this
783 uh and according to
783 uh and according to
this
we according to this we never actually
we according to this we never actually
hit anything which is weird I thought we
hit anything which is weird I thought we
were hitting something
were hitting something
before uh oh are we is it here neutral
before uh oh are we is it here neutral
spawn why is this what's messed up
352 okay
352 okay
so y d x d so this is the nonsense right
so y d x d so this is the nonsense right
and then if I go into
and then if I go into
oops neutrals
AI ah so I had this wrong before it's
AI ah so I had this wrong before it's
the spawn Y and the spawn X that don't
the spawn Y and the spawn X that don't
make sense
make sense
here so let's figure out why that
is so we have respawn
neutral and this is not where spawn
neutral and this is not where spawn
X and spawn y are getting added
X and spawn y are getting added
right respawn player
so do we do this in a nmoa
somewhere I think that these guys are
somewhere I think that these guys are
not getting
not getting
um they're not getting spawned correctly
um they're not getting spawned correctly
we have this
we have this
here
right so 1428
okay
okay
so neutral SP
Yol on
Yol on
X this looks reasonable to
me
me
back all this data
all this data looks reasonable so it
all this data looks reasonable so it
must be getting assigned
must be getting assigned
incorrectly
incorrectly
Camp how many elements do we have
here
n 18
n 18
elements and
then 18
then 18
total camps but this is totally
total camps but this is totally
reasonable
right neutral PID it's also
correct the
correct the
heck I mean somewhere here this is
heck I mean somewhere here this is
getting messed up right
let's go back to this and see if we can
let's go back to this and see if we can
figure out
where
okay so this is where it's getting
okay so this is where it's getting
messed up
messed up
right y dust is one
PID
110 neutral offset
110 neutral offset
10 it's 110 so this is the very first
10 it's 110 so this is the very first
neutral
neutral
right and this is saying that
okay this is all reasonable here right
73 just say
73 just say
70 73
70 73
43 yeah this is reasonable because it's
43 yeah this is reasonable because it's
a little bit of a random spawn around
a little bit of a random spawn around
here so that's a good position I think
here so that's a good position I think
that that's correct
and then the
destination has got to be the weird
part is right here with the spawn
part is right here with the spawn
so let's quit
so let's quit
here mo.
here mo.
H7 2
run
and spawn
y oh cool you can print if you
y oh cool you can print if you
dreference it you actually get the whole
dreference it you actually get the whole
stru that's really
stru that's really
nice I'm actually surprised how nice the
nice I'm actually surprised how nice the
uh the print format is in uh in just
GDB so if we look here we can actually
GDB so if we look here we can actually
see that the spawns look good
right
okay y
okay y
s y
s y
best
44 hold on so this gets
truncated spawn Y and spawn X are right
here
ah I changed this I changed the stupid
ah I changed this I changed the stupid
signature of this function like a dummy
signature of this function like a dummy
and I forgot to refactor
immediately
immediately
okay let it be known I am
stupid let it be known that I am stupid
and we need all of this to
and we need all of this to
be I'm sure this gets called elsewhere
right and
right and
creep it's good right
agent speed last agent speed
agent speed last agent speed
last yeah it only gets C in four places
cool uh build
local well the pathing is totally
local well the pathing is totally
screwed
screwed
up they are
up they are
fighting look at that
okay pathing is totally messed up on the
okay pathing is totally messed up on the
creeps but they do actually do
something wait
what I'm sure that we're just like
what I'm sure that we're just like
wrapping way points
wrapping way points
wrong I'm use a rest real quick and then
wrong I'm use a rest real quick and then
what we're going to do is we're going to
what we're going to do is we're going to
fix this and um
fix this and um
yeah we'll go from
there
e e
whoops one sec
I don't need these on at all do I I used
I don't need these on at all do I I used
to editing the
video if I message the output of GLX
info oh
info oh
what what
yeah this leaks we don't care we know
yeah this leaks we don't care we know
that this leaks this is
that this leaks this is
uh just
uh just
[Music]
unloading I think there's like a couple
unloading I think there's like a couple
hundred like bite leak in like some rayb
hundred like bite leak in like some rayb
dependence see but it's only when you go
dependence see but it's only when you go
to exit the whole thing it's only a few
to exit the whole thing it's only a few
hundred bytes as well it doesn't
hundred bytes as well it doesn't
accumulate
[Music]
right
right
so what we needed to do was figure out
so what we needed to do was figure out
why these waypoints are weird
way points
of did I declare this thing
of did I declare this thing
correctly I think I
did way
points okay this is the creep AI right
so we'll put right
here right
oops right
on
right run this
and
and
Lane way point
Lan okay
point
one okay so this
one okay so this
is wait
is wait
huh oh no this
huh oh no this
is you can see that the coordinates are
is you can see that the coordinates are
flipped here right
something got YX and then
XY that's what's wrong the data
error man
so right
so right
here right here we're doing
here right here we're doing
um this is it right it should
um this is it right it should
be neutral Camp X neutral Camp y okay
be neutral Camp X neutral Camp y okay
and
and
then where is the darn thing ah right
then where is the darn thing ah right
here
this seems wrong to me
this seems wrong to me
though this seems wrong to
me oh wait wait because yeah yeah look
me oh wait wait because yeah yeah look
the spawn is getting inserted correctly
the spawn is getting inserted correctly
and then this is getting inserted
and then this is getting inserted
inserted
inserted
wrong that's easy that's an easy
wrong that's easy that's an easy
fix process neutrals
Pi
Pi
dot.
text
text
9614 9314 okay now we have the way
9614 9314 okay now we have the way
points correct in here what I'm going to
points correct in here what I'm going to
do is
text I'm going to grab the Waypoint
text I'm going to grab the Waypoint
chords which should be the only things I
chords which should be the only things I
need
need
right
yeah and then this just goes into m.h
we
rebuild and now we run the game in all
rebuild and now we run the game in all
of its Glory
of its Glory
look at
this look at
that very nice
indeed are we
online did we just have an internet blip
we'll see if uh if Xfinity decides to
we'll see if uh if Xfinity decides to
die again
today hopefully
not let's Commit This up in the
not let's Commit This up in the
meantime oops
happening
okay we now get to start on the real
okay we now get to start on the real
client which is going to be fun and this
client which is going to be fun and this
is the main thing that I wanted to do
is the main thing that I wanted to do
today
so the Ste the uh the story with this is
so the Ste the uh the story with this is
right now we have
right now we have
m.p which is using RB for this
m.p which is using RB for this
rendering we are using the C style RB
rendering we are using the C style RB
API meaning that the code should be even
API meaning that the code should be even
though it's python it should be almost
though it's python it should be almost
one to one with
one to one with
C that said we still have a little bit
C that said we still have a little bit
of work to do porting it because you
of work to do porting it because you
know maybe we use some dictionaries
know maybe we use some dictionaries
maybe we use some other
things but it's pretty
things but it's pretty
self-contained so I think we're going to
self-contained so I think we're going to
just be able to do
this just grab all the python code
see how much code is
this 373
this 373
lines and now we got to Port this to
lines and now we got to Port this to
Native
Native
C so let's just
C so let's just
do this will go to render map
this will become a nit map
this will become a nit map
renderer this will become
renderer this will become
close map
close map
renderer this will become map renderer
renderer this will become map renderer
like
this level map
this level map
overview and then this one will
overview and then this one will
be uh
be uh
player one Cent
View and we'll be able to reuse a couple
View and we'll be able to reuse a couple
small things I
think actually does this need to store
think actually does this need to store
anything other
anything other
than we'll make a separate struct for
than we'll make a separate struct for
now but we might end up being able to
now but we might end up being able to
just reuse this one
we've
we've
got
got
renderer game
renderer uh we'll
renderer uh we'll
copy some of this to start I
think game renderer
okay game
renderer and I don't know why
renderer and I don't know why
we're doing this this
way this is
way this is
fine
yeah and now we need to start copying
yeah and now we need to start copying
logic in so
what do we have game map path in
here we have the game map included
here we have the game map included
apparently because of the Shader
but this is fine because we don't
but this is fine because we don't
actually we are only loading this fun uh
actually we are only loading this fun uh
this file using RB so we don't have to
this file using RB so we don't have to
do any weird CIO
right I think we can just start copying
right I think we can just start copying
this stuff into here so we have renderer
this stuff into here so we have renderer
width renderer
width renderer
height this is where we are right
height this is where we are right
then asset map what is asset map
here we do not use it it's down
here so this is not
here so this is not
needed this is not
needed this is not
needed uh we are going to need to
needed uh we are going to need to
declare asset map in the array
this is the next piece we need
here how many different things do we
here how many different things do we
want in here
I think it tells us up top
I think it tells us up top
right
16 16
by4 and then what we do is
by4 and then what we do is
render asset map is is going to be equal
to 0 0
to 0 0
z0 then there's nothing on one so 0 0 0
Z then two is going to
Z then two is going to
be
384 41
128 and then three here is also
128 and then three here is also
384 we're basically just copying this
384 we're basically just copying this
from a dictionary into a flat
array uh except this one is a little
array uh except this one is a little
different right this one is
different right this one is
zero four is going to be
zero four is going to be
256 five is going to
256 five is going to
be 384
yep then now it gets this one
yep then now it gets this one
right this one is
256 56
yep
yep
4 256 128
4 256 128
128 and then 128 256
128 and then 128 256
yep nine is
10 11 is now we're back up to here
10 11 is now we're back up to here
256 256
256 and now it's caught on to the
256 and now it's caught on to the
pattern 14
pattern 14
z0 three four okay
now we have all of these These are
done and then we'll just
done and then we'll just
do in stun
UV or slow UV speed
UV stun UV slow
UV stun UV slow
UV speed
UV speed
UV
UV
okay so we don't have any maps to play
okay so we don't have any maps to play
around with in C but we don't need them
around with in C but we don't need them
because we can just use a
race and this will actually be faster as
race and this will actually be faster as
well cuz now we're no longer using
well cuz now we're no longer using
hashmaps fun fact dictionaries are not
hashmaps fun fact dictionaries are not
fast they are slow oh of one with a
fast they are slow oh of one with a
giant constant on
it okay and this this was janky to begin
it okay and this this was janky to begin
with so um we'll have to do something
with so um we'll have to do something
about the paths or whatever but I'm
about the paths or whatever but I'm
going to get rid of this for now
going to get rid of this for now
from rib import RL and color this
from rib import RL and color this
doesn't exist in C we'll get rid of this
doesn't exist in C we'll get rid of this
get rid of this get rid of
get rid of this get rid of
this target fps to
this target fps to
60 is
important and now these things
important and now these things
here are also going to end up being
here are also going to end up being
important
I don't know what
I don't know what
these the types of these
these the types of these
are so we'll find that out in a
moment um I think we're going to have to
moment um I think we're going to have to
do Textra 2D
oh game
oh game
map and then do we do self
puffer this get used yes it
puffer this get used yes it
does so
oops so game
oops so game
map second texture 2D puffer and then
Shader and we'll just do
Shader and we'll just do
render game
render game
map we no longer need encode I believe
map we no longer need encode I believe
this is just going to be gam
this is just going to be gam
map.png like this and then puffer is
map.png like this and then puffer is
going to be puffer is that the
going to be puffer is that the
path puffer
assets oh look at this all the paths are
assets oh look at this all the paths are
wrong let's just go grab this code back
wrong let's just go grab this code back
for a second
buer
buer
welcome we're jamming some
welcome we're jamming some
sea today having a good
time in my
time in my
path
oops something's weird here
what's this like self.
what's this like self.
puffer Sprite sheet path is self. puffer
okay which is MOA
assets uh I don't know why it's doing
assets uh I don't know why it's doing
this nonsense this should
be load what the
hell
so Shader path is OB Shader
so Shader path is OB Shader
FS so game map
FS so game map
Shader and then what do we
Shader and then what do we
have lots of different things
here game map is done puffer's done this
here game map is done puffer's done this
Shader is done holy [ __ ] this is the
Shader is done holy [ __ ] this is the
biggest DL effort in SE that I know of
biggest DL effort in SE that I know of
After Dark
After Dark
Net not really this sea did not exist
Net not really this sea did not exist
until
until
um
um
Saturday I ported like I ported the
Saturday I ported like I ported the
first 1400 lines or whatever on Saturday
first 1400 lines or whatever on Saturday
and then I just cleaned it up yesterday
and then I just cleaned it up yesterday
and today finished a couple things and
and today finished a couple things and
now I'm porting the renderer so the goal
now I'm porting the renderer so the goal
is this is going to be like a 2,000 line
is this is going to be like a 2,000 line
C project that's just a miniature
C project that's just a miniature
version of DOTA that runs at a million
version of DOTA that runs at a million
FPS for RL and uh since it's in see
FPS for RL and uh since it's in see
we're going to be able to play it in the
we're going to be able to play it in the
browser isn't that nice so I'll be able
browser isn't that nice so I'll be able
to put it online and Link it to you all
to put it online and Link it to you all
and you'll all be able to play against
and you'll all be able to play against
the RL agents and tell me what needs to
the RL agents and tell me what needs to
be rebalanced
this is also pretty much the first time
this is also pretty much the first time
I've written C in like 10 years so this
I've written C in like 10 years so this
is going to get much
faster that's crazy nice yeah it's not
faster that's crazy nice yeah it's not
that hard either like this doing this in
that hard either like this doing this in
C is really not any harder than doing it
C is really not any harder than doing it
in scon which isn't really any harder
in scon which isn't really any harder
than doing it in Python on
than doing it in Python on
so turns out you can just do
stuff which is why I say if anybody's
stuff which is why I say if anybody's
interested in writing stupidly High perf
interested in writing stupidly High perf
RL simulators which is basically just
RL simulators which is basically just
simple games programming but with ultra
simple games programming but with ultra
high perf let me know we've got
high perf let me know we've got
definitely uh we've got some people
definitely uh we've got some people
doing that already and we're always
doing that already and we're always
looking for
more it's a good time
the see is not
the see is not
required scyon at least is required but
required scyon at least is required but
that takes all of Five Seconds To
Learn Shader going to be Bloom Shader FS
um this
is I think you have to do like this or
is I think you have to do like this or
something because this syntax isn't
something because this syntax isn't
valid and also this RL is not valid here
valid and also this RL is not valid here
all these like RL calls this should just
all these like RL calls this should just
be load texture it's C there's no name
be load texture it's C there's no name
space with this
I guess the only thing that's a little
I guess the only thing that's a little
bit weird about what I'm doing here is
bit weird about what I'm doing here is
um I am kind of snake casing everything
um I am kind of snake casing everything
which is not exactly idiomatic C but
which is not exactly idiomatic C but
whatever
right you write python for a long time
right you write python for a long time
and this is how you end up doing things
I got too used to snake case to go
back okay we'll do Bloom
back okay we'll do Bloom
Shader and then Shader canvas
let's do like this just order these
let's do like this just order these
things
things
nicely variables of yeah it doesn't
matter I'm sure this will annoy some
matter I'm sure this will annoy some
people but
whatever let me write my C in peace
right I'm having so much fun with this
right I'm having so much fun with this
as well like this is just generally a
as well like this is just generally a
good time
what is this here is this an INT
what is this here is this an INT
float is a float
maybe we have to add a few variables up
maybe we have to add a few variables up
here
what do shaders
what do shaders
do uh I will show
do uh I will show
you so this is what the game looks like
you so this is what the game looks like
now you can see that there's like this
now you can see that there's like this
nice outline that kind of glows and like
nice outline that kind of glows and like
the transition as well it goes from uh
the transition as well it goes from uh
this s over to here it'll kind of fade
this s over to here it'll kind of fade
in fade out as well over time and then
in fade out as well over time and then
there's also this nice texture in the
there's also this nice texture in the
background there's like the subtle wavy
background there's like the subtle wavy
pattern so yeah we have a few uh a few
pattern so yeah we have a few uh a few
fun shaders for this just to Jazz it up
fun shaders for this just to Jazz it up
a little
a little
bit the hope is to Port all of this into
bit the hope is to Port all of this into
C
today also how's your environment
going I want to get a lot of these fun
going I want to get a lot of these fun
projects online as fast as I can because
projects online as fast as I can because
buffer really uh I mean the new video
buffer really uh I mean the new video
did a pretty nice number for us like
did a pretty nice number for us like
look at this this says 881 from before
look at this this says 881 from before
950 look at this
growth 70 Stars over
night speaking of which don't forget to
night speaking of which don't forget to
feed the puffer he eats Stars
rising to the cars
rising to the cars
yeah 950 with me thank you very much for
yeah 950 with me thank you very much for
your
service the Stars help a
service the Stars help a
lot just to get the world word out there
lot just to get the world word out there
on the project and such
right the silly thing
okay this is the syntax
right okay so these are the glsl
right okay so these are the glsl
variables that we got to grab from our
variables that we got to grab from our
shaders so now we
shaders so now we
are we're down to
here
here
uh okay so here I'm actually going to
uh okay so here I'm actually going to
have to look up the API spec for C
have to look up the API spec for C
because I need to make a
because I need to make a
camera in
camera in
C so we'll have to do
that not much progress finishing writing
that not much progress finishing writing
damn thesis once that's done hey do what
damn thesis once that's done hey do what
you got to do
you got to do
right and I swear having like getting
right and I swear having like getting
stuck just writing annoying things in
stuck just writing annoying things in
Academia was just one of the worst like
Academia was just one of the worst like
H most demotivating things out there
H most demotivating things out there
it's so much better when you don't have
it's so much better when you don't have
to do
that going to make some cool
that going to make some cool
UI I mean we're going to get this
UI I mean we're going to get this
running on the browser to begin with
running on the browser to begin with
right we're going to Port the full UI to
right we're going to Port the full UI to
run on a
run on a
browser and then I'm going to be able to
browser and then I'm going to be able to
put it on on the puffer website
put it on on the puffer website
actually I think I
actually I think I
have don't I own
this I'm pretty sure I own this
this I'm pretty sure I own this
domain yeah this is
mine so we'll make uh we'll probably
mine so we'll make uh we'll probably
like put all the games on puffer Dogg
I'm pretty sure I just have it set to
I'm pretty sure I just have it set to
Auto
Auto
renew too many things
renew too many things
moving well yeah we also just don't have
moving well yeah we also just don't have
good enough artwork have you ever played
good enough artwork have you ever played
Dota or League of
Legends e
so cool that they have this in a popup
so cool that they have this in a popup
and it works like
this okay where's the camera in
this okay where's the camera in
it right
it right
here yeah wait do you have both minions
here yeah wait do you have both minions
and heroes oh yeah yeah we have creep
and heroes oh yeah yeah we have creep
waves we've got five unique Heroes so to
waves we've got five unique Heroes so to
mirror match 5v5 and we have uh
mirror match 5v5 and we have uh
neutrals last time I played doas four
neutrals last time I played doas four
years ago I was 16 got yelled at by
years ago I was 16 got yelled at by
Chinese for two Irish players that's
Chinese for two Irish players that's
what you call Welcome to the game right
what you call Welcome to the game right
that's just
welcome you ever played an MMO you'll
welcome you ever played an MMO you'll
get flamed way worse it'll make all the
get flamed way worse it'll make all the
the mobile players look like just great
the mobile players look like just great
people
hey everyone on YouTube looks like the
hey everyone on YouTube looks like the
stream's warmed up nicely
welcome uh that paste okay we were doing
welcome uh that paste okay we were doing
this only ever see Russians on DotA
like
like
this don't like these
spaces okay so we made the camera here
spaces okay so we made the camera here
and then the target Vector is it's zero
right and then the offset is not
right and then the offset is not
set rotation zero Zoom one
yeah so we'll have to figure out where
yeah so we'll have to figure out where
offset is getting messed
with this was the one thing that I used
with this was the one thing that I used
the python style API for with RB because
the python style API for with RB because
um ffi is really
obnoxious and uh in Python if you want
obnoxious and uh in Python if you want
to do camera directly you have you see
to do camera directly you have you see
the cffi [ __ ]
the cffi [ __ ]
it's not
fun I see last
click
click
oops oh set no paste that's what's going
on
on
okay and uh I also don't like this Malik
okay and uh I also don't like this Malik
where is this before I get burned by
where is this before I get burned by
this don't Malik stuff use
this don't Malik stuff use
C zero is the memory for
you why use Malik when you can cic
okay so we don't need this C data numpy
okay so we don't need this C data numpy
[ __ ] uh and now this renderer thing
[ __ ] uh and now this renderer thing
is the function that we need to Port so
is the function that we need to Port so
we're just going to take this entire
we're just going to take this entire
blob of
code right
code right
here we're going to put it up
here we're going to put it up
here and then we're going going to
here and then we're going going to
unindent it and we're just going to
unindent it and we're just going to
start porting like one: one python to
start porting like one: one python to
C and it's like a massive function that
C and it's like a massive function that
we're going to have to clean up but this
we're going to have to clean up but this
is what we're starting
is what we're starting
with so
with so
void
void
render map render
render map render
MOBA and I'm sure that we'll need this
MOBA and I'm sure that we'll need this
signature so I'll leave it up
here we don't need any of these
here we don't need any of these
my player equal entities of human
player which
is we'll just pound Define for now I
think ler to be
think ler to be
zero this will be a
to-do and I believe this is going to be
to-do and I believe this is going to be
entity
entity
star my player is going to be entity is
star my player is going to be entity is
of human player like
of human player like
this uh tile
size this is an
size this is an
INT pile
size and we have all this stuff here so
a y = 0 xal 0 I don't even know why
a y = 0 xal 0 I don't even know why
we're defining these here but uh we're
we're defining these here but uh we're
just going to Port one to one brain dead
just going to Port one to one brain dead
for now skill Target
Heroes
so frames
is f frames
12 or frame zer this is the number of uh
12 or frame zer this is the number of uh
frames per tick which is at the moment
frames per tick which is at the moment
12 frames for every game update because
12 frames for every game update because
it ticks
at is that
at is that
wrong no it takes five times per second
wrong no it takes five times per second
so 5 * 12 is
60 RL get screen with uh why do I think
60 RL get screen with uh why do I think
that that's not the right
that that's not the right
signature get screen because it's not
signature get screen because it's not
the right
signature okay so we have set the width
signature okay so we have set the width
and the height so this is now
and the height so this is now
resizable uh we have float tick Frack
resizable uh we have float tick Frack
going to be
going to be
zero this doesn't need to be defined up
zero this doesn't need to be defined up
here we're in C we can do like this
here we're in C we can do like this
float tick
float tick
Frack oops float tick Frack frame over
Frack oops float tick Frack frame over
frames and then we we
frames and then we we
do Lo main R it's going to be R last
do Lo main R it's going to be R last
y tick Frack
y tick Frack
of my player y minus my player last y
of my player y minus my player last y
okay so this is this is us doing
okay so this is this is us doing
animations manually um because the game
animations manually um because the game
only updates five times per second and
only updates five times per second and
then we smooth the animation so like if
then we smooth the animation so like if
you're moving in a certain direction
you're moving in a certain direction
we'll like Smooth it so that it looks
we'll like Smooth it so that it looks
like uh you're moving cleanly even
like uh you're moving cleanly even
though it's only updating in chunks of
though it's only updating in chunks of
uh 200
uh 200
milliseconds so this will make it
milliseconds so this will make it
cleaner and then we do to main R Shader
cleaner and then we do to main R Shader
main C Shader yeah these things will
main C Shader yeah these things will
just Auto Port pretty
just Auto Port pretty
much and we'll do renderer camera Target
much and we'll do renderer camera Target
Y and
Y and
X this is not a valid cast we also don't
X this is not a valid cast we also don't
need to do a valid cast uh I
need to do a valid cast uh I
believe because c will do it for us so
believe because c will do it for us so
ironically this becomes easier than in
ironically this becomes easier than in
Python I think is pretty
Python I think is pretty
funny and
then F main r f main
then F main r f main
c f
c f
f and then we do main
f and then we do main
R equals F main
R equals F main
R and then this will AutoCast for us
R and then this will AutoCast for us
and then we have rmin R Max so we have
and then we have rmin R Max so we have
in
in
rmin going be like
this so now we ported the array
bounds and then we have back to pause
bounds and then we have back to pause
get mouse
get mouse
position Mouse
position Mouse
X Y then we have int
this is actually just so much
easier and like this is just
easier and like this is just
automatically going to be fast as well
automatically going to be fast as well
it's just going to automatically be at
it's just going to automatically be at
least 10 times faster than the client
least 10 times faster than the client
was
before literally zero effort
yep I don't want to save this as a v 2
yep I don't want to save this as a v 2
in the stru because it's unnecessary
in the stru because it's unnecessary
know why use a v two when a couple slops
know why use a v two when a couple slops
will
suffice um
now now I have to consider this
now I have to consider
this I think what I do is I check for
this I think what I do is I check for
negative
negative
one is this a
one is this a
float yeah it is a float but I think I
float yeah it is a float but I think I
can still use negative one
renderer ah look it literally
renderer ah look it literally
understands what I'm doing
understands what I'm doing
here yeah
if then what we do is oh
actually that is kind of a nice thing
actually that is kind of a nice thing
that I could do with the vector
I don't want to have to allocate another
I don't want to have to allocate another
a new vector and stuff I think this is
a new vector and stuff I think this is
fine like
this we'll leave a little Todo
this we'll leave a little Todo
there okay so in D
there okay so in D
X I think this is
X I think this is
float D
float D
X Y so we have all all
these then we
these then we
rescale
um
um
mag s root
F
F
fine if mag is greater than one then
fine if mag is greater than one then
basically the exact same code
basically the exact same code
right we do if this we know the click
now we do a y is a y defined up
now we do a y is a y defined up
here it
is think you can find some more people
is think you can find some more people
who might be interested in lowlevel deep
who might be interested in lowlevel deep
learning in geohot community yeah I've
learning in geohot community yeah I've
got to thank the guy honestly because uh
got to thank the guy honestly because uh
he starred puffer lib uh pretty early on
he starred puffer lib uh pretty early on
in development and we got like 150 Stars
in development and we got like 150 Stars
overnight on the
project I'm hoping eventually we'll be
project I'm hoping eventually we'll be
able to do something with like uh puffer
able to do something with like uh puffer
lib plus tiny boxes or something but
lib plus tiny boxes or something but
right now like we would have to get
right now like we would have to get
multi-gpu stuff working in RL and the
multi-gpu stuff working in RL and the
whole stack is so cursed that first
whole stack is so cursed that first
we're getting like really really good
we're getting like really really good
single GPU demos running um and then
single GPU demos running um and then
we'll go to multi GPU like there's no
we'll go to multi GPU like there's no
point in doing multi GPU when the whole
point in doing multi GPU when the whole
rest of the field is sat at like 5% GPU
rest of the field is sat at like 5% GPU
utilization in RL it's pathetic
else
zero made
this Exit Zero
oh this is not a this is not a thing
oh this is not a this is not a thing
though you can't just type Exit Zero
right
right
and this should be an INT instead of a
and this should be an INT instead of a
void this should be an INT and it should
void this should be an INT and it should
actually return one not negative
actually return one not negative
one because in a c for whatever reason
one because in a c for whatever reason
this is an error code
okay so now we don't have to free it's
okay so now we don't have to free it's
the responsibility the caller to
free that's a pretty
free that's a pretty
easy translation right there these are
easy translation right there these are
already defined up top so we should be
already defined up top so we should be
good uh and now this action thing here
good uh and now this action thing here
is well this is screwy right
I think this should be
n this is where you're supposed to do
n this is where you're supposed to do
player
control this is where you're supposed to
control this is where you're supposed to
do player control
okay for now we'll do it this
okay for now we'll do it this
way we have envin here we do right it's
way we have envin here we do right it's
defined up
defined up
top yeah so this is going to be en
top yeah so this is going to be en
entities human player
oh no it's n of actions
right
right
yeah so we're just going to put all of
yeah so we're just going to put all of
these things that you've selected into
these things that you've selected into
the environment's action buffer directly
the environment's action buffer directly
so now you are able to control the
player and then we do begin
player and then we do begin
drawing clear back
background is this color a zero yes it
is and then we
is and then we
do begin Shader
do begin Shader
mode your Shader we don't need these
mode your Shader we don't need these
prints see all this garbage
prints see all this garbage
here camera X
pointer main C Shader what the hell
main C
main C
Shader
Shader
oh well this
is all the way up there for some reason
is all the way up there for some reason
right doesn't need to be all the way up
right doesn't need to be all the way up
there unless is it saving a loop or
there unless is it saving a loop or
something by putting it up
something by putting it up
there it's not even saving a
there it's not even saving a
loop putting it up there
yeah oops let's just put it down here
yeah oops let's just put it down here
closer to where it
belongs um float
belongs um float
star camera X pointer I don't understand
star camera X pointer I don't understand
what the hell this is why we're giving
what the hell this is why we're giving
it a pointer to a float for some
reason and main R
Shader this is a local variable I don't
Shader this is a local variable I don't
understand this
whatsoever
whatsoever
Soo isn't this a
Soo isn't this a
local so I don't understand what this is
doing uh import time time is not what we
doing uh import time time is not what we
want
want
so include time. H time
okay let's do
okay let's do
float Sher time is time of
float Sher time is time of
null we have Shader time
null we have Shader time
pointer okay and now we can do set
Shader renderer Shader renderer
trater camera
trater camera
X camera X
X camera X
pointer uniform float and this is not RL
pointer uniform float and this is not RL
because that's it's
because that's it's
C
okay now we do RL or Draw
okay now we do RL or Draw
texture
texture
white and then we we do
white and then we we do
end Shader mode and I think I'll do this
end Shader mode and I think I'll do this
in one big block right here so this is
in one big block right here so this is
the
Shader
boom so this is the I believe this is
boom so this is the I believe this is
the Shader that does
um main like environment
Gator there's another one after I
believe in mode 2D render a camera this
believe in mode 2D render a camera this
is all common until we delete
is all common until we delete
it and then we'll have to do these Loops
it and then we'll have to do these Loops
I'm use the restroom again real quick
I'm use the restroom again real quick
and uh then we'll start on
that
e e
folks if you haven't seen the um the new
folks if you haven't seen the um the new
YouTube video I suggest watching it at
YouTube video I suggest watching it at
some point it's um pretty high effort
some point it's um pretty high effort
high production video and it's me going
high production video and it's me going
through the whole reinforcement learning
through the whole reinforcement learning
stack kind of outlining where I see the
stack kind of outlining where I see the
field going what puffer is going to do
field going what puffer is going to do
about it and how the whole next wave of
about it and how the whole next wave of
progress is going to be made that's on
progress is going to be made that's on
YouTube RL
Iceberg and yep as bet says star the
Iceberg and yep as bet says star the
puffer got to feed him he eats
puffer got to feed him he eats
Stars helps me out a
Stars helps me out a
ton welcome bet how's it
going our res
proelite the video was deck
what I hope it's doing
what I hope it's doing
well it's done pretty well on Twitter so
far speaking a
witch yeah look at
that decent I hope it's better than
that decent I hope it's better than
decent we've got 20K views on it on
decent we've got 20K views on it on
Twitter
Twitter
240 and
uh
uh
oops I forgot to reply to a thing
if you watched it on 1.5x there's no way
if you watched it on 1.5x there's no way
you're following it bet it's
you're following it bet it's
dense you
nutcase
nutcase
H I will show you check this out we've
H I will show you check this out we've
got from 881
got from 881
yesterday
yesterday
950 so it's done pretty well for the
950 so it's done pretty well for the
GitHub
that video has several stuff like I
that video has several stuff like I
guarantee you there's not a single
guarantee you there's not a single
person watching that video who is not
person watching that video who is not
learning at least
learning at least
something I mean I compressed like a
something I mean I compressed like a
whole overview of the entire stack into
whole overview of the entire stack into
minutes
what yeah the RL
Iceberg didn't understand aov it saw
Iceberg didn't understand aov it saw
graphs go up and good enough for me
graphs go up and good enough for me
welcome South resident artist in here
welcome South resident artist in here
we're getting this thing built so it'll
we're getting this thing built so it'll
run on the web right now I'm porting
run on the web right now I'm porting
this right here this is the client that
this right here this is the client that
I'm porting no surprises in there
I'm porting no surprises in there
seriously I mean maybe you've heard me
seriously I mean maybe you've heard me
Yap about this stuff plenty but I swear
Yap about this stuff plenty but I swear
you can be a world expert in RL and
you can be a world expert in RL and
there will be stuff there that you were
there will be stuff there that you were
not aware
of there's a lot of stuff in
that reminds me of like Elon Musk
that reminds me of like Elon Musk
posting that he was watching The Iliad
posting that he was watching The Iliad
at like 1.25 or 1.5 or whatever like
at like 1.25 or 1.5 or whatever like
what what are you doing
all right
all right
so yeah this is a slight
so yeah this is a slight
issue this is a dynamic length
issue this is a dynamic length
thing PRS to
submit okay so I have to figure out how
submit okay so I have to figure out how
to do this
um I need didn't know how many they're
um I need didn't know how many they're
going to
going to
be right
let's just
let's just
make should I just make a large buffer
make should I just make a large buffer
to begin
with thousand steps to a gabillion stack
with thousand steps to a gabillion stack
yeah gab billion
so this is one of the obnoxious
so this is one of the obnoxious
things this is one of the very few
things this is one of the very few
obnoxious things I have to get this
obnoxious things I have to get this
Dynamic list I have to do like a static
Dynamic list I have to do like a static
thing here I'll show you what I'm going
thing here I'll show you what I'm going
to do with this one second environment
to do with this one second environment
busted mind light speed so I'll what I
busted mind light speed so I'll what I
want to do with this I realized that I
want to do with this I realized that I
actually I own the domain puffer Dogg in
actually I own the domain puffer Dogg in
addition to
addition to
puffer so I think what we're going to do
puffer so I think what we're going to do
is we're going to make like a games page
is we're going to make like a games page
that's going to have all the different
that's going to have all the different
simulators that have been ported to see
simulators that have been ported to see
and uh you're just going to be able to
and uh you're just going to be able to
play them online and that page will just
play them online and that page will just
get
get
larger that's going to be the
larger that's going to be the
idea it really shouldn't take that long
idea it really shouldn't take that long
to Port the existing stuff that I have
to Port the existing stuff that I have
to see so we can do that and then uh you
to see so we can do that and then uh you
know start deving more stuff
know start deving more stuff
fast should be
good so here's what we're going to do in
good so here's what we're going to do in
the meantime I'm going to allocate
the meantime I'm going to allocate
preallocate at
least how many tiles could this possibly
least how many tiles could this possibly
be let's
be let's
say uh let's say that you have uh
3840 30
3840 30
840 32
840 32
120 we'll just do 128 time 128
and I think it's entity
star or just in
star or just in
Star hang on a second I just have to
Star hang on a second I just have to
figure out how I'm recording this
data
data
uh PID YX okay so all I need is I need
uh PID YX okay so all I need is I need
the PID so that's not bad at all then
the PID so that's not bad at all then
what we're going to do is we're going to
what we're going to do is we're going to
add to the renderer and this is a little
add to the renderer and this is a little
bit janky but bear with me here we're
bit janky but bear with me here we're
going to add
going to add
int
um render
entities 128 *
128 okay and then what we're going to do
128 okay and then what we're going to do
here is we're going to do int
here is we're going to do int
render idx it's going to be zero
render idx it's going to be zero
and we'll convert these Loops so
and we'll convert these Loops so
for y is going to go from R Min to R Max
for y is going to go from R Min to R Max
then we'll do X from C Min to C
then we'll do X from C Min to C
Max and we'll just do if this is a
Max and we'll just do if this is a
balance
check uh this is a little bit different
check uh this is a little bit different
from the renderer height this needs to
be this should be
be this should be
n height I
believe does this even
believe does this even
have I don't even know if this has
have I don't even know if this has
MOA with height I think it's hardcoded
MOA with height I think it's hardcoded
to
128 we'll just do this for now
and this is a
and this is a
continue then we do in pile it's going
continue then we do in pile it's going
to be grid actually it's not an INT
to be grid actually it's not an INT
right it's an unsigned Char tile which
right it's an unsigned Char tile which
is going to be M grid
is going to be M grid
YX then we'll do if tiles empty
YX then we'll do if tiles empty
continue and then we have
continue and then we have
inid we IDs YX uh you're forgetting here
inid we IDs YX uh you're forgetting here
that I need the map address so this has
that I need the map address so this has
got to be int Adder
got to be int Adder
map
map
offset right yeah yeah yeah so you can't
offset right yeah yeah yeah so you can't
do this is not a 2d array it's a 1D
do this is not a 2d array it's a 1D
array so I have this convenient function
array so I have this convenient function
to get myself the indices so this is now
to get myself the indices so this is now
going to be
adder adder same
address okay and now we'll do if it is
address okay and now we'll do if it is
ne1 you draw a rectangle
I don't know where got this continue
from this is red like
from this is red like
this
this
okay and then get rid of
okay and then get rid of
this and now instead of render entities
this and now instead of render entities
append this is the key thing here we do
append this is the key thing here we do
uh
uh
renderer render entities of render index
renderer render entities of render index
is equal to PID
is equal to PID
and we do render idx or where is it
render no render
render no render
idx ID
idx ID
x++ so what this is going to do now is
x++ so what this is going to do now is
we have this giant flat buffer that we
we have this giant flat buffer that we
know is big enough for whatever we need
know is big enough for whatever we need
so instead of having a dynamic buffer
so instead of having a dynamic buffer
we're just going to fill this thing up
we're just going to fill this thing up
and then we're going to need to tell you
and then we're going to need to tell you
uh we're going to need to tell
uh we're going to need to tell
it uh the very last one which is going
it uh the very last one which is going
to have to be
to have to be
so we close these Loops
so we close these Loops
whoops we close these
whoops we close these
loops and yes it actually gets it right
loops and yes it actually gets it right
here so this has been incremented and
here so this has been incremented and
then the last one gets set to negative
then the last one gets set to negative
one so this is the Sentinel that tells
one so this is the Sentinel that tells
us when to
us when to
stop ah welcome even more YouTube
folks we are currently
porting this game which is a high
porting this game which is a high
performance Simulator for r enforcement
performance Simulator for r enforcement
learning runs a million steps per second
learning runs a million steps per second
reporting this to run a native sea so
reporting this to run a native sea so
that I can put it on a browser uh and
that I can put it on a browser uh and
then you all can just play it and see
then you all can just play it and see
whether uh there are any bugs in it
whether uh there are any bugs in it
stuff like that and soon we'll be able
stuff like that and soon we'll be able
to have you playing against the RL
to have you playing against the RL
agents in the browser like you can with
agents in the browser like you can with
the other snake demo at the
the other snake demo at the
moment this is of course a much more
moment this is of course a much more
complicated
complicated
project basically miniature version of
project basically miniature version of
Dota or League of
Dota or League of
Legends with those
Legends with those
and it's going to be about 2,000 lines
and it's going to be about 2,000 lines
of C for the whole thing really not that
of C for the whole thing really not that
bad for this amount of
complexity okay
so oh this is actually even easier we
so oh this is actually even easier we
don't even need the Sentinel value here
don't even need the Sentinel value here
I don't
I don't
think yeah we actually don't even need
think yeah we actually don't even need
this this Sentinel here because since
this this Sentinel here because since
this is in one function
this is in one function
we can just literally
we can just literally
do less than render idx i++ yeah yeah
do less than render idx i++ yeah yeah
yeah cuz we're not even going to have to
yeah cuz we're not even going to have to
read and check the
Sentinel okay so we do entity star
Sentinel okay so we do entity star
entity
okay let's let's back up int hid is
okay let's let's back up int hid is
going to be render render entities of I
going to be render render entities of I
and then we're going to
do if pit is negative 1 you continue and
do if pit is negative 1 you continue and
then we'll do entity ENT uh we're going
then we'll do entity ENT uh we're going
to make an entity which is going to be
to make an entity which is going to be
containing
containing
the thing that we just
the thing that we just
saved and
now we can do check the target pit
now we can do check the target pit
continue and now this is where we do
continue and now this is where we do
targeting right
yeah Lo entity
yeah Lo entity
X let's do it correct so we have last X
X let's do it correct so we have last X
last X take Frack yeah all we had to do
last X take Frack yeah all we had to do
is change here the pointers to uh the
is change here the pointers to uh the
dot notation to
dot notation to
pointers this one's
pointers this one's
fine uh Target is this the
fine uh Target is this the
same no we have to declare this and
same no we have to declare this and
then let's actually
then let's actually
do in Target PID let's just cach
this and then we'll
do it entity star Target Target PID
do it entity star Target Target PID
that's cleaner and now we have these two
that's cleaner and now we have these two
lines are basically the same as
above I like this a little better this
above I like this a little better this
is
is
clean and now this whole block is very
clean and now this whole block is very
easy to Port I believe except it's a
easy to Port I believe except it's a
little
different because we have to do
color base right and then color accent
color base right and then color accent
like this and then we do if he is zero
like this and then we do if he is zero
base is going to be
base is going to be
red and the accent can
red and the accent can
be this is not just red though this is
be this is not just red though this is
going to
be we'll do like this
be we'll do like this
right yeah and we'll make the custom
right yeah and we'll make the custom
color and then this should give us
color and then this should give us
yeah this one this now should be able to
yeah this one this now should be able to
auto complete
right yes this auto complete is
right yes this auto complete is
correct now we have our colors for our
correct now we have our colors for our
different cases
different cases
here in Target fix we don't need that
here in Target fix we don't need that
Awkward cast anymore uh we also don't
Awkward cast anymore uh we also don't
need this weird floor division
notation maybe someday we'll add an ELO
notation maybe someday we'll add an ELO
system to match against similarly
system to match against similarly
skilled bottles already done my friend
skilled bottles already done my friend
already done let me show you how cool
already done let me show you how cool
this
is you want to see some uh some really
is you want to see some uh some really
cool research stuff over
cool research stuff over
here so we have here all of the
here so we have here all of the
experiments that we're
running yeah this is pretty sweet I'll
running yeah this is pretty sweet I'll
show you I just have to find the
show you I just have to find the
sweep is it maybe this one
it takes forever to load because this
it takes forever to load because this
page is not written in
page is not written in
C uh this is the wrong one it's one
below metrics on metrics yeah so okay
below metrics on metrics yeah so okay
here we have 500 different experiments
here we have 500 different experiments
that have been trained so 500 different
that have been trained so 500 different
agents that have been trained on this
agents that have been trained on this
MOA you can see we have tons of stats
MOA you can see we have tons of stats
like damage dealt for each class levels
like damage dealt for each class levels
gained stuff like
gained stuff like
that and here we have this massive ELO
that and here we have this massive ELO
overtime chart so you can see as we run
overtime chart so you can see as we run
more experiments what happens is that
more experiments what happens is that
you train the agent in a mirror match
you train the agent in a mirror match
versus itself so it's playing Just
versus itself so it's playing Just
against itself it's like you're playing
against itself it's like you're playing
on chess and you just split the chess
on chess and you just split the chess
board around and like you take both
board around and like you take both
moves or whatever right but this is how
moves or whatever right but this is how
it's trained but then when we go to
it's trained but then when we go to
evaluate it we sample some of the agents
evaluate it we sample some of the agents
from previous experiments and we
from previous experiments and we
calculate ELO based on win rate against
calculate ELO based on win rate against
all these different experiments
all these different experiments
so then we can see over these 500
so then we can see over these 500
different experiments the ELO goes up
different experiments the ELO goes up
and up and up over
and up and up over
time that's pretty cool
time that's pretty cool
right and it's like a couple hundred
right and it's like a couple hundred
lines of code to do this this was the
lines of code to do this this was the
main thing that they did in open ai5 and
main thing that they did in open ai5 and
uh we can kind of just do I'll be at a
uh we can kind of just do I'll be at a
much smaller scale but we can just do
much smaller scale but we can just do
that and we get all these different
that and we get all these different
experimental results and we lag the heck
experimental results and we lag the heck
out of wand B Because JavaScript is
out of wand B Because JavaScript is
awful um and yeah here you
awful um and yeah here you
go so the cool thing is like as soon as
go so the cool thing is like as soon as
we have this
we have this
ported uh we'll see oops not neural MMO
ported uh we'll see oops not neural MMO
that's my other thing as soon as we have
that's my other thing as soon as we have
this ported like you see this button up
this ported like you see this button up
top on the main
top on the main
website well this is a not JavaScript
website well this is a not JavaScript
very fast snake game that I can just
very fast snake game that I can just
play I'm controlling this yellow snake
play I'm controlling this yellow snake
now and uh you know if I take my hands
now and uh you know if I take my hands
off then it will take over and it's not
off then it will take over and it's not
very smart but it is pretty good at
very smart but it is pretty good at
mechanics
mechanics
right you can see it's pretty good at
right you can see it's pretty good at
doing the mechanics and now it's going
doing the mechanics and now it's going
to get itself into a bad situation so I
to get itself into a bad situation so I
can just like you know get it out of
can just like you know get it out of
that situation and I'm bad at mechanics
that situation and I'm bad at mechanics
so I messed up but yeah we're going to
so I messed up but yeah we're going to
be able to play uh we're going to be
be able to play uh we're going to be
able to play versus the agent in browser
able to play versus the agent in browser
which will be
which will be
cool and if anybody wants to help out
cool and if anybody wants to help out
with you know making more Ms and stuff
with you know making more Ms and stuff
to do all this stuff stuff with it's not
to do all this stuff stuff with it's not
that hard like yeah you see me editing
that hard like yeah you see me editing
two 2,000 lines worth of C here but like
two 2,000 lines worth of C here but like
if you go look at the snake
if you go look at the snake
code at least the original scon before
code at least the original scon before
it went into
it went into
C uh it's really not that bad and we
C uh it's really not that bad and we
have several people around that are
have several people around that are
don't have RL experience prior to this
don't have RL experience prior to this
that are able to
that are able to
contribute because here the snake I
contribute because here the snake I
always go to the snake demo just to show
always go to the snake demo just to show
how simp simple it is um no not this one
how simp simple it is um no not this one
SE snake
SE snake
yeah so this is the entire
yeah so this is the entire
implementation it's 200 lines of code
implementation it's 200 lines of code
for the snake implementation in
for the snake implementation in
syon and it reads like brain dead python
syon and it reads like brain dead python
like this literally if you just read
like this literally if you just read
through this it looks like brain dead
through this it looks like brain dead
python it's just write the python in the
python it's just write the python in the
stupidest way possible and this runs it
stupidest way possible and this runs it
like 10 million steps per second per CPU
like 10 million steps per second per CPU
core so it doesn't have to be that
hard and we are definitely looking for
hard and we are definitely looking for
more environments for perer
more environments for perer
because we can run all sorts of cool RL
because we can run all sorts of cool RL
on
them brain dead million
them brain dead million
FPS yeah no not a million the mooba runs
FPS yeah no not a million the mooba runs
at a million the snake M runs at like 10
at a million the snake M runs at like 10
million
just don't call python yeah
exactly but it is really brain dead like
exactly but it is really brain dead like
if you look at the code I'm not doing
if you look at the code I'm not doing
anything smart it's the opposite I'm
anything smart it's the opposite I'm
doing everything as dumb as humanly
doing everything as dumb as humanly
possible right like I don't have any
possible right like I don't have any
fancy data structures I don't have any
fancy data structures I don't have any
fancy algorithms I don't have any like
fancy algorithms I don't have any like
fancy code structure with objects this
fancy code structure with objects this
and that it's just like really dumb
and that it's just like really dumb
simple procedural code where you just
simple procedural code where you just
write out all the loops and write out
write out all the loops and write out
all the conditionals that's all it
is it's really easy to make that type of
is it's really easy to make that type of
code
fast I swear we've just been nerd
fast I swear we've just been nerd
sniping ourselves on like software
sniping ourselves on like software
development for the past decade it's not
development for the past decade it's not
hard to write stuff that's this fast
yeah assembly is not easy to write
yeah assembly is not easy to write
though bet C on the other hand is not
though bet C on the other hand is not
bad at
all like actually the C here is not any
all like actually the C here is not any
harder to write than the
harder to write than the
scon I let people I tell people hey you
scon I let people I tell people hey you
can just write the scyon because people
can just write the scyon because people
go like well I don't want to have to
go like well I don't want to have to
write in C that sounds crazy it's like
write in C that sounds crazy it's like
okay you can just write python that
okay you can just write python that
looks you know scon that looks exactly
looks you know scon that looks exactly
like Python and then once you do that
like Python and then once you do that
for a bit then you realize like wait a
for a bit then you realize like wait a
second this is basically just C it's
second this is basically just C it's
like yeah it's like wait but C is
like yeah it's like wait but C is
supposed to be hard no no it's not
supposed to be hard no no it's not
you've been lied
to is that
to is that
easy now I will say C is incredibly hard
easy now I will say C is incredibly hard
if you don't know that there is no dress
if you don't know that there is no dress
sanitizer all right that's the one thing
sanitizer all right that's the one thing
there are like some debug tools that
there are like some debug tools that
tell you exactly where you're like seg
tell you exactly where you're like seg
falting and leaking memory if you don't
falting and leaking memory if you don't
know that those exist then yeah it's
miserable but they do exist
so don't CL don't skip lesson three of
so don't CL don't skip lesson three of
your learn c tutorial well Stanford
your learn c tutorial well Stanford
managed to skip that one entirely in
managed to skip that one entirely in
their systems courses so
I never knew this
existed at Stanford you're smart enough
existed at Stanford you're smart enough
to figure it out no I I got to Stanford
to figure it out no I I got to Stanford
by being way too stubborn to like ask
by being way too stubborn to like ask
for help and like not do everything
for help and like not do everything
myself so I would just like suffer
myself so I would just like suffer
through the assignments for 40 hours and
through the assignments for 40 hours and
be really mad and not learn
be really mad and not learn
anything that's what happened well
anything that's what happened well
that's how I did
stuff this RL here needs this AR needs
stuff this RL here needs this AR needs
to go
away best difference can't be like
I don't know they actually ruined like
I don't know they actually ruined like
low-l programming for me it's taking me
low-l programming for me it's taking me
a decade to get back to it almost but
a decade to get back to it almost but
it's so much easier than it was made out
it's so much easier than it was made out
to be it's so much
easier and now I'm just generally having
easier and now I'm just generally having
a good time you know
um okay so Source wck here needs to be
I think this will probably need a vector
I think this will probably need a vector
type or
something okay so we do begin Shader
something okay so we do begin Shader
mode and then we
mode and then we
do raw texture Pro
right and then
right and then
we in Shader
mode do I like
mode do I like
that what if I do it without
the what if I do it like
the what if I do it like
this that looks worse
we'll leave
that
mobs
mobs
what why the heck did I do it this
what why the heck did I do it this
way oh because I wanted one draw call
way oh because I wanted one draw call
yeah we don't need to care about that
there's no push back this isn't
C++
oops and that's literally
it so now this is here draw uh status
it so now this is here draw uh status
icons and then this
one this block here
is a
is a
Blom I don't need that we're
good now we have this draw circle thing
good now we have this draw circle thing
draw
Circle and mode
Circle and mode
2D now we do the
2D now we do the
HUD already all the way to the
HUD already all the way to the
HUD at least on the initial
portd star player and entity is human
portd star player and entity is human
player then we do
player then we do
color off color it's going to be this
then color
then color
on
color yeah we just do a turn
AR very sad to inform that Jax is also
AR very sad to inform that Jax is also
not going to make it
not going to make it
yeah I do not like Jack I really
don't like think about it right just
don't like think about it right just
think about it if you were going to
think about it if you were going to
implement this
implement this
mooba would you rather get to write it
mooba would you rather get to write it
in Python but you have to write the
in Python but you have to write the
entire logic as array operations you
entire logic as array operations you
can't use like normal conditionals and
can't use like normal conditionals and
loops and stuff and you have to think
loops and stuff and you have to think
about branching paths because the GPU
about branching paths because the GPU
executes every single br aning path of
executes every single br aning path of
logic or just write it in like brain
logic or just write it in like brain
dead simple
c
c
yeah like this is not the way to do
yeah like this is not the way to do
things right like you're not going to
things right like you're not going to
magically run everything on the GPU it's
magically run everything on the GPU it's
not just well we should run stuff on the
not just well we should run stuff on the
GPU because gpus are faster than CPUs no
GPU because gpus are faster than CPUs no
gpus are faster at very specific
gpus are faster at very specific
operations CPUs are what you use to run
operations CPUs are what you use to run
general purpose code which is what a
general purpose code which is what a
simulator is
so Jax has some Niche applications I
so Jax has some Niche applications I
cover this in my video
right I don't know if I mentioned Jacks
right I don't know if I mentioned Jacks
explicitly I do say GPU environments
explicitly I do say GPU environments
though which is basically
Jacks I also just generally think that
Jacks I also just generally think that
their libraries are
their libraries are
garbage it's like it reminds me of the
garbage it's like it reminds me of the
node ecosystem it's just
disgusting you present the opinions
disgusting you present the opinions
neutral the options neutrally I don't
neutral the options neutrally I don't
have to present the options neutrally
have to present the options neutrally
I'm allowed to be
opinionated you doing the video if you
opinionated you doing the video if you
think that that's neutrally then you can
think that that's neutrally then you can
say so but I mean there was no I was
say so but I mean there was no I was
under no obligation or you know any
under no obligation or you know any
effort to be neutral about it right I'm
effort to be neutral about it right I'm
drawing on my own experience here
I feel remember clean Yeah clean R is
I feel remember clean Yeah clean R is
awesome that's what we use I mean
awesome that's what we use I mean
here where is
this so this thing is currently less
this so this thing is currently less
than 800 lines but if I go to like line
than 800 lines but if I go to like line
400ish okay this is already done the
400ish okay this is already done the
train Loop ends at before 400 and
train Loop ends at before 400 and
there's like an extra 100 line
there's like an extra 100 line
experience buffer so like roughly we'll
experience buffer so like roughly we'll
say 500ish lines in order to handle
say 500ish lines in order to handle
everything in RL ever pretty
everything in RL ever pretty
much and that's the full implementation
much and that's the full implementation
as well like look we're not importing a
as well like look we're not importing a
million million different things
million million different things
here so and then the rest is just
here so and then the rest is just
logging and stuff so yeah clean RL rocks
logging and stuff so yeah clean RL rocks
love clean RL
it needs a little bit of extra it needs
it needs a little bit of extra it needs
some extras to really be able to like do
some extras to really be able to like do
the type of stuff we're doing with
the type of stuff we're doing with
puffer but it's such a good thing to
puffer but it's such a good thing to
start off of and it's really really hard
start off of and it's really really hard
uh it was really hard for me to build it
uh it was really hard for me to build it
into like clean puff RL because you
into like clean puff RL because you
actually you have to give so much
actually you have to give so much
respect to the design of clean ARL it's
respect to the design of clean ARL it's
like oh well I can just add this extra
like oh well I can just add this extra
thing here no no you can't the whole
thing here no no you can't the whole
point is that it's really really simple
point is that it's really really simple
tightly coupled code um you have to be
tightly coupled code um you have to be
you have to be very careful not to like
you have to be very careful not to like
break the Simplicity of
it okay we replace these turn
it okay we replace these turn
Aras then we
Aras then we
do you cool down I think this is whoops
do you cool down I think this is whoops
VI cool
down and then draw a text like this and
down and then draw a text like this and
we do not
encode ah crap how do I do
this e
okay uh I don't like this at
all we're going to just punt on the
all we're going to just punt on the
cooldowns to start
with yeah we're going to just punt on
with yeah we're going to just punt on
the cool
the cool
Downs because we're going to have to do
Downs because we're going to have to do
some string stuff
and what do we
have
have
return
zero uh we return zero down here don't
we so that only took us a half
we so that only took us a half
hour PR of view of model training setup
hour PR of view of model training setup
Jack is
great is it better to be honest I don't
great is it better to be honest I don't
know if it is
know if it is
better I really don't know if it is
better I really don't know if it is
better have you read like Jack's Library
better have you read like Jack's Library
code it's really awful they have like
code it's really awful they have like
especially in RL they have just like
especially in RL they have just like
tons of nested function definitions it's
tons of nested function definitions it's
like really gross functional bro code
like really gross functional bro code
it's like people who think that like
it's like people who think that like
hcll is like the most easy to read thing
hcll is like the most easy to read thing
ever it's really not and it's not only
ever it's really not and it's not only
that it's like they did that but then
that it's like they did that but then
they wanted to put some Fang style
they wanted to put some Fang style
objectoriented stuff into that as well
objectoriented stuff into that as well
so it's just the worst parts of
so it's just the worst parts of
objectoriented and functional code mixed
objectoriented and functional code mixed
together it's God awful
it's like an impressively badly designed
it's like an impressively badly designed
and it's not even the core Jacks it's
and it's not even the core Jacks it's
the fact that like Jacks exist and then
the fact that like Jacks exist and then
you have all these third party like
you have all these third party like
flaks and whatever other uh learning
flaks and whatever other uh learning
things around it and they just none of
things around it and they just none of
them make any sense
uh we have to still Port this draw bars
uh we have to still Port this draw bars
function don't
function don't
we okay let's put this down at the
we okay let's put this down at the
bottom now we
bottom now we
do void draw bars
on
on
TRL good for learning nrl's
TRL good for learning nrl's
good what TR what T what are you saying
good what TR what T what are you saying
for TRL
oh
TLX
TLX
wait this ls's thing yeah yeah yeah this
wait this ls's thing yeah yeah yeah this
is Lewis's thing but this is not RL this
is Lewis's thing but this is not RL this
is
is
rhf yeah I know this is Lewis's thing
like it does reinforcement learning it's
like it does reinforcement learning it's
not just arbitrary Transformer RL it's
not just arbitrary Transformer RL it's
specifically for
language very very very different thing
language very very very different thing
very different set of problems
is open
CL I don't really understand many of
CL I don't really understand many of
your messages Jason
there Canan or do I have to
there Canan or do I have to
do we'll see
do
this we we have to punt on the draw
text and then this one
text and then this one
here is also this goes
here is also this goes
into here as well but
we get the rectangles regardless
right
okay and we close this
okay and we close this
here
here
lines which is probably about what it's
lines which is probably about what it's
going to end up being
there's going to be a [ __ ] ton of
there's going to be a [ __ ] ton of
debugging involved with this
debugging involved with this
[Music]
[Music]
um yeah so what we're going to do here
um yeah so what we're going to do here
and I see that more people are joining
and I see that more people are joining
stream
stream
so this is what we're trying to get
so this is what we're trying to get
ported from scon Toc so that we can run
ported from scon Toc so that we can run
it in the
it in the
browser and you all can play with it um
browser and you all can play with it um
I just did the initial Port it's like 3
I just did the initial Port it's like 3
400 lines of rib stuff um from Python
400 lines of rib stuff um from Python
original to see uh so I just did the
original to see uh so I just did the
original port and then we're probably
original port and then we're probably
going to do like a really tight Loop
going to do like a really tight Loop
debugging type thing um in just a moment
debugging type thing um in just a moment
here I'm going to go use the restro real
here I'm going to go use the restro real
quick and then we'll do that we'll be
quick and then we'll do that we'll be
right back
all
right oh
right oh
wow 14 a second ago on YouTube
welcome I'm going to show you the
welcome I'm going to show you the
um the tight little debugging Loop that
um the tight little debugging Loop that
we're going to have here
so I should probably move the puffer for
so I should probably move the puffer for
a
second
second
um we're compiling the main things
um we're compiling the main things
are we've got all warnings on I might
are we've got all warnings on I might
have to remove that
initially I might have to remove this
initially I might have to remove this
initially because this is just going to
initially because this is just going to
spam way too much stuff but I like
spam way too much stuff but I like
uninitialized misleading
uninitialized misleading
indentation um and F sanitizer dress is
indentation um and F sanitizer dress is
the really big
the really big
one and the nice thing about doing this
one and the nice thing about doing this
in Native C compared to scyon is our
in Native C compared to scyon is our
compile times are going to be so much
compile times are going to be so much
better
better
so that's our compile
so that's our compile
time and now I have it limited to three
time and now I have it limited to three
errors so I just get to start here and
errors so I just get to start here and
start debugging super quick
have you ever thought about going on the
have you ever thought about going on the
machine learning Street
machine learning Street
talk I don't know I actually don't know
talk I don't know I actually don't know
very
very
many like AI podcasts and stuff
I mean pretty much I'll talk about
I mean pretty much I'll talk about
whatever um if it gives me a chance
whatever um if it gives me a chance
to you know promote puffer and uh share
to you know promote puffer and uh share
some of this stuff the one thing I want
some of this stuff the one thing I want
to avoid is like I don't know what this
to avoid is like I don't know what this
this specific podcast but the like
this specific podcast but the like
random AI speculation like Ai and
random AI speculation like Ai and
Society speculation stuff I'm not doing
Society speculation stuff I'm not doing
that
but if it's Tech if it's just talking
but if it's Tech if it's just talking
Tech that's
good unknown type oops
um
okay this needs to
be this
be this
right do I have this in Tex wrong
here just Hadid ho okay that's legit
here just Hadid ho okay that's legit
that's
cool what is
this I see so
o see
o see
these yeah this is the type of stuff I'm
these yeah this is the type of stuff I'm
not going to
not going to
be this is really freaking irresponsible
be this is really freaking irresponsible
in my
in my
mind I mean this is literally the thing
mind I mean this is literally the thing
I pretty much said on stream if I do
I pretty much said on stream if I do
this please shoot me right I think I
this please shoot me right I think I
said that yesterday right
rlms
rlms
yeah so here's the thing I consider that
yeah so here's the thing I consider that
type of stuff incredibly
type of stuff incredibly
irresponsible because it's one thing for
irresponsible because it's one thing for
me to be hanging out on stream and just
me to be hanging out on stream and just
like speculating about random stuff this
like speculating about random stuff this
is a very casual setting it's another
is a very casual setting it's another
thing when you have like a well produced
thing when you have like a well produced
podcast that's getting a bunch of views
podcast that's getting a bunch of views
going to people that don't know any
going to people that don't know any
better taking this stuff seriously right
better taking this stuff seriously right
it's like oh MIT PhD says that AI is
it's like oh MIT PhD says that AI is
going to kill us all it's like no no AI
going to kill us all it's like no no AI
PhD wildly speculates may as well be
PhD wildly speculates may as well be
throwing a dart you know a dart at a
throwing a dart you know a dart at a
dart bird A Million Miles
Away it's like but like scientists can't
Away it's like but like scientists can't
assign a probability that AI is going to
assign a probability that AI is going to
kill all of us that's what makes it so
kill all of us that's what makes it so
dangerous it's like no I can't assign a
dangerous it's like no I can't assign a
probability that Nanobots are going to
probability that Nanobots are going to
kill us all either
right come
on other thing I can't do is remember
on other thing I can't do is remember
how the hell struct assignments work in
how the hell struct assignments work in
C when I'm doing them in line like this
where is this thing
where is this thing
oops 500
assment skeptical
xrk was with the AI snake oil guide
xrk was with the AI snake oil guide
debunking a bunch of stuff I see okay
debunking a bunch of stuff I see okay
that's better that I saw the title's
that's better that I saw the title's
kind of clickbait but you know you get
kind of clickbait but you know you get
forgiven for
forgiven for
that ah it's a cast right wait what
that makes no sense
this is what I was looking for I don't
this is what I was looking for I don't
like this syntax though to be
honest I really don't like that c
intact really
intact really
obnoxious how do I do this without
obnoxious how do I do this without
making this a total mess
we'll use the weird Syntax for
now wait this is just a
pointer damn it
we'll do this for now uh I will do this
we'll do this for now uh I will do this
under
protest I do this under protest let it
protest I do this under protest let it
be
known I'm sure I'm going to find a
known I'm sure I'm going to find a
better way of doing this and GPT is just
better way of doing this and GPT is just
dumb as
dumb as
always
always
but who do unshit ify
coding under
coding under
duress
duress
nah Library function mem
nah Library function mem
copy what how do I not have mem
copy then standard lib
wait
void okay so I mean I think this is just
void okay so I mean I think this is just
GPT being stupid this is this has to
GPT being stupid this is this has to
just be wrong
right error expected
right error expected
expression so this just need like a cast
expression so this just need like a cast
like is it the same as right here
also what is the um the type of this I
also what is the um the type of this I
might not even have to do this because I
might not even have to do this because I
think RB
has
raw these are colors or something
raw these are colors or something
right
UV done
UV done
UV draw texture Pro
rectangle
right so this should actually
right so this should actually
be let's just fix it here and then we'll
be let's just fix it here and then we'll
see if it carries
over yeah let's fix the easier case
first so there's dun
first so there's dun
UV uh there's no reason to not just make
UV uh there's no reason to not just make
this rectangle
this rectangle
DV like
this and then we'll just
do
do
renderer yeah and then you can cast like
renderer yeah and then you can cast like
this
right okay so we can actually see here
right okay so we can actually see here
that um now it is
happy so I think that this will be this
happy so I think that this will be this
is a
is a
color
color
color asset map wait no this is
UVS so it's actually
UVS so it's actually
rectangle 16 asset map right like
this so this is just wrong
oops
nope wait the first two are actually
nope wait the first two are actually
zero aren't
they wait did this get all 16 1 2 3
they wait did this get all 16 1 2 3
three
three
four now this is did not get all 16 this
four now this is did not get all 16 this
did something
screwy okay I don't trust the
llm don't trust it not mess up my
data doesn't take that long to just do
data doesn't take that long to just do
this I don't even type that fast doesn't
this I don't even type that fast doesn't
take that
long
long
okay rectangle asset map wrong
okay rectangle asset map wrong
syntax uh this should be
expected
expression am I stupid why did I just
expression am I stupid why did I just
set this to color this is
rectangle one two yeah I think it got it
rectangle one two yeah I think it got it
right this time those look to be the
right this time those look to be the
same size
I know that I did this
before color colors equals
let's just do it like
let's just do it like
this uh
re angle
what does this
do I'm just screwing up syntact
somewhere color
somewhere color
colors
yeah rackets go here
array type is not
assignable um I can technically copy it
right
right
no where the heck is M
Copy isn't it in uh
Copy isn't it in uh
where the heck is it it's in standard
where the heck is it it's in standard
it's in string what or standard
it's in string what or standard
IO I think standard IO
IO I think standard IO
right d
Force oh
Force oh
okay this take a
okay this take a
size yes it does
oops damn stupid garbage Noob
site is that actually in
site is that actually in
string huh well that got us past this
string huh well that got us past this
error now what do we have
load
texture error
texture error
assigning to texture 2D
star okay these don't need to be
star okay these don't need to be
pointers there's absolutely no reason
pointers there's absolutely no reason
for these to be pointers
not at
all color this needs a
cast
cast
cast
1652 we forgot some semicolons Maybe
1660 screen width
70 incompatible type yeah so this is
70 incompatible type yeah so this is
game
renderer good now we in it compiles
uh
what oh this binds tightly
wait
really I think it's just
really I think it's just
this
this
somehow somehow something screwed up
somehow somehow something screwed up
here
that's weird
no member name camera
okay fair point we need a camera here
Undeclared n is
Undeclared oh this is
Undeclared oh this is
renderer of course
and Screen width I don't know why that
and Screen width I don't know why that
this redid uh the same [ __ ] again
this redid uh the same [ __ ] again
like
this okay so now we're all the way down
this okay so now we're all the way down
to
here uh no module named camera and map
here uh no module named camera and map
render
render
what put it in the wrong one or
what put it in the wrong one or
something
something
camera map
camera map
renderer oh wait
renderer oh wait
map yeah this is game
renderer we have this as fman
Undeclared
Undeclared
identifier this is
int and then
is is key down
is is key down
1736 that's way down there that's nice
1736 that's way down there that's nice
we just have to fix some API calls that
we just have to fix some API calls that
ported
incorrectly we're going to get this
incorrectly we're going to get this
pretty soon at least we're going to get
pretty soon at least we're going to get
it compiling pretty soon we'll see how
it compiling pretty soon we'll see how
long it takes to debug runtime
long it takes to debug runtime
errors I'm hopeful that we can have this
errors I'm hopeful that we can have this
running something that looks like the
running something that looks like the
old client
old client
today I'm
hopeful it is already five
hopeful it is already five
I got such a late start today that's my
bad I'll try to work
late
um
um
what instar actions
wait I'm trying to remember how actions
wait I'm trying to remember how actions
works ah you see here I have this Jank
works ah you see here I have this Jank
cast
right just so I can use the um
right just so I can use the um
nicer
syntax okay nice we're all the way down
syntax okay nice we're all the way down
to here now I forgot some semicolons
apparently a lot of
apparently a lot of
semicolons holy a lot of
semicolons and now we're already
1801 what's wrong with
1801 what's wrong with
this uh this is the end map
this uh this is the end map
let's do map let's just Define map up
let's do map let's just Define map up
top CU I think we're going to use this a
lot yeah so like down here this is now
lot yeah so like down here this is now
just
just
map and now this is
map and now this is
map then this is M red
incompatible this is just m
map we're all the way down to here
now this is map grid
whoops
whoops
1807 this is also map heads
uh all the way 1855 that's
uh all the way 1855 that's
nice what do we have
nice what do we have
here too many
here too many
arguments expected four have six
really start pause end
really start pause end
pause thickness
pause thickness
color well shoot
two yeah there you go that's the API
two yeah there you go that's the API
oops 18 6
