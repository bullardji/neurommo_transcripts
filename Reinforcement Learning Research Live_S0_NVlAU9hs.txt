Kind: captions
Language: en
Hello.
Hello.
We are back live.
Happy 4th.
Got a lot of stuff I want to do today.
Let me uh let me show that off real
Let me uh let me show that off real
quick.
quick.
Show the plan.
We have a thematically appropriate
We have a thematically appropriate
project for today
drones
or
welcome. commanded.
Today we're going to make the drone uh
Today we're going to make the drone uh
the drone swarm thing actually work and
the drone swarm thing actually work and
we're going to do something thematically
we're going to do something thematically
appropriate for the fourth with it
talk.
talk.
Uh,
Uh,
I will probably be doing the article
I will probably be doing the article
tomorrow
tomorrow
for most of the day.
I might work on it a little bit after
I might work on it a little bit after
this, but I do this is appropriate for
this, but I do this is appropriate for
the fourth. I would ideally I would like
the fourth. I would ideally I would like
to have this done for the fourth.
We're going to see if we can make the
We're going to see if we can make the
drones assemble themselves into the
drones assemble themselves into the
American flag.
Going to be cool.
I figure that'll be a cool demo that'll
I figure that'll be a cool demo that'll
get some people interested in Puffar.
And I actually have to go look at my own
And I actually have to go look at my own
flag.
marketing idea. Yeah,
marketing idea. Yeah,
I have to do a little bit of stuff like
I have to do a little bit of stuff like
that, right?
It's fun. It gets companies interested.
going to be
going to be
blue, blue, blue,
red, red,
red, red,
red, red.
half the flag.
It's tough to do like a down sampled
It's tough to do like a down sampled
American flag.
stripe is red.
Our flag's kind of complicated. All
Our flag's kind of complicated. All
right. It's not like
right. It's not like
It's not like the China flag or the
It's not like the China flag or the
Japan flag where it's super easy to know
Japan flag where it's super easy to know
what the heck it is.
at the stars for the stra the states and
at the stars for the stra the states and
that's like the stripes or the colonies
that's like the stripes or the colonies
or whatever the heck but like I don't
or whatever the heck but like I don't
think most people actually remember the
think most people actually remember the
order or how many are in each row or
order or how many are in each row or
whatever.
No, we like our flag.
Morning,
Brian. My name is Joseph.
I've been thinking about renaming the
I've been thinking about renaming the
channel. You kind of confuse everybody
channel. You kind of confuse everybody
when you rebrand it. The channel should
when you rebrand it. The channel should
probably just be my name or whatever
probably just be my name or whatever
because it's all of my stuff across a
because it's all of my stuff across a
bunch of different projects.
bunch of different projects.
But like my handle does not make a good
But like my handle does not make a good
YouTube like thing cuz my handle's J
YouTube like thing cuz my handle's J
Suarez 5341.
Suarez 5341.
It looks like autogender. Whatever.
Okay. So, we do the position
uh
Oh, we can literally just do it like
Oh, we can literally just do it like
this. Actually, this is super easy.
this. Actually, this is super easy.
We'll just turn the plane task into the
We'll just turn the plane task into the
flag task because it's basically the
flag task because it's basically the
same thing if you think about it.
same thing if you think about it.
We'll just change this into flag.
We have the reference flag, of course.
The aspect ratio of the flag, it's like
The aspect ratio of the flag, it's like
3 to one, isn't it?
3 to one, isn't it?
It's like three.
It's like three.
Can't do three times this.
I have to do 2/3.
Do like something like This
actually shouldn't take this like that
actually shouldn't take this like that
long. And I might even be able to just
long. And I might even be able to just
start working on the article today. I do
start working on the article today. I do
want to make sure that this is actually
want to make sure that this is actually
good though.
Initializer element is not constant.
Initializer element is not constant.
Why?
Uh yeah, this is not going to work with
Uh yeah, this is not going to work with
this pound decline, right?
Why is that an error?
Okay. Constant.
Okay. Constant.
I got to actually uh do reading up on
I got to actually uh do reading up on
why the heck that happens.
Oh, and
are.
So, if this flips the axis uh correctly,
So, if this flips the axis uh correctly,
then all we'll have to do is change the
then all we'll have to do is change the
drone colors and we should get a nice
drone colors and we should get a nice
flag effect. We'll just have to train a
flag effect. We'll just have to train a
slightly better policy.
Cool thing about these is I shouldn't
Cool thing about these is I shouldn't
even have to really retrain
handle with numbums.
Oh,
Oh,
it also kind of looks autogen. I don't
it also kind of looks autogen. I don't
know. My handle is that because I can
know. My handle is that because I can
get it everywhere, right? You can never
get it everywhere, right? You can never
actually get your handle. So, it's like
actually get your handle. So, it's like
if you don't just pick some random
if you don't just pick some random
number these days or have some
number these days or have some
incredibly specific username that's not
incredibly specific username that's not
actually based on your name. You won't
actually based on your name. You won't
get the same one everywhere.
get the same one everywhere.
Like my Twitch is the same, my uh my ex
Like my Twitch is the same, my uh my ex
is the same Discord, like they're all
is the same Discord, like they're all
the same.
the same.
Like the thing is that the solution to
Like the thing is that the solution to
this is to have people have like the
this is to have people have like the
extra,
extra,
you know, like the extra numbers that if
you know, like the extra numbers that if
you hover over you see, but that doesn't
you hover over you see, but that doesn't
work super well for social media stuff
work super well for social media stuff
because it's really easy to impersonate
because it's really easy to impersonate
people that way. So,
Okay, so here are our drones in a
Okay, so here are our drones in a
sphere.
sphere.
See, that's what they're trying to do.
See, that's what they're trying to do.
They have the follow task, the idle
They have the follow task, the idle
task, the hover task,
task, the hover task,
orbit follow line.
Okay. So, here's the flag as it's
Okay. So, here's the flag as it's
supposed to be. Uh, it's not terrible.
supposed to be. Uh, it's not terrible.
It is on the wrong axis though, I
It is on the wrong axis though, I
believe.
So,
it should be should it be wise or
it should be should it be wise or
something?
Try this.
Yeah. So, that's a good flag.
Yeah. So, that's a good flag.
Now all we have to do
Now all we have to do
actually set the drone colors.
Okay.
Okay, so here are our drones.
Flag is upside down. I can tell, right?
Oh, this is going to be super cool when
Oh, this is going to be super cool when
it works, though. I can tell.
If I can just flip it upside
Okay. So, I think we have to reestimate
Okay. So, I think we have to reestimate
like collisions or something here,
like collisions or something here,
right?
So the body sphere is radius. Wait, is
So the body sphere is radius. Wait, is
that the radius?
that the radius?
I think that is the radius. So to do our
I think that is the radius. So to do our
our ray lib docs here
is reream not showing.
Okay, stream is fine.
This is the radius. Yes.
This is the radius. Yes.
So
So
the body has a radius of 0.3.
And then the rotor has an additional
And then the rotor has an additional
0.15.
0.15.
That's going to be times two.
So, this says it should be size 0.6.
So, this says it should be size 0.6.
Is that true?
How big are these targets in comparison
How big are these targets in comparison
to the drones?
Oh, yeah. No, that's right. Cuz if those
Oh, yeah. No, that's right. Cuz if those
are 0.25, 25.
So yeah, this has got to be
So yeah, this has got to be
if we do 0.45 for the target, this will
if we do 0.45 for the target, this will
be the size of the spear.
be the size of the spear.
If the flag was moving in a circle for
If the flag was moving in a circle for
them to do it, we'll train a better
them to do it, we'll train a better
policy, Tim. Don't worry.
I want to make sure we get it so that it
I want to make sure we get it so that it
will look good when we have the policy
will look good when we have the policy
and then you know leave the RL to me. I
and then you know leave the RL to me. I
can always get RL to work.
Okay. So, is this the size of a drone?
Okay. So, is this the size of a drone?
Yeah, that's about the size of a drone.
Yeah, that's about the size of a drone.
Right.
Right.
So, this is a radius of 0.45.
So it's actually drones are colliding if
So it's actually drones are colliding if
they're within
they're within
basically within one unit
basically within one unit
of another drone is going to be
of another drone is going to be
collision.
So, I didn't think about that at all.
So, let's see what happens when I
So, let's see what happens when I
retrain with this dramatically larger
retrain with this dramatically larger
collision penalty.
Welcome YouTube folks.
Welcome YouTube folks.
For the people who got here uh recently,
For the people who got here uh recently,
I'm currently, since it is the 4th of
I'm currently, since it is the 4th of
July, happy 4th, we're training some
July, happy 4th, we're training some
drones to make a flag in midair with
drones to make a flag in midair with
reinforcement learning.
This will be good a good environment for
This will be good a good environment for
us to use in research. It will be a cool
us to use in research. It will be a cool
demo for people in industry and I think
demo for people in industry and I think
it'll just be a fun thing overall.
Okay, so this is noticeable noticeably
Okay, so this is noticeable noticeably
smaller reward. I think we were getting
smaller reward. I think we were getting
up to like 450
up to like 450
or before.
or before.
So this is essentially telling us that
So this is essentially telling us that
the task is harder now.
and the fact that it's actually still
and the fact that it's actually still
learning though is good.
Oh, it's actually Yeah, that's pretty
Oh, it's actually Yeah, that's pretty
good.
good.
Um, let's go check all the rewards. I'm
Um, let's go check all the rewards. I'm
sure at least some of these I've just
sure at least some of these I've just
defined stupidly.
defined stupidly.
Happy fourth, Brian.
update these rewards next.
May the 4th be battle one. That's May
May the 4th be battle one. That's May
5th, not not July 4th.
5th, not not July 4th.
Okay, so this is them attempting to form
Okay, so this is them attempting to form
a sphere.
a sphere.
This is them attempting to follow random
This is them attempting to follow random
targets.
We should put in a collision tracking
We should put in a collision tracking
term now because it they're like not as
term now because it they're like not as
close to their targets anymore, but it
close to their targets anymore, but it
seems like they're way better at not
seems like they're way better at not
colliding, which is roughly what we'd
colliding, which is roughly what we'd
expect.
Like look, they're all following, right?
Like look, they're all following, right?
They're all following this target, but
They're all following this target, but
they're doing it in a way where they're
they're doing it in a way where they're
trying to not collide.
Yeah, they do all form their line. Yeah,
Yeah, they do all form their line. Yeah,
but see this line is like it it's too
but see this line is like it it's too
close, so they can't actually do it.
close, so they can't actually do it.
That's going to hurt training quite a
That's going to hurt training quite a
bit.
Okay. So, let's fix up some of those
Okay. So, let's fix up some of those
tasks.
Mesmerizing. It'll be a lot more
Mesmerizing. It'll be a lot more
mesmerizing once they actually uh work
mesmerizing once they actually uh work
nicely. You will see.
are nice. Yeah, they should be cool.
Oh, yeah. That's our welcome.
Oh, yeah. That's our welcome.
I'm learning slowly.
Trying to think what we do about this
Trying to think what we do about this
line task.
You have to be kind of careful in
You have to be kind of careful in
reinforcement learning because when you
reinforcement learning because when you
give stuff impossible tasks like you can
give stuff impossible tasks like you can
kind of mess up the uh
kind of mess up the uh
rewards.
Yeah, I think we're going to do instead
Yeah, I think we're going to do instead
of line we'll do cube.
How bad is it going to be to do a cube?
Kind of have to, right? This is the only
Kind of have to, right? This is the only
one that's messed up cuz there's just
one that's messed up cuz there's just
not enough space.
There's no good way to generate uh that
There's no good way to generate uh that
formula, right? You just kind of have to
formula, right? You just kind of have to
like write the whole thing out
like write the whole thing out
annoyingly.
Wait, how many a cube has
Wait, how many a cube has
it 12 lines for a cube? Four, four, and
it 12 lines for a cube? Four, four, and
four. Yeah, it's 12.
There anything else I can do that's like
There anything else I can do that's like
has an easier mathematical formula
has an easier mathematical formula
or not really.
Maybe there's like a sampling based one.
Now this is something else.
Oh, we could just do cube instead.
Oh, we could just do cube instead.
That would be way easier, right?
4x4 by 4
4x4 by 4
is 64, right?
Yeah. So, we can just do that. That's
Yeah. So, we can just do that. That's
super easy. I was thinking of like the
super easy. I was thinking of like the
outline of a cube, but this is so much
outline of a cube, but this is so much
easier.
Hey Brad. Doing pretty well.
Hey Brad. Doing pretty well.
Pretty well.
Yeah, that's not a cube.
by the x percent.
Yeah. So it can't be divi uh divided by
Okay. So now since four we can do
Okay. So now since four we can do
four units
four units
four * x 8.
Okay. Almost
Okay. Almost
almost a cube.
Okay, that's a cube. It's just offset.
Okay, that's a cube. It's just offset.
Weird.
What do you think is the biggest
What do you think is the biggest
challenge in getting RL agents to
challenge in getting RL agents to
generalize to different environments?
generalize to different environments?
Should I do a little segment on this?
Should I do a little segment on this?
I do have a clipping thing that maybe
I do have a clipping thing that maybe
will let will maybe will let me put this
will let will maybe will let me put this
on YouTube if I explain this real quick.
This is a pet peeve of mine.
time.
Yeah. This is a pet peeve of mine that
Yeah. This is a pet peeve of mine that
people say, "Oh, reinforcement learning
people say, "Oh, reinforcement learning
doesn't generalize."
doesn't generalize."
It doesn't even require you to know
It doesn't even require you to know
anything about reinforcement learning to
anything about reinforcement learning to
understand the problem here.
understand the problem here.
I I don't know people have these magical
I I don't know people have these magical
blinders when it comes to RL. So let me
blinders when it comes to RL. So let me
give you the analog right of what this
give you the analog right of what this
looks like in supervised learning. So
looks like in supervised learning. So
let's say that you train an image model
let's say that you train an image model
on like cat and then you say well can we
on like cat and then you say well can we
use the same model now that can detect
use the same model now that can detect
cats to detect dogs.
And if you ask anybody in supervised
And if you ask anybody in supervised
learning, at least with traditional
learning, at least with traditional
methods, no, this does not work. This is
methods, no, this does not work. This is
not how we train models. This type of
not how we train models. This type of
generalization doesn't work at all
generalization doesn't work at all
because something that is only ever seen
because something that is only ever seen
cats is not going to be able to
cats is not going to be able to
recognize a distinct equally complex
recognize a distinct equally complex
topic. This is like asking you to study
topic. This is like asking you to study
mathematics. Okay? And now because you
mathematics. Okay? And now because you
know mathematics, you should be able to
know mathematics, you should be able to
like zero shot know chemistry or some
like zero shot know chemistry or some
other subject. So, how do you actually
other subject. So, how do you actually
make this work? Well, you don't just
make this work? Well, you don't just
train on cat, right? You train on like
train on cat, right? You train on like
cat,
cat,
snake,
uh, chair,
computer,
and then you have a whole bunch of new
and then you have a whole bunch of new
topics. Okay? And then the
topics. Okay? And then the
representation that you learn from all
representation that you learn from all
of these
of these
maybe lets you learn an equally
maybe lets you learn an equally
difficult concept,
difficult concept,
right? This kind of works. So, what does
right? This kind of works. So, what does
this look like in reinforcement
this look like in reinforcement
learning? Okay, train on pong
breakout.
Literally the same problem. So, if you
Literally the same problem. So, if you
were to train on a ton of different
were to train on a ton of different
environments, right, like
environments, right, like
address.
And if you were to train on hundreds of
And if you were to train on hundreds of
these, then yeah, you can actually
these, then yeah, you can actually
potentially get some transfer. It just
potentially get some transfer. It just
turns out, one, we don't have a ton of
turns out, one, we don't have a ton of
environments, and two, there's some
environments, and two, there's some
annoying infrastructure challenges that
annoying infrastructure challenges that
make it slightly more difficult than
make it slightly more difficult than
just putting different images into the
just putting different images into the
same model.
same model.
But yes, generalization does work in
But yes, generalization does work in
reinforcement learning. we have very
reinforcement learning. we have very
many instances demonstrating that like
many instances demonstrating that like
if we generate a whole bunch of tasks,
if we generate a whole bunch of tasks,
we can solve new tasks never seen of the
we can solve new tasks never seen of the
same type.
same type.
You just kind of have to think about it
You just kind of have to think about it
in this terms of uh in terms of this
in this terms of uh in terms of this
parallel.
parallel.
So there you go.
Let me grab a cup of coffee and I will
Let me grab a cup of coffee and I will
answer any questions on that.
That makes sense, Brad?
Hey, major. Welcome back from my 30
Hey, major. Welcome back from my 30
secondond coffee. You feel my coffee
secondond coffee. You feel my coffee
break.
That is fair. Perhaps it's not the right
That is fair. Perhaps it's not the right
question. It isn't the right question to
question. It isn't the right question to
ask. But the thing is, you're not the
ask. But the thing is, you're not the
first one to ask it that way.
And this is one of the things that
And this is one of the things that
drives me crazy in reinforcement
drives me crazy in reinforcement
learning all the time is you have RL
learning all the time is you have RL
researchers, right, who will basically
researchers, right, who will basically
just say, "Oh, RL is bad because it
just say, "Oh, RL is bad because it
can't generalize from one environment to
can't generalize from one environment to
another. I will go spend two years
another. I will go spend two years
working on this problem. You don't need
working on this problem. You don't need
to spend two years working on this
to spend two years working on this
problem to look at it and do the exact
problem to look at it and do the exact
thing I just did and say you will fail
thing I just did and say you will fail
because that's just not a thing that
because that's just not a thing that
even makes sense." like there's no
even makes sense." like there's no
reason to even suppose that that's
reason to even suppose that that's
possible.
But it doesn't matter that it's not
But it doesn't matter that it's not
possible, right? If we just keep making
possible, right? If we just keep making
our methods better and eventually we
our methods better and eventually we
scale the stuff and figure out there are
scale the stuff and figure out there are
like a few infrastructure problems
like a few infrastructure problems
making it a little annoying to scale to
making it a little annoying to scale to
more tasks. It has been done. It just
more tasks. It has been done. It just
hasn't been done at like very small
hasn't been done at like very small
scale. I've been meaning to do this soon
scale. I've been meaning to do this soon
because I actually have very very
because I actually have very very
convincing evidence that RL generalizes
convincing evidence that RL generalizes
uh from like my various experiments I've
uh from like my various experiments I've
run. It's just at smaller scale.
run. It's just at smaller scale.
But yeah, like RL kind of does this all
But yeah, like RL kind of does this all
the time where they fail to draw
the time where they fail to draw
parallels to other areas of ML where
parallels to other areas of ML where
these questions have been answered and
these questions have been answered and
instead they spend a lot of time trying
instead they spend a lot of time trying
to solve problems that are pretty
to solve problems that are pretty
clearly not solvable,
clearly not solvable,
right?
And actually, Brad, let me let me just
And actually, Brad, let me let me just
show you how bad this is.
So, I interned at OpenAI when I was
So, I interned at OpenAI when I was
I was like 20, maybe 21 at the time.
uh if they had offered me a full-time
uh if they had offered me a full-time
position, it would have been to work on
position, it would have been to work on
this
this
this paper.
this paper.
Okay, this is hideand-seek.
So in this paper,
So in this paper,
one of the things that they wanted to do
one of the things that they wanted to do
was they wanted to ask, can we train
was they wanted to ask, can we train
these agents to play this game and then
these agents to play this game and then
have these same agents transfer to other
have these same agents transfer to other
tasks in the same environment, mind you.
tasks in the same environment, mind you.
So doing other tasks in the same
So doing other tasks in the same
environment. It was stuff like, can we
environment. It was stuff like, can we
have them count objects in this
have them count objects in this
environment? And we trained them to like
environment? And we trained them to like
move the things to a specific place. And
move the things to a specific place. And
before they even started writing a
before they even started writing a
single line of code on this project, I
single line of code on this project, I
told them that it was doomed to fail.
told them that it was doomed to fail.
And I basically made the exact same
And I basically made the exact same
argument. This was 2018 2019. I made the
argument. This was 2018 2019. I made the
exact same argument that I gave to them,
exact same argument that I gave to them,
which is, hey, look, if you want this to
which is, hey, look, if you want this to
work, you're going to have to train the
work, you're going to have to train the
agent on a whole bunch of different
agent on a whole bunch of different
tasks and then give them some tasks that
tasks and then give them some tasks that
are new that are of the same complexity
are new that are of the same complexity
or ideally a little bit easier and then
or ideally a little bit easier and then
it'll work, right? If you train on at
it'll work, right? If you train on at
least several hundred tasks, maybe more,
least several hundred tasks, maybe more,
and then you give them tasks that are
and then you give them tasks that are
specified with, you know, the same sort
specified with, you know, the same sort
of format that are maybe even a little
of format that are maybe even a little
easier, then it'll work. They didn't
easier, then it'll work. They didn't
listen to me. They wanted to just try it
listen to me. They wanted to just try it
anyways. And what happened,
the exact thing that I told them would
the exact thing that I told them would
happen.
Basically, in most of these tasks,
Basically, in most of these tasks,
it makes almost no difference whether
it makes almost no difference whether
they pre-train it or train it from
they pre-train it or train it from
scratch. Doesn't help. Sometimes you get
scratch. Doesn't help. Sometimes you get
lucky and one of the tasks ends up being
lucky and one of the tasks ends up being
pretty similar, but for the most part
pretty similar, but for the most part
doesn't work.
So, the question that you asked was not
So, the question that you asked was not
necessarily a stupid question in the
necessarily a stupid question in the
sense that this is a project, right?
sense that this is a project, right?
where world class RL researchers spent
where world class RL researchers spent
over a year on this. I think it was
over a year on this. I think it was
close to two.
Now, mind you, I had the answer correct
Now, mind you, I had the answer correct
from the start. Um,
from the start. Um,
but this tends to be one of those things
but this tends to be one of those things
that I'm pretty good at
is like coming up with those really
is like coming up with those really
basic obvious arguments that don't even
basic obvious arguments that don't even
require you to understand anything about
require you to understand anything about
the field to like see why something
the field to like see why something
makes sense or doesn't make sense.
for some reason in RL especially like
for some reason in RL especially like
that type of thing is just very rare
that type of thing is just very rare
and that's why puffer lib is allowed to
and that's why puffer lib is allowed to
exist because in a sane field where
exist because in a sane field where
people do things a sane way I would not
people do things a sane way I would not
be able to make something that is a
be able to make something that is a
thousand times faster than everything
thousand times faster than everything
else
I actually, and I wrote this in the
I actually, and I wrote this in the
article, uh, this is a definitely top 10
article, uh, this is a definitely top 10
result in reinforcement learning. At one
result in reinforcement learning. At one
point, it was a top five result. I don't
point, it was a top five result. I don't
know if it's a top five result anymore.
know if it's a top five result anymore.
It's probably still just a top 10 result
It's probably still just a top 10 result
in reinforcement learning. I actually
in reinforcement learning. I actually
personally think that our latest result
personally think that our latest result
on neural MMO is better than this. Like
on neural MMO is better than this. Like
holistically, as far as a RL result
holistically, as far as a RL result
goes, I think this is a better result
goes, I think this is a better result
than emergent tool use.
This thing actually does emergently use
This thing actually does emergently use
tools as well, right?
Takes it and it doesn't even like it has
Takes it and it doesn't even like it has
to actually go figure out where the
to actually go figure out where the
tools are here. It's trying to figure
tools are here. It's trying to figure
out how it can get that one.
out how it can get that one.
What are the top five?
What are the top five?
For me, the top one by a mile is OpenAI
For me, the top one by a mile is OpenAI
5. It's Dota. I love that project. Like,
5. It's Dota. I love that project. Like,
you can basically learn almost
you can basically learn almost
everything you need to know about
everything you need to know about
reinforcement learning and how the field
reinforcement learning and how the field
will be solved and actually a lot of
will be solved and actually a lot of
what I've done for Puffer from just that
what I've done for Puffer from just that
one paper.
one paper.
Uh, Alpha Star I would put as a a
Uh, Alpha Star I would put as a a
somewhat close second.
somewhat close second.
I would put Go in there. I think I put
I would put Go in there. I think I put
Go number three, but keep in mind I
Go number three, but keep in mind I
could just not be respecting the
could just not be respecting the
difficulty of Go enough. The thing that
difficulty of Go enough. The thing that
makes Starcraft and Dota uh better for
makes Starcraft and Dota uh better for
me is like they require a lot of
me is like they require a lot of
different types of reasoning that are
different types of reasoning that are
really kind of obvious. And it's a heck
really kind of obvious. And it's a heck
of a lot easier to play a bit of uh of
of a lot easier to play a bit of uh of
Dota or play a little bit of Starcraft
Dota or play a little bit of Starcraft
and kind of understand why the game is
and kind of understand why the game is
hard than to play like a bit of Go. You
hard than to play like a bit of Go. You
kind of just won't understand anything
kind of just won't understand anything
for a very long time. Um
for a very long time. Um
the number three and the number four
the number three and the number four
slots get harder. So for quite a while
slots get harder. So for quite a while
back in that era it was uh capture the
back in that era it was uh capture the
flag in emergent tool use were my uh
flag in emergent tool use were my uh
number four and number five. Now since
number four and number five. Now since
then there's been stuff like uh
then there's been stuff like uh
deepminded Xland
deepminded Xland
and there have been like some other
and there have been like some other
results and not like just not straight
results and not like just not straight
RL research but applications of it that
RL research but applications of it that
have been pretty good. And by the way,
have been pretty good. And by the way,
when I'm saying top five, I'm talking
when I'm saying top five, I'm talking
about like largecale results of solving
about like largecale results of solving
a problem with RL in a way that tells us
a problem with RL in a way that tells us
something about RL itself, right? So
something about RL itself, right? So
obviously like the original stuff like
obviously like the original stuff like
PO algorithms, I'm not considering those
PO algorithms, I'm not considering those
in that same class.
in that same class.
But in terms of like the impressive
But in terms of like the impressive
results that change the way you think
results that change the way you think
about what RL can do, it might even
about what RL can do, it might even
still be those. I probably put Xand. Um,
still be those. I probably put Xand. Um,
where do I put Xland?
where do I put Xland?
Got to be like number three or four
Got to be like number three or four
after those.
after those.
But I don't know. Since then, you know,
But I don't know. Since then, you know,
we've actually we have two results in
we've actually we have two results in
Puffer that I think are up there now.
Puffer that I think are up there now.
Solving Pokemon, well, not solving, but
Solving Pokemon, well, not solving, but
beating Pokemon Red with reinforcement
beating Pokemon Red with reinforcement
learning.
learning.
Crazy result. not quite as clean as I
Crazy result. not quite as clean as I
would have liked it to have been. Um,
would have liked it to have been. Um,
mainly just because the end was slow.
mainly just because the end was slow.
But yeah, Pokemon Red
But yeah, Pokemon Red
and then now we have Neural MMO 3.
and then now we have Neural MMO 3.
These are our two what I would say are
These are our two what I would say are
our two big results.
Don't discount the puffer.
I haven't watched the presentation,
I haven't watched the presentation,
Brad, but if you're talking about the
Brad, but if you're talking about the
one that's like
one that's like
watching like watching the Atari and
watching like watching the Atari and
then like having a robot like play the
then like having a robot like play the
thing,
thing,
it's not the direction I think is going
it's not the direction I think is going
to like be the useful one for RL at all.
to like be the useful one for RL at all.
It's cool work and John Carmarmac is
It's cool work and John Carmarmac is
amazing. Um, but as far as the direction
amazing. Um, but as far as the direction
that that line of inquiry goes, I've
that that line of inquiry goes, I've
seen it and I it's not the direction I
seen it and I it's not the direction I
think that we need to go uh to make this
think that we need to go uh to make this
field actually work. And to follow up
field actually work. And to follow up
and answer that, what does it mean for
and answer that, what does it mean for
RL to be solved?
RL to be solved?
Well, it means a lot of things. I I
Well, it means a lot of things. I I
would say that we have fixed
would say that we have fixed
reinforcement learning in the last year.
reinforcement learning in the last year.
We have not solved it. And by fixed, I
We have not solved it. And by fixed, I
mean that if one year ago you were to
mean that if one year ago you were to
try to do literally anything in
try to do literally anything in
reinforcement learning, it's slow. It's
reinforcement learning, it's slow. It's
janky. It doesn't make sense. And
janky. It doesn't make sense. And
there's not a single person in the world
there's not a single person in the world
that can reliably predict the outcome of
that can reliably predict the outcome of
almost any experiment.
almost any experiment.
It's just a complete blackmagic mess.
It's just a complete blackmagic mess.
Now we're at the point where we can run
Now we're at the point where we can run
stuff fast. We can mostly predict the
stuff fast. We can mostly predict the
outcome of what's going to happen. And
outcome of what's going to happen. And
we have automated tools for handling a
we have automated tools for handling a
lot of the unintuitive bits.
Now I think RL can learn way faster. I
Now I think RL can learn way faster. I
think that there are lots of edge case
think that there are lots of edge case
problems where it's not very good where
problems where it's not very good where
it could be good.
it could be good.
Right? Um
sample efficiency still needs to be
sample efficiency still needs to be
tackled but in a very different way than
tackled but in a very different way than
it's been approached ever.
it's been approached ever.
Generalizability, same thing, but needs
Generalizability, same thing, but needs
to be approached in a different way than
to be approached in a different way than
it's been approached ever. Lots of
it's been approached ever. Lots of
different problems
different problems
solved would be in my sense like
solved would be in my sense like
becoming a mature area where the only
becoming a mature area where the only
progress that is made is incremental.
progress that is made is incremental.
Basically, the field gets saturated to a
Basically, the field gets saturated to a
point where it's like it works very well
point where it's like it works very well
and you can really only make incremental
and you can really only make incremental
progress on it no matter what you do.
I can I have no idea
I can I have no idea
what you're talking about though. Oh,
what you're talking about though. Oh,
hey, that guy's uh the one that did
hey, that guy's uh the one that did
Pokemon Red
Pokemon Red
is the main uh the lead on that. We were
is the main uh the lead on that. We were
just talking about that as uh they were
just talking about that as uh they were
asking for the top five results in
asking for the top five results in
reinforcement learning and uh I think
reinforcement learning and uh I think
Pokemon gets a slot in there. Now,
Pokemon gets a slot in there. Now,
will RL be applicable to everything? No.
will RL be applicable to everything? No.
not well not uniquely applicable to
not well not uniquely applicable to
everything. Let's say you do actually
everything. Let's say you do actually
need generative models for language and
need generative models for language and
vision in areas where you just have a
vision in areas where you just have a
ton of data and you need to compress it
ton of data and you need to compress it
pretty much. Um supervised learning
pretty much. Um supervised learning
problems like you're not going to learn
problems like you're not going to learn
NLP from scratch with RL. It's just a
NLP from scratch with RL. It's just a
very inefficient way to do that.
But similarly, I don't think you're
But similarly, I don't think you're
solving everything with LLMs either
solving everything with LLMs either
because the priors that you get from
because the priors that you get from
understanding vision and understanding
understanding vision and understanding
language do not help you solve fiddly
language do not help you solve fiddly
unintuitive optimization problems where
unintuitive optimization problems where
our tiny models are superhuman.
our tiny models are superhuman.
I've been so busy I haven't touched
I've been so busy I haven't touched
Puffer 3 in a couple of weeks. Puffer 3
Puffer 3 in a couple of weeks. Puffer 3
is very good. Trying to spend 30 minutes
is very good. Trying to spend 30 minutes
to track down why there was an obspace
to track down why there was an obspace
violation
violation
in the new version.
in the new version.
OB space. Did you send me a an like a a
OB space. Did you send me a an like a a
link or an issue on that that I ignored
link or an issue on that that I ignored
or didn't see?
I also got super busy with the release
I also got super busy with the release
stuff.
Oh yeah, that guy. We're doing um
Oh yeah, that guy. We're doing um
we're doing drone swarms today. We're
we're doing drone swarms today. We're
training drones to like hit a bunch of
training drones to like hit a bunch of
different targets and different shapes.
Inky and I ran into it, so we disabled
Inky and I ran into it, so we disabled
the OB space checks temporarily.
I mean, you can do that. Yeah,
if you send me a repro, I will uh I'll
if you send me a repro, I will uh I'll
look like I'll look into it for sure.
And since we have a fair few folks here,
And since we have a fair few folks here,
as usually happens when I'm yakking up
as usually happens when I'm yakking up
stuff a whole bunch,
stuff a whole bunch,
all open source stuff, all open source
all open source stuff, all open source
RL puffer.ai. I the repo to help us out.
RL puffer.ai. I the repo to help us out.
Discord to get involved with dev.
What we're doing at the moment is we are
What we're doing at the moment is we are
training a bunch of drones to fly into
training a bunch of drones to fly into
various shapes. And because it's the
various shapes. And because it's the
fourth, we're going to include the
fourth, we're going to include the
American flag as a shape in there.
Ah, there we go. Okay, so that's the
Ah, there we go. Okay, so that's the
cube shape.
Y for fix for torch.n
not being a tensor.
not being a tensor.
So, where are you getting nans? Because
So, where are you getting nans? Because
usually once you have nans in anything,
usually once you have nans in anything,
it's kind of GG. And even if you don't
it's kind of GG. And even if you don't
make the thing crash, like even if the
make the thing crash, like even if the
program doesn't crash, which admittedly
program doesn't crash, which admittedly
is nice for sweeps, um you're still
is nice for sweeps, um you're still
going to like immediately crash all
going to like immediately crash all
learning.
It's in a debug setting. I have
It's in a debug setting. I have
debug, but like what are you can you
debug, but like what are you can you
explain what you're doing with the nans?
Offerel 442
I assume not here, right?
Oh, is it NAMS on variance? Is this what
Oh, is it NAMS on variance? Is this what
it is?
Oh, yeah. You can PR that. I'll I'll
Oh, yeah. You can PR that. I'll I'll
just merge that instantly. That's fine.
just merge that instantly. That's fine.
I haven't looked at this in a while.
I haven't looked at this in a while.
That's fine. I can I can add that.
Doesn't have an item.
Doesn't have an item.
Yeah, you can you can PR that. That's
Yeah, you can you can PR that. That's
fine.
fine.
Or I mean I can just like What did you
Or I mean I can just like What did you
do? Did you just do like torchtensor of
do? Did you just do like torchtensor of
it? Is it just like torchensor
like this?
Or honestly we can just do torch.n Nan
Or honestly we can just do torch.n Nan
else
else
do item
like this probably.
Oh yeah, we can just one line that right
Oh yeah, we can just one line that right
like this.
like this.
What you're doing is beer is better.
What you're doing is beer is better.
Yeah, this should be good. I hate adding
Yeah, this should be good. I hate adding
little stupid checks everywhere when I
little stupid checks everywhere when I
can avoid it.
Okay, let's make sure that uh the rest
Okay, let's make sure that uh the rest
of these tasks
of these tasks
are reasonably presented. I believe the
are reasonably presented. I believe the
only one that's still weird is the Congo
only one that's still weird is the Congo
task
task
because I think that they're too close
because I think that they're too close
together.
Okay, this is good.
Let's see if we can train this.
So the hope here is that because we have
So the hope here is that because we have
more reasonable tasks that this should
more reasonable tasks that this should
be more stable.
Actually we can kind of check this a
Actually we can kind of check this a
little bit.
Okay, so here is episode length.
Okay, so here is episode length.
We want PF or score. Either of these
We want PF or score. Either of these
metrics is what we want. Probably score
metrics is what we want. Probably score
is better.
is better.
So this is the score previously.
So this is the score previously.
We'll see if this makes any sort of
We'll see if this makes any sort of
difference.
goal is to get nice stable clean drone
goal is to get nice stable clean drone
policies. And uh they should be able to
policies. And uh they should be able to
form a sphere, form a cube, follow each
form a sphere, form a cube, follow each
other, follow one specific point without
other, follow one specific point without
crashing for the most part. You should
crashing for the most part. You should
actually add a collision log in here as
actually add a collision log in here as
well.
We have add log. Okay.
Last collision episode length
full of float collisions.
that the agent.
Okay. 428
This is our latest policy.
Form a rough sphere.
Form a rough sphere.
Could be better for sure. Right.
Could be better for sure. Right.
This is them just like fly around. Don't
This is them just like fly around. Don't
collide. They like want to roughly track
collide. They like want to roughly track
some spheres, but that's all
lies. Man,
lies. Man,
this is cool.
form cube.
Oh, it's definitely starting to get
Oh, it's definitely starting to get
there.
Tricky though.
Go get the collision rate thing working
Go get the collision rate thing working
real quick.
Have to take a quick break to kill this
Have to take a quick break to kill this
fly in a second. Driving me nuts.
B rate.
Okay. So, we want collision and OO.
Knowing what you know about RL, do you
Knowing what you know about RL, do you
anticipate the big LM labs will be able
anticipate the big LM labs will be able
to harness it for huge intelligence
to harness it for huge intelligence
leaps?
leaps?
Uh, possibly yes.
Uh, possibly yes.
But the funny thing is they will be
But the funny thing is they will be
using a tiny tiny fraction of what RL's
using a tiny tiny fraction of what RL's
actually capable of.
They're kind of doing like ultra baby
They're kind of doing like ultra baby
mode reinforcement learning.
I mean, you're right that it's going to
I mean, you're right that it's going to
do a bunch of stuff. I just think that
do a bunch of stuff. I just think that
you're like you're going to get a tiny
you're like you're going to get a tiny
tiny fraction of what it can actually do
tiny fraction of what it can actually do
and your feedback loop for research is
and your feedback loop for research is
incredibly inefficient because the
incredibly inefficient because the
models are so damn big.
results with 80 bill and 32 bill models.
results with 80 bill and 32 bill models.
Yeah, those are still huge.
And those are still like the experiment
And those are still like the experiment
loop is still incredibly incredibly slow
loop is still incredibly incredibly slow
and expensive for stuff like that.
relative to 500 bill.
relative to 500 bill.
I mean, the way I look at it, that's
I mean, the way I look at it, that's
literally like one order of magnitude,
literally like one order of magnitude,
right?
right?
One order of magnitude difference.
We're doing stuff like what? Five. No,
We're doing stuff like what? Five. No,
six.
or
or
six orders of magnitude smaller I
six orders of magnitude smaller I
believe
sometimes five
it's four or five if I'm wrong
it's four or five if I'm wrong
it's still it's like massive my friends.
Okay, so we actually do see that we get
Okay, so we actually do see that we get
slightly better performance now than
slightly better performance now than
before after we fixed the tasks,
before after we fixed the tasks,
but it's still not perfect.
What about the collision rate?
Okay, so collision rate goes down.
Let's try a few things real quick.
Let's try a few things real quick.
Let's actually let's see what our model
Let's actually let's see what our model
looks like first.
looks like first.
I tend to hope that the large results
I tend to hope that the large results
will work their way down to smaller
will work their way down to smaller
models. Yeah. So, I'm just doing it the
models. Yeah. So, I'm just doing it the
other way, man. Right.
other way, man. Right.
I'm like, "All right, screw it. I'm just
I'm like, "All right, screw it. I'm just
going to do stuff at small scale and
going to do stuff at small scale and
hope it scales up.
Track various metrics." Oh, yeah. It's
Track various metrics." Oh, yeah. It's
very easy. You saw it like you saw how
very easy. You saw it like you saw how
quickly I added all that stuff, right?
quickly I added all that stuff, right?
You pretty much just add some stuff to
You pretty much just add some stuff to
the C and export it and it just gets
the C and export it and it just gets
picked up automatically.
picked up automatically.
There's some of the tools that we've
There's some of the tools that we've
built for this stuff. Yeah.
Ongo line here.
Interesting.
I wonder to what extent
What do you I think
What do you I think
with the test time comput
you mean test time compute
and I'm sure they're very happy about it
and I'm sure they're very happy about it
because instead of them training a uh a
because instead of them training a uh a
really really big model right they're
really really big model right they're
letting you pay exponentially more
letting you pay exponentially more
for results at test time.
I mean they introduced exponentially
I mean they introduced exponentially
more expensive evaluation, right?
which is actually kind of funny because
which is actually kind of funny because
like
like
hey if you want to get results on this
hey if you want to get results on this
one specific task you can spend more
one specific task you can spend more
compute.
compute.
What I do with a lot of my reinforcement
What I do with a lot of my reinforcement
learning stuff is hey if you want to get
learning stuff is hey if you want to get
results on this one specific task you
results on this one specific task you
can just train a model from scratch in
can just train a model from scratch in
seconds.
really skeptical whether they're the
really skeptical whether they're the
right path. I give them a one and three.
right path. I give them a one and three.
I think that they will be relevant and
I think that they will be relevant and
useful, but I don't think it's going to
useful, but I don't think it's going to
be the only thing we need.
Yeah, it's the thing is that they need
Yeah, it's the thing is that they need
to hype everything because they need to
to hype everything because they need to
get funding and they need to get funding
get funding and they need to get funding
at like the scale of tens of billions.
So like of course this is going to
So like of course this is going to
produce a really screwy setting, right?
produce a really screwy setting, right?
in which like people are making
in which like people are making
ridiculous claims about stuff and just
ridiculous claims about stuff and just
lying right and left and then the real
lying right and left and then the real
researchers are like but we just want to
researchers are like but we just want to
do our research and we want to make the
do our research and we want to make the
things work and it's it's not a good
things work and it's it's not a good
setting.
setting.
It's not really a good setting for
It's not really a good setting for
anyone involved.
We got to redo this. All over the place.
Okay. So, all I did is I made the
Okay. So, all I did is I made the
horizon longer so that you actually can
horizon longer so that you actually can
see uh the hope is that the drones will
see uh the hope is that the drones will
actually have time to figure out how to
actually have time to figure out how to
align themselves at the final bits of
align themselves at the final bits of
the task
the task
cuz I think what was happening is
cuz I think what was happening is
they're just getting like 80% of the way
they're just getting like 80% of the way
there and then they're running out of
there and then they're running out of
time.
is this article did really well.
is this article did really well.
My best article by a mile.
My best article by a mile.
If you have not read this yet,
If you have not read this yet,
I do recommend it.
This and Pokemon are the two uh best
This and Pokemon are the two uh best
results powered by Puffer.
like it too.
like it too.
All for the algorithm.
All for the algorithm.
Does that even do anything? I don't
Does that even do anything? I don't
usually like my own posts.
If I were designing the algorithm, I
If I were designing the algorithm, I
would just not like I would make that
would just not like I would make that
not do anything.
I want the P. I want my pad on the back
I want the P. I want my pad on the back
button.
I would wait it down for self like. I'd
I would wait it down for self like. I'd
probably do that as Well,
Okay. So, here is
is it just me or they like not None of
is it just me or they like not None of
them are like perfectly on the target,
them are like perfectly on the target,
right?
Okay. This one they're not really
Okay. This one they're not really
expected to be.
I notice they're not act like they're
I notice they're not act like they're
not actually ever getting directly on
not actually ever getting directly on
the target.
They should definitely be able to do
They should definitely be able to do
that if I do like the hover task or
that if I do like the hover task or
whatever.
Yeah, there's something wrong if they're
Yeah, there's something wrong if they're
not able to get directly to the target.
Let me try just hover.
They look like molecules.
They look like molecules.
I mean, if you want to make some
I mean, if you want to make some
molecule sims, I'm like, that's
molecule sims, I'm like, that's
the thing I actually most want to do
the thing I actually most want to do
with puffer lib. The thing I want to do
with puffer lib. The thing I want to do
the absolute most is like some sort of
the absolute most is like some sort of
ridiculous low-level material sim that
ridiculous low-level material sim that
just like invents a ton of new materials
just like invents a ton of new materials
and like I don't know, discovers miracle
and like I don't know, discovers miracle
drugs and all the things.
So, if you want to go start on that
So, if you want to go start on that
crazy mad scientist arc,
solve the threebody problem with RL.
Ow,
Ow,
you're learning.
you're learning.
Well, actually, wait.
You need a stable sim, right?
I guess it's not that slow. I don't
I guess it's not that slow. I don't
know.
know.
There are a lot of problems that you can
There are a lot of problems that you can
probably get fast approximate solutions
probably get fast approximate solutions
to, but the problem with that is like
to, but the problem with that is like
being approximate causes chaos.
Is it even learnable? Like yeah, but the
Is it even learnable? Like yeah, but the
thing is that it's a chaotic process. So
thing is that it's a chaotic process. So
like approximating that is not fun.
Oh, it's not training on all the tasks.
That would do it.
That would do it.
Let's see what happens when we just
Let's see what happens when we just
train him to hover.
If it's not exact, like if this doesn't
If it's not exact, like if this doesn't
exactly solve, then there's a problem
exactly solve, then there's a problem
because this is a really easy task.
incredibly
stupid.
Okay, so we're getting 98%
Almost no collisions.
Earth nearly one.
So if we eval this, the drone should
So if we eval this, the drone should
just be hovering.
just be hovering.
You can see they are hovering.
I actually still want to improve this a
I actually still want to improve this a
little bit because like
little bit because like
they should all be exactly on target and
they should all be exactly on target and
I don't know why they're not.
I don't know why they're not.
Very easy problem. So, they probably
Very easy problem. So, they probably
can't see why they're wrong. And
can't see why they're wrong. And
probably if we fix this task, it'll fix
probably if we fix this task, it'll fix
all the other ones.
The sensors are broken. This is why sims
The sensors are broken. This is why sims
are amazing,
are amazing,
right? simulation allows us to isolate
right? simulation allows us to isolate
to isolate the causes of error way way
to isolate the causes of error way way
way better.
way better.
It's like even if you want your thing to
It's like even if you want your thing to
work on hardware, you should train it in
work on hardware, you should train it in
sim for the purpose of debugging and
sim for the purpose of debugging and
doing all this stuff. Even if you think
doing all this stuff. Even if you think
that your thing needs to be able to
that your thing needs to be able to
train in not very many samples, you
train in not very many samples, you
should train it fast with a whole bunch
should train it fast with a whole bunch
of samples so that you're actually able
of samples so that you're actually able
to make progress at a reasonable rate
to make progress at a reasonable rate
and then pair it down later.
and then pair it down later.
Use a restroom real quick and then we
Use a restroom real quick and then we
will fix this thing.
will fix this thing.
Yeah, hardware is hard. That's why it's
Yeah, hardware is hard. That's why it's
called hardware. Right back.
All
right.
So, the quest for why the drones don't
So, the quest for why the drones don't
exactly
exactly
hit their targets begins now.
The reward is based on
Lydian distance.
Lydian distance.
So they are still going to get a small
So they are still going to get a small
reward for this. It's a very small
reward for this. It's a very small
reward, but it is a reward. I'm actually
reward, but it is a reward. I'm actually
I'm more concerned about the
I'm more concerned about the
observations.
I bet you this is the issue, right?
Like what if instead of dividing
Like what if instead of dividing
what if we do this clamp F
F.
F.
What if we do something like this? Yeah.
What if we do something like this? Yeah.
So the intuition here is that what
So the intuition here is that what
happens if the delta observations are
happens if the delta observations are
just getting too small to really be
just getting too small to really be
perceptible
on visit.
Okay, these can still be left alone.
What? What if we do this?
We will compare directly before and
We will compare directly before and
after.
Okay. Interesting. So far,
could one be in the space box?
could one be in the space box?
one 8. Uh I think it has to be an array
one 8. Uh I think it has to be an array
of dimension one and then the data type
of dimension one and then the data type
of one I might also have to be a Uint 8.
I also I don't think we do in 8 boxes
I also I don't think we do in 8 boxes
either. That guy
do we? No, you're right. We do. We do in
do we? No, you're right. We do. We do in
eight boxes. I'm wrong.
eight boxes. I'm wrong.
Yeah. No, we do that all the time.
Yeah. No, we do that all the time.
Scratch that.
Scratch that.
Yeah. No, no, we do it as well. I'm
Yeah. No, no, we do it as well. I'm
wrong. Don't listen to that.
numpy array of one. So numpy array of
numpy array of one. So numpy array of
one will give it a float 32
one will give it a float 32
or float 64 I believe by default. Yeah,
or float 64 I believe by default. Yeah,
numpy does like float 64 by default I
numpy does like float 64 by default I
believe.
It would have to check if something's
It would have to check if something's
erasing. Oh yeah. Why are you passing it
erasing. Oh yeah. Why are you passing it
to puffer like that though? Cuz like
to puffer like that though? Cuz like
that box
that box
we do that for observation spaces,
we do that for observation spaces,
right? Which is the end of passing to
right? Which is the end of passing to
the trainer. I we don't ever have you
the trainer. I we don't ever have you
went eights passing back, right? There's
went eights passing back, right? There's
not really a reason to do that
for the OB space. Yeah. So,
for the OB space. Yeah. So,
but the obspace
but the obspace
the puffer gives you the observations.
the puffer gives you the observations.
They should be in format of U and 8 and
They should be in format of U and 8 and
then you put them onto the GPU and then
then you put them onto the GPU and then
you turn them into whatever DT type you
you turn them into whatever DT type you
want, right?
Okay, this looks a fair bit better.
Okay, this looks a fair bit better.
Yeah.
I don't know what this guy's doing, but
I don't know what this guy's doing, but
most of these are like a bit better
d type equal numpy in 8.
When you say you're passing it to
When you say you're passing it to
puffer,
puffer,
where are you passing it? Because you're
where are you passing it? Because you're
not passing observations to step, right?
not passing observations to step, right?
What function are you passing it to?
What function are you passing it to?
Where you think it's getting messed with
text is failing for some reason. Well, I
text is failing for some reason. Well, I
mean that's possible that the it's like
mean that's possible that the it's like
also possible that it was bugged in 10
also possible that it was bugged in 10
and I fixed it since. Right.
and I fixed it since. Right.
Something between the step returning
Something between the step returning
obsace
checking
checking
but check space checks it before step
but check space checks it before step
returns.
Oh, you're endstep returning the obs.
Yeah, if you send me a repro, I I will
Yeah, if you send me a repro, I I will
I'll see if I can fix it for you.
I'll see if I can fix it for you.
It's not like training crashes horribly
It's not like training crashes horribly
when you comment the check space. So,
when you comment the check space. So,
it's probably that it is like a bug
it's probably that it is like a bug
somewhere with this thing. made it to
somewhere with this thing. made it to
Friday.
This like spy's alt or something.
Fourth of July, man. Try to get time to
Fourth of July, man. Try to get time to
get the fireworks ready.
We think the reward magnitudes just get
We think the reward magnitudes just get
too small.
Can I like clamp this?
Okay, we clamp this thing.
I see that there's a problem with this
I see that there's a problem with this
actually, but I'm going to try this
actually, but I'm going to try this
first.
Did he watching?
Did he watching?
I guess it never truly checked the
I guess it never truly checked the
dimensions of theut before.
dimensions of theut before.
That is what that function is for. It is
That is what that function is for. It is
to make sure that the dimensions make
to make sure that the dimensions make
sense.
Interesting.
Interesting.
This appears to break it completely.
Oh no.
Oh no.
Covers
somewhat.
collision rate is very high
somehow.
Curious what the heck this is doing.
But yeah, we're probably only a few
But yeah, we're probably only a few
small reward tweaks away from having
small reward tweaks away from having
this thing just working perfectly. And
this thing just working perfectly. And
uh it's going to like suddenly look way
uh it's going to like suddenly look way
cooler than just the drone's hover when
cooler than just the drone's hover when
it does because we'll be able to train
it does because we'll be able to train
it on all the tasks. And it'll basically
it on all the tasks. And it'll basically
just go from like sphere, cube, follow,
just go from like sphere, cube, follow,
flag, you know, you'll just get drone
flag, you know, you'll just get drone
constellations.
Okay. So, this is not the intended
Okay. So, this is not the intended
result at all.
Ah.
What the heck is lagging my computer so
What the heck is lagging my computer so
much?
Crazy. You have a top end and all the
Crazy. You have a top end and all the
crap these days. It's like
crap these days. It's like
badly optimized.
Okay, it's more stable at least already.
Okay, so this also does not work
Okay, so this also does not work
anywhere near as well.
Oh, the scale just changed. This
Oh, the scale just changed. This
actually works better.
actually works better.
Yeah, there way more of these directly
Yeah, there way more of these directly
on target.
So
interesting.
Well, but this is annoying because like
No, I guess this is fine. This is
No, I guess this is fine. This is
basically just saying you have to be
basically just saying you have to be
exactly on target.
Oh, this is better.
Oh, this is better.
Okay. So,
Okay. So,
we probably have to fix this collisions
we probably have to fix this collisions
thing.
You get a negative distance reward and
You get a negative distance reward and
you collide, you get a positive reward,
you collide, you get a positive reward,
right?
Okay, we'll try this. See if this is
Okay, we'll try this. See if this is
stable.
stable.
Upgrade to Python 312.
Upgrade to Python 312.
Indianness is flipped. Are you
Indianness is flipped. Are you
me?
Oh, you know what? Can you check numpy?
Oh, you know what? Can you check numpy?
Because this was a thing I saw where
Because this was a thing I saw where
like actually
like actually
there's some screwy thing with numpy.
there's some screwy thing with numpy.
Oh, in your code, not puffer.
Oh, in your code, not puffer.
Okay.
So, are you saying that the uh the
So, are you saying that the uh the
puffer is absolved of all wrongdoings?
puffer is absolved of all wrongdoings?
Is that what I'm hearing?
That's what I'm hearing. That Puffer is
That's what I'm hearing. That Puffer is
just the best software ever. olved of
just the best software ever. olved of
all wrongdoings
all wrongdoings
and cures all the ailments of
and cures all the ailments of
reinforcement learning.
This is kind of silly.
This is kind of silly.
I agree. Python is a very dumb language.
up the math.
up the math.
This looks cool. Can I ask how to play
This looks cool. Can I ask how to play
with the repo? Any requirement for
with the repo? Any requirement for
running the project? Like only available
running the project? Like only available
on Linux. Uh, it should work on MacOSS
on Linux. Uh, it should work on MacOSS
technically. We have people that use it.
technically. We have people that use it.
There are a couple additional setup
There are a couple additional setup
things that are slightly annoying. It
things that are slightly annoying. It
will also work on WSL if you're on
will also work on WSL if you're on
Windows, which is why we don't bother
Windows, which is why we don't bother
with native Windows because you just
with native Windows because you just
have WSL available.
And uh you can see all this stuff at
And uh you can see all this stuff at
puffer.ai. It's all open source. Install
puffer.ai. It's all open source. Install
the GitHub to help us out. It's free. If
the GitHub to help us out. It's free. If
you want to get involved with Dev or you
you want to get involved with Dev or you
need help, Discord's right here.
Star the puffer.
Star the puffer.
Puffers eat stars.
22 35 stars on the puffer.
22 35 stars on the puffer.
Not bad.
What did I break here? That's making
What did I break here? That's making
this not learn.
on Windows. We'll check it out. Start
on Windows. We'll check it out. Start
it. Thank you very much.
Probably update the Twitch descriptions
Probably update the Twitch descriptions
the ones
the ones
any platforms.
any platforms.
Yeah. Yeah. So, for some reason, this is
Yeah. Yeah. So, for some reason, this is
just not optimizing. So, I'm guessing I
just not optimizing. So, I'm guessing I
just did something really dumb with the
just did something really dumb with the
math here.
math here.
Let me look at it for a second.
Distance reward is negative.
They don't know what they're doing at
They don't know what they're doing at
all. So, the signal is wrong somehow.
reward from reset agent.
Make sure this is not the thing somehow.
We're very close to having this I think
We're very close to having this I think
fully solved.
fully solved.
I can't imagine it's very difficult to
I can't imagine it's very difficult to
get the last
get the last
little bit of uh reward out of here.
little bit of uh reward out of here.
It's like it's either the reward
It's like it's either the reward
slightly off or the agent can't quite
slightly off or the agent can't quite
see what it's doing is my guess.
Almost always the bug.
Okay. So, this is still not training.
So, this must mean I screwed something
So, this must mean I screwed something
up. Yeah.
Not possible. What?
What? Aging?
What? Aging?
That's pretty obviously possible, right?
What did I break here, man?
Last collision reward times last target
Last collision reward times last target
reward, right?
Here,
we'll do it this way
to rule this
Oh, is it just a scale? failing issue.
Okay, I think it's just a scaling issue.
Okay, I think it's just a scaling issue.
Hang on.
Hang on.
Let's do this
Let's do this
and let's like rebuild and then if it's
and let's like rebuild and then if it's
if this works, then it's just straight
if this works, then it's just straight
up a scaling issue and we can fix that
up a scaling issue and we can fix that
pretty easily.
Okay. Straight up a scaling bug. All
Okay. Straight up a scaling bug. All
right. So
right. So
if we clamp distance,
we clamp distance to be
one minus the distance.
Oh, you don't get any reward then.
Yeah. So, that's the bug. You don't get
Yeah. So, that's the bug. You don't get
any reward for getting closer to it
any reward for getting closer to it
until um
Yeah, you don't you just don't get any
Yeah, you don't you just don't get any
reward at all for getting closer to it
reward at all for getting closer to it
until you're within one unit.
until you're within one unit.
Okay. So, how do we fix this bug? Huh?
Can we just scale up the reward or
Can we just scale up the reward or
whatever?
So like another way to do this would be
So like another way to do this would be
so one minus distance
so one minus distance
divide by max distance.
Just do like 10x this.
Usually constant factors on reward don't
Usually constant factors on reward don't
help a ton, but we'll see.
I just want to see what this does.
Oh, this is interesting. I've actually
Oh, this is interesting. I've actually
started studying quantum lately. I've
started studying quantum lately. I've
not gotten to uh all these different
not gotten to uh all these different
types of particles yet.
types of particles yet.
Guess it's more particle physics.
I still want them.
Okay. So, this is learning.
Okay. So, this is learning.
Uh I think this is learning worse than
Uh I think this is learning worse than
before though.
Yeah.
Going
to try this again with the normal scale
to try this again with the normal scale
to see how much of a difference that
to see how much of a difference that
makes.
Still running a val even though I fat
Still running a val even though I fat
fingered that.
Okay, so they actually they go to their
Okay, so they actually they go to their
targets, but they like do this crazy
targets, but they like do this crazy
thing.
Interesting.
Let's see if we see that same thing on a
Let's see if we see that same thing on a
much smaller scale.
And while this trans I'm actually going
And while this trans I'm actually going
to see if I can intuit it what I did
to see if I can intuit it what I did
wrong with the reward function.
One minus the distance divided by the
One minus the distance divided by the
maximum possible distance, right?
So whether this can actually be
So whether this can actually be
zero or not is questionable, but it can
zero or not is questionable, but it can
whether or not this can be
Oh, hang on. Wait. Distances
Oh, hang on. Wait. Distances
or board is okay. Whether or not this
or board is okay. Whether or not this
can be zero is questionable, but it can
can be zero is questionable, but it can
always be one. If you're exactly on the
always be one. If you're exactly on the
target, you get one.
Swooping back and forth behavior.
Just like overeager to get the reward or
Just like overeager to get the reward or
something.
I could add a velocity matching reward
I could add a velocity matching reward
technically.
I mean this is almost perfect
I mean this is almost perfect
according to this thing. So like why
according to this thing. So like why
what's making it not be actually
what's making it not be actually
Perfect. I mean, you can't The thing is
Perfect. I mean, you can't The thing is
they start off the way they start off.
Oh, no. They start off at the target.
Oh, no. They start off at the target.
So, it can actually literally be
So, it can actually literally be
perfect, huh?
perfect, huh?
You can kind of see that they're like
You can kind of see that they're like
slightly off target, I guess.
slightly off target, I guess.
Like they're not perfectly on the
Like they're not perfectly on the
sphere.
very close.
A heck of a lot better than before,
but they're not exactly on the target.
Do we have any ideas on this?
Well, first of all, there's very little
Well, first of all, there's very little
there's very very little additional
there's very very little additional
reward for them to gain.
reward for them to gain.
Over a thousand steps, they can gain an
Over a thousand steps, they can gain an
additional
14 reward
or 14 score.
penalize nonzero. I could do that.
penalize nonzero. I could do that.
I shouldn't have to though. You would
I shouldn't have to though. You would
agree, right?
agree, right?
If they can see their target
If they can see their target
and they're getting rewarded, the way
and they're getting rewarded, the way
that I have the reward defined should be
that I have the reward defined should be
robust as well in the sense that like
robust as well in the sense that like
you're getting rewarded for moving
you're getting rewarded for moving
towards the target. So like you get zero
towards the target. So like you get zero
reward if you're like hanging out next
reward if you're like hanging out next
to a target. It's not like you're
to a target. It's not like you're
collecting more reward there than if
collecting more reward there than if
you're farther away. You get rewards
you're farther away. You get rewards
specifically for going towards the
specifically for going towards the
target.
target.
It should be very easy to learn
It should be very easy to learn
something like this. It's not like one
something like this. It's not like one
of those scenarios where it's.99 reward
of those scenarios where it's.99 reward
here and.991 reward here and it can't
here and.991 reward here and it can't
tell the difference.
There's 14 reward gain.
What are hypers for this?
Let me try something
just for the sake of it real quick.
This looks kind of similar to those
This looks kind of similar to those
robotics problems. That should be really
robotics problems. That should be really
easy time horizon wise.
Isn't it kind of weird that gamma was
Isn't it kind of weird that gamma was
set like the optimized gamma was set
set like the optimized gamma was set
that high?
that high?
It's weird, isn't it?
Like this should not require super long
Like this should not require super long
horizons.
They also have very noisy corrections.
They also have very noisy corrections.
Yeah. So the question is why
This is like way worse.
It's learning nice and stably.
I already have a very high learning rate
I already have a very high learning rate
though.
though.
Am I just going to set this to 0.05 and
Am I just going to set this to 0.05 and
hope it works?
Is that really the play right now?
Like what is this? Why does it learn
Like what is this? Why does it learn
this slowly? Yeah.
some weird like co-optimization thing
some weird like co-optimization thing
going on because neither of these make
going on because neither of these make
sense to me. Like does like why would
sense to me. Like does like why would
you need a gamma of.997?
Okay. I mean we can hypothesize
we can try this. We can hypothesize
we can try this. We can hypothesize
maybe it's capacity
bigger network.
bigger network.
We looked at the policy
We looked at the policy
what the policy outputs when the agent
what the policy outputs when the agent
spawns
spawns
on the goal.
on the goal.
Uh I mean that is what happens every
Uh I mean that is what happens every
time I render it, right?
time I render it, right?
like they just they drift off a little
like they just they drift off a little
bit where some of them drift off a
bit where some of them drift off a
little bit and can't quite find
little bit and can't quite find
their uh their target.
Let me run this capacity experiment real
Let me run this capacity experiment real
quick and then if this doesn't do any
quick and then if this doesn't do any
better, we will go back to drawing
better, we will go back to drawing
board.
board.
It's like so close as well. It's 99% of
It's like so close as well. It's 99% of
the way there.
If the bigger network actually does
If the bigger network actually does
worse, it's also possible this is just
worse, it's also possible this is just
like a tiny hyperparameter failure,
like a tiny hyperparameter failure,
right?
The policy is also stochcastic,
The policy is also stochcastic,
but it should be self-correcting in a
but it should be self-correcting in a
sense.
The policy, it should really be
The policy, it should really be
self-correcting.
Like even if the policy is a little bit
Like even if the policy is a little bit
noisy, it shouldn't like hover next to
noisy, it shouldn't like hover next to
the like next to the target.
the like next to the target.
go to the target and like dip this way a
go to the target and like dip this way a
little bit and then go back. It should
little bit and then go back. It should
be a lot more responsive.
Uh, this is actually slightly better
it seems.
Is it
Is it
might be the same
No, it's the same.
Basically the same.
This is what the policy looks like.
We're kind of splitting hairs at this
We're kind of splitting hairs at this
point. Like,
point. Like,
it's almost perfect.
Let's leave it like this. Let me see
Let's leave it like this. Let me see
what happens if we do the full train
what happens if we do the full train
set.
This will now train on all the tasks
This will now train on all the tasks
jointly.
Okay, we get a slightly messier curve.
Hello, welcome.
Get rid of that other bot over there.
Get rid of that other bot over there.
Cool.
So, uh,
we'll see what this result corresponds
we'll see what this result corresponds
to.
Possible this just works.
Possible this just works.
Also, possible
needs to be trained for longer.
needs to be trained for longer.
I don't know. Lots of possibilities
I don't know. Lots of possibilities
technically. I guess it should be a
technically. I guess it should be a
little bit concerning that this believe
little bit concerning that this believe
this was the curve from before and we're
this was the curve from before and we're
not doing like hugely better.
Okay. So like this orbit task.
Okay. So like this orbit task.
Oh no. I mean this is decent.
Oh no. I mean this is decent.
Hover. We can see actually based on this
Hover. We can see actually based on this
that the hover performance is like not
that the hover performance is like not
quite as good as it was previously.
And there are a few drones that can't
And there are a few drones that can't
find their target.
find their target.
Okay, there's this follow target.
Okay, there's this follow target.
Pretty decent.
Pretty decent.
Got the cube task where they have to
Got the cube task where they have to
spread out and make a cube.
spread out and make a cube.
Getting to be decent.
Okay. Now, this is pretty good, right?
Okay. Now, this is pretty good, right?
Like they're the last two drones
Like they're the last two drones
filtering in. It takes him a second, but
filtering in. It takes him a second, but
that's that is a perfect drone cube.
Okay. I mean, this is like a drone
Okay. I mean, this is like a drone
Congo. Yeah.
Congo. Yeah.
The flag. How's our flag look?
There a couple of them that are like
There a couple of them that are like
having difficulty finding their uh their
having difficulty finding their uh their
Target.
Pretty sick. Yeah.
I'm trying to think how how do we get
I'm trying to think how how do we get
this to like
they need to form the flag faster
like you see actually when one of them
like you see actually when one of them
gets in the way they try to like avoid
gets in the way they try to like avoid
crashing.
What if we just train for the flag task
What if we just train for the flag task
real quick? I just want to see like
real quick? I just want to see like
single task
cuz it's also just it's possible like we
cuz it's also just it's possible like we
just need to train for longer with all
just need to train for longer with all
these tasks, right?
Lag task should be not that hard.
The cool thing about this is it's not
The cool thing about this is it's not
like technically, right, you can just
like technically, right, you can just
program drones to go to a specific spot.
program drones to go to a specific spot.
That's really easy. But like if you
That's really easy. But like if you
watch how these were filling in the flag
watch how these were filling in the flag
when one of them like bumped up they
when one of them like bumped up they
actually the others would try to get out
actually the others would try to get out
of the way.
of the way.
Pretty cool, right?
Pretty cool, right?
like, "Ah, don't crash into me.
10.
10.
I actually don't know what the the thing
I actually don't know what the the thing
is. I don't know what the best score is
is. I don't know what the best score is
possible on these. I only know an upper
possible on these. I only know an upper
bound. So, if you were to teleport to
bound. So, if you were to teleport to
the target and stay there, it's going to
the target and stay there, it's going to
be 1024 or a PF of one. Same thing.
I wonder if we could design drones that
I wonder if we could design drones that
like, you know, don't really mind that
like, you know, don't really mind that
much if they bonk into each other a
much if they bonk into each other a
little bit.
little bit.
I could probably do that. You just have
I could probably do that. You just have
to put the rotors in like a mesh ball
to put the rotors in like a mesh ball
thing and it would be fine.
thing and it would be fine.
Hey Jub
Hey Jub
on Fourth of July, I have a Fourth of
on Fourth of July, I have a Fourth of
July thematically appropriate project.
July thematically appropriate project.
You see
there you go.
That's good enough to post, right?
That's good enough to post, right?
Yeah, that's good enough to post.
Yeah, that's good enough to post.
Absolutely.
No spangled stars.
No spangled stars.
You can't
You can't
You can't do it at this resolution.
All right. I only have It's 64 drones. I
All right. I only have It's 64 drones. I
could train it with more drones, but it
could train it with more drones, but it
starts to become messier.
starts to become messier.
So, I wanted to do something I always do
So, I wanted to do something I always do
stuff with like a thousand agents.
stuff with like a thousand agents.
I wanted to do something more moderate.
increase number of drones.
256. I see I could It's going to mess
256. I see I could It's going to mess
with some stuff though. So, the way I
with some stuff though. So, the way I
code these environments when I do super
code these environments when I do super
quick prototypes,
quick prototypes,
right, I do like quadratic checking.
right, I do like quadratic checking.
So, like I could do it. It's just it's
So, like I could do it. It's just it's
going to be slower and more annoying.
going to be slower and more annoying.
That is what puffers excel at.
The thing is, I don't even know if it's
The thing is, I don't even know if it's
going to be cooler. Like, I actually
going to be cooler. Like, I actually
don't even think it will be because the
don't even think it will be because the
thing is when you have a ton of agents,
thing is when you have a ton of agents,
they basically just become points.
Like, I down sampled this demo on the
Like, I down sampled this demo on the
site. I also want to have this thing
site. I also want to have this thing
posted before it gets too late in the
posted before it gets too late in the
day because it is the fourth.
day because it is the fourth.
Like here, I down sampled this thing and
Like here, I down sampled this thing and
you can't really tell the difference.
Like I tried to do an even bigger
Like I tried to do an even bigger
version of this and it's like you
version of this and it's like you
literally can't see the puffers at some
literally can't see the puffers at some
point.
We'll do this for now.
Because I want to also there's other
Because I want to also there's other
stuff I can work on with you guys today.
Yeah,
this is also puff like partially an ad
this is also puff like partially an ad
for puffer in some sense.
for puffer in some sense.
Better soon. Yeah.
Why is this stuff so slow?
Oh my gosh, there's something wrong with
Oh my gosh, there's something wrong with
the file browser. I think on Abuntu,
you're doing some crazy stuff. Can I be
you're doing some crazy stuff. Can I be
in your team? I'm a full stack dev. Love
in your team? I'm a full stack dev. Love
to connect with you if possible. So,
to connect with you if possible. So,
here's the thing with the way that
here's the thing with the way that
Puffer works. Uh, all this stuff is open
Puffer works. Uh, all this stuff is open
source. It's all freely available. We
source. It's all freely available. We
have a whole bunch of open source
have a whole bunch of open source
contributors who
contributors who
uh build stuff and we train them for
uh build stuff and we train them for
free, but full-time positions don't
free, but full-time positions don't
really happen. We do have contracting
really happen. We do have contracting
stuff, but basically that is dependent
stuff, but basically that is dependent
on specific clients. You know, if you
on specific clients. You know, if you
start building some stuff and say, "Hey,
start building some stuff and say, "Hey,
this would be applicable to a specific
this would be applicable to a specific
area and I think that we could do
area and I think that we could do
something here." Then that's when we
something here." Then that's when we
start pulling people for jobs on that.
start pulling people for jobs on that.
We don't just do like you know uh core
We don't just do like you know uh core
development full-time positions or
development full-time positions or
anything like that. And the reason for
anything like that. And the reason for
that is it's a bootstrapped company. Uh
that is it's a bootstrapped company. Uh
there's not VC funding for this. So I
there's not VC funding for this. So I
try to keep it to make it sustainable.
try to keep it to make it sustainable.
It's pretty much like uh to get payment
It's pretty much like uh to get payment
out there must be contracts in if that
out there must be contracts in if that
makes sense. at least for the time
makes sense. at least for the time
being.
This thing is
This thing is
I don't know what it is with the file
I don't know what it is with the file
browser that does that. The file browser
browser that does that. The file browser
lags Everything.
cars.
cars.
I thought of it. It's not It's not going
I thought of it. It's not It's not going
to look right.
I think this is fine for uh for demo. I
I think this is fine for uh for demo. I
don't think it's going to make a huge
don't think it's going to make a huge
difference.
N this is good.
Camera and fly backwards.
Camera and fly backwards.
Yeah, there are a lot of things we could
Yeah, there are a lot of things we could
do. I just wanted to have us a demo
do. I just wanted to have us a demo
done.
Let me send this to Spencer. He'll get a
Let me send this to Spencer. He'll get a
kick out of it.
All
right, let's train up a uh here's what
right, let's train up a uh here's what
we're going to do real quick.
we're going to do real quick.
Rebuild.
Do I want to train?
[Music]
[Music]
I think we can just kind of leave this
I think we can just kind of leave this
and I can like put this on another
and I can like put this on another
machine to train a bigger policy.
I'm happy with this.
Okay, so this is uh this is available
Okay, so this is uh this is available
now if you guys want to play with it.
We'll see how that post does. One
We'll see how that post does. One
problem with posting on holidays is even
problem with posting on holidays is even
if the stuff is cool, uh people are kind
if the stuff is cool, uh people are kind
of out doing barbecues.
deliver freedom.
deliver freedom.
It is freedom day.
Let me actually just put this into the
Let me actually just put this into the
uh one of these chats.
uh one of these chats.
Holy, why is everything so laggy today,
Holy, why is everything so laggy today,
man?
fireworks day. I actually I'm getting
fireworks day. I actually I'm getting
kind of confused why this is,
not memory.
not memory.
Yeah, I don't know why that's so laggy.
Yeah, I don't know why that's so laggy.
I guess they're all fighting over the
I guess they're all fighting over the
same cores or something because this is
same cores or something because this is
a 16 core processor. OBS is using two
a 16 core processor. OBS is using two
cores. Chrome is using like two or three
cores. Chrome is using like two or three
cores and that's it.
cores and that's it.
The fact that Chrome is using like three
The fact that Chrome is using like three
cores is kind of pathetic to be fair.
cores is kind of pathetic to be fair.
Crap browser.
Crap browser.
You're being you've been targeted.
You're being you've been targeted.
Pretty stupid to target open source
Pretty stupid to target open source
work, but sure.
work, but sure.
All right. I'm use the restroom real
All right. I'm use the restroom real
quick and then we'll see what we do we
quick and then we'll see what we do we
do next. There are several options uh
do next. There are several options uh
for other things I can work on today.
for other things I can work on today.
I'd suppose I could do robotic stuff.
I'd suppose I could do robotic stuff.
Fight the robots a little bit. Uh I
Fight the robots a little bit. Uh I
could work a little bit on our quick
could work a little bit on our quick
start guide like the new RL for
start guide like the new RL for
beginners guide. I was planning on doing
beginners guide. I was planning on doing
some of that tomorrow but uh if you all
some of that tomorrow but uh if you all
want I can work on it a little bit today
want I can work on it a little bit today
and take feedback and suggestions. It's
and take feedback and suggestions. It's
going to be a little less interactive in
going to be a little less interactive in
the sense that like you know I have to
the sense that like you know I have to
focus to write paragraphs and stuff but
focus to write paragraphs and stuff but
I will take suggestions live. So
I will take suggestions live. So
probably between that robotics and um
probably between that robotics and um
messing with the tactics environment
messing with the tactics environment
like the two armies kind of janky but
like the two armies kind of janky but
mostly works environment.
mostly works environment.
I'll be right back. Y'all can vote on
I'll be right back. Y'all can vote on
that.
See if I'm out of coffee because that
See if I'm out of coffee because that
might pose a
It was more coffee.
I did forget the uh the daily deadlift
I did forget the uh the daily deadlift
though.
All
right. Most people want me to work on
right. Most people want me to work on
the uh
the uh
beginner's guide,
beginner's guide,
which is actually cool by me because
which is actually cool by me because
I've kind of had like three days worth
I've kind of had like three days worth
of screwing with fiddly experiments in a
of screwing with fiddly experiments in a
row. And it gets old.
row. And it gets old.
It gets old.
Do we have two trillion likes and
Do we have two trillion likes and
a bunch of inbound yet?
Oh, he managed. Yeah, you literally you
Oh, he managed. Yeah, you literally you
can just join you can literally just
can just join you can literally just
join the Discord like go through our
join the Discord like go through our
starter material and start building
starter material and start building
stuff with us. There's not like a formal
stuff with us. There's not like a formal
requirement at all. It's literally it's
requirement at all. It's literally it's
self- selecting, right? It's just the
self- selecting, right? It's just the
people who actually stick around long
people who actually stick around long
enough to learn and to build good things
enough to learn and to build good things
are the ones who like push forward the
are the ones who like push forward the
research and who get promoted and all
research and who get promoted and all
that type of stuff. And I've pulled a
that type of stuff. And I've pulled a
couple people for uh financially valid
couple people for uh financially valid
like business side contracts and stuff.
like business side contracts and stuff.
I don't put that as a promise. It really
I don't put that as a promise. It really
depends on whether your stuff's directly
depends on whether your stuff's directly
applicable to a contract,
applicable to a contract,
but it is something that's out there.
but it is something that's out there.
Oh, okay. Cool.
Oh, okay. Cool.
10 and uh I miss. We'll see how that
10 and uh I miss. We'll see how that
does.
All right. So, here's the beginner's
All right. So, here's the beginner's
guide that I started.
I will give you the parameters for this.
I will give you the parameters for this.
Oh, I just realized that um that's
Oh, I just realized that um that's
probably what's eating all my bandwidth
probably what's eating all my bandwidth
is that I have the stream preview on in
is that I have the stream preview on in
two separate places.
Oh yeah, that's immediately better.
Here is the idea behind the uh the guide
Here is the idea behind the uh the guide
here.
one, it's going to be an ultra
one, it's going to be an ultra
opinionated guide.
opinionated guide.
It's not going to be me covering the
It's not going to be me covering the
stuff in Sutton and Bardau,
stuff in Sutton and Bardau,
just like slightly different. It's not
just like slightly different. It's not
going to be like any of the existing
going to be like any of the existing
resources, but slightly different. It's
resources, but slightly different. It's
going to be something completely
going to be something completely
different. It's going to be the only
different. It's going to be the only
thing it will be similar to is my quick
thing it will be similar to is my quick
start guide because that is the other
start guide because that is the other
piece I have on the same topic but uh
piece I have on the same topic but uh
very much expanded on with a whole bunch
very much expanded on with a whole bunch
of additional things and it's going to
of additional things and it's going to
go deeper in a lot of areas as well.
go deeper in a lot of areas as well.
That is the goal. Uh additionally
That is the goal. Uh additionally
it will have two sections two main
it will have two sections two main
sections. The first section is going to
sections. The first section is going to
be for people who have
be for people who have
uh competent programming and AI
uh competent programming and AI
experience.
experience.
So this is like if you can actually if
So this is like if you can actually if
you have knowledge at the level of
you have knowledge at the level of
CS231N
CS231N
and you are a competent programmer where
and you are a competent programmer where
my bar for that is admittedly quite high
my bar for that is admittedly quite high
but if you are a competent programmer
but if you are a competent programmer
have knowledge at the level of CS231N
have knowledge at the level of CS231N
you're ready to learn all this stuff and
you're ready to learn all this stuff and
that's mostly the level of things
that's mostly the level of things
presented in the quick start guide.
presented in the quick start guide.
But I'm going to be able to reorganize
But I'm going to be able to reorganize
stuff quite a bit because there's also
stuff quite a bit because there's also
going to be a section that's what if I
going to be a section that's what if I
don't know anything or what if I'm
don't know anything or what if I'm
somewhere between I don't know anything
somewhere between I don't know anything
and I don't have knowledge at the level
and I don't have knowledge at the level
of 231N and competent programming yada
of 231N and competent programming yada
yada. So that's going to contain my
yada. So that's going to contain my
advice for how to get good at
advice for how to get good at
programming in general and my advice for
programming in general and my advice for
how to learn AI basics in general.
I actually think that of those two
I actually think that of those two
tasks, being a competent programmer is
tasks, being a competent programmer is
way harder. Like literally of everything
way harder. Like literally of everything
that I have learned,
that I have learned,
everything in my toolkit, right, of all
everything in my toolkit, right, of all
the stuff I do in my job here, uh,
the stuff I do in my job here, uh,
writing good code is the hardest part of
writing good code is the hardest part of
that.
And the people who say otherwise, it's
And the people who say otherwise, it's
just that like, you know, their bar is
just that like, you know, their bar is
down here, my bar is up here. And
down here, my bar is up here. And
there's actually a practical difference
there's actually a practical difference
between being this good and being this
between being this good and being this
good. Because being this good, you're
good. Because being this good, you're
basically a problems engineer. You just
basically a problems engineer. You just
make problems for everybody. And being
make problems for everybody. And being
this good, you solve everybody else's
this good, you solve everybody else's
problems.
problems.
Drop it in chat, please. Uh there's no
Drop it in chat, please. Uh there's no
place for me to drop the article in chat
place for me to drop the article in chat
because this is a in progress article.
because this is a in progress article.
So what you're seeing is what is
So what you're seeing is what is
currently there and I'm going to be
currently there and I'm going to be
writing on it live.
writing on it live.
Do you think great programming skills
Do you think great programming skills
are gifted or earned? absolutely 100%
are gifted or earned? absolutely 100%
earned. Okay,
earned. Okay,
if you saw the things that I wrote in
if you saw the things that I wrote in
the first literally five years of
the first literally five years of
programming, this would not be a
programming, this would not be a
question. I was not a gifted programmer
question. I was not a gifted programmer
at all.
at all.
Arguably, you could say I was somewhat
Arguably, you could say I was somewhat
gifted in like the intuition of how I
gifted in like the intuition of how I
view problems and research and AI and
view problems and research and AI and
stuff. Like that was something that I
stuff. Like that was something that I
got to be pretty good at relatively
got to be pretty good at relatively
quickly. And uh yeah, like I have some
quickly. And uh yeah, like I have some
spots where there's definitely I have
spots where there's definitely I have
advantages, but programming ain't one of
advantages, but programming ain't one of
them. That was blood, sweat, and tears.
Okay, we'll go through the intro
Okay, we'll go through the intro
section. And I'll read through this and
section. And I'll read through this and
give me your initial thoughts
give me your initial thoughts
and then I think we'll start on
and then I think we'll start on
we'll start on this portion of the
we'll start on this portion of the
guide.
Actually, do I want to do it that way? I
Actually, do I want to do it that way? I
think I want to start with the actual
think I want to start with the actual
content because this is mostly just like
content because this is mostly just like
a snarky introduction that frames the
a snarky introduction that frames the
article.
But does this make sense though
But does this make sense though
structurally? Right? First of all, this
structurally? Right? First of all, this
is going to be a very very different
is going to be a very very different
guide from anything else in the field.
guide from anything else in the field.
It's kind of the same thing as when you
It's kind of the same thing as when you
come to Puffer Lib expecting something
come to Puffer Lib expecting something
that looks like the rest of RL and it
that looks like the rest of RL and it
doesn't. The guide is going to be the
doesn't. The guide is going to be the
same thing. So, it's not going to cover
same thing. So, it's not going to cover
stuff in the same order or anything like
stuff in the same order or anything like
that.
that.
The fact that it has the two starting
The fact that it has the two starting
points, I actually give you this little
points, I actually give you this little
litmus test. Um,
litmus test. Um,
if you can implement an LSTM in like a
if you can implement an LSTM in like a
100 lines or less than 100 lines, you
100 lines or less than 100 lines, you
are competent. Otherwise, start at
are competent. Otherwise, start at
square zero.
And then there's a little bit of a thing
And then there's a little bit of a thing
here for like new new viewers and new
here for like new new viewers and new
people because it's a little bit
people because it's a little bit
broader.
I might change this up a little bit.
I might change this up a little bit.
We'll see.
Okay, so this is just stuff from viewers
Okay, so this is just stuff from viewers
like stuff that people asked me to
like stuff that people asked me to
include.
include.
Vibe coding is the is now the trend
Vibe coding is the is now the trend
these days.
these days.
Person knows the basics. Can it write a
Person knows the basics. Can it write a
good program these days? Does it matter?
good program these days? Does it matter?
Be a master? Yes, it does. If you're
Be a master? Yes, it does. If you're
just typing into LMS and pasting
just typing into LMS and pasting
that, you are garbage. You know
that, you are garbage. You know
absolutely nothing and you should not
absolutely nothing and you should not
touch any problem ever because you're
touch any problem ever because you're
going to create more problems than
going to create more problems than
solutions.
solutions.
Just straight up.
Like being a good programmer is the
Like being a good programmer is the
basis of literally everything.
It's actually pretty much the only thing
It's actually pretty much the only thing
I will flame people for in uh Puffer.
I will flame people for in uh Puffer.
Like, you know, if you're new in
Like, you know, if you're new in
learning RL, you're going to ask a bunch
learning RL, you're going to ask a bunch
of questions that don't make sense.
of questions that don't make sense.
You're going to make a bunch of
You're going to make a bunch of
mistakes. You're going to cause bugs
mistakes. You're going to cause bugs
that cost me time. All of that is fine.
that cost me time. All of that is fine.
The only thing that I will go off on
The only thing that I will go off on
people for for the most part is like
people for for the most part is like
just making a mess of things within LLM
just making a mess of things within LLM
because they were too lazy to actually
because they were too lazy to actually
learn the thing.
I mean, I could like I could literally
I mean, I could like I could literally
do the same thing for writing, right?
do the same thing for writing, right?
Why don't I just generate this article
Why don't I just generate this article
with uh with an LLM, right? Writing is
with uh with an LLM, right? Writing is
easier than programming.
easier than programming.
Definitely is easier than programming.
good as an education tool. It is, but
good as an education tool. It is, but
guess what? It breaks even in that
guess what? It breaks even in that
because like as soon as you go like any
because like as soon as you go like any
amount of depth into a topic, it just
amount of depth into a topic, it just
lies to you half the time. I tried using
lies to you half the time. I tried using
it to learn quantum mechanics the other
it to learn quantum mechanics the other
day like to ask specific questions about
day like to ask specific questions about
a quantum mechanics course that I was
a quantum mechanics course that I was
going through and it just made stuff up
going through and it just made stuff up
and wasted like four hours of my time
and wasted like four hours of my time
and drove me nuts with like insane
and drove me nuts with like insane
quantum things that aren't actually
quantum things that aren't actually
true.
LM is good. First time we have effective
LM is good. First time we have effective
dactic education at scaleation
dactic education at scaleation
is instruction earlier cleared basic
is instruction earlier cleared basic
stuff. It's good.
stuff. It's good.
Shouldn't use LM to have your doubts
Shouldn't use LM to have your doubts
cleared on any subject at all. Well, I
cleared on any subject at all. Well, I
it's
it's
the thing is this is an area where if
the thing is this is an area where if
they were better, it would actually be
they were better, it would actually be
useful because basically
useful because basically
there are definitely questions that you
there are definitely questions that you
can ask, right? That like anybody who
can ask, right? That like anybody who
has any decent understanding of a topic
has any decent understanding of a topic
will be able to answer, but you're not
will be able to answer, but you're not
going to be able to ask that exact
going to be able to ask that exact
question and like find an answer to that
question and like find an answer to that
without talking to a person in that
without talking to a person in that
space. So LMS are kind of getting to
space. So LMS are kind of getting to
this point that you can do that on basic
this point that you can do that on basic
things. It's just as soon as there's any
things. It's just as soon as there's any
amount of depth, it all goes out the
amount of depth, it all goes out the
window.
Like you can probably ask an LLM about
Like you can probably ask an LLM about
different integration methods if you're
different integration methods if you're
learning calculus and be fine.
When what do you think will these LM
When what do you think will these LM
reach someday when mastering programming
reach someday when mastering programming
won't be necessary? It's AI complete. So
won't be necessary? It's AI complete. So
if the LLM is a perfect programmer, then
if the LLM is a perfect programmer, then
all problems are probably solved.
all problems are probably solved.
That is my opinion.
If an AI can just output arbitrary
If an AI can just output arbitrary
arbitrary programs, then AI is solved
arbitrary programs, then AI is solved
and we will live in a crazy sci-fi
and we will live in a crazy sci-fi
world.
world.
Because if you give me 10,000 years at
Because if you give me 10,000 years at
my current skill level, if you give me
my current skill level, if you give me
10,000 years to just like code on things
10,000 years to just like code on things
to make crazy tech happen, I will make
to make crazy tech happen, I will make
crazy tech happen. The problem is I
crazy tech happen. The problem is I
don't have 10,000 years. Uh at least
don't have 10,000 years. Uh at least
unless we make some pretty good
unless we make some pretty good
advancements here, right?
It takes a minimum of 10 years to get
It takes a minimum of 10 years to get
good and then you've basically you've
good and then you've basically you've
got somewhere between 20 and
got somewhere between 20 and
20 and 50 years of a career and that's
20 and 50 years of a career and that's
it.
it.
So it's tough
protein folding is just around the
protein folding is just around the
corner. Custom non-agging for all puffer
corner. Custom non-agging for all puffer
lip people. Man, I hope so. I don't know
lip people. Man, I hope so. I don't know
if protein sol protein folding alone
if protein sol protein folding alone
doesn't solve that though.
Not as far as I'm aware.
I don't know. Can I just like drink a
I don't know. Can I just like drink a
flask of microbots that like circulate
flask of microbots that like circulate
through and repair everything? That
through and repair everything? That
would be pretty good.
Okay. So this is the framing. It's
Okay. So this is the framing. It's
intentionally put very aggressively
intentionally put very aggressively
because this is this is important and
because this is this is important and
this is it has to be I think these are
this is it has to be I think these are
points that have to be made bluntly.
points that have to be made bluntly.
In fact, I literally already have this
In fact, I literally already have this
in the article
and this is for people who have some
and this is for people who have some
programming experience.
programming experience.
Fighting death is like fighting
Fighting death is like fighting
evolution.
evolution.
Not a fight you want to win. Who says I
Not a fight you want to win. Who says I
will gladly fight evolution?
It's a really stupid inefficient process
It's a really stupid inefficient process
just at massive parallel scale.
So it's still crucial to sharpen
So it's still crucial to sharpen
programming skills even for researcher.
programming skills even for researcher.
the most important skill set that I
the most important skill set that I
have.
have.
How do you balance between doing
How do you balance between doing
research and coding?
research and coding?
I mean, what am I doing during the vast
I mean, what am I doing during the vast
majority of my time as a researcher? I'm
majority of my time as a researcher? I'm
writing code.
writing code.
You do research
You do research
like you read papers, you synthesize
like you read papers, you synthesize
ideas, but for the most part, you write
ideas, but for the most part, you write
code. It is the mechanism by which
code. It is the mechanism by which
research is done.
research is done.
Joseph versus evolution. Absolutely.
robust beats efficiency on long time
robust beats efficiency on long time
horizons.
horizons.
I mean, do you believe that evolution is
I mean, do you believe that evolution is
literally the most optimal process by
literally the most optimal process by
which anything can happen?
the most robust. It's just the process
the most robust. It's just the process
that we happen to know, right? Not
that we happen to know, right? Not
really robust either.
Creates all kinds of stupid problems.
ever go backwards?
Well, I mean, if you want to get like
Well, I mean, if you want to get like
pessimistic here, uh, you know, if we
pessimistic here, uh, you know, if we
all nuke ourselves out of existence
all nuke ourselves out of existence
before we solve AI,
before we solve AI,
that's going to make it go pretty far
that's going to make it go pretty far
backwards.
Anyways, let's get to actual work here.
Anyways, let's get to actual work here.
So I wanted to write like a basic
So I wanted to write like a basic
how to think about programming. Okay.
a fair portion of cosmic.
a fair portion of cosmic.
We literally have one example of it here
We literally have one example of it here
on one planet.
Okay. So, the point I want to make here
something of programming as a craft.
That's a nice little intro.
I think that's a nice little intro.
I think we get very concrete from here
I think we get very concrete from here
very quickly.
fast simulations
fast simulations
making simulations and integrating with
making simulations and integrating with
puffer
I will cover puffer lib and like I will
I will cover puffer lib and like I will
directly cover puffer liib in this guide
directly cover puffer liib in this guide
as well
this right now I'm writing the I'm
this right now I'm writing the I'm
writing the uh the beginner section
writing the uh the beginner section
because people have asked me for it. So
because people have asked me for it. So
this is going to cover my general advice
this is going to cover my general advice
to new programmers first on how to learn
to new programmers first on how to learn
and then it is going to cover
and then it is going to cover
uh
uh
it is also going to cover my general
it is also going to cover my general
advice to new AI people on how to learn
advice to new AI people on how to learn
AI. Not even general, very specific.
AI. Not even general, very specific.
Let's not do general as specific as
Let's not do general as specific as
possible.
couch instead of cafe. Cafe works as
couch instead of cafe. Cafe works as
well.
In fact, even better.
used for programmer
used for programmer
exploration versus explanation
exploitation.
Uh, that's an RL thing. I'm not That's
Uh, that's an RL thing. I'm not That's
like an a learning in general thing.
Think mastering DSA is mastering
Think mastering DSA is mastering
programming. Is this correct? Absolutely
programming. Is this correct? Absolutely
not.
not.
In fact, many of the people that will
In fact, many of the people that will
like ace all the DSA interviews for all
like ace all the DSA interviews for all
the cuz companies just use them
the cuz companies just use them
relentlessly are absolutely terrible
relentlessly are absolutely terrible
programmers who I never want to touch
programmers who I never want to touch
any of my code ever.
Exploration versus explanation.
I don't know what you mean about that. I
I don't know what you mean about that. I
haven't heard that before.
There's really not anything to memorize
There's really not anything to memorize
is the thing
is the thing
because I like the thing is the way that
because I like the thing is the way that
I write stuff. I should explain this but
I write stuff. I should explain this but
like it really is a very small set of
like it really is a very small set of
tools
tools
to learn. A very small set of tools.
to learn. A very small set of tools.
What's the judging criteria then?
What's the judging criteria then?
Well, in Puffer Lib it's just if you
Well, in Puffer Lib it's just if you
make good stuff, right?
make good stuff, right?
I can roughly like I'm not going to out
I can roughly like I'm not going to out
of respect, right? But I can roughly
of respect, right? But I can roughly
rank the competency of everybody
rank the competency of everybody
involved with Puffer Lib based on the
involved with Puffer Lib based on the
stuff that they have built.
Why measure some synthetic test, right,
Why measure some synthetic test, right,
when I have real results?
is
is
okay. Git is like you need like
you need to use git which is like three
you need to use git which is like three
commands.
commands.
Docker is kind of a pain
Docker is kind of a pain
but it also doesn't take any time at all
but it also doesn't take any time at all
to learn once you know what you're
to learn once you know what you're
doing. Kubernetes can off
doing. Kubernetes can off
and like basic terminal usage and stuff
and like basic terminal usage and stuff
is just the things that you pick up over
is just the things that you pick up over
time. But like even if you watch the way
time. But like even if you watch the way
that I do stuff when I'm doing things,
that I do stuff when I'm doing things,
if you just go count the total number of
if you just go count the total number of
commands or tools or things I use, it is
commands or tools or things I use, it is
very small.
Complex workflows can twist one's mind.
Complex workflows can twist one's mind.
Don't use complex workflows.
Don't use complex workflows.
That's it. I don't.
You don't have to. Self-imposed.
Yeah. He-Man. Um there's literally we've
Yeah. He-Man. Um there's literally we've
had people come to puffer lab and like
had people come to puffer lab and like
submit really bad code that worked but
submit really bad code that worked but
was really bad and then like gotten
was really bad and then like gotten
feedback improved and who are now at the
feedback improved and who are now at the
level of well actually I would say on
level of well actually I would say on
just programming alone way better than
just programming alone way better than
the level of uh other PhDs in my field.
the level of uh other PhDs in my field.
So it's
So it's
a lot of this stuff is very learnable.
a lot of this stuff is very learnable.
Now the AI perspective, right? That
Now the AI perspective, right? That
takes a little longer,
but I will cover that as well.
but I will cover that as well.
Team has shitty get etiquette.
Team has shitty get etiquette.
Yeah. So that's not but that's not like
Yeah. So that's not but that's not like
a how to learn to program, right? That's
a how to learn to program, right? That's
how to learn that's how to deal with
how to learn that's how to deal with
stupid people.
stupid people.
And there's no guide for dealing with
And there's no guide for dealing with
stupid people. It's just you suffer.
See this sentence here?
It's really that simple. Like
It's really that simple. Like
if you take me with all the stuff that I
if you take me with all the stuff that I
build and you put me in a big team
build and you put me in a big team
working on some problem, right? Like I'm
working on some problem, right? Like I'm
not like there are very many projects
not like there are very many projects
that I wouldn't be able to contribute
that I wouldn't be able to contribute
anything because of what a mess people
anything because of what a mess people
made. Like it's literally to the point
made. Like it's literally to the point
that very very often the best solution
that very very often the best solution
is to just scrap the whole thing and
is to just scrap the whole thing and
rewrite it. And that's done very often.
rewrite it. And that's done very often.
If you have uh if you have 200,000 lines
If you have uh if you have 200,000 lines
of code for a problem that should take
of code for a problem that should take
10,000,
10,000,
right? What the hell am I supposed to
right? What the hell am I supposed to
do?
Doesn't matter if you're a genius.
Doesn't matter if you're a genius.
You're screwed.
Oh, yeah. Also, has uh how's this
Oh, yeah. Also, has uh how's this
article doing or the uh this thing
article doing or the uh this thing
doing?
doing?
Doing stuff.
Doing stuff.
All right.
Is it a shade on a rust rewrite of
Is it a shade on a rust rewrite of
Corutils?
Corutils?
Uh, I personally
Uh, I personally
I personally do not enjoy Rust in any
I personally do not enjoy Rust in any
way, shape, or form.
way, shape, or form.
I think it's like fine for things where
I think it's like fine for things where
you're really concerned about
you're really concerned about
uh you're really concerned about memory
uh you're really concerned about memory
management bugs for some specific reason
management bugs for some specific reason
like some like embedded systems dev.
But if you're not I there just a number
But if you're not I there just a number
of things in that language I think are
of things in that language I think are
very stupid and overly constraining.
important to explain why
important to explain why
Python sucks.
Python sucks.
Yeah, actually, you know, I'm trying to
Yeah, actually, you know, I'm trying to
think.
How do I want to frame this?
A new dev is not going to appreciate the
A new dev is not going to appreciate the
explanation is the thing.
But like the thing is a new it's more
But like the thing is a new it's more
than just that, right? So it's it's more
than just that, right? So it's it's more
than just interpreted versus compiled.
than just interpreted versus compiled.
Um
that's not the main thing that's screwy
that's not the main thing that's screwy
with it.
with it.
That's like the performance reason that
That's like the performance reason that
screw you with it, right?
Actually, I can just say that. You know
Actually, I can just say that. You know
what? Let's just make this not a list.
You know, actually
not
not
needs to be succinct.
Why old devs hate the language
Why old devs hate the language
file Python code efficiency
dump it in Python code.
Okay, so the problem right is that
Okay, so the problem right is that
writing bindings uh Python to C bindings
writing bindings uh Python to C bindings
is hell.
is hell.
It sucks. It's not fun.
It's actually the reason why I liked
It's actually the reason why I liked
Syon for a little bit, even though
Syon for a little bit, even though
Syon's a total mess as well, is because
Syon's a total mess as well, is because
at least in Syon, once you're Syon
at least in Syon, once you're Syon
builds, you can literally just mix
builds, you can literally just mix
Python code and C code like alternating
Python code and C code like alternating
with no problems and no extra bindings
with no problems and no extra bindings
and build systems and crap.
and build systems and crap.
Unfortunately, Syon has its own problems
Unfortunately, Syon has its own problems
because if that actually worked, it
because if that actually worked, it
would be fantastic.
Look at
a blog on the Syon thing
a blog on the Syon thing
like to read more. I don't think I did.
like to read more. I don't think I did.
I I might have written something about
I I might have written something about
it a while ago. So, here's the thing.
it a while ago. So, here's the thing.
So, Syon,
So, Syon,
it is a domain specific language that is
it is a domain specific language that is
a mix of Python and C. you can inline
a mix of Python and C. you can inline
something that is I mean you can
something that is I mean you can
directly call stuff from the C standard
directly call stuff from the C standard
libraries and malik and things like
libraries and malik and things like
that. It's basically you can write C in
that. It's basically you can write C in
Python with almost identical syntax but
Python with almost identical syntax but
you can also write Python and then
you can also write Python and then
variables that are typed
variables that are typed
get declared as typed variables and they
get declared as typed variables and they
get compiled efficiently and variables
get compiled efficiently and variables
that are not just don't. Um,
that are not just don't. Um,
it it's a really nice way to let you mix
it it's a really nice way to let you mix
and match C and Python. The problem is
and match C and Python. The problem is
that whenever you compile Sython, it
that whenever you compile Sython, it
basically takes your short little source
basically takes your short little source
file and turns it into a minimum of a
file and turns it into a minimum of a
30,000line unreadable C file. And then
30,000line unreadable C file. And then
the compiler also has a bunch of weird
the compiler also has a bunch of weird
like annoying error reporting and bugs
like annoying error reporting and bugs
that it doesn't give you as nice errors
that it doesn't give you as nice errors
say as C. the debugging experience is
say as C. the debugging experience is
not as good as in C. Um,
not as good as in C. Um,
so what ends up happening is I end up
so what ends up happening is I end up
just like preferring to do the entire
just like preferring to do the entire
thing in C instead of having to deal
thing in C instead of having to deal
with the Syon quirks.
Uh, it could be really good, mind you.
Uh, it could be really good, mind you.
Like Syon could be something that would
Like Syon could be something that would
be really good, but it's just not quite
be really good, but it's just not quite
there.
working on four to seven integer
working on four to seven integer
multiplication problem when I realized
multiplication problem when I realized
MLPS
MLPS
or even any neural net activations can't
or even any neural net activations can't
do
do
basic multiplications.
basic multiplications.
Yes. Well, they kind of like have to
Yes. Well, they kind of like have to
embed them into the space in a weird
embed them into the space in a weird
way. It's not a natural operation.
You can technically write
You can technically write
you can technically write activations
you can technically write activations
right that do like dotproducts of uh
right that do like dotproducts of uh
embeddings like you can dotproduct
embeddings like you can dotproduct
layers or you can like point-wise
layers or you can like point-wise
multiply layers.
You can also look into things like CPN
You can also look into things like CPN
which probably are a good way of
which probably are a good way of
representing functions. The thing is
representing functions. The thing is
they're incredibly slow.
This the saint
the drop will try to be back more
the drop will try to be back more
frequent. Thank you. There an
frequent. Thank you. There an
architecture I can learn that and not
architecture I can learn that and not
introduce multiplication terms.
introduce multiplication terms.
Not intro.
Not intro.
I mean that's pretty much what they do
I mean that's pretty much what they do
though, right?
though, right?
It's like if you have multiple different
It's like if you have multiple different
encoding layers
to add pointwise multiplications,
to add pointwise multiplications,
it's kind of cheap, right? Because
it's kind of cheap, right? Because
you're cheesing you're you are sort of
you're cheesing you're you are sort of
cheesing the uh the operation in a
cheesing the uh the operation in a
sense.
sense.
But yeah, I've done the same thing
But yeah, I've done the same thing
before and
before and
it's
it's
pretty annoying to learn things like
pretty annoying to learn things like
that.
It's like a really weird decision bound.
Why not pass
Why not pass
vector?
Well, you don't want to do it over the
Well, you don't want to do it over the
input, right? You would do it over an
input, right? You would do it over an
embedding.
I mean, one good test of this, right,
I mean, one good test of this, right,
would be like if your network can learn
would be like if your network can learn
both multiplication and addition or like
both multiplication and addition or like
any like arbit like you could do
any like arbit like you could do
something like that, right?
I think how to train this
machine multi for multiplication
machine multi for multiplication
reward at the end of its computation and
reward at the end of its computation and
only correct.
only correct.
Have you tried like training it on are
Have you tried like training it on are
you doing any sort of curriculum
you doing any sort of curriculum
learning
learning
giving it like random length
giving it like random length
multiplications
multiplications
seeing like what the length solve goes
seeing like what the length solve goes
up over
Mac OSCI failed with my last commit. God
Mac OSCI failed with my last commit. God
damn it,
Max. Man,
you got to be kidding me.
That's so stupid.
That's so stupid.
Mac specific compiler garbage.
I'll fix that.
It's It needs to be pound defined is
It's It needs to be pound defined is
all. Yeah. Bet. Did you see the drone
all. Yeah. Bet. Did you see the drone
flag?
flag?
It just needs to be pound defined
flag.
Pretty cool.
Pretty cool.
any
any
all spam.
No client inbounds.
Trying to think how I can frame
problem length is random. That should be
problem length is random. That should be
decent.
Like full.
Like full.
And let me figure out how I want to
And let me figure out how I want to
frame this.
No, for word shaping. Yeah, I it could
No, for word shaping. Yeah, I it could
be architectural,
be architectural,
it could be scaling. There are lots of
it could be scaling. There are lots of
things. It could be
could be data. It's very often data.
What is an example of that?
What is an example of that?
What will
too much abstraction from Python. Want
too much abstraction from Python. Want
more granular control? Yeah, I don't
more granular control? Yeah, I don't
want to get into the objectoriented
want to get into the objectoriented
versus procedural versus everything else
versus procedural versus everything else
because it's just a mess. Um,
but like pretty much
but like pretty much
people just end up you end up writing 10
people just end up you end up writing 10
times too much code. that's a thousand
times too much code. that's a thousand
times too slow.
times too slow.
The crux of it
The crux of it
and it just happens all the time. Even
and it just happens all the time. Even
with experienced devs who should know
with experienced devs who should know
better, it's the language itself pushes
better, it's the language itself pushes
you towards that because Python wants
you towards that because Python wants
you to write a class and then it wants
you to write a class and then it wants
that class to interact with another
that class to interact with another
class. Try to even make stuff that looks
class. Try to even make stuff that looks
more like C style code in Python. The
more like C style code in Python. The
language will fight you.
language will fight you.
And then once you have classes, you may
And then once you have classes, you may
as well have, you know, them wrapped
as well have, you know, them wrapped
with each other. It's just, it ends up
with each other. It's just, it ends up
piling more and more abstraction on
piling more and more abstraction on
itself by design.
itself by design.
Very, very hard to not just completely
Very, very hard to not just completely
break your knees on the abstraction tree
break your knees on the abstraction tree
and trip over and fall. I don't know.
I'm trying to think what I can even give
I'm trying to think what I can even give
people as like a quick recommendation.
people as like a quick recommendation.
Some of the AI models,
very little progress and live
very little progress and live
benchmarking to say that they plateau.
benchmarking to say that they plateau.
No, I don't think they're plateaued.
No, I don't think they're plateaued.
And the advice I'm giving here is
And the advice I'm giving here is
relevant regardless.
Rail up.
else. What are like the common like
else. What are like the common like
things that Python does that are
things that Python does that are
obnoxious?
I mean, Python has a ton of built-ins,
I mean, Python has a ton of built-ins,
right?
Tuple thing.
Tuple thing.
Ah, that's like a specific like syntax
Ah, that's like a specific like syntax
thinging. I mostly don't want people to
thinging. I mostly don't want people to
get hung up on like all the crap that's
get hung up on like all the crap that's
in Python.
Most of the ML libraries are easy to
Most of the ML libraries are easy to
implement using Python. What do you mean
implement using Python. What do you mean
to implement?
ML libraries are not implemented in
ML libraries are not implemented in
Python.
up here.
There's some heavy tasks that can be
There's some heavy tasks that can be
done using libraries.
done using libraries.
a lot of libraries Python that's just
a lot of libraries Python that's just
bindings
like yeah they're bindings
like yeah they're bindings
not that they're easy to implement using
not that they're easy to implement using
Python none of the core logic is in
Python none of the core logic is in
Python at all
You can't just use libraries either.
You can't just use libraries either.
Like
Like
a lot of the engines, they have their
a lot of the engines, they have their
own core. They've got their own kernels
own core. They've got their own kernels
and stuff. You they you actually they
and stuff. You they you actually they
have their own low-level code that's not
have their own low-level code that's not
in Python, not just library calls.
in Python, not just library calls.
You end up having to do both.
I think this is good.
up. Thank you.
up. Thank you.
The uh the environment still builds,
The uh the environment still builds,
right?
Oh, undeaf.
Oh, undeaf.
Yeah. I Yeah, you can do that
Yeah. I Yeah, you can do that
thing. Constants and see bother me.
Play chess
Play chess
locally, pal.
locally, pal.
Yeah, bet. The chess project. I've been
Yeah, bet. The chess project. I've been
like watching some chess stuff. I
like watching some chess stuff. I
honestly think you could really make
honestly think you could really make
something good there. And like the thing
something good there. And like the thing
is selfplay in chess should be really
is selfplay in chess should be really
really fast at least if we figure out
really fast at least if we figure out
the action space shenanigans. You should
the action space shenanigans. You should
be able to run selfplay in chess at like
be able to run selfplay in chess at like
3 million steps per second
3 million steps per second
and then you can evalid against
and then you can evalid against
stockfish or whatever separately and you
stockfish or whatever separately and you
can get a really really clear uh ELO
can get a really really clear uh ELO
evaluation.
evaluation.
One second. Use your restroom. One
One second. Use your restroom. One
second. Right back.
Welcome potato.
Type cast or is it is one word
Type cast or is it is one word
type cast?
type cast?
Yes.
selfplay collapses at the moment likely
selfplay collapses at the moment likely
due to persisting environment bugs.
due to persisting environment bugs.
Uh how are you measuring
Uh how are you measuring
whether it collapses? that
cuz you're not going to get like a win
cuz you're not going to get like a win
rate, right, versus self. It's always
rate, right, versus self. It's always
going to be 50%.
Self play, you're playing against
Self play, you're playing against
yourself, so you're going to win half
yourself, so you're going to win half
the games, right?
anything. A better thing to look at will
anything. A better thing to look at will
be the uh the length of a game if it
be the uh the length of a game if it
gets to a reasonable thing.
gets to a reasonable thing.
Raw equals one.
Uh it depends. I would look at the
Uh it depends. I would look at the
episode length. Like if you have
episode length. Like if you have
ridiculously high episode lengths,
ridiculously high episode lengths,
they're probably just all spamming
they're probably just all spamming
invalid moves. You should probably look
invalid moves. You should probably look
at that actually. If they can just learn
at that actually. If they can just learn
to make valid moves, like that's going
to make valid moves, like that's going
to already get you to a decent spot. cuz
to already get you to a decent spot. cuz
once they're making valid moves, like
once they're making valid moves, like
there really not that many valid moves
there really not that many valid moves
you can make in chess at any given time
you can make in chess at any given time
increases steadily. That's decent.
Like what the thing is once they're
Like what the thing is once they're
actually making in like once they're
actually making in like once they're
making valid moves, it should learn
making valid moves, it should learn
quite quickly.
20 moves per turn. Yeah. So, it's just
20 moves per turn. Yeah. So, it's just
it doesn't understand a valid verse
it doesn't understand a valid verse
invalid move.
We might have to chat with some people
We might have to chat with some people
on that cuz like they did it this way
on that cuz like they did it this way
for um M0 I believe, right? They did it
for um M0 I believe, right? They did it
that way for that paper and I said, "Oh,
that way for that paper and I said, "Oh,
okay. Yeah, that sounds great." But I
okay. Yeah, that sounds great." But I
didn't realize that it's actually like
didn't realize that it's actually like
4,000 some odd dimensional. Kind of
4,000 some odd dimensional. Kind of
ridiculous.
ridiculous.
probably also making stuff Hello.
Open element zero.
Open element zero.
Yeah.
What other things am I missing for like
What other things am I missing for like
basic basic C here?
bit. Yeah,
they do it in such a weird shitty order
they do it in such a weird shitty order
here.
Can't even recommend a course.
Yeah, I'm going to cover that next.
Bye.
Have fun. Oh yeah. See you. Bet. Enjoy
Have fun. Oh yeah. See you. Bet. Enjoy
the 4th. Happy 4th of July.
Okay, I got to kill a fly. This thing's
Okay, I got to kill a fly. This thing's
going to drive me insane.
That don't leave you alone.
and build a fly turret. Yeah. Drive me
and build a fly turret. Yeah. Drive me
insane.
Got him.
Got him.
I think I got him.
I think I got him.
Those
things
What tools do we suggest here?
Good.
Capital.
how they changed it from Grock to super
how they changed it from Grock to super
Grock. That's funny.
Okay.
Up.
Get right is the main thing.
had to drop out for a bit. How's
had to drop out for a bit. How's
progress going?
progress going?
Still on this like super basics guide.
Almost done with this, I think.
Okay.
Okay.
Uh, let me think. What else do I want to
Uh, let me think. What else do I want to
put in this?
Oh,
It's 424.
It's 424.
I think I've done a decent job of this.
I think I've done a decent job of this.
Are there any um
Are there any um
newer programmers around here that have
newer programmers around here that have
questions and things that perhaps I've
questions and things that perhaps I've
not addressed yet? How many tips do I
not addressed yet? How many tips do I
have? One, two, three, four, five, six,
have? One, two, three, four, five, six,
seven, eight. possibly do a top 10.
I'll think about it a little bit. But uh
I'll think about it a little bit. But uh
if there any
if there any
relatively newer programmers or and
relatively newer programmers or and
let's qualify that by like if the way
let's qualify that by like if the way
that I am writing code that you've seen
that I am writing code that you've seen
in my dayto-day, if anything is like
in my dayto-day, if anything is like
foreign or strange, you have questions
foreign or strange, you have questions
now would is a great time to ask. I will
now would is a great time to ask. I will
include things in here. Here's the
include things in here. Here's the
restroom real quick.
No questions.
No questions.
Well, I can give a list of things to
Well, I can give a list of things to
avoid.
What is my list of things I hate?
What are my list of things that I hate?
What are my list of things that I hate?
Let me think.
Anybody
have uh crap stuff I'm forgetting out.
He
config systems, right?
package managers.
What you mean like snap?
What you mean like snap?
You got to know like your DRO is built
You got to know like your DRO is built
in like after or whatever. Yeah,
I already included that though.
What? Python package managers.
What? Python package managers.
Oh yeah,
I'm going to include I think that the
I'm going to include I think that the
last bullet will be uh things that I
last bullet will be uh things that I
like
UV is not going at the start of this,
UV is not going at the start of this,
but uh it will be in
I I'm not going to put like the
I I'm not going to put like the
framework on There.
That's not going to like tell anybody
That's not going to like tell anybody
anything. I'll let me finish this thing
anything. I'll let me finish this thing
first. What are the other things I don't
first. What are the other things I don't
want want to steer people away from?
Fancy CCI.
Oh yeah. Yeah.
What tools do I actually I don't really
What tools do I actually I don't really
use that much stuff, right?
Ash is in there.
Well, mostly
UV is definitely
I really don't use that much stuff
I really don't use that much stuff
like at all.
Oh,
my puffer pass. Exactly.
Not really that many things I can
Not really that many things I can
suggest other like I don't use anything.
suggest other like I don't use anything.
Let's see. Is there anything else here
Let's see. Is there anything else here
from this list that's missing?
Put this up here.
Important.
Add rising into there.
Trying Muan Optimizer for the first
Trying Muan Optimizer for the first
time. What is it that about it that you
time. What is it that about it that you
like that it solves everything freaking
like that it solves everything freaking
instantly and is a generational leap
instantly and is a generational leap
over at Adam in literally all of our
over at Adam in literally all of our
tests?
tests?
Just
implementing things from scratch
implementing things from scratch
perhaps.
Isn't RL model architecture
Isn't RL model architecture
thin though?
thin though?
Yes,
it is.
it is.
Why would that matter?
How are we doing here?
Dang.
Dang.
Crash is right here.
Crash is right here.
Fortunate.
We do still have some bugs.
We do still have some bugs.
That is still soda.
That is still soda.
I'll have to see if I can resume that.
That's soda in half the time as well. So
That's soda in half the time as well. So
that literally cuts the uh the train
that literally cuts the uh the train
time in half for that same score.
time in half for that same score.
treat hidden layers differently.
treat hidden layers differently.
Yeah. I mean, we have empirical data
Yeah. I mean, we have empirical data
that it's better, right?
wrong case for Muan by puffer. Exactly.
wrong case for Muan by puffer. Exactly.
Just in puffer lib. It's our default.
Just in puffer lib. It's our default.
Just use it.
kind of want to go fix the uh the
kind of want to go fix the uh the
experiment real quick.
This is learning rate.
Make sure this runs.
Yeah, it got a nan.
I think I can actually put this in with
I think I can actually put this in with
um my main like AI stuff. But I thought
um my main like AI stuff. But I thought
of one other thing.
Not this way.
All
right. I think these are like a this is
right. I think these are like a this is
like a pretty
good
thousandish words.
thousandish words.
It's like a decent length thing. I
It's like a decent length thing. I
believe.
This is actually ironically a lot easier
This is actually ironically a lot easier
than programming. This one is going to
than programming. This one is going to
be shorter. It's literally easier to
be shorter. It's literally easier to
learn, if you already are a good
learn, if you already are a good
programmer, it's literally easier to
programmer, it's literally easier to
learn AI than it is to uh to learn how
learn AI than it is to uh to learn how
to program.
Is that true?
Is that true?
I think that's true.
Yeah, I think that's true.
Did I take this my freshman year or my
Did I take this my freshman year or my
sophomore year?
sophomore year?
My freshman year, didn't I?
My freshman year, didn't I?
I don't remember.
I don't remember.
No, I definitely I took it my freshman
No, I definitely I took it my freshman
year. I would have had to have
no sophomore year. Yeah, it was my
no sophomore year. Yeah, it was my
sophomore year.
here.
just delete this.
Hang on. Let me go check on uh what this
Hang on. Let me go check on uh what this
is.
not to work so much on the holidays.
Little do you know that I consider this
Little do you know that I consider this
barely working.
Well, I mean, I can only go for so far
Well, I mean, I can only go for so far
back, right? If you haven't seen any
back, right? If you haven't seen any
calculus, it's like
there are some prerequisites.
Yeah, I mean that's got to be because
Yeah, I mean that's got to be because
the thing is otherwise you're not going
the thing is otherwise you're not going
to be able to learn ML because you just
to be able to learn ML because you just
won't be familiar enough with even the
won't be familiar enough with even the
notation to be able to read any research
notation to be able to read any research
papers, right?
So yeah, how to learn ML from scratch
So yeah, how to learn ML from scratch
doesn't mean like you're an infant
doesn't mean like you're an infant
toddler, right?
toddler, right?
I've covered I've covered programming
I've covered I've covered programming
because it's a topic that's confusing
because it's a topic that's confusing
and a lot of people think they know how
and a lot of people think they know how
to program but suck at it. Um ML is
to program but suck at it. Um ML is
usually like people come in either, oh
usually like people come in either, oh
yeah, I have some math or like I know
yeah, I have some math or like I know
some programming or whatever. Where do I
some programming or whatever. Where do I
get started? I think I think this is a
get started? I think I think this is a
good entry point. If you're asking for
good entry point. If you're asking for
like from before this, there's some
like from before this, there's some
things you just need to figure out like
things you just need to figure out like
how do I learn? You do not need my
how do I learn? You do not need my
advice on how to learn calculus. All
advice on how to learn calculus. All
right, it's like perfectly well covered.
Is there anything else I suggest before
Is there anything else I suggest before
papers?
Not really.
I think it's you're out of courses at
I think it's you're out of courses at
point, right?
Actually,
I'm going to save this
Hey man, good evening. I'm here with
Hey man, good evening. I'm here with
another question today. How do you do
another question today. How do you do
profiling
profiling
to identify PyTorch indexing overheads?
to identify PyTorch indexing overheads?
Ah, couple ways to do that. one PyTorch
Ah, couple ways to do that. one PyTorch
profiler pain in the ass because it
profiler pain in the ass because it
returns you these massive graphs of uh
returns you these massive graphs of uh
know every single operation and they're
know every single operation and they're
kind of hard to read. They are sometimes
kind of hard to read. They are sometimes
useful but often massively overkill.
useful but often massively overkill.
Much much much easier way is to do
Much much much easier way is to do
torch.cuda.synchronize
torch.cuda.synchronize
and then run your code and then
and then run your code and then
torch.cuda.synchronize synchronize and
torch.cuda.synchronize synchronize and
just time that block and then you can
just time that block and then you can
time that across different versions of
time that across different versions of
code indexing not indexing you know like
code indexing not indexing you know like
what if I index with a slice what if I
what if I index with a slice what if I
don't you know and you can very very
don't you know and you can very very
quickly time stuff out like that the
quickly time stuff out like that the
puffer lib trainer has a bunch of
puffer lib trainer has a bunch of
different blocks like types of code that
different blocks like types of code that
are all grouped together just
are all grouped together just
essentially using 20 lines of code that
essentially using 20 lines of code that
just does that and at times like the
just does that and at times like the
total amount of uh time spent in the
total amount of uh time spent in the
forward passive evaluation in the
forward passive evaluation in the
environment miscellaneous overhead and
environment miscellaneous overhead and
it just shows me in that little
it just shows me in that little
dashboard all the different places that
dashboard all the different places that
compute is being spent. So at a glance I
compute is being spent. So at a glance I
can know exactly uh what is the
can know exactly uh what is the
bottleneck.
bottleneck.
That is my main recommendation.
That is my main recommendation.
take a look at the pi the uh the
take a look at the pi the uh the
profiler and the dashboard that I've
profiler and the dashboard that I've
built in uh puffer lib a heck of a lot
built in uh puffer lib a heck of a lot
easier for most things. Now, if you're
easier for most things. Now, if you're
getting down to like timing individual
getting down to like timing individual
layers and kernels and stuff, then you
layers and kernels and stuff, then you
got to go to the PyTorch profiler.
got to go to the PyTorch profiler.
But for general usage, the thing I've
But for general usage, the thing I've
suggested is pretty dang
Anything
else?
last paragraph you wrote is literally
last paragraph you wrote is literally
what I'm believing about the majority of
what I'm believing about the majority of
researchers. Yeah. You see, this is like
researchers. Yeah. You see, this is like
I'm trying to provide this information
I'm trying to provide this information
because it's one thing to like discover
because it's one thing to like discover
this on your own slowly and it's another
this on your own slowly and it's another
to just like be told this by somebody
to just like be told this by somebody
that you have some respect and trust uh
that you have some respect and trust uh
for like this is literally the way it
for like this is literally the way it
works.
Now, let's see.
Now, let's see.
Sections overlay. I can run bazillions
Sections overlay. I can run bazillions
of other baselines, but I have eight
of other baselines, but I have eight
GPUs maxed at the same time.
GPUs maxed at the same time.
Bye. Yeah,
Bye. Yeah,
dude. I didn't even have eight. I didn't
dude. I didn't even have eight. I didn't
even have eight. I literally didn't use
even have eight. I literally didn't use
any of MIT's hardware for basically my
any of MIT's hardware for basically my
entire PhD because the cluster was such
entire PhD because the cluster was such
a mess.
I like bought a bit of my own hardware
I like bought a bit of my own hardware
and that was it. Nowadays, everyone's
and that was it. Nowadays, everyone's
running after big breakthrough models
running after big breakthrough models
and papers that just randomly bump into
and papers that just randomly bump into
a good run. Make their full research
a good run. Make their full research
life on top of that. Pretty much you
life on top of that. Pretty much you
appreciate small scope simple methods
appreciate small scope simple methods
over Yeah, we created an alternate
over Yeah, we created an alternate
universe. Exactly.
universe. Exactly.
Galaxy's worst numbers. Real robots mean
Galaxy's worst numbers. Real robots mean
nothing. No. Yeah.
nothing. No. Yeah.
Yeah. It's real bad.
pretty good. I'm trying to think what
pretty good. I'm trying to think what
other
I have like a list of of things.
I guess an ML.
I can absolutely speak to like ways that
I can absolutely speak to like ways that
papers I should give some context
papers I should give some context
on this.
I think I should write a uh how science
I think I should write a uh how science
lies. You mean plenty of work PS works
lies. You mean plenty of work PS works
in
in
competition and pressure?
competition and pressure?
Yeah, it's like so my lab was very good.
Yeah, it's like so my lab was very good.
I basically didn't have any pressure to
I basically didn't have any pressure to
do anything other than make sure I had
do anything other than make sure I had
like at least three papers
like at least three papers
uh by the time I was ready to graduate,
uh by the time I was ready to graduate,
which is really not that bad. But there
which is really not that bad. But there
are absolutely labs where they basically
are absolutely labs where they basically
just force students to grind out like
just force students to grind out like
four papers per year.
four papers per year.
I I don't even think I can speak to just
I I don't even think I can speak to just
how depressing and horrible
how depressing and horrible
trying to produce four papers a year is.
trying to produce four papers a year is.
It does depend a lot on your area
It does depend a lot on your area
because like there are areas where you
because like there are areas where you
can basically just reuse your same code
can basically just reuse your same code
repo and like make some changes and
repo and like make some changes and
publish a whole new paper. Um or like
publish a whole new paper. Um or like
there are places where the
there are places where the
implementations of the algorithms are
implementations of the algorithms are
actually quite short. So it's like not
actually quite short. So it's like not
that bad. But just trying to like do
that bad. But just trying to like do
creative like hard science that requires
creative like hard science that requires
thinking and experimentation and
thinking and experimentation and
comparison and deep like research in
comparison and deep like research in
such like a compressed time frame and
such like a compressed time frame and
then having to produce a super boring
then having to produce a super boring
dry manuscript out of it. Um,
dry manuscript out of it. Um,
it's just horrible.
it's just horrible.
It's not fun at all.
It's not fun at all.
Honestly, I think my best research
Honestly, I think my best research
cycle, so my best year for Nurups on my
cycle, so my best year for Nurups on my
last year, um,
I had three papers and I spent I spent
I had three papers and I spent I spent
like I think a total of two days writing
like I think a total of two days writing
all three papers cuz I basically I just
all three papers cuz I basically I just
decided that instead of stressing over
decided that instead of stressing over
the thing and trying to like perfect it,
the thing and trying to like perfect it,
I was just going to write the dumbest,
I was just going to write the dumbest,
simplest, most thing I possibly
simplest, most thing I possibly
could because that's the way that
could because that's the way that
writing is expected. And then those ones
writing is expected. And then those ones
got in when papers that I actually spent
got in when papers that I actually spent
weeks on trying to make actually good
weeks on trying to make actually good
did not get accepted. So yeah,
did not get accepted. So yeah,
checking competitions like Kaggle,
checking competitions like Kaggle,
reading top 10 winning solutions
reading top 10 winning solutions
formative and reading. Sometimes you
formative and reading. Sometimes you
want to be a little careful though.
You do want to be a little careful
You do want to be a little careful
because like what happens a lot of the
because like what happens a lot of the
time with the Kaggle competitions is
time with the Kaggle competitions is
they get into this endless loop of
they get into this endless loop of
feature engineering and and like
feature engineering and and like
it works and then eventually they just
it works and then eventually they just
get steamrolled by like the new
get steamrolled by like the new
architecture or the new algorithm.
Competitions in general are weird. Like
Competitions in general are weird. Like
I organized a bunch of competitions
I organized a bunch of competitions
and like there are definitely some
and like there are definitely some
practical things that come out of it.
practical things that come out of it.
But yeah, the competitions are
But yeah, the competitions are
definitely weird.
filter this combo heavy stuff
filter this combo heavy stuff
asking action masking.
Yeah. So,
Yeah. So,
and asking action masking is pretty
and asking action masking is pretty
legitimate
there. It's tough cuz like actually a
there. It's tough cuz like actually a
lot of the winners in the competition
lot of the winners in the competition
just kind of scaled the crap out of it.
just kind of scaled the crap out of it.
Um like the neural MMO 2 competition, it
Um like the neural MMO 2 competition, it
was kind of like they scaled the crap
was kind of like they scaled the crap
out of it.
No, not neurommo. It was the one point
No, not neurommo. It was the one point
the one before that.
the one before that.
This neural MMO 2 competition actually
This neural MMO 2 competition actually
that didn't get uh well I can tell that
that didn't get uh well I can tell that
story.
story.
So, the reason that the neural MMO 2
So, the reason that the neural MMO 2
competition, the one before I graduated,
competition, the one before I graduated,
uh got like an eighth of the
uh got like an eighth of the
participation of the previous ones, even
participation of the previous ones, even
though it was like way better by every
though it was like way better by every
metric is, uh yeah, we had one, two,
metric is, uh yeah, we had one, two,
two or three sponsors.
two or three sponsors.
Yeah, three sponsors and all of them
Yeah, three sponsors and all of them
screwed me.
screwed me.
So, I ended up having to personally pay
So, I ended up having to personally pay
the prize money for that. Uh, it caused
the prize money for that. Uh, it caused
like basically a bunch of people
like basically a bunch of people
promised and then they pulled out
promised and then they pulled out
and after they'd already committed it
and after they'd already committed it
and we'd announced it. So, that caused
and we'd announced it. So, that caused
me like a full summer's worth of unpaid
me like a full summer's worth of unpaid
work
work
and a whole bunch of with the open
and a whole bunch of with the open
source community that just wasn't fun
source community that just wasn't fun
for anybody. And at the end of the day,
for anybody. And at the end of the day,
we didn't have the promotion, so stuff
we didn't have the promotion, so stuff
just didn't get advertised well. It was
just didn't get advertised well. It was
a whole nightmare.
a whole nightmare.
So I think the results for that
So I think the results for that
competition should have been way better
competition should have been way better
and I think we would have seen something
and I think we would have seen something
a little bit more interesting than the
a little bit more interesting than the
previous one. But yeah, these are the
previous one. But yeah, these are the
things that happen in science, right?
things that happen in science, right?
It's not a pure discipline. It's still
It's not a pure discipline. It's still
people doing
people doing
Yeah.
Yeah.
It's still people doing
It's still people doing
and people kind of suck.
had nothing to do with my and I want to
had nothing to do with my and I want to
make this clear, had nothing to do with
make this clear, had nothing to do with
my adviser or my lab at all.
my adviser or my lab at all.
He literally didn't even know that this
He literally didn't even know that this
stuff was happening and he couldn't have
stuff was happening and he couldn't have
done anything if I told
So yeah,
So yeah,
and this type of stuff is like stuff of
and this type of stuff is like stuff of
this magnitude isn't even like super
this magnitude isn't even like super
uncommon, frankly.
PhD is long. You're going to deal with
PhD is long. You're going to deal with
some
Frankly, it's probably the reason that
Frankly, it's probably the reason that
um you know, you can criticize my work
um you know, you can criticize my work
and that's fine. I get real pissed when
and that's fine. I get real pissed when
people criticize my motives though
people criticize my motives though
because I've proven I' like I've proven
because I've proven I' like I've proven
my motives over many many years.
Oh, it's 5:53.
Oh, it's 5:53.
So, I got to go for dinner in just a
So, I got to go for dinner in just a
minute here, folks. Um,
minute here, folks. Um,
I will finish this. I think I'm going to
I will finish this. I think I'm going to
write on this tomorrow, though, during
write on this tomorrow, though, during
the day because I think that this will
the day because I think that this will
be really good if I can like actually
be really good if I can like actually
make some good progress on this. Uh, I
make some good progress on this. Uh, I
think that an article like this could do
think that an article like this could do
very well. I think people will be like
very well. I think people will be like
this could be helpful for a ton of
this could be helpful for a ton of
people and hopefully we'll get a bunch
people and hopefully we'll get a bunch
of new contributors out of this as well.
of new contributors out of this as well.
I don't want to spend like a week
I don't want to spend like a week
writing just an article, but a few days
writing just an article, but a few days
actually like kind of between the other
actually like kind of between the other
things I'm doing is pretty good. I think
things I'm doing is pretty good. I think
I'm happy with that. So, um, for the
I'm happy with that. So, um, for the
folks that have been here,
folks that have been here,
thank you for your interest.
thank you for your interest.
All my research is free and open source.
All my research is free and open source.
Find all of my stuff at puffer.ai.
Find all of my stuff at puffer.ai.
If you want to help me out for free,
If you want to help me out for free,
literally free in five seconds, star the
literally free in five seconds, star the
repo.
repo.
It really, really helps.
It really, really helps.
Like the more stars this have has, the
Like the more stars this have has, the
more people puffer gets recommended to,
more people puffer gets recommended to,
the more people see Puffer Lib, it just
the more people see Puffer Lib, it just
helps.
helps.
And if you want to get involved with
And if you want to get involved with
research,
research,
the Discord link discord.gg/ GG/puffer.
the Discord link discord.gg/ GG/puffer.
There's no requirement to get involved
There's no requirement to get involved
with any of this and pretty much all the
with any of this and pretty much all the
contributors are just people have stood
contributors are just people have stood
up and thought that this looked like
up and thought that this looked like
cool work and tried to learn this stuff.
cool work and tried to learn this stuff.
Other than that, you can follow me on X
Other than that, you can follow me on X
for more and I will be back likely first
for more and I will be back likely first
thing in the morning. So, uh, thank you
thing in the morning. So, uh, thank you
and enjoy the 4th of July.

Kind: captions
Language: en
Hello.
Hello.
We are back live.
Happy 4th.
Got a lot of stuff I want to do today.
Let me uh let me show that off real
Let me uh let me show that off real
quick.
quick.
Show the plan.
We have a thematically appropriate
We have a thematically appropriate
project for today
drones
or
welcome. commanded.
Today we're going to make the drone uh
Today we're going to make the drone uh
the drone swarm thing actually work and
the drone swarm thing actually work and
we're going to do something thematically
we're going to do something thematically
appropriate for the fourth with it
talk.
talk.
Uh,
Uh,
I will probably be doing the article
I will probably be doing the article
tomorrow
tomorrow
for most of the day.
I might work on it a little bit after
I might work on it a little bit after
this, but I do this is appropriate for
this, but I do this is appropriate for
the fourth. I would ideally I would like
the fourth. I would ideally I would like
to have this done for the fourth.
We're going to see if we can make the
We're going to see if we can make the
drones assemble themselves into the
drones assemble themselves into the
American flag.
Going to be cool.
I figure that'll be a cool demo that'll
I figure that'll be a cool demo that'll
get some people interested in Puffar.
And I actually have to go look at my own
And I actually have to go look at my own
flag.
marketing idea. Yeah,
marketing idea. Yeah,
I have to do a little bit of stuff like
I have to do a little bit of stuff like
that, right?
It's fun. It gets companies interested.
going to be
going to be
blue, blue, blue,
red, red,
red, red,
red, red.
half the flag.
It's tough to do like a down sampled
It's tough to do like a down sampled
American flag.
stripe is red.
Our flag's kind of complicated. All
Our flag's kind of complicated. All
right. It's not like
right. It's not like
It's not like the China flag or the
It's not like the China flag or the
Japan flag where it's super easy to know
Japan flag where it's super easy to know
what the heck it is.
at the stars for the stra the states and
at the stars for the stra the states and
that's like the stripes or the colonies
that's like the stripes or the colonies
or whatever the heck but like I don't
or whatever the heck but like I don't
think most people actually remember the
think most people actually remember the
order or how many are in each row or
order or how many are in each row or
whatever.
No, we like our flag.
Morning,
Brian. My name is Joseph.
I've been thinking about renaming the
I've been thinking about renaming the
channel. You kind of confuse everybody
channel. You kind of confuse everybody
when you rebrand it. The channel should
when you rebrand it. The channel should
probably just be my name or whatever
probably just be my name or whatever
because it's all of my stuff across a
because it's all of my stuff across a
bunch of different projects.
bunch of different projects.
But like my handle does not make a good
But like my handle does not make a good
YouTube like thing cuz my handle's J
YouTube like thing cuz my handle's J
Suarez 5341.
Suarez 5341.
It looks like autogender. Whatever.
Okay. So, we do the position
uh
Oh, we can literally just do it like
Oh, we can literally just do it like
this. Actually, this is super easy.
this. Actually, this is super easy.
We'll just turn the plane task into the
We'll just turn the plane task into the
flag task because it's basically the
flag task because it's basically the
same thing if you think about it.
same thing if you think about it.
We'll just change this into flag.
We have the reference flag, of course.
The aspect ratio of the flag, it's like
The aspect ratio of the flag, it's like
3 to one, isn't it?
3 to one, isn't it?
It's like three.
It's like three.
Can't do three times this.
I have to do 2/3.
Do like something like This
actually shouldn't take this like that
actually shouldn't take this like that
long. And I might even be able to just
long. And I might even be able to just
start working on the article today. I do
start working on the article today. I do
want to make sure that this is actually
want to make sure that this is actually
good though.
Initializer element is not constant.
Initializer element is not constant.
Why?
Uh yeah, this is not going to work with
Uh yeah, this is not going to work with
this pound decline, right?
Why is that an error?
Okay. Constant.
Okay. Constant.
I got to actually uh do reading up on
I got to actually uh do reading up on
why the heck that happens.
Oh, and
are.
So, if this flips the axis uh correctly,
So, if this flips the axis uh correctly,
then all we'll have to do is change the
then all we'll have to do is change the
drone colors and we should get a nice
drone colors and we should get a nice
flag effect. We'll just have to train a
flag effect. We'll just have to train a
slightly better policy.
Cool thing about these is I shouldn't
Cool thing about these is I shouldn't
even have to really retrain
handle with numbums.
Oh,
Oh,
it also kind of looks autogen. I don't
it also kind of looks autogen. I don't
know. My handle is that because I can
know. My handle is that because I can
get it everywhere, right? You can never
get it everywhere, right? You can never
actually get your handle. So, it's like
actually get your handle. So, it's like
if you don't just pick some random
if you don't just pick some random
number these days or have some
number these days or have some
incredibly specific username that's not
incredibly specific username that's not
actually based on your name. You won't
actually based on your name. You won't
get the same one everywhere.
get the same one everywhere.
Like my Twitch is the same, my uh my ex
Like my Twitch is the same, my uh my ex
is the same Discord, like they're all
is the same Discord, like they're all
the same.
the same.
Like the thing is that the solution to
Like the thing is that the solution to
this is to have people have like the
this is to have people have like the
extra,
extra,
you know, like the extra numbers that if
you know, like the extra numbers that if
you hover over you see, but that doesn't
you hover over you see, but that doesn't
work super well for social media stuff
work super well for social media stuff
because it's really easy to impersonate
because it's really easy to impersonate
people that way. So,
Okay, so here are our drones in a
Okay, so here are our drones in a
sphere.
sphere.
See, that's what they're trying to do.
See, that's what they're trying to do.
They have the follow task, the idle
They have the follow task, the idle
task, the hover task,
task, the hover task,
orbit follow line.
Okay. So, here's the flag as it's
Okay. So, here's the flag as it's
supposed to be. Uh, it's not terrible.
supposed to be. Uh, it's not terrible.
It is on the wrong axis though, I
It is on the wrong axis though, I
believe.
So,
it should be should it be wise or
it should be should it be wise or
something?
Try this.
Yeah. So, that's a good flag.
Yeah. So, that's a good flag.
Now all we have to do
Now all we have to do
actually set the drone colors.
Okay.
Okay, so here are our drones.
Flag is upside down. I can tell, right?
Oh, this is going to be super cool when
Oh, this is going to be super cool when
it works, though. I can tell.
If I can just flip it upside
Okay. So, I think we have to reestimate
Okay. So, I think we have to reestimate
like collisions or something here,
like collisions or something here,
right?
So the body sphere is radius. Wait, is
So the body sphere is radius. Wait, is
that the radius?
that the radius?
I think that is the radius. So to do our
I think that is the radius. So to do our
our ray lib docs here
is reream not showing.
Okay, stream is fine.
This is the radius. Yes.
This is the radius. Yes.
So
So
the body has a radius of 0.3.
And then the rotor has an additional
And then the rotor has an additional
0.15.
0.15.
That's going to be times two.
So, this says it should be size 0.6.
So, this says it should be size 0.6.
Is that true?
How big are these targets in comparison
How big are these targets in comparison
to the drones?
Oh, yeah. No, that's right. Cuz if those
Oh, yeah. No, that's right. Cuz if those
are 0.25, 25.
So yeah, this has got to be
So yeah, this has got to be
if we do 0.45 for the target, this will
if we do 0.45 for the target, this will
be the size of the spear.
be the size of the spear.
If the flag was moving in a circle for
If the flag was moving in a circle for
them to do it, we'll train a better
them to do it, we'll train a better
policy, Tim. Don't worry.
I want to make sure we get it so that it
I want to make sure we get it so that it
will look good when we have the policy
will look good when we have the policy
and then you know leave the RL to me. I
and then you know leave the RL to me. I
can always get RL to work.
Okay. So, is this the size of a drone?
Okay. So, is this the size of a drone?
Yeah, that's about the size of a drone.
Yeah, that's about the size of a drone.
Right.
Right.
So, this is a radius of 0.45.
So it's actually drones are colliding if
So it's actually drones are colliding if
they're within
they're within
basically within one unit
basically within one unit
of another drone is going to be
of another drone is going to be
collision.
So, I didn't think about that at all.
So, let's see what happens when I
So, let's see what happens when I
retrain with this dramatically larger
retrain with this dramatically larger
collision penalty.
Welcome YouTube folks.
Welcome YouTube folks.
For the people who got here uh recently,
For the people who got here uh recently,
I'm currently, since it is the 4th of
I'm currently, since it is the 4th of
July, happy 4th, we're training some
July, happy 4th, we're training some
drones to make a flag in midair with
drones to make a flag in midair with
reinforcement learning.
This will be good a good environment for
This will be good a good environment for
us to use in research. It will be a cool
us to use in research. It will be a cool
demo for people in industry and I think
demo for people in industry and I think
it'll just be a fun thing overall.
Okay, so this is noticeable noticeably
Okay, so this is noticeable noticeably
smaller reward. I think we were getting
smaller reward. I think we were getting
up to like 450
up to like 450
or before.
or before.
So this is essentially telling us that
So this is essentially telling us that
the task is harder now.
and the fact that it's actually still
and the fact that it's actually still
learning though is good.
Oh, it's actually Yeah, that's pretty
Oh, it's actually Yeah, that's pretty
good.
good.
Um, let's go check all the rewards. I'm
Um, let's go check all the rewards. I'm
sure at least some of these I've just
sure at least some of these I've just
defined stupidly.
defined stupidly.
Happy fourth, Brian.
update these rewards next.
May the 4th be battle one. That's May
May the 4th be battle one. That's May
5th, not not July 4th.
5th, not not July 4th.
Okay, so this is them attempting to form
Okay, so this is them attempting to form
a sphere.
a sphere.
This is them attempting to follow random
This is them attempting to follow random
targets.
We should put in a collision tracking
We should put in a collision tracking
term now because it they're like not as
term now because it they're like not as
close to their targets anymore, but it
close to their targets anymore, but it
seems like they're way better at not
seems like they're way better at not
colliding, which is roughly what we'd
colliding, which is roughly what we'd
expect.
Like look, they're all following, right?
Like look, they're all following, right?
They're all following this target, but
They're all following this target, but
they're doing it in a way where they're
they're doing it in a way where they're
trying to not collide.
Yeah, they do all form their line. Yeah,
Yeah, they do all form their line. Yeah,
but see this line is like it it's too
but see this line is like it it's too
close, so they can't actually do it.
close, so they can't actually do it.
That's going to hurt training quite a
That's going to hurt training quite a
bit.
Okay. So, let's fix up some of those
Okay. So, let's fix up some of those
tasks.
Mesmerizing. It'll be a lot more
Mesmerizing. It'll be a lot more
mesmerizing once they actually uh work
mesmerizing once they actually uh work
nicely. You will see.
are nice. Yeah, they should be cool.
Oh, yeah. That's our welcome.
Oh, yeah. That's our welcome.
I'm learning slowly.
Trying to think what we do about this
Trying to think what we do about this
line task.
You have to be kind of careful in
You have to be kind of careful in
reinforcement learning because when you
reinforcement learning because when you
give stuff impossible tasks like you can
give stuff impossible tasks like you can
kind of mess up the uh
kind of mess up the uh
rewards.
Yeah, I think we're going to do instead
Yeah, I think we're going to do instead
of line we'll do cube.
How bad is it going to be to do a cube?
Kind of have to, right? This is the only
Kind of have to, right? This is the only
one that's messed up cuz there's just
one that's messed up cuz there's just
not enough space.
There's no good way to generate uh that
There's no good way to generate uh that
formula, right? You just kind of have to
formula, right? You just kind of have to
like write the whole thing out
like write the whole thing out
annoyingly.
Wait, how many a cube has
Wait, how many a cube has
it 12 lines for a cube? Four, four, and
it 12 lines for a cube? Four, four, and
four. Yeah, it's 12.
There anything else I can do that's like
There anything else I can do that's like
has an easier mathematical formula
has an easier mathematical formula
or not really.
Maybe there's like a sampling based one.
Now this is something else.
Oh, we could just do cube instead.
Oh, we could just do cube instead.
That would be way easier, right?
4x4 by 4
4x4 by 4
is 64, right?
Yeah. So, we can just do that. That's
Yeah. So, we can just do that. That's
super easy. I was thinking of like the
super easy. I was thinking of like the
outline of a cube, but this is so much
outline of a cube, but this is so much
easier.
Hey Brad. Doing pretty well.
Hey Brad. Doing pretty well.
Pretty well.
Yeah, that's not a cube.
by the x percent.
Yeah. So it can't be divi uh divided by
Okay. So now since four we can do
Okay. So now since four we can do
four units
four units
four * x 8.
Okay. Almost
Okay. Almost
almost a cube.
Okay, that's a cube. It's just offset.
Okay, that's a cube. It's just offset.
Weird.
What do you think is the biggest
What do you think is the biggest
challenge in getting RL agents to
challenge in getting RL agents to
generalize to different environments?
generalize to different environments?
Should I do a little segment on this?
Should I do a little segment on this?
I do have a clipping thing that maybe
I do have a clipping thing that maybe
will let will maybe will let me put this
will let will maybe will let me put this
on YouTube if I explain this real quick.
This is a pet peeve of mine.
time.
Yeah. This is a pet peeve of mine that
Yeah. This is a pet peeve of mine that
people say, "Oh, reinforcement learning
people say, "Oh, reinforcement learning
doesn't generalize."
doesn't generalize."
It doesn't even require you to know
It doesn't even require you to know
anything about reinforcement learning to
anything about reinforcement learning to
understand the problem here.
understand the problem here.
I I don't know people have these magical
I I don't know people have these magical
blinders when it comes to RL. So let me
blinders when it comes to RL. So let me
give you the analog right of what this
give you the analog right of what this
looks like in supervised learning. So
looks like in supervised learning. So
let's say that you train an image model
let's say that you train an image model
on like cat and then you say well can we
on like cat and then you say well can we
use the same model now that can detect
use the same model now that can detect
cats to detect dogs.
And if you ask anybody in supervised
And if you ask anybody in supervised
learning, at least with traditional
learning, at least with traditional
methods, no, this does not work. This is
methods, no, this does not work. This is
not how we train models. This type of
not how we train models. This type of
generalization doesn't work at all
generalization doesn't work at all
because something that is only ever seen
because something that is only ever seen
cats is not going to be able to
cats is not going to be able to
recognize a distinct equally complex
recognize a distinct equally complex
topic. This is like asking you to study
topic. This is like asking you to study
mathematics. Okay? And now because you
mathematics. Okay? And now because you
know mathematics, you should be able to
know mathematics, you should be able to
like zero shot know chemistry or some
like zero shot know chemistry or some
other subject. So, how do you actually
other subject. So, how do you actually
make this work? Well, you don't just
make this work? Well, you don't just
train on cat, right? You train on like
train on cat, right? You train on like
cat,
cat,
snake,
uh, chair,
computer,
and then you have a whole bunch of new
and then you have a whole bunch of new
topics. Okay? And then the
topics. Okay? And then the
representation that you learn from all
representation that you learn from all
of these
of these
maybe lets you learn an equally
maybe lets you learn an equally
difficult concept,
difficult concept,
right? This kind of works. So, what does
right? This kind of works. So, what does
this look like in reinforcement
this look like in reinforcement
learning? Okay, train on pong
breakout.
Literally the same problem. So, if you
Literally the same problem. So, if you
were to train on a ton of different
were to train on a ton of different
environments, right, like
environments, right, like
address.
And if you were to train on hundreds of
And if you were to train on hundreds of
these, then yeah, you can actually
these, then yeah, you can actually
potentially get some transfer. It just
potentially get some transfer. It just
turns out, one, we don't have a ton of
turns out, one, we don't have a ton of
environments, and two, there's some
environments, and two, there's some
annoying infrastructure challenges that
annoying infrastructure challenges that
make it slightly more difficult than
make it slightly more difficult than
just putting different images into the
just putting different images into the
same model.
same model.
But yes, generalization does work in
But yes, generalization does work in
reinforcement learning. we have very
reinforcement learning. we have very
many instances demonstrating that like
many instances demonstrating that like
if we generate a whole bunch of tasks,
if we generate a whole bunch of tasks,
we can solve new tasks never seen of the
we can solve new tasks never seen of the
same type.
same type.
You just kind of have to think about it
You just kind of have to think about it
in this terms of uh in terms of this
in this terms of uh in terms of this
parallel.
parallel.
So there you go.
Let me grab a cup of coffee and I will
Let me grab a cup of coffee and I will
answer any questions on that.
That makes sense, Brad?
Hey, major. Welcome back from my 30
Hey, major. Welcome back from my 30
secondond coffee. You feel my coffee
secondond coffee. You feel my coffee
break.
That is fair. Perhaps it's not the right
That is fair. Perhaps it's not the right
question. It isn't the right question to
question. It isn't the right question to
ask. But the thing is, you're not the
ask. But the thing is, you're not the
first one to ask it that way.
And this is one of the things that
And this is one of the things that
drives me crazy in reinforcement
drives me crazy in reinforcement
learning all the time is you have RL
learning all the time is you have RL
researchers, right, who will basically
researchers, right, who will basically
just say, "Oh, RL is bad because it
just say, "Oh, RL is bad because it
can't generalize from one environment to
can't generalize from one environment to
another. I will go spend two years
another. I will go spend two years
working on this problem. You don't need
working on this problem. You don't need
to spend two years working on this
to spend two years working on this
problem to look at it and do the exact
problem to look at it and do the exact
thing I just did and say you will fail
thing I just did and say you will fail
because that's just not a thing that
because that's just not a thing that
even makes sense." like there's no
even makes sense." like there's no
reason to even suppose that that's
reason to even suppose that that's
possible.
But it doesn't matter that it's not
But it doesn't matter that it's not
possible, right? If we just keep making
possible, right? If we just keep making
our methods better and eventually we
our methods better and eventually we
scale the stuff and figure out there are
scale the stuff and figure out there are
like a few infrastructure problems
like a few infrastructure problems
making it a little annoying to scale to
making it a little annoying to scale to
more tasks. It has been done. It just
more tasks. It has been done. It just
hasn't been done at like very small
hasn't been done at like very small
scale. I've been meaning to do this soon
scale. I've been meaning to do this soon
because I actually have very very
because I actually have very very
convincing evidence that RL generalizes
convincing evidence that RL generalizes
uh from like my various experiments I've
uh from like my various experiments I've
run. It's just at smaller scale.
run. It's just at smaller scale.
But yeah, like RL kind of does this all
But yeah, like RL kind of does this all
the time where they fail to draw
the time where they fail to draw
parallels to other areas of ML where
parallels to other areas of ML where
these questions have been answered and
these questions have been answered and
instead they spend a lot of time trying
instead they spend a lot of time trying
to solve problems that are pretty
to solve problems that are pretty
clearly not solvable,
clearly not solvable,
right?
And actually, Brad, let me let me just
And actually, Brad, let me let me just
show you how bad this is.
So, I interned at OpenAI when I was
So, I interned at OpenAI when I was
I was like 20, maybe 21 at the time.
uh if they had offered me a full-time
uh if they had offered me a full-time
position, it would have been to work on
position, it would have been to work on
this
this
this paper.
this paper.
Okay, this is hideand-seek.
So in this paper,
So in this paper,
one of the things that they wanted to do
one of the things that they wanted to do
was they wanted to ask, can we train
was they wanted to ask, can we train
these agents to play this game and then
these agents to play this game and then
have these same agents transfer to other
have these same agents transfer to other
tasks in the same environment, mind you.
tasks in the same environment, mind you.
So doing other tasks in the same
So doing other tasks in the same
environment. It was stuff like, can we
environment. It was stuff like, can we
have them count objects in this
have them count objects in this
environment? And we trained them to like
environment? And we trained them to like
move the things to a specific place. And
move the things to a specific place. And
before they even started writing a
before they even started writing a
single line of code on this project, I
single line of code on this project, I
told them that it was doomed to fail.
told them that it was doomed to fail.
And I basically made the exact same
And I basically made the exact same
argument. This was 2018 2019. I made the
argument. This was 2018 2019. I made the
exact same argument that I gave to them,
exact same argument that I gave to them,
which is, hey, look, if you want this to
which is, hey, look, if you want this to
work, you're going to have to train the
work, you're going to have to train the
agent on a whole bunch of different
agent on a whole bunch of different
tasks and then give them some tasks that
tasks and then give them some tasks that
are new that are of the same complexity
are new that are of the same complexity
or ideally a little bit easier and then
or ideally a little bit easier and then
it'll work, right? If you train on at
it'll work, right? If you train on at
least several hundred tasks, maybe more,
least several hundred tasks, maybe more,
and then you give them tasks that are
and then you give them tasks that are
specified with, you know, the same sort
specified with, you know, the same sort
of format that are maybe even a little
of format that are maybe even a little
easier, then it'll work. They didn't
easier, then it'll work. They didn't
listen to me. They wanted to just try it
listen to me. They wanted to just try it
anyways. And what happened,
the exact thing that I told them would
the exact thing that I told them would
happen.
Basically, in most of these tasks,
Basically, in most of these tasks,
it makes almost no difference whether
it makes almost no difference whether
they pre-train it or train it from
they pre-train it or train it from
scratch. Doesn't help. Sometimes you get
scratch. Doesn't help. Sometimes you get
lucky and one of the tasks ends up being
lucky and one of the tasks ends up being
pretty similar, but for the most part
pretty similar, but for the most part
doesn't work.
So, the question that you asked was not
So, the question that you asked was not
necessarily a stupid question in the
necessarily a stupid question in the
sense that this is a project, right?
sense that this is a project, right?
where world class RL researchers spent
where world class RL researchers spent
over a year on this. I think it was
over a year on this. I think it was
close to two.
Now, mind you, I had the answer correct
Now, mind you, I had the answer correct
from the start. Um,
from the start. Um,
but this tends to be one of those things
but this tends to be one of those things
that I'm pretty good at
is like coming up with those really
is like coming up with those really
basic obvious arguments that don't even
basic obvious arguments that don't even
require you to understand anything about
require you to understand anything about
the field to like see why something
the field to like see why something
makes sense or doesn't make sense.
for some reason in RL especially like
for some reason in RL especially like
that type of thing is just very rare
that type of thing is just very rare
and that's why puffer lib is allowed to
and that's why puffer lib is allowed to
exist because in a sane field where
exist because in a sane field where
people do things a sane way I would not
people do things a sane way I would not
be able to make something that is a
be able to make something that is a
thousand times faster than everything
thousand times faster than everything
else
I actually, and I wrote this in the
I actually, and I wrote this in the
article, uh, this is a definitely top 10
article, uh, this is a definitely top 10
result in reinforcement learning. At one
result in reinforcement learning. At one
point, it was a top five result. I don't
point, it was a top five result. I don't
know if it's a top five result anymore.
know if it's a top five result anymore.
It's probably still just a top 10 result
It's probably still just a top 10 result
in reinforcement learning. I actually
in reinforcement learning. I actually
personally think that our latest result
personally think that our latest result
on neural MMO is better than this. Like
on neural MMO is better than this. Like
holistically, as far as a RL result
holistically, as far as a RL result
goes, I think this is a better result
goes, I think this is a better result
than emergent tool use.
This thing actually does emergently use
This thing actually does emergently use
tools as well, right?
Takes it and it doesn't even like it has
Takes it and it doesn't even like it has
to actually go figure out where the
to actually go figure out where the
tools are here. It's trying to figure
tools are here. It's trying to figure
out how it can get that one.
out how it can get that one.
What are the top five?
What are the top five?
For me, the top one by a mile is OpenAI
For me, the top one by a mile is OpenAI
5. It's Dota. I love that project. Like,
5. It's Dota. I love that project. Like,
you can basically learn almost
you can basically learn almost
everything you need to know about
everything you need to know about
reinforcement learning and how the field
reinforcement learning and how the field
will be solved and actually a lot of
will be solved and actually a lot of
what I've done for Puffer from just that
what I've done for Puffer from just that
one paper.
one paper.
Uh, Alpha Star I would put as a a
Uh, Alpha Star I would put as a a
somewhat close second.
somewhat close second.
I would put Go in there. I think I put
I would put Go in there. I think I put
Go number three, but keep in mind I
Go number three, but keep in mind I
could just not be respecting the
could just not be respecting the
difficulty of Go enough. The thing that
difficulty of Go enough. The thing that
makes Starcraft and Dota uh better for
makes Starcraft and Dota uh better for
me is like they require a lot of
me is like they require a lot of
different types of reasoning that are
different types of reasoning that are
really kind of obvious. And it's a heck
really kind of obvious. And it's a heck
of a lot easier to play a bit of uh of
of a lot easier to play a bit of uh of
Dota or play a little bit of Starcraft
Dota or play a little bit of Starcraft
and kind of understand why the game is
and kind of understand why the game is
hard than to play like a bit of Go. You
hard than to play like a bit of Go. You
kind of just won't understand anything
kind of just won't understand anything
for a very long time. Um
for a very long time. Um
the number three and the number four
the number three and the number four
slots get harder. So for quite a while
slots get harder. So for quite a while
back in that era it was uh capture the
back in that era it was uh capture the
flag in emergent tool use were my uh
flag in emergent tool use were my uh
number four and number five. Now since
number four and number five. Now since
then there's been stuff like uh
then there's been stuff like uh
deepminded Xland
deepminded Xland
and there have been like some other
and there have been like some other
results and not like just not straight
results and not like just not straight
RL research but applications of it that
RL research but applications of it that
have been pretty good. And by the way,
have been pretty good. And by the way,
when I'm saying top five, I'm talking
when I'm saying top five, I'm talking
about like largecale results of solving
about like largecale results of solving
a problem with RL in a way that tells us
a problem with RL in a way that tells us
something about RL itself, right? So
something about RL itself, right? So
obviously like the original stuff like
obviously like the original stuff like
PO algorithms, I'm not considering those
PO algorithms, I'm not considering those
in that same class.
in that same class.
But in terms of like the impressive
But in terms of like the impressive
results that change the way you think
results that change the way you think
about what RL can do, it might even
about what RL can do, it might even
still be those. I probably put Xand. Um,
still be those. I probably put Xand. Um,
where do I put Xland?
where do I put Xland?
Got to be like number three or four
Got to be like number three or four
after those.
after those.
But I don't know. Since then, you know,
But I don't know. Since then, you know,
we've actually we have two results in
we've actually we have two results in
Puffer that I think are up there now.
Puffer that I think are up there now.
Solving Pokemon, well, not solving, but
Solving Pokemon, well, not solving, but
beating Pokemon Red with reinforcement
beating Pokemon Red with reinforcement
learning.
learning.
Crazy result. not quite as clean as I
Crazy result. not quite as clean as I
would have liked it to have been. Um,
would have liked it to have been. Um,
mainly just because the end was slow.
mainly just because the end was slow.
But yeah, Pokemon Red
But yeah, Pokemon Red
and then now we have Neural MMO 3.
and then now we have Neural MMO 3.
These are our two what I would say are
These are our two what I would say are
our two big results.
Don't discount the puffer.
I haven't watched the presentation,
I haven't watched the presentation,
Brad, but if you're talking about the
Brad, but if you're talking about the
one that's like
one that's like
watching like watching the Atari and
watching like watching the Atari and
then like having a robot like play the
then like having a robot like play the
thing,
thing,
it's not the direction I think is going
it's not the direction I think is going
to like be the useful one for RL at all.
to like be the useful one for RL at all.
It's cool work and John Carmarmac is
It's cool work and John Carmarmac is
amazing. Um, but as far as the direction
amazing. Um, but as far as the direction
that that line of inquiry goes, I've
that that line of inquiry goes, I've
seen it and I it's not the direction I
seen it and I it's not the direction I
think that we need to go uh to make this
think that we need to go uh to make this
field actually work. And to follow up
field actually work. And to follow up
and answer that, what does it mean for
and answer that, what does it mean for
RL to be solved?
RL to be solved?
Well, it means a lot of things. I I
Well, it means a lot of things. I I
would say that we have fixed
would say that we have fixed
reinforcement learning in the last year.
reinforcement learning in the last year.
We have not solved it. And by fixed, I
We have not solved it. And by fixed, I
mean that if one year ago you were to
mean that if one year ago you were to
try to do literally anything in
try to do literally anything in
reinforcement learning, it's slow. It's
reinforcement learning, it's slow. It's
janky. It doesn't make sense. And
janky. It doesn't make sense. And
there's not a single person in the world
there's not a single person in the world
that can reliably predict the outcome of
that can reliably predict the outcome of
almost any experiment.
almost any experiment.
It's just a complete blackmagic mess.
It's just a complete blackmagic mess.
Now we're at the point where we can run
Now we're at the point where we can run
stuff fast. We can mostly predict the
stuff fast. We can mostly predict the
outcome of what's going to happen. And
outcome of what's going to happen. And
we have automated tools for handling a
we have automated tools for handling a
lot of the unintuitive bits.
Now I think RL can learn way faster. I
Now I think RL can learn way faster. I
think that there are lots of edge case
think that there are lots of edge case
problems where it's not very good where
problems where it's not very good where
it could be good.
it could be good.
Right? Um
sample efficiency still needs to be
sample efficiency still needs to be
tackled but in a very different way than
tackled but in a very different way than
it's been approached ever.
it's been approached ever.
Generalizability, same thing, but needs
Generalizability, same thing, but needs
to be approached in a different way than
to be approached in a different way than
it's been approached ever. Lots of
it's been approached ever. Lots of
different problems
different problems
solved would be in my sense like
solved would be in my sense like
becoming a mature area where the only
becoming a mature area where the only
progress that is made is incremental.
progress that is made is incremental.
Basically, the field gets saturated to a
Basically, the field gets saturated to a
point where it's like it works very well
point where it's like it works very well
and you can really only make incremental
and you can really only make incremental
progress on it no matter what you do.
I can I have no idea
I can I have no idea
what you're talking about though. Oh,
what you're talking about though. Oh,
hey, that guy's uh the one that did
hey, that guy's uh the one that did
Pokemon Red
Pokemon Red
is the main uh the lead on that. We were
is the main uh the lead on that. We were
just talking about that as uh they were
just talking about that as uh they were
asking for the top five results in
asking for the top five results in
reinforcement learning and uh I think
reinforcement learning and uh I think
Pokemon gets a slot in there. Now,
Pokemon gets a slot in there. Now,
will RL be applicable to everything? No.
will RL be applicable to everything? No.
not well not uniquely applicable to
not well not uniquely applicable to
everything. Let's say you do actually
everything. Let's say you do actually
need generative models for language and
need generative models for language and
vision in areas where you just have a
vision in areas where you just have a
ton of data and you need to compress it
ton of data and you need to compress it
pretty much. Um supervised learning
pretty much. Um supervised learning
problems like you're not going to learn
problems like you're not going to learn
NLP from scratch with RL. It's just a
NLP from scratch with RL. It's just a
very inefficient way to do that.
But similarly, I don't think you're
But similarly, I don't think you're
solving everything with LLMs either
solving everything with LLMs either
because the priors that you get from
because the priors that you get from
understanding vision and understanding
understanding vision and understanding
language do not help you solve fiddly
language do not help you solve fiddly
unintuitive optimization problems where
unintuitive optimization problems where
our tiny models are superhuman.
our tiny models are superhuman.
I've been so busy I haven't touched
I've been so busy I haven't touched
Puffer 3 in a couple of weeks. Puffer 3
Puffer 3 in a couple of weeks. Puffer 3
is very good. Trying to spend 30 minutes
is very good. Trying to spend 30 minutes
to track down why there was an obspace
to track down why there was an obspace
violation
violation
in the new version.
in the new version.
OB space. Did you send me a an like a a
OB space. Did you send me a an like a a
link or an issue on that that I ignored
link or an issue on that that I ignored
or didn't see?
I also got super busy with the release
I also got super busy with the release
stuff.
Oh yeah, that guy. We're doing um
Oh yeah, that guy. We're doing um
we're doing drone swarms today. We're
we're doing drone swarms today. We're
training drones to like hit a bunch of
training drones to like hit a bunch of
different targets and different shapes.
Inky and I ran into it, so we disabled
Inky and I ran into it, so we disabled
the OB space checks temporarily.
I mean, you can do that. Yeah,
if you send me a repro, I will uh I'll
if you send me a repro, I will uh I'll
look like I'll look into it for sure.
And since we have a fair few folks here,
And since we have a fair few folks here,
as usually happens when I'm yakking up
as usually happens when I'm yakking up
stuff a whole bunch,
stuff a whole bunch,
all open source stuff, all open source
all open source stuff, all open source
RL puffer.ai. I the repo to help us out.
RL puffer.ai. I the repo to help us out.
Discord to get involved with dev.
What we're doing at the moment is we are
What we're doing at the moment is we are
training a bunch of drones to fly into
training a bunch of drones to fly into
various shapes. And because it's the
various shapes. And because it's the
fourth, we're going to include the
fourth, we're going to include the
American flag as a shape in there.
Ah, there we go. Okay, so that's the
Ah, there we go. Okay, so that's the
cube shape.
Y for fix for torch.n
not being a tensor.
not being a tensor.
So, where are you getting nans? Because
So, where are you getting nans? Because
usually once you have nans in anything,
usually once you have nans in anything,
it's kind of GG. And even if you don't
it's kind of GG. And even if you don't
make the thing crash, like even if the
make the thing crash, like even if the
program doesn't crash, which admittedly
program doesn't crash, which admittedly
is nice for sweeps, um you're still
is nice for sweeps, um you're still
going to like immediately crash all
going to like immediately crash all
learning.
It's in a debug setting. I have
It's in a debug setting. I have
debug, but like what are you can you
debug, but like what are you can you
explain what you're doing with the nans?
Offerel 442
I assume not here, right?
Oh, is it NAMS on variance? Is this what
Oh, is it NAMS on variance? Is this what
it is?
Oh, yeah. You can PR that. I'll I'll
Oh, yeah. You can PR that. I'll I'll
just merge that instantly. That's fine.
just merge that instantly. That's fine.
I haven't looked at this in a while.
I haven't looked at this in a while.
That's fine. I can I can add that.
Doesn't have an item.
Doesn't have an item.
Yeah, you can you can PR that. That's
Yeah, you can you can PR that. That's
fine.
fine.
Or I mean I can just like What did you
Or I mean I can just like What did you
do? Did you just do like torchtensor of
do? Did you just do like torchtensor of
it? Is it just like torchensor
like this?
Or honestly we can just do torch.n Nan
Or honestly we can just do torch.n Nan
else
else
do item
like this probably.
Oh yeah, we can just one line that right
Oh yeah, we can just one line that right
like this.
like this.
What you're doing is beer is better.
What you're doing is beer is better.
Yeah, this should be good. I hate adding
Yeah, this should be good. I hate adding
little stupid checks everywhere when I
little stupid checks everywhere when I
can avoid it.
Okay, let's make sure that uh the rest
Okay, let's make sure that uh the rest
of these tasks
of these tasks
are reasonably presented. I believe the
are reasonably presented. I believe the
only one that's still weird is the Congo
only one that's still weird is the Congo
task
task
because I think that they're too close
because I think that they're too close
together.
Okay, this is good.
Let's see if we can train this.
So the hope here is that because we have
So the hope here is that because we have
more reasonable tasks that this should
more reasonable tasks that this should
be more stable.
Actually we can kind of check this a
Actually we can kind of check this a
little bit.
Okay, so here is episode length.
Okay, so here is episode length.
We want PF or score. Either of these
We want PF or score. Either of these
metrics is what we want. Probably score
metrics is what we want. Probably score
is better.
is better.
So this is the score previously.
So this is the score previously.
We'll see if this makes any sort of
We'll see if this makes any sort of
difference.
goal is to get nice stable clean drone
goal is to get nice stable clean drone
policies. And uh they should be able to
policies. And uh they should be able to
form a sphere, form a cube, follow each
form a sphere, form a cube, follow each
other, follow one specific point without
other, follow one specific point without
crashing for the most part. You should
crashing for the most part. You should
actually add a collision log in here as
actually add a collision log in here as
well.
We have add log. Okay.
Last collision episode length
full of float collisions.
that the agent.
Okay. 428
This is our latest policy.
Form a rough sphere.
Form a rough sphere.
Could be better for sure. Right.
Could be better for sure. Right.
This is them just like fly around. Don't
This is them just like fly around. Don't
collide. They like want to roughly track
collide. They like want to roughly track
some spheres, but that's all
lies. Man,
lies. Man,
this is cool.
form cube.
Oh, it's definitely starting to get
Oh, it's definitely starting to get
there.
Tricky though.
Go get the collision rate thing working
Go get the collision rate thing working
real quick.
Have to take a quick break to kill this
Have to take a quick break to kill this
fly in a second. Driving me nuts.
B rate.
Okay. So, we want collision and OO.
Knowing what you know about RL, do you
Knowing what you know about RL, do you
anticipate the big LM labs will be able
anticipate the big LM labs will be able
to harness it for huge intelligence
to harness it for huge intelligence
leaps?
leaps?
Uh, possibly yes.
Uh, possibly yes.
But the funny thing is they will be
But the funny thing is they will be
using a tiny tiny fraction of what RL's
using a tiny tiny fraction of what RL's
actually capable of.
They're kind of doing like ultra baby
They're kind of doing like ultra baby
mode reinforcement learning.
I mean, you're right that it's going to
I mean, you're right that it's going to
do a bunch of stuff. I just think that
do a bunch of stuff. I just think that
you're like you're going to get a tiny
you're like you're going to get a tiny
tiny fraction of what it can actually do
tiny fraction of what it can actually do
and your feedback loop for research is
and your feedback loop for research is
incredibly inefficient because the
incredibly inefficient because the
models are so damn big.
results with 80 bill and 32 bill models.
results with 80 bill and 32 bill models.
Yeah, those are still huge.
And those are still like the experiment
And those are still like the experiment
loop is still incredibly incredibly slow
loop is still incredibly incredibly slow
and expensive for stuff like that.
relative to 500 bill.
relative to 500 bill.
I mean, the way I look at it, that's
I mean, the way I look at it, that's
literally like one order of magnitude,
literally like one order of magnitude,
right?
right?
One order of magnitude difference.
We're doing stuff like what? Five. No,
We're doing stuff like what? Five. No,
six.
or
or
six orders of magnitude smaller I
six orders of magnitude smaller I
believe
sometimes five
it's four or five if I'm wrong
it's four or five if I'm wrong
it's still it's like massive my friends.
Okay, so we actually do see that we get
Okay, so we actually do see that we get
slightly better performance now than
slightly better performance now than
before after we fixed the tasks,
before after we fixed the tasks,
but it's still not perfect.
What about the collision rate?
Okay, so collision rate goes down.
Let's try a few things real quick.
Let's try a few things real quick.
Let's actually let's see what our model
Let's actually let's see what our model
looks like first.
looks like first.
I tend to hope that the large results
I tend to hope that the large results
will work their way down to smaller
will work their way down to smaller
models. Yeah. So, I'm just doing it the
models. Yeah. So, I'm just doing it the
other way, man. Right.
other way, man. Right.
I'm like, "All right, screw it. I'm just
I'm like, "All right, screw it. I'm just
going to do stuff at small scale and
going to do stuff at small scale and
hope it scales up.
Track various metrics." Oh, yeah. It's
Track various metrics." Oh, yeah. It's
very easy. You saw it like you saw how
very easy. You saw it like you saw how
quickly I added all that stuff, right?
quickly I added all that stuff, right?
You pretty much just add some stuff to
You pretty much just add some stuff to
the C and export it and it just gets
the C and export it and it just gets
picked up automatically.
picked up automatically.
There's some of the tools that we've
There's some of the tools that we've
built for this stuff. Yeah.
Ongo line here.
Interesting.
I wonder to what extent
What do you I think
What do you I think
with the test time comput
you mean test time compute
and I'm sure they're very happy about it
and I'm sure they're very happy about it
because instead of them training a uh a
because instead of them training a uh a
really really big model right they're
really really big model right they're
letting you pay exponentially more
letting you pay exponentially more
for results at test time.
I mean they introduced exponentially
I mean they introduced exponentially
more expensive evaluation, right?
which is actually kind of funny because
which is actually kind of funny because
like
like
hey if you want to get results on this
hey if you want to get results on this
one specific task you can spend more
one specific task you can spend more
compute.
compute.
What I do with a lot of my reinforcement
What I do with a lot of my reinforcement
learning stuff is hey if you want to get
learning stuff is hey if you want to get
results on this one specific task you
results on this one specific task you
can just train a model from scratch in
can just train a model from scratch in
seconds.
really skeptical whether they're the
really skeptical whether they're the
right path. I give them a one and three.
right path. I give them a one and three.
I think that they will be relevant and
I think that they will be relevant and
useful, but I don't think it's going to
useful, but I don't think it's going to
be the only thing we need.
Yeah, it's the thing is that they need
Yeah, it's the thing is that they need
to hype everything because they need to
to hype everything because they need to
get funding and they need to get funding
get funding and they need to get funding
at like the scale of tens of billions.
So like of course this is going to
So like of course this is going to
produce a really screwy setting, right?
produce a really screwy setting, right?
in which like people are making
in which like people are making
ridiculous claims about stuff and just
ridiculous claims about stuff and just
lying right and left and then the real
lying right and left and then the real
researchers are like but we just want to
researchers are like but we just want to
do our research and we want to make the
do our research and we want to make the
things work and it's it's not a good
things work and it's it's not a good
setting.
setting.
It's not really a good setting for
It's not really a good setting for
anyone involved.
We got to redo this. All over the place.
Okay. So, all I did is I made the
Okay. So, all I did is I made the
horizon longer so that you actually can
horizon longer so that you actually can
see uh the hope is that the drones will
see uh the hope is that the drones will
actually have time to figure out how to
actually have time to figure out how to
align themselves at the final bits of
align themselves at the final bits of
the task
the task
cuz I think what was happening is
cuz I think what was happening is
they're just getting like 80% of the way
they're just getting like 80% of the way
there and then they're running out of
there and then they're running out of
time.
is this article did really well.
is this article did really well.
My best article by a mile.
My best article by a mile.
If you have not read this yet,
If you have not read this yet,
I do recommend it.
This and Pokemon are the two uh best
This and Pokemon are the two uh best
results powered by Puffer.
like it too.
like it too.
All for the algorithm.
All for the algorithm.
Does that even do anything? I don't
Does that even do anything? I don't
usually like my own posts.
If I were designing the algorithm, I
If I were designing the algorithm, I
would just not like I would make that
would just not like I would make that
not do anything.
I want the P. I want my pad on the back
I want the P. I want my pad on the back
button.
I would wait it down for self like. I'd
I would wait it down for self like. I'd
probably do that as Well,
Okay. So, here is
is it just me or they like not None of
is it just me or they like not None of
them are like perfectly on the target,
them are like perfectly on the target,
right?
Okay. This one they're not really
Okay. This one they're not really
expected to be.
I notice they're not act like they're
I notice they're not act like they're
not actually ever getting directly on
not actually ever getting directly on
the target.
They should definitely be able to do
They should definitely be able to do
that if I do like the hover task or
that if I do like the hover task or
whatever.
Yeah, there's something wrong if they're
Yeah, there's something wrong if they're
not able to get directly to the target.
Let me try just hover.
They look like molecules.
They look like molecules.
I mean, if you want to make some
I mean, if you want to make some
molecule sims, I'm like, that's
molecule sims, I'm like, that's
the thing I actually most want to do
the thing I actually most want to do
with puffer lib. The thing I want to do
with puffer lib. The thing I want to do
the absolute most is like some sort of
the absolute most is like some sort of
ridiculous low-level material sim that
ridiculous low-level material sim that
just like invents a ton of new materials
just like invents a ton of new materials
and like I don't know, discovers miracle
and like I don't know, discovers miracle
drugs and all the things.
So, if you want to go start on that
So, if you want to go start on that
crazy mad scientist arc,
solve the threebody problem with RL.
Ow,
Ow,
you're learning.
you're learning.
Well, actually, wait.
You need a stable sim, right?
I guess it's not that slow. I don't
I guess it's not that slow. I don't
know.
know.
There are a lot of problems that you can
There are a lot of problems that you can
probably get fast approximate solutions
probably get fast approximate solutions
to, but the problem with that is like
to, but the problem with that is like
being approximate causes chaos.
Is it even learnable? Like yeah, but the
Is it even learnable? Like yeah, but the
thing is that it's a chaotic process. So
thing is that it's a chaotic process. So
like approximating that is not fun.
Oh, it's not training on all the tasks.
That would do it.
That would do it.
Let's see what happens when we just
Let's see what happens when we just
train him to hover.
If it's not exact, like if this doesn't
If it's not exact, like if this doesn't
exactly solve, then there's a problem
exactly solve, then there's a problem
because this is a really easy task.
incredibly
stupid.
Okay, so we're getting 98%
Almost no collisions.
Earth nearly one.
So if we eval this, the drone should
So if we eval this, the drone should
just be hovering.
just be hovering.
You can see they are hovering.
I actually still want to improve this a
I actually still want to improve this a
little bit because like
little bit because like
they should all be exactly on target and
they should all be exactly on target and
I don't know why they're not.
I don't know why they're not.
Very easy problem. So, they probably
Very easy problem. So, they probably
can't see why they're wrong. And
can't see why they're wrong. And
probably if we fix this task, it'll fix
probably if we fix this task, it'll fix
all the other ones.
The sensors are broken. This is why sims
The sensors are broken. This is why sims
are amazing,
are amazing,
right? simulation allows us to isolate
right? simulation allows us to isolate
to isolate the causes of error way way
to isolate the causes of error way way
way better.
way better.
It's like even if you want your thing to
It's like even if you want your thing to
work on hardware, you should train it in
work on hardware, you should train it in
sim for the purpose of debugging and
sim for the purpose of debugging and
doing all this stuff. Even if you think
doing all this stuff. Even if you think
that your thing needs to be able to
that your thing needs to be able to
train in not very many samples, you
train in not very many samples, you
should train it fast with a whole bunch
should train it fast with a whole bunch
of samples so that you're actually able
of samples so that you're actually able
to make progress at a reasonable rate
to make progress at a reasonable rate
and then pair it down later.
and then pair it down later.
Use a restroom real quick and then we
Use a restroom real quick and then we
will fix this thing.
will fix this thing.
Yeah, hardware is hard. That's why it's
Yeah, hardware is hard. That's why it's
called hardware. Right back.
All
right.
So, the quest for why the drones don't
So, the quest for why the drones don't
exactly
exactly
hit their targets begins now.
The reward is based on
Lydian distance.
Lydian distance.
So they are still going to get a small
So they are still going to get a small
reward for this. It's a very small
reward for this. It's a very small
reward, but it is a reward. I'm actually
reward, but it is a reward. I'm actually
I'm more concerned about the
I'm more concerned about the
observations.
I bet you this is the issue, right?
Like what if instead of dividing
Like what if instead of dividing
what if we do this clamp F
F.
F.
What if we do something like this? Yeah.
What if we do something like this? Yeah.
So the intuition here is that what
So the intuition here is that what
happens if the delta observations are
happens if the delta observations are
just getting too small to really be
just getting too small to really be
perceptible
on visit.
Okay, these can still be left alone.
What? What if we do this?
We will compare directly before and
We will compare directly before and
after.
Okay. Interesting. So far,
could one be in the space box?
could one be in the space box?
one 8. Uh I think it has to be an array
one 8. Uh I think it has to be an array
of dimension one and then the data type
of dimension one and then the data type
of one I might also have to be a Uint 8.
I also I don't think we do in 8 boxes
I also I don't think we do in 8 boxes
either. That guy
do we? No, you're right. We do. We do in
do we? No, you're right. We do. We do in
eight boxes. I'm wrong.
eight boxes. I'm wrong.
Yeah. No, we do that all the time.
Yeah. No, we do that all the time.
Scratch that.
Scratch that.
Yeah. No, no, we do it as well. I'm
Yeah. No, no, we do it as well. I'm
wrong. Don't listen to that.
numpy array of one. So numpy array of
numpy array of one. So numpy array of
one will give it a float 32
one will give it a float 32
or float 64 I believe by default. Yeah,
or float 64 I believe by default. Yeah,
numpy does like float 64 by default I
numpy does like float 64 by default I
believe.
It would have to check if something's
It would have to check if something's
erasing. Oh yeah. Why are you passing it
erasing. Oh yeah. Why are you passing it
to puffer like that though? Cuz like
to puffer like that though? Cuz like
that box
that box
we do that for observation spaces,
we do that for observation spaces,
right? Which is the end of passing to
right? Which is the end of passing to
the trainer. I we don't ever have you
the trainer. I we don't ever have you
went eights passing back, right? There's
went eights passing back, right? There's
not really a reason to do that
for the OB space. Yeah. So,
for the OB space. Yeah. So,
but the obspace
but the obspace
the puffer gives you the observations.
the puffer gives you the observations.
They should be in format of U and 8 and
They should be in format of U and 8 and
then you put them onto the GPU and then
then you put them onto the GPU and then
you turn them into whatever DT type you
you turn them into whatever DT type you
want, right?
Okay, this looks a fair bit better.
Okay, this looks a fair bit better.
Yeah.
I don't know what this guy's doing, but
I don't know what this guy's doing, but
most of these are like a bit better
d type equal numpy in 8.
When you say you're passing it to
When you say you're passing it to
puffer,
puffer,
where are you passing it? Because you're
where are you passing it? Because you're
not passing observations to step, right?
not passing observations to step, right?
What function are you passing it to?
What function are you passing it to?
Where you think it's getting messed with
text is failing for some reason. Well, I
text is failing for some reason. Well, I
mean that's possible that the it's like
mean that's possible that the it's like
also possible that it was bugged in 10
also possible that it was bugged in 10
and I fixed it since. Right.
and I fixed it since. Right.
Something between the step returning
Something between the step returning
obsace
checking
checking
but check space checks it before step
but check space checks it before step
returns.
Oh, you're endstep returning the obs.
Yeah, if you send me a repro, I I will
Yeah, if you send me a repro, I I will
I'll see if I can fix it for you.
I'll see if I can fix it for you.
It's not like training crashes horribly
It's not like training crashes horribly
when you comment the check space. So,
when you comment the check space. So,
it's probably that it is like a bug
it's probably that it is like a bug
somewhere with this thing. made it to
somewhere with this thing. made it to
Friday.
This like spy's alt or something.
Fourth of July, man. Try to get time to
Fourth of July, man. Try to get time to
get the fireworks ready.
We think the reward magnitudes just get
We think the reward magnitudes just get
too small.
Can I like clamp this?
Okay, we clamp this thing.
I see that there's a problem with this
I see that there's a problem with this
actually, but I'm going to try this
actually, but I'm going to try this
first.
Did he watching?
Did he watching?
I guess it never truly checked the
I guess it never truly checked the
dimensions of theut before.
dimensions of theut before.
That is what that function is for. It is
That is what that function is for. It is
to make sure that the dimensions make
to make sure that the dimensions make
sense.
Interesting.
Interesting.
This appears to break it completely.
Oh no.
Oh no.
Covers
somewhat.
collision rate is very high
somehow.
Curious what the heck this is doing.
But yeah, we're probably only a few
But yeah, we're probably only a few
small reward tweaks away from having
small reward tweaks away from having
this thing just working perfectly. And
this thing just working perfectly. And
uh it's going to like suddenly look way
uh it's going to like suddenly look way
cooler than just the drone's hover when
cooler than just the drone's hover when
it does because we'll be able to train
it does because we'll be able to train
it on all the tasks. And it'll basically
it on all the tasks. And it'll basically
just go from like sphere, cube, follow,
just go from like sphere, cube, follow,
flag, you know, you'll just get drone
flag, you know, you'll just get drone
constellations.
Okay. So, this is not the intended
Okay. So, this is not the intended
result at all.
Ah.
What the heck is lagging my computer so
What the heck is lagging my computer so
much?
Crazy. You have a top end and all the
Crazy. You have a top end and all the
crap these days. It's like
crap these days. It's like
badly optimized.
Okay, it's more stable at least already.
Okay, so this also does not work
Okay, so this also does not work
anywhere near as well.
Oh, the scale just changed. This
Oh, the scale just changed. This
actually works better.
actually works better.
Yeah, there way more of these directly
Yeah, there way more of these directly
on target.
So
interesting.
Well, but this is annoying because like
No, I guess this is fine. This is
No, I guess this is fine. This is
basically just saying you have to be
basically just saying you have to be
exactly on target.
Oh, this is better.
Oh, this is better.
Okay. So,
Okay. So,
we probably have to fix this collisions
we probably have to fix this collisions
thing.
You get a negative distance reward and
You get a negative distance reward and
you collide, you get a positive reward,
you collide, you get a positive reward,
right?
Okay, we'll try this. See if this is
Okay, we'll try this. See if this is
stable.
stable.
Upgrade to Python 312.
Upgrade to Python 312.
Indianness is flipped. Are you
Indianness is flipped. Are you
me?
Oh, you know what? Can you check numpy?
Oh, you know what? Can you check numpy?
Because this was a thing I saw where
Because this was a thing I saw where
like actually
like actually
there's some screwy thing with numpy.
there's some screwy thing with numpy.
Oh, in your code, not puffer.
Oh, in your code, not puffer.
Okay.
So, are you saying that the uh the
So, are you saying that the uh the
puffer is absolved of all wrongdoings?
puffer is absolved of all wrongdoings?
Is that what I'm hearing?
That's what I'm hearing. That Puffer is
That's what I'm hearing. That Puffer is
just the best software ever. olved of
just the best software ever. olved of
all wrongdoings
all wrongdoings
and cures all the ailments of
and cures all the ailments of
reinforcement learning.
This is kind of silly.
This is kind of silly.
I agree. Python is a very dumb language.
up the math.
up the math.
This looks cool. Can I ask how to play
This looks cool. Can I ask how to play
with the repo? Any requirement for
with the repo? Any requirement for
running the project? Like only available
running the project? Like only available
on Linux. Uh, it should work on MacOSS
on Linux. Uh, it should work on MacOSS
technically. We have people that use it.
technically. We have people that use it.
There are a couple additional setup
There are a couple additional setup
things that are slightly annoying. It
things that are slightly annoying. It
will also work on WSL if you're on
will also work on WSL if you're on
Windows, which is why we don't bother
Windows, which is why we don't bother
with native Windows because you just
with native Windows because you just
have WSL available.
And uh you can see all this stuff at
And uh you can see all this stuff at
puffer.ai. It's all open source. Install
puffer.ai. It's all open source. Install
the GitHub to help us out. It's free. If
the GitHub to help us out. It's free. If
you want to get involved with Dev or you
you want to get involved with Dev or you
need help, Discord's right here.
Star the puffer.
Star the puffer.
Puffers eat stars.
22 35 stars on the puffer.
22 35 stars on the puffer.
Not bad.
What did I break here? That's making
What did I break here? That's making
this not learn.
on Windows. We'll check it out. Start
on Windows. We'll check it out. Start
it. Thank you very much.
Probably update the Twitch descriptions
Probably update the Twitch descriptions
the ones
the ones
any platforms.
any platforms.
Yeah. Yeah. So, for some reason, this is
Yeah. Yeah. So, for some reason, this is
just not optimizing. So, I'm guessing I
just not optimizing. So, I'm guessing I
just did something really dumb with the
just did something really dumb with the
math here.
math here.
Let me look at it for a second.
Distance reward is negative.
They don't know what they're doing at
They don't know what they're doing at
all. So, the signal is wrong somehow.
reward from reset agent.
Make sure this is not the thing somehow.
We're very close to having this I think
We're very close to having this I think
fully solved.
fully solved.
I can't imagine it's very difficult to
I can't imagine it's very difficult to
get the last
get the last
little bit of uh reward out of here.
little bit of uh reward out of here.
It's like it's either the reward
It's like it's either the reward
slightly off or the agent can't quite
slightly off or the agent can't quite
see what it's doing is my guess.
Almost always the bug.
Okay. So, this is still not training.
So, this must mean I screwed something
So, this must mean I screwed something
up. Yeah.
Not possible. What?
What? Aging?
What? Aging?
That's pretty obviously possible, right?
What did I break here, man?
Last collision reward times last target
Last collision reward times last target
reward, right?
Here,
we'll do it this way
to rule this
Oh, is it just a scale? failing issue.
Okay, I think it's just a scaling issue.
Okay, I think it's just a scaling issue.
Hang on.
Hang on.
Let's do this
Let's do this
and let's like rebuild and then if it's
and let's like rebuild and then if it's
if this works, then it's just straight
if this works, then it's just straight
up a scaling issue and we can fix that
up a scaling issue and we can fix that
pretty easily.
Okay. Straight up a scaling bug. All
Okay. Straight up a scaling bug. All
right. So
right. So
if we clamp distance,
we clamp distance to be
one minus the distance.
Oh, you don't get any reward then.
Yeah. So, that's the bug. You don't get
Yeah. So, that's the bug. You don't get
any reward for getting closer to it
any reward for getting closer to it
until um
Yeah, you don't you just don't get any
Yeah, you don't you just don't get any
reward at all for getting closer to it
reward at all for getting closer to it
until you're within one unit.
until you're within one unit.
Okay. So, how do we fix this bug? Huh?
Can we just scale up the reward or
Can we just scale up the reward or
whatever?
So like another way to do this would be
So like another way to do this would be
so one minus distance
so one minus distance
divide by max distance.
Just do like 10x this.
Usually constant factors on reward don't
Usually constant factors on reward don't
help a ton, but we'll see.
I just want to see what this does.
Oh, this is interesting. I've actually
Oh, this is interesting. I've actually
started studying quantum lately. I've
started studying quantum lately. I've
not gotten to uh all these different
not gotten to uh all these different
types of particles yet.
types of particles yet.
Guess it's more particle physics.
I still want them.
Okay. So, this is learning.
Okay. So, this is learning.
Uh I think this is learning worse than
Uh I think this is learning worse than
before though.
Yeah.
Going
to try this again with the normal scale
to try this again with the normal scale
to see how much of a difference that
to see how much of a difference that
makes.
Still running a val even though I fat
Still running a val even though I fat
fingered that.
Okay, so they actually they go to their
Okay, so they actually they go to their
targets, but they like do this crazy
targets, but they like do this crazy
thing.
Interesting.
Let's see if we see that same thing on a
Let's see if we see that same thing on a
much smaller scale.
And while this trans I'm actually going
And while this trans I'm actually going
to see if I can intuit it what I did
to see if I can intuit it what I did
wrong with the reward function.
One minus the distance divided by the
One minus the distance divided by the
maximum possible distance, right?
So whether this can actually be
So whether this can actually be
zero or not is questionable, but it can
zero or not is questionable, but it can
whether or not this can be
Oh, hang on. Wait. Distances
Oh, hang on. Wait. Distances
or board is okay. Whether or not this
or board is okay. Whether or not this
can be zero is questionable, but it can
can be zero is questionable, but it can
always be one. If you're exactly on the
always be one. If you're exactly on the
target, you get one.
Swooping back and forth behavior.
Just like overeager to get the reward or
Just like overeager to get the reward or
something.
I could add a velocity matching reward
I could add a velocity matching reward
technically.
I mean this is almost perfect
I mean this is almost perfect
according to this thing. So like why
according to this thing. So like why
what's making it not be actually
what's making it not be actually
Perfect. I mean, you can't The thing is
Perfect. I mean, you can't The thing is
they start off the way they start off.
Oh, no. They start off at the target.
Oh, no. They start off at the target.
So, it can actually literally be
So, it can actually literally be
perfect, huh?
perfect, huh?
You can kind of see that they're like
You can kind of see that they're like
slightly off target, I guess.
slightly off target, I guess.
Like they're not perfectly on the
Like they're not perfectly on the
sphere.
very close.
A heck of a lot better than before,
but they're not exactly on the target.
Do we have any ideas on this?
Well, first of all, there's very little
Well, first of all, there's very little
there's very very little additional
there's very very little additional
reward for them to gain.
reward for them to gain.
Over a thousand steps, they can gain an
Over a thousand steps, they can gain an
additional
14 reward
or 14 score.
penalize nonzero. I could do that.
penalize nonzero. I could do that.
I shouldn't have to though. You would
I shouldn't have to though. You would
agree, right?
agree, right?
If they can see their target
If they can see their target
and they're getting rewarded, the way
and they're getting rewarded, the way
that I have the reward defined should be
that I have the reward defined should be
robust as well in the sense that like
robust as well in the sense that like
you're getting rewarded for moving
you're getting rewarded for moving
towards the target. So like you get zero
towards the target. So like you get zero
reward if you're like hanging out next
reward if you're like hanging out next
to a target. It's not like you're
to a target. It's not like you're
collecting more reward there than if
collecting more reward there than if
you're farther away. You get rewards
you're farther away. You get rewards
specifically for going towards the
specifically for going towards the
target.
target.
It should be very easy to learn
It should be very easy to learn
something like this. It's not like one
something like this. It's not like one
of those scenarios where it's.99 reward
of those scenarios where it's.99 reward
here and.991 reward here and it can't
here and.991 reward here and it can't
tell the difference.
There's 14 reward gain.
What are hypers for this?
Let me try something
just for the sake of it real quick.
This looks kind of similar to those
This looks kind of similar to those
robotics problems. That should be really
robotics problems. That should be really
easy time horizon wise.
Isn't it kind of weird that gamma was
Isn't it kind of weird that gamma was
set like the optimized gamma was set
set like the optimized gamma was set
that high?
that high?
It's weird, isn't it?
Like this should not require super long
Like this should not require super long
horizons.
They also have very noisy corrections.
They also have very noisy corrections.
Yeah. So the question is why
This is like way worse.
It's learning nice and stably.
I already have a very high learning rate
I already have a very high learning rate
though.
though.
Am I just going to set this to 0.05 and
Am I just going to set this to 0.05 and
hope it works?
Is that really the play right now?
Like what is this? Why does it learn
Like what is this? Why does it learn
this slowly? Yeah.
some weird like co-optimization thing
some weird like co-optimization thing
going on because neither of these make
going on because neither of these make
sense to me. Like does like why would
sense to me. Like does like why would
you need a gamma of.997?
Okay. I mean we can hypothesize
we can try this. We can hypothesize
we can try this. We can hypothesize
maybe it's capacity
bigger network.
bigger network.
We looked at the policy
We looked at the policy
what the policy outputs when the agent
what the policy outputs when the agent
spawns
spawns
on the goal.
on the goal.
Uh I mean that is what happens every
Uh I mean that is what happens every
time I render it, right?
time I render it, right?
like they just they drift off a little
like they just they drift off a little
bit where some of them drift off a
bit where some of them drift off a
little bit and can't quite find
little bit and can't quite find
their uh their target.
Let me run this capacity experiment real
Let me run this capacity experiment real
quick and then if this doesn't do any
quick and then if this doesn't do any
better, we will go back to drawing
better, we will go back to drawing
board.
board.
It's like so close as well. It's 99% of
It's like so close as well. It's 99% of
the way there.
If the bigger network actually does
If the bigger network actually does
worse, it's also possible this is just
worse, it's also possible this is just
like a tiny hyperparameter failure,
like a tiny hyperparameter failure,
right?
The policy is also stochcastic,
The policy is also stochcastic,
but it should be self-correcting in a
but it should be self-correcting in a
sense.
The policy, it should really be
The policy, it should really be
self-correcting.
Like even if the policy is a little bit
Like even if the policy is a little bit
noisy, it shouldn't like hover next to
noisy, it shouldn't like hover next to
the like next to the target.
the like next to the target.
go to the target and like dip this way a
go to the target and like dip this way a
little bit and then go back. It should
little bit and then go back. It should
be a lot more responsive.
Uh, this is actually slightly better
it seems.
Is it
Is it
might be the same
No, it's the same.
Basically the same.
This is what the policy looks like.
We're kind of splitting hairs at this
We're kind of splitting hairs at this
point. Like,
point. Like,
it's almost perfect.
Let's leave it like this. Let me see
Let's leave it like this. Let me see
what happens if we do the full train
what happens if we do the full train
set.
This will now train on all the tasks
This will now train on all the tasks
jointly.
Okay, we get a slightly messier curve.
Hello, welcome.
Get rid of that other bot over there.
Get rid of that other bot over there.
Cool.
So, uh,
we'll see what this result corresponds
we'll see what this result corresponds
to.
Possible this just works.
Possible this just works.
Also, possible
needs to be trained for longer.
needs to be trained for longer.
I don't know. Lots of possibilities
I don't know. Lots of possibilities
technically. I guess it should be a
technically. I guess it should be a
little bit concerning that this believe
little bit concerning that this believe
this was the curve from before and we're
this was the curve from before and we're
not doing like hugely better.
Okay. So like this orbit task.
Okay. So like this orbit task.
Oh no. I mean this is decent.
Oh no. I mean this is decent.
Hover. We can see actually based on this
Hover. We can see actually based on this
that the hover performance is like not
that the hover performance is like not
quite as good as it was previously.
And there are a few drones that can't
And there are a few drones that can't
find their target.
find their target.
Okay, there's this follow target.
Okay, there's this follow target.
Pretty decent.
Pretty decent.
Got the cube task where they have to
Got the cube task where they have to
spread out and make a cube.
spread out and make a cube.
Getting to be decent.
Okay. Now, this is pretty good, right?
Okay. Now, this is pretty good, right?
Like they're the last two drones
Like they're the last two drones
filtering in. It takes him a second, but
filtering in. It takes him a second, but
that's that is a perfect drone cube.
Okay. I mean, this is like a drone
Okay. I mean, this is like a drone
Congo. Yeah.
Congo. Yeah.
The flag. How's our flag look?
There a couple of them that are like
There a couple of them that are like
having difficulty finding their uh their
having difficulty finding their uh their
Target.
Pretty sick. Yeah.
I'm trying to think how how do we get
I'm trying to think how how do we get
this to like
they need to form the flag faster
like you see actually when one of them
like you see actually when one of them
gets in the way they try to like avoid
gets in the way they try to like avoid
crashing.
What if we just train for the flag task
What if we just train for the flag task
real quick? I just want to see like
real quick? I just want to see like
single task
cuz it's also just it's possible like we
cuz it's also just it's possible like we
just need to train for longer with all
just need to train for longer with all
these tasks, right?
Lag task should be not that hard.
The cool thing about this is it's not
The cool thing about this is it's not
like technically, right, you can just
like technically, right, you can just
program drones to go to a specific spot.
program drones to go to a specific spot.
That's really easy. But like if you
That's really easy. But like if you
watch how these were filling in the flag
watch how these were filling in the flag
when one of them like bumped up they
when one of them like bumped up they
actually the others would try to get out
actually the others would try to get out
of the way.
of the way.
Pretty cool, right?
Pretty cool, right?
like, "Ah, don't crash into me.
10.
10.
I actually don't know what the the thing
I actually don't know what the the thing
is. I don't know what the best score is
is. I don't know what the best score is
possible on these. I only know an upper
possible on these. I only know an upper
bound. So, if you were to teleport to
bound. So, if you were to teleport to
the target and stay there, it's going to
the target and stay there, it's going to
be 1024 or a PF of one. Same thing.
I wonder if we could design drones that
I wonder if we could design drones that
like, you know, don't really mind that
like, you know, don't really mind that
much if they bonk into each other a
much if they bonk into each other a
little bit.
little bit.
I could probably do that. You just have
I could probably do that. You just have
to put the rotors in like a mesh ball
to put the rotors in like a mesh ball
thing and it would be fine.
thing and it would be fine.
Hey Jub
Hey Jub
on Fourth of July, I have a Fourth of
on Fourth of July, I have a Fourth of
July thematically appropriate project.
July thematically appropriate project.
You see
there you go.
That's good enough to post, right?
That's good enough to post, right?
Yeah, that's good enough to post.
Yeah, that's good enough to post.
Absolutely.
No spangled stars.
No spangled stars.
You can't
You can't
You can't do it at this resolution.
All right. I only have It's 64 drones. I
All right. I only have It's 64 drones. I
could train it with more drones, but it
could train it with more drones, but it
starts to become messier.
starts to become messier.
So, I wanted to do something I always do
So, I wanted to do something I always do
stuff with like a thousand agents.
stuff with like a thousand agents.
I wanted to do something more moderate.
increase number of drones.
256. I see I could It's going to mess
256. I see I could It's going to mess
with some stuff though. So, the way I
with some stuff though. So, the way I
code these environments when I do super
code these environments when I do super
quick prototypes,
quick prototypes,
right, I do like quadratic checking.
right, I do like quadratic checking.
So, like I could do it. It's just it's
So, like I could do it. It's just it's
going to be slower and more annoying.
going to be slower and more annoying.
That is what puffers excel at.
The thing is, I don't even know if it's
The thing is, I don't even know if it's
going to be cooler. Like, I actually
going to be cooler. Like, I actually
don't even think it will be because the
don't even think it will be because the
thing is when you have a ton of agents,
thing is when you have a ton of agents,
they basically just become points.
Like, I down sampled this demo on the
Like, I down sampled this demo on the
site. I also want to have this thing
site. I also want to have this thing
posted before it gets too late in the
posted before it gets too late in the
day because it is the fourth.
day because it is the fourth.
Like here, I down sampled this thing and
Like here, I down sampled this thing and
you can't really tell the difference.
Like I tried to do an even bigger
Like I tried to do an even bigger
version of this and it's like you
version of this and it's like you
literally can't see the puffers at some
literally can't see the puffers at some
point.
We'll do this for now.
Because I want to also there's other
Because I want to also there's other
stuff I can work on with you guys today.
Yeah,
this is also puff like partially an ad
this is also puff like partially an ad
for puffer in some sense.
for puffer in some sense.
Better soon. Yeah.
Why is this stuff so slow?
Oh my gosh, there's something wrong with
Oh my gosh, there's something wrong with
the file browser. I think on Abuntu,
you're doing some crazy stuff. Can I be
you're doing some crazy stuff. Can I be
in your team? I'm a full stack dev. Love
in your team? I'm a full stack dev. Love
to connect with you if possible. So,
to connect with you if possible. So,
here's the thing with the way that
here's the thing with the way that
Puffer works. Uh, all this stuff is open
Puffer works. Uh, all this stuff is open
source. It's all freely available. We
source. It's all freely available. We
have a whole bunch of open source
have a whole bunch of open source
contributors who
contributors who
uh build stuff and we train them for
uh build stuff and we train them for
free, but full-time positions don't
free, but full-time positions don't
really happen. We do have contracting
really happen. We do have contracting
stuff, but basically that is dependent
stuff, but basically that is dependent
on specific clients. You know, if you
on specific clients. You know, if you
start building some stuff and say, "Hey,
start building some stuff and say, "Hey,
this would be applicable to a specific
this would be applicable to a specific
area and I think that we could do
area and I think that we could do
something here." Then that's when we
something here." Then that's when we
start pulling people for jobs on that.
start pulling people for jobs on that.
We don't just do like you know uh core
We don't just do like you know uh core
development full-time positions or
development full-time positions or
anything like that. And the reason for
anything like that. And the reason for
that is it's a bootstrapped company. Uh
that is it's a bootstrapped company. Uh
there's not VC funding for this. So I
there's not VC funding for this. So I
try to keep it to make it sustainable.
try to keep it to make it sustainable.
It's pretty much like uh to get payment
It's pretty much like uh to get payment
out there must be contracts in if that
out there must be contracts in if that
makes sense. at least for the time
makes sense. at least for the time
being.
This thing is
This thing is
I don't know what it is with the file
I don't know what it is with the file
browser that does that. The file browser
browser that does that. The file browser
lags Everything.
cars.
cars.
I thought of it. It's not It's not going
I thought of it. It's not It's not going
to look right.
I think this is fine for uh for demo. I
I think this is fine for uh for demo. I
don't think it's going to make a huge
don't think it's going to make a huge
difference.
N this is good.
Camera and fly backwards.
Camera and fly backwards.
Yeah, there are a lot of things we could
Yeah, there are a lot of things we could
do. I just wanted to have us a demo
do. I just wanted to have us a demo
done.
Let me send this to Spencer. He'll get a
Let me send this to Spencer. He'll get a
kick out of it.
All
right, let's train up a uh here's what
right, let's train up a uh here's what
we're going to do real quick.
we're going to do real quick.
Rebuild.
Do I want to train?
[Music]
[Music]
I think we can just kind of leave this
I think we can just kind of leave this
and I can like put this on another
and I can like put this on another
machine to train a bigger policy.
I'm happy with this.
Okay, so this is uh this is available
Okay, so this is uh this is available
now if you guys want to play with it.
We'll see how that post does. One
We'll see how that post does. One
problem with posting on holidays is even
problem with posting on holidays is even
if the stuff is cool, uh people are kind
if the stuff is cool, uh people are kind
of out doing barbecues.
deliver freedom.
deliver freedom.
It is freedom day.
Let me actually just put this into the
Let me actually just put this into the
uh one of these chats.
uh one of these chats.
Holy, why is everything so laggy today,
Holy, why is everything so laggy today,
man?
fireworks day. I actually I'm getting
fireworks day. I actually I'm getting
kind of confused why this is,
not memory.
not memory.
Yeah, I don't know why that's so laggy.
Yeah, I don't know why that's so laggy.
I guess they're all fighting over the
I guess they're all fighting over the
same cores or something because this is
same cores or something because this is
a 16 core processor. OBS is using two
a 16 core processor. OBS is using two
cores. Chrome is using like two or three
cores. Chrome is using like two or three
cores and that's it.
cores and that's it.
The fact that Chrome is using like three
The fact that Chrome is using like three
cores is kind of pathetic to be fair.
cores is kind of pathetic to be fair.
Crap browser.
Crap browser.
You're being you've been targeted.
You're being you've been targeted.
Pretty stupid to target open source
Pretty stupid to target open source
work, but sure.
work, but sure.
All right. I'm use the restroom real
All right. I'm use the restroom real
quick and then we'll see what we do we
quick and then we'll see what we do we
do next. There are several options uh
do next. There are several options uh
for other things I can work on today.
for other things I can work on today.
I'd suppose I could do robotic stuff.
I'd suppose I could do robotic stuff.
Fight the robots a little bit. Uh I
Fight the robots a little bit. Uh I
could work a little bit on our quick
could work a little bit on our quick
start guide like the new RL for
start guide like the new RL for
beginners guide. I was planning on doing
beginners guide. I was planning on doing
some of that tomorrow but uh if you all
some of that tomorrow but uh if you all
want I can work on it a little bit today
want I can work on it a little bit today
and take feedback and suggestions. It's
and take feedback and suggestions. It's
going to be a little less interactive in
going to be a little less interactive in
the sense that like you know I have to
the sense that like you know I have to
focus to write paragraphs and stuff but
focus to write paragraphs and stuff but
I will take suggestions live. So
I will take suggestions live. So
probably between that robotics and um
probably between that robotics and um
messing with the tactics environment
messing with the tactics environment
like the two armies kind of janky but
like the two armies kind of janky but
mostly works environment.
mostly works environment.
I'll be right back. Y'all can vote on
I'll be right back. Y'all can vote on
that.
See if I'm out of coffee because that
See if I'm out of coffee because that
might pose a
It was more coffee.
I did forget the uh the daily deadlift
I did forget the uh the daily deadlift
though.
All
right. Most people want me to work on
right. Most people want me to work on
the uh
the uh
beginner's guide,
beginner's guide,
which is actually cool by me because
which is actually cool by me because
I've kind of had like three days worth
I've kind of had like three days worth
of screwing with fiddly experiments in a
of screwing with fiddly experiments in a
row. And it gets old.
row. And it gets old.
It gets old.
Do we have two trillion likes and
Do we have two trillion likes and
a bunch of inbound yet?
Oh, he managed. Yeah, you literally you
Oh, he managed. Yeah, you literally you
can just join you can literally just
can just join you can literally just
join the Discord like go through our
join the Discord like go through our
starter material and start building
starter material and start building
stuff with us. There's not like a formal
stuff with us. There's not like a formal
requirement at all. It's literally it's
requirement at all. It's literally it's
self- selecting, right? It's just the
self- selecting, right? It's just the
people who actually stick around long
people who actually stick around long
enough to learn and to build good things
enough to learn and to build good things
are the ones who like push forward the
are the ones who like push forward the
research and who get promoted and all
research and who get promoted and all
that type of stuff. And I've pulled a
that type of stuff. And I've pulled a
couple people for uh financially valid
couple people for uh financially valid
like business side contracts and stuff.
like business side contracts and stuff.
I don't put that as a promise. It really
I don't put that as a promise. It really
depends on whether your stuff's directly
depends on whether your stuff's directly
applicable to a contract,
applicable to a contract,
but it is something that's out there.
but it is something that's out there.
Oh, okay. Cool.
Oh, okay. Cool.
10 and uh I miss. We'll see how that
10 and uh I miss. We'll see how that
does.
All right. So, here's the beginner's
All right. So, here's the beginner's
guide that I started.
I will give you the parameters for this.
I will give you the parameters for this.
Oh, I just realized that um that's
Oh, I just realized that um that's
probably what's eating all my bandwidth
probably what's eating all my bandwidth
is that I have the stream preview on in
is that I have the stream preview on in
two separate places.
Oh yeah, that's immediately better.
Here is the idea behind the uh the guide
Here is the idea behind the uh the guide
here.
one, it's going to be an ultra
one, it's going to be an ultra
opinionated guide.
opinionated guide.
It's not going to be me covering the
It's not going to be me covering the
stuff in Sutton and Bardau,
stuff in Sutton and Bardau,
just like slightly different. It's not
just like slightly different. It's not
going to be like any of the existing
going to be like any of the existing
resources, but slightly different. It's
resources, but slightly different. It's
going to be something completely
going to be something completely
different. It's going to be the only
different. It's going to be the only
thing it will be similar to is my quick
thing it will be similar to is my quick
start guide because that is the other
start guide because that is the other
piece I have on the same topic but uh
piece I have on the same topic but uh
very much expanded on with a whole bunch
very much expanded on with a whole bunch
of additional things and it's going to
of additional things and it's going to
go deeper in a lot of areas as well.
go deeper in a lot of areas as well.
That is the goal. Uh additionally
That is the goal. Uh additionally
it will have two sections two main
it will have two sections two main
sections. The first section is going to
sections. The first section is going to
be for people who have
be for people who have
uh competent programming and AI
uh competent programming and AI
experience.
experience.
So this is like if you can actually if
So this is like if you can actually if
you have knowledge at the level of
you have knowledge at the level of
CS231N
CS231N
and you are a competent programmer where
and you are a competent programmer where
my bar for that is admittedly quite high
my bar for that is admittedly quite high
but if you are a competent programmer
but if you are a competent programmer
have knowledge at the level of CS231N
have knowledge at the level of CS231N
you're ready to learn all this stuff and
you're ready to learn all this stuff and
that's mostly the level of things
that's mostly the level of things
presented in the quick start guide.
presented in the quick start guide.
But I'm going to be able to reorganize
But I'm going to be able to reorganize
stuff quite a bit because there's also
stuff quite a bit because there's also
going to be a section that's what if I
going to be a section that's what if I
don't know anything or what if I'm
don't know anything or what if I'm
somewhere between I don't know anything
somewhere between I don't know anything
and I don't have knowledge at the level
and I don't have knowledge at the level
of 231N and competent programming yada
of 231N and competent programming yada
yada. So that's going to contain my
yada. So that's going to contain my
advice for how to get good at
advice for how to get good at
programming in general and my advice for
programming in general and my advice for
how to learn AI basics in general.
I actually think that of those two
I actually think that of those two
tasks, being a competent programmer is
tasks, being a competent programmer is
way harder. Like literally of everything
way harder. Like literally of everything
that I have learned,
that I have learned,
everything in my toolkit, right, of all
everything in my toolkit, right, of all
the stuff I do in my job here, uh,
the stuff I do in my job here, uh,
writing good code is the hardest part of
writing good code is the hardest part of
that.
And the people who say otherwise, it's
And the people who say otherwise, it's
just that like, you know, their bar is
just that like, you know, their bar is
down here, my bar is up here. And
down here, my bar is up here. And
there's actually a practical difference
there's actually a practical difference
between being this good and being this
between being this good and being this
good. Because being this good, you're
good. Because being this good, you're
basically a problems engineer. You just
basically a problems engineer. You just
make problems for everybody. And being
make problems for everybody. And being
this good, you solve everybody else's
this good, you solve everybody else's
problems.
problems.
Drop it in chat, please. Uh there's no
Drop it in chat, please. Uh there's no
place for me to drop the article in chat
place for me to drop the article in chat
because this is a in progress article.
because this is a in progress article.
So what you're seeing is what is
So what you're seeing is what is
currently there and I'm going to be
currently there and I'm going to be
writing on it live.
writing on it live.
Do you think great programming skills
Do you think great programming skills
are gifted or earned? absolutely 100%
are gifted or earned? absolutely 100%
earned. Okay,
earned. Okay,
if you saw the things that I wrote in
if you saw the things that I wrote in
the first literally five years of
the first literally five years of
programming, this would not be a
programming, this would not be a
question. I was not a gifted programmer
question. I was not a gifted programmer
at all.
at all.
Arguably, you could say I was somewhat
Arguably, you could say I was somewhat
gifted in like the intuition of how I
gifted in like the intuition of how I
view problems and research and AI and
view problems and research and AI and
stuff. Like that was something that I
stuff. Like that was something that I
got to be pretty good at relatively
got to be pretty good at relatively
quickly. And uh yeah, like I have some
quickly. And uh yeah, like I have some
spots where there's definitely I have
spots where there's definitely I have
advantages, but programming ain't one of
advantages, but programming ain't one of
them. That was blood, sweat, and tears.
Okay, we'll go through the intro
Okay, we'll go through the intro
section. And I'll read through this and
section. And I'll read through this and
give me your initial thoughts
give me your initial thoughts
and then I think we'll start on
and then I think we'll start on
we'll start on this portion of the
we'll start on this portion of the
guide.
Actually, do I want to do it that way? I
Actually, do I want to do it that way? I
think I want to start with the actual
think I want to start with the actual
content because this is mostly just like
content because this is mostly just like
a snarky introduction that frames the
a snarky introduction that frames the
article.
But does this make sense though
But does this make sense though
structurally? Right? First of all, this
structurally? Right? First of all, this
is going to be a very very different
is going to be a very very different
guide from anything else in the field.
guide from anything else in the field.
It's kind of the same thing as when you
It's kind of the same thing as when you
come to Puffer Lib expecting something
come to Puffer Lib expecting something
that looks like the rest of RL and it
that looks like the rest of RL and it
doesn't. The guide is going to be the
doesn't. The guide is going to be the
same thing. So, it's not going to cover
same thing. So, it's not going to cover
stuff in the same order or anything like
stuff in the same order or anything like
that.
that.
The fact that it has the two starting
The fact that it has the two starting
points, I actually give you this little
points, I actually give you this little
litmus test. Um,
litmus test. Um,
if you can implement an LSTM in like a
if you can implement an LSTM in like a
100 lines or less than 100 lines, you
100 lines or less than 100 lines, you
are competent. Otherwise, start at
are competent. Otherwise, start at
square zero.
And then there's a little bit of a thing
And then there's a little bit of a thing
here for like new new viewers and new
here for like new new viewers and new
people because it's a little bit
people because it's a little bit
broader.
I might change this up a little bit.
I might change this up a little bit.
We'll see.
Okay, so this is just stuff from viewers
Okay, so this is just stuff from viewers
like stuff that people asked me to
like stuff that people asked me to
include.
include.
Vibe coding is the is now the trend
Vibe coding is the is now the trend
these days.
these days.
Person knows the basics. Can it write a
Person knows the basics. Can it write a
good program these days? Does it matter?
good program these days? Does it matter?
Be a master? Yes, it does. If you're
Be a master? Yes, it does. If you're
just typing into LMS and pasting
just typing into LMS and pasting
that, you are garbage. You know
that, you are garbage. You know
absolutely nothing and you should not
absolutely nothing and you should not
touch any problem ever because you're
touch any problem ever because you're
going to create more problems than
going to create more problems than
solutions.
solutions.
Just straight up.
Like being a good programmer is the
Like being a good programmer is the
basis of literally everything.
It's actually pretty much the only thing
It's actually pretty much the only thing
I will flame people for in uh Puffer.
I will flame people for in uh Puffer.
Like, you know, if you're new in
Like, you know, if you're new in
learning RL, you're going to ask a bunch
learning RL, you're going to ask a bunch
of questions that don't make sense.
of questions that don't make sense.
You're going to make a bunch of
You're going to make a bunch of
mistakes. You're going to cause bugs
mistakes. You're going to cause bugs
that cost me time. All of that is fine.
that cost me time. All of that is fine.
The only thing that I will go off on
The only thing that I will go off on
people for for the most part is like
people for for the most part is like
just making a mess of things within LLM
just making a mess of things within LLM
because they were too lazy to actually
because they were too lazy to actually
learn the thing.
I mean, I could like I could literally
I mean, I could like I could literally
do the same thing for writing, right?
do the same thing for writing, right?
Why don't I just generate this article
Why don't I just generate this article
with uh with an LLM, right? Writing is
with uh with an LLM, right? Writing is
easier than programming.
easier than programming.
Definitely is easier than programming.
good as an education tool. It is, but
good as an education tool. It is, but
guess what? It breaks even in that
guess what? It breaks even in that
because like as soon as you go like any
because like as soon as you go like any
amount of depth into a topic, it just
amount of depth into a topic, it just
lies to you half the time. I tried using
lies to you half the time. I tried using
it to learn quantum mechanics the other
it to learn quantum mechanics the other
day like to ask specific questions about
day like to ask specific questions about
a quantum mechanics course that I was
a quantum mechanics course that I was
going through and it just made stuff up
going through and it just made stuff up
and wasted like four hours of my time
and wasted like four hours of my time
and drove me nuts with like insane
and drove me nuts with like insane
quantum things that aren't actually
quantum things that aren't actually
true.
LM is good. First time we have effective
LM is good. First time we have effective
dactic education at scaleation
dactic education at scaleation
is instruction earlier cleared basic
is instruction earlier cleared basic
stuff. It's good.
stuff. It's good.
Shouldn't use LM to have your doubts
Shouldn't use LM to have your doubts
cleared on any subject at all. Well, I
cleared on any subject at all. Well, I
it's
it's
the thing is this is an area where if
the thing is this is an area where if
they were better, it would actually be
they were better, it would actually be
useful because basically
useful because basically
there are definitely questions that you
there are definitely questions that you
can ask, right? That like anybody who
can ask, right? That like anybody who
has any decent understanding of a topic
has any decent understanding of a topic
will be able to answer, but you're not
will be able to answer, but you're not
going to be able to ask that exact
going to be able to ask that exact
question and like find an answer to that
question and like find an answer to that
without talking to a person in that
without talking to a person in that
space. So LMS are kind of getting to
space. So LMS are kind of getting to
this point that you can do that on basic
this point that you can do that on basic
things. It's just as soon as there's any
things. It's just as soon as there's any
amount of depth, it all goes out the
amount of depth, it all goes out the
window.
Like you can probably ask an LLM about
Like you can probably ask an LLM about
different integration methods if you're
different integration methods if you're
learning calculus and be fine.
When what do you think will these LM
When what do you think will these LM
reach someday when mastering programming
reach someday when mastering programming
won't be necessary? It's AI complete. So
won't be necessary? It's AI complete. So
if the LLM is a perfect programmer, then
if the LLM is a perfect programmer, then
all problems are probably solved.
all problems are probably solved.
That is my opinion.
If an AI can just output arbitrary
If an AI can just output arbitrary
arbitrary programs, then AI is solved
arbitrary programs, then AI is solved
and we will live in a crazy sci-fi
and we will live in a crazy sci-fi
world.
world.
Because if you give me 10,000 years at
Because if you give me 10,000 years at
my current skill level, if you give me
my current skill level, if you give me
10,000 years to just like code on things
10,000 years to just like code on things
to make crazy tech happen, I will make
to make crazy tech happen, I will make
crazy tech happen. The problem is I
crazy tech happen. The problem is I
don't have 10,000 years. Uh at least
don't have 10,000 years. Uh at least
unless we make some pretty good
unless we make some pretty good
advancements here, right?
It takes a minimum of 10 years to get
It takes a minimum of 10 years to get
good and then you've basically you've
good and then you've basically you've
got somewhere between 20 and
got somewhere between 20 and
20 and 50 years of a career and that's
20 and 50 years of a career and that's
it.
it.
So it's tough
protein folding is just around the
protein folding is just around the
corner. Custom non-agging for all puffer
corner. Custom non-agging for all puffer
lip people. Man, I hope so. I don't know
lip people. Man, I hope so. I don't know
if protein sol protein folding alone
if protein sol protein folding alone
doesn't solve that though.
Not as far as I'm aware.
I don't know. Can I just like drink a
I don't know. Can I just like drink a
flask of microbots that like circulate
flask of microbots that like circulate
through and repair everything? That
through and repair everything? That
would be pretty good.
Okay. So this is the framing. It's
Okay. So this is the framing. It's
intentionally put very aggressively
intentionally put very aggressively
because this is this is important and
because this is this is important and
this is it has to be I think these are
this is it has to be I think these are
points that have to be made bluntly.
points that have to be made bluntly.
In fact, I literally already have this
In fact, I literally already have this
in the article
and this is for people who have some
and this is for people who have some
programming experience.
programming experience.
Fighting death is like fighting
Fighting death is like fighting
evolution.
evolution.
Not a fight you want to win. Who says I
Not a fight you want to win. Who says I
will gladly fight evolution?
It's a really stupid inefficient process
It's a really stupid inefficient process
just at massive parallel scale.
So it's still crucial to sharpen
So it's still crucial to sharpen
programming skills even for researcher.
programming skills even for researcher.
the most important skill set that I
the most important skill set that I
have.
have.
How do you balance between doing
How do you balance between doing
research and coding?
research and coding?
I mean, what am I doing during the vast
I mean, what am I doing during the vast
majority of my time as a researcher? I'm
majority of my time as a researcher? I'm
writing code.
writing code.
You do research
You do research
like you read papers, you synthesize
like you read papers, you synthesize
ideas, but for the most part, you write
ideas, but for the most part, you write
code. It is the mechanism by which
code. It is the mechanism by which
research is done.
research is done.
Joseph versus evolution. Absolutely.
robust beats efficiency on long time
robust beats efficiency on long time
horizons.
horizons.
I mean, do you believe that evolution is
I mean, do you believe that evolution is
literally the most optimal process by
literally the most optimal process by
which anything can happen?
the most robust. It's just the process
the most robust. It's just the process
that we happen to know, right? Not
that we happen to know, right? Not
really robust either.
Creates all kinds of stupid problems.
ever go backwards?
Well, I mean, if you want to get like
Well, I mean, if you want to get like
pessimistic here, uh, you know, if we
pessimistic here, uh, you know, if we
all nuke ourselves out of existence
all nuke ourselves out of existence
before we solve AI,
before we solve AI,
that's going to make it go pretty far
that's going to make it go pretty far
backwards.
Anyways, let's get to actual work here.
Anyways, let's get to actual work here.
So I wanted to write like a basic
So I wanted to write like a basic
how to think about programming. Okay.
a fair portion of cosmic.
a fair portion of cosmic.
We literally have one example of it here
We literally have one example of it here
on one planet.
Okay. So, the point I want to make here
something of programming as a craft.
That's a nice little intro.
I think that's a nice little intro.
I think we get very concrete from here
I think we get very concrete from here
very quickly.
fast simulations
fast simulations
making simulations and integrating with
making simulations and integrating with
puffer
I will cover puffer lib and like I will
I will cover puffer lib and like I will
directly cover puffer liib in this guide
directly cover puffer liib in this guide
as well
this right now I'm writing the I'm
this right now I'm writing the I'm
writing the uh the beginner section
writing the uh the beginner section
because people have asked me for it. So
because people have asked me for it. So
this is going to cover my general advice
this is going to cover my general advice
to new programmers first on how to learn
to new programmers first on how to learn
and then it is going to cover
and then it is going to cover
uh
uh
it is also going to cover my general
it is also going to cover my general
advice to new AI people on how to learn
advice to new AI people on how to learn
AI. Not even general, very specific.
AI. Not even general, very specific.
Let's not do general as specific as
Let's not do general as specific as
possible.
couch instead of cafe. Cafe works as
couch instead of cafe. Cafe works as
well.
In fact, even better.
used for programmer
used for programmer
exploration versus explanation
exploitation.
Uh, that's an RL thing. I'm not That's
Uh, that's an RL thing. I'm not That's
like an a learning in general thing.
Think mastering DSA is mastering
Think mastering DSA is mastering
programming. Is this correct? Absolutely
programming. Is this correct? Absolutely
not.
not.
In fact, many of the people that will
In fact, many of the people that will
like ace all the DSA interviews for all
like ace all the DSA interviews for all
the cuz companies just use them
the cuz companies just use them
relentlessly are absolutely terrible
relentlessly are absolutely terrible
programmers who I never want to touch
programmers who I never want to touch
any of my code ever.
Exploration versus explanation.
I don't know what you mean about that. I
I don't know what you mean about that. I
haven't heard that before.
There's really not anything to memorize
There's really not anything to memorize
is the thing
is the thing
because I like the thing is the way that
because I like the thing is the way that
I write stuff. I should explain this but
I write stuff. I should explain this but
like it really is a very small set of
like it really is a very small set of
tools
tools
to learn. A very small set of tools.
to learn. A very small set of tools.
What's the judging criteria then?
What's the judging criteria then?
Well, in Puffer Lib it's just if you
Well, in Puffer Lib it's just if you
make good stuff, right?
make good stuff, right?
I can roughly like I'm not going to out
I can roughly like I'm not going to out
of respect, right? But I can roughly
of respect, right? But I can roughly
rank the competency of everybody
rank the competency of everybody
involved with Puffer Lib based on the
involved with Puffer Lib based on the
stuff that they have built.
Why measure some synthetic test, right,
Why measure some synthetic test, right,
when I have real results?
is
is
okay. Git is like you need like
you need to use git which is like three
you need to use git which is like three
commands.
commands.
Docker is kind of a pain
Docker is kind of a pain
but it also doesn't take any time at all
but it also doesn't take any time at all
to learn once you know what you're
to learn once you know what you're
doing. Kubernetes can off
doing. Kubernetes can off
and like basic terminal usage and stuff
and like basic terminal usage and stuff
is just the things that you pick up over
is just the things that you pick up over
time. But like even if you watch the way
time. But like even if you watch the way
that I do stuff when I'm doing things,
that I do stuff when I'm doing things,
if you just go count the total number of
if you just go count the total number of
commands or tools or things I use, it is
commands or tools or things I use, it is
very small.
Complex workflows can twist one's mind.
Complex workflows can twist one's mind.
Don't use complex workflows.
Don't use complex workflows.
That's it. I don't.
You don't have to. Self-imposed.
Yeah. He-Man. Um there's literally we've
Yeah. He-Man. Um there's literally we've
had people come to puffer lab and like
had people come to puffer lab and like
submit really bad code that worked but
submit really bad code that worked but
was really bad and then like gotten
was really bad and then like gotten
feedback improved and who are now at the
feedback improved and who are now at the
level of well actually I would say on
level of well actually I would say on
just programming alone way better than
just programming alone way better than
the level of uh other PhDs in my field.
the level of uh other PhDs in my field.
So it's
So it's
a lot of this stuff is very learnable.
a lot of this stuff is very learnable.
Now the AI perspective, right? That
Now the AI perspective, right? That
takes a little longer,
but I will cover that as well.
but I will cover that as well.
Team has shitty get etiquette.
Team has shitty get etiquette.
Yeah. So that's not but that's not like
Yeah. So that's not but that's not like
a how to learn to program, right? That's
a how to learn to program, right? That's
how to learn that's how to deal with
how to learn that's how to deal with
stupid people.
stupid people.
And there's no guide for dealing with
And there's no guide for dealing with
stupid people. It's just you suffer.
See this sentence here?
It's really that simple. Like
It's really that simple. Like
if you take me with all the stuff that I
if you take me with all the stuff that I
build and you put me in a big team
build and you put me in a big team
working on some problem, right? Like I'm
working on some problem, right? Like I'm
not like there are very many projects
not like there are very many projects
that I wouldn't be able to contribute
that I wouldn't be able to contribute
anything because of what a mess people
anything because of what a mess people
made. Like it's literally to the point
made. Like it's literally to the point
that very very often the best solution
that very very often the best solution
is to just scrap the whole thing and
is to just scrap the whole thing and
rewrite it. And that's done very often.
rewrite it. And that's done very often.
If you have uh if you have 200,000 lines
If you have uh if you have 200,000 lines
of code for a problem that should take
of code for a problem that should take
10,000,
10,000,
right? What the hell am I supposed to
right? What the hell am I supposed to
do?
Doesn't matter if you're a genius.
Doesn't matter if you're a genius.
You're screwed.
Oh, yeah. Also, has uh how's this
Oh, yeah. Also, has uh how's this
article doing or the uh this thing
article doing or the uh this thing
doing?
doing?
Doing stuff.
Doing stuff.
All right.
Is it a shade on a rust rewrite of
Is it a shade on a rust rewrite of
Corutils?
Corutils?
Uh, I personally
Uh, I personally
I personally do not enjoy Rust in any
I personally do not enjoy Rust in any
way, shape, or form.
way, shape, or form.
I think it's like fine for things where
I think it's like fine for things where
you're really concerned about
you're really concerned about
uh you're really concerned about memory
uh you're really concerned about memory
management bugs for some specific reason
management bugs for some specific reason
like some like embedded systems dev.
But if you're not I there just a number
But if you're not I there just a number
of things in that language I think are
of things in that language I think are
very stupid and overly constraining.
important to explain why
important to explain why
Python sucks.
Python sucks.
Yeah, actually, you know, I'm trying to
Yeah, actually, you know, I'm trying to
think.
How do I want to frame this?
A new dev is not going to appreciate the
A new dev is not going to appreciate the
explanation is the thing.
But like the thing is a new it's more
But like the thing is a new it's more
than just that, right? So it's it's more
than just that, right? So it's it's more
than just interpreted versus compiled.
than just interpreted versus compiled.
Um
that's not the main thing that's screwy
that's not the main thing that's screwy
with it.
with it.
That's like the performance reason that
That's like the performance reason that
screw you with it, right?
Actually, I can just say that. You know
Actually, I can just say that. You know
what? Let's just make this not a list.
You know, actually
not
not
needs to be succinct.
Why old devs hate the language
Why old devs hate the language
file Python code efficiency
dump it in Python code.
Okay, so the problem right is that
Okay, so the problem right is that
writing bindings uh Python to C bindings
writing bindings uh Python to C bindings
is hell.
is hell.
It sucks. It's not fun.
It's actually the reason why I liked
It's actually the reason why I liked
Syon for a little bit, even though
Syon for a little bit, even though
Syon's a total mess as well, is because
Syon's a total mess as well, is because
at least in Syon, once you're Syon
at least in Syon, once you're Syon
builds, you can literally just mix
builds, you can literally just mix
Python code and C code like alternating
Python code and C code like alternating
with no problems and no extra bindings
with no problems and no extra bindings
and build systems and crap.
and build systems and crap.
Unfortunately, Syon has its own problems
Unfortunately, Syon has its own problems
because if that actually worked, it
because if that actually worked, it
would be fantastic.
Look at
a blog on the Syon thing
a blog on the Syon thing
like to read more. I don't think I did.
like to read more. I don't think I did.
I I might have written something about
I I might have written something about
it a while ago. So, here's the thing.
it a while ago. So, here's the thing.
So, Syon,
So, Syon,
it is a domain specific language that is
it is a domain specific language that is
a mix of Python and C. you can inline
a mix of Python and C. you can inline
something that is I mean you can
something that is I mean you can
directly call stuff from the C standard
directly call stuff from the C standard
libraries and malik and things like
libraries and malik and things like
that. It's basically you can write C in
that. It's basically you can write C in
Python with almost identical syntax but
Python with almost identical syntax but
you can also write Python and then
you can also write Python and then
variables that are typed
variables that are typed
get declared as typed variables and they
get declared as typed variables and they
get compiled efficiently and variables
get compiled efficiently and variables
that are not just don't. Um,
that are not just don't. Um,
it it's a really nice way to let you mix
it it's a really nice way to let you mix
and match C and Python. The problem is
and match C and Python. The problem is
that whenever you compile Sython, it
that whenever you compile Sython, it
basically takes your short little source
basically takes your short little source
file and turns it into a minimum of a
file and turns it into a minimum of a
30,000line unreadable C file. And then
30,000line unreadable C file. And then
the compiler also has a bunch of weird
the compiler also has a bunch of weird
like annoying error reporting and bugs
like annoying error reporting and bugs
that it doesn't give you as nice errors
that it doesn't give you as nice errors
say as C. the debugging experience is
say as C. the debugging experience is
not as good as in C. Um,
not as good as in C. Um,
so what ends up happening is I end up
so what ends up happening is I end up
just like preferring to do the entire
just like preferring to do the entire
thing in C instead of having to deal
thing in C instead of having to deal
with the Syon quirks.
Uh, it could be really good, mind you.
Uh, it could be really good, mind you.
Like Syon could be something that would
Like Syon could be something that would
be really good, but it's just not quite
be really good, but it's just not quite
there.
working on four to seven integer
working on four to seven integer
multiplication problem when I realized
multiplication problem when I realized
MLPS
MLPS
or even any neural net activations can't
or even any neural net activations can't
do
do
basic multiplications.
basic multiplications.
Yes. Well, they kind of like have to
Yes. Well, they kind of like have to
embed them into the space in a weird
embed them into the space in a weird
way. It's not a natural operation.
You can technically write
You can technically write
you can technically write activations
you can technically write activations
right that do like dotproducts of uh
right that do like dotproducts of uh
embeddings like you can dotproduct
embeddings like you can dotproduct
layers or you can like point-wise
layers or you can like point-wise
multiply layers.
You can also look into things like CPN
You can also look into things like CPN
which probably are a good way of
which probably are a good way of
representing functions. The thing is
representing functions. The thing is
they're incredibly slow.
This the saint
the drop will try to be back more
the drop will try to be back more
frequent. Thank you. There an
frequent. Thank you. There an
architecture I can learn that and not
architecture I can learn that and not
introduce multiplication terms.
introduce multiplication terms.
Not intro.
Not intro.
I mean that's pretty much what they do
I mean that's pretty much what they do
though, right?
though, right?
It's like if you have multiple different
It's like if you have multiple different
encoding layers
to add pointwise multiplications,
to add pointwise multiplications,
it's kind of cheap, right? Because
it's kind of cheap, right? Because
you're cheesing you're you are sort of
you're cheesing you're you are sort of
cheesing the uh the operation in a
cheesing the uh the operation in a
sense.
sense.
But yeah, I've done the same thing
But yeah, I've done the same thing
before and
before and
it's
it's
pretty annoying to learn things like
pretty annoying to learn things like
that.
It's like a really weird decision bound.
Why not pass
Why not pass
vector?
Well, you don't want to do it over the
Well, you don't want to do it over the
input, right? You would do it over an
input, right? You would do it over an
embedding.
I mean, one good test of this, right,
I mean, one good test of this, right,
would be like if your network can learn
would be like if your network can learn
both multiplication and addition or like
both multiplication and addition or like
any like arbit like you could do
any like arbit like you could do
something like that, right?
I think how to train this
machine multi for multiplication
machine multi for multiplication
reward at the end of its computation and
reward at the end of its computation and
only correct.
only correct.
Have you tried like training it on are
Have you tried like training it on are
you doing any sort of curriculum
you doing any sort of curriculum
learning
learning
giving it like random length
giving it like random length
multiplications
multiplications
seeing like what the length solve goes
seeing like what the length solve goes
up over
Mac OSCI failed with my last commit. God
Mac OSCI failed with my last commit. God
damn it,
Max. Man,
you got to be kidding me.
That's so stupid.
That's so stupid.
Mac specific compiler garbage.
I'll fix that.
It's It needs to be pound defined is
It's It needs to be pound defined is
all. Yeah. Bet. Did you see the drone
all. Yeah. Bet. Did you see the drone
flag?
flag?
It just needs to be pound defined
flag.
Pretty cool.
Pretty cool.
any
any
all spam.
No client inbounds.
Trying to think how I can frame
problem length is random. That should be
problem length is random. That should be
decent.
Like full.
Like full.
And let me figure out how I want to
And let me figure out how I want to
frame this.
No, for word shaping. Yeah, I it could
No, for word shaping. Yeah, I it could
be architectural,
be architectural,
it could be scaling. There are lots of
it could be scaling. There are lots of
things. It could be
could be data. It's very often data.
What is an example of that?
What is an example of that?
What will
too much abstraction from Python. Want
too much abstraction from Python. Want
more granular control? Yeah, I don't
more granular control? Yeah, I don't
want to get into the objectoriented
want to get into the objectoriented
versus procedural versus everything else
versus procedural versus everything else
because it's just a mess. Um,
but like pretty much
but like pretty much
people just end up you end up writing 10
people just end up you end up writing 10
times too much code. that's a thousand
times too much code. that's a thousand
times too slow.
times too slow.
The crux of it
The crux of it
and it just happens all the time. Even
and it just happens all the time. Even
with experienced devs who should know
with experienced devs who should know
better, it's the language itself pushes
better, it's the language itself pushes
you towards that because Python wants
you towards that because Python wants
you to write a class and then it wants
you to write a class and then it wants
that class to interact with another
that class to interact with another
class. Try to even make stuff that looks
class. Try to even make stuff that looks
more like C style code in Python. The
more like C style code in Python. The
language will fight you.
language will fight you.
And then once you have classes, you may
And then once you have classes, you may
as well have, you know, them wrapped
as well have, you know, them wrapped
with each other. It's just, it ends up
with each other. It's just, it ends up
piling more and more abstraction on
piling more and more abstraction on
itself by design.
itself by design.
Very, very hard to not just completely
Very, very hard to not just completely
break your knees on the abstraction tree
break your knees on the abstraction tree
and trip over and fall. I don't know.
I'm trying to think what I can even give
I'm trying to think what I can even give
people as like a quick recommendation.
people as like a quick recommendation.
Some of the AI models,
very little progress and live
very little progress and live
benchmarking to say that they plateau.
benchmarking to say that they plateau.
No, I don't think they're plateaued.
No, I don't think they're plateaued.
And the advice I'm giving here is
And the advice I'm giving here is
relevant regardless.
Rail up.
else. What are like the common like
else. What are like the common like
things that Python does that are
things that Python does that are
obnoxious?
I mean, Python has a ton of built-ins,
I mean, Python has a ton of built-ins,
right?
Tuple thing.
Tuple thing.
Ah, that's like a specific like syntax
Ah, that's like a specific like syntax
thinging. I mostly don't want people to
thinging. I mostly don't want people to
get hung up on like all the crap that's
get hung up on like all the crap that's
in Python.
Most of the ML libraries are easy to
Most of the ML libraries are easy to
implement using Python. What do you mean
implement using Python. What do you mean
to implement?
ML libraries are not implemented in
ML libraries are not implemented in
Python.
up here.
There's some heavy tasks that can be
There's some heavy tasks that can be
done using libraries.
done using libraries.
a lot of libraries Python that's just
a lot of libraries Python that's just
bindings
like yeah they're bindings
like yeah they're bindings
not that they're easy to implement using
not that they're easy to implement using
Python none of the core logic is in
Python none of the core logic is in
Python at all
You can't just use libraries either.
You can't just use libraries either.
Like
Like
a lot of the engines, they have their
a lot of the engines, they have their
own core. They've got their own kernels
own core. They've got their own kernels
and stuff. You they you actually they
and stuff. You they you actually they
have their own low-level code that's not
have their own low-level code that's not
in Python, not just library calls.
in Python, not just library calls.
You end up having to do both.
I think this is good.
up. Thank you.
up. Thank you.
The uh the environment still builds,
The uh the environment still builds,
right?
Oh, undeaf.
Oh, undeaf.
Yeah. I Yeah, you can do that
Yeah. I Yeah, you can do that
thing. Constants and see bother me.
Play chess
Play chess
locally, pal.
locally, pal.
Yeah, bet. The chess project. I've been
Yeah, bet. The chess project. I've been
like watching some chess stuff. I
like watching some chess stuff. I
honestly think you could really make
honestly think you could really make
something good there. And like the thing
something good there. And like the thing
is selfplay in chess should be really
is selfplay in chess should be really
really fast at least if we figure out
really fast at least if we figure out
the action space shenanigans. You should
the action space shenanigans. You should
be able to run selfplay in chess at like
be able to run selfplay in chess at like
3 million steps per second
3 million steps per second
and then you can evalid against
and then you can evalid against
stockfish or whatever separately and you
stockfish or whatever separately and you
can get a really really clear uh ELO
can get a really really clear uh ELO
evaluation.
evaluation.
One second. Use your restroom. One
One second. Use your restroom. One
second. Right back.
Welcome potato.
Type cast or is it is one word
Type cast or is it is one word
type cast?
type cast?
Yes.
selfplay collapses at the moment likely
selfplay collapses at the moment likely
due to persisting environment bugs.
due to persisting environment bugs.
Uh how are you measuring
Uh how are you measuring
whether it collapses? that
cuz you're not going to get like a win
cuz you're not going to get like a win
rate, right, versus self. It's always
rate, right, versus self. It's always
going to be 50%.
Self play, you're playing against
Self play, you're playing against
yourself, so you're going to win half
yourself, so you're going to win half
the games, right?
anything. A better thing to look at will
anything. A better thing to look at will
be the uh the length of a game if it
be the uh the length of a game if it
gets to a reasonable thing.
gets to a reasonable thing.
Raw equals one.
Uh it depends. I would look at the
Uh it depends. I would look at the
episode length. Like if you have
episode length. Like if you have
ridiculously high episode lengths,
ridiculously high episode lengths,
they're probably just all spamming
they're probably just all spamming
invalid moves. You should probably look
invalid moves. You should probably look
at that actually. If they can just learn
at that actually. If they can just learn
to make valid moves, like that's going
to make valid moves, like that's going
to already get you to a decent spot. cuz
to already get you to a decent spot. cuz
once they're making valid moves, like
once they're making valid moves, like
there really not that many valid moves
there really not that many valid moves
you can make in chess at any given time
you can make in chess at any given time
increases steadily. That's decent.
Like what the thing is once they're
Like what the thing is once they're
actually making in like once they're
actually making in like once they're
making valid moves, it should learn
making valid moves, it should learn
quite quickly.
20 moves per turn. Yeah. So, it's just
20 moves per turn. Yeah. So, it's just
it doesn't understand a valid verse
it doesn't understand a valid verse
invalid move.
We might have to chat with some people
We might have to chat with some people
on that cuz like they did it this way
on that cuz like they did it this way
for um M0 I believe, right? They did it
for um M0 I believe, right? They did it
that way for that paper and I said, "Oh,
that way for that paper and I said, "Oh,
okay. Yeah, that sounds great." But I
okay. Yeah, that sounds great." But I
didn't realize that it's actually like
didn't realize that it's actually like
4,000 some odd dimensional. Kind of
4,000 some odd dimensional. Kind of
ridiculous.
ridiculous.
probably also making stuff Hello.
Open element zero.
Open element zero.
Yeah.
What other things am I missing for like
What other things am I missing for like
basic basic C here?
bit. Yeah,
they do it in such a weird shitty order
they do it in such a weird shitty order
here.
Can't even recommend a course.
Yeah, I'm going to cover that next.
Bye.
Have fun. Oh yeah. See you. Bet. Enjoy
Have fun. Oh yeah. See you. Bet. Enjoy
the 4th. Happy 4th of July.
Okay, I got to kill a fly. This thing's
Okay, I got to kill a fly. This thing's
going to drive me insane.
That don't leave you alone.
and build a fly turret. Yeah. Drive me
and build a fly turret. Yeah. Drive me
insane.
Got him.
Got him.
I think I got him.
I think I got him.
Those
things
What tools do we suggest here?
Good.
Capital.
how they changed it from Grock to super
how they changed it from Grock to super
Grock. That's funny.
Okay.
Up.
Get right is the main thing.
had to drop out for a bit. How's
had to drop out for a bit. How's
progress going?
progress going?
Still on this like super basics guide.
Almost done with this, I think.
Okay.
Okay.
Uh, let me think. What else do I want to
Uh, let me think. What else do I want to
put in this?
Oh,
It's 424.
It's 424.
I think I've done a decent job of this.
I think I've done a decent job of this.
Are there any um
Are there any um
newer programmers around here that have
newer programmers around here that have
questions and things that perhaps I've
questions and things that perhaps I've
not addressed yet? How many tips do I
not addressed yet? How many tips do I
have? One, two, three, four, five, six,
have? One, two, three, four, five, six,
seven, eight. possibly do a top 10.
I'll think about it a little bit. But uh
I'll think about it a little bit. But uh
if there any
if there any
relatively newer programmers or and
relatively newer programmers or and
let's qualify that by like if the way
let's qualify that by like if the way
that I am writing code that you've seen
that I am writing code that you've seen
in my dayto-day, if anything is like
in my dayto-day, if anything is like
foreign or strange, you have questions
foreign or strange, you have questions
now would is a great time to ask. I will
now would is a great time to ask. I will
include things in here. Here's the
include things in here. Here's the
restroom real quick.
No questions.
No questions.
Well, I can give a list of things to
Well, I can give a list of things to
avoid.
What is my list of things I hate?
What are my list of things that I hate?
What are my list of things that I hate?
Let me think.
Anybody
have uh crap stuff I'm forgetting out.
He
config systems, right?
package managers.
What you mean like snap?
What you mean like snap?
You got to know like your DRO is built
You got to know like your DRO is built
in like after or whatever. Yeah,
I already included that though.
What? Python package managers.
What? Python package managers.
Oh yeah,
I'm going to include I think that the
I'm going to include I think that the
last bullet will be uh things that I
last bullet will be uh things that I
like
UV is not going at the start of this,
UV is not going at the start of this,
but uh it will be in
I I'm not going to put like the
I I'm not going to put like the
framework on There.
That's not going to like tell anybody
That's not going to like tell anybody
anything. I'll let me finish this thing
anything. I'll let me finish this thing
first. What are the other things I don't
first. What are the other things I don't
want want to steer people away from?
Fancy CCI.
Oh yeah. Yeah.
What tools do I actually I don't really
What tools do I actually I don't really
use that much stuff, right?
Ash is in there.
Well, mostly
UV is definitely
I really don't use that much stuff
I really don't use that much stuff
like at all.
Oh,
my puffer pass. Exactly.
Not really that many things I can
Not really that many things I can
suggest other like I don't use anything.
suggest other like I don't use anything.
Let's see. Is there anything else here
Let's see. Is there anything else here
from this list that's missing?
Put this up here.
Important.
Add rising into there.
Trying Muan Optimizer for the first
Trying Muan Optimizer for the first
time. What is it that about it that you
time. What is it that about it that you
like that it solves everything freaking
like that it solves everything freaking
instantly and is a generational leap
instantly and is a generational leap
over at Adam in literally all of our
over at Adam in literally all of our
tests?
tests?
Just
implementing things from scratch
implementing things from scratch
perhaps.
Isn't RL model architecture
Isn't RL model architecture
thin though?
thin though?
Yes,
it is.
it is.
Why would that matter?
How are we doing here?
Dang.
Dang.
Crash is right here.
Crash is right here.
Fortunate.
We do still have some bugs.
We do still have some bugs.
That is still soda.
That is still soda.
I'll have to see if I can resume that.
That's soda in half the time as well. So
That's soda in half the time as well. So
that literally cuts the uh the train
that literally cuts the uh the train
time in half for that same score.
time in half for that same score.
treat hidden layers differently.
treat hidden layers differently.
Yeah. I mean, we have empirical data
Yeah. I mean, we have empirical data
that it's better, right?
wrong case for Muan by puffer. Exactly.
wrong case for Muan by puffer. Exactly.
Just in puffer lib. It's our default.
Just in puffer lib. It's our default.
Just use it.
kind of want to go fix the uh the
kind of want to go fix the uh the
experiment real quick.
This is learning rate.
Make sure this runs.
Yeah, it got a nan.
I think I can actually put this in with
I think I can actually put this in with
um my main like AI stuff. But I thought
um my main like AI stuff. But I thought
of one other thing.
Not this way.
All
right. I think these are like a this is
right. I think these are like a this is
like a pretty
good
thousandish words.
thousandish words.
It's like a decent length thing. I
It's like a decent length thing. I
believe.
This is actually ironically a lot easier
This is actually ironically a lot easier
than programming. This one is going to
than programming. This one is going to
be shorter. It's literally easier to
be shorter. It's literally easier to
learn, if you already are a good
learn, if you already are a good
programmer, it's literally easier to
programmer, it's literally easier to
learn AI than it is to uh to learn how
learn AI than it is to uh to learn how
to program.
Is that true?
Is that true?
I think that's true.
Yeah, I think that's true.
Did I take this my freshman year or my
Did I take this my freshman year or my
sophomore year?
sophomore year?
My freshman year, didn't I?
My freshman year, didn't I?
I don't remember.
I don't remember.
No, I definitely I took it my freshman
No, I definitely I took it my freshman
year. I would have had to have
no sophomore year. Yeah, it was my
no sophomore year. Yeah, it was my
sophomore year.
here.
just delete this.
Hang on. Let me go check on uh what this
Hang on. Let me go check on uh what this
is.
not to work so much on the holidays.
Little do you know that I consider this
Little do you know that I consider this
barely working.
Well, I mean, I can only go for so far
Well, I mean, I can only go for so far
back, right? If you haven't seen any
back, right? If you haven't seen any
calculus, it's like
there are some prerequisites.
Yeah, I mean that's got to be because
Yeah, I mean that's got to be because
the thing is otherwise you're not going
the thing is otherwise you're not going
to be able to learn ML because you just
to be able to learn ML because you just
won't be familiar enough with even the
won't be familiar enough with even the
notation to be able to read any research
notation to be able to read any research
papers, right?
So yeah, how to learn ML from scratch
So yeah, how to learn ML from scratch
doesn't mean like you're an infant
doesn't mean like you're an infant
toddler, right?
toddler, right?
I've covered I've covered programming
I've covered I've covered programming
because it's a topic that's confusing
because it's a topic that's confusing
and a lot of people think they know how
and a lot of people think they know how
to program but suck at it. Um ML is
to program but suck at it. Um ML is
usually like people come in either, oh
usually like people come in either, oh
yeah, I have some math or like I know
yeah, I have some math or like I know
some programming or whatever. Where do I
some programming or whatever. Where do I
get started? I think I think this is a
get started? I think I think this is a
good entry point. If you're asking for
good entry point. If you're asking for
like from before this, there's some
like from before this, there's some
things you just need to figure out like
things you just need to figure out like
how do I learn? You do not need my
how do I learn? You do not need my
advice on how to learn calculus. All
advice on how to learn calculus. All
right, it's like perfectly well covered.
Is there anything else I suggest before
Is there anything else I suggest before
papers?
Not really.
I think it's you're out of courses at
I think it's you're out of courses at
point, right?
Actually,
I'm going to save this
Hey man, good evening. I'm here with
Hey man, good evening. I'm here with
another question today. How do you do
another question today. How do you do
profiling
profiling
to identify PyTorch indexing overheads?
to identify PyTorch indexing overheads?
Ah, couple ways to do that. one PyTorch
Ah, couple ways to do that. one PyTorch
profiler pain in the ass because it
profiler pain in the ass because it
returns you these massive graphs of uh
returns you these massive graphs of uh
know every single operation and they're
know every single operation and they're
kind of hard to read. They are sometimes
kind of hard to read. They are sometimes
useful but often massively overkill.
useful but often massively overkill.
Much much much easier way is to do
Much much much easier way is to do
torch.cuda.synchronize
torch.cuda.synchronize
and then run your code and then
and then run your code and then
torch.cuda.synchronize synchronize and
torch.cuda.synchronize synchronize and
just time that block and then you can
just time that block and then you can
time that across different versions of
time that across different versions of
code indexing not indexing you know like
code indexing not indexing you know like
what if I index with a slice what if I
what if I index with a slice what if I
don't you know and you can very very
don't you know and you can very very
quickly time stuff out like that the
quickly time stuff out like that the
puffer lib trainer has a bunch of
puffer lib trainer has a bunch of
different blocks like types of code that
different blocks like types of code that
are all grouped together just
are all grouped together just
essentially using 20 lines of code that
essentially using 20 lines of code that
just does that and at times like the
just does that and at times like the
total amount of uh time spent in the
total amount of uh time spent in the
forward passive evaluation in the
forward passive evaluation in the
environment miscellaneous overhead and
environment miscellaneous overhead and
it just shows me in that little
it just shows me in that little
dashboard all the different places that
dashboard all the different places that
compute is being spent. So at a glance I
compute is being spent. So at a glance I
can know exactly uh what is the
can know exactly uh what is the
bottleneck.
bottleneck.
That is my main recommendation.
That is my main recommendation.
take a look at the pi the uh the
take a look at the pi the uh the
profiler and the dashboard that I've
profiler and the dashboard that I've
built in uh puffer lib a heck of a lot
built in uh puffer lib a heck of a lot
easier for most things. Now, if you're
easier for most things. Now, if you're
getting down to like timing individual
getting down to like timing individual
layers and kernels and stuff, then you
layers and kernels and stuff, then you
got to go to the PyTorch profiler.
got to go to the PyTorch profiler.
But for general usage, the thing I've
But for general usage, the thing I've
suggested is pretty dang
Anything
else?
last paragraph you wrote is literally
last paragraph you wrote is literally
what I'm believing about the majority of
what I'm believing about the majority of
researchers. Yeah. You see, this is like
researchers. Yeah. You see, this is like
I'm trying to provide this information
I'm trying to provide this information
because it's one thing to like discover
because it's one thing to like discover
this on your own slowly and it's another
this on your own slowly and it's another
to just like be told this by somebody
to just like be told this by somebody
that you have some respect and trust uh
that you have some respect and trust uh
for like this is literally the way it
for like this is literally the way it
works.
Now, let's see.
Now, let's see.
Sections overlay. I can run bazillions
Sections overlay. I can run bazillions
of other baselines, but I have eight
of other baselines, but I have eight
GPUs maxed at the same time.
GPUs maxed at the same time.
Bye. Yeah,
Bye. Yeah,
dude. I didn't even have eight. I didn't
dude. I didn't even have eight. I didn't
even have eight. I literally didn't use
even have eight. I literally didn't use
any of MIT's hardware for basically my
any of MIT's hardware for basically my
entire PhD because the cluster was such
entire PhD because the cluster was such
a mess.
I like bought a bit of my own hardware
I like bought a bit of my own hardware
and that was it. Nowadays, everyone's
and that was it. Nowadays, everyone's
running after big breakthrough models
running after big breakthrough models
and papers that just randomly bump into
and papers that just randomly bump into
a good run. Make their full research
a good run. Make their full research
life on top of that. Pretty much you
life on top of that. Pretty much you
appreciate small scope simple methods
appreciate small scope simple methods
over Yeah, we created an alternate
over Yeah, we created an alternate
universe. Exactly.
universe. Exactly.
Galaxy's worst numbers. Real robots mean
Galaxy's worst numbers. Real robots mean
nothing. No. Yeah.
nothing. No. Yeah.
Yeah. It's real bad.
pretty good. I'm trying to think what
pretty good. I'm trying to think what
other
I have like a list of of things.
I guess an ML.
I can absolutely speak to like ways that
I can absolutely speak to like ways that
papers I should give some context
papers I should give some context
on this.
I think I should write a uh how science
I think I should write a uh how science
lies. You mean plenty of work PS works
lies. You mean plenty of work PS works
in
in
competition and pressure?
competition and pressure?
Yeah, it's like so my lab was very good.
Yeah, it's like so my lab was very good.
I basically didn't have any pressure to
I basically didn't have any pressure to
do anything other than make sure I had
do anything other than make sure I had
like at least three papers
like at least three papers
uh by the time I was ready to graduate,
uh by the time I was ready to graduate,
which is really not that bad. But there
which is really not that bad. But there
are absolutely labs where they basically
are absolutely labs where they basically
just force students to grind out like
just force students to grind out like
four papers per year.
four papers per year.
I I don't even think I can speak to just
I I don't even think I can speak to just
how depressing and horrible
how depressing and horrible
trying to produce four papers a year is.
trying to produce four papers a year is.
It does depend a lot on your area
It does depend a lot on your area
because like there are areas where you
because like there are areas where you
can basically just reuse your same code
can basically just reuse your same code
repo and like make some changes and
repo and like make some changes and
publish a whole new paper. Um or like
publish a whole new paper. Um or like
there are places where the
there are places where the
implementations of the algorithms are
implementations of the algorithms are
actually quite short. So it's like not
actually quite short. So it's like not
that bad. But just trying to like do
that bad. But just trying to like do
creative like hard science that requires
creative like hard science that requires
thinking and experimentation and
thinking and experimentation and
comparison and deep like research in
comparison and deep like research in
such like a compressed time frame and
such like a compressed time frame and
then having to produce a super boring
then having to produce a super boring
dry manuscript out of it. Um,
dry manuscript out of it. Um,
it's just horrible.
it's just horrible.
It's not fun at all.
It's not fun at all.
Honestly, I think my best research
Honestly, I think my best research
cycle, so my best year for Nurups on my
cycle, so my best year for Nurups on my
last year, um,
I had three papers and I spent I spent
I had three papers and I spent I spent
like I think a total of two days writing
like I think a total of two days writing
all three papers cuz I basically I just
all three papers cuz I basically I just
decided that instead of stressing over
decided that instead of stressing over
the thing and trying to like perfect it,
the thing and trying to like perfect it,
I was just going to write the dumbest,
I was just going to write the dumbest,
simplest, most thing I possibly
simplest, most thing I possibly
could because that's the way that
could because that's the way that
writing is expected. And then those ones
writing is expected. And then those ones
got in when papers that I actually spent
got in when papers that I actually spent
weeks on trying to make actually good
weeks on trying to make actually good
did not get accepted. So yeah,
did not get accepted. So yeah,
checking competitions like Kaggle,
checking competitions like Kaggle,
reading top 10 winning solutions
reading top 10 winning solutions
formative and reading. Sometimes you
formative and reading. Sometimes you
want to be a little careful though.
You do want to be a little careful
You do want to be a little careful
because like what happens a lot of the
because like what happens a lot of the
time with the Kaggle competitions is
time with the Kaggle competitions is
they get into this endless loop of
they get into this endless loop of
feature engineering and and like
feature engineering and and like
it works and then eventually they just
it works and then eventually they just
get steamrolled by like the new
get steamrolled by like the new
architecture or the new algorithm.
Competitions in general are weird. Like
Competitions in general are weird. Like
I organized a bunch of competitions
I organized a bunch of competitions
and like there are definitely some
and like there are definitely some
practical things that come out of it.
practical things that come out of it.
But yeah, the competitions are
But yeah, the competitions are
definitely weird.
filter this combo heavy stuff
filter this combo heavy stuff
asking action masking.
Yeah. So,
Yeah. So,
and asking action masking is pretty
and asking action masking is pretty
legitimate
there. It's tough cuz like actually a
there. It's tough cuz like actually a
lot of the winners in the competition
lot of the winners in the competition
just kind of scaled the crap out of it.
just kind of scaled the crap out of it.
Um like the neural MMO 2 competition, it
Um like the neural MMO 2 competition, it
was kind of like they scaled the crap
was kind of like they scaled the crap
out of it.
No, not neurommo. It was the one point
No, not neurommo. It was the one point
the one before that.
the one before that.
This neural MMO 2 competition actually
This neural MMO 2 competition actually
that didn't get uh well I can tell that
that didn't get uh well I can tell that
story.
story.
So, the reason that the neural MMO 2
So, the reason that the neural MMO 2
competition, the one before I graduated,
competition, the one before I graduated,
uh got like an eighth of the
uh got like an eighth of the
participation of the previous ones, even
participation of the previous ones, even
though it was like way better by every
though it was like way better by every
metric is, uh yeah, we had one, two,
metric is, uh yeah, we had one, two,
two or three sponsors.
two or three sponsors.
Yeah, three sponsors and all of them
Yeah, three sponsors and all of them
screwed me.
screwed me.
So, I ended up having to personally pay
So, I ended up having to personally pay
the prize money for that. Uh, it caused
the prize money for that. Uh, it caused
like basically a bunch of people
like basically a bunch of people
promised and then they pulled out
promised and then they pulled out
and after they'd already committed it
and after they'd already committed it
and we'd announced it. So, that caused
and we'd announced it. So, that caused
me like a full summer's worth of unpaid
me like a full summer's worth of unpaid
work
work
and a whole bunch of with the open
and a whole bunch of with the open
source community that just wasn't fun
source community that just wasn't fun
for anybody. And at the end of the day,
for anybody. And at the end of the day,
we didn't have the promotion, so stuff
we didn't have the promotion, so stuff
just didn't get advertised well. It was
just didn't get advertised well. It was
a whole nightmare.
a whole nightmare.
So I think the results for that
So I think the results for that
competition should have been way better
competition should have been way better
and I think we would have seen something
and I think we would have seen something
a little bit more interesting than the
a little bit more interesting than the
previous one. But yeah, these are the
previous one. But yeah, these are the
things that happen in science, right?
things that happen in science, right?
It's not a pure discipline. It's still
It's not a pure discipline. It's still
people doing
people doing
Yeah.
Yeah.
It's still people doing
It's still people doing
and people kind of suck.
had nothing to do with my and I want to
had nothing to do with my and I want to
make this clear, had nothing to do with
make this clear, had nothing to do with
my adviser or my lab at all.
my adviser or my lab at all.
He literally didn't even know that this
He literally didn't even know that this
stuff was happening and he couldn't have
stuff was happening and he couldn't have
done anything if I told
So yeah,
So yeah,
and this type of stuff is like stuff of
and this type of stuff is like stuff of
this magnitude isn't even like super
this magnitude isn't even like super
uncommon, frankly.
PhD is long. You're going to deal with
PhD is long. You're going to deal with
some
Frankly, it's probably the reason that
Frankly, it's probably the reason that
um you know, you can criticize my work
um you know, you can criticize my work
and that's fine. I get real pissed when
and that's fine. I get real pissed when
people criticize my motives though
people criticize my motives though
because I've proven I' like I've proven
because I've proven I' like I've proven
my motives over many many years.
Oh, it's 5:53.
Oh, it's 5:53.
So, I got to go for dinner in just a
So, I got to go for dinner in just a
minute here, folks. Um,
minute here, folks. Um,
I will finish this. I think I'm going to
I will finish this. I think I'm going to
write on this tomorrow, though, during
write on this tomorrow, though, during
the day because I think that this will
the day because I think that this will
be really good if I can like actually
be really good if I can like actually
make some good progress on this. Uh, I
make some good progress on this. Uh, I
think that an article like this could do
think that an article like this could do
very well. I think people will be like
very well. I think people will be like
this could be helpful for a ton of
this could be helpful for a ton of
people and hopefully we'll get a bunch
people and hopefully we'll get a bunch
of new contributors out of this as well.
of new contributors out of this as well.
I don't want to spend like a week
I don't want to spend like a week
writing just an article, but a few days
writing just an article, but a few days
actually like kind of between the other
actually like kind of between the other
things I'm doing is pretty good. I think
things I'm doing is pretty good. I think
I'm happy with that. So, um, for the
I'm happy with that. So, um, for the
folks that have been here,
folks that have been here,
thank you for your interest.
thank you for your interest.
All my research is free and open source.
All my research is free and open source.
Find all of my stuff at puffer.ai.
Find all of my stuff at puffer.ai.
If you want to help me out for free,
If you want to help me out for free,
literally free in five seconds, star the
literally free in five seconds, star the
repo.
repo.
It really, really helps.
It really, really helps.
Like the more stars this have has, the
Like the more stars this have has, the
more people puffer gets recommended to,
more people puffer gets recommended to,
the more people see Puffer Lib, it just
the more people see Puffer Lib, it just
helps.
helps.
And if you want to get involved with
And if you want to get involved with
research,
research,
the Discord link discord.gg/ GG/puffer.
the Discord link discord.gg/ GG/puffer.
There's no requirement to get involved
There's no requirement to get involved
with any of this and pretty much all the
with any of this and pretty much all the
contributors are just people have stood
contributors are just people have stood
up and thought that this looked like
up and thought that this looked like
cool work and tried to learn this stuff.
cool work and tried to learn this stuff.
Other than that, you can follow me on X
Other than that, you can follow me on X
for more and I will be back likely first
for more and I will be back likely first
thing in the morning. So, uh, thank you
thing in the morning. So, uh, thank you
and enjoy the 4th of July.
