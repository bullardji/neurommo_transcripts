Kind: captions
Language: en
Morning. The goal for right now is to
Morning. The goal for right now is to
get this sweep that did not actually
get this sweep that did not actually
work to
work. I think this will be pretty quick
work. I think this will be pretty quick
and then we will uh we will go from
here. Yeah. So, I think it's going to
here. Yeah. So, I think it's going to
just be
just be
sweep
sweep
metric like this.
Yeah. So, it just got stuck here
Yeah. So, it just got stuck here
because it didn't have the
metric. So, we'll just do
that train to
that train to
600k. Very nice.
600k. Very nice.
We will leave that alone and we'll see
We will leave that alone and we'll see
uh we will check on
uh we will check on
that. And I think I want to do
that. And I think I want to do
um just a little bit of an overview of
um just a little bit of an overview of
where we are now with the
where we are now with the
update and uh decide where we want to go
update and uh decide where we want to go
from here today.
There are a few like small things around
There are a few like small things around
on the end of bindings and on various
on the end of bindings and on various
other
things. Lots of small
stuff. I'm trying to think what
stuff. I'm trying to think what
is the way I look at this because what
is the way I look at this because what
we're doing here is we're trying to
we're doing here is we're trying to
prepare for the next release, right?
prepare for the next release, right?
So, the way that I look at um
So, the way that I look at um
pre-release work generally,
oops, the way I look at pre-release work
oops, the way I look at pre-release work
generally is just what are the main
generally is just what are the main
things that are preventing me from being
things that are preventing me from being
comfortable with the state of the code
comfortable with the state of the code
as it is for running final
as it is for running final
experiments. So, like what are the
experiments. So, like what are the
things where I need to do this before
things where I need to do this before
I'm comfortable that we can run
I'm comfortable that we can run
experiments and the results aren't going
experiments and the results aren't going
to get all messed up by anything else I
to get all messed up by anything else I
do.
do.
Um, and then like what are the major
Um, and then like what are the major
things that I know are going to be hard
things that I know are going to be hard
that I don't just immediately know how
that I don't just immediately know how
to do right now and just haven't done
to do right now and just haven't done
yet. So the initial stuff for
that I still don't think that the main
that I still don't think that the main
train file is quite clean enough. It's
train file is quite clean enough. It's
almost
almost
there but like anything that we change
there but like anything that we change
in the main train file right can also
in the main train file right can also
change results. Uh we also we don't have
change results. Uh we also we don't have
I guess the other thing is we don't know
I guess the other thing is we don't know
the results of some of the ablation
the results of some of the ablation
studies
studies
like we don't actually know which of
like we don't actually know which of
some of the new features we have fully
some of the new features we have fully
matter quite
matter quite
yet. So we have
yet. So we have
to probably run some like initial
ablations. We also don't know uh final
ablations. We also don't know uh final
results for the more complex M. So,
results for the more complex M. So,
Impulse Wars, GPU drive, neural MMO, all
Impulse Wars, GPU drive, neural MMO, all
those. Ah, perfect. Spencer's around
those. Ah, perfect. Spencer's around
here, so I get to punt on this for now
here, so I get to punt on this for now
and just go do some stuff on GPU drive,
and just go do some stuff on GPU drive,
which is much
which is much
appreciated. Release work is
appreciated. Release work is
annoying. I'll jump in Discord
Spencer. So, for Twitch folks, this is
Spencer. So, for Twitch folks, this is
uh Hey Spencer, just for Twitch folks
uh Hey Spencer, just for Twitch folks
real quick, this is Let's run the uh
real quick, this is Let's run the uh
let's run the demo
actually
drive. Okay, so this is the SIM we'll be
drive. Okay, so this is the SIM we'll be
looking at today. This is uh Spencer's
looking at today. This is uh Spencer's
port of NYU's driving sim to Puffer.
port of NYU's driving sim to Puffer.
It's very fast and we're just having
It's very fast and we're just having
some trouble training models on it. So,
some trouble training models on it. So,
that's what we want to figure out what
that's what we want to figure out what
is wrong with that
is wrong with that
today. How's it going, Spencer? Hey,
today. How's it going, Spencer? Hey,
doing well, man. Let's uh get this
doing well, man. Let's uh get this
training. Yeah, I think today we should
training. Yeah, I think today we should
be able to solve it. Um, did you run a
be able to solve it. Um, did you run a
sweep?
sweep?
No. Okay. sweep overnight.
No. Okay. sweep overnight.
I didn't know if we wanted to go over
I didn't know if we wanted to go over
try and examine data stuff first or if
try and examine data stuff first or if
we just wanted to go ahead and um let a
we just wanted to go ahead and um let a
sweep and then examine sweep data or
sweep and then examine sweep data or
examine the sweep results to determine
examine the sweep results to determine
if there's a data issue. We can do a
if there's a data issue. We can do a
little bit of both. I'd say we can do a
little bit of both. I'd say we can do a
little bit of both. Um I'm trying to
little bit of both. Um I'm trying to
think how hard it would be to just get a
think how hard it would be to just get a
quick sweep
quick sweep
running
running
initially. Like how hard would it be to
initially. Like how hard would it be to
just like get something running on say
just like get something running on say
even like my spare
even like my spare
box so that we can just have it going?
Um I mean everything's in the release so
Um I mean everything's in the release so
I mean if you just pull it into any box
I mean if you just pull it into any box
and let me let me see how hard that'll
and let me let me see how hard that'll
be. Let's try to do
that.
Yeah. We have to rerun the jank setup
Yeah. We have to rerun the jank setup
thing.
We should just like call it puffer drive
We should just like call it puffer drive
or whatever.
Oh, going forward on the end. Yeah, we
Oh, going forward on the end. Yeah, we
should probably at some point.
M cr freder must be a list of
M cr freder must be a list of
followables. What did I do?
Did you just pull this into a new box or
Did you just pull this into a new box or
where are you right now? Uh box
zero. Is this config? This is does not
zero. Is this config? This is does not
look like a correct config to me.
look like a correct config to me.
No, that's what we had last time. 72 m.
No, that's what we had last time. 72 m.
Yeah. Oh, yeah. This
is
okay. For some reason, it's just the
okay. For some reason, it's just the
string.
I wonder when that uh that
broke. I didn't have any issues with
broke. I didn't have any issues with
that last night when I was just kind of
that last night when I was just kind of
running tests on the I wanted to make
running tests on the I wanted to make
sure I could reproduce the the one
sure I could reproduce the the one
environment test on running one map and
environment test on running one map and
it seemed fine. So, this is kind of
it seemed fine. So, this is kind of
weird.
Did you compile again on your box?
Did you compile again on your box?
Could
have. This seems like a config error.
have. This seems like a config error.
Yeah, this seems like a config screw
up. Make sure I run this right. Buffer
up. Make sure I run this right. Buffer
GPU drive. Yeah, that's fine.
Is this what it's called? It's called
Is this what it's called? It's called
GPU. Should be in GPU drive.GPU drive.
GPU. Should be in GPU drive.GPU drive.
Yeah. And then
Yeah. And then
the beard
does is your setup pot. No module side.
does is your setup pot. No module side.
No module side GPU drive. So it's an
No module side GPU drive. So it's an
import.
Hey
Jason. Yep. Right here. We left the
Jason. Yep. Right here. We left the
Sython
in that no longer exists.
Breakpoint. Yeah, I think I left a
Breakpoint. Yeah, I think I left a
breakpoint in, right? Yeah, that bug
breakpoint in, right? Yeah, that bug
only happens because of breakpoint of
only happens because of breakpoint of
multiprocessing.
multiprocessing.
I don't see a break point
I don't see a break point
in the delpy file of the GPU
in the delpy file of the GPU
drive.py. Did I leave one in there?
drive.py. Did I leave one in there?
That's the only time I ever see that bug
That's the only time I ever see that bug
happen.
happen.
Well, it's any error in like any weird
Well, it's any error in like any weird
uncalled error in multipprocessing. I
think train or is it ve back
think train or is it ve back
end? I should make it case insensitive
end? I should make it case insensitive
fault.
We fixed the seg faults though. Yes, we
We fixed the seg faults though. Yes, we
did.
did.
Maps.
Maps. That should be totally caught by
Maps. That should be totally caught by
the way. Can you do that to like check
the way. Can you do that to like check
the map file exists or whatever? You can
the map file exists or whatever? You can
just do it from the Python side even so
just do it from the Python side even so
before it loads. That way we don't do
before it loads. That way we don't do
this.
Yeah. Let me give you just give me the
Yeah. Let me give you just give me the
command for
command for
now. You can also hop on this. This is
now. You can also hop on this. This is
just popper box zero.
Uh let me just put the command real
Uh let me just put the command real
quick and then I'm loaning you use of
quick and then I'm loaning you use of
this box for a sweep for today.
I was actually thinking of ordering a
I was actually thinking of ordering a
tiny box last night and see what's going
tiny box last night and see what's going
to be a while for the other ones. It's
to be a while for the other ones. It's
not worth it
not worth it
anymore. Like it used to be 6490s I
anymore. Like it used to be 6490s I
think for 25k.
think for 25k.
It's
It's
45090s for 29k
45090s for 29k
now. That's like not worth, right?
now. That's like not worth, right?
6 4090s or four 5090s. The 5090s have
6 4090s or four 5090s. The 5090s have
only been like 10 20% faster in my test
only been like 10 20% faster in my test
so far. So like I don't think that maths
so far. So like I don't think that maths
out in your favor. Yeah, it's like I
out in your favor. Yeah, it's like I
should have bought one when it was uh
should have bought one when it was uh
4090s. I guess that's like on me.
4090s. I guess that's like on me.
Um okay, I put the the two commands and
Um okay, I put the the two commands and
you have to first log into Hugging Face
you have to first log into Hugging Face
and then secondarily then do the
and then secondarily then do the
download command. Ah, what's the stupid
download command. Ah, what's the stupid
login thing? Hugging face.
login thing? Hugging face.
Then you have to drop your token in
Then you have to drop your token in
there. It's like a whole thing.
Otherwise, you get um they think you're
Otherwise, you get um they think you're
like mass scraping their website and
like mass scraping their website and
you'll get banned temporarily.
Okay.
Okay.
Oh, that's hugging face hub. Let me drop
Oh, that's hugging face hub. Let me drop
that in as well.
face is cool. I wish they had better
face is cool. I wish they had better
code.
code.
UnderscoreHub.
UnderscoreHub.
Yeah, also was there for a bit.
Yeah, also was there for a bit.
Oh, does DashHub also work? You may have
Oh, does DashHub also work? You may have
installed something different.
installed something different.
Underscore. Yeah, it's it's it's hugging
Underscore. Yeah, it's it's it's hugging
me face underscore hub. No, it's
me face underscore hub. No, it's
aliased. I think that I'm pretty sure
aliased. I think that I'm pretty sure
that the those are like alias or
that the those are like alias or
whatever and pi pie. So that
whatever and pi pie. So that
specifically people can't do that but
specifically people can't do that but
like hugging face CLI for instance
like hugging face CLI for instance
somebody could get that and like you
somebody could get that and like you
know holds to midicious one or
know holds to midicious one or
whatever that is a thing people do.
Okay. Uh and then you put the command
Okay. Uh and then you put the command
somewhere.
somewhere.
It's the one just above
where in the general chat. General chat
where in the general chat. General chat
within the voice channels.
within the voice channels.
Oh,
Oh,
but we have to log in. Yeah, first you
but we have to log in. Yeah, first you
have to log in. If you did that one,
have to log in. If you did that one,
then is the hugging face CLI download
then is the hugging face CLI download
command.
Do I actually
have Remind me if I remind me to never
have Remind me if I remind me to never
make people make like a puffer account
make people make like a puffer account
or whatever. They're pain in the ass.
token
boxy. So I guess in the GPU drive.py pie
boxy. So I guess in the GPU drive.py pie
and nit. I could do a check real quick
and nit. I could do a check real quick
to see if the folder structure
exists and then shoot out a warning. Uh
exists and then shoot out a warning. Uh
you should just like if not
you should just like if not
os.path.exist of the full map path in
os.path.exist of the full map path in
like the init function then you should
like the init function then you should
just raise an API
error. But what I have to make do I have
error. But what I have to make do I have
to make this directory or whatever?
to make this directory or whatever?
Yeah, if you don't have the directory
Yeah, if you don't have the directory
Oh, no, no, no. For the download, you
Oh, no, no, no. For the download, you
can just you can just press download.
can just you can just press download.
No, no, you don't have to do anything.
No, no, you don't have to do anything.
It'll it'll it'll just spawn one.
It'll it'll it'll just spawn one.
We do have We have uh I think you know
We do have We have uh I think you know
this, right? We have puffer lip usage
this, right? We have puffer lip usage
error.
error.
I'm unaware of that. Okay, so I made I I
I'm unaware of that. Okay, so I made I I
still think this is an okay idea. I made
still think this is an okay idea. I made
one specific um like puffer lip
one specific um like puffer lip
exception thing that I use everywhere
exception thing that I use everywhere
where it's just like hey it's just like
where it's just like hey it's just like
a you screwed up right
a you screwed up right
because like when you raise a specific
because like when you raise a specific
exception instead of an assert it's like
exception instead of an assert it's like
it's like a you screwed up not I screwed
it's like a you screwed up not I screwed
up.
up.
So yeah. So you have an exception that's
So yeah. So you have an exception that's
just like a puffer exception class.
just like a puffer exception class.
Yeah.
Is there any documentation of that
Is there any documentation of that
anywhere?
anywhere?
You need documentation for something
You need documentation for something
that's like 10 lines.
that's like 10 lines.
Well, I don't know what it's called. Is
Well, I don't know what it's called. Is
it called puffer exception? Oh, it's
it called puffer exception? Oh, it's
just open you open
just open you open
pufferlib.py. It's in pufferlib.py.
pufferlib.py. It's in pufferlib.py.
All right.
All right.
I wish everything could just be in
I wish everything could just be in
pufferlib.py, but that would be a little
pufferlib.py, but that would be a little
bit excessive.
I'll get this thing running in the
I'll get this thing running in the
meantime.
Would make me very happy to be able to
Would make me very happy to be able to
just merge
just merge
all the files API usage error.
Still said false.
Did you run the command that creates the
Did you run the command that creates the
binaries. This now you got to run the
binaries. This now you got to run the
command that creates the binaries and
command that creates the binaries and
set the binary folder
structure. So that's under resources/GPU
structure. So that's under resources/GPU
drive/binaries.
drive/binaries.
Yeah, we got to make this part of like
Yeah, we got to make this part of like
the of the M class or
whatever. Error
whatever. Error
processing file entity DT type is not
processing file entity DT type is not
defined. Uh
defined. Uh
oh. So that's a
oh. So that's a
problem cuz the Syon, right?
Yes, that's a new problem without the
Yes, that's a new problem without the
Syon. Mhm. Wait, this does load
map. But does it do anything?
Save map binary. This returns
Save map binary. This returns
entities. This doesn't this never gets
entities. This doesn't this never gets
called in a way that you need this. No,
called in a way that you need this. No,
it does not ever actually. You don't
it does not ever actually. You don't
have to get any values from load map. I
have to get any values from load map. I
can just do this. I don't believe
we can just fix this right away cuz I
we can just fix this right away cuz I
don't think load map even.
There we go.
There we go.
Let me not cover my chat.
Let me not cover my chat.
I don't think it is. I think it's just
I don't think it is. I think it's just
called in process maps and doesn't go
called in process maps and doesn't go
anywhere. Yeah.
It would be good to double check. Oh, I
It would be good to double check. Oh, I
forgot. You're in a box. You can't check
forgot. You're in a box. You can't check
rendering, but I guess you'll find out
rendering, but I guess you'll find out
soon enough if it works.
soon enough if it works.
Okay, so 300k step per second training
Okay, so 300k step per second training
on defaults on this box. I think it goes
on defaults on this box. I think it goes
to 400 in like two seconds, unless it
to 400 in like two seconds, unless it
just stays there.
just stays there.
370 on a 4090.
We also have not tried AM or compile or
We also have not tried AM or compile or
anything for your stuff yet.
Okay. Uh, is the metric set? Actually,
sweep sweep metric is not set. Is there
sweep sweep metric is not set. Is there
a score variable for GPU drive? Yes.
a score variable for GPU drive? Yes.
Okay. Then we then good. That's the nice
Okay. Then we then good. That's the nice
thing about that is then you don't have
thing about that is then you don't have
to set anything.
So, off-road
So, off-road
collision, we should set max to be zero,
right?
Because
Because
Yeah. Yes. So, it's reversed. Um, well,
Yeah. Yes. So, it's reversed. Um, well,
actually, here's the thing. When you're
actually, here's the thing. When you're
sweeping that, I think you're going to
sweeping that, I think you're going to
get unfairly unfair results possibly.
get unfairly unfair results possibly.
Why? Um,
Why? Um,
completion
rate. It still has collisions enabled,
rate. It still has collisions enabled,
right?
Yes. Well, in the way that you're just
Yes. Well, in the way that you're just
respawning now.
respawning now.
Yes. But then the the completion metric
Yes. But then the the completion metric
is do you get to the goal at least once
is do you get to the goal at least once
within 91 steps? Yes, that's correct. So
within 91 steps? Yes, that's correct. So
nothing that you change with the reward
nothing that you change with the reward
would be able to affect that
would be able to affect that
metric other than making it easier or
metric other than making it easier or
harder to
learn,
learn,
right? Like it can't skip over obstacles
right? Like it can't skip over obstacles
or anything like that.
or anything like that.
No, not anymore. Well, then there there
No, not anymore. Well, then there there
should be no unfair advantages possible.
We're going to not batch download
We're going to not batch download
command. Are we do we want do we want to
command. Are we do we want do we want to
make that as just part of the
make that as just part of the
uh the setup.py now?
Uh I wouldn't do setup.py. I would do it
Uh I wouldn't do setup.py. I would do it
when you when you first go to
when you when you first go to
instantiate GPU drive because it'll be
instantiate GPU drive because it'll be
in a driver end. So when it hits the
in a driver end. So when it hits the
driver end, it'll check for it and it'll
driver end, it'll check for it and it'll
make
make
them. That means we'll have to not have
them. That means we'll have to not have
it hosted on hugging face or we'll have
it hosted on hugging face or we'll have
to prompt the user for their login.
You don't want to have extra setup stuff
You don't want to have extra setup stuff
like this, man.
like this, man.
Do we just want
Do we just want
to have some type of written
to have some type of written
documentation where we just Povert comes
documentation where we just Povert comes
with a certain amount of maps already in
with a certain amount of maps already in
it's in the
it's in the
thing and then if you want more maps
thing and then if you want more maps
this is how you can do it. Uh
this is how you can do it. Uh
possibly we could also just like you
possibly we could also just like you
don't have to deal with like the whole
don't have to deal with like the whole
hugging face download process. Possibly.
hugging face download process. Possibly.
We do want to make that process easy
We do want to make that process easy
though. That's like the main way you
though. That's like the main way you
lose users.
What we doing? 50 mil to 200
mil seems
mil seems
fine. Scale equals time. Yes.
and we will see if this does anything.
Four and a half minutes per experiment.
We'll see. Well, I think it will go up
We'll see. Well, I think it will go up
to like 15 minutes if it's on the high
to like 15 minutes if it's on the high
end now. Yeah, we're going to have to
end now. Yeah, we're going to have to
improve perf anyways. Get to a million.
I think once we actually have like good
I think once we actually have like good
driving models, it'll get substantially
driving models, it'll get substantially
easier.
Okay.
I swear sometimes I find myself like
I swear sometimes I find myself like
whenever I'm typing in in Neoven, it
whenever I'm typing in in Neoven, it
just like spawns like text every once in
just like spawns like text every once in
a while that I just feel like I didn't
a while that I just feel like I didn't
type. It's probably
type. It's probably
um like Super Maven or something
um like Super Maven or something
catching up. I wouldn't be surprised.
catching up. I wouldn't be surprised.
And it's always at the top of the file.
And it's always at the top of the file.
It's like at the very very very tippy
It's like at the very very very tippy
top.
top.
Yeah. Yeah. I get that a lot as well.
Yeah. Yeah. I get that a lot as well.
It's weird.
API usage error is not defined. Did I
API usage error is not defined. Did I
type it wrong?
So, we got 0.9 above 0.9 even on um
So, we got 0.9 above 0.9 even on um
mazes overnight.
mazes overnight.
Oh,
Oh,
ridiculous. So, there's actually quite a
ridiculous. So, there's actually quite a
bit of
bit of
um there's quite a bit of
um there's quite a bit of
play, I would
play, I would
say. I guess I probably just called the
say. I guess I probably just called the
meta sweep maze or something by
meta sweep maze or something by
accident.
Can't be 40 meta experiments already.
Can't be 40 meta experiments already.
Can
there a so it's capital API and then
there a so it's capital API and then
case user?
Oh well, I will wait for them. Uh, but
Oh well, I will wait for them. Uh, but
this is good news. Let me send this to
this is good news. Let me send this to
Aaron. He'll be happy.
I was getting a little concerned about
I was getting a little concerned about
that. It's good. But my uh the sweep
that. It's good. But my uh the sweep
just rediscovered like the good policy
just rediscovered like the good policy
immediately.
immediately.
Nice.
Yeah, this is going to be this update's
Yeah, this is going to be this update's
going to be really good because we're
going to be really good because we're
just going to soda every single client's
just going to soda every single client's
end instantly and um you know when you
end instantly and um you know when you
set soda on clients ends that they've
set soda on clients ends that they've
been working on for several months and
been working on for several months and
have like and then you beat it by a mile
have like and then you beat it by a mile
um they are happy and then you have more
um they are happy and then you have more
time for dev on all the other
Actually, I think I should run this on
Actually, I think I should run this on
the other client's M just to give them a
the other client's M just to give them a
little nudge, you know. I should do that
little nudge, you know. I should do that
today. We get that stuff signed,
today. We get that stuff signed,
right?
right?
Cuz this is totally going to set soda
Cuz this is totally going to set soda
again, right?
again, right?
From the latest ones. Absolutely right.
From the latest ones. Absolutely right.
Like, well, how wouldn't this set?
Like, well, how wouldn't this set?
What? Oh, the clean
What? Oh, the clean
puffer. I let there were some demons
puffer. I let there were some demons
battled over that decision. Let's just
battled over that decision. Let's just
say
say
I was trying to figure out what thing to
I was trying to figure out what thing to
import in order to get the clean puffer.
import in order to get the clean puffer.
No, the um Oh, I thought you meant that
No, the um Oh, I thought you meant that
we have a a class for clean puffer.
No, I meant
for just getting my warnings to be
for just getting my warnings to be
proper.
proper.
I know you said it was input for lip,
I know you said it was input for lip,
but I didn't know if it was like defined
but I didn't know if it was like defined
there per
se.
Yeah. But like the trainer class has
Yeah. But like the trainer class has
literally been
literally been
um it's been like the the bell curve IQ
um it's been like the the bell curve IQ
meme where it's like you know the idiot
meme where it's like you know the idiot
and the midwit and like the thousand IQ
and the midwit and like the thousand IQ
or whatever.
That's a good result. Okay. Then this
That's a good result. Okay. Then this
means, by the way, if we're doing this
means, by the way, if we're doing this
immediately, this absolutely means that
immediately, this absolutely means that
if a sweep doesn't fix GPU drive, it's a
if a sweep doesn't fix GPU drive, it's a
data
issue because there's just no way in
issue because there's just no way in
hell that we soda everything and not GPU
hell that we soda everything and not GPU
drive.
Okay, I now have a warning that says
Okay, I now have a warning that says
like GPU drive maps not found. Please
like GPU drive maps not found. Please
follow the readme instructions to the
follow the readme instructions to the
maps or something right now.
maps or something right now.
So this happens if you do not have the
So this happens if you do not have the
binaries map structure.
binaries map structure.
Good. I
Good. I
mean arguably I could probably make it
mean arguably I could probably make it
go one layer further and just make sure
go one layer further and just make sure
that it has at least a map and not just
that it has at least a map and not just
the folder structure. Well, you could
the folder structure. Well, you could
check it out. I'll I'll whatever. As
check it out. I'll I'll whatever. As
long as there's something for now and
long as there's something for now and
we'll fiddle with it. We have the sweep
we'll fiddle with it. We have the sweep
running. I think that the goal is then
running. I think that the goal is then
we we just let this run and we start
we we just let this run and we start
looking at GPU drive anyways because
looking at GPU drive anyways because
like something's weird and I want to
like something's weird and I want to
like understand some of the data and
like understand some of the data and
stuff
anyways cuz I want to match NYU's
anyways cuz I want to match NYU's
results but then I like the first thing
results but then I like the first thing
is we match their results and then the
is we match their results and then the
next thing is we blow it out of the
next thing is we blow it out of the
water and make by like making it way
water and make by like making it way
faster and stuff.
I deleted. I have to go download it
again. Should have just copied it. I
again. Should have just copied it. I
should have just moved the folder, not
should have just moved the folder, not
deleted the folder.
I'm going to start pulling
I'm going to start pulling
up GPU drive code to look
at 1500 liner.
Yeah, I definitely see a bunch of stuff
Yeah, I definitely see a bunch of stuff
that could go wrong.
That could go what? Could go wrong.
Okay, you do have zeros inside steering
Okay, you do have zeros inside steering
and acceleration,
which is good.
which is good.
Yeah, there's do
nothings when you've had the stream
nothings when you've had the stream
pulled up. I haven't had my microphone
pulled up. I haven't had my microphone
be clipping on Twitch, right? Or
be clipping on Twitch, right? Or
wherever.
your microphone like the sound quality
your microphone like the sound quality
like it hasn't clipping is you know like
like it hasn't clipping is you know like
it's like it cuts off the start or the
it's like it cuts off the start or the
end of what you're saying.
Okay, let me mute you on Discord and
Okay, let me mute you on Discord and
then hear you on stream. I was just
then hear you on stream. I was just
wondering if you'd noticed it.
Not in recent. Okay, cool. I know. I
Not in recent. Okay, cool. I know. I
just wanted to know cuz a few days ago I
just wanted to know cuz a few days ago I
like I messed with all the settings
like I messed with all the settings
because I have all this maintenance work
because I have all this maintenance work
going on. So it's actually like really
going on. So it's actually like really
noisy in the
background but it like it cuts it all
background but it like it cuts it all
out.
No. Yeah, you're fine. All right. Good.
No. Yeah, you're fine. All right. Good.
Thank you. I will continue reading this
Thank you. I will continue reading this
code.
I mean really the only thing we care
I mean really the only thing we care
about the thing that we care about most
about the thing that we care about most
is going to be the compute observations
is going to be the compute observations
thing for
sure what folder do
you have like normalized.
you have like normalized.
Wait, what the hell?
All right. What are you uh panicking
All right. What are you uh panicking
about? Just the
about? Just the
normalization.
normalization.
So, you have like these gigantic min and
So, you have like these gigantic min and
max goal cord
max goal cord
things. Is that actually Do those get
things. Is that actually Do those get
used? Yeah.
used? Yeah.
Like that is actually the range is like
Like that is actually the range is like
a th00and to a thousand.
a th00and to a thousand.
That is what they use.
That is what they use.
Is that how big the map sizes are
Is that how big the map sizes are
or did they just have some big ass
or did they just have some big ass
number?
I'd say on average the map sizes are
I'd say on average the map sizes are
probably more in the range of hundreds
probably more in the range of hundreds
to 100
to 100
after after you switch them from
uh like what's it
uh like what's it
called? So originally the coordinate
called? So originally the coordinate
systems on each map was different. So
systems on each map was different. So
and did they normalize by that value as
and did they normalize by that value as
well? So they do that one time so that
well? So they do that one time so that
everything is at least in the zero
everything is at least in the zero
coordinate in a zerobased coordinate
coordinate in a zerobased coordinate
system because they're subtracting the
system because they're subtracting the
mean off all the values one time ahead
mean off all the values one time ahead
of time. And then this is a second round
of time. And then this is a second round
of um within that new zero coordinate
of um within that new zero coordinate
based map.
based map.
your goal is, you know, X distance away
your goal is, you know, X distance away
from you and the maps are roughly in
from you and the maps are roughly in
like the around hundreds of 100 by
hundreds original relative
hundreds original relative
positions. Rotate to the ego vehicles
positions. Rotate to the ego vehicles
frame.
the rotation
matrix.
Wait, is
this cosine sign
Is this just rotating in the other
direction? Are you rotating clockwise?
It should be rotating into the
It should be rotating into the
perspective
perspective
of the ego agent.
of the ego agent.
Is this something that is visualized in
Is this something that is visualized in
the um the viewer or no?
Does the rotation this rotation matrix
Does the rotation this rotation matrix
doesn't have the negative where I would
doesn't have the negative where I would
expect it to be, but it could just be
expect it to be, but it could just be
that it's rotating in the other
that it's rotating in the other
direction.
How the renderer looks at it is using
How the renderer looks at it is using
the same type of rotation scheme. Okay.
the same type of rotation scheme. Okay.
So if so if this were wrong, we would
So if so if this were wrong, we would
see it in the renderer.
If this were wrong either well the
If this were wrong either well the
renderer also uses a similar
scheme. So if you're looking at
scheme. So if you're looking at
observations what which which one are
observations what which which one are
you looking at the relative car
you looking at the relative car
positions? So there's rotate to ego
positions? So there's rotate to ego
vehicles frame right here. I see this
vehicles frame right here. I see this
rotation matrix and it's not the
rotation matrix and it's not the
rotation matrix I would
expect in the viewer. I show from the
expect in the viewer. I show from the
perspective of the agent when I'm when
perspective of the agent when I'm when
I'm you hold shift and you actually see
I'm you hold shift and you actually see
the observations. It will show the car
the observations. It will show the car
and the position that it thinks it's in
and the position that it thinks it's in
as well as the rotation that that car as
as well as the rotation that that car as
well as the direction that that car is
well as the direction that that car is
facing relative to what its position is.
facing relative to what its position is.
Have you seen all like the ghost cars
Have you seen all like the ghost cars
that are like in weird positions? Have
that are like in weird positions? Have
you seen that appear in their viewer or
you seen that appear in their viewer or
only in yours?
only in yours?
Well, you see, here's the fun fact.
Well, you see, here's the fun fact.
Because I have the new machine and
Because I have the new machine and
before I don't know if I can actually
before I don't know if I can actually
run their thing on my
run their thing on my
MacBook, I have no viewer of their
MacBook, I have no viewer of their
thing. So, that was something that I was
thing. So, that was something that I was
going to ask you to see if you could do
going to ask you to see if you could do
is to
is to
compare the visualizer on theirs to
compare the visualizer on theirs to
mine.
That would be a good idea. Can we at
That would be a good idea. Can we at
least It's a bit of a chore to get their
least It's a bit of a chore to get their
thing running. Can we at least like pull
thing running. Can we at least like pull
up a map that has some weird cars that
up a map that has some weird cars that
we wouldn't
we wouldn't
expect? That would probably be a good
expect? That would probably be a good
idea to like see if they're actually
idea to like see if they're actually
there.
Should we be able to see it in the data
Should we be able to see it in the data
file or is the data file a mess?
The data file. Do you see what I'm
The data file. Do you see what I'm
saying though? Like like if we find a
saying though? Like like if we find a
map that has weird cars that like seem
map that has weird cars that like seem
sus and we see if it's actually like
sus and we see if it's actually like
that's how the data just is or if
that's how the data just is or if
there's an issue with the way that it's
there's an issue with the way that it's
being rendered or whatever.
being rendered or whatever.
The data files are not very friendly to
The data files are not very friendly to
look at. They're like giant JSONs. Okay.
look at. They're like giant JSONs. Okay.
So
then we can at least get like the raw
then we can at least get like the raw
coordinates of stuff and see if that
coordinates of stuff and see if that
makes sense like in the end code.
makes sense like in the end code.
I mean, you can if you want to spawn
like you could print out the the spawn
like you could print out the the spawn
coordinates of cars, save them
coordinates of cars, save them
somewhere, and then try and command F to
somewhere, and then try and command F to
go find them in the JSON
file. Eval
So this is map
zero are
zero are
there. So this looks jank, right? Like
there. So this looks jank, right? Like
the fact that these cars are
here cuz this is like a roundabout and
here cuz this is like a roundabout and
like it's a solid.
like it's a solid.
But we can see if like these cars are
But we can see if like these cars are
actually here, I guess,
right? Or why they The fact that there's
right? Or why they The fact that there's
a car on that outer edge is sus.
a car on that outer edge is sus.
One car. There's like a bunch, right?
One car. There's like a bunch, right?
No, but like outside of the entire grid
No, but like outside of the entire grid
coordinate cuz I based I base the edges
coordinate cuz I based I base the edges
of the map based on the cars. Okay. So,
of the map based on the cars. Okay. So,
like we should then from that Oh, no. I
like we should then from that Oh, no. I
based it off of Hold up. No, I based it
based it off of Hold up. No, I based it
off of the road edges, not the cars. So,
off of the road edges, not the cars. So,
that could possibly happen.
It's a perfect
test. You just go to the C
Okay. So, here we have the
Okay. So, here we have the
C. What's the
C. What's the
uh zoom? I don't have controls in this
uh zoom? I don't have controls in this
for some reason. Are you on eval?
Yeah, you should be able to zoom in and
Yeah, you should be able to zoom in and
do all sorts of things. Yeah, I can't.
do all sorts of things. Yeah, I can't.
Weird.
I could the other
I could the other
day right on local.
Scrolling isn't doing anything.
Nope. This bot.
What about the other controls like your
What about the other controls like your
left and right to increase acceleration
left and right to increase acceleration
or steering? Nothing really seems to
or steering? Nothing really seems to
respond.
respond.
But it doesn't super matter. What
But it doesn't super matter. What
matters for now is that we get
matters for now is that we get
um we put like a break point and we
um we put like a break point and we
figure some stuff
figure some stuff
out. Where would I go to like where
out. Where would I go to like where
would you go to like figure out
would you go to like figure out
where where things could be screwy with
where where things could be screwy with
this
in terms of car spawning?
in terms of car spawning?
Yeah, like where the car positions are
Yeah, like where the car positions are
and stuff. That would be set active
and stuff. That would be set active
cars, set active
agents. It's a one of the functions
agents. It's a one of the functions
that's called in
that's called in
it like probably maybe hereish. Mhm.
Okay. So, we
have 64
have 64
objects. 63 I
guess. Two
cars. Wait. I less than num objects
cars. Wait. I less than num objects
minus one and M num cars less than max
cars. I'm confused what this
does.
does.
So there are the number of objects.
So there are the number of objects.
Oh, is this just making sure there
Oh, is this just making sure there
aren't more than 64 like 64 cars or
aren't more than 64 like 64 cars or
whatever? It makes sure that there
whatever? It makes sure that there
aren't more than 64 cars and also not
aren't more than 64 cars and also not
more
than how many cars exist. Okay.
So and then the last car which is for
So and then the last car which is for
num objects minus one is always going to
num objects minus one is always going to
be an active agent.
be an active agent.
And this is and this is only for setting
And this is and this is only for setting
the
the
uh the cars that the neural net's
uh the cars that the neural net's
driving though, not all the gray cars,
driving though, not all the gray cars,
right? Both. This this determines
right? Both. This this determines
setting up
setting up
static cars. This this tells you static
static cars. This this tells you static
cars, active cars, and static expert
cars. Static car indices.
confused because this is this is only
confused because this is this is only
looping over two
cars, right?
We go to
353. No, you're not looping over two
353. No, you're not looping over two
cars. Num cars is the
uh is how many cars are being added to
uh is how many cars are being added to
itself over time. Like it's it's
itself over time. Like it's it's
incrementing. Num cars is an
incrementing. Num cars is an
incrementing variable in that loop.
Oh, hang
Oh, hang
on. Run
this. Mark as expert.
Yeah. So to understand in their data set
Yeah. So to understand in their data set
they have cars that are marked as expert
they have cars that are marked as expert
which are the vehicles that have like
which are the vehicles that have like
kind of some weird conditions that occur
kind of some weird conditions that occur
like some of these cars were cars that
like some of these cars were cars that
could have been active agents but as
could have been active agents but as
part of their expert trajectory run
part of their expert trajectory run
off-road or do something like or
off-road or do something like or
actively collide with someone else or
actively collide with someone else or
something along those lines. So they as
something along those lines. So they as
part of the JSON pre-processing effort
part of the JSON pre-processing effort
decided to make those what are called
decided to make those what are called
experts and should be just a static car
experts and should be just a static car
that moves on its own that has no
that moves on its own that has no
nothing to do with collisions or
nothing to do with collisions or
off-roading in terms of how the logging
off-roading in terms of how the logging
would recognize it as an agent.
would recognize it as an agent.
So they're not really experts because
So they're not really experts because
they're doing weird stuff.
Yeah, some move some of their
Yeah, some move some of their
trajectories seemingly are just like
trajectories seemingly are just like
they stay in place.
they stay in place.
and then disappear because they're still
and then disappear because they're still
following their trajectory path which is
following their trajectory path which is
probably like stay in place for like 20
probably like stay in place for like 20
time steps and then it's then it goes
time steps and then it's then it goes
probably off to negative 10,000 land
probably off to negative 10,000 land
because the trajectory positions are
because the trajectory positions are
originally based off of like a cars how
originally based off of like a cars how
that car is visible to the like the
that car is visible to the like the
primary
car and if the trajec that car is no
car and if the trajec that car is no
longer visible it will just fly into
longer visible it will just fly into
like 10,000 and may respawn again as
like 10,000 and may respawn again as
Well, based if it's visible
again, how do I figure out what position
again, how do I figure out what position
all these cars are supposed to be at? Uh
all these cars are supposed to be at? Uh
there's another function right after
there's another function right after
that or was before. I think it's before.
that or was before. I think it's before.
Go hold up arrow. It's called set start
Go hold up arrow. It's called set start
position or something along those lines.
Yeah, set start position. Okay. So then
Yeah, set start position. Okay. So then
this so these have the absolute chords
this so these have the absolute chords
of all the agents here.
those the positions that you're getting
those the positions that you're getting
from trajectory XYZ come directly from
from trajectory XYZ come directly from
the JSON.
the JSON.
Okay. So then this should be so really
Okay. So then this should be so really
all I need to
do is just like print
out well hang on these seem like
out well hang on these seem like
normalized or something
normalized or something
because XYZ
are the
same valid equals some big negative
same valid equals some big negative
number. Was this
invalid? I see unique goal position. No
invalid? I see unique goal position. No
unique
unique
goal why. Yeah, I see unique goal
goal why. Yeah, I see unique goal
position wise.
Okay,
so we have um some stats
here. Okay,
here. Okay,
it's kind of weird.
Soative 10,000s is are invalid
Soative 10,000s is are invalid
positions. Anything that starts at a
positions. Anything that starts at a
10,000 at position zero are not
10,000 at position zero are not
considered entities in the map. They're
considered entities in the map. They're
taken out of consideration. It's not
taken out of consideration. It's not
like uniform though. Like there's stuff
like uniform though. Like there's stuff
that's valid at 49, 50, 53.
Is that at time step or is that the is
Is that at time step or is that the is
that um cars? So it's on a net I just
that um cars? So it's on a net I just
printed out. No, no, no. But what do the
printed out. No, no, no. But what do the
numbers represent? Are that is that time
numbers represent? Are that is that time
steps should be independent cars?
Yeah. entity I index
Yeah. entity I index
I position
and kind of weird that the Z is a little
and kind of weird that the Z is a little
different in all these
the Z's eventually get hard forced to
the Z's eventually get hard forced to
one is this in meters or like okay cuz
one is this in meters or like okay cuz
here we have we've got like 4,000gative
-3,000 and then we go back to having
-3,000 and then we go back to having
valid looking agents
here up to
here up to
101. So the ones that are in those range
101. So the ones that are in those range
is because they've already had their the
is because they've already had their the
mean has been subtracted from their
mean has been subtracted from their
values
values
and this in order to keep everything on
and this in order to keep everything on
the zero coordinate into a zerobased
the zero coordinate into a zerobased
coordinate map system. What? Like what
coordinate map system. What? Like what
are these? So that like
are these? So that like
So some things are
skipped. I'm trying to think what the
skipped. I'm trying to think what the
easiest thing to do here.
So, if you wanted cars to no longer
So, if you wanted cars to no longer
disappear, there's a very simple thing
disappear, there's a very simple thing
that it could be that could happen. I
that it could be that could happen. I
mean, all you have to do is turn off the
mean, all you have to do is turn off the
stat the experts from moving in step.
stat the experts from moving in step.
Well, I want to see if like the
Well, I want to see if like the
positions
positions
actually make sense. Is there
actually make sense. Is there
like Okay, if I just do
If you wanted to in render, you could
If you wanted to in render, you could
just draw a hard line on the
just draw a hard line on the
zero like going up at the origin like a
zero like going up at the origin like a
like a graph. So you can roughly see
like a graph. So you can roughly see
where things are because you you have a
where things are because you you have a
sense of spacing because the the graph
sense of spacing because the the graph
already isn't broken up into squares of
already isn't broken up into squares of
5 meters by 5 meters.
some weird thing like this.
Uh okay. So this is just like
I guess
I guess
um I guess we have to like put a break
um I guess we have to like put a break
point after this, right?
314. 13.
Yeah. So this is not drawing anything.
one is probably totally wrong. I don't
one is probably totally wrong. I don't
think you can just call draw rectangle
think you can just call draw rectangle
at that point in time cuz you don't even
at that point in time cuz you don't even
have like a a client or anything.
I'm just trying to like get a sense of
I'm just trying to like get a sense of
like if I just render the raw you see
like if I just render the raw you see
what I'm trying to do like if I get the
what I'm trying to do like if I get the
raw
raw
coordinates like do they look like the
coordinates like do they look like the
they look reasonable compared to the
they look reasonable compared to the
actual
actual
map. Okay there. So this is what I was
map. Okay there. So this is what I was
trying to
trying to
do. So this
do. So this
is this is
is this is
what this map is supposed to look like
what this map is supposed to look like
with all the
with all the
entities you
see.
see.
Okay. Give you this screenshot.
Oh,
now just like I comment
now just like I comment
this
this. So keep in mind entities are both
this. So keep in mind entities are both
cars and
roads. So we have this circle. It's like
roads. So we have this circle. It's like
a right angle. It's like a T with the
a right angle. It's like a T with the
entities. Like a short T on one
side. So that
side. So that
looks There's supposed to be some stuff
looks There's supposed to be some stuff
back
back
here, I
here, I
think. Hang
on. This has got to be like flipped,
on. This has got to be like flipped,
right?
This looks like it's horizontally
This looks like it's horizontally
flipped. Yeah. So, I see these two cars
flipped. Yeah. So, I see these two cars
right here. And then I see two dots
right here. And then I see two dots
right
right
here. Right. One,
two. And then how many dots? One, two,
two. And then how many dots? One, two,
three, four, five. Two, three, four,
three, four, five. Two, three, four,
five.
I mean, at least we see here that like
I mean, at least we see here that like
there is this map is actually supposed
there is this map is actually supposed
to be like a T with the stuff that's
there. It's just weird that this is the
there. It's just weird that this is the
actual data, right? Like
actual data, right? Like
Like what is this supposed to
be? Like this looks like some sort of
be? Like this looks like some sort of
like roundabout type thing, but then
like roundabout type thing, but then
there are a bunch of cars over here like
there are a bunch of cars over here like
as if there was another road.
Well, you have to remember a lot of
Well, you have to remember a lot of
things are also taken out, right?
things are also taken out, right?
Mhm.
Like if you were to change your drawing
to let's see if you were to change it
to let's see if you were to change it
such that you
such that you
are how does this work?
You can specify your drawing to only
You can specify your drawing to only
have a type and then you can see the car
have a type and then you can see the car
positions versus other things because I
positions versus other things because I
think you may be
think you may be
seeing the start of some road points as
seeing the start of some road points as
well.
well.
The start of some road
The start of some road
points. Okay. Because entities includes
points. Okay. Because entities includes
both roads
and Okay. So like what is it? It's um if
and Okay. So like what is it? It's um if
E.ype is
E.ype is
so if you change your draw rectangle
so if you change your draw rectangle
just to have a condition. Yeah. What if
just to have a condition. Yeah. What if
type is greater than three or if type is
type is greater than three or if type is
less than three you'll see um only cars.
less than three you'll see um only cars.
Let's do this. Sorry less than less than
four. It should be less than or equal to
four. It should be less than or equal to
three or less than four.
annoying
thing.
Okay, these are the cars.
do this.
Yep.
Go. So, these are our
cars and we want to see if this
cars and we want to see if this
matches. If this matches the
map, let's compare.
map, let's compare.
Let's see what else would there be that
Let's see what else would there be that
could possibly be tripped out of this.
could possibly be tripped out of this.
Yeah. So, there are five cars and then
Yeah. So, there are five cars and then
two
two
cars. Okay. And then there are no cars
cars. Okay. And then there are no cars
in this
in this
circle. Then it's
Five. It looks like there's 10 on that
Five. It looks like there's 10 on that
top
lane. Yeah. So, this matches
lane. Yeah. So, this matches
exactly. And then over
exactly. And then over
here, yeah, this matches.
here, yeah, this matches.
It looks to me like the cars are in fact
It looks to me like the cars are in fact
in the right
in the right
spot in the loading here. Mhm. Which is
spot in the loading here. Mhm. Which is
good to know because then I I don't
good to know because then I I don't
know, maybe other road lines need to be
know, maybe other road lines need to be
rendered or something cuz like it
rendered or something cuz like it
doesn't make much sense to look at right
doesn't make much sense to look at right
now like the where some of these cars
now like the where some of these cars
are and
stuff.
stuff.
Okay. So, it's not where the physical
Okay. So, it's not where the physical
cars
cars
are. Get the um figure out why
are. Get the um figure out why
the the renderer is not letting me do
the the renderer is not letting me do
stuff with it.
stuff with it.
That would probably be a good start
That would probably be a good start
because that's really odd. And
because that's really odd. And
unfortunately, I'm in a weird things. I
unfortunately, I'm in a weird things. I
was just messing with my Docker because
was just messing with my Docker because
it was being was acting up on my
it was being was acting up on my
computer. Yeah. So, it like deleted
computer. Yeah. So, it like deleted
Nvidia CUDA toolkit. So, I'm redoing
Nvidia CUDA toolkit. So, I'm redoing
that right now to find out why that's
that right now to find out why that's
going on.
So arrow keys aren't doing anything for
So arrow keys aren't doing anything for
you. Well, it also opens two windows.
This July right
here. Oh, is this because of the new
here. Oh, is this because of the new
changes when client's no longer its own
changes when client's no longer its own
thing? Yes.
Okay,
Okay,
perfect. That's fixed. Now,
all right. Now, okay. Now, this is
all right. Now, okay. Now, this is
there's shift and then what is it?
there's shift and then what is it?
Control. So yeah, there's shift to go
Control. So yeah, there's shift to go
see the obs and then there's control to
see the obs and then there's control to
go to the third party perspective, which
go to the third party perspective, which
would not be very fun at the moment
would not be very fun at the moment
because you're just going to like your
because you're just going to like your
brain's going to explode.
And then there's right arrow to increase
And then there's right arrow to increase
the acceleration index. It's not
the acceleration index. It's not
necessarily like just an increase
necessarily like just an increase
acceleration. It's just going throughout
acceleration. It's just going throughout
the index in the arrays. So if you want
the index in the arrays. So if you want
steering to go straight, it would be
steering to go straight, it would be
steering six. So you press right arrow
steering six. So you press right arrow
six times.
six times.
How do you take Wait, what's the take
How do you take Wait, what's the take
over thing?
over thing?
You You're already to take over. Just
You You're already to take over. Just
press right
arrow. So, if you go to right arrow
arrow. So, if you go to right arrow
enough times to steering six, now it's
enough times to steering six, now it's
perfectly straight. And then zero will
perfectly straight. And then zero will
basically stop the car.
basically stop the car.
Um so if you go acceleration of I think
Um so if you go acceleration of I think
three it should
three it should
be it will maintain the spawning speed
be it will maintain the spawning speed
that it should
that it should
have with whatever velocity it was given
have with whatever velocity it was given
in the
beginning and it's a little so I got the
beginning and it's a little so I got the
goal once I guess. Yeah.
And then you're respawning also mid the
And then you're respawning also mid the
second you hit the goal
too.
Okay. I mean, specifically, it's weird.
Okay. I mean, specifically, it's weird.
We We saw it solve this map and then get
We We saw it solve this map and then get
like and then go just straight line and
like and then go just straight line and
screw up on when we tried to train it on
screw up on when we tried to train it on
a bunch of maps, right? Yeah. The second
a bunch of maps, right? Yeah. The second
you go to multiple maps and I ran an
you go to multiple maps and I ran an
experiment this morning just trying to
experiment this morning just trying to
do two maps, it also just like couldn't
do two maps, it also just like couldn't
learn it. So, it can't learn two maps.
learn it. So, it can't learn two maps.
Yeah, definitely there's some data issue
Yeah, definitely there's some data issue
then. Okay, we have to figure out what
then. Okay, we have to figure out what
it is.
I will check one last time here to make
I will check one last time here to make
sure that we haven't just like solved it
sure that we haven't just like solved it
while I've been
while I've been
in the sweep.
in the sweep.
Yeah. So, the best we have so far is 47
Yeah. So, the best we have so far is 47
and the cap I reached is like 6.59 61
and the cap I reached is like 6.59 61
and then it just hard it just turns into
and then it just hard it just turns into
a straight line.
Okay.
It fails with two M's, right?
It fails with two M's, right?
It failed for me on two M's.
It failed for me on two M's.
Did we try two M's? When we did one
Did we try two M's? When we did one
M, it was
M, it was
like one instant. But when we did it
like one instant. But when we did it
with 1 amp, we did it like with a one
with 1 amp, we did it like with a one
end like replicated a ton of times in
end like replicated a ton of times in
serial, right? Yes, that's what So, we
serial, right? Yes, that's what So, we
did 4096 um inside of the vectorzation
did 4096 um inside of the vectorzation
for the
for the
Let's do it the other way. Let's do it
Let's do it the other way. Let's do it
with one end um but done inside of um
with one end um but done inside of um
the C as the
loop. Let's do that.
They miss see
They miss see
reset
render. Yeah. So, how did we
render. Yeah. So, how did we
do 16 workers yada yada yada?
16 workers and then do you want to know
16 workers and then do you want to know
how the way we did it before or the
how the way we did it before or the
because we did 4096
because we did 4096
numms m and then batch size
numms m and then batch size
2048 and then we hard forced in the.py
2048 and then we hard forced in the.py
file the n by to be zero and we set
file the n by to be zero and we set
numms ms to be one. But what I wanted to
numms ms to be one. But what I wanted to
do here
do here
is
is
sprint zero.
sprint zero.
Here we load map zero repeatedly.
Here we load map zero repeatedly.
Okay.
Um then we also have to do it in the
pi which is
right like this.
F2.
Oops. Forgot about that
in need to get the uh the size
in need to get the uh the size
right. There two active agents in this
right. There two active agents in this
thing, right?
thing, right?
In level one. Should be right. No, one.
In level one. Should be right. No, one.
There's one. The second one was a was
There's one. The second one was a was
the ghost one.
the ghost one.
Oh, so if I just
like I go here. So you arguably could
like I go here. So you arguably could
just make num m 4096. I think if based
just make num m 4096. I think if based
on the way you currently set this up.
Because what this should do now is you
Because what this should do now is you
should have 72.
should have 72.
This is 72.
This is 72.
Yep.
So, we should set this to
So, we should set this to
like whatever.
like whatever.
Um,
Um,
4K
4K
56. We do like what's
512. We do like
512. We do like
512. the default batch and mini
512. the default batch and mini
batch. Guess batch has to be different
batch. Guess batch has to be different
because it's like
because it's like
batch has to be 91 times something.
batch has to be 91 times something.
Yeah. So this has to
Yeah. So this has to
be batch
be batch
size=
7. I think the mini batch stays the
7. I think the mini batch stays the
same.
same.
Yeah, mini batch is
fine. And you have to set max mini batch
fine. And you have to set max mini batch
too.
bizarre. Did we ever figure out like we
bizarre. Did we ever figure out like we
know that this batch like causes stuff
know that this batch like causes stuff
to hang. Did we ever figure out why it
to hang. Did we ever figure out why it
just hangs?
Wait, what happened? It's just not doing
Wait, what happened? It's just not doing
anything.
Weird. Whenever I was running something
Weird. Whenever I was running something
like this, I didn't mess with the
like this, I didn't mess with the
invids.append.
Oh, yeah. That's totally I don't know
Oh, yeah. That's totally I don't know
why I did that.
why I did that.
I just added a null pointer to the end
I just added a null pointer to the end
of it. Yeah, it it should be mids.append
of it. Yeah, it it should be mids.append
nid. Yeah, I don't know. I just added a
nid. Yeah, I don't know. I just added a
null pointer.
Okay, there we
go. Okay. So this is seemingly learning
go. Okay. So this is seemingly learning
this
end. How many agents in M2?
All right. Is it training on instant
All right. Is it training on instant
again?
Uhhuh. So I want to do two M's
Uhhuh. So I want to do two M's
now we do. Now this
now we do. Now this
is I% two.
Your batch sizes are going to get funky
Your batch sizes are going to get funky
again. I know.
I want to say with two maps it should
I want to say with two maps it should
now be three agents.
01 three.
01 three.
It's three, right?
Agent
Agent
offsets
offsets
zero one. Yeah. So there should be there
zero one. Yeah. So there should be there
should be three agents in total now
should be three agents in total now
between the three map between the two
between the three map between the two
maps. But the
maps. But the
offset Yes. Yeah. Yeah, cuz the when you
offset Yes. Yeah. Yeah, cuz the when you
So you have agent zero and for map one,
So you have agent zero and for map one,
you start on now agent one on map two.
you start on now agent one on map two.
You have two agents there. So your your
You have two agents there. So your your
third map should start at three. It It
third map should start at three. It It
just took a
second. Took a second.
num m should just be
num m should just be
like divide
like divide
roughly by three. We'll just do like for
roughly by three. We'll just do like for
convenience do like
convenience do like
uh 200 m or
something 200 times.
something 200 times.
Does the num m's matter at all?
Well, it would be a massive batch size
Well, it would be a massive batch size
otherwise, I guess. Would
it? I don't
know. It's like actually got to be 200
know. It's like actually got to be 200
M's have 300 agents.
M's have 300 agents.
Technically
200 m. Oh, what would it be? 600 agents.
200 m. Oh, what would it be? 600 agents.
The 400 m has 600
The 400 m has 600
agents. I
think that's too
big. 200 mini batch size now goes to B.
Then 600
times is it? What's 300*
times is it? What's 300*
91? I
think.
Oh,
Oh,
600. I don't freaking know,
man. I'm just going to
try. Oh, it should be. That is It's 300
try. Oh, it should be. That is It's 300
agents. God damn it. 300*
91. Okay. So from here it should be
300. Didn't need to change it all. It's
300. Didn't need to change it all. It's
very confusing having to do this. I like
very confusing having to do this. I like
it gets way easier when stuff is
it gets way easier when stuff is
divisible by two. I might be able to fix
divisible by two. I might be able to fix
this with CUDA kernel shenanigans, but I
this with CUDA kernel shenanigans, but I
don't
know. Like everything has to be cleanly
know. Like everything has to be cleanly
divisible. So it should be so 200 m has
divisible. So it should be so 200 m has
300 agents. So
300 agents. So
300* 16
300* 16
* 256 times
* 256 times
91. Just want
430 batch
size.
Okay. So this should now be two maps
with a decent amount of parallelization.
with a decent amount of parallelization.
Ton of parallelization,
Ton of parallelization,
right? Each
right? Each
map gets 100 copies effectively.
map gets 100 copies effectively.
Yeah. Times 16
workers, 1,600 copies per map.
Yeah, because each worker gets that 100.
Yeah, because each worker gets that 100.
Yeah. And look at this. It sucks.
It's as if it's only learned the first
It's as if it's only learned the first
map. Really?
Yeah. Do we try training on just the
Yeah. Do we try training on just the
second map?
second map?
We can.
We can.
That would be sensible, right?
Just make sure it's not that
map. You want to render that map real
map. You want to render that map real
quick?
Sure.
So, it's this map that we know,
right? You got through the wall one time
there. All right. So now let's see if we
there. All right. So now let's see if we
can get
um equals
1, right? Don't the offsets get screwy
1, right? Don't the offsets get screwy
here if you set it just to one or
here if you set it just to one or
um Did
um Did
they? Well, we'll see if it doesn't
they? Well, we'll see if it doesn't
train. The suspicion is that they should
train. The suspicion is that they should
maybe train or at least they should get
maybe train or at least they should get
50%.
depending on what is actually breaking
it. And then the batch size here has to
be it's like 400 * 6 91
One. Okay. So, we are training only on
One. Okay. So, we are training only on
map two.
Well, isn't that something?
It looks looks like it's going.
Let's just uh set this to 20 mil steps.
Let's just uh set this to 20 mil steps.
Set that to like Yes. Really small and
Set that to like Yes. Really small and
then finish it out.
then finish it out.
Yeah, we can double check if we're not
Yeah, we can double check if we're not
crazy.
crazy.
So, I was like wondering if it was going
So, I was like wondering if it was going
to be the agents within one end of the
to be the agents within one end of the
offsets are
offsets are
wrong, but it doesn't look like
it. And this one's more complicated
it. And this one's more complicated
because it has multiple cars, too, and
because it has multiple cars, too, and
not just one. Mhm.
So the suspicion here is stuff is
So the suspicion here is stuff is
getting screwed up across like end
getting screwed up across like end
bounce, right?
Yeah. Something something is overlapping
Yeah. Something something is overlapping
into like the other ends some way
into like the other ends some way
somehow.
It is
It is
like it is so nice. Like the reason I
like it is so nice. Like the reason I
was wanting to check this stuff in the
was wanting to check this stuff in the
first place is because of how confident
first place is because of how confident
I am in like our hyper prams and our
I am in like our hyper prams and our
sweeps and our trainer in generally,
sweeps and our trainer in generally,
right? Like other if I had done this a
right? Like other if I had done this a
year ago, I would have just like kept
year ago, I would have just like kept
working on the experiments and assuming
working on the experiments and assuming
something's just wrong with the RL.
All right, so now this
one. Hey Cash, how's it going?
That looks like a driving sim,
right? That looks like a driving sim.
right? That looks like a driving sim.
Occasionally they crash into each other
Occasionally they crash into each other
or does something weird happens, but
or does something weird happens, but
like overall I mean it was at 93%. It
like overall I mean it was at 93%. It
wasn't 100. Yeah. So that's just like a
wasn't 100. Yeah. So that's just like a
quick training run. I mean they figured
quick training run. I mean they figured
it out. I mean the other guy is doing
it out. I mean the other guy is doing
effectively two turns and is getting
effectively two turns and is getting
there and the other one just has to like
there and the other one just has to like
dodge the other guy. A cash. We are
dodge the other guy. A cash. We are
currently debugging training in this
currently debugging training in this
simulator. It's only training on any
simulator. It's only training on any
single map. It's not letting us train
single map. It's not letting us train
correctly on multiple maps. We're trying
correctly on multiple maps. We're trying
to get this working on like tons and
to get this working on like tons and
tons of different maps. This is all
tons of different maps. This is all
Whimo data. So, these are like real
Whimo data. So, these are like real
world driving
world driving
settings with lowfi
rendering. Let me make sure I didn't
rendering. Let me make sure I didn't
screw something. Well, this wouldn't
screw something. Well, this wouldn't
have just been screwed with the new
have just been screwed with the new
bindings because we had this problem
bindings because we had this problem
before
before
on I think it's on Oh, I've gotten to
on I think it's on Oh, I've gotten to
like 90% before on multiple M.
Now, mind you, I was still crashing into
Now, mind you, I was still crashing into
things,
things,
but it found the goal. I wonder if that
but it found the goal. I wonder if that
90 is just like
90 is just like
I don't
I don't
know. Are you working with GNN's? Nope.
know. Are you working with GNN's? Nope.
This is just um
This is just um
a simple like max pulled entity encoder
a simple like max pulled entity encoder
into an
LSTM. Got this cur and this
next. Just make sure that this makes
next. Just make sure that this makes
sense first.
Wait. Yeah. So, this is
Wait. Yeah. So, this is
fine. We checked the agent off before
fine. We checked the agent off before
with the two maps and it looked fine.
Does it have to do with how
Does it have to do with how
multipprocessing works? Like if you
multipprocessing works? Like if you
tried doing serial, would it work?
tried doing serial, would it work?
I'd be very surprised. I could try it.
I'd be very surprised. I could try it.
Can we try? What was it? Map 63, I
Can we try? What was it? Map 63, I
believe, is a big one.
believe, is a big one.
Uh, I think that's one of the ones that
Uh, I think that's one of the ones that
has a bunch of things. Double
check. Yeah, map 63 is a fairly large
check. Yeah, map 63 is a fairly large
one.
63 has a decent
So these are seven eight agents each it
So these are seven eight agents each it
looks like. Is that
correct? Eight agent
map. Yeah, I got eight on my local
map. Yeah, I got eight on my local
render.
times
8192 Match
Nice.
Okay. So now we are running the bigger
Okay. So now we are running the bigger
map.
This one is stuck at
18. That is suspicious. Right.
This one is stuck at exactly 1/8.
What happens if you add a collision
What happens if you add a collision
penalty?
That's interesting.
One car is deciding to move. All other
One car is deciding to move. All other
cars
cars
are You're not deciding. Oh, wait. It's
are You're not deciding. Oh, wait. It's
pumping. Yeah, it's over.
and now it's stuck with a quarter two
and now it's stuck with a quarter two
cars
which is like you wonder if it's like
which is like you wonder if it's like
two of the goals can be solved with the
two of the goals can be solved with the
same doing the same thing or something.
same doing the same thing or something.
Do you want to do the off-road penalty
Do you want to do the off-road penalty
now too?
I don't think this should help, but
like indulge me. It's a 20 30 second
experiment. More puffer
experiment. More puffer
sweeps. we get
sweeps. we get
to the magic 0.58ish.
to the magic 0.58ish.
This is like the max that we've seen.
This is like the max that we've seen.
Yeah. Well,
we set soda on this other
end. Oh, but we're doing pretty well.
H
H
zero. All right. Didn't work. Yeah.
zero. All right. Didn't work. Yeah.
Zero. All right. That was a fail.
render it.
I would bet they all sit in place and do
I would bet they all sit in place and do
nothing.
Well, the I wanted to render the one
Well, the I wanted to render the one
that was like 25%.
Okay. Which one gets the goal?
Okay. Which one gets the goal?
Uh, it looks like the yellow car gets it
Uh, it looks like the yellow car gets it
sometimes on the
sometimes on the
bottom and then
bottom and then
uh what other car? There's one other car
uh what other car? There's one other car
that's winning somehow.
Is it like a car that can go in a
Is it like a car that can go in a
straight line or something?
They're kind of all doing the all the
They're kind of all doing the all the
cars are doing the same thing. They're
cars are doing the same thing. They're
like eventually curving. They're
like eventually curving. They're
eventually just turning left a little
bit. I'm not seeing the second car
bit. I'm not seeing the second car
that's winning.
that's winning.
Are you? No.
Oh, wait.
Oh, wait.
It's occasional. Um, but it was a solid
It's occasional. Um, but it was a solid
25%.
25%.
Okay. Yeah, that is odd then
Okay. Yeah, that is odd then
cuz there's a blue car above the yellow
cuz there's a blue car above the yellow
car that's like random. That's every
car that's like random. That's every
once in a while getting it.
The green car for sure isn't getting
The green car for sure isn't getting
anywhere on the top. The yellow car on
anywhere on the top. The yellow car on
the top is just ramming into walls.
If you think about it, this is actually
If you think about it, this is actually
going to be very easy to make like a
going to be very easy to make like a
really cool sim out of without if like
really cool sim out of without if like
we didn't we don't even have to add any
we didn't we don't even have to add any
code to this, man. If we just like set
code to this, man. If we just like set
the goal points
the goal points
randomly, like if we just randomize like
randomly, like if we just randomize like
your goal is now this one and then we
your goal is now this one and then we
just pick the next goal or whatever. We
just pick the next goal or whatever. We
could totally train an agent to just
could totally train an agent to just
drive from one to the next to and it
drive from one to the next to and it
would be pretty cool to just watch them
would be pretty cool to just watch them
go around, right? Yeah. No, you you
go around, right? Yeah. No, you you
could just as long as you dropped
could just as long as you dropped
coordinates within the the grid and not
coordinates within the the grid and not
on top of a road edge.
Yeah, I mean you have to do a little bit
Yeah, I mean you have to do a little bit
of weird on the goal planning would be a
of weird on the goal planning would be a
little bit of a weird
little bit of a weird
function. You you'd have to safely place
function. You you'd have to safely place
something such that after its current
something such that after its current
goal, it's in a position where it cannot
goal, it's in a position where it cannot
immediately like run into a wall.
Well, it should be able to decelerate to
Well, it should be able to decelerate to
the goal if it has to.
Okay. Yeah, that's that's that'll be an
Okay. Yeah, that's that's that'll be an
interesting learning behavior. Well,
interesting learning behavior. Well,
it'll be once we get the learning
it'll be once we get the learning
working, I think you're going to see
working, I think you're going to see
this stuff just like massively improve.
this stuff just like massively improve.
Sure.
So, this is how I
So, this is how I
pass these tensors.
This is how I pass you the
buffer. Wait, does this support multi-
buffer. Wait, does this support multi-
aent?
aent?
It has to because I use it for neural
It has to because I use it for neural
MMO, right?
Ourware is also multi- aent
but this is veinet. We don't use veinet,
but this is veinet. We don't use veinet,
right? We don't use
right? We don't use
veinet. But no, this veinet doesn't have
veinet. But no, this veinet doesn't have
support for
it. reckoning it is single agent at the
moment. Okay, so we just set
moment. Okay, so we just set
observations. This is pi array data of
observations. This is pi array data of
observations.
Should we try to like go look at the
Should we try to like go look at the
observations
observations
of the eight agents, I guess?
of the eight agents, I guess?
Yeah.
Yeah. So these are identical, right?
Yeah. So these are identical, right?
They should
be. This looks like we've gotten eight
be. This looks like we've gotten eight
different observations which then repeat
different observations which then repeat
for the first
step. So at least on the basis of
step. So at least on the basis of
uh different
uh different
M giving like like consistent blocks of
M giving like like consistent blocks of
OBS. This is good.
at
zero. See, the thing is the magnitudes
zero. See, the thing is the magnitudes
of these look good as
of these look good as
well, which is
weird. Like the the strides of them. It
weird. Like the the strides of them. It
doesn't look like the data is just
doesn't look like the data is just
messed up.
Max
OBS 7 * max cars minus
OBS 7 * max cars minus
one 7 time road segment
one 7 time road segment
observation Six.
Okay.
Um,
Um,
see I guess the other thing that we
see I guess the other thing that we
could think
could think
about min relative agent position
about min relative agent position
Max rail agent
position.
position.
Oh, hey Spencer.
Um, what up?
Um, what up?
The first chords are the
The first chords are the
goal. The first two chords are the goal.
goal. The first two chords are the goal.
Like the goal heading. Yes, that's
Like the goal heading. Yes, that's
correct. They're almost identical.
No way.
The car doesn't spawn facing the goal,
The car doesn't spawn facing the goal,
right?
right?
Not guaranteed.
Not guaranteed.
There's no way that they're that close.
There's no way that they're that close.
I mean, some some goals are like really
I mean, some some goals are like really
close. Some goals are these are eight
close. Some goals are these are eight
separate agents.
separate agents.
And the heading the relative heading to
And the heading the relative heading to
the goal is like almost identical for
the goal is like almost identical for
all of them.
Let's see.
What do you mean the relative heading?
What do you mean the relative heading?
There's no relative heading in ops.
There's no relative heading in ops.
What's this? Normalize real goal X real
What's this? Normalize real goal X real
goal Y.
That
That
is the the coordinate point.
is the the coordinate point.
That is the act that is the distance
That is the act that is the distance
from the agent to the
from the agent to the
goal which shouldn't be virtually
goal which shouldn't be virtually
identical for all agents, right?
identical for all agents, right?
No, they should be probably fairly
No, they should be probably fairly
different. Yeah. And they're not at all.
Oh, you minus men.
Let me try
Let me try
something. Want to try something real
something. Want to try something real
quick?
Then
sir did I
do bad normalization
do bad normalization
[Laughter]
bad. It actually was the shitty obs
normalization. Got him. All right.
normalization. Got him. All right.
Always the freaking data every damn
Always the freaking data every damn
time. Got him.
I want to say I did. Can I just take
I want to say I did. Can I just take
this function incorrectly
this function incorrectly
from their code? Much to learn, young
from their code? Much to learn, young
Pedawan.
Pedawan.
Yes.
What was my implementation versus? Uh,
What was my implementation versus? Uh,
let me show you. Let me show you first.
let me show you. Let me show you first.
Let me make sure this actually works
Let me make sure this actually works
before I gloat a little bit.
Maxus mid.
I mean, mine is slightly different, but
I mean, mine is slightly different, but
by a constant factor, I don't think it
by a constant factor, I don't think it
should
be. These look like some good cars
be. These look like some good cars
driving. Yeah.
driving. Yeah.
Uh, boom.
Uh, boom.
Sick. Okay. All
right. I want to know. Let's Let's see
right. I want to know. Let's Let's see
if we solve the whole the whole freaking
if we solve the whole the whole freaking
thing.
thing.
All right. If this does, I'm going to be
All right. If this does, I'm going to be
This is going to be so sick. And I'm
This is going to be so sick. And I'm
going to feel real dumb after that. That
going to feel real dumb after that. That
was it. It's all right. You're training.
was it. It's all right. You're training.
Everything else was totally perfect.
Everything else was totally perfect.
Like there's no other issues. It's just
Like there's no other issues. It's just
Well, you're going to have to recheck
Well, you're going to have to recheck
all the normalization now.
But let's see. Where is that function
But let's see. Where is that function
even used? How many times? I think it's
even used? How many times? I think it's
only
used normalized value. I call it quite a
used normalized value. I call it quite a
bit.
bit.
It's also used in the
It's also used in the
uh relative positions of other
uh relative positions of other
cars and relative positions of other
roads. It's not the normalized function
roads. It's not the normalized function
itself.
No. No.
No. No.
I'll show you. Didn't you just change it
I'll show you. Didn't you just change it
to divide by 20? Yes, but it's not cuz
to divide by 20? Yes, but it's not cuz
the normalized function is necessarily
the normalized function is necessarily
bad.
Is the factor too gigantto? Yes, it's
Is the factor too gigantto? Yes, it's
the exact thing I told you.
Uh,
Uh,
wait, but the GPU drive team uses that
wait, but the GPU drive team uses that
factor.
factor.
And you trust what they
And you trust what they
do? This is probably why they had to
do? This is probably why they had to
have shitty layer
everywhere. What was the original uh was
everywhere. What was the original uh was
it 72
it 72
m? Uh yeah, we were doing 72. Yeah. You
m? Uh yeah, we were doing 72. Yeah. You
remember what the original I guess it's
remember what the original I guess it's
in the commit somewhere. The batch size.
in the commit somewhere. The batch size.
What are you trying to figure out the
What are you trying to figure out the
batch size? Oh, I have those. The batch
batch size? Oh, I have those. The batch
size. Uh 738192.
size. Uh 738192.
Oh, okay. So that's just that.
Oh, okay. So that's just that.
Cool.
This because the 745 one I think was
This because the 745 one I think was
just for the one map.
Did you also change the normalize on the
Did you also change the normalize on the
other ones that use that same function
other ones that use that same function
to divide by 20 or something? No.
GG Neptune.
thing is
dipping. There we go.
Just see if this does anything
quickly. All
quickly. All
right.
So, data normalization matters a lot,
right? So, what were you doing here?
right? So, what were you doing here?
Okay, you're taking 20
Okay, you're taking 20
you are subtracting a
you are subtracting a
th00and or negative a th00and whatever
th00and or negative a th00and whatever
and then you're dividing by a
th00and so basically you're squashing
th00and so basically you're squashing
your 20 by a factor of a thousand.
your 20 by a factor of a thousand.
So all the differences in in your goals
So all the differences in in your goals
you know how the goals were slightly
you know how the goals were slightly
different that was the entire range over
different that was the entire range over
which the goals could vary.
So, 45 mil and I've already surpassed
So, 45 mil and I've already surpassed
our best run.
Well, let's see if it gets stuck. Does
Well, let's see if it gets stuck. Does
that It
won't. It's not going to necessarily
won't. It's not going to necessarily
full solve because I only fixed two
full solve because I only fixed two
variables, right? It's going to be
variables, right? It's going to be
better. There's still there's still it's
better. There's still there's still it's
that normalized value function is used
that normalized value function is used
two or three more times in the below
ops. So the range I was giving it was
ops. So the range I was giving it was
just way too small. Yep. You compressed
just way too small. Yep. You compressed
all your data into a tiny little range.
So
So
basically the neural net would have had
basically the neural net would have had
to have learned how to subtract by 0.5
to have learned how to subtract by 0.5
and then multiply by a thousand.
and then multiply by a thousand.
Yeah. To get back the original data.
Yeah. To get back the original data.
And the original data was too big as
And the original data was too big as
well. So it was still multiply by 100.
well. So it was still multiply by 100.
but
but
still makes it
hard. So eventually the neuron net just
hard. So eventually the neuron net just
gave up and decided I'm going to drive
gave up and decided I'm going to drive
in a straight line cuz a lot of the
in a straight line cuz a lot of the
goals are in a straight line.
It's just
so well ripping in peace to assuming
so well ripping in peace to assuming
other people are correct.
But this is the thing that drives me
But this is the thing that drives me
crazy, right? The researchers will do
crazy, right? The researchers will do
this and then they'll throw layer norm
this and then they'll throw layer norm
on stuff to band-aid patch everything
on stuff to band-aid patch everything
which is not a patch. they did I did is
which is not a patch. they did I did is
they multiplied their final value by two
they multiplied their final value by two
and then subtracted it by
and then subtracted it by
one. So I mean it would go from squashed
one. So I mean it would go from squashed
by a thousand to squashed by 500.
But then theirs doesn't even work
But then theirs doesn't even work
without layerm.
without layerm.
Yeah, they have layerorm and tanh.
Yeah, they have layerorm and tanh.
Why don't we fix their observations?
Why don't we fix their observations?
We we could drop OB. So, I don't know if
We we could drop OB. So, I don't know if
you were able to see on some of the
you were able to see on some of the
observations, but a huge percentage of
observations, but a huge percentage of
them are just zeros because they're
them are just zeros because they're
filling in to what assumed the
filling in to what assumed the
max obs are. Well, given that their data
max obs are. Well, given that their data
there, the cool thing about this is
there, the cool thing about this is
given that their data was so bad, like
given that their data was so bad, like
we can probably just get rid of most of
we can probably just get rid of most of
the observations and still train a
the observations and still train a
better policy.
Yeah, it's still going. And this is just
Yeah, it's still going. And this is just
the first thing I ran.
the first thing I ran.
Like I mean there two variables fixed.
Like I mean there two variables fixed.
If you go and fix the other variable by
If you go and fix the other variable by
just dropping like a divide by 20 on the
just dropping like a divide by 20 on the
other ones, it probably makes a
other ones, it probably makes a
significant difference. Let's see. Max
significant difference. Let's see. Max
speed.
speed.
Um where it was used
was just
the normalized value. I'm just guessing
the normalized value. I'm just guessing
at like what reasonable speeds are.
at like what reasonable speeds are.
The vehicles are not 15 big either.
The vehicles are not 15 big either.
Whatever.
Whatever.
There is one that's like 10 big. I will
There is one that's like 10 big. I will
say that for sure exists because there's
say that for sure exists because there's
like a I guess what it's supposed to be
like a I guess what it's supposed to be
is like a long truck.
is like a long truck.
that that is not that unreasonable on on
that that is not that unreasonable on on
the vehicle width and
the vehicle width and
lengths, but the normalized value on
lengths, but the normalized value on
those need to be
dunked. This one's fun.
dunked. This one's fun.
the normalized
heading. All it is is subtracting or
heading. All it is is subtracting or
adding 2
pi. That's
fine. Now, these reverses are going to
fine. Now, these reverses are going to
be messed up, obviously.
Yeah. Um, that's going to screw up
Yeah. Um, that's going to screw up
rendering. Yeah, you you'll be able to
rendering. Yeah, you you'll be able to
fix things. I My goal is to make it
fix things. I My goal is to make it
work. Oh, here's a quick fix. Reverse
work. Oh, here's a quick fix. Reverse
normalize value. Just say value times
normalize value. Just say value times
20. Oh,
20. Oh,
yeah. Hold on.
Will we get squashing it really that
Will we get squashing it really that
bad? Like
there's big bucks in going into all the
there's big bucks in going into all the
ML pipelines of companies doing
ML pipelines of companies doing
important stuff and fixing their shitty
normalization. I guess so.
normalization. I guess so.
I mean, you just picked a number that
I mean, you just picked a number that
seemed moderately reasonable and you're
seemed moderately reasonable and you're
I mean, I don't even know those values
I mean, I don't even know those values
are going to be between zero and one at
are going to be between zero and one at
this point. No,
but to be fair, this was the first
but to be fair, this was the first
change I tried to the observation space.
change I tried to the observation space.
Yeah.
Yeah.
I mean, so all I did is I picked a
I mean, so all I did is I picked a
number that's roughly kind of on the
number that's roughly kind of on the
scale of what it is. It's there's not a
scale of what it is. It's there's not a
magical thing where neural nets fail
magical thing where neural nets fail
outside of the range of 0 to one. It's
outside of the range of 0 to one. It's
like they degrade. Same thing as they
like they degrade. Same thing as they
degrade when your data is
squashed. I would hope that after
squashed. I would hope that after
getting rid of the other normalized
getting rid of the other normalized
values, it should be able to do do
values, it should be able to do do
better on collision and off-road. Oh,
better on collision and off-road. Oh,
wait. We don't have a penalty. No, we
wait. We don't have a penalty. No, we
don't.
How does this graph compared to the
How does this graph compared to the
other graph? So far, it's worse.
We'll see.
There we go though. It's getting
better. Yeah, now it's better.
better. Yeah, now it's better.
Bada boom.
Okay, we're at uh we are at 80%
here. I will be right back.
So this is
So this is
um just super jank initial norm checking
um just super jank initial norm checking
with whatever the hell defaults we have
with whatever the hell defaults we have
in
in
here. Right.
here. Right.
Yeah. when we've kind of been tuning
Yeah. when we've kind of been tuning
completely
wrong. So,
um we're going to check this
um we're going to check this
policy and then
policy and then
add penalties.
add penalties.
I don't even know if you need the
I don't even know if you need the
penalties. We can try
penalties. We can try
them. They might help. Well, it looks
surprising every time.
surprising every time.
I don't know. Maybe that's just what
I don't know. Maybe that's just what
they like to do.
There is still the notion of that thing
There is still the notion of that thing
we tal we were decided to ignore at the
we tal we were decided to ignore at the
moment of a car responding in the path
moment of a car responding in the path
of another car.
of another car.
Very possible.
But that's quite the distinction
But that's quite the distinction
here from 58 was the best. Mhm. That
here from 58 was the best. Mhm. That
does mean that it's possible. I think 58
does mean that it's possible. I think 58
was just basically driving in a straight
was just basically driving in a straight
line.
All right. So, it looks like it's capped
All right. So, it looks like it's capped
out
here. The thing literally couldn't see
here. The thing literally couldn't see
its goals.
Why is
See, but I was able to get like
See, but I was able to get like
99.99 on before we did any of the
99.99 on before we did any of the
changes with zero penalty.
Well, I mean, it's not that it can't
Well, I mean, it's not that it can't
learn it. It's just very
difficult. There's map zero.
to some other maps.
Yeah. So they run into each other
Yeah. So they run into each other
sometimes, but like
Some of that is for sure spawning on top
Some of that is for sure spawning on top
of each other issue. Oh yeah,
you can see the car in the blue that's
you can see the car in the blue that's
like
trying. But like this should now be a
trying. But like this should now be a
workable problem. Yes. Mhm. Without a
workable problem. Yes. Mhm. Without a
doubt. Like there's that taking a turn.
This is a few. This
This is a few. This
one looks like that white car is having
one looks like that white car is having
a hard time figuring out life. It has
a hard time figuring out life. It has
basic low fidelity
basic low fidelity
physics, but like yes, there's
acceleration. They can't stop on a
dime. There's
momentum. Oh, look at this.
momentum. Oh, look at this.
Okay, they have to not be able to like
Okay, they have to not be able to like
jitter so damn much,
jitter so damn much,
but look at that.
That one one is really liking the
That one one is really liking the
jitter. I think the third person mode is
jitter. I think the third person mode is
cool. Oh yeah,
cool. Oh yeah,
very cool. It'll be really cool as well
very cool. It'll be really cool as well
when it's like smooth. You can just
when it's like smooth. You can just
watch him drive around. Imagine you can
watch him drive around. Imagine you can
literally just watch this thing drive
literally just watch this thing drive
around a city forever.
around a city forever.
You could probably just like have a
You could probably just like have a
stream of this on at all time. People
stream of this on at all time. People
would probably tune in and watch it.
would probably tune in and watch it.
That' be cool as like ASMR or something.
That' be cool as like ASMR or something.
Driving sim. Just play some like lowfi
Driving sim. Just play some like lowfi
music and let people watch driving sims.
Lowi cars to study too.
Yeah. Let's give it a little bit of a
Yeah. Let's give it a little bit of a
penalty and then we'll do and then I'll
penalty and then we'll do and then I'll
just give this to you to Well, actually,
just give this to you to Well, actually,
I think we'll just I'll let you get the
I think we'll just I'll let you get the
last bits of it. So here
so yeah for you um I would go through
so yeah for you um I would go through
like check all of the normalization to
like check all of the normalization to
make sure that it's like not overly
make sure that it's like not overly
squashing values
squashing values
and then um throw it into a sweep
and then um throw it into a sweep
including the end coefficients and see
including the end coefficients and see
how it does.
how it does.
Okay. And when you were when you figured
Okay. And when you were when you figured
out that it was overly crushed, I mean
out that it was overly crushed, I mean
it's not like the values were point like
it's not like the values were point like
05. They were still within the range of
05. They were still within the range of
zero to one. So, well, I noticed I
zero to one. So, well, I noticed I
noticed that there are goals, right?
noticed that there are goals, right?
That these should be the goals, but it's
That these should be the goals, but it's
basically was giving all the agents
basically was giving all the agents
roughly the same goal,
right? Mhm. So, that was like the that
right? Mhm. So, that was like the that
doesn't look right because I was looking
doesn't look right because I was looking
to see if it was like some memory bug
to see if it was like some memory bug
where you were overwriting stuff, but
where you were overwriting stuff, but
the values were nicely aligned in
the values were nicely aligned in
memory, right? Where like the magnitudes
memory, right? Where like the magnitudes
of each column were similar. Yeah.
of each column were similar. Yeah.
Um, so then I started looking at the
Um, so then I started looking at the
values themselves and said, "Wait a
values themselves and said, "Wait a
minute, this is supposed to represent
minute, this is supposed to represent
the goal." Because I went to look for
the goal." Because I went to look for
the goal because that's the most
the goal because that's the most
important observation
and then from there. Yeah. So it's like
and then from there. Yeah. So it's like
it's just it was just basic data
it's just it was just basic data
checking really.
Now mind you, this is like probably one
Now mind you, this is like probably one
of the most common issues whether you're
of the most common issues whether you're
brand new or like a top lab. It's always
brand new or like a top lab. It's always
your freaking data. So,
your freaking data. So,
fair enough. I mean, hey, at least the
fair enough. I mean, hey, at least the
memory issues were correct. I I'm at
memory issues were correct. I I'm at
least happy that that turned out all
least happy that that turned out all
right. Yep. So, this should now work for
right. Yep. So, this should now work for
you. You have GPU drive. You just push
you. You have GPU drive. You just push
Where did you push that to? Release.
Where did you push that to? Release.
Yep. Okay. Um I'm going to go grab a
Yep. Okay. Um I'm going to go grab a
bite. I'll uh when I get back, I'll
bite. I'll uh when I get back, I'll
check out any other things that need to
check out any other things that need to
be modified on
be modified on
normalization. Run a sweep on
normalization. Run a sweep on
everything. Um, is the latest sweep
everything. Um, is the latest sweep
stuff all in release as well? Yep. Okay.
stuff all in release as well? Yep. Okay.
It's like the same as before. You just
It's like the same as before. You just
you run it. I will run. It's already set
you run it. I will run. It's already set
up for you as well because I have the
up for you as well because I have the
other sweep going that I can now replace
other sweep going that I can now replace
with something else. Okay. Sure. Sure.
with something else. Okay. Sure. Sure.
In terms of like this, well, did you
In terms of like this, well, did you
didn't edit the you didn't push the
didn't edit the you didn't push the
edited default
edited default
uh any file, right? Did I edit the
uh any file, right? Did I edit the
default anyie?
default anyie?
Is that where you did your sweep stuff?
Is that where you did your sweep stuff?
Oh.
Oh.
Um, then there might be a few small
Um, then there might be a few small
things to tweak here. Hang
on. You can also just ship that in like
on. You can also just ship that in like
a general chat or something if you want.
a general chat or something if you want.
If you don't want to modify the default
If you don't want to modify the default
any file as the release
branch. Let me see what I changed.
I added you like the total time
I added you like the total time
steps just add this stuff back
in. So today I think I think uh today or
in. So today I think I think uh today or
like whenever that sweep runs finishes
like whenever that sweep runs finishes
we will have something decent.
we will have something decent.
Um, maybe not to show them quite yet,
Um, maybe not to show them quite yet,
but it we're getting there very very
but it we're getting there very very
rapidly.
rapidly.
Probably by end of this weekend. Yeah,
Probably by end of this weekend. Yeah,
that would be great.
And then we can work on uh speed Tokyo
And then we can work on uh speed Tokyo
Puff. N we do Tokyo Puff later, but it's
Puff. N we do Tokyo Puff later, but it's
fun. No, get get it up to a million.
fun. No, get get it up to a million.
Yeah,
Yeah,
which I still don't know what happens
which I still don't know what happens
like besides cutting obsid
There you go. Okay, go get uh Yeah, go
There you go. Okay, go get uh Yeah, go
grab a bite and uh you can do that and I
grab a bite and uh you can do that and I
will be working on fixing other things
will be working on fixing other things
around on release. All right, sounds
around on release. All right, sounds
good. Thank you, man. Thanks, Spencer.
good. Thank you, man. Thanks, Spencer.
See you.
Well, that is a
Well, that is a
um
um
longstanding
longstanding
problem discovered and
problem discovered and
solved. I'm quite happy with
solved. I'm quite happy with
that. I'm going to take a couple
that. I'm going to take a couple
minutes. I'm going to use the restroom
minutes. I'm going to use the restroom
real quick, walk around a little bit,
real quick, walk around a little bit,
and then I'm going to come back and then
and then I'm going to come back and then
I have
I have
another four and a half hours, I
another four and a half hours, I
believe, of uh hopefully just doing all
believe, of uh hopefully just doing all
the other release stuff. But that is one
the other release stuff. But that is one
of the core M's that was having problems
of the core M's that was having problems
now that should no longer be having
now that should no longer be having
problems. Um, we'll
problems. Um, we'll
try impulse wars and stuff maybe after
try impulse wars and stuff maybe after
this at some point soon, but I think
this at some point soon, but I think
we're just going to like jam some uh
we're just going to like jam some uh
some pre-release work for a bit. Be
some pre-release work for a bit. Be
right back.
We just got some very strong magnets
We just got some very strong magnets
delivered for hanging the uh big flag
delivered for hanging the uh big flag
that goes in the
that goes in the
background. It'll be fun.
background. It'll be fun.
Okay.
Okay.
So, I think what I want to do right
So, I think what I want to do right
now, I want to get this working
now, I want to get this working
on there's one other
environment and then
environment and then
um and then we'll go
um and then we'll go
to general pre-release work after that.
to general pre-release work after that.
And then that should basically
And then that should basically
be everyone
be everyone
except except Captain's environment
except except Captain's environment
taken care of for the time
being. Yeah.
experiment
CV. Okay. So, we'll see if we can get
CV. Okay. So, we'll see if we can get
this to
run. Probably have to edit the
config. Yeah. So this is
now back.
Okay. So I think that this is probably
Okay. So I think that this is probably
that they have like this new
config. I think they called it
config. I think they called it
experiment CV or whatever.
data narrows data
set. Just ask for this
Is there anything in like set
up finance?
Is it
Is it
this?
No. Okay. They'll have to tell me then
No. Okay. They'll have to tell me then
what this
what this
is. We'll uh we'll just go on to general
is. We'll uh we'll just go on to general
release work until they uh they tell me
release work until they uh they tell me
what they've been up
what they've been up
to. because I can't really do anything
to. because I can't really do anything
with this as
is. Oh, actually, hang on. Let me go
is. Oh, actually, hang on. Let me go
tell John one thing.
All right.
I think we just want to go look at
I think we just want to go look at
um well, we'll check the sweep real
um well, we'll check the sweep real
quick and then we'll go through general
quick and then we'll go through general
code looking for more things we can
code looking for more things we can
clean up for release.
All right, we're getting some good
All right, we're getting some good
experiments
here. These are pretty
reasonable. And these are pretty short
reasonable. And these are pretty short
as
well. We'll probably just keep those
well. We'll probably just keep those
going.
So, this file still bothers
me. I'm trying to think why it still
me. I'm trying to think why it still
bothers
me. Like, it's not that long now,
me. Like, it's not that long now,
right? This is the main two screens.
I guess I like I don't like that I have
I guess I like I don't like that I have
this train
this train
wrapper. Sweep function is pretty clean
wrapper. Sweep function is pretty clean
actually. All these little
actually. All these little
helpers. Now I'm looking at it. There's
helpers. Now I'm looking at it. There's
really not that much.
So technically I can
So technically I can
put I could put down sample
put I could put down sample
linear into the sweeps.
linear into the sweeps.
Maybe a little
awkward. I guess the main thing is
awkward. I guess the main thing is
having this extra train function, right?
having this extra train function, right?
And the reason that we need this is that
And the reason that we need this is that
it's kind of because of
sweeps. So
I mean what I would like is I would like
I mean what I would like is I would like
this function to be very
compressed. I guess I Yeah, I'd like
compressed. I guess I Yeah, I'd like
this function to be very
this function to be very
compressed and then
compressed and then
the DDP stuff would just be in DDP
land, but I don't like there's enough
land, but I don't like there's enough
code in here that I wouldn't want to
code in here that I wouldn't want to
just duplicate
just duplicate
in both sweeps and in
train and then like I've gone through
train and then like I've gone through
this pretty fine grain.
this pretty fine grain.
Like other than this small little thing
Like other than this small little thing
here, this is pretty well optimized as
is. I mean, some of this stuff can get
is. I mean, some of this stuff can get
cleaned up down here for
sure, just like little by
sure, just like little by
little. And I would like to do that, but
little. And I would like to do that, but
then the the thing is the structural
then the the thing is the structural
Yeah, the structural
problem. I guess it's just really about
problem. I guess it's just really about
making this little section as compact as
making this little section as compact as
possible,
right? I mean, you do not
right? I mean, you do not
need. So, hang on. This time step,
need. So, hang on. This time step,
scores,
scores,
costs, all this
append. We don't need any of this for
append. We don't need any of this for
normal training, right? We use this for
normal training, right? We use this for
sweeps only.
sweeps only.
So, well, if I were to like make like a
So, well, if I were to like make like a
train min, let's say like I just take
train min, let's say like I just take
out all of the features that are not
out all of the features that are not
just for
training,
training,
right? Let me see how small this
right? Let me see how small this
function
function
gets as a
experiment. Take this out.
like something like this,
like something like this,
right? This is all the code that's
right? This is all the code that's
actually required for
training. So, realistically, how short
training. So, realistically, how short
can I make this?
I don't really like the idea of hiding
I don't really like the idea of hiding
this logic inside of the training class,
this logic inside of the training class,
right? It's already too high level as
right? It's already too high level as
is.
This doesn't need to be
there. You have this target metric
there. You have this target metric
thing.
isn't used for anything.
I do like being able to have
I do like being able to have
um like this print out.
I could have it print after both
I could have it print after both
evaluate and
train the dashboard.
man. Might not be
man. Might not be
bad. That might just work.
So let's assume I do that. Then that
So let's assume I do that. Then that
gets rid of needing this target
key. This
stat and then this print.
and probably clean up this little
and probably clean up this little
garbage
here. Oh, you still need this target
here. Oh, you still need this target
metric point thing. Hang on.
Does it even make sense to have like a
Does it even make sense to have like a
minimum number of eval points?
I mean technically All
right. Any valges or
something?
Lost. So, if I could get this little
Lost. So, if I could get this little
piece um
piece um
reduced, I could get these out. Then
reduced, I could get these out. Then
it's make end make
it's make end make
policy
trainer
reset. Do you need to even Hang on. Do
reset. Do you need to even Hang on. Do
you even need to async
reset? You don't even need to async
reset? You don't even need to async
reset it
reset it
here. Oops.
This is completely
redundant. I reset
here. I think this is what I was trying
here. I think this is what I was trying
to do is reset this here.
just that
um like the MIS
Well, this is
So, let's just say that I figure out a
So, let's just say that I figure out a
way to get rid of
way to get rid of
this and I figure out a way to oneline
this and I figure out a way to oneline
this nicely.
I can probably get this function under
I can probably get this function under
lines. Does that let me do
anything or does that tell me anything?
Thank
you. I like what I'm trying to do with
you. I like what I'm trying to do with
this here,
this here,
right? I don't like the fact that I
right? I don't like the fact that I
have an already higher level than I
have an already higher level than I
would like. train interface that has
would like. train interface that has
these just eval train eval train and I
these just eval train eval train and I
don't like that we have a main that then
don't like that we have a main that then
calls a wrapper function that then makes
calls a wrapper function that then makes
and calls that is too
and calls that is too
much but the thing is there's just
much but the thing is there's just
slightly too much
slightly too much
code here for me to want to
code here for me to want to
like just duplicated in the main
like just duplicated in the main
transcript
Okay. You know what? But if we did that,
Okay. You know what? But if we did that,
right, let's say that we put something
right, let's say that we put something
like this and we clean it up a bit and
like this and we clean it up a bit and
this goes in the main train script and
this goes in the main train script and
then we need something similar for
then we need something similar for
sweeps, right?
Then that goes like this code from this
Then that goes like this code from this
min goes into this sweep
function. Does that let us do anything?
I hope that lets us do anything
I hope that lets us do anything
meaningful. The idea would be that we
meaningful. The idea would be that we
might be able to like
might be able to like
simplify substantially,
right? I mean, I guess isn't this
right? I mean, I guess isn't this
metric?
Yeah. So we have this target metric
Yeah. So we have this target metric
here. So like this target metric, we
here. So like this target metric, we
don't have to pass it to train at all
don't have to pass it to train at all
anymore,
right? And probably simplify the configs
right? And probably simplify the configs
a little
bit. And then then what does this look
bit. And then then what does this look
like as a result?
I guess this looks like you
I guess this looks like you
having 15 lines of code here in
having 15 lines of code here in
training.
could also try to make all these one
could also try to make all these one
lines and then have the functions be
above. But we're splitting hairs at that
above. But we're splitting hairs at that
point, I think.
And then basically the only bad part of
And then basically the only bad part of
the code would be if we just put it here
the code would be if we just put it here
all like the code here. The only bad
all like the code here. The only bad
part would be that there's this
part would be that there's this
40line config loading preamble, right?
cuz like if that weren't there, I would
cuz like if that weren't there, I would
totally just do it in line,
totally just do it in line,
right? And that shouldn't change my
right? And that shouldn't change my
decision- making. So, I should probably
decision- making. So, I should probably
just have it
here. But then by that logic, you'd also
here. But then by that logic, you'd also
put the sweep the sweep code here.
So like in my mind the best thing is
So like in my mind the best thing is
this config
this config
stuff doesn't exist and it's all in
stuff doesn't exist and it's all in
line. No, actually it's still not good
line. No, actually it's still not good
because the sweep function is going to
because the sweep function is going to
be kind of big, right?
be kind of big, right?
I don't really like
having I'm going to sit here and stress
having I'm going to sit here and stress
over this until I get it
right cuz how I do this is going to
right cuz how I do this is going to
determine how many users are confused
determine how many users are confused
when they open this file.
I can't decide how I want to do
this. I mean, the sweep function is
this. I mean, the sweep function is
definitely too long to go here, right?
the trans function could go
here. There's all this like annoying
here. There's all this like annoying
like stuff like if it's a baseline or
like stuff like if it's a baseline or
this or that though.
Okay, maybe let's think about which of
Okay, maybe let's think about which of
these we
these we
actually need to account
for. So, we've got
Eval
Eval
Sweep. This is
Sweep. This is
easy. This is going to be
easy. This is going to be
relatively
easy. Which of these sounds better to
easy. Which of these sounds better to
me? Having
this main
this main
script. Just have this
script. Just have this
parsing and then
parsing and then
call whichever of these
functions. Not bad.
I could probably actually if I just do
I could probably actually if I just do
it all in line I could even simplify it
it all in line I could even simplify it
more. Right.
I mean, the only thing I can think of
here like sweeps is a pretty independent
here like sweeps is a pretty independent
code path right now,
code path right now,
right? Like sweeps is
right? Like sweeps is
almost entirely its own code path.
But then for like everything
else there's going to be like shared
else there's going to be like shared
envi
policy in
it. I think that's the way to go,
it. I think that's the way to go,
right? Instead of having a bunch of
right? Instead of having a bunch of
different functions, just try to make
different functions, just try to make
like a really good clean script for
this. All
right, let's do
right, let's do
that. Put these on. Got maintenance in
here. Make sure I have this.
Um, we're good.
Yeah, I think we're just going to we're
Yeah, I think we're just going to we're
just going to make an attempt at this.
just going to make an attempt at this.
We're going to do the best we can this
We're going to do the best we can this
way. I'll spend like an hour on it and
way. I'll spend like an hour on it and
then we'll see if I like the direction
then we'll see if I like the direction
it's headed in by then.
it's headed in by then.
Hard to It's hard to say otherwise.
You can probably start with like train
You can probably start with like train
just like assume train or
whatever or
like put sweep up high.
Bugs.
Yeah. So, this is what I was I was
Yeah. So, this is what I was I was
thinking here, right? So, we can
take we can take this stuff and move it
take we can take this stuff and move it
outside of these checks because this is
outside of these checks because this is
going to be shared.
stand.
We'll change the args to this, but it's
We'll change the args to this, but it's
going to look like something like this.
The train will actually almost already
The train will actually almost already
work.
actually literally does already
work. We can rewrite
work. We can rewrite
uh we can definitely rewrite
about model
about model
path. Load model path.
But we can
Yeah, we can totally simplify this,
right? Heck, we might even be able to
right? Heck, we might even be able to
get rid of that function. Wouldn't that
get rid of that function. Wouldn't that
be
cool? Maybe a little ambitious.
We could like literally just end up
We could like literally just end up
being able to call
being able to call
eval like render mode true
though. Interesting to think about.
How funny is it going to be if after all
How funny is it going to be if after all
this time we actually like get back to
this time we actually like get back to
close to the original level of
simplicity? That's not bad. It's just
um rendering the wrong end
um rendering the wrong end
probably does
run. I mean this function doesn't need
run. I mean this function doesn't need
to exist probably, right?
Okay. So, we will have to obviously mess
Okay. So, we will have to obviously mess
with this. But
with this. But
um we are getting somewhere
here. I like putting train above eval
here. I like putting train above eval
now though.
And actually, this is impossible to get
And actually, this is impossible to get
here, right? Because
here, right? Because
uh we don't even need this.
So then this train wrap function needs
So then this train wrap function needs
to get integrated with
sweeps. So basically right
here and it actually gets simplified a
here and it actually gets simplified a
little bit as well, doesn't it?
little bit as well, doesn't it?
Just take this
Just take this
code. Put this here.
We can get rid of
um we can get rid of sweeps for now on
um we can get rid of sweeps for now on
this.
We'll come back to
multi. Come back to multi
GPS. But yeah, it would look something
GPS. But yeah, it would look something
like this.
We'll leave this as a separate function
We'll leave this as a separate function
for now.
The only thing I don't like about is how
The only thing I don't like about is how
annoying sweeps are.
Right. Quite probably. We can clean this
Right. Quite probably. We can clean this
up a bit though.
All
right. I think we just start um line by
right. I think we just start um line by
line like just focus on the small stuff
line like just focus on the small stuff
and go from
and go from
there. What am I doing here? Fran
name space thing will be last. We're not
name space thing will be last. We're not
doing namespace thing right now. I do
doing namespace thing right now. I do
want to change this name space so this
want to change this name space so this
line will get cleaner. That's a very
line will get cleaner. That's a very
small thing to do. It will take quite a
small thing to do. It will take quite a
bit of time to
bit of time to
uh get right.
They're like little bits of things I'm
They're like little bits of things I'm
not quite sure how I want to do yet.
that.
that.
Okay. Main impediments now are a bunch
Okay. Main impediments now are a bunch
of config
stuff, saving, loading things.
LSDM thing is a little bit of a
pain. Not a good way around it at the
pain. Not a good way around it at the
moment, though.
Oh yeah, now this eval thing
Oh yeah, now this eval thing
is is a mess, right?
Does this even exist
anymore? It does.
What if we wanted like separate things,
What if we wanted like separate things,
right? What if we wanted like
How would this code look
different? What would be completely
different? What would be completely
different, right?
different, right?
Yeah, we don't need to worry about this
Yeah, we don't need to worry about this
because like eval itself is actually
because like eval itself is actually
really
really
easy. You would just call like the this
easy. You would just call like the this
little loop up there. Okay,
little loop up there. Okay,
so in that case then we can assume that
so in that case then we can assume that
this
this
Whoops. We can assume that this uh this
Whoops. We can assume that this uh this
eval mode is basically only for wanting
eval mode is basically only for wanting
to
to
watch the policy and potentially save a
watch the policy and potentially save a
video.
Hey,
welcome. So then I guess the only issues
welcome. So then I guess the only issues
with
with
um with this I guess one I don't like
um with this I guess one I don't like
that we have to make the state like this
that we have to make the state like this
but it's not the worst thing ever.
And two, we need a good way to know
And two, we need a good way to know
whether we want to save a
whether we want to save a
gift and
um only collect frames if we do so we
um only collect frames if we do so we
don't run out of memory.
We can add
like save frames.
Yes. Wow.
So, we'll just do um
Yeah, this will be
it. Hero
frames way easier.
Don't need kick
anymore. rid of this.
This is getting better.
This is getting better.
Uh, is there like an FPS
attribute render FPS, but nothing's
attribute render FPS, but nothing's
going to have this, right?
Yeah, this is just per environment.
Yeah, this is just per environment.
There's nothing standard for
this. So like I guess we just assume
You don't know what FPS to assume at
You don't know what FPS to assume at
all,
right? Collision penalty can't
right? Collision penalty can't
be max of
zero. It could still have collisions.
Well, I mean in that case, right,
Well, I mean in that case, right,
like you could
like you could
um we should probably
um we should probably
then instead of having the reward space
then instead of having the reward space
change for that, we should probably have
change for that, we should probably have
a different metric. Spencer
I'm trying to think what we would do.
I'm trying to think what we would do.
Maybe we define like
Maybe we define like
um completes goal at least once and
um completes goal at least once and
doesn't collide as like the metric.
You can definitely mess with it for now
You can definitely mess with it for now
though. Like you can add a bit of a
though. Like you can add a bit of a
penalty for now if you want for
penalty for now if you want for
collisions. You can still just learn to
collisions. You can still just learn to
ignore some of the collisions I guess.
ignore some of the collisions I guess.
But we would what we'll end up doing is
But we would what we'll end up doing is
probably changing the sweep criterion.
Python doesn't have any built-in way to
Python doesn't have any built-in way to
save a GIF, right?
Yeah, slightly annoying.
But that is fine and that is
But that is fine and that is
substantially
substantially
cleaner. As soon as Ray exports frames,
cleaner. As soon as Ray exports frames,
we'll have
that. How you define differences of
that. How you define differences of
perfume
score.
score.
Um so the only thing is that score is
Um so the only thing is that score is
whatever you want it to
whatever you want it to
be. Perf is a 0ero to one normalized
be. Perf is a 0ero to one normalized
variable. Um, so
like that you can make, let me
think. Since they're both 0 to one
think. Since they're both 0 to one
normalized anyways, it probably makes
normalized anyways, it probably makes
sense to just make per and score the
sense to just make per and score the
same
same
thing. And then
um and you could add like some extra
um and you could add like some extra
variables to log other things. I would
variables to log other things. I would
just make like perf and score both
just make like perf and score both
be did you finish the like the thing
be did you finish the like the thing
without
without
crashing? Well, it's hard to say
crashing? Well, it's hard to say
actually cuz how do they do it? What is
actually cuz how do they do it? What is
what's their completion rate?
their completion rate is or their score
their completion rate is or their score
variable cuz their cars die,
right? Okay. So, if we want to match
right? Okay. So, if we want to match
what they
do, they live and ignore Wait. They live
do, they live and ignore Wait. They live
and they ignore.
and they ignore.
Oh, well that's
awkward. Hang on. Let me think.
Okay, let's do it this way. This is a
Okay, let's do it this way. This is a
little bit weird, but I think this will
little bit weird, but I think this will
uh this will fix the sweep issue and
uh this will fix the sweep issue and
everything else.
everything else.
So, we basically just do it for your
So, we basically just do it for your
first sub trajectory. So, you start you
first sub trajectory. So, you start you
start at zero steps, right?
start at zero steps, right?
Um if you hit anything your score will
Um if you hit anything your score will
be zero for the whole 91 steps. Uh if
be zero for the whole 91 steps. Uh if
you complete your
you complete your
goal then without hitting anything then
goal then without hitting anything then
your score will be one even if you like
your score will be one even if you like
hit something afterwards. So basically
hit something afterwards. So basically
we match their setting where like they
we match their setting where like they
only get one trajectory in those 91
only get one trajectory in those 91
steps because like the agent just dies
steps because like the agent just dies
or the agent stops or whatever.
or the agent stops or whatever.
Um, so for reporting purposes, for
Um, so for reporting purposes, for
scoring, we're only using the first
scoring, we're only using the first
segment from each car for each 91 steps,
segment from each car for each 91 steps,
but then we still get the rest of it to
but then we still get the rest of it to
use as training data. So basically, we
use as training data. So basically, we
do something that way closer to matches
do something that way closer to matches
what they're doing, and we just get
what they're doing, and we just get
extra training data because, you know,
extra training data because, you know,
we don't have this masking
we don't have this masking
nonsense. That should be good, right?
And that should also actually help with
And that should also actually help with
like the um agents respawning on top of
like the um agents respawning on top of
you thing. It's still technically
you thing. It's still technically
possible, but at least now you're not
possible, but at least now you're not
going to have that factor as much into
going to have that factor as much into
the score because you're only like
the score because you're only like
monitoring the first
segment. Try that.
You won't get a double collision, but
You won't get a double collision, but
you may get Yeah. So, if you collide on
you may get Yeah. So, if you collide on
in the first little bit, you just don't
in the first little bit, you just don't
get any score even if you complete the
get any score even if you complete the
goal later,
goal later,
right? And you can log collision rate
right? And you can log collision rate
based on that as
based on that as
well. You can just do all the logging
well. You can just do all the logging
based on like that first sub episode or
based on like that first sub episode or
whatever.
won't get a double
won't get a double
collision. Yeah, you can still
collision. Yeah, you can still
technically get them if
technically get them if
like if like let's say an agent has a
like if like let's say an agent has a
really short trajectory and runs into a
really short trajectory and runs into a
wall and another agent is driving by.
wall and another agent is driving by.
It's still possible. You should get way
It's still possible. You should get way
less of it though.
And also it should be possible to get
And also it should be possible to get
like a 100 though because if all the
like a 100 though because if all the
cars are driving
cars are driving
correctly then none of them collide in
correctly then none of them collide in
the first place. So none of them
the first place. So none of them
respawn. So you should still be able to
respawn. So you should still be able to
get max score. I mean there's still
get max score. I mean there's still
going to be some data issues where like
going to be some data issues where like
some of the data is janked but you
some of the data is janked but you
should be able to get close to max score
should be able to get close to max score
like
like
this.
this.
Yeah. Can you just log the first one?
Yeah. Can you just log the first one?
Yeah, that should be good.
RA could
RA could
respawn. Oh, like if their goal is
respawn. Oh, like if their goal is
really short. Yeah, that's also
true. I mean, to be fair, we can do some
true. I mean, to be fair, we can do some
jank stuff, right? Like
We can do some like spawn immunity or
We can do some like spawn immunity or
some [ __ ] afterwards, right? Let's
some [ __ ] afterwards, right? Let's
just do this first and you'll see it'll
just do this first and you'll see it'll
do you'll get a good policy out of this
do you'll get a good policy out of this
and then if there's like some
and then if there's like some
overlapping nonsense, we can fix
overlapping nonsense, we can fix
that. I mean, we could do stuff where
that. I mean, we could do stuff where
like we could give the cars spawn
like we could give the cars spawn
immunity or whatever, right? Like there
immunity or whatever, right? Like there
bunch of things we could
bunch of things we could
do. I think like it got the point where
do. I think like it got the point where
we found the major bug and it's time to
we found the major bug and it's time to
get the really good
policy. I'm working on cleaning up this
I flipped my camera for the
uh better.
Yeah, this
So other than state I think and the rail
So other than state I think and the rail
stuff this
stuff this
is a fine enough eval loop.
This is a fine eval loop.
A pretty nice train loop other than this
A pretty nice train loop other than this
small config thing that we'll fix in a
small config thing that we'll fix in a
bit.
the driver M is not going to have
um a vector interface, is it?
How did I do this? How did I do this in
How did I do this? How did I do this in
uh the current
version or I guess it's in here.
Oh, wait. You render the driver
end. That seems
weird. The driver M is the one that gets
weird. The driver M is the one that gets
rendered.
and the N gets
and the N gets
stepped the full
action. Oh, I guess cuz it's in a in a
action. Oh, I guess cuz it's in a in a
serial end, it's the same thing. That's
serial end, it's the same thing. That's
why that works,
right? You do want to have it wrapped in
right? You do want to have it wrapped in
um in a serial end as a result.
Now, this is why this works
Okay. So this is now a workable. I mean
Okay. So this is now a workable. I mean
this is a random
this is a random
play but this is actually now rendering
play but this is actually now rendering
correctly.
Um is that the full that's the speed the
Um is that the full that's the speed the
end
end
goes? That seems very fast.
Okay. Initially though, this is
good. I guess now it's the sweep stuff
good. I guess now it's the sweep stuff
that we have to
that we have to
do. We ready to do
that? Guess so.
This whole piece of code has to just go
This whole piece of code has to just go
in main, I think.
You have this separate logs and stats
You have this separate logs and stats
which is
annoying. Okay, here's what we're going
annoying. Okay, here's what we're going
to do.
to do.
We'll
We'll
do target metric.
Ah, it's because
Ah, it's because
um hang on. It's cuz there is a combined
um hang on. It's cuz there is a combined
key, right?
kind of a bit much,
right? We'll leave that function alone
right? We'll leave that function alone
for now.
This function just has too much.
We don't need this info.
up
here or it's costing time steps.
I really just want to get this sweep
I really just want to get this sweep
function like a reasonable
function like a reasonable
size. That's it.
Let me see what all like where's all
Let me see what all like where's all
this extra stuff you've been coming
this extra stuff you've been coming
from. So like there's some extra config
from. So like there's some extra config
I need to look at. All right, we have
I need to look at. All right, we have
the
the
seating and then this is like the
seating and then this is like the
same same as
same same as
before. I guess this is hang
before. I guess this is hang
on. Have end name.
Make
Make
this thing every time.
Why do we keep recording total time
Why do we keep recording total time
steps?
That ever makes
sense? I guess if we were trying to do
sense? I guess if we were trying to do
sample efficiency
stuff, but then it should just be
We shouldn't do this because we're going
We shouldn't do this because we're going
to just modify the way it works
anyways. That gets rid of
this. Oh, no. I know why it
this. Oh, no. I know why it
is. It's because we need to know when
is. It's because we need to know when
like what point this was recorded.
and it makes a ton of sense to do this
and it makes a ton of sense to do this
as well.
Hey
Hey
Jason, where should I start with? I
Jason, where should I start with? I
recently started learning about
recently started learning about
different algorithms of
different algorithms of
ML and projects and the new regression
ML and projects and the new regression
and profit. Now I want to learn more. Uh
and profit. Now I want to learn more. Uh
I mean in general
I mean in general
AI if you're brand new you should
AI if you're brand new you should
probably go through the stuff in
probably go through the stuff in
CS231N with the lectures either by
CS231N with the lectures either by
Justin or Andre Andred.
Justin or Andre Andred.
that's going to be like the best
that's going to be like the best
starting point material. And from there,
starting point material. And from there,
you do projects or read papers depending
you do projects or read papers depending
on your specific interests. Like I've
on your specific interests. Like I've
got a great guide specific to
got a great guide specific to
reinforcement learning uh for newcomers
reinforcement learning uh for newcomers
on my site. But if you're looking for
on my site. But if you're looking for
general ML, you're probably going to
general ML, you're probably going to
want to start with like something like
want to start with like something like
CS231N.
It definitely makes sense to come up
It definitely makes sense to come up
with a better way of doing what I'm
with a better way of doing what I'm
doing here, though. There's like a whole
doing here, though. There's like a whole
bunch of extra stuff that's just devoted
bunch of extra stuff that's just devoted
to this.
Logging of score, cost, time steps,
Logging of score, cost, time steps,
downsampling.
What was the name of the PhD
What was the name of the PhD
program? What do you mean name of the
program? What do you mean name of the
name of the
name of the
program? Name of the PhD program is PhD
program? Name of the PhD program is PhD
program,
program,
right? If you mean the department, it's
right? If you mean the department, it's
an EECS, which is like the giant
an EECS, which is like the giant
cover all department for like almost all
cover all department for like almost all
the
tech. So the thing that I'm like taking
tech. So the thing that I'm like taking
time on right here is just you see
time on right here is just you see
there's like all this extra code here
there's like all this extra code here
for like logging and downsampling these
for like logging and downsampling these
scores and stuff. What this is trying to
scores and stuff. What this is trying to
do is this is trying to take the
do is this is trying to take the
learning curves uh turn it into 10
learning curves uh turn it into 10
points and then give those 10 points as
points and then give those 10 points as
training data to the hyperparamet tuning
training data to the hyperparamet tuning
algorithm. But it's just like adding a
algorithm. But it's just like adding a
bunch of jank here and I want it to not
bunch of jank here and I want it to not
do
that because if we can simplify this a
that because if we can simplify this a
little bit then what we can have is like
little bit then what we can have is like
one very nice self-contained transcript
one very nice self-contained transcript
where you can just read it. it's really
where you can just read it. it's really
obvious what everything is. And then
obvious what everything is. And then
with a few more config changes, like
with a few more config changes, like
we're pretty darn close to the release
we're pretty darn close to the release
date for uh the trainer code.
What are you making right now? Can you
What are you making right now? Can you
explain it in a nutshell? Well, this is
explain it in a nutshell? Well, this is
very like fiddly little debugging for
very like fiddly little debugging for
the release of the next thing, but I
the release of the next thing, but I
work on puffer.ai full-time, puffer lib,
work on puffer.ai full-time, puffer lib,
I do ultra high performance
I do ultra high performance
reinforcement learning. You just go
reinforcement learning. You just go
here. You can see a whole bunch of these
here. You can see a whole bunch of these
demos. They run in your browser. You
demos. They run in your browser. You
have agents that we've trained to play
have agents that we've trained to play
like this massively multi-agent Snake
like this massively multi-agent Snake
game. Um, this looks really cool if you
game. Um, this looks really cool if you
leave it for a while. got like classic
leave it for a while. got like classic
arcade stuff like
arcade stuff like
Breakout that did uh Enduro.
Whoops. Driving
Whoops. Driving
sim. We have more complex stuff as well.
sim. We have more complex stuff as well.
Got like this miniature version of Dota
Got like this miniature version of Dota
or
League. And we've also
League. And we've also
got a follow-up to my PhD thesis, which
got a follow-up to my PhD thesis, which
is neural MMO 3, like this big massive
is neural MMO 3, like this big massive
world in which agents can run
world in which agents can run
around, they can collect resources, get
around, they can collect resources, get
equipment, items, do all the things
equipment, items, do all the things
you'd expect in a basic
MMO. I work on fundamental research on
MMO. I work on fundamental research on
how do we make reinforcement learning
how do we make reinforcement learning
faster, better, more stable for use in
faster, better, more stable for use in
both academia and in industry. We have
both academia and in industry. We have
the fastest and some of the simplest RL
the fastest and some of the simplest RL
tools around and they're all open
source. But a lot of what goes into that
source. But a lot of what goes into that
is me staring at relatively simple
is me staring at relatively simple
pieces of code for a very long time and
pieces of code for a very long time and
trying to figure out how to make them
trying to figure out how to make them
faster and simpler.
It would be so much easier if you could
It would be so much easier if you could
just observe the
just observe the
full trajectory, right?
But that'll break the Gaussian
process. The Gaussian processes, they
process. The Gaussian processes, they
just scale really
badly. Like I can only afford to give it
badly. Like I can only afford to give it
maybe a few thousand points before it
maybe a few thousand points before it
starts to get really
starts to get really
slow. It's actually probably is already
slow. It's actually probably is already
going to get slow with a few thousand
going to get slow with a few thousand
points, come to think of it.
I
mean, I guess it's questionable whether
mean, I guess it's questionable whether
it even makes sense to
it even makes sense to
model trajectories like this.
This is kind of just like something I
This is kind of just like something I
did without
did without
really checking too much if it actually
really checking too much if it actually
helps. So, you know what? Instead of
helps. So, you know what? Instead of
like instead of stressing over this,
like instead of stressing over this,
what I should probably do is just
what I should probably do is just
like leave it as it is for now. And then
like leave it as it is for now. And then
we'll run once I have this cleaned up,
we'll run once I have this cleaned up,
we'll run an experiment where we like do
we'll run an experiment where we like do
a big sweep over a hard end, like do 200
a big sweep over a hard end, like do 200
experiments with this and then we'll do
experiments with this and then we'll do
200 experiments just using the final
200 experiments just using the final
data point. And if they do the same, we
data point. And if they do the same, we
can just delete all this stuff and then
can just delete all this stuff and then
it'll be really
it'll be really
simple, right?
And if it actually helps a lot, then you
And if it actually helps a lot, then you
know I don't mind having a little bit of
know I don't mind having a little bit of
complexity knowing it actually does
something. I think that's the plan with
something. I think that's the plan with
this. So in that case
this. So in that case
then just make this sweeps on.
Yeah, this would actually get way
Yeah, this would actually get way
simpler, come to think of it,
simpler, come to think of it,
right? We just needed the last data
right? We just needed the last data
point.
Cool. So, this runs
nicely. This runs quite nicely
nicely. This runs quite nicely
indeed. Can you tell me if doing this
indeed. Can you tell me if doing this
kind of stuff is still relevant? Like
kind of stuff is still relevant? Like
there are a lot of games
This has nothing to do
This has nothing to do
with with games or graphics or any of
with with games or graphics or any of
that. This is um this is like
that. This is um this is like
fundamental research on AI. This is like
fundamental research on AI. This is like
how do we make better AI that learns
how do we make better AI that learns
through
through
interacting. We don't just run it on
interacting. We don't just run it on
games. We like games because they're
games. We like games because they're
really good for um testing algorithms
really good for um testing algorithms
because they're like very interpretable.
And the way we do stuff, at least the
And the way we do stuff, at least the
results are pretty general.
lines. This is reasonably cleaned
up. Like reasonably, right?
How are we doing on our
How are we doing on our
uh meta
experiments? Okay, we are doing quite
experiments? Okay, we are doing quite
well.
Only 41 experiments in as
Only 41 experiments in as
well. A good
well. A good
result. I believe 2.5 is our
result. I believe 2.5 is our
best. And that was running for much
best. And that was running for much
longer as
well.
Hello. Let's get rid of that.
Okay. I mean, I think then the next
Okay. I mean, I think then the next
thing we do with this is we figure out
thing we do with this is we figure out
um we figure out the configs, right?
We kind of did a lot of the rest of
We kind of did a lot of the rest of
this. This has come out quite
this. This has come out quite
well. So now we no longer
well. So now we no longer
have like a ton of little
have like a ton of little
annoying extra functions
annoying extra functions
here for uh the main script.
This only gets called in two places as
This only gets called in two places as
well here and in um sweep code. There's
well here and in um sweep code. There's
a possibility that if we don't need
a possibility that if we don't need
um like the aggregation, we might
um like the aggregation, we might
actually be able to cut that out
actually be able to cut that out
entirely, which would be
cool. So, we'll start on config stuff
cool. So, we'll start on config stuff
next. I'm going to be back in few
next. I'm going to be back in few
minutes. Going to go grab a drink, use a
minutes. Going to go grab a drink, use a
restroom, all that. Walk around a little
restroom, all that. Walk around a little
bit. Find a freaking flatter maybe.
Jeez. Be right back.
Okay, we're back.
nonfict
shenanigans. First of all, let's think.
shenanigans. First of all, let's think.
Let's make sure what I want to do even
Let's make sure what I want to do even
makes any sense.
So, what I was thinking here, I've got
So, what I was thinking here, I've got
this pufferlib.namespace thing that I
this pufferlib.namespace thing that I
use.
Um, and it's kind of just
Um, and it's kind of just
like a dictionary with dot notation.
like a dictionary with dot notation.
It's sort of like a simple namespace if
It's sort of like a simple namespace if
you know those,
you know those,
but it like simple namespace doesn't
but it like simple namespace doesn't
quite do all the things you'd want a
quite do all the things you'd want a
dictionary to
do. But the thing
is introducing a new data type like that
is introducing a new data type like that
is kind of freaking
is kind of freaking
ridiculous,
right? Like when you start like
right? Like when you start like
replacing Python's dictionary or like
replacing Python's dictionary or like
whatever with your own,
whatever with your own,
you're kind of fighting the language for
you're kind of fighting the language for
no reason.
I guess I just don't like the way that
I guess I just don't like the way that
Um, dictionaries require brackets and
Um, dictionaries require brackets and
quotes to access
stuff, but that's like
stuff, but that's like
a such a minor
a such a minor
net to introduce a whole new data
net to introduce a whole new data
structure. No, instead of that, let's
structure. No, instead of that, let's
just let's not go one way or the other
just let's not go one way or the other
yet. Let's just
yet. Let's just
see what would the code look like if we
see what would the code look like if we
made if we put more into that data
made if we put more into that data
structure and what would it look like
structure and what would it look like
with less. First of all, how how where
with less. First of all, how how where
do I use
this? Okay. So I
this? Okay. So I
use the bunch and clean
RL few other little This
is definitely like few enough places
is definitely like few enough places
that that would be a pretty
that that would be a pretty
easy refactor.
easy refactor.
Now let's see what I'm actually saving
Now let's see what I'm actually saving
in clean puff roll with
this. So experience is a name space.
access
proper. Surely somebody's timed this
Okay. So,
So this is just a new project, right?
Just use a damn
Just use a damn
dictionary. It
seems all these rappers are
seems all these rappers are
slow. Name space probably slow.
It's weird
It's weird
though because
though because
um guess I don't know how Python does
um guess I don't know how Python does
this
this
internally. Probably does string
internally. Probably does string
processing either way.
I mean, if I want to be ridiculous, I
I mean, if I want to be ridiculous, I
could write
could write
um a very quick time thing,
right? Let's just be ridiculous for a
right? Let's just be ridiculous for a
second. All right, this is kind of
second. All right, this is kind of
silly, but
Hey,
Spencer. Well, we'll see how the sweep
Spencer. Well, we'll see how the sweep
goes.
H amusingly I was actually right.
Doesn't does it depend on
um does it depend on uh key
length? No, they must cach the uh the
hashes. All right. So, it's not like
hashes. All right. So, it's not like
insane. You never want to trust
insane. You never want to trust
uh the Python implementations.
uh the Python implementations.
be
reasonable. I mean, those are times that
reasonable. I mean, those are times that
um if I'm doing
um if I'm doing
one8 Python loops anyways, I kind of
one8 Python loops anyways, I kind of
deserve to be slow, right?
when my name space is almost certainly
when my name space is almost certainly
slower.
So putting the perf thing aside
then the creation is the same of a
then the creation is the same of a
namespace versus anything else because
namespace versus anything else because
you can call dict with this
syntax like yeah this is not any
better. You can
better. You can
likewise do the same thing with a
likewise do the same thing with a
dictionary like this.
The only thing you can't do is access
The only thing you can't do is access
stuff with dot
notation. So that is moderately
notation. So that is moderately
annoying, right? Because
like all these config things
I'm going to use this
everywhere. I mean, that is arguably
everywhere. I mean, that is arguably
like a big deal, right?
having to have
having to have
um the obnoxious string
um the obnoxious string
accessor notation freaking everywhere in
accessor notation freaking everywhere in
your
mode is cost no longer the x-axis for
mode is cost no longer the x-axis for
sweeps.
What mean is it no
What mean is it no
longer? Yeah, Spencer, it is it is the
longer? Yeah, Spencer, it is it is the
X. You set the X-axis to whatever you
X. You set the X-axis to whatever you
want, but the actual criterion, right?
want, but the actual criterion, right?
The PTO front is evaluated with runtime
The PTO front is evaluated with runtime
versus whatever score
versus whatever score
variable. You can look at the data in
variable. You can look at the data in
steps or in time or whatever, but the
steps or in time or whatever, but the
way that we select the best one by the
way that we select the best one by the
sweeps algorithm is on
time. This is actually like not an
time. This is actually like not an
entirely clear decision to me. like this
entirely clear decision to me. like this
is um a bit more complicated than you
is um a bit more complicated than you
would think, right? So it ultimately it
would think, right? So it ultimately it
boils down to right is it worth
introducing a custom
type to clean up Python's default
type to clean up Python's default
syntax versus using the thing that
syntax versus using the thing that
everyone
everyone
knows which has the annoying syntax.
knows which has the annoying syntax.
Is it better to have dictionaries with a
Is it better to have dictionaries with a
million like annoying accessors
million like annoying accessors
everywhere? I mean, instead of a dot,
everywhere? I mean, instead of a dot,
it's four keystrokes, right? It's it's
it's four keystrokes, right? It's it's
like four it's three extra characters uh
like four it's three extra characters uh
per access with oftentimes multiple per
per access with oftentimes multiple per
line. Like that's not a insubstantial
line. Like that's not a insubstantial
amount of additional crap in here. I
amount of additional crap in here. I
mean, we probably access some form of
mean, we probably access some form of
this at least a couple hundred times in
this at least a couple hundred times in
this file.
This one is irritating cuz it's like the
This one is irritating cuz it's like the
default Python thing is so close but
default Python thing is so close but
like it's
like it's
not. Let's actually Let me see
not. Let's actually Let me see
something.
The simple name space
The simple name space
right from types import simple
namespace. First of all
namespace. First of all
that calling it simple namespace like
that calling it simple namespace like
this is horrendous but
whatever this gives you name
whatever this gives you name
space doesn't have
keys can't iterate over
That's awful, All right.
So, like there's no case where we're
So, like there's no case where we're
ever using this thing alone.
Man, you know, it's
Man, you know, it's
like, you know what this reminds me
of? It's not this thing, right?
Not
Not
this. What's that like library that just
this. What's that like library that just
defines a ton of
defines a ton of
types? Is it this
thing? There was like I don't think it
thing? There was like I don't think it
is this thing. What's the repo that just
is this thing. What's the repo that just
like they define their own data types
like they define their own data types
for
everything? I thought it was
this. It's this right fast core.
Like they do all this stuff, right,
Like they do all this stuff, right,
where they have tons of things that are
where they have tons of things that are
arguably very convenient, but they just
arguably very convenient, but they just
like blow up the size of of your basic
like blow up the size of of your basic
utils ridiculously, right?
Like arguably I think that this like if
Like arguably I think that this like if
this were in Python this would make the
this were in Python this would make the
language worse overall just from the
language worse overall just from the
amount of
stuff. But basically it's like I don't
stuff. But basically it's like I don't
want to do this which like ah we didn't
want to do this which like ah we didn't
like the default so we made our own.
like the default so we made our own.
It's kind of bad,
right? I don't think sweep.py reports
right? I don't think sweep.py reports
SPS. Yeah, I I got to fix that, Spencer.
Like it would seem to me like it's a bad
Like it would seem to me like it's a bad
idea to have this namespace thing. And
idea to have this namespace thing. And
this is kind of like leftover from when
this is kind of like leftover from when
I was screwing around doing like
I was screwing around doing like
language level
language level
stuff last
summer. But at the same time, it's just
summer. But at the same time, it's just
like this one
like this one
This one particular thing with the
This one particular thing with the
config is just so bloody annoying.
And arguably I
could I can't even like have it be a a
could I can't even like have it be a a
can't even like convert it to a simple
can't even like convert it to a simple
name space or
name space or
anything. I'd have to do fully
anything. I'd have to do fully
dictionary stuff.
Maybe this is obvious,
right? The answer is probably to use the
right? The answer is probably to use the
language the way the language was
language the way the language was
intended. Not fight the thing. You can
intended. Not fight the thing. You can
be mad at it,
be mad at it,
but like trying to hack around it is
but like trying to hack around it is
probably just
stupid. I think that's probably the
stupid. I think that's probably the
right
right
call. Removing a primitive is good.
Just check one thing with Pep.
Yeah, I think what we do is we make a
Yeah, I think what we do is we make a
commit and then we do the
commit and then we do the
thing and then uh we make sure we like
thing and then uh we make sure we like
it. But yeah, I think that's going to be
it. But yeah, I think that's going to be
most likely
Oh
Oh
yeah, we'll
just start with this.
and we'll see what has to be fixed
and we'll see what has to be fixed
immediately from this.
So this is adding um a little bit of
So this is adding um a little bit of
annoyance I would say to the way that
annoyance I would say to the way that
the uh the code has to be written. But I
the uh the code has to be written. But I
do think that it is worse for me to be
do think that it is worse for me to be
introducing custom types for like basic
introducing custom types for like basic
stuff.
We'll take a little while to do this by
We'll take a little while to do this by
hand, but I don't want to like auto it
hand, but I don't want to like auto it
and mess something way more important
up. The single line autocomplete helps
up. The single line autocomplete helps
because I can like still read the row.
Plus, I get to clean things up along the
Plus, I get to clean things up along the
way a little bit.
device everywhere.
So, this is going to be a little
So, this is going to be a little
ridiculous,
right? Get zeros.
This doesn't This is completely
This doesn't This is completely
redundant. So is
redundant. So is
this. This
We're getting there bit by
bit. I think this was the right decision
bit. I think this was the right decision
though ultimately.
Like I don't feel that stupid for having
Like I don't feel that stupid for having
done this
because the reason why it's
because the reason why it's
stupid is like kind of
subtle. Basically like last summer I
subtle. Basically like last summer I
started I started getting into like
started I started getting into like
lower level style of thinking on a lot
lower level style of thinking on a lot
of programming and I started thinking
of programming and I started thinking
like ah is there a way that I can write
like ah is there a way that I can write
my Python code more like CC code?
Um, and like initially you wouldn't
Um, and like initially you wouldn't
necessarily
necessarily
think particularly if like me you've
think particularly if like me you've
been writing Python for many years that
been writing Python for many years that
there would be any natural barrier to
there would be any natural barrier to
doing that. But the language actually
doing that. But the language actually
kind of forces you into the way that a
kind of forces you into the way that a
lot of code is written in the language.
lot of code is written in the language.
Not all of it, mind you. People still
Not all of it, mind you. People still
write awful awful code. But like there's
write awful awful code. But like there's
a reason that Python has a ton of
a reason that Python has a ton of
classes usually and things are put into
classes usually and things are put into
classes by default. Um there's a reason
classes by default. Um there's a reason
that there isn't like a good strruct for
instance. And when you try to like fight
instance. And when you try to like fight
that, you end up making more of a mess
that, you end up making more of a mess
than just doing it the way that the
than just doing it the way that the
language intends you to do, but keeping
language intends you to do, but keeping
it as simple as possible within that.
So, it's not that
So, it's not that
bad to have done all that. But I think
bad to have done all that. But I think
it is correct now that
it is correct now that
we get rid of
I mean, I guess like another way I
I mean, I guess like another way I
should have looked at it initially would
should have looked at it initially would
be
be
like if um if I don't know anybody else
like if um if I don't know anybody else
about anything else about somebody
about anything else about somebody
programming and you tell me that they
programming and you tell me that they
heavily used like the fast API core that
heavily used like the fast API core that
makes me more or less excited to look at
makes me more or less excited to look at
their code much less excited
right or heck like even if I 10x the
right or heck like even if I 10x the
namespace thing, right? If I have all my
namespace thing, right? If I have all my
own custom types,
like that's probably not a good thing.
like that's probably not a good thing.
Well, it probably does mean that you
Well, it probably does mean that you
care a lot about your work, but uh it
care a lot about your work, but uh it
also probably means that you engineer a
also probably means that you engineer a
lot of problems in addition to
lot of problems in addition to
solutions.
or at the very least
like you know you very much would like
like you know you very much would like
to be working in another language and
to be working in another language and
are like really annoyed you're stuck in
are like really annoyed you're stuck in
this
one which is fair like you know I'd
one which is fair like you know I'd
rather be writing see
But this isn't bad as long as we keep it
But this isn't bad as long as we keep it
reasonable.
This I'm not letting it auto
This I'm not letting it auto
complete like mess
up. Actually, you know what? We can
up. Actually, you know what? We can
clean this up because we can do P
clean this up because we can do P
A theta equals
1 - B 0 time alpha.
Ars like this is this can now be
Ars like this is this can now be
simplified a little bit.
Well, not
Well, not
really. I guess not really,
huh?
huh?
Big. Oh, yeah. But then all these are
Big. Oh, yeah. But then all these are
now these are
now these are
dicks. So, um this now has to be like
just on.
Okay. So, profile
eval. Yeah, these were simple name
eval. Yeah, these were simple name
spaces before as well,
spaces before as well,
right? Or puffer name
spaces. Oh.
Abs [ __ ]
60.
Yeah, like stuff like
Yeah, like stuff like
this really annoying.
Holy Yeah, there's going to be a lot of
Holy Yeah, there's going to be a lot of
this actually. That's annoying.
this run yet?
almost all the way down to
sample the batch as well.
We're definitely going to have to look
We're definitely going to have to look
at
at
um whether this
um whether this
changes the way I want to do any
changes the way I want to do any
batching or not. You know, maybe I don't
batching or not. You know, maybe I don't
want to have to keep accessing all
want to have to keep accessing all
these. Maybe I want to access them once
these. Maybe I want to access them once
at the start of the batch.
This is why I thought about it for so
This is why I thought about it for so
long cuz it's actually like a
long cuz it's actually like a
non-trivial change, right?
Okay, still works.
If sweep still
work. Works for now. We'll see if it
work. Works for now. We'll see if it
goes all the way through.
And then there's no more name space in
And then there's no more name space in
here.
There is a chance that I end up
There is a chance that I end up
reverting this. We will see. I kind of
reverting this. We will see. I kind of
have to like work with the code for a
have to like work with the code for a
bit and see how it
bit and see how it
feels. If it's like noticeably worse
feels. If it's like noticeably worse
just writing code having to do this,
just writing code having to do this,
then I might revert it. But for now,
then I might revert it. But for now,
this is what we're going to do.
Okay. Does that
Okay. Does that
change how I think about configuration
change how I think about configuration
down here at
down here at
all? Probably a bit.
all? Probably a bit.
Right. It's 4:37 and have like an hour
Right. It's 4:37 and have like an hour
hour
10.
10.
Okay. Um, let's just let's finish this
Okay. Um, let's just let's finish this
little section and then I'll do what I
little section and then I'll do what I
need to do uh outside of
this. Right. So I remember
here there's like this weird nested
here there's like this weird nested
thing, right?
This is unpacking arc parse.
And then similarly this like little
unroll it's used twice
right actually this is kind of a
right actually this is kind of a
specific function.
I'm actually fine with us having this
I'm actually fine with us having this
one cuz this actually does something
one cuz this actually does something
kind of
non-trivial, not just a stylistic
thing. It has to compress the keys in a
thing. It has to compress the keys in a
specific
way. So now if we accept
way. So now if we accept
that, this thing is hacky as hell.
Let me see what I had this as an uh
Let me see what I had this as an uh
20 in
demo. So this unpack was this
this little section right
here. And the literal eval moved up. We
here. And the literal eval moved up. We
got rid of that.
me try something. Let me see if I can
me try something. Let me see if I can
get this to work without nesting or any
get this to work without nesting or any
[ __ ]
Is this what it would look
like? I think that's all it
is. And I just didn't like this because
is. And I just didn't like this because
um like whatever uncompressed or
um like whatever uncompressed or
whatever. This is way
whatever. This is way
clearer to
read. There anything else I can do that
read. There anything else I can do that
would make this even better?
Oh, it's not melts.
That do
it.
it.
Nah.
Didn't think
so. What was that? Set default. Was that
so. What was that? Set default. Was that
making it up?
This is a freaking
thing. Okay.
Python with all the weird
methods. So that is compactified.
Oh, you know what this can
be? Yep, you can do that in Python. I
forgot. Should be able
forgot. Should be able
to I mess
up. This works, right?
package
ocean. It is worth cleaning this up.
ocean. It is worth cleaning this up.
However, I
However, I
can not have this browser covering chat.
Oh, I see. I'm going one too far.
Is there a clean way to do this?
would be this
right. Yeah.
Okay. Well, that's not
Okay. Well, that's not
bad. That's like pretty concise.
Oh, actually
wait. We
do. No, I think this is about as good as
do. No, I think this is about as good as
it
it
gets. Might be something slightly
gets. Might be something slightly
better, but this is pretty good. Not
better, but this is pretty good. Not
worth spending more time on
that. I am happy that we got the jank
that. I am happy that we got the jank
nested dictionary thing out of it
though. Now, does this change anything
though. Now, does this change anything
in the way that I uh I look at configs
in the way that I uh I look at configs
at all?
Not
Not
particularly. So there might be a few
particularly. So there might be a few
things I can do generally like
things I can do generally like
combining configs or like generally
combining configs or like generally
cleaning some stuff up. Here's the
cleaning some stuff up. Here's the
restroom real quick. Maybe back in few
restroom real quick. Maybe back in few
minutes and then we will
minutes and then we will
keep working on making this file better.
keep working on making this file better.
I will be back.
Okay, let
Okay, let
me apply to one message.
picking one message and we'll go back to
Reading one document here.
sending one thing over and then we
sending one thing over and then we
should be uh back to working on this.
should be uh back to working on this.
Apparently I am spammed with tons of
messages none of which matter. Perfect.
Good. What do we have going on in gen
Good. What do we have going on in gen
chat? Random
stuff. We actually do have some folks
stuff. We actually do have some folks
working on drone with this, which is
working on drone with this, which is
great.
So, I think now we're just going to go
So, I think now we're just going to go
through this section a little bit and
through this section a little bit and
see if we can clean up a few of the ways
see if we can clean up a few of the ways
we're doing the config
we're doing the config
files. And we're getting down to a
files. And we're getting down to a
pretty
pretty
minimal end product here.
like a thousand lines of code for all of
like a thousand lines of code for all of
our
training like what is this All
right. Well, you had to add in
right. Well, you had to add in
experiment
experiment
ID like tag. You had to add in these
ID like tag. You had to add in these
things
things
here because the train class is actually
here because the train class is actually
doing the logging,
doing the logging,
right? And why is the train class doing
right? And why is the train class doing
the
logging? It's a good
logging? It's a good
question. Does the train class have to
question. Does the train class have to
do the logging?
Let's consider
that you have this mean and
that you have this mean and
log. This just gives you
log. This just gives you
logs. You could just as easily integrate
logs. You could just as easily integrate
this into the main transcript, right?
and then this wouldn't have to know
and then this wouldn't have to know
anything about want to be or
Neptune. Okay. The thing that prevents
Neptune. Okay. The thing that prevents
me from doing that at the moment
me from doing that at the moment
is the sweep stuff because you'd have to
is the sweep stuff because you'd have to
do it twice essentially.
Maybe we can change this. Hang
on. The train
code. Okay. So, this is the train code
code. Okay. So, this is the train code
here. It's just this little section.
I wonder if we could
I wonder if we could
put take this sweep
put take this sweep
code.
Could we like make this just the main
Could we like make this just the main
code path? We wouldn't need to have
code path? We wouldn't need to have
separate code for train and
separate code for train and
sweep. That would be kind of cool.
without having to like split out the
without having to like split out the
inner of this into a function. Okay,
inner of this into a function. Okay,
what would that
what would that
require? Let's say that we don't need
require? Let's say that we don't need
the full the full curves for the
the full the full curves for the
hyperparam sweep algorithm. Let's say
hyperparam sweep algorithm. Let's say
that we run the experiment and that that
that we run the experiment and that that
goes
goes
away. So then
It's all in it all ends up being
It's all in it all ends up being
basically the same,
right? Yeah. Code literally ends up
right? Yeah. Code literally ends up
being the same.
So basically all we need to know
then is whether or not we need this
then is whether or not we need this
score and cost
stuff. I mean heck, we could just assume
stuff. I mean heck, we could just assume
we're going to be able to simplify it a
we're going to be able to simplify it a
little bit,
little bit,
right? And just keep it regardless.
Okay, I'm kind of interested in doing
Okay, I'm kind of interested in doing
this. Kind of
this. Kind of
interested. Put this autotune up here.
I guess the thing that is going to be
I guess the thing that is going to be
different, right, is
like if you're like running eval or
thing. There a clean way to do this? It
thing. There a clean way to do this? It
feels like if I'm clever here, there is
feels like if I'm clever here, there is
just going to be a clean way to do this
just going to be a clean way to do this
to not need to have multiple code paths.
I mean the plus side right now is the
I mean the plus side right now is the
train one is really really
clean. Okay. If there were no other
clean. Okay. If there were no other
initialization or stuff,
initialization or stuff,
right? It's basically just block of code
right? It's basically just block of code
and block of code with for loop.
And I would and I would prefer to avoid
And I would and I would prefer to avoid
put block of code into separate
put block of code into separate
function ideally.
Do you know
What? I I don't necessarily mind as much
What? I I don't necessarily mind as much
having this be a separate function
having this be a separate function
now. Do
I? What if we just put this? Let's Let's
I? What if we just put this? Let's Let's
say we take this thing. Okay.
say we take this thing. Okay.
do
experiment back
experiment back
end policy and
then what if we do
then what if we do
this
this
experiment we do depth experiment up
there
experiment. This could be kind of cool.
So now if this actually if this logic
So now if this actually if this logic
does compress this just becomes loop
does compress this just becomes loop
over
experiment. And then we could even put
experiment. And then we could even put
like a loop down here and train over
like a loop down here and train over
like numbum seeds or whatever if we
want. And what if it
doesn't? Okay, so let's let's think
doesn't? Okay, so let's let's think
about both cases. If this if the logic
about both cases. If this if the logic
for all of the like down sampled curve
for all of the like down sampled curve
stuff doesn't end up being necessary for
stuff doesn't end up being necessary for
sweep, we're good. If it does end up
sweep, we're good. If it does end up
being necessary, then we have like 20 30
being necessary, then we have like 20 30
additional lines of stuff
additional lines of stuff
um that we would ideally like to keep
um that we would ideally like to keep
out of the main experiment interface.
I mean, we could totally just make the
I mean, we could totally just make the
experiment
experiment
return all of the logs, like just a list
return all of the logs, like just a list
of all the logs from the whole
of all the logs from the whole
experiment, right?
Let's actually implement it that way
Let's actually implement it that way
first. I think it
works. Bogs
So like if I did this right return all
So like if I did this right return all
the
logs and we go down to
logs and we go down to
sweeps right
here back end
policy. Let's write like
policy. Let's write like
this. So it's just going to be
experiment. Okay. So now we don't need
experiment. Okay. So now we don't need
this.
So we then we have
So we then we have
um fours
equals like this
equals like this
right going to be like up
time. Let's just say we put up time in
time. Let's just say we put up time in
there, right?
Let's do
that.
Um, time steps. We get this from here.
So now we no longer need this,
So now we no longer need this,
right? Or this. We already have all
this. And now we actually can do down
this. And now we actually can do down
sample
linear
and something like this.
Oh, and actually can we do better? No,
Oh, and actually can we do better? No,
we can't because we need to do this down
we can't because we need to do this down
sample operation. So,
Yeah. So this is actually there is going
Yeah. So this is actually there is going
to be a bug here I if I don't uh patch
to be a bug here I if I don't uh patch
this. So let me let me go deal with
this. So let me let me go deal with
this. Uh I need to make sure that the
this. Uh I need to make sure that the
total time steps gets logged at the end
total time steps gets logged at the end
correctly.
Oh, I know how to do it.
Not this one. Right. Come on. Args.
Okay. So, something like this. Then this
Okay. So, something like this. Then this
is now pretty
short. Yeah. This is now very very
short. Yeah. This is now very very
short. And I no longer use X by here.
thing up
here. It's getting
there. It is getting there.
Let's see what I uh let's see what I
Let's see what I uh let's see what I
broke. Assuming I broke
broke. Assuming I broke
something. Okay, so train still works,
something. Okay, so train still works,
right?
It's pretty
It's pretty
good. Pretty good.
I mean, this opens it up a ton, doesn't
it? Feels like it opens it up a ton.
little debugging.
untype
nons all logs of zero is
nons all logs of zero is
none
Really?
Okay. And we will like we can fix this
Okay. And we will like we can fix this
type of stuff, right? But like we're not
type of stuff, right? But like we're not
going to actually add this into this
going to actually add this into this
nice clean experiment function. We're
nice clean experiment function. We're
going to fix this in the main
going to fix this in the main
environment, I'm sure.
environment, I'm sure.
But let's see if this does uh what we
But let's see if this does uh what we
expect given
this 522
Oh
yeah, there we
are. So this looks good then. This looks
are. So this looks good then. This looks
uh this looks quite good.
So we now instead of having a bunch of
So we now instead of having a bunch of
these functions, we have the final 15%
these functions, we have the final 15%
of the code.
of the code.
925 1128. So 200
925 1128. So 200
lines devoted to all the different types
lines devoted to all the different types
of experiments and config and everything
of experiments and config and everything
else. Call it 220 something lines with
else. Call it 220 something lines with
this.
this.
Not bad at
all. Just like our harness for stuff.
all. Just like our harness for stuff.
And we can work on like reducing this
And we can work on like reducing this
bit by bit as
well. Very good.
Oh yeah. How is our sweep
doing? Have some more experiments in
doing? Have some more experiments in
here by now,
right? Pretty good.
right? Pretty good.
doing pretty well.
Hello. How's it
going? Doing well here. Fairly
productive. Fixed uh the driving sim
productive. Fixed uh the driving sim
bug and now we are uh pretty well
bug and now we are uh pretty well
through
through
one of the last like major refactors
one of the last like major refactors
that I really wanted to figure out
that I really wanted to figure out
before release. At least I think we've
before release. At least I think we've
gotten the hard parts of this
done. There's a lot of like little clean
done. There's a lot of like little clean
up I'm sure here,
up I'm sure here,
but all like the difficult stuff is
but all like the difficult stuff is
pretty good.
I'm trying to think what's going to be
I'm trying to think what's going to be
the most productive way to go uh from
the most productive way to go uh from
here
because I can still totally break stuff
because I can still totally break stuff
by accident is the thing. It's like we
by accident is the thing. It's like we
can't run the final experiments yet, but
can't run the final experiments yet, but
we're getting pretty close.
I guess probably next step is going to
I guess probably next step is going to
be get it feature
complete. So get all get the library
complete. So get all get the library
basically behaving exactly the way I
basically behaving exactly the way I
want it and then do the final
cleanups. Of course some of the features
cleanups. Of course some of the features
the final features do depend on the
the final features do depend on the
experiments.
Welcome all the YouTube
folks. And I guess really the only other
folks. And I guess really the only other
big one was uh fixing the Neptune and WB
big one was uh fixing the Neptune and WB
integration. Actually, I got an email
integration. Actually, I got an email
back from them.
back from them.
Let me go figure out where where this
Let me go figure out where where this
email is because they apparently they
email is because they apparently they
told they responded on whether um their
told they responded on whether um their
new API is going to be available to
new API is going to be available to
general
general
public or
not. Let me see.
Well, the slack page 404s
here. Maybe I can. Maybe it puts me to
here. Maybe I can. Maybe it puts me to
the
same. Okay, it does
actually. We're preparing docs and
actually. We're preparing docs and
online
online
content in anticipation for a more
content in anticipation for a more
public general access release.
public general access release.
The current version will version will
The current version will version will
likely be maintained until the end of
likely be maintained until the end of
the year once we have a migration
the year once we have a migration
plan for all current
customers. Okay.
trying to see where the
um if they're going to move this to
um if they're going to move this to
uh if they're going to move this to like
uh if they're going to move this to like
paid only. We're going to have to
paid only. We're going to have to
migrate
migrate
this. So, it depends how they're doing
this. So, it depends how they're doing
this here. Uh they 5x their pricing,
this here. Uh they 5x their pricing,
didn't they?
didn't they?
Yeah, this used to be 50.
I mean, they do have a good product, but
I mean, they do have a good product, but
the thing is I can't I can't have the
the thing is I can't I can't have the
default uh be this if they don't have a
default uh be this if they don't have a
trial or they're not going to have a
trial or they're not going to have a
trial. Now, they still currently
trial. Now, they still currently
have Where is
have Where is
it? Where's the page for it?
If you hit
If you hit
login, I think I have to do this in a
login, I think I have to do this in a
new tab. Hang on. This is actually this
new tab. Hang on. This is actually this
is important because
is important because
um otherwise we're going to have to do
um otherwise we're going to have to do
like a tensorboard back end or
like a tensorboard back end or
something.
Yeah. So, you do actually there is a
Yeah. So, you do actually there is a
free account trial or whatever.
All right, we'll see what they say on
All right, we'll see what they say on
that. I do hope that they're not going
that. I do hope that they're not going
to completely shoot themselves in the
to completely shoot themselves in the
foot there.
foot there.
Um, it's a very good tool and like I
Um, it's a very good tool and like I
might even still consider using it
might even still consider using it
personally.
But yeah, they're in a tough place I get
But yeah, they're in a tough place I get
because it's like not only do they want
because it's like not only do they want
to charge, they want to charge a lot
to charge, they want to charge a lot
because the addressable market like
because the addressable market like
they're marketing to researchers, which
they're marketing to researchers, which
is a pretty small crowd, but like at the
is a pretty small crowd, but like at the
same
time, it's not like a
time, it's not like a
crazy there's like nothing here that is
crazy there's like nothing here that is
worth that amount of money, right?
Like it's not fast. It's fast compared
Like it's not fast. It's fast compared
to shitty modern electron
apps. Like most shitty modern electro uh
apps. Like most shitty modern electro uh
electron
apps. What would the alternative be?
apps. What would the alternative be?
Like tensorboard.
this local run with
tensorboard. I forget. Does wi still
tensorboard. I forget. Does wi still
have their free
accounts? Yeah.
accounts? Yeah.
So, they still have the
um Ah, it's I see. So, it's free forever
um Ah, it's I see. So, it's free forever
for
for
personal
development. No, they still have they
development. No, they still have they
still have their free accounts. They
still have their free accounts. They
still totally have their free
still totally have their free
accounts. So, it would just be go back
accounts. So, it would just be go back
to wannabe
badly, which
badly, which
sucks because uh Neptune is
sucks because uh Neptune is
substantially better and I would like
substantially better and I would like
have to basically go back to
have to basically go back to
um figuring out how to do stuff on this
If they rug their own community though,
If they rug their own community though,
like if they rug their user base on
like if they rug their user base on
that, that's on
them. Yeah, they they literally they 5x
them. Yeah, they they literally they 5x
their lowest tier pricing over their
their lowest tier pricing over their
competitor as
well. I don't know what they're doing.
And
And
like that's like a little concerning
like that's like a little concerning
actually, isn't it? I mean, just
actually, isn't it? I mean, just
thinking what they're
doing. And yeah, they're totally based
doing. And yeah, they're totally based
on this, they're pricing it for academic
on this, they're pricing it for academic
as
as
well. So like they think that academic
well. So like they think that academic
labs are going to pay 500 bucks a user a
labs are going to pay 500 bucks a user a
month.
month.
Like do they realize that they pay their
Like do they realize that they pay their
students like three, four grand a
month? Like labs have no money.
I hope they don't call Makazi on this.
Well, nothing I can do in the meantime
Well, nothing I can do in the meantime
other than use the current API, update
other than use the current API, update
it so it works with W and Neptune, and
it so it works with W and Neptune, and
we go from
there. Let's go check if I can find even
there. Let's go check if I can find even
the current Neptune API.
I go
here. So track files.
Model
metadata source
metadata source
code
monitoring log images. Custom plots and
monitoring log images. Custom plots and
charts.
I guess this This is
I guess this This is
the
Neptune model registry to experiment.
experiments. I guess I can just upload
experiments. I guess I can just upload
the file, right?
copy model metadata from model registry
copy model metadata from model registry
to
to
experiments where model identifier and
experiments where model identifier and
version as
tags Group tags to organize your
tags Group tags to organize your
models and tags to
create saved views.
fetch models
table. Oh no, this is just for migration
table. Oh no, this is just for migration
though. Just for migration.
Okay, I it's just going to be upload or
Okay, I it's just going to be upload or
whatever, right? Add files or upload.
whatever, right? Add files or upload.
And we'll just do
that. I guess it's probably this one
that. I guess it's probably this one
because that other one's just for
because that other one's just for
images. So, just track
images. So, just track
files.
Presumably this uploads the whole model,
Presumably this uploads the whole model,
right?
Oh, it's the
Oh, it's the
run. Well, there's no run object. So,
run. Well, there's no run object. So,
it's probably like
it's probably like
dot upload or dot was it track
dot upload or dot was it track
files? Track files.
Put this here.
I got to run in a
few. But let's see if we can at least do
few. But let's see if we can at least do
this.
See if this
See if this
uploads. Also, did we hit
uploads. Also, did we hit
2K? We might have hit 2K today. Did any
2K? We might have hit 2K today. Did any
of you start
it?
it?
1999. Anybody wants to start the repo to
1999. Anybody wants to start the repo to
help me out for free? One star off of
help me out for free? One star off of
2000. Pretty damn big for a
2000. Pretty damn big for a
reinforcement learning repo.
reinforcement learning repo.
I mean like
I mean like
my legendary project here is
my legendary project here is
7k still active.
We'll do fast version.
I don't know why it's parsing that as a
I don't know why it's parsing that as a
string, but whatever.
legacy
methods. Oh no, wait. Attribute error.
This is the run.
No, it doesn't have
No, it doesn't have
[Music]
[Music]
upload. How do you do stuff with
this that
this that
attribute? There just no way to do
this. Track
files
upload. Oh, wait. Run of train data set.
There we
There we
go. So,
uh let's see uh if this logged for us.
Huh? Look at
Huh? Look at
that. We get the model
file. Can we not uh download it?
Does it actually store this file? Like
Does it actually store this file? Like
this looks clickable but isn't.
download. Fetching metadata of contained
download. Fetching metadata of contained
files. Downloading the contained files.
There we
go. So, uh I am going
go. So, uh I am going
to go for dinner here. Let me just paste
to go for dinner here. Let me just paste
this in for
this in for
now so I at least know that we can do
now so I at least know that we can do
it. and then we will uh we will get to
it. and then we will uh we will get to
this either after dinner or tomorrow
this either after dinner or tomorrow
depending on how I'm feeling. Uh so for
depending on how I'm feeling. Uh so for
the folks
the folks
watching getting very close to this new
watching getting very close to this new
release going to be very simple and very
release going to be very simple and very
fast when I'm done with
fast when I'm done with
it. If you are interested in high
it. If you are interested in high
performance reinforcement learning or RL
performance reinforcement learning or RL
in
in
general, all my stuff is free and open
general, all my stuff is free and open
source at puffer.ai.
source at puffer.ai.
You can help me out for free by starting
You can help me out for free by starting
the GitHub. You're one star off of 2K.
the GitHub. You're one star off of 2K.
This is rounding. So, that could be you.
This is rounding. So, that could be you.
Would help out a lot. And uh other than
Would help out a lot. And uh other than
that, if you want to get involved with
that, if you want to get involved with
dev, you can join the Discord. Many of
dev, you can join the Discord. Many of
our best contributors came in with zero
our best contributors came in with zero
RL experience. You just need a
RL experience. You just need a
programming
programming
background. You can follow me on X for
background. You can follow me on X for
more RL content. So, thank you. And I
more RL content. So, thank you. And I
will be back either later tonight

Kind: captions
Language: en
Morning. The goal for right now is to
Morning. The goal for right now is to
get this sweep that did not actually
get this sweep that did not actually
work to
work. I think this will be pretty quick
work. I think this will be pretty quick
and then we will uh we will go from
here. Yeah. So, I think it's going to
here. Yeah. So, I think it's going to
just be
just be
sweep
sweep
metric like this.
Yeah. So, it just got stuck here
Yeah. So, it just got stuck here
because it didn't have the
metric. So, we'll just do
that train to
that train to
600k. Very nice.
600k. Very nice.
We will leave that alone and we'll see
We will leave that alone and we'll see
uh we will check on
uh we will check on
that. And I think I want to do
that. And I think I want to do
um just a little bit of an overview of
um just a little bit of an overview of
where we are now with the
where we are now with the
update and uh decide where we want to go
update and uh decide where we want to go
from here today.
There are a few like small things around
There are a few like small things around
on the end of bindings and on various
on the end of bindings and on various
other
things. Lots of small
stuff. I'm trying to think what
stuff. I'm trying to think what
is the way I look at this because what
is the way I look at this because what
we're doing here is we're trying to
we're doing here is we're trying to
prepare for the next release, right?
prepare for the next release, right?
So, the way that I look at um
So, the way that I look at um
pre-release work generally,
oops, the way I look at pre-release work
oops, the way I look at pre-release work
generally is just what are the main
generally is just what are the main
things that are preventing me from being
things that are preventing me from being
comfortable with the state of the code
comfortable with the state of the code
as it is for running final
as it is for running final
experiments. So, like what are the
experiments. So, like what are the
things where I need to do this before
things where I need to do this before
I'm comfortable that we can run
I'm comfortable that we can run
experiments and the results aren't going
experiments and the results aren't going
to get all messed up by anything else I
to get all messed up by anything else I
do.
do.
Um, and then like what are the major
Um, and then like what are the major
things that I know are going to be hard
things that I know are going to be hard
that I don't just immediately know how
that I don't just immediately know how
to do right now and just haven't done
to do right now and just haven't done
yet. So the initial stuff for
that I still don't think that the main
that I still don't think that the main
train file is quite clean enough. It's
train file is quite clean enough. It's
almost
almost
there but like anything that we change
there but like anything that we change
in the main train file right can also
in the main train file right can also
change results. Uh we also we don't have
change results. Uh we also we don't have
I guess the other thing is we don't know
I guess the other thing is we don't know
the results of some of the ablation
the results of some of the ablation
studies
studies
like we don't actually know which of
like we don't actually know which of
some of the new features we have fully
some of the new features we have fully
matter quite
matter quite
yet. So we have
yet. So we have
to probably run some like initial
ablations. We also don't know uh final
ablations. We also don't know uh final
results for the more complex M. So,
results for the more complex M. So,
Impulse Wars, GPU drive, neural MMO, all
Impulse Wars, GPU drive, neural MMO, all
those. Ah, perfect. Spencer's around
those. Ah, perfect. Spencer's around
here, so I get to punt on this for now
here, so I get to punt on this for now
and just go do some stuff on GPU drive,
and just go do some stuff on GPU drive,
which is much
which is much
appreciated. Release work is
appreciated. Release work is
annoying. I'll jump in Discord
Spencer. So, for Twitch folks, this is
Spencer. So, for Twitch folks, this is
uh Hey Spencer, just for Twitch folks
uh Hey Spencer, just for Twitch folks
real quick, this is Let's run the uh
real quick, this is Let's run the uh
let's run the demo
actually
drive. Okay, so this is the SIM we'll be
drive. Okay, so this is the SIM we'll be
looking at today. This is uh Spencer's
looking at today. This is uh Spencer's
port of NYU's driving sim to Puffer.
port of NYU's driving sim to Puffer.
It's very fast and we're just having
It's very fast and we're just having
some trouble training models on it. So,
some trouble training models on it. So,
that's what we want to figure out what
that's what we want to figure out what
is wrong with that
is wrong with that
today. How's it going, Spencer? Hey,
today. How's it going, Spencer? Hey,
doing well, man. Let's uh get this
doing well, man. Let's uh get this
training. Yeah, I think today we should
training. Yeah, I think today we should
be able to solve it. Um, did you run a
be able to solve it. Um, did you run a
sweep?
sweep?
No. Okay. sweep overnight.
No. Okay. sweep overnight.
I didn't know if we wanted to go over
I didn't know if we wanted to go over
try and examine data stuff first or if
try and examine data stuff first or if
we just wanted to go ahead and um let a
we just wanted to go ahead and um let a
sweep and then examine sweep data or
sweep and then examine sweep data or
examine the sweep results to determine
examine the sweep results to determine
if there's a data issue. We can do a
if there's a data issue. We can do a
little bit of both. I'd say we can do a
little bit of both. I'd say we can do a
little bit of both. Um I'm trying to
little bit of both. Um I'm trying to
think how hard it would be to just get a
think how hard it would be to just get a
quick sweep
quick sweep
running
running
initially. Like how hard would it be to
initially. Like how hard would it be to
just like get something running on say
just like get something running on say
even like my spare
even like my spare
box so that we can just have it going?
Um I mean everything's in the release so
Um I mean everything's in the release so
I mean if you just pull it into any box
I mean if you just pull it into any box
and let me let me see how hard that'll
and let me let me see how hard that'll
be. Let's try to do
that.
Yeah. We have to rerun the jank setup
Yeah. We have to rerun the jank setup
thing.
We should just like call it puffer drive
We should just like call it puffer drive
or whatever.
Oh, going forward on the end. Yeah, we
Oh, going forward on the end. Yeah, we
should probably at some point.
M cr freder must be a list of
M cr freder must be a list of
followables. What did I do?
Did you just pull this into a new box or
Did you just pull this into a new box or
where are you right now? Uh box
zero. Is this config? This is does not
zero. Is this config? This is does not
look like a correct config to me.
look like a correct config to me.
No, that's what we had last time. 72 m.
No, that's what we had last time. 72 m.
Yeah. Oh, yeah. This
is
okay. For some reason, it's just the
okay. For some reason, it's just the
string.
I wonder when that uh that
broke. I didn't have any issues with
broke. I didn't have any issues with
that last night when I was just kind of
that last night when I was just kind of
running tests on the I wanted to make
running tests on the I wanted to make
sure I could reproduce the the one
sure I could reproduce the the one
environment test on running one map and
environment test on running one map and
it seemed fine. So, this is kind of
it seemed fine. So, this is kind of
weird.
Did you compile again on your box?
Did you compile again on your box?
Could
have. This seems like a config error.
have. This seems like a config error.
Yeah, this seems like a config screw
up. Make sure I run this right. Buffer
up. Make sure I run this right. Buffer
GPU drive. Yeah, that's fine.
Is this what it's called? It's called
Is this what it's called? It's called
GPU. Should be in GPU drive.GPU drive.
GPU. Should be in GPU drive.GPU drive.
Yeah. And then
Yeah. And then
the beard
does is your setup pot. No module side.
does is your setup pot. No module side.
No module side GPU drive. So it's an
No module side GPU drive. So it's an
import.
Hey
Jason. Yep. Right here. We left the
Jason. Yep. Right here. We left the
Sython
in that no longer exists.
Breakpoint. Yeah, I think I left a
Breakpoint. Yeah, I think I left a
breakpoint in, right? Yeah, that bug
breakpoint in, right? Yeah, that bug
only happens because of breakpoint of
only happens because of breakpoint of
multiprocessing.
multiprocessing.
I don't see a break point
I don't see a break point
in the delpy file of the GPU
in the delpy file of the GPU
drive.py. Did I leave one in there?
drive.py. Did I leave one in there?
That's the only time I ever see that bug
That's the only time I ever see that bug
happen.
happen.
Well, it's any error in like any weird
Well, it's any error in like any weird
uncalled error in multipprocessing. I
think train or is it ve back
think train or is it ve back
end? I should make it case insensitive
end? I should make it case insensitive
fault.
We fixed the seg faults though. Yes, we
We fixed the seg faults though. Yes, we
did.
did.
Maps.
Maps. That should be totally caught by
Maps. That should be totally caught by
the way. Can you do that to like check
the way. Can you do that to like check
the map file exists or whatever? You can
the map file exists or whatever? You can
just do it from the Python side even so
just do it from the Python side even so
before it loads. That way we don't do
before it loads. That way we don't do
this.
Yeah. Let me give you just give me the
Yeah. Let me give you just give me the
command for
command for
now. You can also hop on this. This is
now. You can also hop on this. This is
just popper box zero.
Uh let me just put the command real
Uh let me just put the command real
quick and then I'm loaning you use of
quick and then I'm loaning you use of
this box for a sweep for today.
I was actually thinking of ordering a
I was actually thinking of ordering a
tiny box last night and see what's going
tiny box last night and see what's going
to be a while for the other ones. It's
to be a while for the other ones. It's
not worth it
not worth it
anymore. Like it used to be 6490s I
anymore. Like it used to be 6490s I
think for 25k.
think for 25k.
It's
It's
45090s for 29k
45090s for 29k
now. That's like not worth, right?
now. That's like not worth, right?
6 4090s or four 5090s. The 5090s have
6 4090s or four 5090s. The 5090s have
only been like 10 20% faster in my test
only been like 10 20% faster in my test
so far. So like I don't think that maths
so far. So like I don't think that maths
out in your favor. Yeah, it's like I
out in your favor. Yeah, it's like I
should have bought one when it was uh
should have bought one when it was uh
4090s. I guess that's like on me.
4090s. I guess that's like on me.
Um okay, I put the the two commands and
Um okay, I put the the two commands and
you have to first log into Hugging Face
you have to first log into Hugging Face
and then secondarily then do the
and then secondarily then do the
download command. Ah, what's the stupid
download command. Ah, what's the stupid
login thing? Hugging face.
login thing? Hugging face.
Then you have to drop your token in
Then you have to drop your token in
there. It's like a whole thing.
Otherwise, you get um they think you're
Otherwise, you get um they think you're
like mass scraping their website and
like mass scraping their website and
you'll get banned temporarily.
Okay.
Okay.
Oh, that's hugging face hub. Let me drop
Oh, that's hugging face hub. Let me drop
that in as well.
face is cool. I wish they had better
face is cool. I wish they had better
code.
code.
UnderscoreHub.
UnderscoreHub.
Yeah, also was there for a bit.
Yeah, also was there for a bit.
Oh, does DashHub also work? You may have
Oh, does DashHub also work? You may have
installed something different.
installed something different.
Underscore. Yeah, it's it's it's hugging
Underscore. Yeah, it's it's it's hugging
me face underscore hub. No, it's
me face underscore hub. No, it's
aliased. I think that I'm pretty sure
aliased. I think that I'm pretty sure
that the those are like alias or
that the those are like alias or
whatever and pi pie. So that
whatever and pi pie. So that
specifically people can't do that but
specifically people can't do that but
like hugging face CLI for instance
like hugging face CLI for instance
somebody could get that and like you
somebody could get that and like you
know holds to midicious one or
know holds to midicious one or
whatever that is a thing people do.
Okay. Uh and then you put the command
Okay. Uh and then you put the command
somewhere.
somewhere.
It's the one just above
where in the general chat. General chat
where in the general chat. General chat
within the voice channels.
within the voice channels.
Oh,
Oh,
but we have to log in. Yeah, first you
but we have to log in. Yeah, first you
have to log in. If you did that one,
have to log in. If you did that one,
then is the hugging face CLI download
then is the hugging face CLI download
command.
Do I actually
have Remind me if I remind me to never
have Remind me if I remind me to never
make people make like a puffer account
make people make like a puffer account
or whatever. They're pain in the ass.
token
boxy. So I guess in the GPU drive.py pie
boxy. So I guess in the GPU drive.py pie
and nit. I could do a check real quick
and nit. I could do a check real quick
to see if the folder structure
exists and then shoot out a warning. Uh
exists and then shoot out a warning. Uh
you should just like if not
you should just like if not
os.path.exist of the full map path in
os.path.exist of the full map path in
like the init function then you should
like the init function then you should
just raise an API
error. But what I have to make do I have
error. But what I have to make do I have
to make this directory or whatever?
to make this directory or whatever?
Yeah, if you don't have the directory
Yeah, if you don't have the directory
Oh, no, no, no. For the download, you
Oh, no, no, no. For the download, you
can just you can just press download.
can just you can just press download.
No, no, you don't have to do anything.
No, no, you don't have to do anything.
It'll it'll it'll just spawn one.
It'll it'll it'll just spawn one.
We do have We have uh I think you know
We do have We have uh I think you know
this, right? We have puffer lip usage
this, right? We have puffer lip usage
error.
error.
I'm unaware of that. Okay, so I made I I
I'm unaware of that. Okay, so I made I I
still think this is an okay idea. I made
still think this is an okay idea. I made
one specific um like puffer lip
one specific um like puffer lip
exception thing that I use everywhere
exception thing that I use everywhere
where it's just like hey it's just like
where it's just like hey it's just like
a you screwed up right
a you screwed up right
because like when you raise a specific
because like when you raise a specific
exception instead of an assert it's like
exception instead of an assert it's like
it's like a you screwed up not I screwed
it's like a you screwed up not I screwed
up.
up.
So yeah. So you have an exception that's
So yeah. So you have an exception that's
just like a puffer exception class.
just like a puffer exception class.
Yeah.
Is there any documentation of that
Is there any documentation of that
anywhere?
anywhere?
You need documentation for something
You need documentation for something
that's like 10 lines.
that's like 10 lines.
Well, I don't know what it's called. Is
Well, I don't know what it's called. Is
it called puffer exception? Oh, it's
it called puffer exception? Oh, it's
just open you open
just open you open
pufferlib.py. It's in pufferlib.py.
pufferlib.py. It's in pufferlib.py.
All right.
All right.
I wish everything could just be in
I wish everything could just be in
pufferlib.py, but that would be a little
pufferlib.py, but that would be a little
bit excessive.
I'll get this thing running in the
I'll get this thing running in the
meantime.
Would make me very happy to be able to
Would make me very happy to be able to
just merge
just merge
all the files API usage error.
Still said false.
Did you run the command that creates the
Did you run the command that creates the
binaries. This now you got to run the
binaries. This now you got to run the
command that creates the binaries and
command that creates the binaries and
set the binary folder
structure. So that's under resources/GPU
structure. So that's under resources/GPU
drive/binaries.
drive/binaries.
Yeah, we got to make this part of like
Yeah, we got to make this part of like
the of the M class or
whatever. Error
whatever. Error
processing file entity DT type is not
processing file entity DT type is not
defined. Uh
defined. Uh
oh. So that's a
oh. So that's a
problem cuz the Syon, right?
Yes, that's a new problem without the
Yes, that's a new problem without the
Syon. Mhm. Wait, this does load
map. But does it do anything?
Save map binary. This returns
Save map binary. This returns
entities. This doesn't this never gets
entities. This doesn't this never gets
called in a way that you need this. No,
called in a way that you need this. No,
it does not ever actually. You don't
it does not ever actually. You don't
have to get any values from load map. I
have to get any values from load map. I
can just do this. I don't believe
we can just fix this right away cuz I
we can just fix this right away cuz I
don't think load map even.
There we go.
There we go.
Let me not cover my chat.
Let me not cover my chat.
I don't think it is. I think it's just
I don't think it is. I think it's just
called in process maps and doesn't go
called in process maps and doesn't go
anywhere. Yeah.
It would be good to double check. Oh, I
It would be good to double check. Oh, I
forgot. You're in a box. You can't check
forgot. You're in a box. You can't check
rendering, but I guess you'll find out
rendering, but I guess you'll find out
soon enough if it works.
soon enough if it works.
Okay, so 300k step per second training
Okay, so 300k step per second training
on defaults on this box. I think it goes
on defaults on this box. I think it goes
to 400 in like two seconds, unless it
to 400 in like two seconds, unless it
just stays there.
just stays there.
370 on a 4090.
We also have not tried AM or compile or
We also have not tried AM or compile or
anything for your stuff yet.
Okay. Uh, is the metric set? Actually,
sweep sweep metric is not set. Is there
sweep sweep metric is not set. Is there
a score variable for GPU drive? Yes.
a score variable for GPU drive? Yes.
Okay. Then we then good. That's the nice
Okay. Then we then good. That's the nice
thing about that is then you don't have
thing about that is then you don't have
to set anything.
So, off-road
So, off-road
collision, we should set max to be zero,
right?
Because
Because
Yeah. Yes. So, it's reversed. Um, well,
Yeah. Yes. So, it's reversed. Um, well,
actually, here's the thing. When you're
actually, here's the thing. When you're
sweeping that, I think you're going to
sweeping that, I think you're going to
get unfairly unfair results possibly.
get unfairly unfair results possibly.
Why? Um,
Why? Um,
completion
rate. It still has collisions enabled,
rate. It still has collisions enabled,
right?
Yes. Well, in the way that you're just
Yes. Well, in the way that you're just
respawning now.
respawning now.
Yes. But then the the completion metric
Yes. But then the the completion metric
is do you get to the goal at least once
is do you get to the goal at least once
within 91 steps? Yes, that's correct. So
within 91 steps? Yes, that's correct. So
nothing that you change with the reward
nothing that you change with the reward
would be able to affect that
would be able to affect that
metric other than making it easier or
metric other than making it easier or
harder to
learn,
learn,
right? Like it can't skip over obstacles
right? Like it can't skip over obstacles
or anything like that.
or anything like that.
No, not anymore. Well, then there there
No, not anymore. Well, then there there
should be no unfair advantages possible.
We're going to not batch download
We're going to not batch download
command. Are we do we want do we want to
command. Are we do we want do we want to
make that as just part of the
make that as just part of the
uh the setup.py now?
Uh I wouldn't do setup.py. I would do it
Uh I wouldn't do setup.py. I would do it
when you when you first go to
when you when you first go to
instantiate GPU drive because it'll be
instantiate GPU drive because it'll be
in a driver end. So when it hits the
in a driver end. So when it hits the
driver end, it'll check for it and it'll
driver end, it'll check for it and it'll
make
make
them. That means we'll have to not have
them. That means we'll have to not have
it hosted on hugging face or we'll have
it hosted on hugging face or we'll have
to prompt the user for their login.
You don't want to have extra setup stuff
You don't want to have extra setup stuff
like this, man.
like this, man.
Do we just want
Do we just want
to have some type of written
to have some type of written
documentation where we just Povert comes
documentation where we just Povert comes
with a certain amount of maps already in
with a certain amount of maps already in
it's in the
it's in the
thing and then if you want more maps
thing and then if you want more maps
this is how you can do it. Uh
this is how you can do it. Uh
possibly we could also just like you
possibly we could also just like you
don't have to deal with like the whole
don't have to deal with like the whole
hugging face download process. Possibly.
hugging face download process. Possibly.
We do want to make that process easy
We do want to make that process easy
though. That's like the main way you
though. That's like the main way you
lose users.
What we doing? 50 mil to 200
mil seems
mil seems
fine. Scale equals time. Yes.
and we will see if this does anything.
Four and a half minutes per experiment.
We'll see. Well, I think it will go up
We'll see. Well, I think it will go up
to like 15 minutes if it's on the high
to like 15 minutes if it's on the high
end now. Yeah, we're going to have to
end now. Yeah, we're going to have to
improve perf anyways. Get to a million.
I think once we actually have like good
I think once we actually have like good
driving models, it'll get substantially
driving models, it'll get substantially
easier.
Okay.
I swear sometimes I find myself like
I swear sometimes I find myself like
whenever I'm typing in in Neoven, it
whenever I'm typing in in Neoven, it
just like spawns like text every once in
just like spawns like text every once in
a while that I just feel like I didn't
a while that I just feel like I didn't
type. It's probably
type. It's probably
um like Super Maven or something
um like Super Maven or something
catching up. I wouldn't be surprised.
catching up. I wouldn't be surprised.
And it's always at the top of the file.
And it's always at the top of the file.
It's like at the very very very tippy
It's like at the very very very tippy
top.
top.
Yeah. Yeah. I get that a lot as well.
Yeah. Yeah. I get that a lot as well.
It's weird.
API usage error is not defined. Did I
API usage error is not defined. Did I
type it wrong?
So, we got 0.9 above 0.9 even on um
So, we got 0.9 above 0.9 even on um
mazes overnight.
mazes overnight.
Oh,
Oh,
ridiculous. So, there's actually quite a
ridiculous. So, there's actually quite a
bit of
bit of
um there's quite a bit of
um there's quite a bit of
play, I would
play, I would
say. I guess I probably just called the
say. I guess I probably just called the
meta sweep maze or something by
meta sweep maze or something by
accident.
Can't be 40 meta experiments already.
Can't be 40 meta experiments already.
Can
there a so it's capital API and then
there a so it's capital API and then
case user?
Oh well, I will wait for them. Uh, but
Oh well, I will wait for them. Uh, but
this is good news. Let me send this to
this is good news. Let me send this to
Aaron. He'll be happy.
I was getting a little concerned about
I was getting a little concerned about
that. It's good. But my uh the sweep
that. It's good. But my uh the sweep
just rediscovered like the good policy
just rediscovered like the good policy
immediately.
immediately.
Nice.
Yeah, this is going to be this update's
Yeah, this is going to be this update's
going to be really good because we're
going to be really good because we're
just going to soda every single client's
just going to soda every single client's
end instantly and um you know when you
end instantly and um you know when you
set soda on clients ends that they've
set soda on clients ends that they've
been working on for several months and
been working on for several months and
have like and then you beat it by a mile
have like and then you beat it by a mile
um they are happy and then you have more
um they are happy and then you have more
time for dev on all the other
Actually, I think I should run this on
Actually, I think I should run this on
the other client's M just to give them a
the other client's M just to give them a
little nudge, you know. I should do that
little nudge, you know. I should do that
today. We get that stuff signed,
today. We get that stuff signed,
right?
right?
Cuz this is totally going to set soda
Cuz this is totally going to set soda
again, right?
again, right?
From the latest ones. Absolutely right.
From the latest ones. Absolutely right.
Like, well, how wouldn't this set?
Like, well, how wouldn't this set?
What? Oh, the clean
What? Oh, the clean
puffer. I let there were some demons
puffer. I let there were some demons
battled over that decision. Let's just
battled over that decision. Let's just
say
say
I was trying to figure out what thing to
I was trying to figure out what thing to
import in order to get the clean puffer.
import in order to get the clean puffer.
No, the um Oh, I thought you meant that
No, the um Oh, I thought you meant that
we have a a class for clean puffer.
No, I meant
for just getting my warnings to be
for just getting my warnings to be
proper.
proper.
I know you said it was input for lip,
I know you said it was input for lip,
but I didn't know if it was like defined
but I didn't know if it was like defined
there per
se.
Yeah. But like the trainer class has
Yeah. But like the trainer class has
literally been
literally been
um it's been like the the bell curve IQ
um it's been like the the bell curve IQ
meme where it's like you know the idiot
meme where it's like you know the idiot
and the midwit and like the thousand IQ
and the midwit and like the thousand IQ
or whatever.
That's a good result. Okay. Then this
That's a good result. Okay. Then this
means, by the way, if we're doing this
means, by the way, if we're doing this
immediately, this absolutely means that
immediately, this absolutely means that
if a sweep doesn't fix GPU drive, it's a
if a sweep doesn't fix GPU drive, it's a
data
issue because there's just no way in
issue because there's just no way in
hell that we soda everything and not GPU
hell that we soda everything and not GPU
drive.
Okay, I now have a warning that says
Okay, I now have a warning that says
like GPU drive maps not found. Please
like GPU drive maps not found. Please
follow the readme instructions to the
follow the readme instructions to the
maps or something right now.
maps or something right now.
So this happens if you do not have the
So this happens if you do not have the
binaries map structure.
binaries map structure.
Good. I
Good. I
mean arguably I could probably make it
mean arguably I could probably make it
go one layer further and just make sure
go one layer further and just make sure
that it has at least a map and not just
that it has at least a map and not just
the folder structure. Well, you could
the folder structure. Well, you could
check it out. I'll I'll whatever. As
check it out. I'll I'll whatever. As
long as there's something for now and
long as there's something for now and
we'll fiddle with it. We have the sweep
we'll fiddle with it. We have the sweep
running. I think that the goal is then
running. I think that the goal is then
we we just let this run and we start
we we just let this run and we start
looking at GPU drive anyways because
looking at GPU drive anyways because
like something's weird and I want to
like something's weird and I want to
like understand some of the data and
like understand some of the data and
stuff
anyways cuz I want to match NYU's
anyways cuz I want to match NYU's
results but then I like the first thing
results but then I like the first thing
is we match their results and then the
is we match their results and then the
next thing is we blow it out of the
next thing is we blow it out of the
water and make by like making it way
water and make by like making it way
faster and stuff.
I deleted. I have to go download it
again. Should have just copied it. I
again. Should have just copied it. I
should have just moved the folder, not
should have just moved the folder, not
deleted the folder.
I'm going to start pulling
I'm going to start pulling
up GPU drive code to look
at 1500 liner.
Yeah, I definitely see a bunch of stuff
Yeah, I definitely see a bunch of stuff
that could go wrong.
That could go what? Could go wrong.
Okay, you do have zeros inside steering
Okay, you do have zeros inside steering
and acceleration,
which is good.
which is good.
Yeah, there's do
nothings when you've had the stream
nothings when you've had the stream
pulled up. I haven't had my microphone
pulled up. I haven't had my microphone
be clipping on Twitch, right? Or
be clipping on Twitch, right? Or
wherever.
your microphone like the sound quality
your microphone like the sound quality
like it hasn't clipping is you know like
like it hasn't clipping is you know like
it's like it cuts off the start or the
it's like it cuts off the start or the
end of what you're saying.
Okay, let me mute you on Discord and
Okay, let me mute you on Discord and
then hear you on stream. I was just
then hear you on stream. I was just
wondering if you'd noticed it.
Not in recent. Okay, cool. I know. I
Not in recent. Okay, cool. I know. I
just wanted to know cuz a few days ago I
just wanted to know cuz a few days ago I
like I messed with all the settings
like I messed with all the settings
because I have all this maintenance work
because I have all this maintenance work
going on. So it's actually like really
going on. So it's actually like really
noisy in the
background but it like it cuts it all
background but it like it cuts it all
out.
No. Yeah, you're fine. All right. Good.
No. Yeah, you're fine. All right. Good.
Thank you. I will continue reading this
Thank you. I will continue reading this
code.
I mean really the only thing we care
I mean really the only thing we care
about the thing that we care about most
about the thing that we care about most
is going to be the compute observations
is going to be the compute observations
thing for
sure what folder do
you have like normalized.
you have like normalized.
Wait, what the hell?
All right. What are you uh panicking
All right. What are you uh panicking
about? Just the
about? Just the
normalization.
normalization.
So, you have like these gigantic min and
So, you have like these gigantic min and
max goal cord
max goal cord
things. Is that actually Do those get
things. Is that actually Do those get
used? Yeah.
used? Yeah.
Like that is actually the range is like
Like that is actually the range is like
a th00and to a thousand.
a th00and to a thousand.
That is what they use.
That is what they use.
Is that how big the map sizes are
Is that how big the map sizes are
or did they just have some big ass
or did they just have some big ass
number?
I'd say on average the map sizes are
I'd say on average the map sizes are
probably more in the range of hundreds
probably more in the range of hundreds
to 100
to 100
after after you switch them from
uh like what's it
uh like what's it
called? So originally the coordinate
called? So originally the coordinate
systems on each map was different. So
systems on each map was different. So
and did they normalize by that value as
and did they normalize by that value as
well? So they do that one time so that
well? So they do that one time so that
everything is at least in the zero
everything is at least in the zero
coordinate in a zerobased coordinate
coordinate in a zerobased coordinate
system because they're subtracting the
system because they're subtracting the
mean off all the values one time ahead
mean off all the values one time ahead
of time. And then this is a second round
of time. And then this is a second round
of um within that new zero coordinate
of um within that new zero coordinate
based map.
based map.
your goal is, you know, X distance away
your goal is, you know, X distance away
from you and the maps are roughly in
from you and the maps are roughly in
like the around hundreds of 100 by
hundreds original relative
hundreds original relative
positions. Rotate to the ego vehicles
positions. Rotate to the ego vehicles
frame.
the rotation
matrix.
Wait, is
this cosine sign
Is this just rotating in the other
direction? Are you rotating clockwise?
It should be rotating into the
It should be rotating into the
perspective
perspective
of the ego agent.
of the ego agent.
Is this something that is visualized in
Is this something that is visualized in
the um the viewer or no?
Does the rotation this rotation matrix
Does the rotation this rotation matrix
doesn't have the negative where I would
doesn't have the negative where I would
expect it to be, but it could just be
expect it to be, but it could just be
that it's rotating in the other
that it's rotating in the other
direction.
How the renderer looks at it is using
How the renderer looks at it is using
the same type of rotation scheme. Okay.
the same type of rotation scheme. Okay.
So if so if this were wrong, we would
So if so if this were wrong, we would
see it in the renderer.
If this were wrong either well the
If this were wrong either well the
renderer also uses a similar
scheme. So if you're looking at
scheme. So if you're looking at
observations what which which one are
observations what which which one are
you looking at the relative car
you looking at the relative car
positions? So there's rotate to ego
positions? So there's rotate to ego
vehicles frame right here. I see this
vehicles frame right here. I see this
rotation matrix and it's not the
rotation matrix and it's not the
rotation matrix I would
expect in the viewer. I show from the
expect in the viewer. I show from the
perspective of the agent when I'm when
perspective of the agent when I'm when
I'm you hold shift and you actually see
I'm you hold shift and you actually see
the observations. It will show the car
the observations. It will show the car
and the position that it thinks it's in
and the position that it thinks it's in
as well as the rotation that that car as
as well as the rotation that that car as
well as the direction that that car is
well as the direction that that car is
facing relative to what its position is.
facing relative to what its position is.
Have you seen all like the ghost cars
Have you seen all like the ghost cars
that are like in weird positions? Have
that are like in weird positions? Have
you seen that appear in their viewer or
you seen that appear in their viewer or
only in yours?
only in yours?
Well, you see, here's the fun fact.
Well, you see, here's the fun fact.
Because I have the new machine and
Because I have the new machine and
before I don't know if I can actually
before I don't know if I can actually
run their thing on my
run their thing on my
MacBook, I have no viewer of their
MacBook, I have no viewer of their
thing. So, that was something that I was
thing. So, that was something that I was
going to ask you to see if you could do
going to ask you to see if you could do
is to
is to
compare the visualizer on theirs to
compare the visualizer on theirs to
mine.
That would be a good idea. Can we at
That would be a good idea. Can we at
least It's a bit of a chore to get their
least It's a bit of a chore to get their
thing running. Can we at least like pull
thing running. Can we at least like pull
up a map that has some weird cars that
up a map that has some weird cars that
we wouldn't
we wouldn't
expect? That would probably be a good
expect? That would probably be a good
idea to like see if they're actually
idea to like see if they're actually
there.
Should we be able to see it in the data
Should we be able to see it in the data
file or is the data file a mess?
The data file. Do you see what I'm
The data file. Do you see what I'm
saying though? Like like if we find a
saying though? Like like if we find a
map that has weird cars that like seem
map that has weird cars that like seem
sus and we see if it's actually like
sus and we see if it's actually like
that's how the data just is or if
that's how the data just is or if
there's an issue with the way that it's
there's an issue with the way that it's
being rendered or whatever.
being rendered or whatever.
The data files are not very friendly to
The data files are not very friendly to
look at. They're like giant JSONs. Okay.
look at. They're like giant JSONs. Okay.
So
then we can at least get like the raw
then we can at least get like the raw
coordinates of stuff and see if that
coordinates of stuff and see if that
makes sense like in the end code.
makes sense like in the end code.
I mean, you can if you want to spawn
like you could print out the the spawn
like you could print out the the spawn
coordinates of cars, save them
coordinates of cars, save them
somewhere, and then try and command F to
somewhere, and then try and command F to
go find them in the JSON
file. Eval
So this is map
zero are
zero are
there. So this looks jank, right? Like
there. So this looks jank, right? Like
the fact that these cars are
here cuz this is like a roundabout and
here cuz this is like a roundabout and
like it's a solid.
like it's a solid.
But we can see if like these cars are
But we can see if like these cars are
actually here, I guess,
right? Or why they The fact that there's
right? Or why they The fact that there's
a car on that outer edge is sus.
a car on that outer edge is sus.
One car. There's like a bunch, right?
One car. There's like a bunch, right?
No, but like outside of the entire grid
No, but like outside of the entire grid
coordinate cuz I based I base the edges
coordinate cuz I based I base the edges
of the map based on the cars. Okay. So,
of the map based on the cars. Okay. So,
like we should then from that Oh, no. I
like we should then from that Oh, no. I
based it off of Hold up. No, I based it
based it off of Hold up. No, I based it
off of the road edges, not the cars. So,
off of the road edges, not the cars. So,
that could possibly happen.
It's a perfect
test. You just go to the C
Okay. So, here we have the
Okay. So, here we have the
C. What's the
C. What's the
uh zoom? I don't have controls in this
uh zoom? I don't have controls in this
for some reason. Are you on eval?
Yeah, you should be able to zoom in and
Yeah, you should be able to zoom in and
do all sorts of things. Yeah, I can't.
do all sorts of things. Yeah, I can't.
Weird.
I could the other
I could the other
day right on local.
Scrolling isn't doing anything.
Nope. This bot.
What about the other controls like your
What about the other controls like your
left and right to increase acceleration
left and right to increase acceleration
or steering? Nothing really seems to
or steering? Nothing really seems to
respond.
respond.
But it doesn't super matter. What
But it doesn't super matter. What
matters for now is that we get
matters for now is that we get
um we put like a break point and we
um we put like a break point and we
figure some stuff
figure some stuff
out. Where would I go to like where
out. Where would I go to like where
would you go to like figure out
would you go to like figure out
where where things could be screwy with
where where things could be screwy with
this
in terms of car spawning?
in terms of car spawning?
Yeah, like where the car positions are
Yeah, like where the car positions are
and stuff. That would be set active
and stuff. That would be set active
cars, set active
agents. It's a one of the functions
agents. It's a one of the functions
that's called in
that's called in
it like probably maybe hereish. Mhm.
Okay. So, we
have 64
have 64
objects. 63 I
guess. Two
cars. Wait. I less than num objects
cars. Wait. I less than num objects
minus one and M num cars less than max
cars. I'm confused what this
does.
does.
So there are the number of objects.
So there are the number of objects.
Oh, is this just making sure there
Oh, is this just making sure there
aren't more than 64 like 64 cars or
aren't more than 64 like 64 cars or
whatever? It makes sure that there
whatever? It makes sure that there
aren't more than 64 cars and also not
aren't more than 64 cars and also not
more
than how many cars exist. Okay.
So and then the last car which is for
So and then the last car which is for
num objects minus one is always going to
num objects minus one is always going to
be an active agent.
be an active agent.
And this is and this is only for setting
And this is and this is only for setting
the
the
uh the cars that the neural net's
uh the cars that the neural net's
driving though, not all the gray cars,
driving though, not all the gray cars,
right? Both. This this determines
right? Both. This this determines
setting up
setting up
static cars. This this tells you static
static cars. This this tells you static
cars, active cars, and static expert
cars. Static car indices.
confused because this is this is only
confused because this is this is only
looping over two
cars, right?
We go to
353. No, you're not looping over two
353. No, you're not looping over two
cars. Num cars is the
uh is how many cars are being added to
uh is how many cars are being added to
itself over time. Like it's it's
itself over time. Like it's it's
incrementing. Num cars is an
incrementing. Num cars is an
incrementing variable in that loop.
Oh, hang
Oh, hang
on. Run
this. Mark as expert.
Yeah. So to understand in their data set
Yeah. So to understand in their data set
they have cars that are marked as expert
they have cars that are marked as expert
which are the vehicles that have like
which are the vehicles that have like
kind of some weird conditions that occur
kind of some weird conditions that occur
like some of these cars were cars that
like some of these cars were cars that
could have been active agents but as
could have been active agents but as
part of their expert trajectory run
part of their expert trajectory run
off-road or do something like or
off-road or do something like or
actively collide with someone else or
actively collide with someone else or
something along those lines. So they as
something along those lines. So they as
part of the JSON pre-processing effort
part of the JSON pre-processing effort
decided to make those what are called
decided to make those what are called
experts and should be just a static car
experts and should be just a static car
that moves on its own that has no
that moves on its own that has no
nothing to do with collisions or
nothing to do with collisions or
off-roading in terms of how the logging
off-roading in terms of how the logging
would recognize it as an agent.
would recognize it as an agent.
So they're not really experts because
So they're not really experts because
they're doing weird stuff.
Yeah, some move some of their
Yeah, some move some of their
trajectories seemingly are just like
trajectories seemingly are just like
they stay in place.
they stay in place.
and then disappear because they're still
and then disappear because they're still
following their trajectory path which is
following their trajectory path which is
probably like stay in place for like 20
probably like stay in place for like 20
time steps and then it's then it goes
time steps and then it's then it goes
probably off to negative 10,000 land
probably off to negative 10,000 land
because the trajectory positions are
because the trajectory positions are
originally based off of like a cars how
originally based off of like a cars how
that car is visible to the like the
that car is visible to the like the
primary
car and if the trajec that car is no
car and if the trajec that car is no
longer visible it will just fly into
longer visible it will just fly into
like 10,000 and may respawn again as
like 10,000 and may respawn again as
Well, based if it's visible
again, how do I figure out what position
again, how do I figure out what position
all these cars are supposed to be at? Uh
all these cars are supposed to be at? Uh
there's another function right after
there's another function right after
that or was before. I think it's before.
that or was before. I think it's before.
Go hold up arrow. It's called set start
Go hold up arrow. It's called set start
position or something along those lines.
Yeah, set start position. Okay. So then
Yeah, set start position. Okay. So then
this so these have the absolute chords
this so these have the absolute chords
of all the agents here.
those the positions that you're getting
those the positions that you're getting
from trajectory XYZ come directly from
from trajectory XYZ come directly from
the JSON.
the JSON.
Okay. So then this should be so really
Okay. So then this should be so really
all I need to
do is just like print
out well hang on these seem like
out well hang on these seem like
normalized or something
normalized or something
because XYZ
are the
same valid equals some big negative
same valid equals some big negative
number. Was this
invalid? I see unique goal position. No
invalid? I see unique goal position. No
unique
unique
goal why. Yeah, I see unique goal
goal why. Yeah, I see unique goal
position wise.
Okay,
so we have um some stats
here. Okay,
here. Okay,
it's kind of weird.
Soative 10,000s is are invalid
Soative 10,000s is are invalid
positions. Anything that starts at a
positions. Anything that starts at a
10,000 at position zero are not
10,000 at position zero are not
considered entities in the map. They're
considered entities in the map. They're
taken out of consideration. It's not
taken out of consideration. It's not
like uniform though. Like there's stuff
like uniform though. Like there's stuff
that's valid at 49, 50, 53.
Is that at time step or is that the is
Is that at time step or is that the is
that um cars? So it's on a net I just
that um cars? So it's on a net I just
printed out. No, no, no. But what do the
printed out. No, no, no. But what do the
numbers represent? Are that is that time
numbers represent? Are that is that time
steps should be independent cars?
Yeah. entity I index
Yeah. entity I index
I position
and kind of weird that the Z is a little
and kind of weird that the Z is a little
different in all these
the Z's eventually get hard forced to
the Z's eventually get hard forced to
one is this in meters or like okay cuz
one is this in meters or like okay cuz
here we have we've got like 4,000gative
-3,000 and then we go back to having
-3,000 and then we go back to having
valid looking agents
here up to
here up to
101. So the ones that are in those range
101. So the ones that are in those range
is because they've already had their the
is because they've already had their the
mean has been subtracted from their
mean has been subtracted from their
values
values
and this in order to keep everything on
and this in order to keep everything on
the zero coordinate into a zerobased
the zero coordinate into a zerobased
coordinate map system. What? Like what
coordinate map system. What? Like what
are these? So that like
are these? So that like
So some things are
skipped. I'm trying to think what the
skipped. I'm trying to think what the
easiest thing to do here.
So, if you wanted cars to no longer
So, if you wanted cars to no longer
disappear, there's a very simple thing
disappear, there's a very simple thing
that it could be that could happen. I
that it could be that could happen. I
mean, all you have to do is turn off the
mean, all you have to do is turn off the
stat the experts from moving in step.
stat the experts from moving in step.
Well, I want to see if like the
Well, I want to see if like the
positions
positions
actually make sense. Is there
actually make sense. Is there
like Okay, if I just do
If you wanted to in render, you could
If you wanted to in render, you could
just draw a hard line on the
just draw a hard line on the
zero like going up at the origin like a
zero like going up at the origin like a
like a graph. So you can roughly see
like a graph. So you can roughly see
where things are because you you have a
where things are because you you have a
sense of spacing because the the graph
sense of spacing because the the graph
already isn't broken up into squares of
already isn't broken up into squares of
5 meters by 5 meters.
some weird thing like this.
Uh okay. So this is just like
I guess
I guess
um I guess we have to like put a break
um I guess we have to like put a break
point after this, right?
314. 13.
Yeah. So this is not drawing anything.
one is probably totally wrong. I don't
one is probably totally wrong. I don't
think you can just call draw rectangle
think you can just call draw rectangle
at that point in time cuz you don't even
at that point in time cuz you don't even
have like a a client or anything.
I'm just trying to like get a sense of
I'm just trying to like get a sense of
like if I just render the raw you see
like if I just render the raw you see
what I'm trying to do like if I get the
what I'm trying to do like if I get the
raw
raw
coordinates like do they look like the
coordinates like do they look like the
they look reasonable compared to the
they look reasonable compared to the
actual
actual
map. Okay there. So this is what I was
map. Okay there. So this is what I was
trying to
trying to
do. So this
do. So this
is this is
is this is
what this map is supposed to look like
what this map is supposed to look like
with all the
with all the
entities you
see.
see.
Okay. Give you this screenshot.
Oh,
now just like I comment
now just like I comment
this
this. So keep in mind entities are both
this. So keep in mind entities are both
cars and
roads. So we have this circle. It's like
roads. So we have this circle. It's like
a right angle. It's like a T with the
a right angle. It's like a T with the
entities. Like a short T on one
side. So that
side. So that
looks There's supposed to be some stuff
looks There's supposed to be some stuff
back
back
here, I
here, I
think. Hang
on. This has got to be like flipped,
on. This has got to be like flipped,
right?
This looks like it's horizontally
This looks like it's horizontally
flipped. Yeah. So, I see these two cars
flipped. Yeah. So, I see these two cars
right here. And then I see two dots
right here. And then I see two dots
right
right
here. Right. One,
two. And then how many dots? One, two,
two. And then how many dots? One, two,
three, four, five. Two, three, four,
three, four, five. Two, three, four,
five.
I mean, at least we see here that like
I mean, at least we see here that like
there is this map is actually supposed
there is this map is actually supposed
to be like a T with the stuff that's
there. It's just weird that this is the
there. It's just weird that this is the
actual data, right? Like
actual data, right? Like
Like what is this supposed to
be? Like this looks like some sort of
be? Like this looks like some sort of
like roundabout type thing, but then
like roundabout type thing, but then
there are a bunch of cars over here like
there are a bunch of cars over here like
as if there was another road.
Well, you have to remember a lot of
Well, you have to remember a lot of
things are also taken out, right?
things are also taken out, right?
Mhm.
Like if you were to change your drawing
to let's see if you were to change it
to let's see if you were to change it
such that you
such that you
are how does this work?
You can specify your drawing to only
You can specify your drawing to only
have a type and then you can see the car
have a type and then you can see the car
positions versus other things because I
positions versus other things because I
think you may be
think you may be
seeing the start of some road points as
seeing the start of some road points as
well.
well.
The start of some road
The start of some road
points. Okay. Because entities includes
points. Okay. Because entities includes
both roads
and Okay. So like what is it? It's um if
and Okay. So like what is it? It's um if
E.ype is
E.ype is
so if you change your draw rectangle
so if you change your draw rectangle
just to have a condition. Yeah. What if
just to have a condition. Yeah. What if
type is greater than three or if type is
type is greater than three or if type is
less than three you'll see um only cars.
less than three you'll see um only cars.
Let's do this. Sorry less than less than
four. It should be less than or equal to
four. It should be less than or equal to
three or less than four.
annoying
thing.
Okay, these are the cars.
do this.
Yep.
Go. So, these are our
cars and we want to see if this
cars and we want to see if this
matches. If this matches the
map, let's compare.
map, let's compare.
Let's see what else would there be that
Let's see what else would there be that
could possibly be tripped out of this.
could possibly be tripped out of this.
Yeah. So, there are five cars and then
Yeah. So, there are five cars and then
two
two
cars. Okay. And then there are no cars
cars. Okay. And then there are no cars
in this
in this
circle. Then it's
Five. It looks like there's 10 on that
Five. It looks like there's 10 on that
top
lane. Yeah. So, this matches
lane. Yeah. So, this matches
exactly. And then over
exactly. And then over
here, yeah, this matches.
here, yeah, this matches.
It looks to me like the cars are in fact
It looks to me like the cars are in fact
in the right
in the right
spot in the loading here. Mhm. Which is
spot in the loading here. Mhm. Which is
good to know because then I I don't
good to know because then I I don't
know, maybe other road lines need to be
know, maybe other road lines need to be
rendered or something cuz like it
rendered or something cuz like it
doesn't make much sense to look at right
doesn't make much sense to look at right
now like the where some of these cars
now like the where some of these cars
are and
stuff.
stuff.
Okay. So, it's not where the physical
Okay. So, it's not where the physical
cars
cars
are. Get the um figure out why
are. Get the um figure out why
the the renderer is not letting me do
the the renderer is not letting me do
stuff with it.
stuff with it.
That would probably be a good start
That would probably be a good start
because that's really odd. And
because that's really odd. And
unfortunately, I'm in a weird things. I
unfortunately, I'm in a weird things. I
was just messing with my Docker because
was just messing with my Docker because
it was being was acting up on my
it was being was acting up on my
computer. Yeah. So, it like deleted
computer. Yeah. So, it like deleted
Nvidia CUDA toolkit. So, I'm redoing
Nvidia CUDA toolkit. So, I'm redoing
that right now to find out why that's
that right now to find out why that's
going on.
So arrow keys aren't doing anything for
So arrow keys aren't doing anything for
you. Well, it also opens two windows.
This July right
here. Oh, is this because of the new
here. Oh, is this because of the new
changes when client's no longer its own
changes when client's no longer its own
thing? Yes.
Okay,
Okay,
perfect. That's fixed. Now,
all right. Now, okay. Now, this is
all right. Now, okay. Now, this is
there's shift and then what is it?
there's shift and then what is it?
Control. So yeah, there's shift to go
Control. So yeah, there's shift to go
see the obs and then there's control to
see the obs and then there's control to
go to the third party perspective, which
go to the third party perspective, which
would not be very fun at the moment
would not be very fun at the moment
because you're just going to like your
because you're just going to like your
brain's going to explode.
And then there's right arrow to increase
And then there's right arrow to increase
the acceleration index. It's not
the acceleration index. It's not
necessarily like just an increase
necessarily like just an increase
acceleration. It's just going throughout
acceleration. It's just going throughout
the index in the arrays. So if you want
the index in the arrays. So if you want
steering to go straight, it would be
steering to go straight, it would be
steering six. So you press right arrow
steering six. So you press right arrow
six times.
six times.
How do you take Wait, what's the take
How do you take Wait, what's the take
over thing?
over thing?
You You're already to take over. Just
You You're already to take over. Just
press right
arrow. So, if you go to right arrow
arrow. So, if you go to right arrow
enough times to steering six, now it's
enough times to steering six, now it's
perfectly straight. And then zero will
perfectly straight. And then zero will
basically stop the car.
basically stop the car.
Um so if you go acceleration of I think
Um so if you go acceleration of I think
three it should
three it should
be it will maintain the spawning speed
be it will maintain the spawning speed
that it should
that it should
have with whatever velocity it was given
have with whatever velocity it was given
in the
beginning and it's a little so I got the
beginning and it's a little so I got the
goal once I guess. Yeah.
And then you're respawning also mid the
And then you're respawning also mid the
second you hit the goal
too.
Okay. I mean, specifically, it's weird.
Okay. I mean, specifically, it's weird.
We We saw it solve this map and then get
We We saw it solve this map and then get
like and then go just straight line and
like and then go just straight line and
screw up on when we tried to train it on
screw up on when we tried to train it on
a bunch of maps, right? Yeah. The second
a bunch of maps, right? Yeah. The second
you go to multiple maps and I ran an
you go to multiple maps and I ran an
experiment this morning just trying to
experiment this morning just trying to
do two maps, it also just like couldn't
do two maps, it also just like couldn't
learn it. So, it can't learn two maps.
learn it. So, it can't learn two maps.
Yeah, definitely there's some data issue
Yeah, definitely there's some data issue
then. Okay, we have to figure out what
then. Okay, we have to figure out what
it is.
I will check one last time here to make
I will check one last time here to make
sure that we haven't just like solved it
sure that we haven't just like solved it
while I've been
while I've been
in the sweep.
in the sweep.
Yeah. So, the best we have so far is 47
Yeah. So, the best we have so far is 47
and the cap I reached is like 6.59 61
and the cap I reached is like 6.59 61
and then it just hard it just turns into
and then it just hard it just turns into
a straight line.
Okay.
It fails with two M's, right?
It fails with two M's, right?
It failed for me on two M's.
It failed for me on two M's.
Did we try two M's? When we did one
Did we try two M's? When we did one
M, it was
M, it was
like one instant. But when we did it
like one instant. But when we did it
with 1 amp, we did it like with a one
with 1 amp, we did it like with a one
end like replicated a ton of times in
end like replicated a ton of times in
serial, right? Yes, that's what So, we
serial, right? Yes, that's what So, we
did 4096 um inside of the vectorzation
did 4096 um inside of the vectorzation
for the
for the
Let's do it the other way. Let's do it
Let's do it the other way. Let's do it
with one end um but done inside of um
with one end um but done inside of um
the C as the
loop. Let's do that.
They miss see
They miss see
reset
render. Yeah. So, how did we
render. Yeah. So, how did we
do 16 workers yada yada yada?
16 workers and then do you want to know
16 workers and then do you want to know
how the way we did it before or the
how the way we did it before or the
because we did 4096
because we did 4096
numms m and then batch size
numms m and then batch size
2048 and then we hard forced in the.py
2048 and then we hard forced in the.py
file the n by to be zero and we set
file the n by to be zero and we set
numms ms to be one. But what I wanted to
numms ms to be one. But what I wanted to
do here
do here
is
is
sprint zero.
sprint zero.
Here we load map zero repeatedly.
Here we load map zero repeatedly.
Okay.
Um then we also have to do it in the
pi which is
right like this.
F2.
Oops. Forgot about that
in need to get the uh the size
in need to get the uh the size
right. There two active agents in this
right. There two active agents in this
thing, right?
thing, right?
In level one. Should be right. No, one.
In level one. Should be right. No, one.
There's one. The second one was a was
There's one. The second one was a was
the ghost one.
the ghost one.
Oh, so if I just
like I go here. So you arguably could
like I go here. So you arguably could
just make num m 4096. I think if based
just make num m 4096. I think if based
on the way you currently set this up.
Because what this should do now is you
Because what this should do now is you
should have 72.
should have 72.
This is 72.
This is 72.
Yep.
So, we should set this to
So, we should set this to
like whatever.
like whatever.
Um,
Um,
4K
4K
56. We do like what's
512. We do like
512. We do like
512. the default batch and mini
512. the default batch and mini
batch. Guess batch has to be different
batch. Guess batch has to be different
because it's like
because it's like
batch has to be 91 times something.
batch has to be 91 times something.
Yeah. So this has to
Yeah. So this has to
be batch
be batch
size=
7. I think the mini batch stays the
7. I think the mini batch stays the
same.
same.
Yeah, mini batch is
fine. And you have to set max mini batch
fine. And you have to set max mini batch
too.
bizarre. Did we ever figure out like we
bizarre. Did we ever figure out like we
know that this batch like causes stuff
know that this batch like causes stuff
to hang. Did we ever figure out why it
to hang. Did we ever figure out why it
just hangs?
Wait, what happened? It's just not doing
Wait, what happened? It's just not doing
anything.
Weird. Whenever I was running something
Weird. Whenever I was running something
like this, I didn't mess with the
like this, I didn't mess with the
invids.append.
Oh, yeah. That's totally I don't know
Oh, yeah. That's totally I don't know
why I did that.
why I did that.
I just added a null pointer to the end
I just added a null pointer to the end
of it. Yeah, it it should be mids.append
of it. Yeah, it it should be mids.append
nid. Yeah, I don't know. I just added a
nid. Yeah, I don't know. I just added a
null pointer.
Okay, there we
go. Okay. So this is seemingly learning
go. Okay. So this is seemingly learning
this
end. How many agents in M2?
All right. Is it training on instant
All right. Is it training on instant
again?
Uhhuh. So I want to do two M's
Uhhuh. So I want to do two M's
now we do. Now this
now we do. Now this
is I% two.
Your batch sizes are going to get funky
Your batch sizes are going to get funky
again. I know.
I want to say with two maps it should
I want to say with two maps it should
now be three agents.
01 three.
01 three.
It's three, right?
Agent
Agent
offsets
offsets
zero one. Yeah. So there should be there
zero one. Yeah. So there should be there
should be three agents in total now
should be three agents in total now
between the three map between the two
between the three map between the two
maps. But the
maps. But the
offset Yes. Yeah. Yeah, cuz the when you
offset Yes. Yeah. Yeah, cuz the when you
So you have agent zero and for map one,
So you have agent zero and for map one,
you start on now agent one on map two.
you start on now agent one on map two.
You have two agents there. So your your
You have two agents there. So your your
third map should start at three. It It
third map should start at three. It It
just took a
second. Took a second.
num m should just be
num m should just be
like divide
like divide
roughly by three. We'll just do like for
roughly by three. We'll just do like for
convenience do like
convenience do like
uh 200 m or
something 200 times.
something 200 times.
Does the num m's matter at all?
Well, it would be a massive batch size
Well, it would be a massive batch size
otherwise, I guess. Would
it? I don't
know. It's like actually got to be 200
know. It's like actually got to be 200
M's have 300 agents.
M's have 300 agents.
Technically
200 m. Oh, what would it be? 600 agents.
200 m. Oh, what would it be? 600 agents.
The 400 m has 600
The 400 m has 600
agents. I
think that's too
big. 200 mini batch size now goes to B.
Then 600
times is it? What's 300*
times is it? What's 300*
91? I
think.
Oh,
Oh,
600. I don't freaking know,
man. I'm just going to
try. Oh, it should be. That is It's 300
try. Oh, it should be. That is It's 300
agents. God damn it. 300*
91. Okay. So from here it should be
300. Didn't need to change it all. It's
300. Didn't need to change it all. It's
very confusing having to do this. I like
very confusing having to do this. I like
it gets way easier when stuff is
it gets way easier when stuff is
divisible by two. I might be able to fix
divisible by two. I might be able to fix
this with CUDA kernel shenanigans, but I
this with CUDA kernel shenanigans, but I
don't
know. Like everything has to be cleanly
know. Like everything has to be cleanly
divisible. So it should be so 200 m has
divisible. So it should be so 200 m has
300 agents. So
300 agents. So
300* 16
300* 16
* 256 times
* 256 times
91. Just want
430 batch
size.
Okay. So this should now be two maps
with a decent amount of parallelization.
with a decent amount of parallelization.
Ton of parallelization,
Ton of parallelization,
right? Each
right? Each
map gets 100 copies effectively.
map gets 100 copies effectively.
Yeah. Times 16
workers, 1,600 copies per map.
Yeah, because each worker gets that 100.
Yeah, because each worker gets that 100.
Yeah. And look at this. It sucks.
It's as if it's only learned the first
It's as if it's only learned the first
map. Really?
Yeah. Do we try training on just the
Yeah. Do we try training on just the
second map?
second map?
We can.
We can.
That would be sensible, right?
Just make sure it's not that
map. You want to render that map real
map. You want to render that map real
quick?
Sure.
So, it's this map that we know,
right? You got through the wall one time
there. All right. So now let's see if we
there. All right. So now let's see if we
can get
um equals
1, right? Don't the offsets get screwy
1, right? Don't the offsets get screwy
here if you set it just to one or
here if you set it just to one or
um Did
um Did
they? Well, we'll see if it doesn't
they? Well, we'll see if it doesn't
train. The suspicion is that they should
train. The suspicion is that they should
maybe train or at least they should get
maybe train or at least they should get
50%.
depending on what is actually breaking
it. And then the batch size here has to
be it's like 400 * 6 91
One. Okay. So, we are training only on
One. Okay. So, we are training only on
map two.
Well, isn't that something?
It looks looks like it's going.
Let's just uh set this to 20 mil steps.
Let's just uh set this to 20 mil steps.
Set that to like Yes. Really small and
Set that to like Yes. Really small and
then finish it out.
then finish it out.
Yeah, we can double check if we're not
Yeah, we can double check if we're not
crazy.
crazy.
So, I was like wondering if it was going
So, I was like wondering if it was going
to be the agents within one end of the
to be the agents within one end of the
offsets are
offsets are
wrong, but it doesn't look like
it. And this one's more complicated
it. And this one's more complicated
because it has multiple cars, too, and
because it has multiple cars, too, and
not just one. Mhm.
So the suspicion here is stuff is
So the suspicion here is stuff is
getting screwed up across like end
getting screwed up across like end
bounce, right?
Yeah. Something something is overlapping
Yeah. Something something is overlapping
into like the other ends some way
into like the other ends some way
somehow.
It is
It is
like it is so nice. Like the reason I
like it is so nice. Like the reason I
was wanting to check this stuff in the
was wanting to check this stuff in the
first place is because of how confident
first place is because of how confident
I am in like our hyper prams and our
I am in like our hyper prams and our
sweeps and our trainer in generally,
sweeps and our trainer in generally,
right? Like other if I had done this a
right? Like other if I had done this a
year ago, I would have just like kept
year ago, I would have just like kept
working on the experiments and assuming
working on the experiments and assuming
something's just wrong with the RL.
All right, so now this
one. Hey Cash, how's it going?
That looks like a driving sim,
right? That looks like a driving sim.
right? That looks like a driving sim.
Occasionally they crash into each other
Occasionally they crash into each other
or does something weird happens, but
or does something weird happens, but
like overall I mean it was at 93%. It
like overall I mean it was at 93%. It
wasn't 100. Yeah. So that's just like a
wasn't 100. Yeah. So that's just like a
quick training run. I mean they figured
quick training run. I mean they figured
it out. I mean the other guy is doing
it out. I mean the other guy is doing
effectively two turns and is getting
effectively two turns and is getting
there and the other one just has to like
there and the other one just has to like
dodge the other guy. A cash. We are
dodge the other guy. A cash. We are
currently debugging training in this
currently debugging training in this
simulator. It's only training on any
simulator. It's only training on any
single map. It's not letting us train
single map. It's not letting us train
correctly on multiple maps. We're trying
correctly on multiple maps. We're trying
to get this working on like tons and
to get this working on like tons and
tons of different maps. This is all
tons of different maps. This is all
Whimo data. So, these are like real
Whimo data. So, these are like real
world driving
world driving
settings with lowfi
rendering. Let me make sure I didn't
rendering. Let me make sure I didn't
screw something. Well, this wouldn't
screw something. Well, this wouldn't
have just been screwed with the new
have just been screwed with the new
bindings because we had this problem
bindings because we had this problem
before
before
on I think it's on Oh, I've gotten to
on I think it's on Oh, I've gotten to
like 90% before on multiple M.
Now, mind you, I was still crashing into
Now, mind you, I was still crashing into
things,
things,
but it found the goal. I wonder if that
but it found the goal. I wonder if that
90 is just like
90 is just like
I don't
I don't
know. Are you working with GNN's? Nope.
know. Are you working with GNN's? Nope.
This is just um
This is just um
a simple like max pulled entity encoder
a simple like max pulled entity encoder
into an
LSTM. Got this cur and this
next. Just make sure that this makes
next. Just make sure that this makes
sense first.
Wait. Yeah. So, this is
Wait. Yeah. So, this is
fine. We checked the agent off before
fine. We checked the agent off before
with the two maps and it looked fine.
Does it have to do with how
Does it have to do with how
multipprocessing works? Like if you
multipprocessing works? Like if you
tried doing serial, would it work?
tried doing serial, would it work?
I'd be very surprised. I could try it.
I'd be very surprised. I could try it.
Can we try? What was it? Map 63, I
Can we try? What was it? Map 63, I
believe, is a big one.
believe, is a big one.
Uh, I think that's one of the ones that
Uh, I think that's one of the ones that
has a bunch of things. Double
check. Yeah, map 63 is a fairly large
check. Yeah, map 63 is a fairly large
one.
63 has a decent
So these are seven eight agents each it
So these are seven eight agents each it
looks like. Is that
correct? Eight agent
map. Yeah, I got eight on my local
map. Yeah, I got eight on my local
render.
times
8192 Match
Nice.
Okay. So now we are running the bigger
Okay. So now we are running the bigger
map.
This one is stuck at
18. That is suspicious. Right.
This one is stuck at exactly 1/8.
What happens if you add a collision
What happens if you add a collision
penalty?
That's interesting.
One car is deciding to move. All other
One car is deciding to move. All other
cars
cars
are You're not deciding. Oh, wait. It's
are You're not deciding. Oh, wait. It's
pumping. Yeah, it's over.
and now it's stuck with a quarter two
and now it's stuck with a quarter two
cars
which is like you wonder if it's like
which is like you wonder if it's like
two of the goals can be solved with the
two of the goals can be solved with the
same doing the same thing or something.
same doing the same thing or something.
Do you want to do the off-road penalty
Do you want to do the off-road penalty
now too?
I don't think this should help, but
like indulge me. It's a 20 30 second
experiment. More puffer
experiment. More puffer
sweeps. we get
sweeps. we get
to the magic 0.58ish.
to the magic 0.58ish.
This is like the max that we've seen.
This is like the max that we've seen.
Yeah. Well,
we set soda on this other
end. Oh, but we're doing pretty well.
H
H
zero. All right. Didn't work. Yeah.
zero. All right. Didn't work. Yeah.
Zero. All right. That was a fail.
render it.
I would bet they all sit in place and do
I would bet they all sit in place and do
nothing.
Well, the I wanted to render the one
Well, the I wanted to render the one
that was like 25%.
Okay. Which one gets the goal?
Okay. Which one gets the goal?
Uh, it looks like the yellow car gets it
Uh, it looks like the yellow car gets it
sometimes on the
sometimes on the
bottom and then
bottom and then
uh what other car? There's one other car
uh what other car? There's one other car
that's winning somehow.
Is it like a car that can go in a
Is it like a car that can go in a
straight line or something?
They're kind of all doing the all the
They're kind of all doing the all the
cars are doing the same thing. They're
cars are doing the same thing. They're
like eventually curving. They're
like eventually curving. They're
eventually just turning left a little
bit. I'm not seeing the second car
bit. I'm not seeing the second car
that's winning.
that's winning.
Are you? No.
Oh, wait.
Oh, wait.
It's occasional. Um, but it was a solid
It's occasional. Um, but it was a solid
25%.
25%.
Okay. Yeah, that is odd then
Okay. Yeah, that is odd then
cuz there's a blue car above the yellow
cuz there's a blue car above the yellow
car that's like random. That's every
car that's like random. That's every
once in a while getting it.
The green car for sure isn't getting
The green car for sure isn't getting
anywhere on the top. The yellow car on
anywhere on the top. The yellow car on
the top is just ramming into walls.
If you think about it, this is actually
If you think about it, this is actually
going to be very easy to make like a
going to be very easy to make like a
really cool sim out of without if like
really cool sim out of without if like
we didn't we don't even have to add any
we didn't we don't even have to add any
code to this, man. If we just like set
code to this, man. If we just like set
the goal points
the goal points
randomly, like if we just randomize like
randomly, like if we just randomize like
your goal is now this one and then we
your goal is now this one and then we
just pick the next goal or whatever. We
just pick the next goal or whatever. We
could totally train an agent to just
could totally train an agent to just
drive from one to the next to and it
drive from one to the next to and it
would be pretty cool to just watch them
would be pretty cool to just watch them
go around, right? Yeah. No, you you
go around, right? Yeah. No, you you
could just as long as you dropped
could just as long as you dropped
coordinates within the the grid and not
coordinates within the the grid and not
on top of a road edge.
Yeah, I mean you have to do a little bit
Yeah, I mean you have to do a little bit
of weird on the goal planning would be a
of weird on the goal planning would be a
little bit of a weird
little bit of a weird
function. You you'd have to safely place
function. You you'd have to safely place
something such that after its current
something such that after its current
goal, it's in a position where it cannot
goal, it's in a position where it cannot
immediately like run into a wall.
Well, it should be able to decelerate to
Well, it should be able to decelerate to
the goal if it has to.
Okay. Yeah, that's that's that'll be an
Okay. Yeah, that's that's that'll be an
interesting learning behavior. Well,
interesting learning behavior. Well,
it'll be once we get the learning
it'll be once we get the learning
working, I think you're going to see
working, I think you're going to see
this stuff just like massively improve.
this stuff just like massively improve.
Sure.
So, this is how I
So, this is how I
pass these tensors.
This is how I pass you the
buffer. Wait, does this support multi-
buffer. Wait, does this support multi-
aent?
aent?
It has to because I use it for neural
It has to because I use it for neural
MMO, right?
Ourware is also multi- aent
but this is veinet. We don't use veinet,
but this is veinet. We don't use veinet,
right? We don't use
right? We don't use
veinet. But no, this veinet doesn't have
veinet. But no, this veinet doesn't have
support for
it. reckoning it is single agent at the
moment. Okay, so we just set
moment. Okay, so we just set
observations. This is pi array data of
observations. This is pi array data of
observations.
Should we try to like go look at the
Should we try to like go look at the
observations
observations
of the eight agents, I guess?
of the eight agents, I guess?
Yeah.
Yeah. So these are identical, right?
Yeah. So these are identical, right?
They should
be. This looks like we've gotten eight
be. This looks like we've gotten eight
different observations which then repeat
different observations which then repeat
for the first
step. So at least on the basis of
step. So at least on the basis of
uh different
uh different
M giving like like consistent blocks of
M giving like like consistent blocks of
OBS. This is good.
at
zero. See, the thing is the magnitudes
zero. See, the thing is the magnitudes
of these look good as
of these look good as
well, which is
weird. Like the the strides of them. It
weird. Like the the strides of them. It
doesn't look like the data is just
doesn't look like the data is just
messed up.
Max
OBS 7 * max cars minus
OBS 7 * max cars minus
one 7 time road segment
one 7 time road segment
observation Six.
Okay.
Um,
Um,
see I guess the other thing that we
see I guess the other thing that we
could think
could think
about min relative agent position
about min relative agent position
Max rail agent
position.
position.
Oh, hey Spencer.
Um, what up?
Um, what up?
The first chords are the
The first chords are the
goal. The first two chords are the goal.
goal. The first two chords are the goal.
Like the goal heading. Yes, that's
Like the goal heading. Yes, that's
correct. They're almost identical.
No way.
The car doesn't spawn facing the goal,
The car doesn't spawn facing the goal,
right?
right?
Not guaranteed.
Not guaranteed.
There's no way that they're that close.
There's no way that they're that close.
I mean, some some goals are like really
I mean, some some goals are like really
close. Some goals are these are eight
close. Some goals are these are eight
separate agents.
separate agents.
And the heading the relative heading to
And the heading the relative heading to
the goal is like almost identical for
the goal is like almost identical for
all of them.
Let's see.
What do you mean the relative heading?
What do you mean the relative heading?
There's no relative heading in ops.
There's no relative heading in ops.
What's this? Normalize real goal X real
What's this? Normalize real goal X real
goal Y.
That
That
is the the coordinate point.
is the the coordinate point.
That is the act that is the distance
That is the act that is the distance
from the agent to the
from the agent to the
goal which shouldn't be virtually
goal which shouldn't be virtually
identical for all agents, right?
identical for all agents, right?
No, they should be probably fairly
No, they should be probably fairly
different. Yeah. And they're not at all.
Oh, you minus men.
Let me try
Let me try
something. Want to try something real
something. Want to try something real
quick?
Then
sir did I
do bad normalization
do bad normalization
[Laughter]
bad. It actually was the shitty obs
normalization. Got him. All right.
normalization. Got him. All right.
Always the freaking data every damn
Always the freaking data every damn
time. Got him.
I want to say I did. Can I just take
I want to say I did. Can I just take
this function incorrectly
this function incorrectly
from their code? Much to learn, young
from their code? Much to learn, young
Pedawan.
Pedawan.
Yes.
What was my implementation versus? Uh,
What was my implementation versus? Uh,
let me show you. Let me show you first.
let me show you. Let me show you first.
Let me make sure this actually works
Let me make sure this actually works
before I gloat a little bit.
Maxus mid.
I mean, mine is slightly different, but
I mean, mine is slightly different, but
by a constant factor, I don't think it
by a constant factor, I don't think it
should
be. These look like some good cars
be. These look like some good cars
driving. Yeah.
driving. Yeah.
Uh, boom.
Uh, boom.
Sick. Okay. All
right. I want to know. Let's Let's see
right. I want to know. Let's Let's see
if we solve the whole the whole freaking
if we solve the whole the whole freaking
thing.
thing.
All right. If this does, I'm going to be
All right. If this does, I'm going to be
This is going to be so sick. And I'm
This is going to be so sick. And I'm
going to feel real dumb after that. That
going to feel real dumb after that. That
was it. It's all right. You're training.
was it. It's all right. You're training.
Everything else was totally perfect.
Everything else was totally perfect.
Like there's no other issues. It's just
Like there's no other issues. It's just
Well, you're going to have to recheck
Well, you're going to have to recheck
all the normalization now.
But let's see. Where is that function
But let's see. Where is that function
even used? How many times? I think it's
even used? How many times? I think it's
only
used normalized value. I call it quite a
used normalized value. I call it quite a
bit.
bit.
It's also used in the
It's also used in the
uh relative positions of other
uh relative positions of other
cars and relative positions of other
roads. It's not the normalized function
roads. It's not the normalized function
itself.
No. No.
No. No.
I'll show you. Didn't you just change it
I'll show you. Didn't you just change it
to divide by 20? Yes, but it's not cuz
to divide by 20? Yes, but it's not cuz
the normalized function is necessarily
the normalized function is necessarily
bad.
Is the factor too gigantto? Yes, it's
Is the factor too gigantto? Yes, it's
the exact thing I told you.
Uh,
Uh,
wait, but the GPU drive team uses that
wait, but the GPU drive team uses that
factor.
factor.
And you trust what they
And you trust what they
do? This is probably why they had to
do? This is probably why they had to
have shitty layer
everywhere. What was the original uh was
everywhere. What was the original uh was
it 72
it 72
m? Uh yeah, we were doing 72. Yeah. You
m? Uh yeah, we were doing 72. Yeah. You
remember what the original I guess it's
remember what the original I guess it's
in the commit somewhere. The batch size.
in the commit somewhere. The batch size.
What are you trying to figure out the
What are you trying to figure out the
batch size? Oh, I have those. The batch
batch size? Oh, I have those. The batch
size. Uh 738192.
size. Uh 738192.
Oh, okay. So that's just that.
Oh, okay. So that's just that.
Cool.
This because the 745 one I think was
This because the 745 one I think was
just for the one map.
Did you also change the normalize on the
Did you also change the normalize on the
other ones that use that same function
other ones that use that same function
to divide by 20 or something? No.
GG Neptune.
thing is
dipping. There we go.
Just see if this does anything
quickly. All
quickly. All
right.
So, data normalization matters a lot,
right? So, what were you doing here?
right? So, what were you doing here?
Okay, you're taking 20
Okay, you're taking 20
you are subtracting a
you are subtracting a
th00and or negative a th00and whatever
th00and or negative a th00and whatever
and then you're dividing by a
th00and so basically you're squashing
th00and so basically you're squashing
your 20 by a factor of a thousand.
your 20 by a factor of a thousand.
So all the differences in in your goals
So all the differences in in your goals
you know how the goals were slightly
you know how the goals were slightly
different that was the entire range over
different that was the entire range over
which the goals could vary.
So, 45 mil and I've already surpassed
So, 45 mil and I've already surpassed
our best run.
Well, let's see if it gets stuck. Does
Well, let's see if it gets stuck. Does
that It
won't. It's not going to necessarily
won't. It's not going to necessarily
full solve because I only fixed two
full solve because I only fixed two
variables, right? It's going to be
variables, right? It's going to be
better. There's still there's still it's
better. There's still there's still it's
that normalized value function is used
that normalized value function is used
two or three more times in the below
ops. So the range I was giving it was
ops. So the range I was giving it was
just way too small. Yep. You compressed
just way too small. Yep. You compressed
all your data into a tiny little range.
So
So
basically the neural net would have had
basically the neural net would have had
to have learned how to subtract by 0.5
to have learned how to subtract by 0.5
and then multiply by a thousand.
and then multiply by a thousand.
Yeah. To get back the original data.
Yeah. To get back the original data.
And the original data was too big as
And the original data was too big as
well. So it was still multiply by 100.
well. So it was still multiply by 100.
but
but
still makes it
hard. So eventually the neuron net just
hard. So eventually the neuron net just
gave up and decided I'm going to drive
gave up and decided I'm going to drive
in a straight line cuz a lot of the
in a straight line cuz a lot of the
goals are in a straight line.
It's just
so well ripping in peace to assuming
so well ripping in peace to assuming
other people are correct.
But this is the thing that drives me
But this is the thing that drives me
crazy, right? The researchers will do
crazy, right? The researchers will do
this and then they'll throw layer norm
this and then they'll throw layer norm
on stuff to band-aid patch everything
on stuff to band-aid patch everything
which is not a patch. they did I did is
which is not a patch. they did I did is
they multiplied their final value by two
they multiplied their final value by two
and then subtracted it by
and then subtracted it by
one. So I mean it would go from squashed
one. So I mean it would go from squashed
by a thousand to squashed by 500.
But then theirs doesn't even work
But then theirs doesn't even work
without layerm.
without layerm.
Yeah, they have layerorm and tanh.
Yeah, they have layerorm and tanh.
Why don't we fix their observations?
Why don't we fix their observations?
We we could drop OB. So, I don't know if
We we could drop OB. So, I don't know if
you were able to see on some of the
you were able to see on some of the
observations, but a huge percentage of
observations, but a huge percentage of
them are just zeros because they're
them are just zeros because they're
filling in to what assumed the
filling in to what assumed the
max obs are. Well, given that their data
max obs are. Well, given that their data
there, the cool thing about this is
there, the cool thing about this is
given that their data was so bad, like
given that their data was so bad, like
we can probably just get rid of most of
we can probably just get rid of most of
the observations and still train a
the observations and still train a
better policy.
Yeah, it's still going. And this is just
Yeah, it's still going. And this is just
the first thing I ran.
the first thing I ran.
Like I mean there two variables fixed.
Like I mean there two variables fixed.
If you go and fix the other variable by
If you go and fix the other variable by
just dropping like a divide by 20 on the
just dropping like a divide by 20 on the
other ones, it probably makes a
other ones, it probably makes a
significant difference. Let's see. Max
significant difference. Let's see. Max
speed.
speed.
Um where it was used
was just
the normalized value. I'm just guessing
the normalized value. I'm just guessing
at like what reasonable speeds are.
at like what reasonable speeds are.
The vehicles are not 15 big either.
The vehicles are not 15 big either.
Whatever.
Whatever.
There is one that's like 10 big. I will
There is one that's like 10 big. I will
say that for sure exists because there's
say that for sure exists because there's
like a I guess what it's supposed to be
like a I guess what it's supposed to be
is like a long truck.
is like a long truck.
that that is not that unreasonable on on
that that is not that unreasonable on on
the vehicle width and
the vehicle width and
lengths, but the normalized value on
lengths, but the normalized value on
those need to be
dunked. This one's fun.
dunked. This one's fun.
the normalized
heading. All it is is subtracting or
heading. All it is is subtracting or
adding 2
pi. That's
fine. Now, these reverses are going to
fine. Now, these reverses are going to
be messed up, obviously.
Yeah. Um, that's going to screw up
Yeah. Um, that's going to screw up
rendering. Yeah, you you'll be able to
rendering. Yeah, you you'll be able to
fix things. I My goal is to make it
fix things. I My goal is to make it
work. Oh, here's a quick fix. Reverse
work. Oh, here's a quick fix. Reverse
normalize value. Just say value times
normalize value. Just say value times
20. Oh,
20. Oh,
yeah. Hold on.
Will we get squashing it really that
Will we get squashing it really that
bad? Like
there's big bucks in going into all the
there's big bucks in going into all the
ML pipelines of companies doing
ML pipelines of companies doing
important stuff and fixing their shitty
normalization. I guess so.
normalization. I guess so.
I mean, you just picked a number that
I mean, you just picked a number that
seemed moderately reasonable and you're
seemed moderately reasonable and you're
I mean, I don't even know those values
I mean, I don't even know those values
are going to be between zero and one at
are going to be between zero and one at
this point. No,
but to be fair, this was the first
but to be fair, this was the first
change I tried to the observation space.
change I tried to the observation space.
Yeah.
Yeah.
I mean, so all I did is I picked a
I mean, so all I did is I picked a
number that's roughly kind of on the
number that's roughly kind of on the
scale of what it is. It's there's not a
scale of what it is. It's there's not a
magical thing where neural nets fail
magical thing where neural nets fail
outside of the range of 0 to one. It's
outside of the range of 0 to one. It's
like they degrade. Same thing as they
like they degrade. Same thing as they
degrade when your data is
squashed. I would hope that after
squashed. I would hope that after
getting rid of the other normalized
getting rid of the other normalized
values, it should be able to do do
values, it should be able to do do
better on collision and off-road. Oh,
better on collision and off-road. Oh,
wait. We don't have a penalty. No, we
wait. We don't have a penalty. No, we
don't.
How does this graph compared to the
How does this graph compared to the
other graph? So far, it's worse.
We'll see.
There we go though. It's getting
better. Yeah, now it's better.
better. Yeah, now it's better.
Bada boom.
Okay, we're at uh we are at 80%
here. I will be right back.
So this is
So this is
um just super jank initial norm checking
um just super jank initial norm checking
with whatever the hell defaults we have
with whatever the hell defaults we have
in
in
here. Right.
here. Right.
Yeah. when we've kind of been tuning
Yeah. when we've kind of been tuning
completely
wrong. So,
um we're going to check this
um we're going to check this
policy and then
policy and then
add penalties.
add penalties.
I don't even know if you need the
I don't even know if you need the
penalties. We can try
penalties. We can try
them. They might help. Well, it looks
surprising every time.
surprising every time.
I don't know. Maybe that's just what
I don't know. Maybe that's just what
they like to do.
There is still the notion of that thing
There is still the notion of that thing
we tal we were decided to ignore at the
we tal we were decided to ignore at the
moment of a car responding in the path
moment of a car responding in the path
of another car.
of another car.
Very possible.
But that's quite the distinction
But that's quite the distinction
here from 58 was the best. Mhm. That
here from 58 was the best. Mhm. That
does mean that it's possible. I think 58
does mean that it's possible. I think 58
was just basically driving in a straight
was just basically driving in a straight
line.
All right. So, it looks like it's capped
All right. So, it looks like it's capped
out
here. The thing literally couldn't see
here. The thing literally couldn't see
its goals.
Why is
See, but I was able to get like
See, but I was able to get like
99.99 on before we did any of the
99.99 on before we did any of the
changes with zero penalty.
Well, I mean, it's not that it can't
Well, I mean, it's not that it can't
learn it. It's just very
difficult. There's map zero.
to some other maps.
Yeah. So they run into each other
Yeah. So they run into each other
sometimes, but like
Some of that is for sure spawning on top
Some of that is for sure spawning on top
of each other issue. Oh yeah,
you can see the car in the blue that's
you can see the car in the blue that's
like
trying. But like this should now be a
trying. But like this should now be a
workable problem. Yes. Mhm. Without a
workable problem. Yes. Mhm. Without a
doubt. Like there's that taking a turn.
This is a few. This
This is a few. This
one looks like that white car is having
one looks like that white car is having
a hard time figuring out life. It has
a hard time figuring out life. It has
basic low fidelity
basic low fidelity
physics, but like yes, there's
acceleration. They can't stop on a
dime. There's
momentum. Oh, look at this.
momentum. Oh, look at this.
Okay, they have to not be able to like
Okay, they have to not be able to like
jitter so damn much,
jitter so damn much,
but look at that.
That one one is really liking the
That one one is really liking the
jitter. I think the third person mode is
jitter. I think the third person mode is
cool. Oh yeah,
cool. Oh yeah,
very cool. It'll be really cool as well
very cool. It'll be really cool as well
when it's like smooth. You can just
when it's like smooth. You can just
watch him drive around. Imagine you can
watch him drive around. Imagine you can
literally just watch this thing drive
literally just watch this thing drive
around a city forever.
around a city forever.
You could probably just like have a
You could probably just like have a
stream of this on at all time. People
stream of this on at all time. People
would probably tune in and watch it.
would probably tune in and watch it.
That' be cool as like ASMR or something.
That' be cool as like ASMR or something.
Driving sim. Just play some like lowfi
Driving sim. Just play some like lowfi
music and let people watch driving sims.
Lowi cars to study too.
Yeah. Let's give it a little bit of a
Yeah. Let's give it a little bit of a
penalty and then we'll do and then I'll
penalty and then we'll do and then I'll
just give this to you to Well, actually,
just give this to you to Well, actually,
I think we'll just I'll let you get the
I think we'll just I'll let you get the
last bits of it. So here
so yeah for you um I would go through
so yeah for you um I would go through
like check all of the normalization to
like check all of the normalization to
make sure that it's like not overly
make sure that it's like not overly
squashing values
squashing values
and then um throw it into a sweep
and then um throw it into a sweep
including the end coefficients and see
including the end coefficients and see
how it does.
how it does.
Okay. And when you were when you figured
Okay. And when you were when you figured
out that it was overly crushed, I mean
out that it was overly crushed, I mean
it's not like the values were point like
it's not like the values were point like
05. They were still within the range of
05. They were still within the range of
zero to one. So, well, I noticed I
zero to one. So, well, I noticed I
noticed that there are goals, right?
noticed that there are goals, right?
That these should be the goals, but it's
That these should be the goals, but it's
basically was giving all the agents
basically was giving all the agents
roughly the same goal,
right? Mhm. So, that was like the that
right? Mhm. So, that was like the that
doesn't look right because I was looking
doesn't look right because I was looking
to see if it was like some memory bug
to see if it was like some memory bug
where you were overwriting stuff, but
where you were overwriting stuff, but
the values were nicely aligned in
the values were nicely aligned in
memory, right? Where like the magnitudes
memory, right? Where like the magnitudes
of each column were similar. Yeah.
of each column were similar. Yeah.
Um, so then I started looking at the
Um, so then I started looking at the
values themselves and said, "Wait a
values themselves and said, "Wait a
minute, this is supposed to represent
minute, this is supposed to represent
the goal." Because I went to look for
the goal." Because I went to look for
the goal because that's the most
the goal because that's the most
important observation
and then from there. Yeah. So it's like
and then from there. Yeah. So it's like
it's just it was just basic data
it's just it was just basic data
checking really.
Now mind you, this is like probably one
Now mind you, this is like probably one
of the most common issues whether you're
of the most common issues whether you're
brand new or like a top lab. It's always
brand new or like a top lab. It's always
your freaking data. So,
your freaking data. So,
fair enough. I mean, hey, at least the
fair enough. I mean, hey, at least the
memory issues were correct. I I'm at
memory issues were correct. I I'm at
least happy that that turned out all
least happy that that turned out all
right. Yep. So, this should now work for
right. Yep. So, this should now work for
you. You have GPU drive. You just push
you. You have GPU drive. You just push
Where did you push that to? Release.
Where did you push that to? Release.
Yep. Okay. Um I'm going to go grab a
Yep. Okay. Um I'm going to go grab a
bite. I'll uh when I get back, I'll
bite. I'll uh when I get back, I'll
check out any other things that need to
check out any other things that need to
be modified on
be modified on
normalization. Run a sweep on
normalization. Run a sweep on
everything. Um, is the latest sweep
everything. Um, is the latest sweep
stuff all in release as well? Yep. Okay.
stuff all in release as well? Yep. Okay.
It's like the same as before. You just
It's like the same as before. You just
you run it. I will run. It's already set
you run it. I will run. It's already set
up for you as well because I have the
up for you as well because I have the
other sweep going that I can now replace
other sweep going that I can now replace
with something else. Okay. Sure. Sure.
with something else. Okay. Sure. Sure.
In terms of like this, well, did you
In terms of like this, well, did you
didn't edit the you didn't push the
didn't edit the you didn't push the
edited default
edited default
uh any file, right? Did I edit the
uh any file, right? Did I edit the
default anyie?
default anyie?
Is that where you did your sweep stuff?
Is that where you did your sweep stuff?
Oh.
Oh.
Um, then there might be a few small
Um, then there might be a few small
things to tweak here. Hang
on. You can also just ship that in like
on. You can also just ship that in like
a general chat or something if you want.
a general chat or something if you want.
If you don't want to modify the default
If you don't want to modify the default
any file as the release
branch. Let me see what I changed.
I added you like the total time
I added you like the total time
steps just add this stuff back
in. So today I think I think uh today or
in. So today I think I think uh today or
like whenever that sweep runs finishes
like whenever that sweep runs finishes
we will have something decent.
we will have something decent.
Um, maybe not to show them quite yet,
Um, maybe not to show them quite yet,
but it we're getting there very very
but it we're getting there very very
rapidly.
rapidly.
Probably by end of this weekend. Yeah,
Probably by end of this weekend. Yeah,
that would be great.
And then we can work on uh speed Tokyo
And then we can work on uh speed Tokyo
Puff. N we do Tokyo Puff later, but it's
Puff. N we do Tokyo Puff later, but it's
fun. No, get get it up to a million.
fun. No, get get it up to a million.
Yeah,
Yeah,
which I still don't know what happens
which I still don't know what happens
like besides cutting obsid
There you go. Okay, go get uh Yeah, go
There you go. Okay, go get uh Yeah, go
grab a bite and uh you can do that and I
grab a bite and uh you can do that and I
will be working on fixing other things
will be working on fixing other things
around on release. All right, sounds
around on release. All right, sounds
good. Thank you, man. Thanks, Spencer.
good. Thank you, man. Thanks, Spencer.
See you.
Well, that is a
Well, that is a
um
um
longstanding
longstanding
problem discovered and
problem discovered and
solved. I'm quite happy with
solved. I'm quite happy with
that. I'm going to take a couple
that. I'm going to take a couple
minutes. I'm going to use the restroom
minutes. I'm going to use the restroom
real quick, walk around a little bit,
real quick, walk around a little bit,
and then I'm going to come back and then
and then I'm going to come back and then
I have
I have
another four and a half hours, I
another four and a half hours, I
believe, of uh hopefully just doing all
believe, of uh hopefully just doing all
the other release stuff. But that is one
the other release stuff. But that is one
of the core M's that was having problems
of the core M's that was having problems
now that should no longer be having
now that should no longer be having
problems. Um, we'll
problems. Um, we'll
try impulse wars and stuff maybe after
try impulse wars and stuff maybe after
this at some point soon, but I think
this at some point soon, but I think
we're just going to like jam some uh
we're just going to like jam some uh
some pre-release work for a bit. Be
some pre-release work for a bit. Be
right back.
We just got some very strong magnets
We just got some very strong magnets
delivered for hanging the uh big flag
delivered for hanging the uh big flag
that goes in the
that goes in the
background. It'll be fun.
background. It'll be fun.
Okay.
Okay.
So, I think what I want to do right
So, I think what I want to do right
now, I want to get this working
now, I want to get this working
on there's one other
environment and then
environment and then
um and then we'll go
um and then we'll go
to general pre-release work after that.
to general pre-release work after that.
And then that should basically
And then that should basically
be everyone
be everyone
except except Captain's environment
except except Captain's environment
taken care of for the time
being. Yeah.
experiment
CV. Okay. So, we'll see if we can get
CV. Okay. So, we'll see if we can get
this to
run. Probably have to edit the
config. Yeah. So this is
now back.
Okay. So I think that this is probably
Okay. So I think that this is probably
that they have like this new
config. I think they called it
config. I think they called it
experiment CV or whatever.
data narrows data
set. Just ask for this
Is there anything in like set
up finance?
Is it
Is it
this?
No. Okay. They'll have to tell me then
No. Okay. They'll have to tell me then
what this
what this
is. We'll uh we'll just go on to general
is. We'll uh we'll just go on to general
release work until they uh they tell me
release work until they uh they tell me
what they've been up
what they've been up
to. because I can't really do anything
to. because I can't really do anything
with this as
is. Oh, actually, hang on. Let me go
is. Oh, actually, hang on. Let me go
tell John one thing.
All right.
I think we just want to go look at
I think we just want to go look at
um well, we'll check the sweep real
um well, we'll check the sweep real
quick and then we'll go through general
quick and then we'll go through general
code looking for more things we can
code looking for more things we can
clean up for release.
All right, we're getting some good
All right, we're getting some good
experiments
here. These are pretty
reasonable. And these are pretty short
reasonable. And these are pretty short
as
well. We'll probably just keep those
well. We'll probably just keep those
going.
So, this file still bothers
me. I'm trying to think why it still
me. I'm trying to think why it still
bothers
me. Like, it's not that long now,
me. Like, it's not that long now,
right? This is the main two screens.
I guess I like I don't like that I have
I guess I like I don't like that I have
this train
this train
wrapper. Sweep function is pretty clean
wrapper. Sweep function is pretty clean
actually. All these little
actually. All these little
helpers. Now I'm looking at it. There's
helpers. Now I'm looking at it. There's
really not that much.
So technically I can
So technically I can
put I could put down sample
put I could put down sample
linear into the sweeps.
linear into the sweeps.
Maybe a little
awkward. I guess the main thing is
awkward. I guess the main thing is
having this extra train function, right?
having this extra train function, right?
And the reason that we need this is that
And the reason that we need this is that
it's kind of because of
sweeps. So
I mean what I would like is I would like
I mean what I would like is I would like
this function to be very
compressed. I guess I Yeah, I'd like
compressed. I guess I Yeah, I'd like
this function to be very
this function to be very
compressed and then
compressed and then
the DDP stuff would just be in DDP
land, but I don't like there's enough
land, but I don't like there's enough
code in here that I wouldn't want to
code in here that I wouldn't want to
just duplicate
just duplicate
in both sweeps and in
train and then like I've gone through
train and then like I've gone through
this pretty fine grain.
this pretty fine grain.
Like other than this small little thing
Like other than this small little thing
here, this is pretty well optimized as
is. I mean, some of this stuff can get
is. I mean, some of this stuff can get
cleaned up down here for
sure, just like little by
sure, just like little by
little. And I would like to do that, but
little. And I would like to do that, but
then the the thing is the structural
then the the thing is the structural
Yeah, the structural
problem. I guess it's just really about
problem. I guess it's just really about
making this little section as compact as
making this little section as compact as
possible,
right? I mean, you do not
right? I mean, you do not
need. So, hang on. This time step,
need. So, hang on. This time step,
scores,
scores,
costs, all this
append. We don't need any of this for
append. We don't need any of this for
normal training, right? We use this for
normal training, right? We use this for
sweeps only.
sweeps only.
So, well, if I were to like make like a
So, well, if I were to like make like a
train min, let's say like I just take
train min, let's say like I just take
out all of the features that are not
out all of the features that are not
just for
training,
training,
right? Let me see how small this
right? Let me see how small this
function
function
gets as a
experiment. Take this out.
like something like this,
like something like this,
right? This is all the code that's
right? This is all the code that's
actually required for
training. So, realistically, how short
training. So, realistically, how short
can I make this?
I don't really like the idea of hiding
I don't really like the idea of hiding
this logic inside of the training class,
this logic inside of the training class,
right? It's already too high level as
right? It's already too high level as
is.
This doesn't need to be
there. You have this target metric
there. You have this target metric
thing.
isn't used for anything.
I do like being able to have
I do like being able to have
um like this print out.
I could have it print after both
I could have it print after both
evaluate and
train the dashboard.
man. Might not be
man. Might not be
bad. That might just work.
So let's assume I do that. Then that
So let's assume I do that. Then that
gets rid of needing this target
key. This
stat and then this print.
and probably clean up this little
and probably clean up this little
garbage
here. Oh, you still need this target
here. Oh, you still need this target
metric point thing. Hang on.
Does it even make sense to have like a
Does it even make sense to have like a
minimum number of eval points?
I mean technically All
right. Any valges or
something?
Lost. So, if I could get this little
Lost. So, if I could get this little
piece um
piece um
reduced, I could get these out. Then
reduced, I could get these out. Then
it's make end make
it's make end make
policy
trainer
reset. Do you need to even Hang on. Do
reset. Do you need to even Hang on. Do
you even need to async
reset? You don't even need to async
reset? You don't even need to async
reset it
reset it
here. Oops.
This is completely
redundant. I reset
here. I think this is what I was trying
here. I think this is what I was trying
to do is reset this here.
just that
um like the MIS
Well, this is
So, let's just say that I figure out a
So, let's just say that I figure out a
way to get rid of
way to get rid of
this and I figure out a way to oneline
this and I figure out a way to oneline
this nicely.
I can probably get this function under
I can probably get this function under
lines. Does that let me do
anything or does that tell me anything?
Thank
you. I like what I'm trying to do with
you. I like what I'm trying to do with
this here,
this here,
right? I don't like the fact that I
right? I don't like the fact that I
have an already higher level than I
have an already higher level than I
would like. train interface that has
would like. train interface that has
these just eval train eval train and I
these just eval train eval train and I
don't like that we have a main that then
don't like that we have a main that then
calls a wrapper function that then makes
calls a wrapper function that then makes
and calls that is too
and calls that is too
much but the thing is there's just
much but the thing is there's just
slightly too much
slightly too much
code here for me to want to
code here for me to want to
like just duplicated in the main
like just duplicated in the main
transcript
Okay. You know what? But if we did that,
Okay. You know what? But if we did that,
right, let's say that we put something
right, let's say that we put something
like this and we clean it up a bit and
like this and we clean it up a bit and
this goes in the main train script and
this goes in the main train script and
then we need something similar for
then we need something similar for
sweeps, right?
Then that goes like this code from this
Then that goes like this code from this
min goes into this sweep
function. Does that let us do anything?
I hope that lets us do anything
I hope that lets us do anything
meaningful. The idea would be that we
meaningful. The idea would be that we
might be able to like
might be able to like
simplify substantially,
right? I mean, I guess isn't this
right? I mean, I guess isn't this
metric?
Yeah. So we have this target metric
Yeah. So we have this target metric
here. So like this target metric, we
here. So like this target metric, we
don't have to pass it to train at all
don't have to pass it to train at all
anymore,
right? And probably simplify the configs
right? And probably simplify the configs
a little
bit. And then then what does this look
bit. And then then what does this look
like as a result?
I guess this looks like you
I guess this looks like you
having 15 lines of code here in
having 15 lines of code here in
training.
could also try to make all these one
could also try to make all these one
lines and then have the functions be
above. But we're splitting hairs at that
above. But we're splitting hairs at that
point, I think.
And then basically the only bad part of
And then basically the only bad part of
the code would be if we just put it here
the code would be if we just put it here
all like the code here. The only bad
all like the code here. The only bad
part would be that there's this
part would be that there's this
40line config loading preamble, right?
cuz like if that weren't there, I would
cuz like if that weren't there, I would
totally just do it in line,
totally just do it in line,
right? And that shouldn't change my
right? And that shouldn't change my
decision- making. So, I should probably
decision- making. So, I should probably
just have it
here. But then by that logic, you'd also
here. But then by that logic, you'd also
put the sweep the sweep code here.
So like in my mind the best thing is
So like in my mind the best thing is
this config
this config
stuff doesn't exist and it's all in
stuff doesn't exist and it's all in
line. No, actually it's still not good
line. No, actually it's still not good
because the sweep function is going to
because the sweep function is going to
be kind of big, right?
be kind of big, right?
I don't really like
having I'm going to sit here and stress
having I'm going to sit here and stress
over this until I get it
right cuz how I do this is going to
right cuz how I do this is going to
determine how many users are confused
determine how many users are confused
when they open this file.
I can't decide how I want to do
this. I mean, the sweep function is
this. I mean, the sweep function is
definitely too long to go here, right?
the trans function could go
here. There's all this like annoying
here. There's all this like annoying
like stuff like if it's a baseline or
like stuff like if it's a baseline or
this or that though.
Okay, maybe let's think about which of
Okay, maybe let's think about which of
these we
these we
actually need to account
for. So, we've got
Eval
Eval
Sweep. This is
Sweep. This is
easy. This is going to be
easy. This is going to be
relatively
easy. Which of these sounds better to
easy. Which of these sounds better to
me? Having
this main
this main
script. Just have this
script. Just have this
parsing and then
parsing and then
call whichever of these
functions. Not bad.
I could probably actually if I just do
I could probably actually if I just do
it all in line I could even simplify it
it all in line I could even simplify it
more. Right.
I mean, the only thing I can think of
here like sweeps is a pretty independent
here like sweeps is a pretty independent
code path right now,
code path right now,
right? Like sweeps is
right? Like sweeps is
almost entirely its own code path.
But then for like everything
else there's going to be like shared
else there's going to be like shared
envi
policy in
it. I think that's the way to go,
it. I think that's the way to go,
right? Instead of having a bunch of
right? Instead of having a bunch of
different functions, just try to make
different functions, just try to make
like a really good clean script for
this. All
right, let's do
right, let's do
that. Put these on. Got maintenance in
here. Make sure I have this.
Um, we're good.
Yeah, I think we're just going to we're
Yeah, I think we're just going to we're
just going to make an attempt at this.
just going to make an attempt at this.
We're going to do the best we can this
We're going to do the best we can this
way. I'll spend like an hour on it and
way. I'll spend like an hour on it and
then we'll see if I like the direction
then we'll see if I like the direction
it's headed in by then.
it's headed in by then.
Hard to It's hard to say otherwise.
You can probably start with like train
You can probably start with like train
just like assume train or
whatever or
like put sweep up high.
Bugs.
Yeah. So, this is what I was I was
Yeah. So, this is what I was I was
thinking here, right? So, we can
take we can take this stuff and move it
take we can take this stuff and move it
outside of these checks because this is
outside of these checks because this is
going to be shared.
stand.
We'll change the args to this, but it's
We'll change the args to this, but it's
going to look like something like this.
The train will actually almost already
The train will actually almost already
work.
actually literally does already
work. We can rewrite
work. We can rewrite
uh we can definitely rewrite
about model
about model
path. Load model path.
But we can
Yeah, we can totally simplify this,
right? Heck, we might even be able to
right? Heck, we might even be able to
get rid of that function. Wouldn't that
get rid of that function. Wouldn't that
be
cool? Maybe a little ambitious.
We could like literally just end up
We could like literally just end up
being able to call
being able to call
eval like render mode true
though. Interesting to think about.
How funny is it going to be if after all
How funny is it going to be if after all
this time we actually like get back to
this time we actually like get back to
close to the original level of
simplicity? That's not bad. It's just
um rendering the wrong end
um rendering the wrong end
probably does
run. I mean this function doesn't need
run. I mean this function doesn't need
to exist probably, right?
Okay. So, we will have to obviously mess
Okay. So, we will have to obviously mess
with this. But
with this. But
um we are getting somewhere
here. I like putting train above eval
here. I like putting train above eval
now though.
And actually, this is impossible to get
And actually, this is impossible to get
here, right? Because
here, right? Because
uh we don't even need this.
So then this train wrap function needs
So then this train wrap function needs
to get integrated with
sweeps. So basically right
here and it actually gets simplified a
here and it actually gets simplified a
little bit as well, doesn't it?
little bit as well, doesn't it?
Just take this
Just take this
code. Put this here.
We can get rid of
um we can get rid of sweeps for now on
um we can get rid of sweeps for now on
this.
We'll come back to
multi. Come back to multi
GPS. But yeah, it would look something
GPS. But yeah, it would look something
like this.
We'll leave this as a separate function
We'll leave this as a separate function
for now.
The only thing I don't like about is how
The only thing I don't like about is how
annoying sweeps are.
Right. Quite probably. We can clean this
Right. Quite probably. We can clean this
up a bit though.
All
right. I think we just start um line by
right. I think we just start um line by
line like just focus on the small stuff
line like just focus on the small stuff
and go from
and go from
there. What am I doing here? Fran
name space thing will be last. We're not
name space thing will be last. We're not
doing namespace thing right now. I do
doing namespace thing right now. I do
want to change this name space so this
want to change this name space so this
line will get cleaner. That's a very
line will get cleaner. That's a very
small thing to do. It will take quite a
small thing to do. It will take quite a
bit of time to
bit of time to
uh get right.
They're like little bits of things I'm
They're like little bits of things I'm
not quite sure how I want to do yet.
that.
that.
Okay. Main impediments now are a bunch
Okay. Main impediments now are a bunch
of config
stuff, saving, loading things.
LSDM thing is a little bit of a
pain. Not a good way around it at the
pain. Not a good way around it at the
moment, though.
Oh yeah, now this eval thing
Oh yeah, now this eval thing
is is a mess, right?
Does this even exist
anymore? It does.
What if we wanted like separate things,
What if we wanted like separate things,
right? What if we wanted like
How would this code look
different? What would be completely
different? What would be completely
different, right?
different, right?
Yeah, we don't need to worry about this
Yeah, we don't need to worry about this
because like eval itself is actually
because like eval itself is actually
really
really
easy. You would just call like the this
easy. You would just call like the this
little loop up there. Okay,
little loop up there. Okay,
so in that case then we can assume that
so in that case then we can assume that
this
this
Whoops. We can assume that this uh this
Whoops. We can assume that this uh this
eval mode is basically only for wanting
eval mode is basically only for wanting
to
to
watch the policy and potentially save a
watch the policy and potentially save a
video.
Hey,
welcome. So then I guess the only issues
welcome. So then I guess the only issues
with
with
um with this I guess one I don't like
um with this I guess one I don't like
that we have to make the state like this
that we have to make the state like this
but it's not the worst thing ever.
And two, we need a good way to know
And two, we need a good way to know
whether we want to save a
whether we want to save a
gift and
um only collect frames if we do so we
um only collect frames if we do so we
don't run out of memory.
We can add
like save frames.
Yes. Wow.
So, we'll just do um
Yeah, this will be
it. Hero
frames way easier.
Don't need kick
anymore. rid of this.
This is getting better.
This is getting better.
Uh, is there like an FPS
attribute render FPS, but nothing's
attribute render FPS, but nothing's
going to have this, right?
Yeah, this is just per environment.
Yeah, this is just per environment.
There's nothing standard for
this. So like I guess we just assume
You don't know what FPS to assume at
You don't know what FPS to assume at
all,
right? Collision penalty can't
right? Collision penalty can't
be max of
zero. It could still have collisions.
Well, I mean in that case, right,
Well, I mean in that case, right,
like you could
like you could
um we should probably
um we should probably
then instead of having the reward space
then instead of having the reward space
change for that, we should probably have
change for that, we should probably have
a different metric. Spencer
I'm trying to think what we would do.
I'm trying to think what we would do.
Maybe we define like
Maybe we define like
um completes goal at least once and
um completes goal at least once and
doesn't collide as like the metric.
You can definitely mess with it for now
You can definitely mess with it for now
though. Like you can add a bit of a
though. Like you can add a bit of a
penalty for now if you want for
penalty for now if you want for
collisions. You can still just learn to
collisions. You can still just learn to
ignore some of the collisions I guess.
ignore some of the collisions I guess.
But we would what we'll end up doing is
But we would what we'll end up doing is
probably changing the sweep criterion.
Python doesn't have any built-in way to
Python doesn't have any built-in way to
save a GIF, right?
Yeah, slightly annoying.
But that is fine and that is
But that is fine and that is
substantially
substantially
cleaner. As soon as Ray exports frames,
cleaner. As soon as Ray exports frames,
we'll have
that. How you define differences of
that. How you define differences of
perfume
score.
score.
Um so the only thing is that score is
Um so the only thing is that score is
whatever you want it to
whatever you want it to
be. Perf is a 0ero to one normalized
be. Perf is a 0ero to one normalized
variable. Um, so
like that you can make, let me
think. Since they're both 0 to one
think. Since they're both 0 to one
normalized anyways, it probably makes
normalized anyways, it probably makes
sense to just make per and score the
sense to just make per and score the
same
same
thing. And then
um and you could add like some extra
um and you could add like some extra
variables to log other things. I would
variables to log other things. I would
just make like perf and score both
just make like perf and score both
be did you finish the like the thing
be did you finish the like the thing
without
without
crashing? Well, it's hard to say
crashing? Well, it's hard to say
actually cuz how do they do it? What is
actually cuz how do they do it? What is
what's their completion rate?
their completion rate is or their score
their completion rate is or their score
variable cuz their cars die,
right? Okay. So, if we want to match
right? Okay. So, if we want to match
what they
do, they live and ignore Wait. They live
do, they live and ignore Wait. They live
and they ignore.
and they ignore.
Oh, well that's
awkward. Hang on. Let me think.
Okay, let's do it this way. This is a
Okay, let's do it this way. This is a
little bit weird, but I think this will
little bit weird, but I think this will
uh this will fix the sweep issue and
uh this will fix the sweep issue and
everything else.
everything else.
So, we basically just do it for your
So, we basically just do it for your
first sub trajectory. So, you start you
first sub trajectory. So, you start you
start at zero steps, right?
start at zero steps, right?
Um if you hit anything your score will
Um if you hit anything your score will
be zero for the whole 91 steps. Uh if
be zero for the whole 91 steps. Uh if
you complete your
you complete your
goal then without hitting anything then
goal then without hitting anything then
your score will be one even if you like
your score will be one even if you like
hit something afterwards. So basically
hit something afterwards. So basically
we match their setting where like they
we match their setting where like they
only get one trajectory in those 91
only get one trajectory in those 91
steps because like the agent just dies
steps because like the agent just dies
or the agent stops or whatever.
or the agent stops or whatever.
Um, so for reporting purposes, for
Um, so for reporting purposes, for
scoring, we're only using the first
scoring, we're only using the first
segment from each car for each 91 steps,
segment from each car for each 91 steps,
but then we still get the rest of it to
but then we still get the rest of it to
use as training data. So basically, we
use as training data. So basically, we
do something that way closer to matches
do something that way closer to matches
what they're doing, and we just get
what they're doing, and we just get
extra training data because, you know,
extra training data because, you know,
we don't have this masking
we don't have this masking
nonsense. That should be good, right?
And that should also actually help with
And that should also actually help with
like the um agents respawning on top of
like the um agents respawning on top of
you thing. It's still technically
you thing. It's still technically
possible, but at least now you're not
possible, but at least now you're not
going to have that factor as much into
going to have that factor as much into
the score because you're only like
the score because you're only like
monitoring the first
segment. Try that.
You won't get a double collision, but
You won't get a double collision, but
you may get Yeah. So, if you collide on
you may get Yeah. So, if you collide on
in the first little bit, you just don't
in the first little bit, you just don't
get any score even if you complete the
get any score even if you complete the
goal later,
goal later,
right? And you can log collision rate
right? And you can log collision rate
based on that as
based on that as
well. You can just do all the logging
well. You can just do all the logging
based on like that first sub episode or
based on like that first sub episode or
whatever.
won't get a double
won't get a double
collision. Yeah, you can still
collision. Yeah, you can still
technically get them if
technically get them if
like if like let's say an agent has a
like if like let's say an agent has a
really short trajectory and runs into a
really short trajectory and runs into a
wall and another agent is driving by.
wall and another agent is driving by.
It's still possible. You should get way
It's still possible. You should get way
less of it though.
And also it should be possible to get
And also it should be possible to get
like a 100 though because if all the
like a 100 though because if all the
cars are driving
cars are driving
correctly then none of them collide in
correctly then none of them collide in
the first place. So none of them
the first place. So none of them
respawn. So you should still be able to
respawn. So you should still be able to
get max score. I mean there's still
get max score. I mean there's still
going to be some data issues where like
going to be some data issues where like
some of the data is janked but you
some of the data is janked but you
should be able to get close to max score
should be able to get close to max score
like
like
this.
this.
Yeah. Can you just log the first one?
Yeah. Can you just log the first one?
Yeah, that should be good.
RA could
RA could
respawn. Oh, like if their goal is
respawn. Oh, like if their goal is
really short. Yeah, that's also
true. I mean, to be fair, we can do some
true. I mean, to be fair, we can do some
jank stuff, right? Like
We can do some like spawn immunity or
We can do some like spawn immunity or
some [ __ ] afterwards, right? Let's
some [ __ ] afterwards, right? Let's
just do this first and you'll see it'll
just do this first and you'll see it'll
do you'll get a good policy out of this
do you'll get a good policy out of this
and then if there's like some
and then if there's like some
overlapping nonsense, we can fix
overlapping nonsense, we can fix
that. I mean, we could do stuff where
that. I mean, we could do stuff where
like we could give the cars spawn
like we could give the cars spawn
immunity or whatever, right? Like there
immunity or whatever, right? Like there
bunch of things we could
bunch of things we could
do. I think like it got the point where
do. I think like it got the point where
we found the major bug and it's time to
we found the major bug and it's time to
get the really good
policy. I'm working on cleaning up this
I flipped my camera for the
uh better.
Yeah, this
So other than state I think and the rail
So other than state I think and the rail
stuff this
stuff this
is a fine enough eval loop.
This is a fine eval loop.
A pretty nice train loop other than this
A pretty nice train loop other than this
small config thing that we'll fix in a
small config thing that we'll fix in a
bit.
the driver M is not going to have
um a vector interface, is it?
How did I do this? How did I do this in
How did I do this? How did I do this in
uh the current
version or I guess it's in here.
Oh, wait. You render the driver
end. That seems
weird. The driver M is the one that gets
weird. The driver M is the one that gets
rendered.
and the N gets
and the N gets
stepped the full
action. Oh, I guess cuz it's in a in a
action. Oh, I guess cuz it's in a in a
serial end, it's the same thing. That's
serial end, it's the same thing. That's
why that works,
right? You do want to have it wrapped in
right? You do want to have it wrapped in
um in a serial end as a result.
Now, this is why this works
Okay. So this is now a workable. I mean
Okay. So this is now a workable. I mean
this is a random
this is a random
play but this is actually now rendering
play but this is actually now rendering
correctly.
Um is that the full that's the speed the
Um is that the full that's the speed the
end
end
goes? That seems very fast.
Okay. Initially though, this is
good. I guess now it's the sweep stuff
good. I guess now it's the sweep stuff
that we have to
that we have to
do. We ready to do
that? Guess so.
This whole piece of code has to just go
This whole piece of code has to just go
in main, I think.
You have this separate logs and stats
You have this separate logs and stats
which is
annoying. Okay, here's what we're going
annoying. Okay, here's what we're going
to do.
to do.
We'll
We'll
do target metric.
Ah, it's because
Ah, it's because
um hang on. It's cuz there is a combined
um hang on. It's cuz there is a combined
key, right?
kind of a bit much,
right? We'll leave that function alone
right? We'll leave that function alone
for now.
This function just has too much.
We don't need this info.
up
here or it's costing time steps.
I really just want to get this sweep
I really just want to get this sweep
function like a reasonable
function like a reasonable
size. That's it.
Let me see what all like where's all
Let me see what all like where's all
this extra stuff you've been coming
this extra stuff you've been coming
from. So like there's some extra config
from. So like there's some extra config
I need to look at. All right, we have
I need to look at. All right, we have
the
the
seating and then this is like the
seating and then this is like the
same same as
same same as
before. I guess this is hang
before. I guess this is hang
on. Have end name.
Make
Make
this thing every time.
Why do we keep recording total time
Why do we keep recording total time
steps?
That ever makes
sense? I guess if we were trying to do
sense? I guess if we were trying to do
sample efficiency
stuff, but then it should just be
We shouldn't do this because we're going
We shouldn't do this because we're going
to just modify the way it works
anyways. That gets rid of
this. Oh, no. I know why it
this. Oh, no. I know why it
is. It's because we need to know when
is. It's because we need to know when
like what point this was recorded.
and it makes a ton of sense to do this
and it makes a ton of sense to do this
as well.
Hey
Hey
Jason, where should I start with? I
Jason, where should I start with? I
recently started learning about
recently started learning about
different algorithms of
different algorithms of
ML and projects and the new regression
ML and projects and the new regression
and profit. Now I want to learn more. Uh
and profit. Now I want to learn more. Uh
I mean in general
I mean in general
AI if you're brand new you should
AI if you're brand new you should
probably go through the stuff in
probably go through the stuff in
CS231N with the lectures either by
CS231N with the lectures either by
Justin or Andre Andred.
Justin or Andre Andred.
that's going to be like the best
that's going to be like the best
starting point material. And from there,
starting point material. And from there,
you do projects or read papers depending
you do projects or read papers depending
on your specific interests. Like I've
on your specific interests. Like I've
got a great guide specific to
got a great guide specific to
reinforcement learning uh for newcomers
reinforcement learning uh for newcomers
on my site. But if you're looking for
on my site. But if you're looking for
general ML, you're probably going to
general ML, you're probably going to
want to start with like something like
want to start with like something like
CS231N.
It definitely makes sense to come up
It definitely makes sense to come up
with a better way of doing what I'm
with a better way of doing what I'm
doing here, though. There's like a whole
doing here, though. There's like a whole
bunch of extra stuff that's just devoted
bunch of extra stuff that's just devoted
to this.
Logging of score, cost, time steps,
Logging of score, cost, time steps,
downsampling.
What was the name of the PhD
What was the name of the PhD
program? What do you mean name of the
program? What do you mean name of the
name of the
name of the
program? Name of the PhD program is PhD
program? Name of the PhD program is PhD
program,
program,
right? If you mean the department, it's
right? If you mean the department, it's
an EECS, which is like the giant
an EECS, which is like the giant
cover all department for like almost all
cover all department for like almost all
the
tech. So the thing that I'm like taking
tech. So the thing that I'm like taking
time on right here is just you see
time on right here is just you see
there's like all this extra code here
there's like all this extra code here
for like logging and downsampling these
for like logging and downsampling these
scores and stuff. What this is trying to
scores and stuff. What this is trying to
do is this is trying to take the
do is this is trying to take the
learning curves uh turn it into 10
learning curves uh turn it into 10
points and then give those 10 points as
points and then give those 10 points as
training data to the hyperparamet tuning
training data to the hyperparamet tuning
algorithm. But it's just like adding a
algorithm. But it's just like adding a
bunch of jank here and I want it to not
bunch of jank here and I want it to not
do
that because if we can simplify this a
that because if we can simplify this a
little bit then what we can have is like
little bit then what we can have is like
one very nice self-contained transcript
one very nice self-contained transcript
where you can just read it. it's really
where you can just read it. it's really
obvious what everything is. And then
obvious what everything is. And then
with a few more config changes, like
with a few more config changes, like
we're pretty darn close to the release
we're pretty darn close to the release
date for uh the trainer code.
What are you making right now? Can you
What are you making right now? Can you
explain it in a nutshell? Well, this is
explain it in a nutshell? Well, this is
very like fiddly little debugging for
very like fiddly little debugging for
the release of the next thing, but I
the release of the next thing, but I
work on puffer.ai full-time, puffer lib,
work on puffer.ai full-time, puffer lib,
I do ultra high performance
I do ultra high performance
reinforcement learning. You just go
reinforcement learning. You just go
here. You can see a whole bunch of these
here. You can see a whole bunch of these
demos. They run in your browser. You
demos. They run in your browser. You
have agents that we've trained to play
have agents that we've trained to play
like this massively multi-agent Snake
like this massively multi-agent Snake
game. Um, this looks really cool if you
game. Um, this looks really cool if you
leave it for a while. got like classic
leave it for a while. got like classic
arcade stuff like
arcade stuff like
Breakout that did uh Enduro.
Whoops. Driving
Whoops. Driving
sim. We have more complex stuff as well.
sim. We have more complex stuff as well.
Got like this miniature version of Dota
Got like this miniature version of Dota
or
League. And we've also
League. And we've also
got a follow-up to my PhD thesis, which
got a follow-up to my PhD thesis, which
is neural MMO 3, like this big massive
is neural MMO 3, like this big massive
world in which agents can run
world in which agents can run
around, they can collect resources, get
around, they can collect resources, get
equipment, items, do all the things
equipment, items, do all the things
you'd expect in a basic
MMO. I work on fundamental research on
MMO. I work on fundamental research on
how do we make reinforcement learning
how do we make reinforcement learning
faster, better, more stable for use in
faster, better, more stable for use in
both academia and in industry. We have
both academia and in industry. We have
the fastest and some of the simplest RL
the fastest and some of the simplest RL
tools around and they're all open
source. But a lot of what goes into that
source. But a lot of what goes into that
is me staring at relatively simple
is me staring at relatively simple
pieces of code for a very long time and
pieces of code for a very long time and
trying to figure out how to make them
trying to figure out how to make them
faster and simpler.
It would be so much easier if you could
It would be so much easier if you could
just observe the
just observe the
full trajectory, right?
But that'll break the Gaussian
process. The Gaussian processes, they
process. The Gaussian processes, they
just scale really
badly. Like I can only afford to give it
badly. Like I can only afford to give it
maybe a few thousand points before it
maybe a few thousand points before it
starts to get really
starts to get really
slow. It's actually probably is already
slow. It's actually probably is already
going to get slow with a few thousand
going to get slow with a few thousand
points, come to think of it.
I
mean, I guess it's questionable whether
mean, I guess it's questionable whether
it even makes sense to
it even makes sense to
model trajectories like this.
This is kind of just like something I
This is kind of just like something I
did without
did without
really checking too much if it actually
really checking too much if it actually
helps. So, you know what? Instead of
helps. So, you know what? Instead of
like instead of stressing over this,
like instead of stressing over this,
what I should probably do is just
what I should probably do is just
like leave it as it is for now. And then
like leave it as it is for now. And then
we'll run once I have this cleaned up,
we'll run once I have this cleaned up,
we'll run an experiment where we like do
we'll run an experiment where we like do
a big sweep over a hard end, like do 200
a big sweep over a hard end, like do 200
experiments with this and then we'll do
experiments with this and then we'll do
200 experiments just using the final
200 experiments just using the final
data point. And if they do the same, we
data point. And if they do the same, we
can just delete all this stuff and then
can just delete all this stuff and then
it'll be really
it'll be really
simple, right?
And if it actually helps a lot, then you
And if it actually helps a lot, then you
know I don't mind having a little bit of
know I don't mind having a little bit of
complexity knowing it actually does
something. I think that's the plan with
something. I think that's the plan with
this. So in that case
this. So in that case
then just make this sweeps on.
Yeah, this would actually get way
Yeah, this would actually get way
simpler, come to think of it,
simpler, come to think of it,
right? We just needed the last data
right? We just needed the last data
point.
Cool. So, this runs
nicely. This runs quite nicely
nicely. This runs quite nicely
indeed. Can you tell me if doing this
indeed. Can you tell me if doing this
kind of stuff is still relevant? Like
kind of stuff is still relevant? Like
there are a lot of games
This has nothing to do
This has nothing to do
with with games or graphics or any of
with with games or graphics or any of
that. This is um this is like
that. This is um this is like
fundamental research on AI. This is like
fundamental research on AI. This is like
how do we make better AI that learns
how do we make better AI that learns
through
through
interacting. We don't just run it on
interacting. We don't just run it on
games. We like games because they're
games. We like games because they're
really good for um testing algorithms
really good for um testing algorithms
because they're like very interpretable.
And the way we do stuff, at least the
And the way we do stuff, at least the
results are pretty general.
lines. This is reasonably cleaned
up. Like reasonably, right?
How are we doing on our
How are we doing on our
uh meta
experiments? Okay, we are doing quite
experiments? Okay, we are doing quite
well.
Only 41 experiments in as
Only 41 experiments in as
well. A good
well. A good
result. I believe 2.5 is our
result. I believe 2.5 is our
best. And that was running for much
best. And that was running for much
longer as
well.
Hello. Let's get rid of that.
Okay. I mean, I think then the next
Okay. I mean, I think then the next
thing we do with this is we figure out
thing we do with this is we figure out
um we figure out the configs, right?
We kind of did a lot of the rest of
We kind of did a lot of the rest of
this. This has come out quite
this. This has come out quite
well. So now we no longer
well. So now we no longer
have like a ton of little
have like a ton of little
annoying extra functions
annoying extra functions
here for uh the main script.
This only gets called in two places as
This only gets called in two places as
well here and in um sweep code. There's
well here and in um sweep code. There's
a possibility that if we don't need
a possibility that if we don't need
um like the aggregation, we might
um like the aggregation, we might
actually be able to cut that out
actually be able to cut that out
entirely, which would be
cool. So, we'll start on config stuff
cool. So, we'll start on config stuff
next. I'm going to be back in few
next. I'm going to be back in few
minutes. Going to go grab a drink, use a
minutes. Going to go grab a drink, use a
restroom, all that. Walk around a little
restroom, all that. Walk around a little
bit. Find a freaking flatter maybe.
Jeez. Be right back.
Okay, we're back.
nonfict
shenanigans. First of all, let's think.
shenanigans. First of all, let's think.
Let's make sure what I want to do even
Let's make sure what I want to do even
makes any sense.
So, what I was thinking here, I've got
So, what I was thinking here, I've got
this pufferlib.namespace thing that I
this pufferlib.namespace thing that I
use.
Um, and it's kind of just
Um, and it's kind of just
like a dictionary with dot notation.
like a dictionary with dot notation.
It's sort of like a simple namespace if
It's sort of like a simple namespace if
you know those,
you know those,
but it like simple namespace doesn't
but it like simple namespace doesn't
quite do all the things you'd want a
quite do all the things you'd want a
dictionary to
do. But the thing
is introducing a new data type like that
is introducing a new data type like that
is kind of freaking
is kind of freaking
ridiculous,
right? Like when you start like
right? Like when you start like
replacing Python's dictionary or like
replacing Python's dictionary or like
whatever with your own,
whatever with your own,
you're kind of fighting the language for
you're kind of fighting the language for
no reason.
I guess I just don't like the way that
I guess I just don't like the way that
Um, dictionaries require brackets and
Um, dictionaries require brackets and
quotes to access
stuff, but that's like
stuff, but that's like
a such a minor
a such a minor
net to introduce a whole new data
net to introduce a whole new data
structure. No, instead of that, let's
structure. No, instead of that, let's
just let's not go one way or the other
just let's not go one way or the other
yet. Let's just
yet. Let's just
see what would the code look like if we
see what would the code look like if we
made if we put more into that data
made if we put more into that data
structure and what would it look like
structure and what would it look like
with less. First of all, how how where
with less. First of all, how how where
do I use
this? Okay. So I
this? Okay. So I
use the bunch and clean
RL few other little This
is definitely like few enough places
is definitely like few enough places
that that would be a pretty
that that would be a pretty
easy refactor.
easy refactor.
Now let's see what I'm actually saving
Now let's see what I'm actually saving
in clean puff roll with
this. So experience is a name space.
access
proper. Surely somebody's timed this
Okay. So,
So this is just a new project, right?
Just use a damn
Just use a damn
dictionary. It
seems all these rappers are
seems all these rappers are
slow. Name space probably slow.
It's weird
It's weird
though because
though because
um guess I don't know how Python does
um guess I don't know how Python does
this
this
internally. Probably does string
internally. Probably does string
processing either way.
I mean, if I want to be ridiculous, I
I mean, if I want to be ridiculous, I
could write
could write
um a very quick time thing,
right? Let's just be ridiculous for a
right? Let's just be ridiculous for a
second. All right, this is kind of
second. All right, this is kind of
silly, but
Hey,
Spencer. Well, we'll see how the sweep
Spencer. Well, we'll see how the sweep
goes.
H amusingly I was actually right.
Doesn't does it depend on
um does it depend on uh key
length? No, they must cach the uh the
hashes. All right. So, it's not like
hashes. All right. So, it's not like
insane. You never want to trust
insane. You never want to trust
uh the Python implementations.
uh the Python implementations.
be
reasonable. I mean, those are times that
reasonable. I mean, those are times that
um if I'm doing
um if I'm doing
one8 Python loops anyways, I kind of
one8 Python loops anyways, I kind of
deserve to be slow, right?
when my name space is almost certainly
when my name space is almost certainly
slower.
So putting the perf thing aside
then the creation is the same of a
then the creation is the same of a
namespace versus anything else because
namespace versus anything else because
you can call dict with this
syntax like yeah this is not any
better. You can
better. You can
likewise do the same thing with a
likewise do the same thing with a
dictionary like this.
The only thing you can't do is access
The only thing you can't do is access
stuff with dot
notation. So that is moderately
notation. So that is moderately
annoying, right? Because
like all these config things
I'm going to use this
everywhere. I mean, that is arguably
everywhere. I mean, that is arguably
like a big deal, right?
having to have
having to have
um the obnoxious string
um the obnoxious string
accessor notation freaking everywhere in
accessor notation freaking everywhere in
your
mode is cost no longer the x-axis for
mode is cost no longer the x-axis for
sweeps.
What mean is it no
What mean is it no
longer? Yeah, Spencer, it is it is the
longer? Yeah, Spencer, it is it is the
X. You set the X-axis to whatever you
X. You set the X-axis to whatever you
want, but the actual criterion, right?
want, but the actual criterion, right?
The PTO front is evaluated with runtime
The PTO front is evaluated with runtime
versus whatever score
versus whatever score
variable. You can look at the data in
variable. You can look at the data in
steps or in time or whatever, but the
steps or in time or whatever, but the
way that we select the best one by the
way that we select the best one by the
sweeps algorithm is on
time. This is actually like not an
time. This is actually like not an
entirely clear decision to me. like this
entirely clear decision to me. like this
is um a bit more complicated than you
is um a bit more complicated than you
would think, right? So it ultimately it
would think, right? So it ultimately it
boils down to right is it worth
introducing a custom
type to clean up Python's default
type to clean up Python's default
syntax versus using the thing that
syntax versus using the thing that
everyone
everyone
knows which has the annoying syntax.
knows which has the annoying syntax.
Is it better to have dictionaries with a
Is it better to have dictionaries with a
million like annoying accessors
million like annoying accessors
everywhere? I mean, instead of a dot,
everywhere? I mean, instead of a dot,
it's four keystrokes, right? It's it's
it's four keystrokes, right? It's it's
like four it's three extra characters uh
like four it's three extra characters uh
per access with oftentimes multiple per
per access with oftentimes multiple per
line. Like that's not a insubstantial
line. Like that's not a insubstantial
amount of additional crap in here. I
amount of additional crap in here. I
mean, we probably access some form of
mean, we probably access some form of
this at least a couple hundred times in
this at least a couple hundred times in
this file.
This one is irritating cuz it's like the
This one is irritating cuz it's like the
default Python thing is so close but
default Python thing is so close but
like it's
like it's
not. Let's actually Let me see
not. Let's actually Let me see
something.
The simple name space
The simple name space
right from types import simple
namespace. First of all
namespace. First of all
that calling it simple namespace like
that calling it simple namespace like
this is horrendous but
whatever this gives you name
whatever this gives you name
space doesn't have
keys can't iterate over
That's awful, All right.
So, like there's no case where we're
So, like there's no case where we're
ever using this thing alone.
Man, you know, it's
Man, you know, it's
like, you know what this reminds me
of? It's not this thing, right?
Not
Not
this. What's that like library that just
this. What's that like library that just
defines a ton of
defines a ton of
types? Is it this
thing? There was like I don't think it
thing? There was like I don't think it
is this thing. What's the repo that just
is this thing. What's the repo that just
like they define their own data types
like they define their own data types
for
everything? I thought it was
this. It's this right fast core.
Like they do all this stuff, right,
Like they do all this stuff, right,
where they have tons of things that are
where they have tons of things that are
arguably very convenient, but they just
arguably very convenient, but they just
like blow up the size of of your basic
like blow up the size of of your basic
utils ridiculously, right?
Like arguably I think that this like if
Like arguably I think that this like if
this were in Python this would make the
this were in Python this would make the
language worse overall just from the
language worse overall just from the
amount of
stuff. But basically it's like I don't
stuff. But basically it's like I don't
want to do this which like ah we didn't
want to do this which like ah we didn't
like the default so we made our own.
like the default so we made our own.
It's kind of bad,
right? I don't think sweep.py reports
right? I don't think sweep.py reports
SPS. Yeah, I I got to fix that, Spencer.
Like it would seem to me like it's a bad
Like it would seem to me like it's a bad
idea to have this namespace thing. And
idea to have this namespace thing. And
this is kind of like leftover from when
this is kind of like leftover from when
I was screwing around doing like
I was screwing around doing like
language level
language level
stuff last
summer. But at the same time, it's just
summer. But at the same time, it's just
like this one
like this one
This one particular thing with the
This one particular thing with the
config is just so bloody annoying.
And arguably I
could I can't even like have it be a a
could I can't even like have it be a a
can't even like convert it to a simple
can't even like convert it to a simple
name space or
name space or
anything. I'd have to do fully
anything. I'd have to do fully
dictionary stuff.
Maybe this is obvious,
right? The answer is probably to use the
right? The answer is probably to use the
language the way the language was
language the way the language was
intended. Not fight the thing. You can
intended. Not fight the thing. You can
be mad at it,
be mad at it,
but like trying to hack around it is
but like trying to hack around it is
probably just
stupid. I think that's probably the
stupid. I think that's probably the
right
right
call. Removing a primitive is good.
Just check one thing with Pep.
Yeah, I think what we do is we make a
Yeah, I think what we do is we make a
commit and then we do the
commit and then we do the
thing and then uh we make sure we like
thing and then uh we make sure we like
it. But yeah, I think that's going to be
it. But yeah, I think that's going to be
most likely
Oh
Oh
yeah, we'll
just start with this.
and we'll see what has to be fixed
and we'll see what has to be fixed
immediately from this.
So this is adding um a little bit of
So this is adding um a little bit of
annoyance I would say to the way that
annoyance I would say to the way that
the uh the code has to be written. But I
the uh the code has to be written. But I
do think that it is worse for me to be
do think that it is worse for me to be
introducing custom types for like basic
introducing custom types for like basic
stuff.
We'll take a little while to do this by
We'll take a little while to do this by
hand, but I don't want to like auto it
hand, but I don't want to like auto it
and mess something way more important
up. The single line autocomplete helps
up. The single line autocomplete helps
because I can like still read the row.
Plus, I get to clean things up along the
Plus, I get to clean things up along the
way a little bit.
device everywhere.
So, this is going to be a little
So, this is going to be a little
ridiculous,
right? Get zeros.
This doesn't This is completely
This doesn't This is completely
redundant. So is
redundant. So is
this. This
We're getting there bit by
bit. I think this was the right decision
bit. I think this was the right decision
though ultimately.
Like I don't feel that stupid for having
Like I don't feel that stupid for having
done this
because the reason why it's
because the reason why it's
stupid is like kind of
subtle. Basically like last summer I
subtle. Basically like last summer I
started I started getting into like
started I started getting into like
lower level style of thinking on a lot
lower level style of thinking on a lot
of programming and I started thinking
of programming and I started thinking
like ah is there a way that I can write
like ah is there a way that I can write
my Python code more like CC code?
Um, and like initially you wouldn't
Um, and like initially you wouldn't
necessarily
necessarily
think particularly if like me you've
think particularly if like me you've
been writing Python for many years that
been writing Python for many years that
there would be any natural barrier to
there would be any natural barrier to
doing that. But the language actually
doing that. But the language actually
kind of forces you into the way that a
kind of forces you into the way that a
lot of code is written in the language.
lot of code is written in the language.
Not all of it, mind you. People still
Not all of it, mind you. People still
write awful awful code. But like there's
write awful awful code. But like there's
a reason that Python has a ton of
a reason that Python has a ton of
classes usually and things are put into
classes usually and things are put into
classes by default. Um there's a reason
classes by default. Um there's a reason
that there isn't like a good strruct for
instance. And when you try to like fight
instance. And when you try to like fight
that, you end up making more of a mess
that, you end up making more of a mess
than just doing it the way that the
than just doing it the way that the
language intends you to do, but keeping
language intends you to do, but keeping
it as simple as possible within that.
So, it's not that
So, it's not that
bad to have done all that. But I think
bad to have done all that. But I think
it is correct now that
it is correct now that
we get rid of
I mean, I guess like another way I
I mean, I guess like another way I
should have looked at it initially would
should have looked at it initially would
be
be
like if um if I don't know anybody else
like if um if I don't know anybody else
about anything else about somebody
about anything else about somebody
programming and you tell me that they
programming and you tell me that they
heavily used like the fast API core that
heavily used like the fast API core that
makes me more or less excited to look at
makes me more or less excited to look at
their code much less excited
right or heck like even if I 10x the
right or heck like even if I 10x the
namespace thing, right? If I have all my
namespace thing, right? If I have all my
own custom types,
like that's probably not a good thing.
like that's probably not a good thing.
Well, it probably does mean that you
Well, it probably does mean that you
care a lot about your work, but uh it
care a lot about your work, but uh it
also probably means that you engineer a
also probably means that you engineer a
lot of problems in addition to
lot of problems in addition to
solutions.
or at the very least
like you know you very much would like
like you know you very much would like
to be working in another language and
to be working in another language and
are like really annoyed you're stuck in
are like really annoyed you're stuck in
this
one which is fair like you know I'd
one which is fair like you know I'd
rather be writing see
But this isn't bad as long as we keep it
But this isn't bad as long as we keep it
reasonable.
This I'm not letting it auto
This I'm not letting it auto
complete like mess
up. Actually, you know what? We can
up. Actually, you know what? We can
clean this up because we can do P
clean this up because we can do P
A theta equals
1 - B 0 time alpha.
Ars like this is this can now be
Ars like this is this can now be
simplified a little bit.
Well, not
Well, not
really. I guess not really,
huh?
huh?
Big. Oh, yeah. But then all these are
Big. Oh, yeah. But then all these are
now these are
now these are
dicks. So, um this now has to be like
just on.
Okay. So, profile
eval. Yeah, these were simple name
eval. Yeah, these were simple name
spaces before as well,
spaces before as well,
right? Or puffer name
spaces. Oh.
Abs [ __ ]
60.
Yeah, like stuff like
Yeah, like stuff like
this really annoying.
Holy Yeah, there's going to be a lot of
Holy Yeah, there's going to be a lot of
this actually. That's annoying.
this run yet?
almost all the way down to
sample the batch as well.
We're definitely going to have to look
We're definitely going to have to look
at
at
um whether this
um whether this
changes the way I want to do any
changes the way I want to do any
batching or not. You know, maybe I don't
batching or not. You know, maybe I don't
want to have to keep accessing all
want to have to keep accessing all
these. Maybe I want to access them once
these. Maybe I want to access them once
at the start of the batch.
This is why I thought about it for so
This is why I thought about it for so
long cuz it's actually like a
long cuz it's actually like a
non-trivial change, right?
Okay, still works.
If sweep still
work. Works for now. We'll see if it
work. Works for now. We'll see if it
goes all the way through.
And then there's no more name space in
And then there's no more name space in
here.
There is a chance that I end up
There is a chance that I end up
reverting this. We will see. I kind of
reverting this. We will see. I kind of
have to like work with the code for a
have to like work with the code for a
bit and see how it
bit and see how it
feels. If it's like noticeably worse
feels. If it's like noticeably worse
just writing code having to do this,
just writing code having to do this,
then I might revert it. But for now,
then I might revert it. But for now,
this is what we're going to do.
Okay. Does that
Okay. Does that
change how I think about configuration
change how I think about configuration
down here at
down here at
all? Probably a bit.
all? Probably a bit.
Right. It's 4:37 and have like an hour
Right. It's 4:37 and have like an hour
hour
10.
10.
Okay. Um, let's just let's finish this
Okay. Um, let's just let's finish this
little section and then I'll do what I
little section and then I'll do what I
need to do uh outside of
this. Right. So I remember
here there's like this weird nested
here there's like this weird nested
thing, right?
This is unpacking arc parse.
And then similarly this like little
unroll it's used twice
right actually this is kind of a
right actually this is kind of a
specific function.
I'm actually fine with us having this
I'm actually fine with us having this
one cuz this actually does something
one cuz this actually does something
kind of
non-trivial, not just a stylistic
thing. It has to compress the keys in a
thing. It has to compress the keys in a
specific
way. So now if we accept
way. So now if we accept
that, this thing is hacky as hell.
Let me see what I had this as an uh
Let me see what I had this as an uh
20 in
demo. So this unpack was this
this little section right
here. And the literal eval moved up. We
here. And the literal eval moved up. We
got rid of that.
me try something. Let me see if I can
me try something. Let me see if I can
get this to work without nesting or any
get this to work without nesting or any
[ __ ]
Is this what it would look
like? I think that's all it
is. And I just didn't like this because
is. And I just didn't like this because
um like whatever uncompressed or
um like whatever uncompressed or
whatever. This is way
whatever. This is way
clearer to
read. There anything else I can do that
read. There anything else I can do that
would make this even better?
Oh, it's not melts.
That do
it.
it.
Nah.
Didn't think
so. What was that? Set default. Was that
so. What was that? Set default. Was that
making it up?
This is a freaking
thing. Okay.
Python with all the weird
methods. So that is compactified.
Oh, you know what this can
be? Yep, you can do that in Python. I
forgot. Should be able
forgot. Should be able
to I mess
up. This works, right?
package
ocean. It is worth cleaning this up.
ocean. It is worth cleaning this up.
However, I
However, I
can not have this browser covering chat.
Oh, I see. I'm going one too far.
Is there a clean way to do this?
would be this
right. Yeah.
Okay. Well, that's not
Okay. Well, that's not
bad. That's like pretty concise.
Oh, actually
wait. We
do. No, I think this is about as good as
do. No, I think this is about as good as
it
it
gets. Might be something slightly
gets. Might be something slightly
better, but this is pretty good. Not
better, but this is pretty good. Not
worth spending more time on
that. I am happy that we got the jank
that. I am happy that we got the jank
nested dictionary thing out of it
though. Now, does this change anything
though. Now, does this change anything
in the way that I uh I look at configs
in the way that I uh I look at configs
at all?
Not
Not
particularly. So there might be a few
particularly. So there might be a few
things I can do generally like
things I can do generally like
combining configs or like generally
combining configs or like generally
cleaning some stuff up. Here's the
cleaning some stuff up. Here's the
restroom real quick. Maybe back in few
restroom real quick. Maybe back in few
minutes and then we will
minutes and then we will
keep working on making this file better.
keep working on making this file better.
I will be back.
Okay, let
Okay, let
me apply to one message.
picking one message and we'll go back to
Reading one document here.
sending one thing over and then we
sending one thing over and then we
should be uh back to working on this.
should be uh back to working on this.
Apparently I am spammed with tons of
messages none of which matter. Perfect.
Good. What do we have going on in gen
Good. What do we have going on in gen
chat? Random
stuff. We actually do have some folks
stuff. We actually do have some folks
working on drone with this, which is
working on drone with this, which is
great.
So, I think now we're just going to go
So, I think now we're just going to go
through this section a little bit and
through this section a little bit and
see if we can clean up a few of the ways
see if we can clean up a few of the ways
we're doing the config
we're doing the config
files. And we're getting down to a
files. And we're getting down to a
pretty
pretty
minimal end product here.
like a thousand lines of code for all of
like a thousand lines of code for all of
our
training like what is this All
right. Well, you had to add in
right. Well, you had to add in
experiment
experiment
ID like tag. You had to add in these
ID like tag. You had to add in these
things
things
here because the train class is actually
here because the train class is actually
doing the logging,
doing the logging,
right? And why is the train class doing
right? And why is the train class doing
the
logging? It's a good
logging? It's a good
question. Does the train class have to
question. Does the train class have to
do the logging?
Let's consider
that you have this mean and
that you have this mean and
log. This just gives you
log. This just gives you
logs. You could just as easily integrate
logs. You could just as easily integrate
this into the main transcript, right?
and then this wouldn't have to know
and then this wouldn't have to know
anything about want to be or
Neptune. Okay. The thing that prevents
Neptune. Okay. The thing that prevents
me from doing that at the moment
me from doing that at the moment
is the sweep stuff because you'd have to
is the sweep stuff because you'd have to
do it twice essentially.
Maybe we can change this. Hang
on. The train
code. Okay. So, this is the train code
code. Okay. So, this is the train code
here. It's just this little section.
I wonder if we could
I wonder if we could
put take this sweep
put take this sweep
code.
Could we like make this just the main
Could we like make this just the main
code path? We wouldn't need to have
code path? We wouldn't need to have
separate code for train and
separate code for train and
sweep. That would be kind of cool.
without having to like split out the
without having to like split out the
inner of this into a function. Okay,
inner of this into a function. Okay,
what would that
what would that
require? Let's say that we don't need
require? Let's say that we don't need
the full the full curves for the
the full the full curves for the
hyperparam sweep algorithm. Let's say
hyperparam sweep algorithm. Let's say
that we run the experiment and that that
that we run the experiment and that that
goes
goes
away. So then
It's all in it all ends up being
It's all in it all ends up being
basically the same,
right? Yeah. Code literally ends up
right? Yeah. Code literally ends up
being the same.
So basically all we need to know
then is whether or not we need this
then is whether or not we need this
score and cost
stuff. I mean heck, we could just assume
stuff. I mean heck, we could just assume
we're going to be able to simplify it a
we're going to be able to simplify it a
little bit,
little bit,
right? And just keep it regardless.
Okay, I'm kind of interested in doing
Okay, I'm kind of interested in doing
this. Kind of
this. Kind of
interested. Put this autotune up here.
I guess the thing that is going to be
I guess the thing that is going to be
different, right, is
like if you're like running eval or
thing. There a clean way to do this? It
thing. There a clean way to do this? It
feels like if I'm clever here, there is
feels like if I'm clever here, there is
just going to be a clean way to do this
just going to be a clean way to do this
to not need to have multiple code paths.
I mean the plus side right now is the
I mean the plus side right now is the
train one is really really
clean. Okay. If there were no other
clean. Okay. If there were no other
initialization or stuff,
initialization or stuff,
right? It's basically just block of code
right? It's basically just block of code
and block of code with for loop.
And I would and I would prefer to avoid
And I would and I would prefer to avoid
put block of code into separate
put block of code into separate
function ideally.
Do you know
What? I I don't necessarily mind as much
What? I I don't necessarily mind as much
having this be a separate function
having this be a separate function
now. Do
I? What if we just put this? Let's Let's
I? What if we just put this? Let's Let's
say we take this thing. Okay.
say we take this thing. Okay.
do
experiment back
experiment back
end policy and
then what if we do
then what if we do
this
this
experiment we do depth experiment up
there
experiment. This could be kind of cool.
So now if this actually if this logic
So now if this actually if this logic
does compress this just becomes loop
does compress this just becomes loop
over
experiment. And then we could even put
experiment. And then we could even put
like a loop down here and train over
like a loop down here and train over
like numbum seeds or whatever if we
want. And what if it
doesn't? Okay, so let's let's think
doesn't? Okay, so let's let's think
about both cases. If this if the logic
about both cases. If this if the logic
for all of the like down sampled curve
for all of the like down sampled curve
stuff doesn't end up being necessary for
stuff doesn't end up being necessary for
sweep, we're good. If it does end up
sweep, we're good. If it does end up
being necessary, then we have like 20 30
being necessary, then we have like 20 30
additional lines of stuff
additional lines of stuff
um that we would ideally like to keep
um that we would ideally like to keep
out of the main experiment interface.
I mean, we could totally just make the
I mean, we could totally just make the
experiment
experiment
return all of the logs, like just a list
return all of the logs, like just a list
of all the logs from the whole
of all the logs from the whole
experiment, right?
Let's actually implement it that way
Let's actually implement it that way
first. I think it
works. Bogs
So like if I did this right return all
So like if I did this right return all
the
logs and we go down to
logs and we go down to
sweeps right
here back end
policy. Let's write like
policy. Let's write like
this. So it's just going to be
experiment. Okay. So now we don't need
experiment. Okay. So now we don't need
this.
So we then we have
So we then we have
um fours
equals like this
equals like this
right going to be like up
time. Let's just say we put up time in
time. Let's just say we put up time in
there, right?
Let's do
that.
Um, time steps. We get this from here.
So now we no longer need this,
So now we no longer need this,
right? Or this. We already have all
this. And now we actually can do down
this. And now we actually can do down
sample
linear
and something like this.
Oh, and actually can we do better? No,
Oh, and actually can we do better? No,
we can't because we need to do this down
we can't because we need to do this down
sample operation. So,
Yeah. So this is actually there is going
Yeah. So this is actually there is going
to be a bug here I if I don't uh patch
to be a bug here I if I don't uh patch
this. So let me let me go deal with
this. So let me let me go deal with
this. Uh I need to make sure that the
this. Uh I need to make sure that the
total time steps gets logged at the end
total time steps gets logged at the end
correctly.
Oh, I know how to do it.
Not this one. Right. Come on. Args.
Okay. So, something like this. Then this
Okay. So, something like this. Then this
is now pretty
short. Yeah. This is now very very
short. Yeah. This is now very very
short. And I no longer use X by here.
thing up
here. It's getting
there. It is getting there.
Let's see what I uh let's see what I
Let's see what I uh let's see what I
broke. Assuming I broke
broke. Assuming I broke
something. Okay, so train still works,
something. Okay, so train still works,
right?
It's pretty
It's pretty
good. Pretty good.
I mean, this opens it up a ton, doesn't
it? Feels like it opens it up a ton.
little debugging.
untype
nons all logs of zero is
nons all logs of zero is
none
Really?
Okay. And we will like we can fix this
Okay. And we will like we can fix this
type of stuff, right? But like we're not
type of stuff, right? But like we're not
going to actually add this into this
going to actually add this into this
nice clean experiment function. We're
nice clean experiment function. We're
going to fix this in the main
going to fix this in the main
environment, I'm sure.
environment, I'm sure.
But let's see if this does uh what we
But let's see if this does uh what we
expect given
this 522
Oh
yeah, there we
are. So this looks good then. This looks
are. So this looks good then. This looks
uh this looks quite good.
So we now instead of having a bunch of
So we now instead of having a bunch of
these functions, we have the final 15%
these functions, we have the final 15%
of the code.
of the code.
925 1128. So 200
925 1128. So 200
lines devoted to all the different types
lines devoted to all the different types
of experiments and config and everything
of experiments and config and everything
else. Call it 220 something lines with
else. Call it 220 something lines with
this.
this.
Not bad at
all. Just like our harness for stuff.
all. Just like our harness for stuff.
And we can work on like reducing this
And we can work on like reducing this
bit by bit as
well. Very good.
Oh yeah. How is our sweep
doing? Have some more experiments in
doing? Have some more experiments in
here by now,
right? Pretty good.
right? Pretty good.
doing pretty well.
Hello. How's it
going? Doing well here. Fairly
productive. Fixed uh the driving sim
productive. Fixed uh the driving sim
bug and now we are uh pretty well
bug and now we are uh pretty well
through
through
one of the last like major refactors
one of the last like major refactors
that I really wanted to figure out
that I really wanted to figure out
before release. At least I think we've
before release. At least I think we've
gotten the hard parts of this
done. There's a lot of like little clean
done. There's a lot of like little clean
up I'm sure here,
up I'm sure here,
but all like the difficult stuff is
but all like the difficult stuff is
pretty good.
I'm trying to think what's going to be
I'm trying to think what's going to be
the most productive way to go uh from
the most productive way to go uh from
here
because I can still totally break stuff
because I can still totally break stuff
by accident is the thing. It's like we
by accident is the thing. It's like we
can't run the final experiments yet, but
can't run the final experiments yet, but
we're getting pretty close.
I guess probably next step is going to
I guess probably next step is going to
be get it feature
complete. So get all get the library
complete. So get all get the library
basically behaving exactly the way I
basically behaving exactly the way I
want it and then do the final
cleanups. Of course some of the features
cleanups. Of course some of the features
the final features do depend on the
the final features do depend on the
experiments.
Welcome all the YouTube
folks. And I guess really the only other
folks. And I guess really the only other
big one was uh fixing the Neptune and WB
big one was uh fixing the Neptune and WB
integration. Actually, I got an email
integration. Actually, I got an email
back from them.
back from them.
Let me go figure out where where this
Let me go figure out where where this
email is because they apparently they
email is because they apparently they
told they responded on whether um their
told they responded on whether um their
new API is going to be available to
new API is going to be available to
general
general
public or
not. Let me see.
Well, the slack page 404s
here. Maybe I can. Maybe it puts me to
here. Maybe I can. Maybe it puts me to
the
same. Okay, it does
actually. We're preparing docs and
actually. We're preparing docs and
online
online
content in anticipation for a more
content in anticipation for a more
public general access release.
public general access release.
The current version will version will
The current version will version will
likely be maintained until the end of
likely be maintained until the end of
the year once we have a migration
the year once we have a migration
plan for all current
customers. Okay.
trying to see where the
um if they're going to move this to
um if they're going to move this to
uh if they're going to move this to like
uh if they're going to move this to like
paid only. We're going to have to
paid only. We're going to have to
migrate
migrate
this. So, it depends how they're doing
this. So, it depends how they're doing
this here. Uh they 5x their pricing,
this here. Uh they 5x their pricing,
didn't they?
didn't they?
Yeah, this used to be 50.
I mean, they do have a good product, but
I mean, they do have a good product, but
the thing is I can't I can't have the
the thing is I can't I can't have the
default uh be this if they don't have a
default uh be this if they don't have a
trial or they're not going to have a
trial or they're not going to have a
trial. Now, they still currently
trial. Now, they still currently
have Where is
have Where is
it? Where's the page for it?
If you hit
If you hit
login, I think I have to do this in a
login, I think I have to do this in a
new tab. Hang on. This is actually this
new tab. Hang on. This is actually this
is important because
is important because
um otherwise we're going to have to do
um otherwise we're going to have to do
like a tensorboard back end or
like a tensorboard back end or
something.
Yeah. So, you do actually there is a
Yeah. So, you do actually there is a
free account trial or whatever.
All right, we'll see what they say on
All right, we'll see what they say on
that. I do hope that they're not going
that. I do hope that they're not going
to completely shoot themselves in the
to completely shoot themselves in the
foot there.
foot there.
Um, it's a very good tool and like I
Um, it's a very good tool and like I
might even still consider using it
might even still consider using it
personally.
But yeah, they're in a tough place I get
But yeah, they're in a tough place I get
because it's like not only do they want
because it's like not only do they want
to charge, they want to charge a lot
to charge, they want to charge a lot
because the addressable market like
because the addressable market like
they're marketing to researchers, which
they're marketing to researchers, which
is a pretty small crowd, but like at the
is a pretty small crowd, but like at the
same
time, it's not like a
time, it's not like a
crazy there's like nothing here that is
crazy there's like nothing here that is
worth that amount of money, right?
Like it's not fast. It's fast compared
Like it's not fast. It's fast compared
to shitty modern electron
apps. Like most shitty modern electro uh
apps. Like most shitty modern electro uh
electron
apps. What would the alternative be?
apps. What would the alternative be?
Like tensorboard.
this local run with
tensorboard. I forget. Does wi still
tensorboard. I forget. Does wi still
have their free
accounts? Yeah.
accounts? Yeah.
So, they still have the
um Ah, it's I see. So, it's free forever
um Ah, it's I see. So, it's free forever
for
for
personal
development. No, they still have they
development. No, they still have they
still have their free accounts. They
still have their free accounts. They
still totally have their free
still totally have their free
accounts. So, it would just be go back
accounts. So, it would just be go back
to wannabe
badly, which
badly, which
sucks because uh Neptune is
sucks because uh Neptune is
substantially better and I would like
substantially better and I would like
have to basically go back to
have to basically go back to
um figuring out how to do stuff on this
If they rug their own community though,
If they rug their own community though,
like if they rug their user base on
like if they rug their user base on
that, that's on
them. Yeah, they they literally they 5x
them. Yeah, they they literally they 5x
their lowest tier pricing over their
their lowest tier pricing over their
competitor as
well. I don't know what they're doing.
And
And
like that's like a little concerning
like that's like a little concerning
actually, isn't it? I mean, just
actually, isn't it? I mean, just
thinking what they're
doing. And yeah, they're totally based
doing. And yeah, they're totally based
on this, they're pricing it for academic
on this, they're pricing it for academic
as
as
well. So like they think that academic
well. So like they think that academic
labs are going to pay 500 bucks a user a
labs are going to pay 500 bucks a user a
month.
month.
Like do they realize that they pay their
Like do they realize that they pay their
students like three, four grand a
month? Like labs have no money.
I hope they don't call Makazi on this.
Well, nothing I can do in the meantime
Well, nothing I can do in the meantime
other than use the current API, update
other than use the current API, update
it so it works with W and Neptune, and
it so it works with W and Neptune, and
we go from
there. Let's go check if I can find even
there. Let's go check if I can find even
the current Neptune API.
I go
here. So track files.
Model
metadata source
metadata source
code
monitoring log images. Custom plots and
monitoring log images. Custom plots and
charts.
I guess this This is
I guess this This is
the
Neptune model registry to experiment.
experiments. I guess I can just upload
experiments. I guess I can just upload
the file, right?
copy model metadata from model registry
copy model metadata from model registry
to
to
experiments where model identifier and
experiments where model identifier and
version as
tags Group tags to organize your
tags Group tags to organize your
models and tags to
create saved views.
fetch models
table. Oh no, this is just for migration
table. Oh no, this is just for migration
though. Just for migration.
Okay, I it's just going to be upload or
Okay, I it's just going to be upload or
whatever, right? Add files or upload.
whatever, right? Add files or upload.
And we'll just do
that. I guess it's probably this one
that. I guess it's probably this one
because that other one's just for
because that other one's just for
images. So, just track
images. So, just track
files.
Presumably this uploads the whole model,
Presumably this uploads the whole model,
right?
Oh, it's the
Oh, it's the
run. Well, there's no run object. So,
run. Well, there's no run object. So,
it's probably like
it's probably like
dot upload or dot was it track
dot upload or dot was it track
files? Track files.
Put this here.
I got to run in a
few. But let's see if we can at least do
few. But let's see if we can at least do
this.
See if this
See if this
uploads. Also, did we hit
uploads. Also, did we hit
2K? We might have hit 2K today. Did any
2K? We might have hit 2K today. Did any
of you start
it?
it?
1999. Anybody wants to start the repo to
1999. Anybody wants to start the repo to
help me out for free? One star off of
help me out for free? One star off of
2000. Pretty damn big for a
2000. Pretty damn big for a
reinforcement learning repo.
reinforcement learning repo.
I mean like
I mean like
my legendary project here is
my legendary project here is
7k still active.
We'll do fast version.
I don't know why it's parsing that as a
I don't know why it's parsing that as a
string, but whatever.
legacy
methods. Oh no, wait. Attribute error.
This is the run.
No, it doesn't have
No, it doesn't have
[Music]
[Music]
upload. How do you do stuff with
this that
this that
attribute? There just no way to do
this. Track
files
upload. Oh, wait. Run of train data set.
There we
There we
go. So,
uh let's see uh if this logged for us.
Huh? Look at
Huh? Look at
that. We get the model
file. Can we not uh download it?
Does it actually store this file? Like
Does it actually store this file? Like
this looks clickable but isn't.
download. Fetching metadata of contained
download. Fetching metadata of contained
files. Downloading the contained files.
There we
go. So, uh I am going
go. So, uh I am going
to go for dinner here. Let me just paste
to go for dinner here. Let me just paste
this in for
this in for
now so I at least know that we can do
now so I at least know that we can do
it. and then we will uh we will get to
it. and then we will uh we will get to
this either after dinner or tomorrow
this either after dinner or tomorrow
depending on how I'm feeling. Uh so for
depending on how I'm feeling. Uh so for
the folks
the folks
watching getting very close to this new
watching getting very close to this new
release going to be very simple and very
release going to be very simple and very
fast when I'm done with
fast when I'm done with
it. If you are interested in high
it. If you are interested in high
performance reinforcement learning or RL
performance reinforcement learning or RL
in
in
general, all my stuff is free and open
general, all my stuff is free and open
source at puffer.ai.
source at puffer.ai.
You can help me out for free by starting
You can help me out for free by starting
the GitHub. You're one star off of 2K.
the GitHub. You're one star off of 2K.
This is rounding. So, that could be you.
This is rounding. So, that could be you.
Would help out a lot. And uh other than
Would help out a lot. And uh other than
that, if you want to get involved with
that, if you want to get involved with
dev, you can join the Discord. Many of
dev, you can join the Discord. Many of
our best contributors came in with zero
our best contributors came in with zero
RL experience. You just need a
RL experience. You just need a
programming
programming
background. You can follow me on X for
background. You can follow me on X for
more RL content. So, thank you. And I
more RL content. So, thank you. And I
will be back either later tonight
