Kind: captions
Language: en
think we're
live
live
hi made some good progress
hi made some good progress
yesterday quite good
yesterday quite good
progress I would have liked to have run
progress I would have liked to have run
a hyper pram sweep overnight to see we
a hyper pram sweep overnight to see we
just to test a little bit more
just to test a little bit more
thoroughly but uh I
thoroughly but uh I
think well the hardware is down
think well the hardware is down
essentially uh because of hurricane we
essentially uh because of hurricane we
have a Hardware being stored but in the
have a Hardware being stored but in the
meantime I think what we're going to do
meantime I think what we're going to do
is we're going to take all the stuff I
is we're going to take all the stuff I
built
built
today and uh we're going to apply it
today and uh we're going to apply it
start applying it to all the different
start applying it to all the different
environments that we have here in order
environments that we have here in order
to clean some stuff up
to clean some stuff up
nicely let's start on that
so there are a couple things I think
so there are a couple things I think
before I properly get
started we've got this
started we've got this
log
log
structure that use for
pong it
works yeah I think this is fine
actually I'm just trying to think if I
actually I'm just trying to think if I
want to add this amount of extra code to
want to add this amount of extra code to
every
every
environment let me think about
environment let me think about
this
this
so the reason this is here is to handle
so the reason this is here is to handle
a easier logging
cide the alternative is more python side
cide the alternative is more python side
code I think I rather have it
code I think I rather have it
here I think this is nicer I think we're
here I think this is nicer I think we're
going to keep this structure for now and
going to keep this structure for now and
let's U we'll just do this exact same
let's U we'll just do this exact same
thing for some of the other
thing for some of the other
environments
oh think we'll start with
breakout actually that's a kind of a
breakout actually that's a kind of a
nice thing to do today is to just like
nice thing to do today is to just like
fix all of
fix all of
the different environments and that'll
the different environments and that'll
probably tell me anything that I need to
probably tell me anything that I need to
know that I've messed up
anyways
yeah let's see how bad this
is
is
yeesh way more code than is needed here
right
right
comparison need these single spaces and
comparison need these single spaces and
a few other small things and that's
a few other small things and that's
about
it agents
[Music]
welcome YouTube
welcome YouTube
folks I'm hopeful that we can get this
folks I'm hopeful that we can get this
merged today uh the
merged today uh the
one the one thing I'm not entirely sure
one the one thing I'm not entirely sure
about though
about though
is uh we have servers down because of
is uh we have servers down because of
fled
fled
hurricane so I would like to actually
hurricane so I would like to actually
run training before we properly
run training before we properly
merge uh so we'll see about that but I
merge uh so we'll see about that but I
think that we can at least get this
think that we can at least get this
ported onto all these different
ported onto all these different
environments today and this will make
environments today and this will make
really this is going to make RL so so
really this is going to make RL so so
much easier I mean you'll just see the
much easier I mean you'll just see the
amount of boiler plate we can get rid of
amount of boiler plate we can get rid of
so first of
so first of
all we get to delete that thing down
all we get to delete that thing down
there
there
buff this
buff this
needs buff
needs buff
none this is this weird injection
none this is this weird injection
function goes
away get rid of this as
well
terminals yeah this all goes away
and then this actions
thing
thing
C
step uh do we want these to handle their
step uh do we want these to handle their
own
own
reset the
reset the
question we'll have to look at that in a
question we'll have to look at that in a
bit but I think for now we just do it
bit but I think for now we just do it
like this then we have
like this then we have
info and then we'll do
info and then we'll do
log yeah so this is what we did for uh
log yeah so this is what we did for uh
pong as well maybe we'll come up with
pong as well maybe we'll come up with
some more standard
thing don't need
thing don't need
this don't need this buffer thing
this don't need this buffer thing
thing everything gets much
thing everything gets much
easier and of course we have to do a
easier and of course we have to do a
little bit of stuff on the seaside for
little bit of stuff on the seaside for
this uh modeled off of what we did with
this uh modeled off of what we did with
pong but this will be quite easy we also
pong but this will be quite easy we also
can just do this render call like this
can just do this render call like this
and then s see them
and then s see them
close okay so let me see if I'm missing
anything board
anything board
interval oh this thing is redundant
interval oh this thing is redundant
and this thing is
and this thing is
redundant and I we may as well just put
redundant and I we may as well just put
this stuff up here
this stuff up here
right so here's our entire binding now
right so here's our entire binding now
for this breakout
for this breakout
environment it's really quite
environment it's really quite
short you can get rid of this Raab
short you can get rid of this Raab
import as well that's in
import as well that's in
C uh and now all we have to do is we
C uh and now all we have to do is we
have to make the corresponding
have to make the corresponding
adjustments to the scyon side and
cide but I imagine that's not going to
cide but I imagine that's not going to
be too bad so the first
thing uh the first thing we're going to
thing uh the first thing we're going to
have to do here is model this a bit more
have to do here is model this a bit more
off the way we did Pong we're going to
off the way we did Pong we're going to
do multiple environments internally so
do multiple environments internally so
this is actually going to
this is actually going to
be break out star M this is going to
be break out star M this is going to
become an array of these
and the model for this
and the model for this
is I mean we already solved this with
pong so this is going to be a c
pong so this is going to be a c
allocation a log buffer and a few other
allocation a log buffer and a few other
small things I'm going to grab this to
small things I'm going to grab this to
use as a
template um now there are a few
template um now there are a few
redundant is lines of code here like
redundant is lines of code here like
this intermediate variables just because
this intermediate variables just because
there's a weird thing in syon that I
there's a weird thing in syon that I
don't understand yet um essentially like
don't understand yet um essentially like
when you index it doesn't know the type
when you index it doesn't know the type
because it's a python object I think but
because it's a python object I think but
uh that's generally
uh that's generally
fine take num M's
fine take num M's
here so I think probably yeah no it's
here so I think probably yeah no it's
fine there and then this
becomes
becomes
breakout get this log buffer
breakout get this log buffer
like
this and then
here this is the call that we
need observations
i i.
i i.
data there we go
uh what happened with duns terminals I
uh what happened with duns terminals I
guess
guess
welcome why the choice to code this in
welcome why the choice to code this in
Python what about performance
Python what about performance
considerations um purec my friend pure
C this thing will run over a million
C this thing will run over a million
steps per second per core all of our
steps per second per core all of our
environments run over a million steps
environments run over a million steps
per second per CPU core these are the
per second per CPU core these are the
fastest environments in existence in
fastest environments in existence in
reinforcement
learning you can play most of these on
learning you can play most of these on
the web here and
the web here and
um so the loop over environments is in
um so the loop over environments is in
scon for
scon for
convenience so that you don't actually
convenience so that you don't actually
have to call back to python to run
have to call back to python to run
multiple of them on a single thread and
multiple of them on a single thread and
then The Binding on top of that is
then The Binding on top of that is
python so this stack is python wrapper
python so this stack is python wrapper
or python binding cython you know middle
or python binding cython you know middle
layer and then C Core
layer and then C Core
environments and that gives you ultimate
environments and that gives you ultimate
performance like nothing is going to be
performance like nothing is going to be
faster than that um there's basically no
faster than that um there's basically no
python running and it also gives you a
python running and it also gives you a
tremendous amount of flexibility because
tremendous amount of flexibility because
you can prototype in Python you can push
you can prototype in Python you can push
it to scyon and then optionally push it
it to scyon and then optionally push it
to C there's no performance difference
to C there's no performance difference
between um scyon and raw C that I've
between um scyon and raw C that I've
seen it's just that the Rossy is nice
seen it's just that the Rossy is nice
because you can compile it for web so we
because you can compile it for web so we
can put it online for our
demos and what you're looking at here is
demos and what you're looking at here is
this is not python this is
this is not python this is
syon just for the middle
syon just for the middle
layer we're
layer we're
talking
talking
microsc yeah so you're going to always
microsc yeah so you're going to always
be constrained by other stuff but like
be constrained by other stuff but like
puffer will get you well over a million
puffer will get you well over a million
steps per second train uh end to end
steps per second train uh end to end
with an optimized environment on a
with an optimized environment on a
single GPU like puffer is literally 100
single GPU like puffer is literally 100
to a thousand times faster than any of
to a thousand times faster than any of
the other stuff out there already we can
the other stuff out there already we can
go faster than that if I did a little
go faster than that if I did a little
more optimization but at that point the
more optimization but at that point the
networks are going to start to become
networks are going to start to become
larger anyways so for all intents and
larger anyways so for all intents and
purposes outside of a few Niche settings
purposes outside of a few Niche settings
that I haven't optimized yet like puffer
that I haven't optimized yet like puffer
Max
perf good time to mention that it's also
perf good time to mention that it's also
all the stuff I'm deving here you can
all the stuff I'm deving here you can
check out the code for on the GitHub uh
check out the code for on the GitHub uh
it's currently in the dev Branch the new
it's currently in the dev Branch the new
stuff and if you like what you see give
stuff and if you like what you see give
it a star help helps me out a ton back
it a star help helps me out a ton back
to
code okay so this is about what we
code okay so this is about what we
want cool stuff yeah of
course and uh the way I did this for
course and uh the way I did this for
pong you can see I'm basically going to
pong you can see I'm basically going to
copy these it's the same code eventually
copy these it's the same code eventually
I might come up with a way to share this
I might come up with a way to share this
it's a little tricky cuz it's
it's a little tricky cuz it's
scon but I think it's literally the same
scon but I think it's literally the same
code yeah like this portion is literally
code yeah like this portion is literally
the same
the same
code so we'll probably have to come up
code so we'll probably have to come up
with a way to um to share
this okay and now we need the log code
this okay and now we need the log code
yeah there's a lot of duplicated stuff
yeah there's a lot of duplicated stuff
so probably what I'm going to do is I'm
so probably what I'm going to do is I'm
going to do this for pong and breakout
going to do this for pong and breakout
and then I will uh after that I will see
and then I will uh after that I will see
if there's a way to share some
stuff I'm kind of torn with it because
stuff I'm kind of torn with it because
like at some point I we're going to need
like at some point I we're going to need
like a puffer li. C or something but
like a puffer li. C or something but
it's also really nice to have the stuff
it's also really nice to have the stuff
just be
Standalone but for now yeah we're
Standalone but for now yeah we're
literally just copying Big Blocks of
literally just copying Big Blocks of
code like this is is identical even the
code like this is is identical even the
C here right this log buffer object is
C here right this log buffer object is
literally
literally
identical which makes sense they're just
identical which makes sense they're just
both arcade games to be fair what I
both arcade games to be fair what I
could do is like this is not going to be
could do is like this is not going to be
true for all environments it's just
true for all environments it's just
really true for the arcade games
really true for the arcade games
so I could just put all the arcade games
so I could just put all the arcade games
together or
together or
something maybe that's what we'll
do but for now let's just add it like
this see break out we're going to
just move these
okay now we need the log deaths
right I did these right here
this builds
this builds
already
uh
uh
cool so here's our Breakout game we can
cool so here's our Breakout game we can
play it this is the PC
play it this is the PC
version so this is what'll be on the web
somebody told me that this was easy like
somebody told me that this was easy like
that it was too easy but it's definitely
that it was too easy but it's definitely
not easy the ball gets to be way too
fast also occasionally it'll do stuff
fast also occasionally it'll do stuff
like
this oh yeah look if you hit the wall
this oh yeah look if you hit the wall
the paddle gets freaking small doesn't
the paddle gets freaking small doesn't
it yeah this is not definitely not easy
okay
so think we are
ready try to compile the scyon
version logs
did I just forget to
instantiate yes this thing right
here self. m
this is
this is
M's of
I then
I then
free cannot
convert What's happen in here oh n this
convert What's happen in here oh n this
needs an s
terminals is going to be
terminals is going to be
done
done
this
I what does it not like
here size of Breakout
oh where do we have
pong breakout
star
star
cic oh I just don't have it included
there okay this now
there okay this now
compiles with just the numpy API
compiles with just the numpy API
warnings those are
fine let's see if we can get it
fine let's see if we can get it
training make Breakout
I think I forgot to add this
argument uh
actions observations
rewards I didn't pass these did
I yeah this needs to be
passed let me just make sure I'm doing
passed let me just make sure I'm doing
this right I think it's self Dot
like this
maybe size one
maybe size one
aray how do I do this
pong yeah so this you initialize all the
pong yeah so this you initialize all the
buffers here I hate this but this is the
buffers here I hate this but this is the
simplest way of doing
simplest way of doing
it
it
um OBS actions rewards
um OBS actions rewards
terminals only size one
arrays let's
arrays let's
see oh did
I on
I on
it's not in
it's not in
here wait frame
here wait frame
skip the parameter order is just stupid
right yeah it should be OBS actions
right yeah it should be OBS actions
rewards
DS then we'll do this will
terminals num
M's frame
skip okay perfect so now this is the
skip okay perfect so now this is the
actual signature that we want right
here let's adjust here
here let's adjust here
this is going to be
this is going to be
CMS I
CMS I
breakout self.
observations
dot
actions
rewards
rewards
terminals frame skip
he yes
he yes
right num
right num
M's I forgot num
[Music]
Ms
Ms
also this needs to go away
and then
and then
terminals
terminals
terminals
there want I mess up previous
declaration yeah right here this goes
away
away
okay almost
okay almost
there set 17 ARS given I still have this
there set 17 ARS given I still have this
function signature messed
up wait
up wait
CMS observations actions rewards
CMS observations actions rewards
terminals num M's frame skip with height
terminals num M's frame skip with height
paddle WID ah right here
wrong this at the end needs to go
away 80th times a charm maybe
no obviously this needs to be set
up and then eventually this should just
up and then eventually this should just
work uh very nice that that catches this
work uh very nice that that catches this
for us must return in inos is a
list this is empty list in the puffer
list this is empty list in the puffer
native
API hey there we
go so where are our our
go so where are our our
logs well we haven't added the actual
logs well we haven't added the actual
loging code in yet so this
trains but
reward length and
reward length and
score or return length and
score reset
round hold on wait reset
round hold on wait reset
round and then he has
round and then he has
reset okay so I need to modify this a
reset okay so I need to modify this a
little to do its own resets
score plus equal
score plus equal
score
set I guess we can just put this into
set I guess we can just put this into
reset
huh well not quite cuz we need to
track me track a few other things
do we have a tick anywhere no we don't
do we have a tick anywhere no we don't
keep track of
keep track of
tick not at
all here I did
um I added this log buffer and this log
into the breakout object
into the breakout object
here I did
here I did
this and
then in allocate I have
then in allocate I have
this oh this is is missing a
free do I have a free
free do I have a free
Command yes I
do hold on we just got to uh add this
do hold on we just got to uh add this
in real
quick okay so we have log buffer added
quick okay so we have log buffer added
here
here
and
now on
reset reset round
this is a hard reset
right yeah this is a hard
reset you reset the
reset you reset the
environment at the end
episode return yeah so some of these
episode return yeah so some of these
things we need to just add because it's
things we need to just add because it's
going to be M log. episode return goes
going to be M log. episode return goes
up
up
here uh and now this doesn't actually
here uh and now this doesn't actually
not even this one it's
n log
n log
dot score
Gore
right yeah you don't need this episode
right yeah you don't need this episode
return here
plus equals
plus equals
score okay this right
here oh I see in this case it's the
same num
balls I don't know this is contributor
balls I don't know this is contributor
code that I've like cleaned up of a
code that I've like cleaned up of a
bit that's
bit that's
funny I mean speaking of which
like H that would be funnier I
like H that would be funnier I
mean you want to know something
mean you want to know something
cool half of the environments written
cool half of the environments written
here um half of these environments are
here um half of these environments are
written by contributors with zero prior
written by contributors with zero prior
reinforcement learning experience and
reinforcement learning experience and
these are probably the most performant
these are probably the most performant
environments in existence in real
environments in existence in real
enforcement learning like literally like
enforcement learning like literally like
these two uh the like a guy wrote both
these two uh the like a guy wrote both
of these in the course of a weekend with
of these in the course of a weekend with
zero prior experience like these ones
zero prior experience like these ones
you know people uh newer people spent
you know people uh newer people spent
like you know a few days to a week
like you know a few days to a week
implementing these this TCG I
implementing these this TCG I
implemented this I implemented this one
implemented this I implemented this one
in like three four hour sessions m is a
in like three four hour sessions m is a
much longer project snake environment
much longer project snake environment
took a little bit and like you know you
took a little bit and like you know you
can play all these online they're ultra
can play all these online they're ultra
high perf so we're always looking for
high perf so we're always looking for
people who want to like help out with
people who want to like help out with
this stuff it's a really good way to get
this stuff it's a really good way to get
into this base as
[Music]
[Music]
well I've got um there's a guy working
well I've got um there's a guy working
on a go simulator right now go we've got
on a go simulator right now go we've got
a guy doing Enduro like the Atari Enduro
a guy doing Enduro like the Atari Enduro
environment and then there's a guy doing
environment and then there's a guy doing
like um a strip down MMO combat system
like um a strip down MMO combat system
it's like this tactical MMO combat
it's like this tactical MMO combat
system
system
lots and lots and lots of environments
lots and lots and lots of environments
coming to
puffer I've got a couple things in the
puffer I've got a couple things in the
works myself as well
so unfamiliar with game and environment
so unfamiliar with game and environment
Dev only work on network
Dev only work on network
applications firewalls bump on the line
applications firewalls bump on the line
what have you been working on well one
what have you been working on well one
of the M's I've been doing is not
of the M's I've been doing is not
announced yet but uh we did hold on I
announced yet but uh we did hold on I
posted on my Twitter the other day I
posted on my Twitter the other day I
started on this Robo code
started on this Robo code
environment where's my
stuff so I started on this like tank
stuff so I started on this like tank
Robo code battle environment that's
Robo code battle environment that's
going to be pretty cool I've got one
going to be pretty cool I've got one
more in the works that's Secret
more in the works that's Secret
um and then there's going to be an
um and then there's going to be an
effort to build out the uh the
effort to build out the uh the
Moa and the TCG more as well this is
Moa and the TCG more as well this is
going to become more like magic the
going to become more like magic the
Gathering style I'm going to build that
Gathering style I'm going to build that
out quite a bit we've got people already
out quite a bit we've got people already
lined up to work on this um and yeah I
lined up to work on this um and yeah I
got to finish there's one other big
got to finish there's one other big
environment that I'm working on that I'm
environment that I'm working on that I'm
going to announce soon but the goal is
going to announce soon but the goal is
to have a nice handful of these
to have a nice handful of these
environments for RL which will be very
environments for RL which will be very
nice to
have let's just
do this
the new call reset on the
environment
environment
log how many people work on these with
log how many people work on these with
you let's see I mean overall people
you let's see I mean overall people
doing stuff with puffer at the moment on
doing stuff with puffer at the moment on
the open source side uh they're all like
the open source side uh they're all like
contributors we've got that guy's doing
contributors we've got that guy's doing
Pokemon stuff BET's doing Enduro in
Pokemon stuff BET's doing Enduro in
Pokemon linky does Pokemon uh Spencer
Pokemon linky does Pokemon uh Spencer
does new environments currently doing
does new environments currently doing
go uh who
go uh who
else there a few others I'm
else there a few others I'm
forgetting who did oh yeah Nathan is
forgetting who did oh yeah Nathan is
doing uh the MMO style uh combat
doing uh the MMO style uh combat
en uh Noah occasionally does some stuff
en uh Noah occasionally does some stuff
he did the breakout
he did the breakout
environment it's a nice rotating batch
environment it's a nice rotating batch
of just people doing cool open source
of just people doing cool open source
stuff I do all the main infra for puffer
stuff I do all the main infra for puffer
and I do some of the
environments it's a nice size project at
environments it's a nice size project at
this
point I mean this
point I mean this
is this is the puffer repo since I
is this is the puffer repo since I
started working on it fulltime right
started working on it fulltime right
here
mhm it's pretty cool as well because in
mhm it's pretty cool as well because in
the 1.0 release puff was like 99% my
the 1.0 release puff was like 99% my
code um but in the the 1.1 release it's
code um but in the the 1.1 release it's
probably going to only be like 80% my
probably going to only be like 80% my
code it's going to be at least like 20%
code it's going to be at least like 20%
contributor code with people making
contributor code with people making
their own environments and then like
their own environments and then like
submitting
them of course I'm still like this is
them of course I'm still like this is
contributor code here I'm still like
contributor code here I'm still like
tweaking stuff and you know integrating
tweaking stuff and you know integrating
stuff and remixing things but the base
stuff and remixing things but the base
code of it right
what inspired you to progress this
what inspired you to progress this
project this is
project this is
fulltime um reinforcement learning needs
fulltime um reinforcement learning needs
to be fixed the whole field is cursed
to be fixed the whole field is cursed
everything is slow um everything's a
everything is slow um everything's a
pain to work with but the field has a
pain to work with but the field has a
tremendous amount of potential to just
tremendous amount of potential to just
Skyrocket AI as a whole um nobody's
Skyrocket AI as a whole um nobody's
doing
doing
it so nobody's going to do it if I don't
what happened
here oh this is the line that I'm
here oh this is the line that I'm
missing this has to go and
missing this has to go and
reset my
reset my
bad this goes
here
here
here solid
see if this does
[Music]
it I remember this
it I remember this
error do you work at any companies
error do you work at any companies
outside the time you scam puff AI is
outside the time you scam puff AI is
technically a company so I have my own
technically a company so I have my own
company with this stuff and we just
company with this stuff and we just
launched the past like a month ago or so
launched the past like a month ago or so
but uh we are
but uh we are
starting we're starting trials for
starting we're starting trials for
clients this week so puffer should be
clients this week so puffer should be
getting some Revenue quite soon
getting some Revenue quite soon
hopefully few buddies working on basic
hopefully few buddies working on basic
ML implementations anti-dos and
ML implementations anti-dos and
anti-intrusion can't say I know much
anti-intrusion can't say I know much
about the Technologies
about the Technologies
myself let me
myself let me
think this actually might be applicable
think this actually might be applicable
to that as
well it's worth
well it's worth
mentioning the main business side of
mentioning the main business side of
puffer all this code is free it's all
puffer all this code is free it's all
open source I sell um Extended support
open source I sell um Extended support
and services to companies that are
and services to companies that are
trying to do RL and having a hard time
trying to do RL and having a hard time
of
it so like the main main target for
it so like the main main target for
puffer is like company that has tried to
puffer is like company that has tried to
do has something where they think RL
do has something where they think RL
would be valuable they've had a really
would be valuable they've had a really
hard time doing it and they'd like some
hard time doing it and they'd like some
help on making it fast and
easy main thing I do that said
easy main thing I do that said
everything here is all it's all free
everything here is all it's all free
like all this stuff is free and open
like all this stuff is free and open
source I do free support for uh
source I do free support for uh
universities and academic
universities and academic
researchers and all the code is like
researchers and all the code is like
immediately available in Dev as I'm
immediately available in Dev as I'm
committing it so if you want to help the
committing it so if you want to help the
project out for
project out for
free give it a star and also you can
free give it a star and also you can
join
join
discord.gg puffer that's where we do all
discord.gg puffer that's where we do all
the open source collab stuff I've got a
the open source collab stuff I've got a
whole bunch of people in there that have
whole bunch of people in there that have
like wanted to get into the space came
like wanted to get into the space came
in with some basic you know engineering
in with some basic you know engineering
knowledge and uh are doing tons of great
knowledge and uh are doing tons of great
stuff in this space
stuff in this space
already you are to work on cyber
already you are to work on cyber
security I mean I'm definitely open to
security I mean I'm definitely open to
um you know to doing work for cyber
um you know to doing work for cyber
security companies through puffer like
security companies through puffer like
the clientele for puffer it's just
the clientele for puffer it's just
anybody who's trying to do or has a
anybody who's trying to do or has a
problem where RL would be helpful and
problem where RL would be helpful and
they're having a hard time of it right
yeah and to be fair probably once we get
yeah and to be fair probably once we get
these game M nice and underway like we
these game M nice and underway like we
use games as environments cuz they're
use games as environments cuz they're
fun they're easy to interpret and uh
fun they're easy to interpret and uh
people like to build them right um but
people like to build them right um but
the AI doesn't care if it's solving a
the AI doesn't care if it's solving a
game or solving like a network problem
game or solving like a network problem
or whatever so we're probably going to
or whatever so we're probably going to
make some more simulators that look
make some more simulators that look
closer to Industry problems in the
closer to Industry problems in the
future but uh I mean we can totally take
future but uh I mean we can totally take
on that stuff
on that stuff
now it's awesome currently in an MS with
now it's awesome currently in an MS with
AI concentration still not at the level
AI concentration still not at the level
to fully understand the code you write
to fully understand the code you write
most of the time well dude this is
most of the time well dude this is
highly specialized stuff there are like
highly specialized stuff there are like
a 100 people in the world at most that
a 100 people in the world at most that
understand this area like
understand this area like
this probably since I did undergrad
this probably since I did undergrad
cyber SEC and not software no it's it
cyber SEC and not software no it's it
has nothing to do with that it's
has nothing to do with that it's
literally like this is very like this is
literally like this is very like this is
very Cutting Edge RL stuff now to be
very Cutting Edge RL stuff now to be
fair you know if you just read through
fair you know if you just read through
the code base um it won't be that hard
the code base um it won't be that hard
to get a sense of what I'm trying to do
to get a sense of what I'm trying to do
with it because the way it's written is
with it because the way it's written is
very simple but like designing and
very simple but like designing and
building this stuff there's a reason
building this stuff there's a reason
this hasn't existed for the last 10
this hasn't existed for the last 10
years should learn see in any language
years should learn see in any language
from there become simple I honestly I
from there become simple I honestly I
spent 10 years writing python I've
spent 10 years writing python I've
literally just been doing the cide of
literally just been doing the cide of
things in the last 3 months cuz things
things in the last 3 months cuz things
needed to go fast and that sounded like
needed to go fast and that sounded like
a fun thing to do like everything is
a fun thing to do like everything is
very transferable if you're doing like
very transferable if you're doing like
core fundamental engineering and not
core fundamental engineering and not
like a framework
Dev it's pretty funny actually when I
Dev it's pretty funny actually when I
tell people like the amount of python
tell people like the amount of python
I've written I've written some actually
I've written I've written some actually
very high perf python like puffer's
very high perf python like puffer's
vectorization is is in Python but it's
vectorization is is in Python but it's
optimized down to like I don't know
optimized down to like I don't know
probably 10 microc seconds or something
probably 10 microc seconds or something
cuz we have all sorts of stuff that we
cuz we have all sorts of stuff that we
do uh with shared memory and IPC
do uh with shared memory and IPC
overhead
overhead
reduction great being at a level like
reduction great being at a level like
that well this has been my life since
that well this has been my life since
age 16 so I would hope I can do it uh
age 16 so I would hope I can do it uh
kind of my goal I've always been
kind of my goal I've always been
inspired by Deep Mind Alpha star similar
inspired by Deep Mind Alpha star similar
research same totally same
research same totally same
probably mess around with puffer once I
probably mess around with puffer once I
feel confident I there's never a time
feel confident I there's never a time
that's like too early to start working
that's like too early to start working
on stuff right like this is how you
on stuff right like this is how you
learn stuff you just you just say okay
learn stuff you just you just say okay
that looks cool and you play with
it like pretty much the only thing that
it like pretty much the only thing that
has distinguished people that have like
has distinguished people that have like
started with puffer and like actually
started with puffer and like actually
learned a bunch of stuff it's just the
learned a bunch of stuff it's just the
people that actually stuck around and
people that actually stuck around and
like put in a bit of effort it's not
like put in a bit of effort it's not
that hard to pick some stuff
that hard to pick some stuff
up wasn't familiar with software
up wasn't familiar with software
engineering programming guessing you're
engineering programming guessing you're
a much stronger
a much stronger
programmer working on the Forefront of
programmer working on the Forefront of
this
this
Tech uh I mean yeah you do need to know
Tech uh I mean yeah you do need to know
fundamentals of low-level Dev at some
fundamentals of low-level Dev at some
point but
point but
like literally the one C course I took
like literally the one C course I took
in undergrad plus 10 years of experience
in undergrad plus 10 years of experience
just writing good code not even writing
just writing good code not even writing
good code honestly like anything you've
good code honestly like anything you've
written more than a year ago you always
written more than a year ago you always
consider bad code
consider bad code
right um but yeah just 10 years of
right um but yeah just 10 years of
trying to write better and better code
trying to write better and better code
coupled with all the stuff in the last
coupled with all the stuff in the last
few months has really just made
few months has really just made
everything
work the one thing I will say about the
work the one thing I will say about the
way that I build stuff with puffer is
way that I build stuff with puffer is
I've got this like almost
I've got this like almost
neurotic emphasis on Simplicity like I
neurotic emphasis on Simplicity like I
hate hate hate when stuff is more
hate hate hate when stuff is more
complicated than it needs to be
do you think during your Academia time
do you think during your Academia time
you learned the most about the field or
you learned the most about the field or
when you were first
when you were first
exploring like when you were younger
exploring like when you were younger
just wondering since I know Ms might not
just wondering since I know Ms might not
help for research related roles since
help for research related roles since
PhD is minimum that's well research
PhD is minimum that's well research
Engineers often uh is Ms and like
Engineers often uh is Ms and like
honestly scientists super undervalue
honestly scientists super undervalue
engineering work like I have the PHD but
engineering work like I have the PHD but
I spend all my time doing engineering
I spend all my time doing engineering
because it's simply the more effective
because it's simply the more effective
thing to be doing these days um now the
thing to be doing these days um now the
nice thing with the PHD is I can tell
nice thing with the PHD is I can tell
scientists to [ __ ] off when they're
scientists to [ __ ] off when they're
undervaluing the engineering side and I
undervaluing the engineering side and I
can do so much more convincingly right
can do so much more convincingly right
but ultimately the engineering is the
but ultimately the engineering is the
very important thing my playbook is
very important thing my playbook is
probably 80% engineering 15% basic
probably 80% engineering 15% basic
scientific method stuff 5% at most
scientific method stuff 5% at most
math idiot admires complexity yeah yeah
math idiot admires complexity yeah yeah
literally that
and it's very funny because you end up
and it's very funny because you end up
looking very dumb in the process but
looking very dumb in the process but
you're not being dumb like I just assume
you're not being dumb like I just assume
everything is simple and can be dumb in
everything is simple and can be dumb in
and can be accomplished in the dumbest
and can be accomplished in the dumbest
way imaginable until proven
otherwise and I get suspicious whenever
otherwise and I get suspicious whenever
anything I'm doing makes me feel clever
anything I'm doing makes me feel clever
like if you feel clever you're probably
like if you feel clever you're probably
over complicating it you should be like
over complicating it you should be like
you should feel very very dumb but you
you should feel very very dumb but you
should be getting stuff like a lot of
should be getting stuff like a lot of
hard stuff done
fast that's generally where you want to
fast that's generally where you want to
be I'd
say uh I I know what this egg Bol is I'd
say uh I I know what this egg Bol is I'd
literally fixed this exact same bug
before this is
before this is
easy it's literally just me forgetting
easy it's literally just me forgetting
to add the log buffer right
got like
this
oops break out.
oops break out.
C allocate takes care of this so
oh wow we're doing well on YouTube today
oh wow we're doing well on YouTube today
welcome
everybody we're going to
everybody we're going to
have well this is the simpler
have well this is the simpler
environment one of the simpler
environment one of the simpler
environments but they're all going to
environments but they're all going to
basically have the same very basic code
basically have the same very basic code
binding associated with them and we're
binding associated with them and we're
going to have all these environments
going to have all these environments
running they already run fast but way
running they already run fast but way
simpler than before today
what did I miss no field log
buffer a
buffer oh that's weird oh I forgot to
buffer oh that's weird oh I forgot to
copy a thing
appreciate Insight research Engineers
appreciate Insight research Engineers
definitely goal got a while to go do you
definitely goal got a while to go do you
think using gen for
think using gen for
guidance through project you're
guidance through project you're
debugging it's
debugging it's
counterproductive uh I think over
counterproductive uh I think over
relying on it definitely is a huge huge
relying on it definitely is a huge huge
mistake like ignore all the cursor cells
mistake like ignore all the cursor cells
who are like oh yeah do everything with
who are like oh yeah do everything with
cursor let the AI do a lot of stuff for
cursor let the AI do a lot of stuff for
you
you
uh-uh you can use it for like looking up
uh-uh you can use it for like looking up
specific bugs trying to learn specific
specific bugs trying to learn specific
stuff keep in mind though like it's
stuff keep in mind though like it's
often wrong it's mainly just like Google
often wrong it's mainly just like Google
is so hard to use these days cuz there's
is so hard to use these days cuz there's
so much garbage on it that you can use
so much garbage on it that you can use
it as like Google replacement if you
it as like Google replacement if you
can't find it on stack Overflow
can't find it on stack Overflow
um and the one thing that I really like
um and the one thing that I really like
so I have two plugins I only have two
so I have two plugins I only have two
plugins with this editor one is SEI for
plugins with this editor one is SEI for
python highlighting because python
python highlighting because python
highlighting is hard the other is super
highlighting is hard the other is super
Maven do you see how though like do you
Maven do you see how though like do you
see how I get on line completions I'm
see how I get on line completions I'm
not using it to just autoc complete
not using it to just autoc complete
functions for me it's a typing buff not
functions for me it's a typing buff not
a thinking buff that's how I see
it not convert log
it not convert log
buffer what I do self do
logs try to use it like if I had a TA
logs try to use it like if I had a TA
with you yeah except the TA is going to
with you yeah except the TA is going to
be pretty stupid like
be pretty stupid like
it's really not that
it's really not that
smart most of the time it's really not
smart most of the time it's really not
that smart so you got to be a little
that smart so you got to be a little
careful there we
careful there we
go
boom it's not really learning anything
boom it's not really learning anything
let's see what hypers we got
uh fre
uh fre
out 512
out 512
environments most problems in code be
environments most problems in code be
can be solved simply if you understand
can be solved simply if you understand
the fully understand the environment
the fully understand the environment
being worked in reject updates from over
being worked in reject updates from over
complicate redundant over over
complicate redundant over over
complicated code that
complicated code that
[Music]
[Music]
overwrote
overwrote
CPU overwork CPU
CPU overwork CPU
FG yeah
FG yeah
um I mean this is why I say that I
um I mean this is why I say that I
specialize in like small to midscale
specialize in like small to midscale
projects basically as soon as there's
projects basically as soon as there's
just too much stuff and too much
just too much stuff and too much
complexity to load the whole thing into
complexity to load the whole thing into
your head and to fully understand what's
your head and to fully understand what's
going on stuff grinds to a Hal it's too
going on stuff grinds to a Hal it's too
slow to work and it's not fun I get
slow to work and it's not fun I get
bored so you know puffer is going to be
bored so you know puffer is going to be
small to mids small to midsize as a
small to mids small to midsize as a
project it'll expand with like more
project it'll expand with like more
simulators more Hooks and stuff but it's
simulators more Hooks and stuff but it's
always going to have a nice small core
always going to have a nice small core
and that's the way I like it and I can
and that's the way I like it and I can
get a lot done like that
get a lot done like that
right I can get a lot done like
that 16k
like my control flow dancing not
like my control flow dancing not
crashing and bouncing
crashing and bouncing
around h i don't mind um I don't mind
around h i don't mind um I don't mind
debugging crashes as long as they happen
debugging crashes as long as they happen
quickly
look at
that thoughts on Hinton and hopfield
that thoughts on Hinton and hopfield
winning a Noble in
winning a Noble in
physics I these are good contributions
physics I these are good contributions
but they ain't
physics I got nothing bad to say about
physics I got nothing bad to say about
them it's just not it's not physics so I
them it's just not it's not physics so I
don't know what the heck is going on
don't know what the heck is going on
there I think uh there's been some AI
there I think uh there's been some AI
Kool-Aid going around lately
and you know that there's some AI
and you know that there's some AI
Kool-Aid when I say it cuz I'm very much
Kool-Aid when I say it cuz I'm very much
all in on
AI that's some
crazy I don't know how that happened
crazy I don't know how that happened
that's like
I always said like yeah there's no
I always said like yeah there's no
chance I over I ever win a Noble Prize
chance I over I ever win a Noble Prize
right because like they don't give Noble
right because like they don't give Noble
prizes in this field well if you just
prizes in this field well if you just
consider something that's totally not
consider something that's totally not
physics to be physics then
maybe it's
funny okay I'm
funny okay I'm
obervations what's happening
here I don't know we have
observations uh the observations aren't
observations uh the observations aren't
very good
though something
though something
definitely
Jank what the
Jank what the
observations paddle X paddle
observations paddle X paddle
y they go from 174 to
215 I guess in four frames maybe it can
215 I guess in four frames maybe it can
do that
do that
that still seems
fast ball
fast ball
X ball
y
y
balls and paddle with
something good stuff hey
welcome we're going to get we're going
welcome we're going to get we're going
to we going to get the pong and breakout
to we going to get the pong and breakout
M's bound to the new infra right now I'm
M's bound to the new infra right now I'm
going to do a little bit of thinking
going to do a little bit of thinking
about if there's anything else I can
about if there's anything else I can
collapse and uh then it's going on all
collapse and uh then it's going on all
the rest of the environments as quickly
the rest of the environments as quickly
as possible here that's the goal for
as possible here that's the goal for
right
right
now this is going to cut out like
now this is going to cut out like
several hundred lines of additional
several hundred lines of additional
binding crap with the new infra which
binding crap with the new infra which
will be really nice
I think this is going to be finally the
I think this is going to be finally the
the thing that makes it not just easy
the thing that makes it not just easy
but absolutely trivial for people to
but absolutely trivial for people to
make ultra high per custom
make ultra high per custom
Sims for
Sims for
puffer I'm trying to figure out what's
puffer I'm trying to figure out what's
happened here like this brick states
thing brick
states is there like
a oh they do all start at zero so is
a oh they do all start at zero so is
this
this
correct the brick states do all start at
zero wait
zero wait
174 something's weird here
oh no it's just moving randomly
okay where does it get
rewards right here
oh wow YouTube that's uh I think that's
oh wow YouTube that's uh I think that's
a new alltime High on YouTube welcome
a new alltime High on YouTube welcome
everyone we're doing high performance
everyone we're doing high performance
reinforcement learning infrastructure
reinforcement learning infrastructure
Dev um this is going into the next
Dev um this is going into the next
version of puffer lib I think this is
version of puffer lib I think this is
going to be the thing that makes it
going to be the thing that makes it
actually easy to add your own Sims uh
actually easy to add your own Sims uh
quick couple
quick couple
things it's all free on GitHub here
things it's all free on GitHub here
start if you want to help me out helps
start if you want to help me out helps
me a ton but also we have uh the puffer
me a ton but also we have uh the puffer
Discord and this is where we do all the
Discord and this is where we do all the
open source
open source
Dev you should do a product placement I
Dev you should do a product placement I
do once in a
do once in a
while I talk about the stuff puffer
while I talk about the stuff puffer
does um welcome as
does um welcome as
well yeah so we have all sorts of open
well yeah so we have all sorts of open
source Dev in here like this is an M
source Dev in here like this is an M
somebody has been working on and posted
somebody has been working on and posted
today um no RL experience required
today um no RL experience required
surprisingly on the environment side
surprisingly on the environment side
it's a really good way to get into uh Ai
it's a really good way to get into uh Ai
and RL is by learning how to make these
and RL is by learning how to make these
M's and picking up stuff along the way
yeah it's
yeah it's
fun now the only product that puffer has
fun now the only product that puffer has
is um we run uh extended support like
is um we run uh extended support like
priority features and stuff for
priority features and stuff for
companies that are trying to do
companies that are trying to do
reinforcement learning and having a hard
reinforcement learning and having a hard
time of
time of
it we make that stuff
it we make that stuff
easier but all the stuff is free and
easier but all the stuff is free and
open source
open source
here I'm trying to figure out what's
here I'm trying to figure out what's
wrong here this is a very common debug
wrong here this is a very common debug
pattern in RL where um it's not training
pattern in RL where um it's not training
you don't understand why and usually
you don't understand why and usually
there's something wrong with the way
there's something wrong with the way
that you're Computing observations or
that you're Computing observations or
Rewards or something like
that let me just go take a quick look to
that let me just go take a quick look to
make sure I'm not being completely
dumb I might just not be passing rewards
dumb I might just not be passing rewards
correctly or something silly
it also might not be resetting correctly
it also might not be resetting correctly
come to think of it let me check that
come to think of it let me check that
real
real
quick cuz I did mess with
that yeah so right
that yeah so right
here I should be able to delete this and
here I should be able to delete this and
it should still work
okay so here
okay so here
is the Breakout game let's just see if I
is the Breakout game let's just see if I
lose all my lives does it reset
correctly it does reset and score is
correctly it does reset and score is
good yeah score goes
up does it
reset that looks good to
reset that looks good to
me so it's not
me so it's not
that uh it could be rewards still
though could still be
rewards let's just
do I'm
do I'm
curious if I just
curious if I just
um if numpy some self.
um if numpy some self.
rewards zero break point let's just make
rewards zero break point let's just make
sure that we're actually getting Rewards
hey boss appreciate time entertaining
hey boss appreciate time entertaining
got to go looking forward to checking in
got to go looking forward to checking in
thank you yeah drop by the Discord as
thank you yeah drop by the Discord as
well I mean this is where we do all the
well I mean this is where we do all the
open source organization lots of cool
open source organization lots of cool
stuff going
on it's a good time
okay so sum rewards is
19 yeah this looks totally correct to me
19 yeah this looks totally correct to me
as the
as the
thing so why isn't it learning anything
thing so why isn't it learning anything
at
all let's just make sure maybe it is
all let's just make sure maybe it is
learning and I'm just not seeing seeing
it episode length starts like
130 we go up to 0 five
I would think it should be learning
faster F Frack is
faster F Frack is
[Music]
low oh yeah it should definitely be
low oh yeah it should definitely be
learning something by now
what do I think the odds are that this
what do I think the odds are that this
is just hyper parameters and silly stuff
is just hyper parameters and silly stuff
versus an actual
bug I think it's pretty likely an actual
[Music]
[Music]
bug we'll leave this on the on the uh
bug we'll leave this on the on the uh
the right side while
the right side while
I I check over here if I see anything
observations rewards terminals
observations rewards terminals
truncations info
right actions equal to actions
yeah discreet of four
fire left right yeah that's
fine let me see if I messed up
here these all look good to me
oh is it going up
now I can't tell that could just be
noise what's this running just like the
noise what's this running just like the
default
policy and I thought that
policy and I thought that
um that Noah said that this was
um that Noah said that this was
trainable as well I am actually seeing
trainable as well I am actually seeing
it going up it looks
it going up it looks
like it should just be so much better by
like it should just be so much better by
now
though maybe it's the
observations always a data problem
right paddle X paddle y oh well hold
right paddle X paddle y oh well hold
on if this is not getting normalized
on if this is not getting normalized
these are crazy numbers to be putting
these are crazy numbers to be putting
into a neural net yeah these are insane
into a neural net yeah these are insane
numbers to be putting into a neural
numbers to be putting into a neural
map what do we have observations as the
map what do we have observations as the
float star yeah yeah this has got to be
float star yeah yeah this has got to be
it this is
it this is
craziness
um yeah
divide by n
divide by n
width by n
height VX VY
plus
64 so I think it only gets up to
64 so I think it only gets up to
four 4X or
something
256 I'm going to do divide by 512
initially and then paddle with
half paddle
with wait when you reset
with wait when you reset
it do the paddle width not
it do the paddle width not
reset I think this is a bug
reset I think this is a bug
I think this is a
bug okay let me let me try this first
bug okay let me let me try this first
but I think I found a
bug first we'll do this
rebuild this is the type of thing where
rebuild this is the type of thing where
it's like if you haven't done AI yeah
it's like if you haven't done AI yeah
you'll mess this up but no big
you'll mess this up but no big
deal I mean could be wrong this could
deal I mean could be wrong this could
not even be the
issue
interesting we'll let this run for a
interesting we'll let this run for a
second and in the meantime
I actually think that probably it's
I actually think that probably it's
still too difficult
um so here's what I want to test I think
um so here's what I want to test I think
it doesn't reset the paddle WID once it
shrinks I actually have to play well
shrinks I actually have to play well
enough in order to see that though
I don't know if it resets the ball speed
either I'm playing so badly
oh yeah there we go okay so 84 score no
balls nope it resets the paddle
correctly I don't actually see where it
correctly I don't actually see where it
did
did
that but it does reset the paddle
that but it does reset the paddle
correctly
let me
see step
render it's half paddle
width oh here it
width oh here it
is two * half paddle
with so still not
with so still not
um what's this model
um what's this model
running
running
148k that's was
plenty did I forget to
rebuild to go check observations again
potentially wait is it hold on reward
potentially wait is it hold on reward
plus equal oh well this reward function
plus equal oh well this reward function
is
is
insane oh no wait it's
insane oh no wait it's
not no this is
not no this is
fine plus equal
score yeah this should be
fine it's the problem with building Sims
fine it's the problem with building Sims
there so many places where you can have
there so many places where you can have
stuff be wrong
stuff be wrong
wrong do we actually call Computer
wrong do we actually call Computer
observations yeah we
do all right
do all right
so next up is going to
so next up is going to
be a little bit more aggressive model
be a little bit more aggressive model
data
checking you know it bothers me that
checking you know it bothers me that
um it bothers me that this is
zero even on the first time step there's
zero even on the first time step there's
something weird with that let's go
something weird with that let's go
figure that out
cuz like when we call reset
right let's just real
quick I think this fixes
it yeah there you go so now you can see
it yeah there you go so now you can see
that I have observations and I have
that I have observations and I have
correctly scaled
correctly scaled
data right
so now we should actually be we should
so now we should actually be we should
be fine now right look you can see that
be fine now right look you can see that
we have this is the paddle X and you can
we have this is the paddle X and you can
see now it's gone in different
see now it's gone in different
directions and
whatnot I'm going to hit continue
whatnot I'm going to hit continue
several times here
so I'm noticing that there are
no none of the bricks oh wait here's
no none of the bricks oh wait here's
one yeah some of the bricks here are
one yeah some of the bricks here are
have been
have been
hit
hit
okay so these observations seem fine now
yeah these seem
fine it's got to be like
it's got to be the
reward or
reward or
something I would
something I would
think I checked the rewards
though could technically just be
though could technically just be
hypers that'd be
hypers that'd be
funny I'm not seeing anything
funny I'm not seeing anything
wrong data looks good
breakout also does just take longer to
breakout also does just take longer to
learn anything than
learn anything than
pong especially with bad hypers
pong especially with bad hypers
right I mean you would really think
right I mean you would really think
though
that I mean you get a
that I mean you get a
point pretty early
on H
let's take a look at the
no idea of RL I believe in you
no idea of RL I believe in you
yeah and this should not be a hard
yeah and this should not be a hard
problem to
problem to
solve I mean this is just like a simpler
solve I mean this is just like a simpler
test environment that we have but I'm
test environment that we have but I'm
messing with all the infra so I probably
messing with all the infra so I probably
have introduced some some screwy
stuff this is going to be very cool
stuff this is going to be very cool
though because once this is done you're
though because once this is done you're
going to have um I mean
going to have um I mean
realistically you should have a version
realistically you should have a version
of pong and of breakout that you can
of pong and of breakout that you can
solve in literally just seconds with
solve in literally just seconds with
RL hi
welcome what do we think the odds are
welcome what do we think the odds are
that this is a bug versus just bad hyper
prams what are we thinking
is there anything obviously stupid
is there anything obviously stupid
here there's nothing like crazy
here there's nothing like crazy
obviously
stupid so your repo couldn't
stupid so your repo couldn't
understand what should be
understand what should be
uh like what's some stuff that you wish
uh like what's some stuff that you wish
would be explained better
if you're like brand new to RL and stuff
if you're like brand new to RL and stuff
um this is a branch of AI in which you
um this is a branch of AI in which you
learn by interacting with a
learn by interacting with a
simulator um so puffer lib is a bunch of
simulator um so puffer lib is a bunch of
tools for making it very very quick and
tools for making it very very quick and
easy to learn by the agent like playing
easy to learn by the agent like playing
games or interacting with a simulator or
games or interacting with a simulator or
whatnot if you want
whatnot if you want
a here
a here
we have some of our M's
we have some of our M's
online so here's a snake M I'm
online so here's a snake M I'm
controlling the yellow snake in the
controlling the yellow snake in the
middle of the screen here but I can also
middle of the screen here but I can also
just take my hands off and now the
just take my hands off and now the
trained agent is taken over each of
trained agent is taken over each of
these snakes is being controlled by a
these snakes is being controlled by a
small neural network and they have
small neural network and they have
learned to play this game entirely
learned to play this game entirely
through experimentation so they just
through experimentation so they just
play the game they start out completely
play the game they start out completely
random and then reinforcement learning
random and then reinforcement learning
allows them to learn how to play the
allows them to learn how to play the
game better over time um that is the key
game better over time um that is the key
tenant of RL it's very different from
tenant of RL it's very different from
the rest of AI that you're see that you
the rest of AI that you're see that you
see in the news and whatnot
see in the news and whatnot
today um we don't need huge amounts of
today um we don't need huge amounts of
computational uh resources we can train
computational uh resources we can train
this at very small scale and it's not
this at very small scale and it's not
just on snake you can solve a number of
just on snake you can solve a number of
useful problems with RL so what I do is
useful problems with RL so what I do is
I try to make this process faster easier
I try to make this process faster easier
and work on more interesting problems
and work on more interesting problems
that is the goal of puff
that is the goal of puff
ER can I use my custom project yep you
ER can I use my custom project yep you
can run this on all sorts of custom
can run this on all sorts of custom
simulators in fact that's one of the
simulators in fact that's one of the
things that puffer does best is make
things that puffer does best is make
that process fast and
that process fast and
easy so for instance like some of these
easy so for instance like some of these
these two these actually all four of
these two these actually all four of
these at the bottom were written by
these at the bottom were written by
contributors with no RL experience
contributors with no RL experience
before and for existing environments you
before and for existing environments you
can add bindings to puffer as well
that is what we
do this is not training here is
it most likely I have broken um
it most likely I have broken um
observations or Rewards or something
observations or Rewards or something
somehow what are your opinions on the
somehow what are your opinions on the
Minecraft RL
project uh well it depends which
project uh well it depends which
Minecraft Project you're talking about
Minecraft Project you're talking about
um YouTube RL product train the player
um YouTube RL product train the player
to beat a Pokemon
to beat a Pokemon
game uh puffer is currently sponsoring
game uh puffer is currently sponsoring
that project and we have some very good
that project and we have some very good
results that we're going to be very
results that we're going to be very
excited to talk about soon but uh I've
excited to talk about soon but uh I've
been I've been involved with in
been I've been involved with in
sponsoring the Pokemon RL project since
sponsoring the Pokemon RL project since
two weeks after that video was released
two weeks after that video was released
and it is done much much better than the
and it is done much much better than the
original using puffer
lib in fact we're just waiting for the
lib in fact we're just waiting for the
hurricane in Florida to pass because all
hurricane in Florida to pass because all
all of our servers have to be down for
all of our servers have to be down for
the duration of that and then we'll be
the duration of that and then we'll be
uh running our final experiments we'll
uh running our final experiments we'll
try your project in my repo thanks yeah
try your project in my repo thanks yeah
stop by if you have difficulty I mean
stop by if you have difficulty I mean
this is one of the reasons I stream is
this is one of the reasons I stream is
so uh it can make that
easier yikes
easier yikes
awesome yeah I've got my
awesome yeah I've got my
uh there's puffer in a lot of places at
uh there's puffer in a lot of places at
these this point because like we do
these this point because like we do
collabs with open source people we do
collabs with open source people we do
collabs with universities right we do
collabs with universities right we do
lots of
lots of
collabs so there's a lot of puffer all
collabs so there's a lot of puffer all
over start of the
over start of the
puffer you
know they're not a default
here just subscribe remind me to stick
here just subscribe remind me to stick
not slack yeah you do got to put in some
not slack yeah you do got to put in some
work I worked very very hard when I
work I worked very very hard when I
first got into AI nowadays I still work
first got into AI nowadays I still work
hard but um I don't burn myself out as
hard but um I don't burn myself out as
much you know
much you know
like I have work work balance and then I
like I have work work balance and then I
balance my work with not burning myself
balance my work with not burning myself
out from work you
out from work you
know I still do a lot of work but uh
know I still do a lot of work but uh
it's more manageable mostly
let see
let see
entropy really this entropy coefficient
entropy really this entropy coefficient
is not big enough or
is not big enough or
something what if I just like real
quick can't share
quick can't share
GitHub YouTube
band let me see if I can find
band let me see if I can find
you give me something to type in if you
you give me something to type in if you
just give me the
just give me the
uh you
know dropped out of physics BS three
know dropped out of physics BS three
years have an internal clock ticking
years have an internal clock ticking
that I'm late mad anxiety
that I'm late mad anxiety
I mean to be fair that's not always a
I mean to be fair that's not always a
bad thing sometimes that pushes you to
bad thing sometimes that pushes you to
get [ __ ] done
right I definitely have a spans with
right I definitely have a spans with
puffer where I just am like Yep this got
puffer where I just am like Yep this got
to be done got to work hard busier
which one of
these not sure which of these you're
these not sure which of these you're
trying to mess with here with RL
okay yeah this is definitely not just
okay yeah this is definitely not just
typers entropy should have done
typers entropy should have done
something to
something to
this so weird though
let me see if
let me see if
um reward is coming
through is there no BL
just trying to get a sense of
just trying to get a sense of
where there's definitely something
where there's definitely something
screwy with the environment
screwy with the environment
now okay so you can see reward is
now okay so you can see reward is
zero if I hit the
zero if I hit the
ball yeah no I'm getting
rewards you can see every time I hit the
rewards you can see every time I hit the
ball back I get a reward
right oh why did it go up to 18 like
right oh why did it go up to 18 like
that
seven that was
seven that was
weird uh that it did
that I think I have reward clipping
that I think I have reward clipping
though don't
I that that shouldn't be the
issue how fast will a breakout agent
issue how fast will a breakout agent
train to
Perfection I mean good question
Perfection I mean good question
I mean we should be able to get this
I mean we should be able to get this
done
done
in with the new version with this
in with the new version with this
version once I have it working
correctly should be less than a
minute provided we actually tune
minute provided we actually tune
everything correctly should be less than
everything correctly should be less than
a
minute to be fair I don't even know if
minute to be fair I don't even know if
this version of the game is solvable at
this version of the game is solvable at
the moment cuz like the ball moves too
the moment cuz like the ball moves too
fast like look this is slow but look how
fast like look this is slow but look how
much it speeds up after a bit I don't
much it speeds up after a bit I don't
even know if it's possible to hit it
even know if it's possible to hit it
back
back
consistently as it is now but the thing
consistently as it is now but the thing
is it should definitely be learning
is it should definitely be learning
something so we probably just have a bug
something so we probably just have a bug
in the data yeah you see how fast it is
in the data yeah you see how fast it is
already like it's pretty hard to even
already like it's pretty hard to even
react a minute
react a minute
yeah I mean this thing can
yeah I mean this thing can
play we're going to be training this
play we're going to be training this
thing at a million steps per second
thing at a million steps per second
that's a joke
that's a joke
right I mean we can probably do it
right I mean we can probably do it
faster than that let me
think we might be able to do it in 30
seconds
seconds
possibly I'm confident we can do it in a
possibly I'm confident we can do it in a
minute
minute
though if we tune
correctly to be fair I already did Pong
correctly to be fair I already did Pong
in in uh I did Pong in 90 seconds on the
in in uh I did Pong in 90 seconds on the
slow version of the game that's 100
slow version of the game that's 100
times slower than our
times slower than our
version 1 million steps per second
version 1 million steps per second
yes that is that's the standard for
yes that is that's the standard for
puffer Ms all the new puffer M are a
puffer Ms all the new puffer M are a
million they actually they run a million
million they actually they run a million
steps per second the environments
steps per second the environments
themselves run a million steps per
themselves run a million steps per
second per CPU core minimum and then we
second per CPU core minimum and then we
get training at a million steps per
get training at a million steps per
second we can probably do training at 2
second we can probably do training at 2
million steps per second if I to really
million steps per second if I to really
optimize but we can definitely get 1
optimize but we can definitely get 1
million per
second would you be able to implement
second would you be able to implement
this on an mm RPG like how Bots work
this on an mm RPG like how Bots work
would that be different if only somebody
would that be different if only somebody
did their entire PhD on uh on on that
did their entire PhD on uh on on that
you know if only that were the subject
you know if only that were the subject
of somebody's entire
PhD yeah yeah you can do uh MMOs plus
PhD yeah yeah you can do uh MMOs plus
rlr it's a really good match and I have
rlr it's a really good match and I have
some more stuff coming out soon but I
some more stuff coming out soon but I
have tons and tons of work you can go
have tons and tons of work you can go
read my 170 page thesis on that if you
read my 170 page thesis on that if you
would
like there's also uh on the YouTube
like there's also uh on the YouTube
there like the main video on this
there like the main video on this
channel is that hey
channel is that hey
Nathan wait is that the Nathan that I
Nathan wait is that the Nathan that I
know or is that a new Nathan welcome
know or is that a new Nathan welcome
either way
migrated to fast communication do you
migrated to fast communication do you
have any idea what's wrong with
have any idea what's wrong with
breakout we can't train it for some
reason s your
reason s your
PhD not your own source well yeah it's
PhD not your own source well yeah it's
all the same thing though it's all the
all the same thing though it's all the
same thing like you can do it on
same thing like you can do it on
external it's just slower and more
external it's just slower and more
expensive the reason that I did it my
expensive the reason that I did it my
own is because it's like it's cheaper
own is because it's like it's cheaper
and faster right you can do all the same
and faster right you can do all the same
stuff on real games any Sim that you
stuff on real games any Sim that you
want it's just a matter of the cost of
want it's just a matter of the cost of
running the thing that's literally the
running the thing that's literally the
only
difference it's not working yeah it's
difference it's not working yeah it's
kind of
kind of
weird let's try imitation learning n we
weird let's try imitation learning n we
should it's there's got to be some bug
should it's there's got to be some bug
this should be a very very easy task
I mean I'm seeing the I'm seeing the
I mean I'm seeing the I'm seeing the
rewards
I think what it would
I think what it would
be oh you know what I should do I should
be oh you know what I should do I should
have done this
[Music]
before
before
native eval eval on model
native eval eval on model
path
path
parament my
breakout good so here
is this model is just not trained to do
is this model is just not trained to do
anything
you can see it actually it got a little
you can see it actually it got a little
bit of reward the one time it hit it
bit of reward the one time it hit it
back and what
back and what
happens it
resets I didn't see if it scored a point
oh yeah there it goes it scores a
point uh mean sometimes you have the
point uh mean sometimes you have the
reward flipped but very rarely does that
reward flipped but very rarely does that
the
bug no learning rate
bug no learning rate
messing no messing with learning rate in
here I do
here I do
this there's some weird
this there's some weird
bug I don't think so
it's very weird for it to just be stuck
it's very weird for it to just be stuck
like
that it could be the
that it could be the
entropy I would doubt it
be too much
be too much
entropy
possible let's
see is it
resetting no it has no way of doing that
resetting no it has no way of doing that
it's resetting whenever the game is like
it's resetting whenever the game is like
score uh whenever it runs out of
balls it's not just entropy
either I'm going to be so mad if this
either I'm going to be so mad if this
just ends up being hyper parameters but
just ends up being hyper parameters but
I really don't think it is it's weird
I really don't think it is it's weird
cuz like all the normal things that I
cuz like all the normal things that I
check look good
and 16 million this doesn't make a
difference I'm almost wondering hold on
difference I'm almost wondering hold on
did I like do some dumb
did I like do some dumb
thing I might have like just changed
thing I might have like just changed
something and forgotten to change it
something and forgotten to change it
back
cart
Pole now this is
training I was wondering if I'd like
training I was wondering if I'd like
zeroed the learning rate in the main
zeroed the learning rate in the main
file or something but no cuz this will
file or something but no cuz this will
train just fine
what else could this
be oh wait this could be the done
be oh wait this could be the done
signals being weird
right that's the one other I can think
of let put
this is native C without scon supported
this is native C without scon supported
yet uh yeah so these are are hold on let
yet uh yeah so these are are hold on let
me get this running and I'll
explain
explain
so this game is written in
so this game is written in
C right in fact all of the the new
C right in fact all of the the new
simulators are written in C they don't
simulators are written in C they don't
have to be written in scon or whatever
have to be written in scon or whatever
um you're going to need a binding layer
um you're going to need a binding layer
of some sort for any python Library
of some sort for any python Library
whatsoever which is all of AI so you can
whatsoever which is all of AI so you can
have it's doesn't have to be scon we use
have it's doesn't have to be scon we use
scon because it has some convenient
scon because it has some convenient
things um you can use C types for C++
things um you can use C types for C++
you can use Pi bind doesn't matter you
you can use Pi bind doesn't matter you
can use any of those as long as you have
can use any of those as long as you have
a python binding you're good uh we find
a python binding you're good uh we find
that scon makes it convenient to do some
that scon makes it convenient to do some
additional
additional
optimizations but it is not
required this was the bug hey Nathan
required this was the bug hey Nathan
this was uh this was the bug apparently
this was uh this was the bug apparently
look at
that it's still not doing well or
that it's still not doing well or
anything but it's not just horribly
anything but it's not just horribly
crashed
now so something's wrong with the
now so something's wrong with the
terminals
right let's figure out what it is
reset
reset
round let me see reset
round and then you have reset like this
round and then you have reset like this
right
are you usually able to train with small
are you usually able to train with small
Horizons 16 steps per roll out yeah cuz
Horizons 16 steps per roll out yeah cuz
the game is really basic it's probably
the game is really basic it's probably
not optimal but we should be able
to let me see if this uh real quick let
to let me see if this uh real quick let
me see if this
me see if this
actually still works
let's see
yeah okay there this there
goes 6.5
try this
instead just so we get at least
instead just so we get at least
something that looks like it's training
something that looks like it's training
somewhat stably
somewhat stably
of course we'll just do a hyper Prem
of course we'll just do a hyper Prem
sweep at some point I just want to make
sweep at some point I just want to make
sure that it's like
reasonable value loss
just watching the losses here on the
just watching the losses here on the
right
side value loss is quite
high that did make a difference it's no
high that did make a difference it's no
longer crashing as badly
it shouldn't be stuck though definitely
it shouldn't be stuck though definitely
should not be
stuck not at six at least
next thing is going to be to
do and have to change the score function
do and have to change the score function
a little bit I think that's my next
a little bit I think that's my next
guess
oh also our um rgae implementation is
oh also our um rgae implementation is
very bad I should reference it's very
very bad I should reference it's very
fast but it makes a bunch of dumb
approximations it shouldn't matter for
approximations it shouldn't matter for
something like this it really shouldn't
something like this it really shouldn't
[Music]
uh see we'll
score let's do do this
score let's do do this
instead plus one and then plus
score and do we need this log score
score and do we need this log score
thing like this I don't think this is
needed
needed
score do not need this
let let's try this this is a 01 reward
let let's try this this is a 01 reward
oh look you can see it actually it's
oh look you can see it actually it's
it's taking off now
it's taking off now
anyways
right yeah there you go so a lot of
right yeah there you go so a lot of
these environments they just like they
these environments they just like they
need to get like this velocity behind
need to get like this velocity behind
training and then they start uh they
training and then they start uh they
start taking off
start taking off
it's probably just
it's probably just
hypers let's try uh this one difference
hypers let's try uh this one difference
this one change with the
this one change with the
reward but uh you can see there it's
reward but uh you can see there it's
already doing something
already doing something
right so I'm happy with
that yeah we can just we can make it
that yeah we can just we can make it
play this as well just so we'll watch
play this as well just so we'll watch
this is not going to be a particularly
this is not going to be a particularly
impressive
policy but we'll just watch so you can
policy but we'll just watch so you can
see that it does
something all right
something all right
T
T
[Music]
experiment
43 oh
63 try this
so now we get to watch
so now we get to watch
it oh I think it's not going to move is
it oh I think it's not going to move is
that what's going to happen yeah it's
that what's going to happen yeah it's
not going to
not going to
move it just knows how to go to the side
move it just knows how to go to the side
oh it kind of
oh it kind of
does yeah that's just hyper prams oh
does yeah that's just hyper prams oh
okay okay yeah it does
stuff that's not
stuff that's not
bad 29 score on that that
bad 29 score on that that
game it took me a few games of playing
game it took me a few games of playing
to get more than 29
score it like just like Zips in at the
score it like just like Zips in at the
last second on lot of the time okay so
last second on lot of the time okay so
that's something we'll run it um one
that's something we'll run it um one
more
more
time just because I made those reward
changes and then these will just be
changes and then these will just be
essentially we'll be able to just solve
essentially we'll be able to just solve
these with hyper pram
these with hyper pram
sweeps uh wrong one I wanted to run
sweeps uh wrong one I wanted to run
train
train
yeah very
nice mhm
now the return is more
reasonable we'll see whether the
reasonable we'll see whether the
training is any
better it should be very similar come to
better it should be very similar come to
think of
think of
it though it does avoid the thing that I
it though it does avoid the thing that I
just added
just added
avoids uh crazy rewards by
avoids uh crazy rewards by
and actually the value loss potentially
and actually the value loss potentially
looks
better yeah the value loss is way
better so that's should
train so now we have two environments
train so now we have two environments
bound to puffer two of these new
bound to puffer two of these new
environments bound to puffer with very
environments bound to puffer with very
simple infra um
simple infra um
I'm going to use the restroom real quick
I'm going to use the restroom real quick
while this finishes training and then
while this finishes training and then
we're going to think about a couple
we're going to think about a couple
things we may or may not be able to
things we may or may not be able to
simplify and then we'll just start
simplify and then we'll just start
adding the rest of the environments and
adding the rest of the environments and
getting initial policies I'll be right
getting initial policies I'll be right
[Music]
back
e
e e
there we
go that's
trained obviously it's training very
trained obviously it's training very
slowly but with terrible hyper
slowly but with terrible hyper
parameters so to be expected
you can see though it starts learning
you can see though it starts learning
much more quickly at a
point like look at that
happy I found out about puffer Li just
happy I found out about puffer Li just
now definitely use it during projects
now definitely use it during projects
keep up the great work thank
keep up the great work thank
you it's about to get much better as
you it's about to get much better as
well for custom M we're making the
well for custom M we're making the
process of um like bindings for high
process of um like bindings for high
perf M substantially
perf M substantially
simpler that's what's going on
simpler that's what's going on
here this test seems to have worked
here this test seems to have worked
not going to be an amazing policy but we
not going to be an amazing policy but we
may as well watch
it
it
oops uh I just we uh we found a way to
oops uh I just we uh we found a way to
strip a bunch of boiler plate out
strip a bunch of boiler plate out
Nathan like I made uh a native puffer V
Nathan like I made uh a native puffer V
format a native puffer M format for the
format a native puffer M format for the
base of um custom M's that doesn't
base of um custom M's that doesn't
require serial wrappers around it uh I
require serial wrappers around it uh I
pushed like Loops over multiple ends
pushed like Loops over multiple ends
into scyon layer I came up with a nice
into scyon layer I came up with a nice
logging thing lots of stuff
here we
here we
go here is
go here is
our obviously not amazing but you know a
our obviously not amazing but you know a
reasonable breakout
model it's not
model it's not
bad for like a not tuned at all hyper
bad for like a not tuned at all hyper
prems basic thing
misses by a little bit every so often
misses by a little bit every so often
though just like
narrowly I'm not worried the hyper pram
narrowly I'm not worried the hyper pram
sweep will just solve
sweep will just solve
it the main thing is that we know that
it the main thing is that we know that
uh it actually trains so that the
uh it actually trains so that the
binding is
correct I'm going to have to take a
correct I'm going to have to take a
little bit of a time here to think about
little bit of a time here to think about
some of these repeated
components the scon bindings for a lot
components the scon bindings for a lot
of stuff are looking very
of stuff are looking very
similar is the thing
might not be a bad thing
honestly little bit of rep repeated code
honestly little bit of rep repeated code
for arcade games in order to have it all
for arcade games in order to have it all
be
Standalone here
take uh take a look at this
take uh take a look at this
Nathan here's your whole breakout
Nathan here's your whole breakout
binding Now isn't this nice and
binding Now isn't this nice and
simple that's all you need for breakout
simple that's all you need for breakout
for the the python side
I want to watch this again this time
I want to watch this again this time
you've been
doing cool
trying think what would be diffic what's
trying think what would be diffic what's
going to be difficult for you
here action space is going to be a bit
tricky not that hard but the targeting
tricky not that hard but the targeting
space is big
potentially the targeting space is big
it's going to be it should be relative
it's going to be it should be relative
but it's going to be hard even if it is
relative if your spell has like 10
relative if your spell has like 10
range for
instance I really like the um the nice
instance I really like the um the nice
isometric draw though I've been wanting
isometric draw though I've been wanting
to do that with some puff Rems for a
to do that with some puff Rems for a
while this looks really
while this looks really
nice so good job
there got to add the original iops wrath
there got to add the original iops wrath
to this thing which
to this thing which
do you remember the original iops
wrath oh did you not play uh super super
wrath oh did you not play uh super super
early the
early the
original iops wrath spell the way that
original iops wrath spell the way that
it
worked the level 100 IOP
spell
spell
yeah do you remember like I don't know
yeah do you remember like I don't know
do you know the way that it used to work
originally it wasn't a charge up like is
now it was a 20 turn cool down with a
now it was a 20 turn cool down with a
one out of two crit failure rate that
one out of two crit failure rate that
would basically one shot anything in the
would basically one shot anything in the
game if you hit
[Music]
[Music]
it yeah
yeah that's a really Niche very very
yeah that's a really Niche very very
Niche trivia very few people know
that all right I'm trying to think what
that all right I'm trying to think what
we want to do with this now so we have
we want to do with this now so we have
these two
these two
M's should I just go start going through
M's should I just go start going through
and um doing this for the rest of them
and um doing this for the rest of them
like
shouldn't be that
shouldn't be that
hard did you already do pong
yeah here's the uh here's your pong game
yeah here's the uh here's your pong game
isn't this
clean I mean it looks the same is
breakout yeah so this is what I mean by
breakout yeah so this is what I mean by
much easier bindings
like pix get smaller no I don't think so
like pix get smaller no I don't think so
but it's it got like
here this stuff at the top is just you
here this stuff at the top is just you
can literally autogen this stuff at the
can literally autogen this stuff at the
top and
then you make the M's in a loop like
this and the resets are here yeah
this and the resets are here yeah
logging is different the way I do
logging is different the way I do
logging now I don't know if I like this
logging now I don't know if I like this
completely but it's pretty nice you have
completely but it's pretty nice you have
this log buffer thing in C and this lets
this log buffer thing in C and this lets
you do a dynamic length logging without
you do a dynamic length logging without
having to mess with the python it's like
having to mess with the python it's like
one screen of code for nice
logging let me think what I want to do
logging let me think what I want to do
from here we have all these different
from here we have all these different
M's to to
bind I think I should just do all the
bind I think I should just do all the
M's
right this one doesn't even have python
right this one doesn't even have python
binds yet so I don't have to worry about
binds yet so I don't have to worry about
this I can probably do these two pretty
this I can probably do these two pretty
quick snake won't be hard and then I
quick snake won't be hard and then I
just have the MOBA to deal with which is
just have the MOBA to deal with which is
obviously a bit heavier but
obviously a bit heavier but
like
no I think that'll work
let's do Connect Four first
maybe
maybe
holy lots of
stuff does this currently
stuff does this currently
train let's see if it currently trains
train let's see if it currently trains
so we have an expectation
ah okay so we got to Port before we can
ah okay so we got to Port before we can
even tell
after
only fair that I do the port considering
only fair that I do the port considering
I uh I did the whole API stuff I suppose
I uh I did the whole API stuff I suppose
right
doation
doation
actions rewards
terminals this is good
TI is
zero I think we even need to know the
zero I think we even need to know the
tick do we oh yeah we
do
do
step need
this
this
rewards then we'll just do
if
length
log cool and then we
log cool and then we
return reservations rewards could link
return reservations rewards could link
this segment to uh Spencer as well so we
this segment to uh Spencer as well so we
can see how
can see how
nicely things get cleaned up with the
nicely things get cleaned up with the
new API
stuff CU a lot of this is just going to
stuff CU a lot of this is just going to
be simpler you
know and these like places piece these
know and these like places piece these
things don't need to have self on
them and these don't need we don't need
them and these don't need we don't need
these anymore because these are now in a
these anymore because these are now in a
knit this is just no
knit this is just no
mobs 42
oops and seven
don't need emulated or done anymore
don't need emulated or done anymore
don't need buffer
don't need buffer
anymore don't need actions anymore don't
anymore don't need actions anymore don't
need terminals reward
need terminals reward
some render mode you need don't need num
some render mode you need don't need num
M's you need numb agents
that looks
nice much code to be written today
num M we need to add num
Ms with height
over this game over thing is weird the
over this game over thing is weird the
way this is getting
way this is getting
past I
think yeah these are not needed I don't
think yeah these are not needed I don't
know why these are passed like
this in fact a lot of these other things
this in fact a lot of these other things
probably don't need to be passed either
probably don't need to be passed either
but we'll leave them for
now right like why would you need to
now right like why would you need to
pass this stuff
yeah so we'll fix this stuff
yeah so we'll fix this stuff
here uh this is just going to be Connect
here uh this is just going to be Connect
Four with all this Shenanigans in it
so we'll just do
so we'll just do
self
self
well we need in
well we need in
[Music]
[Music]
numm Num Ms
numm Num Ms
or
see
see
I
uh I oh do this in
pong we can move pretty quick here but
pong we can move pretty quick here but
there's uh there is some stuff that
there's uh there is some stuff that
needs to be added here okay so it's like
this num M's
client this is
M's it's going to be C Connect 4
M's it's going to be C Connect 4
allocate buffer
there actions rewards
there actions rewards
terminals I and then we do we iterate
terminals I and then we do we iterate
like this and then this is going to be C
like this and then this is going to be C
Connect
Connect
Four observations
Four observations
DS I think this is called duns
right yeah DS and then now we
right yeah DS and then now we
need piece width piece height with and
need piece width piece height with and
height I
height I
believe this
withth uh this should not be needed this
withth uh this should not be needed this
longest you should not be needed logs
longest you should not be needed logs
goes
goes
here yeah this is
good
right and then there's an init
yeah this is so much simpler it's not
yeah this is so much simpler it's not
even funny it's like I almost feel bad
even funny it's like I almost feel bad
for making people write so much boiler
for making people write so much boiler
plate and this is less than there was
plate and this is less than there was
before as
well yeah and it we don't need any of
well yeah and it we don't need any of
this what you allocate memory
this what you allocate memory
board X board
y then the allocator as
well I don't think we need this think we
well I don't think we need this think we
can just do
and
and
then you call a knit on top of this
then you call a knit on top of this
yes you
do then this is
do then this is
void yeah look at all this boiler plate
void yeah look at all this boiler plate
we're just shredding
we're just shredding
here see how nice that
is we got to go grab the uh the pong
logic kind of annoying to have to copy
logic kind of annoying to have to copy
paste these Loops but
paste these Loops but
um we'll figure that out
um we'll figure that out
eventually boiler plate amount only goes
eventually boiler plate amount only goes
down never goes
up close
okay okay now we got to go
okay okay now we got to go
grab we got to do log structures I
believe yeah I got to do log structures
which is what just win lose I
guess
guess
length return score
just need log buffer like
this assign
logs we need to add these to the uh the
logs we need to add these to the uh the
client oh we already have it okay
grab this log stuff
grab this log stuff
from the header file
here we're not going to need score as a
here we're not going to need score as a
field Cu uh there's
field Cu uh there's
no score is just episode return for this
no score is just episode return for this
I guess we could standardize like this
I guess we could standardize like this
length return score would be
fine it's kind of nice to be
fair but now we can definitely see that
fair but now we can definitely see that
we're copying this piece of code uh
we're copying this piece of code uh
repeatedly
right we're not going to be too bummed
right we're not going to be too bummed
about for now
oops game
okay we got our
log log
log log
buffer and then we got
log and then on reset
we clear our
log and
then we got to do
step add one to episode
length then here we
length then here we
do we got to add the log and
uh episode what it score and episode
uh episode what it score and episode
return have to be set to something
here check win
here check win
condition wait hold
condition wait hold
on does he not have rewards
here check wind condition
check wind
check wind
condition this doesn't reset though
I guess we leave it like this for
now that's
now that's
fine we'll just do
player one for player
player one for player
win negative one for opponent
win
okay that
okay that
log so we'll just do like
log so we'll just do like
this does reset have compute
this does reset have compute
observations on
observations on
it no it does not that is
a yeah that's an
a yeah that's an
error all
right let's see if this is uh fixed up
too many
that's way
that's way
nicer do
allocate Connect
allocate Connect
Four
Four
so this is going to
be
be
um this how I do
um this how I do
this I have to make sure stuff is zero
this I have to make sure stuff is zero
don't
I longest connected is
four
four
zero p with
six I
six I
honestly yeah this is an error on the
honestly yeah this is an error on the
way that this is
done well not really we'll leave it like
this iteratively improving
[Music]
invalid oh this is
invalid oh this is
um
interesting I think this doesn't need to
interesting I think this doesn't need to
be done at
all reset
M this needs to be
pointer and then
free how far does that get us
and I missed one
okay something got screwed up here
okay something got screwed up here
clearly
add
log I know what this
is we need to add
is we need to add
um to allocation right
we
go oh I just typoed this
and we
win let's do the setup version
this needs to
be like
this make client
not
convert this AET function
is actually going to be different it's
is actually going to be different it's
an XC Connect 4
one C Connect 4 no field log
one C Connect 4 no field log
buffer we know what that
buffer we know what that
is I mean you can kind of see that we
is I mean you can kind of see that we
can go pretty quickly
can go pretty quickly
here
here
um with these
um with these
M's it's really just a matter of
M's it's really just a matter of
uh getting rid of the last like bits of
uh getting rid of the last like bits of
boiler
boiler
plate tradeoffs to be
made oh and then this thing oh these
made oh and then this thing oh these
actually get
simple see
not
not
assign and sign charar
and there we
and there we
go this now
go this now
compiles
compiles
so oh this actually has to be back
native no attribute
buff s
buff s
dot buff
let's return yep we forgot API
compat get log
okay just
log there we go
and we uh we've just learn to win
immediately which
immediately which
[Music]
[Music]
is precisely what should happen right
hi what would you recommend for starting
hi what would you recommend for starting
the
the
implementation multi-agent RL en with
implementation multi-agent RL en with
autonomous
autonomous
drones similar to neuro but
drones similar to neuro but
simpler where each drone has multiple
simpler where each drone has multiple
tasks what would you
tasks what would you
recommend I mean I would
recommend I mean I would
recommend um hopping into the puffer
recommend um hopping into the puffer
Discord or discord.gg puffer and kind of
Discord or discord.gg puffer and kind of
just building it as a custom a custom M
just building it as a custom a custom M
and integrating with puffer lib like the
and integrating with puffer lib like the
way we've been doing with all these
way we've been doing with all these
other ones uh that's going to be the
other ones uh that's going to be the
easiest way to get a very high
easiest way to get a very high
performance environment for something
performance environment for something
like that doesn't have to be in C if you
like that doesn't have to be in C if you
don't want it to be but you'll have the
don't want it to be but you'll have the
option basically to push it to whatever
option basically to push it to whatever
level of speed you
level of speed you
want based on the effort you want to put
want based on the effort you want to put
in
in
lots of people are doing this with
lots of people are doing this with
different ends
different ends
now really the way to
go pretty much if you do it any other
go pretty much if you do it any other
way you get um you're going to get
way you get um you're going to get
bottlenecked by tons of ridiculous RL
bottlenecked by tons of ridiculous RL
infra
problems Let's uh let's take a look at
problems Let's uh let's take a look at
this thing that we just trained for
okay so here is uh here it
okay so here is uh here it
is I mean you can see it's just I think
is I mean you can see it's just I think
it's probably exploiting the RNG or
it's probably exploiting the RNG or
something but it just learns to do this
something but it just learns to do this
and it
wins already in the Discord would keep
wins already in the Discord would keep
keep in touch yeah I mean this is the
keep in touch yeah I mean this is the
whole idea for stuff and um I don't know
whole idea for stuff and um I don't know
if this is for a company or for research
if this is for a company or for research
or for a project or something um but if
or for a project or something um but if
you want to do it in a way that's like
you want to do it in a way that's like
an open source puffer thing I will be
an open source puffer thing I will be
happy to help you out more and if it's a
happy to help you out more and if it's a
company thing then let me know about
company thing then let me know about
that too
we're kind of just always looking to add
we're kind of just always looking to add
stuff onto
stuff onto
this and uh some of them are you know
this and uh some of them are you know
this is fairly sophisticated
this is fairly sophisticated
right as an
right as an
environment research for PhD yeah
environment research for PhD yeah
perfect academic uh we run support for
perfect academic uh we run support for
academic collabs for
free so if you want to have uh if you
free so if you want to have uh if you
want to do online drone racing Sim that
want to do online drone racing Sim that
people can play around with and see in
people can play around with and see in
their browser like this and have that be
their browser like this and have that be
not all that difficult to do I can
not all that difficult to do I can
definitely help with
that I've kind of wanted to do more
that I've kind of wanted to do more
physics M for a while now I was thinking
physics M for a while now I was thinking
about like you know school of fish or
about like you know school of fish or
something but yeah like
something but yeah like
drones drone Racing type thing or drone
drones drone Racing type thing or drone
collab thing would be natural
fit I pretty much know exactly how to
fit I pretty much know exactly how to
set all that stuff up as
well kind of surprised that this just
well kind of surprised that this just
works immediately
works immediately
here well I guess this one's done we uh
here well I guess this one's done we uh
we have this one working
Spencer will be happy with
this reward score num num
games yeah we literally just have to do
games yeah we literally just have to do
the same thing with his
uh we literally just have to do the same
uh we literally just have to do the same
thing here with his
thing here with his
n is not
bad he literally asked me about
bad he literally asked me about
yesterday and he's going to have
yesterday and he's going to have
examples for both of his environments
examples for both of his environments
like less than 24
like less than 24
hours immediate
hours immediate
gratification we're big on instant
gratification we're big on instant
gratification here with uh puffer
support and I love when I just get to
support and I love when I just get to
solve people's stuff for them in like
solve people's stuff for them in like
you know an hour of just sitting down
you know an hour of just sitting down
and coding it for
okay
look how quickly all this code just
look how quickly all this code just
melts
melts
away with the uh the newer API thanks
away with the uh the newer API thanks
for come back to you perer see you
for come back to you perer see you
around thanks for dropping by
don't forget to feed the puffer a star
don't forget to feed the puffer a star
helps out a
lot really all I
lot really all I
ask for puffer for
free I swear these refactors are
free I swear these refactors are
actually making me type
faster uh where do I do tick maybe
faster uh where do I do tick maybe
here need this
beted it all already very
beted it all already very
good puffer gets larger when you feed it
stars puffer will grow to consume the
stars puffer will grow to consume the
entire
entire
field and remove all of the horrible
field and remove all of the horrible
infrastructure that PhD students have
infrastructure that PhD students have
been forced to live with and suffer
been forced to live with and suffer
through for the past decade that is the
through for the past decade that is the
goal I think we get
there all right so uh I forgot about all
there all right so uh I forgot about all
this pointer
Shenanigans most of this is not going to
Shenanigans most of this is not going to
be needed though
OBS actions rewards terminals num
OBS actions rewards terminals num
M's with yeah there we
go the amount of Interest nightmares I
go the amount of Interest nightmares I
had to suffer through in my PhD um
had to suffer through in my PhD um
making like Ms like this was nuts
making like Ms like this was nuts
so glad that this is going to be much
so glad that this is going to be much
much easier
this is what we
need max speed
okay we got OBS
okay we got OBS
actions what's the signature on
this OBS actions
this OBS actions
done yeah
RS log
RS log
buffer card width card height there's no
buffer card width card height there's no
frame
skip don't need
skip don't need
that we just
do
do
okay this has to be C triple Triad
grab
these
these
reset yes
clean that's looking
better grab these
what do we think
here I think it's we're probably going
here I think it's we're probably going
to want to have like a util thing cuz we
to want to have like a util thing cuz we
keep using this over and over but for
keep using this over and over but for
now I'm keeping the single file
now I'm keeping the single file
structure so it's just going to be
structure so it's just going to be
pasted in
you pass in Num cards was that a thing
and the allocator is going to be very
similar you do need to
similar you do need to
pass all you don't need to do
uh right I have to add to the
uh right I have to add to the
allocator oh geez the spacing
here and that where's the
here and that where's the
allocator so this m logging is going to
allocator so this m logging is going to
go
go
away it's got to
be allocate the log
buffer actually goes
here and and uh then this mis logging is
here and and uh then this mis logging is
going to get
replaced holy spacing
Batman kind of a mid complexity
Batman kind of a mid complexity
environment the amount of stuff in here
environment the amount of stuff in here
holy spacing
though this has not been renamed
correctly kind of fun just going through
correctly kind of fun just going through
and like fixing contributor code like
and like fixing contributor code like
adjusting things
quickly this is going to be a very nice
Improvement it's really the only thing
Improvement it's really the only thing
is
is
um the allocation buffers the way those
um the allocation buffers the way those
are handled that I don't like
are handled that I don't like
overall the rest of the stuff that I'm
overall the rest of the stuff that I'm
fixing now it's my fault that it's like
fixing now it's my fault that it's like
this way cuz I didn't have better uh
this way cuz I didn't have better uh
ways of doing it it for
him let's just start trying to compile
this uh Triple triad.
C
C
dot with
dot with
why can't I where's my auto complete yo
why can't I where's my auto complete yo
Spencer does this code look
familiar pick some stuff for you
we're uh dramatically dramatically
we're uh dramatically dramatically
simplifying binding code it's going to
simplifying binding code it's going to
be faster than it was before I already
be faster than it was before I already
did your connect
did your connect
4M your connect 4M is uh solved versus
4M your connect 4M is uh solved versus
the random bot as well literally first
the random bot as well literally first
experiment I
experiment I
ran not it versus harder opponents new
ran not it versus harder opponents new
new updates from infra yeah pretty much
new updates from infra yeah pretty much
just simplifying boil plate stuff like
just simplifying boil plate stuff like
that so you can see right here you know
that so you can see right here you know
you can put the m in like this and then
you can put the m in like this and then
allocate just goes with the reference
allocate just goes with the reference
doesn't need this giant
doesn't need this giant
signature reset and M make the
signature reset and M make the
client let's give this m do width do
client let's give this m do width do
height
crushes connect
yeah and now you have it um when you run
yeah and now you have it um when you run
like a th copies of Connect 4 or
like a th copies of Connect 4 or
whatever that Loop runs in C for you
whatever that Loop runs in C for you
now so that should be substantially
nicer cool that you added this mouse
nicer cool that you added this mouse
control
just have to make some minor
changes see what we got not return of
changes see what we got not return of
[Music]
value six
me card
with d it auto complete
relative triple Triad
still
no we just fix everything real quick
no we just fix everything real quick
there we
go
okay can I
click an empty
space that resets
space that resets
nice now we do The scon Binding
version fix these bugs
three client
sign
sign
charm little bit of casting
not convert
python says pong down there by
python says pong down there by
render yeah probably CU I
forgot there we
forgot there we
go M needs to be imported
okay that runs now that compiles but
okay that runs now that compiles but
we're not using the log buff
yet all
yet all
right so let me
right so let me
see
see
reset did I
uh okay where's the
scoring
scoring
i m score of I
equals where's
equals where's
step we got to add the
um well we got to add
everything nope not there
add one to episode
length let's see where you call reset
length let's see where you call reset
you call reset and
you call reset and
step and that's
step and that's
it score starts at five and increases or
it score starts at five and increases or
decreases cool yeah that's
decreases cool yeah that's
good
good
uh um so we just do add
uh um so we just do add
log We'll add this log
log We'll add this log
there then we call
there then we call
reset we have length handled now all we
reset we have length handled now all we
have to handle is reward and
have to handle is reward and
score let's
see check wind
condition this it
yeah this is literally it you just have
yeah this is literally it you just have
uh a wind
uh a wind
condition right
condition right
here so let's
do
do
minus
0.1 and what's this m
score this is a draw
so oh well you actually have score in
so oh well you actually have score in
here
right M do score is zero your player
right M do score is zero your player
your player zero here I can do it like
your player zero here I can do it like
this
think that's
think that's
right and
then
then
oops believe so
oops believe so
Co and we add to the episode return like
Co and we add to the episode return like
this which is cool we'll do like
that never randomized turn
that never randomized turn
start okay
start okay
okay and then let me see if this already
okay and then let me see if this already
works for
us native
andle you also need to
andle you also need to
do
for for
like VA very
nice let's figure out
why Works in and
see seems like it works
see seems like it works
there interesting that it would then seg
there interesting that it would then seg
fault I bet I didn't
pass not pass buffer correctly
maybe looks like I did
de cards is going to be
de cards is going to be
10 maybe I forgot
that still like
that still like
BS okay
12 run it with
12 run it with
GDB let's see where it's like
folting uh
yeah so this thing's not allocated for
yeah so this thing's not allocated for
some reason because I there it is this
some reason because I there it is this
is
why see
no attribute
no attribute
log uh there should be a
log I just forget to copy it
there we
go not particularly
go not particularly
learning we'll have to figure this
out let's start by setting
okay did you tune this learning
okay did you tune this learning
rate or is this just uh something you
rate or is this just uh something you
grabbed from
somewhere and of batch size
just
one same situation as
one same situation as
go okay cool yeah I'll go through this
go okay cool yeah I'll go through this
later with you uh but we'll we should be
later with you uh but we'll we should be
able to solve it
able to solve it
anyways if it's just
fast one one one yeah that's what we
fast one one one yeah that's what we
want one
coped okay leave it like this then this
coped okay leave it like this then this
should immediately take train up to
should immediately take train up to
something
something
respectable even on this
respectable even on this
Hardware yeah there you
go
go
now pry
now pry
H you
H you
obervations it's gets called I also I
obervations it's gets called I also I
noticed you forgot to call uh you always
noticed you forgot to call uh you always
forget to call on reset you forget to
forget to call on reset you forget to
call compute observations here and you
call compute observations here and you
need
to not a huge thing but it'll make you
to not a huge thing but it'll make you
misplay your first move every
game
game
yeah why because when the environment
yeah why because when the environment
resets set then you actually get don't
resets set then you actually get don't
you just call and
you just call and
step oh I guess it depends how you do
step oh I guess it depends how you do
it no because look you see you you call
it no because look you see you you call
reset here and then you call return so
reset here and then you call return so
it doesn't actually hit it at the bottom
it doesn't actually hit it at the bottom
that's why you see
that's why you see
that I checked your environments and
that I checked your environments and
like it's a common error um like if you
like it's a common error um like if you
check the first observation on after
check the first observation on after
reset it's empty
let's see what this is
so card
selected okay so you have a lot of stuff
selected okay so you have a lot of stuff
in here
it
yeah see there it is the zero right
yeah see there it is the zero right
there because I didn't rebuild and now
there because I didn't rebuild and now
I'm going to
I'm going to
rebuild it's not going to be zero
or I'm it's still going to be zero and
or I'm it's still going to be zero and
I'm going to look stupid oh no it's not
I'm going to look stupid oh no it's not
there it is okay so here we have some
there it is okay so here we have some
numbers they should probably be
numbers they should probably be
normalized a huge
deal surely they should be able to
deal surely they should be able to
figure something out unless the OBS are
figure something out unless the OBS are
completely unreasonable
opponent
opponent
turn check wind
turn check wind
[Music]
condition dumped everything thing
yeah let me see where you're doing
yeah let me see where you're doing
scoring logic
ler
index
e e
something weird is happening
decks are
randomized yeah I know but this is crazy
randomized yeah I know but this is crazy
chaotic and I think it's like not
chaotic and I think it's like not
playing valid moves or
playing valid moves or
something it's like learning that can
something it's like learning that can
just Spam invalid moves
where's it skip invalid
here is this else here
so can I just do
else like
else like
this and then if
this and then if
card check legal placement e
crazy
volatile the episode length not getting
reset no it
is ADD log yeah the episode length is
is ADD log yeah the episode length is
gone nuts
so why is it learning to do
so why is it learning to do
this it's invalid
stuff e
length should not be getting longer like
this e
yeah it
yeah it
should that's what I'm trying to figure
should that's what I'm trying to figure
out why it doesn't
look I do it right
here where is
it this zero is destruct
I'm only calling this here
should not be able to monotonically
should not be able to monotonically
increase like this
it's overriding your
it's overriding your
struct shouldn't be
possible yeah no I got rid of that
thing let's just do for
okay here's our triple
Triad click something
Triad click something
invalid I did not get any reward for
invalid I did not get any reward for
this ah negative one for pressing the
this ah negative one for pressing the
button one here see that
okay press the button
okay press the button
two negative one you see
that of
one and then one for winning I guess
yep so this actually looks reasonable to
yep so this actually looks reasonable to
me um I'm trying to think if it's
me um I'm trying to think if it's
possible that we're not resetting
possible that we're not resetting
somehow
legal placements
[Music]
yeah that's fine you're allowed to do
yeah that's fine you're allowed to do
that
yeah resets
here e
invalid move gets punished
get rid of this
should be going
down unless it's literally impossible
down unless it's literally impossible
but it it has to be able to reset
um why is it
15 oh I know
okay e
return length and score
these just get longer over time is that
these just get longer over time is that
what
happens yeah they
do games are genuinely finishing but
do games are genuinely finishing but
they're taking longer and longer
yes
crazy maybe they're not hold on
I bet it's just this
still
really that's nuts
oh cuz you already have it set
minus
5 why does it do
this why is it it get worse and
worse it eventually discovers it
why does it get worse and worse over
why does it get worse and worse over
time that literally gets worse reward
time that literally gets worse reward
for doing
for doing
that is it just too hard
no because the return is
no because the return is
not the return should be going
not the return should be going
crazy so something is wrong
crazy so something is wrong
here you see like this episode return
there's something that's not getting um
there's something that's not getting um
punished I think
you
have you have 15 actions here
right see if it's this
ah I
see it's the no op
man for
this is an in this is uh going to be
this is an in this is uh going to be
instructive for
you if I'm
right did not
recompile
e e
oh I see
that's so
obnoxious for
just tuned in quick 10sec rundown on
just tuned in quick 10sec rundown on
what you're working on today uh I'm
what you're working on today uh I'm
currently taking all the puffer M the
currently taking all the puffer M the
first party puffer M getting them bound
first party puffer M getting them bound
to the new infrastructure and getting
to the new infrastructure and getting
some basic training Loops working with
some basic training Loops working with
them so so far I have gotten pong
them so so far I have gotten pong
breakout both of these train I've got
breakout both of these train I've got
Connect Four that trains versus random
Connect Four that trains versus random
just fine now I'm doing this triple
just fine now I'm doing this triple
Triad card game um lots of boiler plate
Triad card game um lots of boiler plate
reduction lots of bug fixes lots of
reduction lots of bug fixes lots of
reward fixes stuff like
reward fixes stuff like
that really this is going to make them
that really this is going to make them
very usable
yeah
okay what's the point of even having a
okay what's the point of even having a
no op in the M there isn't one except
no op in the M there isn't one except
that you have to like it makes it easier
that you have to like it makes it easier
for people to play depending on how you
for people to play depending on how you
right it
we're going to see if this does it
H it still found to work around isn't it
literally have to check I have to do um
literally have to check I have to do um
I have to see what the hell it's
doing I think what's happening is it's
doing I think what's happening is it's
figuring out how to just like it's
figuring out how to just like it's
finding some set of moves that it's not
finding some set of moves that it's not
getting punished for um that just lets
getting punished for um that just lets
it cycle indefinitely so that it can
it cycle indefinitely so that it can
avoid playing the game
we're going to see in a moment
here fine
looks like EnV is returning it's it's
looks like EnV is returning it's it's
doing something stupid
man okay so here
look it's spamming card selection you
look it's spamming card selection you
see it's hard to see the Highlight
see it's hard to see the Highlight
moving around but it's spamming card
moving around but it's spamming card
selection and apparently it's not
selection and apparently it's not
getting punished for this either which I
getting punished for this either which I
thought we had uh I thought that I'd
thought we had uh I thought that I'd
done this
oh I see
see I mean literally I can just do
this we'll find a better way
after you're going to need to do a
after you're going to need to do a
little work on this one I think but this
little work on this one I think but this
will be a good uh a good demo you of of
will be a good uh a good demo you of of
RL
RL
debugging I'll get it to actually train
debugging I'll get it to actually train
first
though there we go
those non
implemented I'm use a restroom real
implemented I'm use a restroom real
quick while this trains for you we'll
quick while this trains for you we'll
see how this
goes
e
e
e
e e
[Music]
well
well
how's that
Spencer looks like your environment is
training we'll look at the policy in a
training we'll look at the policy in a
bit
figured something out though
actually it still goes up as
well let that be a lesson
though what was happening right is it
though what was happening right is it
was getting penalized for
was getting penalized for
losing and it couldn't figure out how to
losing and it couldn't figure out how to
win so it just found a way to avoid
win so it just found a way to avoid
playing the game
playing the game
it's all it
did and when we said no you have to
did and when we said no you have to
actually play the game then it started
actually play the game then it started
working
again that
easy now this has positive score on the
easy now this has positive score on the
game
let's see
let's see
if I do oops hold on
let's see what this
does
H if I reduce the FPS on this
to like
two think we can watch it
okay
five or
six it's not great at the
six it's not great at the
game but there are a lot of things that
game but there are a lot of things that
could
could
be it is according to uh the Cal though
be it is according to uh the Cal though
it is beating the random Bott on
average its average score is a six
average its average score is a six
apparently
cool hey
cool hey
bet well that's four RL
bet well that's four RL
environments uh moderately fixed
environments uh moderately fixed
in not that much
in not that much
time probably got to do the snake end
the Moa and
the Moa and
everything and this is such a big thing
everything and this is such a big thing
to have to
to have to
merge to
merge to
Dev break a bunch of
stuff guess I just have to have all the
stuff guess I just have to have all the
custom M's
working do they have the new streamline
working do they have the new streamline
Style
Style
yeah they
do it's uh much much much
simpler this is the triple Triad
simpler this is the triple Triad
file they basically all look like this
H and they all actually have um
H and they all actually have um
non-trivial or I mean they have like
non-trivial or I mean they have like
better than whatever Bots uh that are
better than whatever Bots uh that are
trained as
well I guess I got to do a snake
now better maybe uh after a hyper pram
now better maybe uh after a hyper pram
sweep probably
to be fair they'll probably just go from
to be fair they'll probably just go from
like being a bit better than random to
like being a bit better than random to
full solving the environments after
sweep yeah so we got to do snake as well
it's actually crazy how much simpler
it's actually crazy how much simpler
this is about to
get it's about to get much
simpler sweep that big a diff yes
much luck with your coding it's bedtime
much luck with your coding it's bedtime
in Norway thanks for dropping
by it's 4M I got to do this snake M
by it's 4M I got to do this snake M
here you know what I think I'm going to
here you know what I think I'm going to
do um
do um
because it's probably going to be too
because it's probably going to be too
much to also do the Moa today the Moa
much to also do the Moa today the Moa
has a more substantial binding and
has a more substantial binding and
there's some extras for it but why don't
there's some extras for it but why don't
I'm going to go make a
I'm going to go make a
shake and then how long have I been live
shake and then how long have I been live
for 340 so I'm going to go make a shake
for 340 so I'm going to go make a shake
I'm going to Port the snake
I'm going to Port the snake
environment and then we'll aim to have
environment and then we'll aim to have
this merge to Dev
this merge to Dev
tomorrow with um the Moa as well
tomorrow with um the Moa as well
because that'll be all the environments
because that'll be all the environments
then
then
right so we'll merge this to Dev
right so we'll merge this to Dev
tomorrow with the Moa as well with a
tomorrow with the Moa as well with a
little bit more
little bit more
testing yeah go ahead and do that promo
testing yeah go ahead and do that promo
if you like bet I'm uh I will be right
if you like bet I'm uh I will be right
back I got to go get myself a shake
back I got to go get myself a shake
before I
forget
e
e
e
e
e
e
e
e
e
e
e
e
e
e e
all
right one more environment to fix right
right one more environment to fix right
now
you know it's kind of so funny we've
you know it's kind of so funny we've
gotten rid of so much boilerplate that
gotten rid of so much boilerplate that
um the AI
um the AI
one
one
um well the one on the website isn't
um well the one on the website isn't
even AI it's just random the one that we
even AI it's just random the one that we
trained is
better the Connect 4 AI is literally
better the Connect 4 AI is literally
random
that might be considered negative
that might be considered negative
intelligence
I think we Port this snake
I think we Port this snake
end for today tomorrow we do uh the
end for today tomorrow we do uh the
puffer am MOA and we clean stuff
puffer am MOA and we clean stuff
up and we go from there
up and we go from there
um things that I'm not satisfied with at
um things that I'm not satisfied with at
the moment so
some of these are just so simple
some of these are just so simple
like I guess this one has extra render
like I guess this one has extra render
modes
yeah before there's going to be an
yeah before there's going to be an
animation we're going to replace the
animation we're going to replace the
tokens with like red puffer blue puffer
tokens with like red puffer blue puffer
I'm sure we'll
do for
this is
this is
interesting this is kind of more
interesting this is kind of more
intricate in a way
intricate in a way
it's funny like I see what I've done
it's funny like I see what I've done
here but I literally think it's easier
here but I literally think it's easier
to do stuff in C now than mess around
to do stuff in C now than mess around
with this
with this
python isn't that funny how that's
happened there's just more annoying
happened there's just more annoying
stuff to think about
let's start with the snake
start with
start with
this and hopefully I can uh I can get
this and hopefully I can uh I can get
this one done before I run out of steam
today for
this in it literally doesn't even need
this in it literally doesn't even need
to
to
exist it's whole
function
e
e e
okay this is fine
do we do for render cell size
you leave this as render
cell these can just be oh these need to
cell these can just be oh these need to
actually be uh
actually be uh
four with
there
there
okay do like this
demo file gets even
smaller now we're good
holy
this going to be passed by value if I do
this going to be passed by value if I do
this I don't know we'll
see for
okay this appears to still
work we still have reasonable snakes
work we still have reasonable snakes
that are doing things can still play the
that are doing things can still play the
game SS
good this is not
bad yeah this here this one's not bad
we're probably going to need logs
right we're going to need logs
yeah I may as
well just to save
stuff
uh
find see bet
so people will be able to play with this
so people will be able to play with this
at
least not done for the day yet not quite
yet e
thousand a big
PR all right this stuff's onbind
finish
snake let me see how I do
snake let me see how I do
this so much gross stuff here
yeah so much
stuff snakes Max snake length
none of these
none of these
things these things
I'm just going to go
I'm just going to go
into into this just real
quick e
poins
colors
food
Vision all right so here now now we
have our environment in
have our environment in
it and
it and
then s
by yeah
reset zero
this is no
this is no
longer
needed yeah it's literally going to end
needed yeah it's literally going to end
up just looking like the rest of
up just looking like the rest of
everything
thing I actually might even just wait on
thing I actually might even just wait on
the Moa like it's going to that's going
the Moa like it's going to that's going
to take some substantial
to take some substantial
work um and as for this render like
UMB
human I guess all I have to do is
give it the observation
right
right
oh yeah this is kind of awkward I guess
I didn't think about
I didn't think about
this a headless
this a headless
render well this doesn't work as
render well this doesn't work as
headless render anyways
though easiest thing for now is
though easiest thing for now is
literally just going to be to
literally just going to be to
remove and then rethink
yeah literally all this
stuff this whole
stuff this whole
client is now in
client is now in
C we don't need that it ends up looking
C we don't need that it ends up looking
identical to everything else it's just
identical to everything else it's just
all delicated to see
uh now we do the pong
thing we copy this
we got numm
client this all just gets easier doesn't
client this all just gets easier doesn't
it
yeah it's actually so funny the more
yeah it's actually so funny the more
that I think about it
that I think about it
like I came up with all this clever [ __ ]
like I came up with all this clever [ __ ]
right for like the python to C
right for like the python to C
barrier it's literally easier to write
see for
h
h for
that's
funny all right what is this massive
funny all right what is this massive
code
here and with height what do we
have these are actually going to end up
have these are actually going to end up
being less aren't
they snake lengths
it's actually funny to me that
it's actually funny to me that
like it's
like it's
been like three months and it literally
been like three months and it literally
already feels harder writing python than
already feels harder writing python than
it than writing
C swear all of modern software
C swear all of modern software
development is just a lie crazy
I got numb
I got numb
food we pass width height numb
food we pass width height numb
snakes well hold on this needs to be
snakes well hold on this needs to be
passed then doesn't
it so we'll do this will be num
snakes num snakes num food and that's it
snakes num snakes num food and that's it
right so
right so
widths you need widths and Heights don't
widths you need widths and Heights don't
you widths
Heights my snake
length
okay obervation actions rewards
terminals widths Heights um
snakes it's really nice being able to
snakes it's really nice being able to
mix stuff like
mix stuff like
this uh num food
this uh num food
Vision snake
Vision snake
length or
length or
food there we
go yeah
and then we'll just
and then we'll just
do things can go
away SE snake star
M for log in
M for log in
M's
oops damn it let me freaking type there
oops damn it let me freaking type there
we go
we go
n m is going to be length
n m is going to be length
of snakes let's do like
this none of this matters at
all uh none of this matters at
all okay
M's Seas
M's Seas
snake SE snake
like
this and we have ob's
this and we have ob's
eye actions rewards
eye actions rewards
terminals see
terminals see
snake
snake
obervations see what this
obervations see what this
takes doesn't okay we're going to have
takes doesn't okay we're going to have
to change a bunch of stuff apparently
that's fine
that's fine
though where'd it
though where'd it
go I was literally dis editing this
right was I did I do it here by
right was I did I do it here by
mistake
mistake
no well I have no idea where the heck
no well I have no idea where the heck
those edits just
went oh
went oh
wait yeah here we
go my bad we got
go my bad we got
with spy Heights spy num snakes num
with spy Heights spy num snakes num
food then we
food then we
get
get
Vision
Vision
Max snake
Max snake
length the corpses on
length the corpses on
death for food for death
okay and then there's literally not even
okay and then there's literally not even
anit function for this one it's that
anit function for this one it's that
easy
grab all
this it's actually crazy how much dev
this it's actually crazy how much dev
has sped up since I
graduated it's like the engineering
graduated it's like the engineering
skill Delta
skill Delta
is like I'm literally getting twice as
is like I'm literally getting twice as
twice as good at this every six months
now probably during PhD it was twice as
now probably during PhD it was twice as
good every two
years I says I'm copy pasting a bunch of
years I says I'm copy pasting a bunch of
dumb boiler plate
but to be fair there's less dumb boiler
but to be fair there's less dumb boiler
plate than before and it is simpler than
plate than before and it is simpler than
before which is key it's an
before which is key it's an
improvement it's not the end game yet
improvement it's not the end game yet
but it is an
improvement see like this can just go
improvement see like this can just go
this can just go [ __ ] off
now and we do have to add uh the whole
now and we do have to add uh the whole
struck death to this which is a little
struck death to this which is a little
annoying but it's not that bad I
believe little
annoying oh and this is where I'm going
annoying oh and this is where I'm going
to run into that issue right well we'll
to run into that issue right well we'll
see I don't know if you can get away
see I don't know if you can get away
with type deing destruct like this
with type deing destruct like this
um I think scyon is a little finicky
um I think scyon is a little finicky
about having to like
about having to like
pre pre- declare them or something
weird this is bent Maybe
I forget how we did
I forget how we did
this I think this is we did unsigned
this I think this is we did unsigned
Char for
this we'll see in a
moment
okay we also have to do
logs uh and this one I think we're going
logs uh and this one I think we're going
to
to
do this one's going to be bigger I
believe bigger log
believe bigger log
buffer uh what the
buffer uh what the
heck oh
yeah it'll be
cleaner
do and clear
do and clear
and
then I think you have to do
then I think you have to do
log yeah it's a little more complicated
log yeah it's a little more complicated
for multi agent here
signed I think I just unsigned in for
signed I think I just unsigned in for
actions didn't
actions didn't
I
I
yeah actions terminals
we got to add the log buffers in and
we got to add the log buffers in and
this is going to be the thing that's
annoying have to add logs in here like
annoying have to add logs in here like
this and then into the allocate
I don't like how much memory this will
I don't like how much memory this will
take up for the web but
we'll to make logs for each
we'll to make logs for each
snake and then they're
free this
let's avoid the
uh oh actually hold on we do need an nit
uh oh actually hold on we do need an nit
SE
SE
snake don't
we yeah we totally need an N SE
snake what we think this is dummy
like all these things are I'm going to
like all these things are I'm going to
get PED
in log buffer gets passed in but logs
in log buffer gets passed in but logs
don't
like I don't know why we did it this way
like I don't know why we did it this way
but
like go in a
like go in a
net that's
cleaner log buffer gets passed into
cleaner log buffer gets passed into
here and then we have to do
here and then we have to do
init the snake
init the snake
this
for for
there's some more stuff to do here but I
there's some more stuff to do here but I
think I think we can start trying to
think I think we can start trying to
test the C
layer okay
function
function
definition where did I
definition where did I
miss did I mess something
up oh yeah this right
up oh yeah this right
here D I hate this like this
here D I hate this like this
stupid I don't know why it tries to
stupid I don't know why it tries to
continue
continue
comments does that actually compile
comments does that actually compile
there's no way that this just works
right yeah now okay it doesn't just work
right yeah now okay it doesn't just work
but it'll be easy to
but it'll be easy to
fix
fix
um snake.
H
grid uh we C like a grid here don't
grid uh we C like a grid here don't
we what's it say and with
do I not set
do I not set
width I do set width and height
here you
here you
see 20541
do
do
I oh wait hold on this needs to call an
I oh wait hold on this needs to call an
ity
snake
snake
Okay it's kind of crazy how the code
Okay it's kind of crazy how the code
just works you
just works you
know with the amount of slice and dicing
know with the amount of slice and dicing
I'm doing I'm not being remotely careful
I'm doing I'm not being remotely careful
and it still is just working I love my
C yeah that's just a solid um now I
C yeah that's just a solid um now I
guess we go for scyon
version we're going to have to fix some
version we're going to have to fix some
bugs
let's
see the
see the
heck
type
type
here skip the proper errors
too many
arguments to
arguments to
function in it Seas
snake this is
void where the [ __ ] is this getting
void where the [ __ ] is this getting
called
syon errors sometimes are just
ridiculous well this struct isn't even
ridiculous well this struct isn't even
remotely correct now
remotely correct now
right so it's probably this type
death probably this type
death probably this type
def we might have to rethink the scon at
def we might have to rethink the scon at
some point but um I think for now
some point but um I think for now
the thing with scon is it makes it
the thing with scon is it makes it
really easy to do like it get it makes
really easy to do like it get it makes
it just really easy to do intermediate
it just really easy to do intermediate
binding layers and
such like I kind of like having this
such like I kind of like having this
Loop over M's done in scyon instead of
Loop over M's done in scyon instead of
C it feels
C it feels
cleaner I don't know maybe I could be
cleaner I don't know maybe I could be
persuaded not to care about that as much
though if I like didn't have to write
though if I like didn't have to write
these binding files but the thing I
these binding files but the thing I
don't think there's an alternative I
don't think there's an alternative I
think you have to write The Binding
think you have to write The Binding
files
files
regardless
regardless
stupid the loop has to be
stupid the loop has to be
somewhere actually yeah it's pretty good
somewhere actually yeah it's pretty good
like this
lie handles a
lot okay
I expected this to work
argument is of type
charar and self.
charar and self.
Ms of I
I don't know how it doesn't catch this
I don't know how it doesn't catch this
because this numb Ms is just not present
where is this coming
from
oops bindings
oops bindings
man read
size SI snake
incompatible pointer
type do I need to like clear this or
type do I need to like clear this or
something
it still has it like this I don't I do
it still has it like this I don't I do
not understand where this stupid um
not understand where this stupid um
function definition is coming
from like is this just wrong hold on
C
C
snake right this Tak C snake star
M let's not do that
okay let's do this again I think
okay let's do this again I think
something's cashed or something
weird oh hold on is it like
sore
snake how did this
happen completely different
happen completely different
file right
I really do not know how this happened
need to get the
signatures come
on want me finish this and get to the
on want me finish this and get to the
gym already going on too long too much
gym already going on too long too much
Dev
plant
um what is the
thing what's the Vim finding
replace s
replace s
slash perc s yeah that's it I use it so
slash perc s yeah that's it I use it so
rarely AS
rarely AS
Slash
Slash
client what it
client what it
renderer
client then we do
client then we do
renderer C
slash okay
[Music]
okay cannot
convert wait cannot convert
that
make does it not make client
in it
in it
client this is going to be
client this is going to be
make it returns
one only type so fast
do not take
this cell size width and
this cell size width and
height
fine is there wait cell size does this
fine is there wait cell size does this
get used
I don't think this gets
used do
eight
expected what's going
expected what's going
on crazy refactors on all these
on crazy refactors on all these
reinforcement learning environments
reinforcement learning environments
cutting out tons and tons of code making
cutting out tons and tons of code making
these very fast very easy to use and
these very fast very easy to use and
very
very
simple I've done four of them today so
simple I've done four of them today so
far this is the fifth
far this is the fifth
one um basically I found a way to cut
one um basically I found a way to cut
out tons and tons of boiler plate so uh
out tons and tons of boiler plate so uh
it's way way way easier for people to
it's way way way easier for people to
make and use these environments now and
make and use these environments now and
they'll all be crazy fast as well even
they'll all be crazy fast as well even
faster than
before
before
oh it's syon
right storing
right come
on BET is the resident advert
ising but yes do star the repo it's all
ising but yes do star the repo it's all
free and open source and it helps me out
free and open source and it helps me out
a
ton sad thing is I hate advertising
ton sad thing is I hate advertising
really
really
now puffer lib is good yes indeed you
now puffer lib is good yes indeed you
can advertise for
puffer is obsa charar
yeah it is wonder why I didn't make it
yeah it is wonder why I didn't make it
sign uh unsigned
what what's the thing that you need to
uh we want these right
advertising probably
advertising probably
negligible no it actually does
help definitely does
help
yeah actually to be
fair yeah it has to be an unsigned sh in
fair yeah it has to be an unsigned sh in
see did we figure this out
before well you're not right like bull
before well you're not right like bull
is fine in C it's totally fine in C and
is fine in C it's totally fine in C and
it's fine in scyon it's the problem is
it's fine in scyon it's the problem is
it's different across that
it's different across that
bound maybe a little bit
integer required
uh
what five hours and two it's I haven't
what five hours and two it's I haven't
been live for five hours in two
minutes my stream says 4:41 on
it I don't know
yeah let me finish this this needs to be
done what in the heck
done what in the heck
tensor
tensor
size
oh confused as to what I did here
oh confused as to what I did here
because I thought it was just
wait
snake
Okay does this need to
Okay does this need to
be reshaped
I'm uh a bit confused as to
I'm uh a bit confused as to
where this has gone wrong here
oh well that's
weird is there a reason for that
yeah this doesn't make sense I think
yeah this doesn't make sense I think
this should just
be BAS
[Music]
yeah there we
yeah there we
go uh no
logs hold on there no logs
yet we need to integrate log buffer
yeah we have new logging system you like
yeah we have new logging system you like
this is new logging system
here so it's got episode return length
here so it's got episode return length
and score
this yeah
inrease episode
length we go like this return
length we go like this return
score add log and then you spawn the
snake and then when you spawn snake you
snake and then when you spawn snake you
n
vogs log Z like
this
yeah then
yeah then
here rewards
I that
add the
episode I think that's literally it
right let's see
scores the snake
length don't think this is working
why is the episode return
weird sort of started it didn't start at
seven that's the
length shouldn't it return a not
length shouldn't it return a not
necessarily return it just some of
necessarily return it just some of
rewards if you have a bunch of negative
rewards I'm trying to figure out
yeah I know it's not training nicely and
yeah I know it's not training nicely and
also it just seg
bed I didn't control C
I think I missed something
I think I missed something
no greater than equal to wall covers
everything it's kind of funny it trains
everything it's kind of funny it trains
at 500k even with debugging on that's
at 500k even with debugging on that's
nuts okay so here we
go dude
go dude
what AIS
info
for e
two
MS e
Das
o0 for
h
we'll see whether this gives me any
we'll see whether this gives me any
debug
symbols and think what the heck though
yeah no I don't have
anything question mark question
mark optimized out optimized out
cannot find bounds it's like some
cannot find bounds it's like some
internal thing what the [ __ ] and why is
internal thing what the [ __ ] and why is
there C++ there shouldn't be
C++ for
let's get rid of this garbage before I
let's get rid of this garbage before I
forget
there's literally nothing here that
there's literally nothing here that
should be running
C++ for
oh hold
oh hold
on one of the widths I'm
passing
2560 this should be
2560 this should be
good it should be fine
is it like
is it like
Ram no this uses
nothing oh wait hold on I think I'm
nothing oh wait hold on I think I'm
dumb yeah we're dumb
I don't even know how the hell this
I don't even know how the hell this
works as
works as
is this should
be e
this I forgot about
that make a difference
No it should make a
difference should make a big difference
okay e
really num
really num
Ms the one m
Ms you say
Ms you say
star thought that would be it actually
star thought that would be it actually
how the heck does this even work without
how the heck does this even work without
this trying to
this trying to
think are these things even getting
think are these things even getting
written
to obervations
yeah these get R these get written
too do I have the types matched
up the types matched let me
up the types matched let me
see Char unsigned
see Char unsigned
in float
do I have any warnings on
do I have any warnings on
this have I like ignored any warnings by
accident no
accident no
no no these
no no these
actually not all members given
no those are
no those are
fine those have nothing to do with
fine those have nothing to do with
this um I'm very confused
though the heck could be seg faulting
though the heck could be seg faulting
this
should be matching I copied it directly
should be matching I copied it directly
I'm pretty damn
I'm pretty damn
sure oh wait it could be this
sure oh wait it could be this
freaking the forse
death now this is
death now this is
fine so I left it as an unsigned
Char the heck would Segal this with like
Char the heck would Segal this with like
no reasonable
no reasonable
error can I run the uh
hey this runs just
hey this runs just
fine right this runs fine in uh in
C where would there be like a
C where would there be like a
bounds could it be Max snake
bounds could it be Max snake
length
something well we're not going to know
something well we're not going to know
you'd have to run it for a
you'd have to run it for a
long after you hit a done well it
long after you hit a done well it
considering it only logs when you hit a
considering it only logs when you hit a
done
yes could it be like Max snake length or
yes could it be like Max snake length or
something no I already have that dealt
something no I already have that dealt
with like this the thing that this is is
with like this the thing that this is is
based on has been tested over like tens
based on has been tested over like tens
of billions of steps I must have
of billions of steps I must have
introduced
introduced
something I'm trying to think what I
something I'm trying to think what I
could have introduced
print the like print what
values you
know and why is it that I don't get a
know and why is it that I don't get a
segle in this piece of
segle in this piece of
code It's like got to be something not
code It's like got to be something not
in this piece of code
unless would I get a seg
unless would I get a seg
vault I have an out of bounds right on a
vault I have an out of bounds right on a
piece of
piece of
code passed in from
code passed in from
python let me double
check okay so we pass in
what do you mean probably you got no
what do you mean probably you got no
idea you've got no idea
well this is
well this is
interesting this is defined as
uint I have it as int
uint I have it as int
8 and then
ah actions is
ah actions is
wrong you
see how did that
happen how' that happen
oh it's because yeah
okay this is the first time I've had to
okay this is the first time I've had to
pass a slice of
pass a slice of
actions so
can you pass a d type here
though you can pass a d type
hem well it's like you can just say
hem well it's like you can just say
stuff but you don't know
how are you going to know
is there ever any damn good reason to
is there ever any damn good reason to
have that be hold on let me just try
have that be hold on let me just try
something real
quick
for e
there look score just went
there look score just went
up score just
surpassed you
surpassed you
see that was it
isn't
okay well this now works you can see
it well I don't actually know if it
it well I don't actually know if it
crashes hold
crashes hold
on well I control seed
on well I control seed
there we'll see about that but for now
there we'll see about that but for now
this is this is good progress um some
this is this is good progress um some
stuff on data type checks some safety
stuff on data type checks some safety
things but we've gotten
things but we've gotten
today of these M's
here we've got this into the new uh
here we've got this into the new uh
simplified streamline API these four
simplified streamline API these four
into the API this one doesn't have API
into the API this one doesn't have API
binds yet so we'll just do it in the new
binds yet so we'll just do it in the new
style when we do and then this one will
style when we do and then this one will
be uh a new you know a new thing to
be uh a new you know a new thing to
do um yeah
so we'll see if we can get this
so we'll see if we can get this
merged tomorrow uh is Spencer back yet
merged tomorrow uh is Spencer back yet
let me see it's
let me see it's
530 he needs help with
530 he needs help with
stuff I don't see
him I'll probably drop into the
him I'll probably drop into the
uh I don't think I will I'll just like
okay
okay
cool
cool
uh all
uh all
right I I think that's it for now I'm
right I I think that's it for now I'm
going to go get some
going to go get some
exercise uh we made like freaking 1,500
exercise uh we made like freaking 1,500
plus lines worth of commits and changes
plus lines worth of commits and changes
and stuff today
and stuff today
um lot a lot of stuff tomorrow we finish
um lot a lot of stuff tomorrow we finish
this
this
up we
up we
hopefully new M start going into this
hopefully new M start going into this
format we'll see if we streamline
format we'll see if we streamline
anything additional on top of this but
anything additional on top of this but
yeah this is pretty
yeah this is pretty
nice um this is live in just like a bind
nice um this is live in just like a bind
temporary branch on
puffer and yeah stara
puffer and yeah stara
Star Puffer for sure helps me out a ton
Star Puffer for sure helps me out a ton
uh We've also got
uh We've also got
discord.gg puffer that's where we manage
discord.gg puffer that's where we manage
all the open source Dev for this so if
all the open source Dev for this so if
you're interested in building some
you're interested in building some
environments we have people that have
environments we have people that have
never done RL that are building really
never done RL that are building really
awesome things over there so feel free
awesome things over there so feel free
to come by other than that thanks for
to come by other than that thanks for
dropping by folks and see

Kind: captions
Language: en
think we're
live
live
hi made some good progress
hi made some good progress
yesterday quite good
yesterday quite good
progress I would have liked to have run
progress I would have liked to have run
a hyper pram sweep overnight to see we
a hyper pram sweep overnight to see we
just to test a little bit more
just to test a little bit more
thoroughly but uh I
thoroughly but uh I
think well the hardware is down
think well the hardware is down
essentially uh because of hurricane we
essentially uh because of hurricane we
have a Hardware being stored but in the
have a Hardware being stored but in the
meantime I think what we're going to do
meantime I think what we're going to do
is we're going to take all the stuff I
is we're going to take all the stuff I
built
built
today and uh we're going to apply it
today and uh we're going to apply it
start applying it to all the different
start applying it to all the different
environments that we have here in order
environments that we have here in order
to clean some stuff up
to clean some stuff up
nicely let's start on that
so there are a couple things I think
so there are a couple things I think
before I properly get
started we've got this
started we've got this
log
log
structure that use for
pong it
works yeah I think this is fine
actually I'm just trying to think if I
actually I'm just trying to think if I
want to add this amount of extra code to
want to add this amount of extra code to
every
every
environment let me think about
environment let me think about
this
this
so the reason this is here is to handle
so the reason this is here is to handle
a easier logging
cide the alternative is more python side
cide the alternative is more python side
code I think I rather have it
code I think I rather have it
here I think this is nicer I think we're
here I think this is nicer I think we're
going to keep this structure for now and
going to keep this structure for now and
let's U we'll just do this exact same
let's U we'll just do this exact same
thing for some of the other
thing for some of the other
environments
oh think we'll start with
breakout actually that's a kind of a
breakout actually that's a kind of a
nice thing to do today is to just like
nice thing to do today is to just like
fix all of
fix all of
the different environments and that'll
the different environments and that'll
probably tell me anything that I need to
probably tell me anything that I need to
know that I've messed up
anyways
yeah let's see how bad this
is
is
yeesh way more code than is needed here
right
right
comparison need these single spaces and
comparison need these single spaces and
a few other small things and that's
a few other small things and that's
about
it agents
[Music]
welcome YouTube
welcome YouTube
folks I'm hopeful that we can get this
folks I'm hopeful that we can get this
merged today uh the
merged today uh the
one the one thing I'm not entirely sure
one the one thing I'm not entirely sure
about though
about though
is uh we have servers down because of
is uh we have servers down because of
fled
fled
hurricane so I would like to actually
hurricane so I would like to actually
run training before we properly
run training before we properly
merge uh so we'll see about that but I
merge uh so we'll see about that but I
think that we can at least get this
think that we can at least get this
ported onto all these different
ported onto all these different
environments today and this will make
environments today and this will make
really this is going to make RL so so
really this is going to make RL so so
much easier I mean you'll just see the
much easier I mean you'll just see the
amount of boiler plate we can get rid of
amount of boiler plate we can get rid of
so first of
so first of
all we get to delete that thing down
all we get to delete that thing down
there
there
buff this
buff this
needs buff
needs buff
none this is this weird injection
none this is this weird injection
function goes
away get rid of this as
well
terminals yeah this all goes away
and then this actions
thing
thing
C
step uh do we want these to handle their
step uh do we want these to handle their
own
own
reset the
reset the
question we'll have to look at that in a
question we'll have to look at that in a
bit but I think for now we just do it
bit but I think for now we just do it
like this then we have
like this then we have
info and then we'll do
info and then we'll do
log yeah so this is what we did for uh
log yeah so this is what we did for uh
pong as well maybe we'll come up with
pong as well maybe we'll come up with
some more standard
thing don't need
thing don't need
this don't need this buffer thing
this don't need this buffer thing
thing everything gets much
thing everything gets much
easier and of course we have to do a
easier and of course we have to do a
little bit of stuff on the seaside for
little bit of stuff on the seaside for
this uh modeled off of what we did with
this uh modeled off of what we did with
pong but this will be quite easy we also
pong but this will be quite easy we also
can just do this render call like this
can just do this render call like this
and then s see them
and then s see them
close okay so let me see if I'm missing
anything board
anything board
interval oh this thing is redundant
interval oh this thing is redundant
and this thing is
and this thing is
redundant and I we may as well just put
redundant and I we may as well just put
this stuff up here
this stuff up here
right so here's our entire binding now
right so here's our entire binding now
for this breakout
for this breakout
environment it's really quite
environment it's really quite
short you can get rid of this Raab
short you can get rid of this Raab
import as well that's in
import as well that's in
C uh and now all we have to do is we
C uh and now all we have to do is we
have to make the corresponding
have to make the corresponding
adjustments to the scyon side and
cide but I imagine that's not going to
cide but I imagine that's not going to
be too bad so the first
thing uh the first thing we're going to
thing uh the first thing we're going to
have to do here is model this a bit more
have to do here is model this a bit more
off the way we did Pong we're going to
off the way we did Pong we're going to
do multiple environments internally so
do multiple environments internally so
this is actually going to
this is actually going to
be break out star M this is going to
be break out star M this is going to
become an array of these
and the model for this
and the model for this
is I mean we already solved this with
pong so this is going to be a c
pong so this is going to be a c
allocation a log buffer and a few other
allocation a log buffer and a few other
small things I'm going to grab this to
small things I'm going to grab this to
use as a
template um now there are a few
template um now there are a few
redundant is lines of code here like
redundant is lines of code here like
this intermediate variables just because
this intermediate variables just because
there's a weird thing in syon that I
there's a weird thing in syon that I
don't understand yet um essentially like
don't understand yet um essentially like
when you index it doesn't know the type
when you index it doesn't know the type
because it's a python object I think but
because it's a python object I think but
uh that's generally
uh that's generally
fine take num M's
fine take num M's
here so I think probably yeah no it's
here so I think probably yeah no it's
fine there and then this
becomes
becomes
breakout get this log buffer
breakout get this log buffer
like
this and then
here this is the call that we
need observations
i i.
i i.
data there we go
uh what happened with duns terminals I
uh what happened with duns terminals I
guess
guess
welcome why the choice to code this in
welcome why the choice to code this in
Python what about performance
Python what about performance
considerations um purec my friend pure
C this thing will run over a million
C this thing will run over a million
steps per second per core all of our
steps per second per core all of our
environments run over a million steps
environments run over a million steps
per second per CPU core these are the
per second per CPU core these are the
fastest environments in existence in
fastest environments in existence in
reinforcement
learning you can play most of these on
learning you can play most of these on
the web here and
the web here and
um so the loop over environments is in
um so the loop over environments is in
scon for
scon for
convenience so that you don't actually
convenience so that you don't actually
have to call back to python to run
have to call back to python to run
multiple of them on a single thread and
multiple of them on a single thread and
then The Binding on top of that is
then The Binding on top of that is
python so this stack is python wrapper
python so this stack is python wrapper
or python binding cython you know middle
or python binding cython you know middle
layer and then C Core
layer and then C Core
environments and that gives you ultimate
environments and that gives you ultimate
performance like nothing is going to be
performance like nothing is going to be
faster than that um there's basically no
faster than that um there's basically no
python running and it also gives you a
python running and it also gives you a
tremendous amount of flexibility because
tremendous amount of flexibility because
you can prototype in Python you can push
you can prototype in Python you can push
it to scyon and then optionally push it
it to scyon and then optionally push it
to C there's no performance difference
to C there's no performance difference
between um scyon and raw C that I've
between um scyon and raw C that I've
seen it's just that the Rossy is nice
seen it's just that the Rossy is nice
because you can compile it for web so we
because you can compile it for web so we
can put it online for our
demos and what you're looking at here is
demos and what you're looking at here is
this is not python this is
this is not python this is
syon just for the middle
syon just for the middle
layer we're
layer we're
talking
talking
microsc yeah so you're going to always
microsc yeah so you're going to always
be constrained by other stuff but like
be constrained by other stuff but like
puffer will get you well over a million
puffer will get you well over a million
steps per second train uh end to end
steps per second train uh end to end
with an optimized environment on a
with an optimized environment on a
single GPU like puffer is literally 100
single GPU like puffer is literally 100
to a thousand times faster than any of
to a thousand times faster than any of
the other stuff out there already we can
the other stuff out there already we can
go faster than that if I did a little
go faster than that if I did a little
more optimization but at that point the
more optimization but at that point the
networks are going to start to become
networks are going to start to become
larger anyways so for all intents and
larger anyways so for all intents and
purposes outside of a few Niche settings
purposes outside of a few Niche settings
that I haven't optimized yet like puffer
that I haven't optimized yet like puffer
Max
perf good time to mention that it's also
perf good time to mention that it's also
all the stuff I'm deving here you can
all the stuff I'm deving here you can
check out the code for on the GitHub uh
check out the code for on the GitHub uh
it's currently in the dev Branch the new
it's currently in the dev Branch the new
stuff and if you like what you see give
stuff and if you like what you see give
it a star help helps me out a ton back
it a star help helps me out a ton back
to
code okay so this is about what we
code okay so this is about what we
want cool stuff yeah of
course and uh the way I did this for
course and uh the way I did this for
pong you can see I'm basically going to
pong you can see I'm basically going to
copy these it's the same code eventually
copy these it's the same code eventually
I might come up with a way to share this
I might come up with a way to share this
it's a little tricky cuz it's
it's a little tricky cuz it's
scon but I think it's literally the same
scon but I think it's literally the same
code yeah like this portion is literally
code yeah like this portion is literally
the same
the same
code so we'll probably have to come up
code so we'll probably have to come up
with a way to um to share
this okay and now we need the log code
this okay and now we need the log code
yeah there's a lot of duplicated stuff
yeah there's a lot of duplicated stuff
so probably what I'm going to do is I'm
so probably what I'm going to do is I'm
going to do this for pong and breakout
going to do this for pong and breakout
and then I will uh after that I will see
and then I will uh after that I will see
if there's a way to share some
stuff I'm kind of torn with it because
stuff I'm kind of torn with it because
like at some point I we're going to need
like at some point I we're going to need
like a puffer li. C or something but
like a puffer li. C or something but
it's also really nice to have the stuff
it's also really nice to have the stuff
just be
Standalone but for now yeah we're
Standalone but for now yeah we're
literally just copying Big Blocks of
literally just copying Big Blocks of
code like this is is identical even the
code like this is is identical even the
C here right this log buffer object is
C here right this log buffer object is
literally
literally
identical which makes sense they're just
identical which makes sense they're just
both arcade games to be fair what I
both arcade games to be fair what I
could do is like this is not going to be
could do is like this is not going to be
true for all environments it's just
true for all environments it's just
really true for the arcade games
really true for the arcade games
so I could just put all the arcade games
so I could just put all the arcade games
together or
together or
something maybe that's what we'll
do but for now let's just add it like
this see break out we're going to
just move these
okay now we need the log deaths
right I did these right here
this builds
this builds
already
uh
uh
cool so here's our Breakout game we can
cool so here's our Breakout game we can
play it this is the PC
play it this is the PC
version so this is what'll be on the web
somebody told me that this was easy like
somebody told me that this was easy like
that it was too easy but it's definitely
that it was too easy but it's definitely
not easy the ball gets to be way too
fast also occasionally it'll do stuff
fast also occasionally it'll do stuff
like
this oh yeah look if you hit the wall
this oh yeah look if you hit the wall
the paddle gets freaking small doesn't
the paddle gets freaking small doesn't
it yeah this is not definitely not easy
okay
so think we are
ready try to compile the scyon
version logs
did I just forget to
instantiate yes this thing right
here self. m
this is
this is
M's of
I then
I then
free cannot
convert What's happen in here oh n this
convert What's happen in here oh n this
needs an s
terminals is going to be
terminals is going to be
done
done
this
I what does it not like
here size of Breakout
oh where do we have
pong breakout
star
star
cic oh I just don't have it included
there okay this now
there okay this now
compiles with just the numpy API
compiles with just the numpy API
warnings those are
fine let's see if we can get it
fine let's see if we can get it
training make Breakout
I think I forgot to add this
argument uh
actions observations
rewards I didn't pass these did
I yeah this needs to be
passed let me just make sure I'm doing
passed let me just make sure I'm doing
this right I think it's self Dot
like this
maybe size one
maybe size one
aray how do I do this
pong yeah so this you initialize all the
pong yeah so this you initialize all the
buffers here I hate this but this is the
buffers here I hate this but this is the
simplest way of doing
simplest way of doing
it
it
um OBS actions rewards
um OBS actions rewards
terminals only size one
arrays let's
arrays let's
see oh did
I on
I on
it's not in
it's not in
here wait frame
here wait frame
skip the parameter order is just stupid
right yeah it should be OBS actions
right yeah it should be OBS actions
rewards
DS then we'll do this will
terminals num
M's frame
skip okay perfect so now this is the
skip okay perfect so now this is the
actual signature that we want right
here let's adjust here
here let's adjust here
this is going to be
this is going to be
CMS I
CMS I
breakout self.
observations
dot
actions
rewards
rewards
terminals frame skip
he yes
he yes
right num
right num
M's I forgot num
[Music]
Ms
Ms
also this needs to go away
and then
and then
terminals
terminals
terminals
there want I mess up previous
declaration yeah right here this goes
away
away
okay almost
okay almost
there set 17 ARS given I still have this
there set 17 ARS given I still have this
function signature messed
up wait
up wait
CMS observations actions rewards
CMS observations actions rewards
terminals num M's frame skip with height
terminals num M's frame skip with height
paddle WID ah right here
wrong this at the end needs to go
away 80th times a charm maybe
no obviously this needs to be set
up and then eventually this should just
up and then eventually this should just
work uh very nice that that catches this
work uh very nice that that catches this
for us must return in inos is a
list this is empty list in the puffer
list this is empty list in the puffer
native
API hey there we
go so where are our our
go so where are our our
logs well we haven't added the actual
logs well we haven't added the actual
loging code in yet so this
trains but
reward length and
reward length and
score or return length and
score reset
round hold on wait reset
round hold on wait reset
round and then he has
round and then he has
reset okay so I need to modify this a
reset okay so I need to modify this a
little to do its own resets
score plus equal
score plus equal
score
set I guess we can just put this into
set I guess we can just put this into
reset
huh well not quite cuz we need to
track me track a few other things
do we have a tick anywhere no we don't
do we have a tick anywhere no we don't
keep track of
keep track of
tick not at
all here I did
um I added this log buffer and this log
into the breakout object
into the breakout object
here I did
here I did
this and
then in allocate I have
then in allocate I have
this oh this is is missing a
free do I have a free
free do I have a free
Command yes I
do hold on we just got to uh add this
do hold on we just got to uh add this
in real
quick okay so we have log buffer added
quick okay so we have log buffer added
here
here
and
now on
reset reset round
this is a hard reset
right yeah this is a hard
reset you reset the
reset you reset the
environment at the end
episode return yeah so some of these
episode return yeah so some of these
things we need to just add because it's
things we need to just add because it's
going to be M log. episode return goes
going to be M log. episode return goes
up
up
here uh and now this doesn't actually
here uh and now this doesn't actually
not even this one it's
n log
n log
dot score
Gore
right yeah you don't need this episode
right yeah you don't need this episode
return here
plus equals
plus equals
score okay this right
here oh I see in this case it's the
same num
balls I don't know this is contributor
balls I don't know this is contributor
code that I've like cleaned up of a
code that I've like cleaned up of a
bit that's
bit that's
funny I mean speaking of which
like H that would be funnier I
like H that would be funnier I
mean you want to know something
mean you want to know something
cool half of the environments written
cool half of the environments written
here um half of these environments are
here um half of these environments are
written by contributors with zero prior
written by contributors with zero prior
reinforcement learning experience and
reinforcement learning experience and
these are probably the most performant
these are probably the most performant
environments in existence in real
environments in existence in real
enforcement learning like literally like
enforcement learning like literally like
these two uh the like a guy wrote both
these two uh the like a guy wrote both
of these in the course of a weekend with
of these in the course of a weekend with
zero prior experience like these ones
zero prior experience like these ones
you know people uh newer people spent
you know people uh newer people spent
like you know a few days to a week
like you know a few days to a week
implementing these this TCG I
implementing these this TCG I
implemented this I implemented this one
implemented this I implemented this one
in like three four hour sessions m is a
in like three four hour sessions m is a
much longer project snake environment
much longer project snake environment
took a little bit and like you know you
took a little bit and like you know you
can play all these online they're ultra
can play all these online they're ultra
high perf so we're always looking for
high perf so we're always looking for
people who want to like help out with
people who want to like help out with
this stuff it's a really good way to get
this stuff it's a really good way to get
into this base as
[Music]
[Music]
well I've got um there's a guy working
well I've got um there's a guy working
on a go simulator right now go we've got
on a go simulator right now go we've got
a guy doing Enduro like the Atari Enduro
a guy doing Enduro like the Atari Enduro
environment and then there's a guy doing
environment and then there's a guy doing
like um a strip down MMO combat system
like um a strip down MMO combat system
it's like this tactical MMO combat
it's like this tactical MMO combat
system
system
lots and lots and lots of environments
lots and lots and lots of environments
coming to
puffer I've got a couple things in the
puffer I've got a couple things in the
works myself as well
so unfamiliar with game and environment
so unfamiliar with game and environment
Dev only work on network
Dev only work on network
applications firewalls bump on the line
applications firewalls bump on the line
what have you been working on well one
what have you been working on well one
of the M's I've been doing is not
of the M's I've been doing is not
announced yet but uh we did hold on I
announced yet but uh we did hold on I
posted on my Twitter the other day I
posted on my Twitter the other day I
started on this Robo code
started on this Robo code
environment where's my
stuff so I started on this like tank
stuff so I started on this like tank
Robo code battle environment that's
Robo code battle environment that's
going to be pretty cool I've got one
going to be pretty cool I've got one
more in the works that's Secret
more in the works that's Secret
um and then there's going to be an
um and then there's going to be an
effort to build out the uh the
effort to build out the uh the
Moa and the TCG more as well this is
Moa and the TCG more as well this is
going to become more like magic the
going to become more like magic the
Gathering style I'm going to build that
Gathering style I'm going to build that
out quite a bit we've got people already
out quite a bit we've got people already
lined up to work on this um and yeah I
lined up to work on this um and yeah I
got to finish there's one other big
got to finish there's one other big
environment that I'm working on that I'm
environment that I'm working on that I'm
going to announce soon but the goal is
going to announce soon but the goal is
to have a nice handful of these
to have a nice handful of these
environments for RL which will be very
environments for RL which will be very
nice to
have let's just
do this
the new call reset on the
environment
environment
log how many people work on these with
log how many people work on these with
you let's see I mean overall people
you let's see I mean overall people
doing stuff with puffer at the moment on
doing stuff with puffer at the moment on
the open source side uh they're all like
the open source side uh they're all like
contributors we've got that guy's doing
contributors we've got that guy's doing
Pokemon stuff BET's doing Enduro in
Pokemon stuff BET's doing Enduro in
Pokemon linky does Pokemon uh Spencer
Pokemon linky does Pokemon uh Spencer
does new environments currently doing
does new environments currently doing
go uh who
go uh who
else there a few others I'm
else there a few others I'm
forgetting who did oh yeah Nathan is
forgetting who did oh yeah Nathan is
doing uh the MMO style uh combat
doing uh the MMO style uh combat
en uh Noah occasionally does some stuff
en uh Noah occasionally does some stuff
he did the breakout
he did the breakout
environment it's a nice rotating batch
environment it's a nice rotating batch
of just people doing cool open source
of just people doing cool open source
stuff I do all the main infra for puffer
stuff I do all the main infra for puffer
and I do some of the
environments it's a nice size project at
environments it's a nice size project at
this
point I mean this
point I mean this
is this is the puffer repo since I
is this is the puffer repo since I
started working on it fulltime right
started working on it fulltime right
here
mhm it's pretty cool as well because in
mhm it's pretty cool as well because in
the 1.0 release puff was like 99% my
the 1.0 release puff was like 99% my
code um but in the the 1.1 release it's
code um but in the the 1.1 release it's
probably going to only be like 80% my
probably going to only be like 80% my
code it's going to be at least like 20%
code it's going to be at least like 20%
contributor code with people making
contributor code with people making
their own environments and then like
their own environments and then like
submitting
them of course I'm still like this is
them of course I'm still like this is
contributor code here I'm still like
contributor code here I'm still like
tweaking stuff and you know integrating
tweaking stuff and you know integrating
stuff and remixing things but the base
stuff and remixing things but the base
code of it right
what inspired you to progress this
what inspired you to progress this
project this is
project this is
fulltime um reinforcement learning needs
fulltime um reinforcement learning needs
to be fixed the whole field is cursed
to be fixed the whole field is cursed
everything is slow um everything's a
everything is slow um everything's a
pain to work with but the field has a
pain to work with but the field has a
tremendous amount of potential to just
tremendous amount of potential to just
Skyrocket AI as a whole um nobody's
Skyrocket AI as a whole um nobody's
doing
doing
it so nobody's going to do it if I don't
what happened
here oh this is the line that I'm
here oh this is the line that I'm
missing this has to go and
missing this has to go and
reset my
reset my
bad this goes
here
here
here solid
see if this does
[Music]
it I remember this
it I remember this
error do you work at any companies
error do you work at any companies
outside the time you scam puff AI is
outside the time you scam puff AI is
technically a company so I have my own
technically a company so I have my own
company with this stuff and we just
company with this stuff and we just
launched the past like a month ago or so
launched the past like a month ago or so
but uh we are
but uh we are
starting we're starting trials for
starting we're starting trials for
clients this week so puffer should be
clients this week so puffer should be
getting some Revenue quite soon
getting some Revenue quite soon
hopefully few buddies working on basic
hopefully few buddies working on basic
ML implementations anti-dos and
ML implementations anti-dos and
anti-intrusion can't say I know much
anti-intrusion can't say I know much
about the Technologies
about the Technologies
myself let me
myself let me
think this actually might be applicable
think this actually might be applicable
to that as
well it's worth
well it's worth
mentioning the main business side of
mentioning the main business side of
puffer all this code is free it's all
puffer all this code is free it's all
open source I sell um Extended support
open source I sell um Extended support
and services to companies that are
and services to companies that are
trying to do RL and having a hard time
trying to do RL and having a hard time
of
it so like the main main target for
it so like the main main target for
puffer is like company that has tried to
puffer is like company that has tried to
do has something where they think RL
do has something where they think RL
would be valuable they've had a really
would be valuable they've had a really
hard time doing it and they'd like some
hard time doing it and they'd like some
help on making it fast and
easy main thing I do that said
easy main thing I do that said
everything here is all it's all free
everything here is all it's all free
like all this stuff is free and open
like all this stuff is free and open
source I do free support for uh
source I do free support for uh
universities and academic
universities and academic
researchers and all the code is like
researchers and all the code is like
immediately available in Dev as I'm
immediately available in Dev as I'm
committing it so if you want to help the
committing it so if you want to help the
project out for
project out for
free give it a star and also you can
free give it a star and also you can
join
join
discord.gg puffer that's where we do all
discord.gg puffer that's where we do all
the open source collab stuff I've got a
the open source collab stuff I've got a
whole bunch of people in there that have
whole bunch of people in there that have
like wanted to get into the space came
like wanted to get into the space came
in with some basic you know engineering
in with some basic you know engineering
knowledge and uh are doing tons of great
knowledge and uh are doing tons of great
stuff in this space
stuff in this space
already you are to work on cyber
already you are to work on cyber
security I mean I'm definitely open to
security I mean I'm definitely open to
um you know to doing work for cyber
um you know to doing work for cyber
security companies through puffer like
security companies through puffer like
the clientele for puffer it's just
the clientele for puffer it's just
anybody who's trying to do or has a
anybody who's trying to do or has a
problem where RL would be helpful and
problem where RL would be helpful and
they're having a hard time of it right
yeah and to be fair probably once we get
yeah and to be fair probably once we get
these game M nice and underway like we
these game M nice and underway like we
use games as environments cuz they're
use games as environments cuz they're
fun they're easy to interpret and uh
fun they're easy to interpret and uh
people like to build them right um but
people like to build them right um but
the AI doesn't care if it's solving a
the AI doesn't care if it's solving a
game or solving like a network problem
game or solving like a network problem
or whatever so we're probably going to
or whatever so we're probably going to
make some more simulators that look
make some more simulators that look
closer to Industry problems in the
closer to Industry problems in the
future but uh I mean we can totally take
future but uh I mean we can totally take
on that stuff
on that stuff
now it's awesome currently in an MS with
now it's awesome currently in an MS with
AI concentration still not at the level
AI concentration still not at the level
to fully understand the code you write
to fully understand the code you write
most of the time well dude this is
most of the time well dude this is
highly specialized stuff there are like
highly specialized stuff there are like
a 100 people in the world at most that
a 100 people in the world at most that
understand this area like
understand this area like
this probably since I did undergrad
this probably since I did undergrad
cyber SEC and not software no it's it
cyber SEC and not software no it's it
has nothing to do with that it's
has nothing to do with that it's
literally like this is very like this is
literally like this is very like this is
very Cutting Edge RL stuff now to be
very Cutting Edge RL stuff now to be
fair you know if you just read through
fair you know if you just read through
the code base um it won't be that hard
the code base um it won't be that hard
to get a sense of what I'm trying to do
to get a sense of what I'm trying to do
with it because the way it's written is
with it because the way it's written is
very simple but like designing and
very simple but like designing and
building this stuff there's a reason
building this stuff there's a reason
this hasn't existed for the last 10
this hasn't existed for the last 10
years should learn see in any language
years should learn see in any language
from there become simple I honestly I
from there become simple I honestly I
spent 10 years writing python I've
spent 10 years writing python I've
literally just been doing the cide of
literally just been doing the cide of
things in the last 3 months cuz things
things in the last 3 months cuz things
needed to go fast and that sounded like
needed to go fast and that sounded like
a fun thing to do like everything is
a fun thing to do like everything is
very transferable if you're doing like
very transferable if you're doing like
core fundamental engineering and not
core fundamental engineering and not
like a framework
Dev it's pretty funny actually when I
Dev it's pretty funny actually when I
tell people like the amount of python
tell people like the amount of python
I've written I've written some actually
I've written I've written some actually
very high perf python like puffer's
very high perf python like puffer's
vectorization is is in Python but it's
vectorization is is in Python but it's
optimized down to like I don't know
optimized down to like I don't know
probably 10 microc seconds or something
probably 10 microc seconds or something
cuz we have all sorts of stuff that we
cuz we have all sorts of stuff that we
do uh with shared memory and IPC
do uh with shared memory and IPC
overhead
overhead
reduction great being at a level like
reduction great being at a level like
that well this has been my life since
that well this has been my life since
age 16 so I would hope I can do it uh
age 16 so I would hope I can do it uh
kind of my goal I've always been
kind of my goal I've always been
inspired by Deep Mind Alpha star similar
inspired by Deep Mind Alpha star similar
research same totally same
research same totally same
probably mess around with puffer once I
probably mess around with puffer once I
feel confident I there's never a time
feel confident I there's never a time
that's like too early to start working
that's like too early to start working
on stuff right like this is how you
on stuff right like this is how you
learn stuff you just you just say okay
learn stuff you just you just say okay
that looks cool and you play with
it like pretty much the only thing that
it like pretty much the only thing that
has distinguished people that have like
has distinguished people that have like
started with puffer and like actually
started with puffer and like actually
learned a bunch of stuff it's just the
learned a bunch of stuff it's just the
people that actually stuck around and
people that actually stuck around and
like put in a bit of effort it's not
like put in a bit of effort it's not
that hard to pick some stuff
that hard to pick some stuff
up wasn't familiar with software
up wasn't familiar with software
engineering programming guessing you're
engineering programming guessing you're
a much stronger
a much stronger
programmer working on the Forefront of
programmer working on the Forefront of
this
this
Tech uh I mean yeah you do need to know
Tech uh I mean yeah you do need to know
fundamentals of low-level Dev at some
fundamentals of low-level Dev at some
point but
point but
like literally the one C course I took
like literally the one C course I took
in undergrad plus 10 years of experience
in undergrad plus 10 years of experience
just writing good code not even writing
just writing good code not even writing
good code honestly like anything you've
good code honestly like anything you've
written more than a year ago you always
written more than a year ago you always
consider bad code
consider bad code
right um but yeah just 10 years of
right um but yeah just 10 years of
trying to write better and better code
trying to write better and better code
coupled with all the stuff in the last
coupled with all the stuff in the last
few months has really just made
few months has really just made
everything
work the one thing I will say about the
work the one thing I will say about the
way that I build stuff with puffer is
way that I build stuff with puffer is
I've got this like almost
I've got this like almost
neurotic emphasis on Simplicity like I
neurotic emphasis on Simplicity like I
hate hate hate when stuff is more
hate hate hate when stuff is more
complicated than it needs to be
do you think during your Academia time
do you think during your Academia time
you learned the most about the field or
you learned the most about the field or
when you were first
when you were first
exploring like when you were younger
exploring like when you were younger
just wondering since I know Ms might not
just wondering since I know Ms might not
help for research related roles since
help for research related roles since
PhD is minimum that's well research
PhD is minimum that's well research
Engineers often uh is Ms and like
Engineers often uh is Ms and like
honestly scientists super undervalue
honestly scientists super undervalue
engineering work like I have the PHD but
engineering work like I have the PHD but
I spend all my time doing engineering
I spend all my time doing engineering
because it's simply the more effective
because it's simply the more effective
thing to be doing these days um now the
thing to be doing these days um now the
nice thing with the PHD is I can tell
nice thing with the PHD is I can tell
scientists to [ __ ] off when they're
scientists to [ __ ] off when they're
undervaluing the engineering side and I
undervaluing the engineering side and I
can do so much more convincingly right
can do so much more convincingly right
but ultimately the engineering is the
but ultimately the engineering is the
very important thing my playbook is
very important thing my playbook is
probably 80% engineering 15% basic
probably 80% engineering 15% basic
scientific method stuff 5% at most
scientific method stuff 5% at most
math idiot admires complexity yeah yeah
math idiot admires complexity yeah yeah
literally that
and it's very funny because you end up
and it's very funny because you end up
looking very dumb in the process but
looking very dumb in the process but
you're not being dumb like I just assume
you're not being dumb like I just assume
everything is simple and can be dumb in
everything is simple and can be dumb in
and can be accomplished in the dumbest
and can be accomplished in the dumbest
way imaginable until proven
otherwise and I get suspicious whenever
otherwise and I get suspicious whenever
anything I'm doing makes me feel clever
anything I'm doing makes me feel clever
like if you feel clever you're probably
like if you feel clever you're probably
over complicating it you should be like
over complicating it you should be like
you should feel very very dumb but you
you should feel very very dumb but you
should be getting stuff like a lot of
should be getting stuff like a lot of
hard stuff done
fast that's generally where you want to
fast that's generally where you want to
be I'd
say uh I I know what this egg Bol is I'd
say uh I I know what this egg Bol is I'd
literally fixed this exact same bug
before this is
before this is
easy it's literally just me forgetting
easy it's literally just me forgetting
to add the log buffer right
got like
this
oops break out.
oops break out.
C allocate takes care of this so
oh wow we're doing well on YouTube today
oh wow we're doing well on YouTube today
welcome
everybody we're going to
everybody we're going to
have well this is the simpler
have well this is the simpler
environment one of the simpler
environment one of the simpler
environments but they're all going to
environments but they're all going to
basically have the same very basic code
basically have the same very basic code
binding associated with them and we're
binding associated with them and we're
going to have all these environments
going to have all these environments
running they already run fast but way
running they already run fast but way
simpler than before today
what did I miss no field log
buffer a
buffer oh that's weird oh I forgot to
buffer oh that's weird oh I forgot to
copy a thing
appreciate Insight research Engineers
appreciate Insight research Engineers
definitely goal got a while to go do you
definitely goal got a while to go do you
think using gen for
think using gen for
guidance through project you're
guidance through project you're
debugging it's
debugging it's
counterproductive uh I think over
counterproductive uh I think over
relying on it definitely is a huge huge
relying on it definitely is a huge huge
mistake like ignore all the cursor cells
mistake like ignore all the cursor cells
who are like oh yeah do everything with
who are like oh yeah do everything with
cursor let the AI do a lot of stuff for
cursor let the AI do a lot of stuff for
you
you
uh-uh you can use it for like looking up
uh-uh you can use it for like looking up
specific bugs trying to learn specific
specific bugs trying to learn specific
stuff keep in mind though like it's
stuff keep in mind though like it's
often wrong it's mainly just like Google
often wrong it's mainly just like Google
is so hard to use these days cuz there's
is so hard to use these days cuz there's
so much garbage on it that you can use
so much garbage on it that you can use
it as like Google replacement if you
it as like Google replacement if you
can't find it on stack Overflow
can't find it on stack Overflow
um and the one thing that I really like
um and the one thing that I really like
so I have two plugins I only have two
so I have two plugins I only have two
plugins with this editor one is SEI for
plugins with this editor one is SEI for
python highlighting because python
python highlighting because python
highlighting is hard the other is super
highlighting is hard the other is super
Maven do you see how though like do you
Maven do you see how though like do you
see how I get on line completions I'm
see how I get on line completions I'm
not using it to just autoc complete
not using it to just autoc complete
functions for me it's a typing buff not
functions for me it's a typing buff not
a thinking buff that's how I see
it not convert log
it not convert log
buffer what I do self do
logs try to use it like if I had a TA
logs try to use it like if I had a TA
with you yeah except the TA is going to
with you yeah except the TA is going to
be pretty stupid like
be pretty stupid like
it's really not that
it's really not that
smart most of the time it's really not
smart most of the time it's really not
that smart so you got to be a little
that smart so you got to be a little
careful there we
careful there we
go
boom it's not really learning anything
boom it's not really learning anything
let's see what hypers we got
uh fre
uh fre
out 512
out 512
environments most problems in code be
environments most problems in code be
can be solved simply if you understand
can be solved simply if you understand
the fully understand the environment
the fully understand the environment
being worked in reject updates from over
being worked in reject updates from over
complicate redundant over over
complicate redundant over over
complicated code that
complicated code that
[Music]
[Music]
overwrote
overwrote
CPU overwork CPU
CPU overwork CPU
FG yeah
FG yeah
um I mean this is why I say that I
um I mean this is why I say that I
specialize in like small to midscale
specialize in like small to midscale
projects basically as soon as there's
projects basically as soon as there's
just too much stuff and too much
just too much stuff and too much
complexity to load the whole thing into
complexity to load the whole thing into
your head and to fully understand what's
your head and to fully understand what's
going on stuff grinds to a Hal it's too
going on stuff grinds to a Hal it's too
slow to work and it's not fun I get
slow to work and it's not fun I get
bored so you know puffer is going to be
bored so you know puffer is going to be
small to mids small to midsize as a
small to mids small to midsize as a
project it'll expand with like more
project it'll expand with like more
simulators more Hooks and stuff but it's
simulators more Hooks and stuff but it's
always going to have a nice small core
always going to have a nice small core
and that's the way I like it and I can
and that's the way I like it and I can
get a lot done like that
get a lot done like that
right I can get a lot done like
that 16k
like my control flow dancing not
like my control flow dancing not
crashing and bouncing
crashing and bouncing
around h i don't mind um I don't mind
around h i don't mind um I don't mind
debugging crashes as long as they happen
debugging crashes as long as they happen
quickly
look at
that thoughts on Hinton and hopfield
that thoughts on Hinton and hopfield
winning a Noble in
winning a Noble in
physics I these are good contributions
physics I these are good contributions
but they ain't
physics I got nothing bad to say about
physics I got nothing bad to say about
them it's just not it's not physics so I
them it's just not it's not physics so I
don't know what the heck is going on
don't know what the heck is going on
there I think uh there's been some AI
there I think uh there's been some AI
Kool-Aid going around lately
and you know that there's some AI
and you know that there's some AI
Kool-Aid when I say it cuz I'm very much
Kool-Aid when I say it cuz I'm very much
all in on
AI that's some
crazy I don't know how that happened
crazy I don't know how that happened
that's like
I always said like yeah there's no
I always said like yeah there's no
chance I over I ever win a Noble Prize
chance I over I ever win a Noble Prize
right because like they don't give Noble
right because like they don't give Noble
prizes in this field well if you just
prizes in this field well if you just
consider something that's totally not
consider something that's totally not
physics to be physics then
maybe it's
funny okay I'm
funny okay I'm
obervations what's happening
here I don't know we have
observations uh the observations aren't
observations uh the observations aren't
very good
though something
though something
definitely
Jank what the
Jank what the
observations paddle X paddle
observations paddle X paddle
y they go from 174 to
215 I guess in four frames maybe it can
215 I guess in four frames maybe it can
do that
do that
that still seems
fast ball
fast ball
X ball
y
y
balls and paddle with
something good stuff hey
welcome we're going to get we're going
welcome we're going to get we're going
to we going to get the pong and breakout
to we going to get the pong and breakout
M's bound to the new infra right now I'm
M's bound to the new infra right now I'm
going to do a little bit of thinking
going to do a little bit of thinking
about if there's anything else I can
about if there's anything else I can
collapse and uh then it's going on all
collapse and uh then it's going on all
the rest of the environments as quickly
the rest of the environments as quickly
as possible here that's the goal for
as possible here that's the goal for
right
right
now this is going to cut out like
now this is going to cut out like
several hundred lines of additional
several hundred lines of additional
binding crap with the new infra which
binding crap with the new infra which
will be really nice
I think this is going to be finally the
I think this is going to be finally the
the thing that makes it not just easy
the thing that makes it not just easy
but absolutely trivial for people to
but absolutely trivial for people to
make ultra high per custom
make ultra high per custom
Sims for
Sims for
puffer I'm trying to figure out what's
puffer I'm trying to figure out what's
happened here like this brick states
thing brick
states is there like
a oh they do all start at zero so is
a oh they do all start at zero so is
this
this
correct the brick states do all start at
zero wait
zero wait
174 something's weird here
oh no it's just moving randomly
okay where does it get
rewards right here
oh wow YouTube that's uh I think that's
oh wow YouTube that's uh I think that's
a new alltime High on YouTube welcome
a new alltime High on YouTube welcome
everyone we're doing high performance
everyone we're doing high performance
reinforcement learning infrastructure
reinforcement learning infrastructure
Dev um this is going into the next
Dev um this is going into the next
version of puffer lib I think this is
version of puffer lib I think this is
going to be the thing that makes it
going to be the thing that makes it
actually easy to add your own Sims uh
actually easy to add your own Sims uh
quick couple
quick couple
things it's all free on GitHub here
things it's all free on GitHub here
start if you want to help me out helps
start if you want to help me out helps
me a ton but also we have uh the puffer
me a ton but also we have uh the puffer
Discord and this is where we do all the
Discord and this is where we do all the
open source
open source
Dev you should do a product placement I
Dev you should do a product placement I
do once in a
do once in a
while I talk about the stuff puffer
while I talk about the stuff puffer
does um welcome as
does um welcome as
well yeah so we have all sorts of open
well yeah so we have all sorts of open
source Dev in here like this is an M
source Dev in here like this is an M
somebody has been working on and posted
somebody has been working on and posted
today um no RL experience required
today um no RL experience required
surprisingly on the environment side
surprisingly on the environment side
it's a really good way to get into uh Ai
it's a really good way to get into uh Ai
and RL is by learning how to make these
and RL is by learning how to make these
M's and picking up stuff along the way
yeah it's
yeah it's
fun now the only product that puffer has
fun now the only product that puffer has
is um we run uh extended support like
is um we run uh extended support like
priority features and stuff for
priority features and stuff for
companies that are trying to do
companies that are trying to do
reinforcement learning and having a hard
reinforcement learning and having a hard
time of
time of
it we make that stuff
it we make that stuff
easier but all the stuff is free and
easier but all the stuff is free and
open source
open source
here I'm trying to figure out what's
here I'm trying to figure out what's
wrong here this is a very common debug
wrong here this is a very common debug
pattern in RL where um it's not training
pattern in RL where um it's not training
you don't understand why and usually
you don't understand why and usually
there's something wrong with the way
there's something wrong with the way
that you're Computing observations or
that you're Computing observations or
Rewards or something like
that let me just go take a quick look to
that let me just go take a quick look to
make sure I'm not being completely
dumb I might just not be passing rewards
dumb I might just not be passing rewards
correctly or something silly
it also might not be resetting correctly
it also might not be resetting correctly
come to think of it let me check that
come to think of it let me check that
real
real
quick cuz I did mess with
that yeah so right
that yeah so right
here I should be able to delete this and
here I should be able to delete this and
it should still work
okay so here
okay so here
is the Breakout game let's just see if I
is the Breakout game let's just see if I
lose all my lives does it reset
correctly it does reset and score is
correctly it does reset and score is
good yeah score goes
up does it
reset that looks good to
reset that looks good to
me so it's not
me so it's not
that uh it could be rewards still
though could still be
rewards let's just
do I'm
do I'm
curious if I just
curious if I just
um if numpy some self.
um if numpy some self.
rewards zero break point let's just make
rewards zero break point let's just make
sure that we're actually getting Rewards
hey boss appreciate time entertaining
hey boss appreciate time entertaining
got to go looking forward to checking in
got to go looking forward to checking in
thank you yeah drop by the Discord as
thank you yeah drop by the Discord as
well I mean this is where we do all the
well I mean this is where we do all the
open source organization lots of cool
open source organization lots of cool
stuff going
on it's a good time
okay so sum rewards is
19 yeah this looks totally correct to me
19 yeah this looks totally correct to me
as the
as the
thing so why isn't it learning anything
thing so why isn't it learning anything
at
all let's just make sure maybe it is
all let's just make sure maybe it is
learning and I'm just not seeing seeing
it episode length starts like
130 we go up to 0 five
I would think it should be learning
faster F Frack is
faster F Frack is
[Music]
low oh yeah it should definitely be
low oh yeah it should definitely be
learning something by now
what do I think the odds are that this
what do I think the odds are that this
is just hyper parameters and silly stuff
is just hyper parameters and silly stuff
versus an actual
bug I think it's pretty likely an actual
[Music]
[Music]
bug we'll leave this on the on the uh
bug we'll leave this on the on the uh
the right side while
the right side while
I I check over here if I see anything
observations rewards terminals
observations rewards terminals
truncations info
right actions equal to actions
yeah discreet of four
fire left right yeah that's
fine let me see if I messed up
here these all look good to me
oh is it going up
now I can't tell that could just be
noise what's this running just like the
noise what's this running just like the
default
policy and I thought that
policy and I thought that
um that Noah said that this was
um that Noah said that this was
trainable as well I am actually seeing
trainable as well I am actually seeing
it going up it looks
it going up it looks
like it should just be so much better by
like it should just be so much better by
now
though maybe it's the
observations always a data problem
right paddle X paddle y oh well hold
right paddle X paddle y oh well hold
on if this is not getting normalized
on if this is not getting normalized
these are crazy numbers to be putting
these are crazy numbers to be putting
into a neural net yeah these are insane
into a neural net yeah these are insane
numbers to be putting into a neural
numbers to be putting into a neural
map what do we have observations as the
map what do we have observations as the
float star yeah yeah this has got to be
float star yeah yeah this has got to be
it this is
it this is
craziness
um yeah
divide by n
divide by n
width by n
height VX VY
plus
64 so I think it only gets up to
64 so I think it only gets up to
four 4X or
something
256 I'm going to do divide by 512
initially and then paddle with
half paddle
with wait when you reset
with wait when you reset
it do the paddle width not
it do the paddle width not
reset I think this is a bug
reset I think this is a bug
I think this is a
bug okay let me let me try this first
bug okay let me let me try this first
but I think I found a
bug first we'll do this
rebuild this is the type of thing where
rebuild this is the type of thing where
it's like if you haven't done AI yeah
it's like if you haven't done AI yeah
you'll mess this up but no big
you'll mess this up but no big
deal I mean could be wrong this could
deal I mean could be wrong this could
not even be the
issue
interesting we'll let this run for a
interesting we'll let this run for a
second and in the meantime
I actually think that probably it's
I actually think that probably it's
still too difficult
um so here's what I want to test I think
um so here's what I want to test I think
it doesn't reset the paddle WID once it
shrinks I actually have to play well
shrinks I actually have to play well
enough in order to see that though
I don't know if it resets the ball speed
either I'm playing so badly
oh yeah there we go okay so 84 score no
balls nope it resets the paddle
correctly I don't actually see where it
correctly I don't actually see where it
did
did
that but it does reset the paddle
that but it does reset the paddle
correctly
let me
see step
render it's half paddle
width oh here it
width oh here it
is two * half paddle
with so still not
with so still not
um what's this model
um what's this model
running
running
148k that's was
plenty did I forget to
rebuild to go check observations again
potentially wait is it hold on reward
potentially wait is it hold on reward
plus equal oh well this reward function
plus equal oh well this reward function
is
is
insane oh no wait it's
insane oh no wait it's
not no this is
not no this is
fine plus equal
score yeah this should be
fine it's the problem with building Sims
fine it's the problem with building Sims
there so many places where you can have
there so many places where you can have
stuff be wrong
stuff be wrong
wrong do we actually call Computer
wrong do we actually call Computer
observations yeah we
do all right
do all right
so next up is going to
so next up is going to
be a little bit more aggressive model
be a little bit more aggressive model
data
checking you know it bothers me that
checking you know it bothers me that
um it bothers me that this is
zero even on the first time step there's
zero even on the first time step there's
something weird with that let's go
something weird with that let's go
figure that out
cuz like when we call reset
right let's just real
quick I think this fixes
it yeah there you go so now you can see
it yeah there you go so now you can see
that I have observations and I have
that I have observations and I have
correctly scaled
correctly scaled
data right
so now we should actually be we should
so now we should actually be we should
be fine now right look you can see that
be fine now right look you can see that
we have this is the paddle X and you can
we have this is the paddle X and you can
see now it's gone in different
see now it's gone in different
directions and
whatnot I'm going to hit continue
whatnot I'm going to hit continue
several times here
so I'm noticing that there are
no none of the bricks oh wait here's
no none of the bricks oh wait here's
one yeah some of the bricks here are
one yeah some of the bricks here are
have been
have been
hit
hit
okay so these observations seem fine now
yeah these seem
fine it's got to be like
it's got to be the
reward or
reward or
something I would
something I would
think I checked the rewards
though could technically just be
though could technically just be
hypers that'd be
hypers that'd be
funny I'm not seeing anything
funny I'm not seeing anything
wrong data looks good
breakout also does just take longer to
breakout also does just take longer to
learn anything than
learn anything than
pong especially with bad hypers
pong especially with bad hypers
right I mean you would really think
right I mean you would really think
though
that I mean you get a
that I mean you get a
point pretty early
on H
let's take a look at the
no idea of RL I believe in you
no idea of RL I believe in you
yeah and this should not be a hard
yeah and this should not be a hard
problem to
problem to
solve I mean this is just like a simpler
solve I mean this is just like a simpler
test environment that we have but I'm
test environment that we have but I'm
messing with all the infra so I probably
messing with all the infra so I probably
have introduced some some screwy
stuff this is going to be very cool
stuff this is going to be very cool
though because once this is done you're
though because once this is done you're
going to have um I mean
going to have um I mean
realistically you should have a version
realistically you should have a version
of pong and of breakout that you can
of pong and of breakout that you can
solve in literally just seconds with
solve in literally just seconds with
RL hi
welcome what do we think the odds are
welcome what do we think the odds are
that this is a bug versus just bad hyper
prams what are we thinking
is there anything obviously stupid
is there anything obviously stupid
here there's nothing like crazy
here there's nothing like crazy
obviously
stupid so your repo couldn't
stupid so your repo couldn't
understand what should be
understand what should be
uh like what's some stuff that you wish
uh like what's some stuff that you wish
would be explained better
if you're like brand new to RL and stuff
if you're like brand new to RL and stuff
um this is a branch of AI in which you
um this is a branch of AI in which you
learn by interacting with a
learn by interacting with a
simulator um so puffer lib is a bunch of
simulator um so puffer lib is a bunch of
tools for making it very very quick and
tools for making it very very quick and
easy to learn by the agent like playing
easy to learn by the agent like playing
games or interacting with a simulator or
games or interacting with a simulator or
whatnot if you want
whatnot if you want
a here
a here
we have some of our M's
we have some of our M's
online so here's a snake M I'm
online so here's a snake M I'm
controlling the yellow snake in the
controlling the yellow snake in the
middle of the screen here but I can also
middle of the screen here but I can also
just take my hands off and now the
just take my hands off and now the
trained agent is taken over each of
trained agent is taken over each of
these snakes is being controlled by a
these snakes is being controlled by a
small neural network and they have
small neural network and they have
learned to play this game entirely
learned to play this game entirely
through experimentation so they just
through experimentation so they just
play the game they start out completely
play the game they start out completely
random and then reinforcement learning
random and then reinforcement learning
allows them to learn how to play the
allows them to learn how to play the
game better over time um that is the key
game better over time um that is the key
tenant of RL it's very different from
tenant of RL it's very different from
the rest of AI that you're see that you
the rest of AI that you're see that you
see in the news and whatnot
see in the news and whatnot
today um we don't need huge amounts of
today um we don't need huge amounts of
computational uh resources we can train
computational uh resources we can train
this at very small scale and it's not
this at very small scale and it's not
just on snake you can solve a number of
just on snake you can solve a number of
useful problems with RL so what I do is
useful problems with RL so what I do is
I try to make this process faster easier
I try to make this process faster easier
and work on more interesting problems
and work on more interesting problems
that is the goal of puff
that is the goal of puff
ER can I use my custom project yep you
ER can I use my custom project yep you
can run this on all sorts of custom
can run this on all sorts of custom
simulators in fact that's one of the
simulators in fact that's one of the
things that puffer does best is make
things that puffer does best is make
that process fast and
that process fast and
easy so for instance like some of these
easy so for instance like some of these
these two these actually all four of
these two these actually all four of
these at the bottom were written by
these at the bottom were written by
contributors with no RL experience
contributors with no RL experience
before and for existing environments you
before and for existing environments you
can add bindings to puffer as well
that is what we
do this is not training here is
it most likely I have broken um
it most likely I have broken um
observations or Rewards or something
observations or Rewards or something
somehow what are your opinions on the
somehow what are your opinions on the
Minecraft RL
project uh well it depends which
project uh well it depends which
Minecraft Project you're talking about
Minecraft Project you're talking about
um YouTube RL product train the player
um YouTube RL product train the player
to beat a Pokemon
to beat a Pokemon
game uh puffer is currently sponsoring
game uh puffer is currently sponsoring
that project and we have some very good
that project and we have some very good
results that we're going to be very
results that we're going to be very
excited to talk about soon but uh I've
excited to talk about soon but uh I've
been I've been involved with in
been I've been involved with in
sponsoring the Pokemon RL project since
sponsoring the Pokemon RL project since
two weeks after that video was released
two weeks after that video was released
and it is done much much better than the
and it is done much much better than the
original using puffer
lib in fact we're just waiting for the
lib in fact we're just waiting for the
hurricane in Florida to pass because all
hurricane in Florida to pass because all
all of our servers have to be down for
all of our servers have to be down for
the duration of that and then we'll be
the duration of that and then we'll be
uh running our final experiments we'll
uh running our final experiments we'll
try your project in my repo thanks yeah
try your project in my repo thanks yeah
stop by if you have difficulty I mean
stop by if you have difficulty I mean
this is one of the reasons I stream is
this is one of the reasons I stream is
so uh it can make that
easier yikes
easier yikes
awesome yeah I've got my
awesome yeah I've got my
uh there's puffer in a lot of places at
uh there's puffer in a lot of places at
these this point because like we do
these this point because like we do
collabs with open source people we do
collabs with open source people we do
collabs with universities right we do
collabs with universities right we do
lots of
lots of
collabs so there's a lot of puffer all
collabs so there's a lot of puffer all
over start of the
over start of the
puffer you
know they're not a default
here just subscribe remind me to stick
here just subscribe remind me to stick
not slack yeah you do got to put in some
not slack yeah you do got to put in some
work I worked very very hard when I
work I worked very very hard when I
first got into AI nowadays I still work
first got into AI nowadays I still work
hard but um I don't burn myself out as
hard but um I don't burn myself out as
much you know
much you know
like I have work work balance and then I
like I have work work balance and then I
balance my work with not burning myself
balance my work with not burning myself
out from work you
out from work you
know I still do a lot of work but uh
know I still do a lot of work but uh
it's more manageable mostly
let see
let see
entropy really this entropy coefficient
entropy really this entropy coefficient
is not big enough or
is not big enough or
something what if I just like real
quick can't share
quick can't share
GitHub YouTube
band let me see if I can find
band let me see if I can find
you give me something to type in if you
you give me something to type in if you
just give me the
just give me the
uh you
know dropped out of physics BS three
know dropped out of physics BS three
years have an internal clock ticking
years have an internal clock ticking
that I'm late mad anxiety
that I'm late mad anxiety
I mean to be fair that's not always a
I mean to be fair that's not always a
bad thing sometimes that pushes you to
bad thing sometimes that pushes you to
get [ __ ] done
right I definitely have a spans with
right I definitely have a spans with
puffer where I just am like Yep this got
puffer where I just am like Yep this got
to be done got to work hard busier
which one of
these not sure which of these you're
these not sure which of these you're
trying to mess with here with RL
okay yeah this is definitely not just
okay yeah this is definitely not just
typers entropy should have done
typers entropy should have done
something to
something to
this so weird though
let me see if
let me see if
um reward is coming
through is there no BL
just trying to get a sense of
just trying to get a sense of
where there's definitely something
where there's definitely something
screwy with the environment
screwy with the environment
now okay so you can see reward is
now okay so you can see reward is
zero if I hit the
zero if I hit the
ball yeah no I'm getting
rewards you can see every time I hit the
rewards you can see every time I hit the
ball back I get a reward
right oh why did it go up to 18 like
right oh why did it go up to 18 like
that
seven that was
seven that was
weird uh that it did
that I think I have reward clipping
that I think I have reward clipping
though don't
I that that shouldn't be the
issue how fast will a breakout agent
issue how fast will a breakout agent
train to
Perfection I mean good question
Perfection I mean good question
I mean we should be able to get this
I mean we should be able to get this
done
done
in with the new version with this
in with the new version with this
version once I have it working
correctly should be less than a
minute provided we actually tune
minute provided we actually tune
everything correctly should be less than
everything correctly should be less than
a
minute to be fair I don't even know if
minute to be fair I don't even know if
this version of the game is solvable at
this version of the game is solvable at
the moment cuz like the ball moves too
the moment cuz like the ball moves too
fast like look this is slow but look how
fast like look this is slow but look how
much it speeds up after a bit I don't
much it speeds up after a bit I don't
even know if it's possible to hit it
even know if it's possible to hit it
back
back
consistently as it is now but the thing
consistently as it is now but the thing
is it should definitely be learning
is it should definitely be learning
something so we probably just have a bug
something so we probably just have a bug
in the data yeah you see how fast it is
in the data yeah you see how fast it is
already like it's pretty hard to even
already like it's pretty hard to even
react a minute
react a minute
yeah I mean this thing can
yeah I mean this thing can
play we're going to be training this
play we're going to be training this
thing at a million steps per second
thing at a million steps per second
that's a joke
that's a joke
right I mean we can probably do it
right I mean we can probably do it
faster than that let me
think we might be able to do it in 30
seconds
seconds
possibly I'm confident we can do it in a
possibly I'm confident we can do it in a
minute
minute
though if we tune
correctly to be fair I already did Pong
correctly to be fair I already did Pong
in in uh I did Pong in 90 seconds on the
in in uh I did Pong in 90 seconds on the
slow version of the game that's 100
slow version of the game that's 100
times slower than our
times slower than our
version 1 million steps per second
version 1 million steps per second
yes that is that's the standard for
yes that is that's the standard for
puffer Ms all the new puffer M are a
puffer Ms all the new puffer M are a
million they actually they run a million
million they actually they run a million
steps per second the environments
steps per second the environments
themselves run a million steps per
themselves run a million steps per
second per CPU core minimum and then we
second per CPU core minimum and then we
get training at a million steps per
get training at a million steps per
second we can probably do training at 2
second we can probably do training at 2
million steps per second if I to really
million steps per second if I to really
optimize but we can definitely get 1
optimize but we can definitely get 1
million per
second would you be able to implement
second would you be able to implement
this on an mm RPG like how Bots work
this on an mm RPG like how Bots work
would that be different if only somebody
would that be different if only somebody
did their entire PhD on uh on on that
did their entire PhD on uh on on that
you know if only that were the subject
you know if only that were the subject
of somebody's entire
PhD yeah yeah you can do uh MMOs plus
PhD yeah yeah you can do uh MMOs plus
rlr it's a really good match and I have
rlr it's a really good match and I have
some more stuff coming out soon but I
some more stuff coming out soon but I
have tons and tons of work you can go
have tons and tons of work you can go
read my 170 page thesis on that if you
read my 170 page thesis on that if you
would
like there's also uh on the YouTube
like there's also uh on the YouTube
there like the main video on this
there like the main video on this
channel is that hey
channel is that hey
Nathan wait is that the Nathan that I
Nathan wait is that the Nathan that I
know or is that a new Nathan welcome
know or is that a new Nathan welcome
either way
migrated to fast communication do you
migrated to fast communication do you
have any idea what's wrong with
have any idea what's wrong with
breakout we can't train it for some
reason s your
reason s your
PhD not your own source well yeah it's
PhD not your own source well yeah it's
all the same thing though it's all the
all the same thing though it's all the
same thing like you can do it on
same thing like you can do it on
external it's just slower and more
external it's just slower and more
expensive the reason that I did it my
expensive the reason that I did it my
own is because it's like it's cheaper
own is because it's like it's cheaper
and faster right you can do all the same
and faster right you can do all the same
stuff on real games any Sim that you
stuff on real games any Sim that you
want it's just a matter of the cost of
want it's just a matter of the cost of
running the thing that's literally the
running the thing that's literally the
only
difference it's not working yeah it's
difference it's not working yeah it's
kind of
kind of
weird let's try imitation learning n we
weird let's try imitation learning n we
should it's there's got to be some bug
should it's there's got to be some bug
this should be a very very easy task
I mean I'm seeing the I'm seeing the
I mean I'm seeing the I'm seeing the
rewards
I think what it would
I think what it would
be oh you know what I should do I should
be oh you know what I should do I should
have done this
[Music]
before
before
native eval eval on model
native eval eval on model
path
path
parament my
breakout good so here
is this model is just not trained to do
is this model is just not trained to do
anything
you can see it actually it got a little
you can see it actually it got a little
bit of reward the one time it hit it
bit of reward the one time it hit it
back and what
back and what
happens it
resets I didn't see if it scored a point
oh yeah there it goes it scores a
point uh mean sometimes you have the
point uh mean sometimes you have the
reward flipped but very rarely does that
reward flipped but very rarely does that
the
bug no learning rate
bug no learning rate
messing no messing with learning rate in
here I do
here I do
this there's some weird
this there's some weird
bug I don't think so
it's very weird for it to just be stuck
it's very weird for it to just be stuck
like
that it could be the
that it could be the
entropy I would doubt it
be too much
be too much
entropy
possible let's
see is it
resetting no it has no way of doing that
resetting no it has no way of doing that
it's resetting whenever the game is like
it's resetting whenever the game is like
score uh whenever it runs out of
balls it's not just entropy
either I'm going to be so mad if this
either I'm going to be so mad if this
just ends up being hyper parameters but
just ends up being hyper parameters but
I really don't think it is it's weird
I really don't think it is it's weird
cuz like all the normal things that I
cuz like all the normal things that I
check look good
and 16 million this doesn't make a
difference I'm almost wondering hold on
difference I'm almost wondering hold on
did I like do some dumb
did I like do some dumb
thing I might have like just changed
thing I might have like just changed
something and forgotten to change it
something and forgotten to change it
back
cart
Pole now this is
training I was wondering if I'd like
training I was wondering if I'd like
zeroed the learning rate in the main
zeroed the learning rate in the main
file or something but no cuz this will
file or something but no cuz this will
train just fine
what else could this
be oh wait this could be the done
be oh wait this could be the done
signals being weird
right that's the one other I can think
of let put
this is native C without scon supported
this is native C without scon supported
yet uh yeah so these are are hold on let
yet uh yeah so these are are hold on let
me get this running and I'll
explain
explain
so this game is written in
so this game is written in
C right in fact all of the the new
C right in fact all of the the new
simulators are written in C they don't
simulators are written in C they don't
have to be written in scon or whatever
have to be written in scon or whatever
um you're going to need a binding layer
um you're going to need a binding layer
of some sort for any python Library
of some sort for any python Library
whatsoever which is all of AI so you can
whatsoever which is all of AI so you can
have it's doesn't have to be scon we use
have it's doesn't have to be scon we use
scon because it has some convenient
scon because it has some convenient
things um you can use C types for C++
things um you can use C types for C++
you can use Pi bind doesn't matter you
you can use Pi bind doesn't matter you
can use any of those as long as you have
can use any of those as long as you have
a python binding you're good uh we find
a python binding you're good uh we find
that scon makes it convenient to do some
that scon makes it convenient to do some
additional
additional
optimizations but it is not
required this was the bug hey Nathan
required this was the bug hey Nathan
this was uh this was the bug apparently
this was uh this was the bug apparently
look at
that it's still not doing well or
that it's still not doing well or
anything but it's not just horribly
anything but it's not just horribly
crashed
now so something's wrong with the
now so something's wrong with the
terminals
right let's figure out what it is
reset
reset
round let me see reset
round and then you have reset like this
round and then you have reset like this
right
are you usually able to train with small
are you usually able to train with small
Horizons 16 steps per roll out yeah cuz
Horizons 16 steps per roll out yeah cuz
the game is really basic it's probably
the game is really basic it's probably
not optimal but we should be able
to let me see if this uh real quick let
to let me see if this uh real quick let
me see if this
me see if this
actually still works
let's see
yeah okay there this there
goes 6.5
try this
instead just so we get at least
instead just so we get at least
something that looks like it's training
something that looks like it's training
somewhat stably
somewhat stably
of course we'll just do a hyper Prem
of course we'll just do a hyper Prem
sweep at some point I just want to make
sweep at some point I just want to make
sure that it's like
reasonable value loss
just watching the losses here on the
just watching the losses here on the
right
side value loss is quite
high that did make a difference it's no
high that did make a difference it's no
longer crashing as badly
it shouldn't be stuck though definitely
it shouldn't be stuck though definitely
should not be
stuck not at six at least
next thing is going to be to
do and have to change the score function
do and have to change the score function
a little bit I think that's my next
a little bit I think that's my next
guess
oh also our um rgae implementation is
oh also our um rgae implementation is
very bad I should reference it's very
very bad I should reference it's very
fast but it makes a bunch of dumb
approximations it shouldn't matter for
approximations it shouldn't matter for
something like this it really shouldn't
something like this it really shouldn't
[Music]
uh see we'll
score let's do do this
score let's do do this
instead plus one and then plus
score and do we need this log score
score and do we need this log score
thing like this I don't think this is
needed
needed
score do not need this
let let's try this this is a 01 reward
let let's try this this is a 01 reward
oh look you can see it actually it's
oh look you can see it actually it's
it's taking off now
it's taking off now
anyways
right yeah there you go so a lot of
right yeah there you go so a lot of
these environments they just like they
these environments they just like they
need to get like this velocity behind
need to get like this velocity behind
training and then they start uh they
training and then they start uh they
start taking off
start taking off
it's probably just
it's probably just
hypers let's try uh this one difference
hypers let's try uh this one difference
this one change with the
this one change with the
reward but uh you can see there it's
reward but uh you can see there it's
already doing something
already doing something
right so I'm happy with
that yeah we can just we can make it
that yeah we can just we can make it
play this as well just so we'll watch
play this as well just so we'll watch
this is not going to be a particularly
this is not going to be a particularly
impressive
policy but we'll just watch so you can
policy but we'll just watch so you can
see that it does
something all right
something all right
T
T
[Music]
experiment
43 oh
63 try this
so now we get to watch
so now we get to watch
it oh I think it's not going to move is
it oh I think it's not going to move is
that what's going to happen yeah it's
that what's going to happen yeah it's
not going to
not going to
move it just knows how to go to the side
move it just knows how to go to the side
oh it kind of
oh it kind of
does yeah that's just hyper prams oh
does yeah that's just hyper prams oh
okay okay yeah it does
stuff that's not
stuff that's not
bad 29 score on that that
bad 29 score on that that
game it took me a few games of playing
game it took me a few games of playing
to get more than 29
score it like just like Zips in at the
score it like just like Zips in at the
last second on lot of the time okay so
last second on lot of the time okay so
that's something we'll run it um one
that's something we'll run it um one
more
more
time just because I made those reward
changes and then these will just be
changes and then these will just be
essentially we'll be able to just solve
essentially we'll be able to just solve
these with hyper pram
these with hyper pram
sweeps uh wrong one I wanted to run
sweeps uh wrong one I wanted to run
train
train
yeah very
nice mhm
now the return is more
reasonable we'll see whether the
reasonable we'll see whether the
training is any
better it should be very similar come to
better it should be very similar come to
think of
think of
it though it does avoid the thing that I
it though it does avoid the thing that I
just added
just added
avoids uh crazy rewards by
avoids uh crazy rewards by
and actually the value loss potentially
and actually the value loss potentially
looks
better yeah the value loss is way
better so that's should
train so now we have two environments
train so now we have two environments
bound to puffer two of these new
bound to puffer two of these new
environments bound to puffer with very
environments bound to puffer with very
simple infra um
simple infra um
I'm going to use the restroom real quick
I'm going to use the restroom real quick
while this finishes training and then
while this finishes training and then
we're going to think about a couple
we're going to think about a couple
things we may or may not be able to
things we may or may not be able to
simplify and then we'll just start
simplify and then we'll just start
adding the rest of the environments and
adding the rest of the environments and
getting initial policies I'll be right
getting initial policies I'll be right
[Music]
back
e
e e
there we
go that's
trained obviously it's training very
trained obviously it's training very
slowly but with terrible hyper
slowly but with terrible hyper
parameters so to be expected
you can see though it starts learning
you can see though it starts learning
much more quickly at a
point like look at that
happy I found out about puffer Li just
happy I found out about puffer Li just
now definitely use it during projects
now definitely use it during projects
keep up the great work thank
keep up the great work thank
you it's about to get much better as
you it's about to get much better as
well for custom M we're making the
well for custom M we're making the
process of um like bindings for high
process of um like bindings for high
perf M substantially
perf M substantially
simpler that's what's going on
simpler that's what's going on
here this test seems to have worked
here this test seems to have worked
not going to be an amazing policy but we
not going to be an amazing policy but we
may as well watch
it
it
oops uh I just we uh we found a way to
oops uh I just we uh we found a way to
strip a bunch of boiler plate out
strip a bunch of boiler plate out
Nathan like I made uh a native puffer V
Nathan like I made uh a native puffer V
format a native puffer M format for the
format a native puffer M format for the
base of um custom M's that doesn't
base of um custom M's that doesn't
require serial wrappers around it uh I
require serial wrappers around it uh I
pushed like Loops over multiple ends
pushed like Loops over multiple ends
into scyon layer I came up with a nice
into scyon layer I came up with a nice
logging thing lots of stuff
here we
here we
go here is
go here is
our obviously not amazing but you know a
our obviously not amazing but you know a
reasonable breakout
model it's not
model it's not
bad for like a not tuned at all hyper
bad for like a not tuned at all hyper
prems basic thing
misses by a little bit every so often
misses by a little bit every so often
though just like
narrowly I'm not worried the hyper pram
narrowly I'm not worried the hyper pram
sweep will just solve
sweep will just solve
it the main thing is that we know that
it the main thing is that we know that
uh it actually trains so that the
uh it actually trains so that the
binding is
correct I'm going to have to take a
correct I'm going to have to take a
little bit of a time here to think about
little bit of a time here to think about
some of these repeated
components the scon bindings for a lot
components the scon bindings for a lot
of stuff are looking very
of stuff are looking very
similar is the thing
might not be a bad thing
honestly little bit of rep repeated code
honestly little bit of rep repeated code
for arcade games in order to have it all
for arcade games in order to have it all
be
Standalone here
take uh take a look at this
take uh take a look at this
Nathan here's your whole breakout
Nathan here's your whole breakout
binding Now isn't this nice and
binding Now isn't this nice and
simple that's all you need for breakout
simple that's all you need for breakout
for the the python side
I want to watch this again this time
I want to watch this again this time
you've been
doing cool
trying think what would be diffic what's
trying think what would be diffic what's
going to be difficult for you
here action space is going to be a bit
tricky not that hard but the targeting
tricky not that hard but the targeting
space is big
potentially the targeting space is big
it's going to be it should be relative
it's going to be it should be relative
but it's going to be hard even if it is
relative if your spell has like 10
relative if your spell has like 10
range for
instance I really like the um the nice
instance I really like the um the nice
isometric draw though I've been wanting
isometric draw though I've been wanting
to do that with some puff Rems for a
to do that with some puff Rems for a
while this looks really
while this looks really
nice so good job
there got to add the original iops wrath
there got to add the original iops wrath
to this thing which
to this thing which
do you remember the original iops
wrath oh did you not play uh super super
wrath oh did you not play uh super super
early the
early the
original iops wrath spell the way that
original iops wrath spell the way that
it
worked the level 100 IOP
spell
spell
yeah do you remember like I don't know
yeah do you remember like I don't know
do you know the way that it used to work
originally it wasn't a charge up like is
now it was a 20 turn cool down with a
now it was a 20 turn cool down with a
one out of two crit failure rate that
one out of two crit failure rate that
would basically one shot anything in the
would basically one shot anything in the
game if you hit
[Music]
[Music]
it yeah
yeah that's a really Niche very very
yeah that's a really Niche very very
Niche trivia very few people know
that all right I'm trying to think what
that all right I'm trying to think what
we want to do with this now so we have
we want to do with this now so we have
these two
these two
M's should I just go start going through
M's should I just go start going through
and um doing this for the rest of them
and um doing this for the rest of them
like
shouldn't be that
shouldn't be that
hard did you already do pong
yeah here's the uh here's your pong game
yeah here's the uh here's your pong game
isn't this
clean I mean it looks the same is
breakout yeah so this is what I mean by
breakout yeah so this is what I mean by
much easier bindings
like pix get smaller no I don't think so
like pix get smaller no I don't think so
but it's it got like
here this stuff at the top is just you
here this stuff at the top is just you
can literally autogen this stuff at the
can literally autogen this stuff at the
top and
then you make the M's in a loop like
this and the resets are here yeah
this and the resets are here yeah
logging is different the way I do
logging is different the way I do
logging now I don't know if I like this
logging now I don't know if I like this
completely but it's pretty nice you have
completely but it's pretty nice you have
this log buffer thing in C and this lets
this log buffer thing in C and this lets
you do a dynamic length logging without
you do a dynamic length logging without
having to mess with the python it's like
having to mess with the python it's like
one screen of code for nice
logging let me think what I want to do
logging let me think what I want to do
from here we have all these different
from here we have all these different
M's to to
bind I think I should just do all the
bind I think I should just do all the
M's
right this one doesn't even have python
right this one doesn't even have python
binds yet so I don't have to worry about
binds yet so I don't have to worry about
this I can probably do these two pretty
this I can probably do these two pretty
quick snake won't be hard and then I
quick snake won't be hard and then I
just have the MOBA to deal with which is
just have the MOBA to deal with which is
obviously a bit heavier but
obviously a bit heavier but
like
no I think that'll work
let's do Connect Four first
maybe
maybe
holy lots of
stuff does this currently
stuff does this currently
train let's see if it currently trains
train let's see if it currently trains
so we have an expectation
ah okay so we got to Port before we can
ah okay so we got to Port before we can
even tell
after
only fair that I do the port considering
only fair that I do the port considering
I uh I did the whole API stuff I suppose
I uh I did the whole API stuff I suppose
right
doation
doation
actions rewards
terminals this is good
TI is
zero I think we even need to know the
zero I think we even need to know the
tick do we oh yeah we
do
do
step need
this
this
rewards then we'll just do
if
length
log cool and then we
log cool and then we
return reservations rewards could link
return reservations rewards could link
this segment to uh Spencer as well so we
this segment to uh Spencer as well so we
can see how
can see how
nicely things get cleaned up with the
nicely things get cleaned up with the
new API
stuff CU a lot of this is just going to
stuff CU a lot of this is just going to
be simpler you
know and these like places piece these
know and these like places piece these
things don't need to have self on
them and these don't need we don't need
them and these don't need we don't need
these anymore because these are now in a
these anymore because these are now in a
knit this is just no
knit this is just no
mobs 42
oops and seven
don't need emulated or done anymore
don't need emulated or done anymore
don't need buffer
don't need buffer
anymore don't need actions anymore don't
anymore don't need actions anymore don't
need terminals reward
need terminals reward
some render mode you need don't need num
some render mode you need don't need num
M's you need numb agents
that looks
nice much code to be written today
num M we need to add num
Ms with height
over this game over thing is weird the
over this game over thing is weird the
way this is getting
way this is getting
past I
think yeah these are not needed I don't
think yeah these are not needed I don't
know why these are passed like
this in fact a lot of these other things
this in fact a lot of these other things
probably don't need to be passed either
probably don't need to be passed either
but we'll leave them for
now right like why would you need to
now right like why would you need to
pass this stuff
yeah so we'll fix this stuff
yeah so we'll fix this stuff
here uh this is just going to be Connect
here uh this is just going to be Connect
Four with all this Shenanigans in it
so we'll just do
so we'll just do
self
self
well we need in
well we need in
[Music]
[Music]
numm Num Ms
numm Num Ms
or
see
see
I
uh I oh do this in
pong we can move pretty quick here but
pong we can move pretty quick here but
there's uh there is some stuff that
there's uh there is some stuff that
needs to be added here okay so it's like
this num M's
client this is
M's it's going to be C Connect 4
M's it's going to be C Connect 4
allocate buffer
there actions rewards
there actions rewards
terminals I and then we do we iterate
terminals I and then we do we iterate
like this and then this is going to be C
like this and then this is going to be C
Connect
Connect
Four observations
Four observations
DS I think this is called duns
right yeah DS and then now we
right yeah DS and then now we
need piece width piece height with and
need piece width piece height with and
height I
height I
believe this
withth uh this should not be needed this
withth uh this should not be needed this
longest you should not be needed logs
longest you should not be needed logs
goes
goes
here yeah this is
good
right and then there's an init
yeah this is so much simpler it's not
yeah this is so much simpler it's not
even funny it's like I almost feel bad
even funny it's like I almost feel bad
for making people write so much boiler
for making people write so much boiler
plate and this is less than there was
plate and this is less than there was
before as
well yeah and it we don't need any of
well yeah and it we don't need any of
this what you allocate memory
this what you allocate memory
board X board
y then the allocator as
well I don't think we need this think we
well I don't think we need this think we
can just do
and
and
then you call a knit on top of this
then you call a knit on top of this
yes you
do then this is
do then this is
void yeah look at all this boiler plate
void yeah look at all this boiler plate
we're just shredding
we're just shredding
here see how nice that
is we got to go grab the uh the pong
logic kind of annoying to have to copy
logic kind of annoying to have to copy
paste these Loops but
paste these Loops but
um we'll figure that out
um we'll figure that out
eventually boiler plate amount only goes
eventually boiler plate amount only goes
down never goes
up close
okay okay now we got to go
okay okay now we got to go
grab we got to do log structures I
believe yeah I got to do log structures
which is what just win lose I
guess
guess
length return score
just need log buffer like
this assign
logs we need to add these to the uh the
logs we need to add these to the uh the
client oh we already have it okay
grab this log stuff
grab this log stuff
from the header file
here we're not going to need score as a
here we're not going to need score as a
field Cu uh there's
field Cu uh there's
no score is just episode return for this
no score is just episode return for this
I guess we could standardize like this
I guess we could standardize like this
length return score would be
fine it's kind of nice to be
fair but now we can definitely see that
fair but now we can definitely see that
we're copying this piece of code uh
we're copying this piece of code uh
repeatedly
right we're not going to be too bummed
right we're not going to be too bummed
about for now
oops game
okay we got our
log log
log log
buffer and then we got
log and then on reset
we clear our
log and
then we got to do
step add one to episode
length then here we
length then here we
do we got to add the log and
uh episode what it score and episode
uh episode what it score and episode
return have to be set to something
here check win
here check win
condition wait hold
condition wait hold
on does he not have rewards
here check wind condition
check wind
check wind
condition this doesn't reset though
I guess we leave it like this for
now that's
now that's
fine we'll just do
player one for player
player one for player
win negative one for opponent
win
okay that
okay that
log so we'll just do like
log so we'll just do like
this does reset have compute
this does reset have compute
observations on
observations on
it no it does not that is
a yeah that's an
a yeah that's an
error all
right let's see if this is uh fixed up
too many
that's way
that's way
nicer do
allocate Connect
allocate Connect
Four
Four
so this is going to
be
be
um this how I do
um this how I do
this I have to make sure stuff is zero
this I have to make sure stuff is zero
don't
I longest connected is
four
four
zero p with
six I
six I
honestly yeah this is an error on the
honestly yeah this is an error on the
way that this is
done well not really we'll leave it like
this iteratively improving
[Music]
invalid oh this is
invalid oh this is
um
interesting I think this doesn't need to
interesting I think this doesn't need to
be done at
all reset
M this needs to be
pointer and then
free how far does that get us
and I missed one
okay something got screwed up here
okay something got screwed up here
clearly
add
log I know what this
is we need to add
is we need to add
um to allocation right
we
go oh I just typoed this
and we
win let's do the setup version
this needs to
be like
this make client
not
convert this AET function
is actually going to be different it's
is actually going to be different it's
an XC Connect 4
one C Connect 4 no field log
one C Connect 4 no field log
buffer we know what that
buffer we know what that
is I mean you can kind of see that we
is I mean you can kind of see that we
can go pretty quickly
can go pretty quickly
here
here
um with these
um with these
M's it's really just a matter of
M's it's really just a matter of
uh getting rid of the last like bits of
uh getting rid of the last like bits of
boiler
boiler
plate tradeoffs to be
made oh and then this thing oh these
made oh and then this thing oh these
actually get
simple see
not
not
assign and sign charar
and there we
and there we
go this now
go this now
compiles
compiles
so oh this actually has to be back
native no attribute
buff s
buff s
dot buff
let's return yep we forgot API
compat get log
okay just
log there we go
and we uh we've just learn to win
immediately which
immediately which
[Music]
[Music]
is precisely what should happen right
hi what would you recommend for starting
hi what would you recommend for starting
the
the
implementation multi-agent RL en with
implementation multi-agent RL en with
autonomous
autonomous
drones similar to neuro but
drones similar to neuro but
simpler where each drone has multiple
simpler where each drone has multiple
tasks what would you
tasks what would you
recommend I mean I would
recommend I mean I would
recommend um hopping into the puffer
recommend um hopping into the puffer
Discord or discord.gg puffer and kind of
Discord or discord.gg puffer and kind of
just building it as a custom a custom M
just building it as a custom a custom M
and integrating with puffer lib like the
and integrating with puffer lib like the
way we've been doing with all these
way we've been doing with all these
other ones uh that's going to be the
other ones uh that's going to be the
easiest way to get a very high
easiest way to get a very high
performance environment for something
performance environment for something
like that doesn't have to be in C if you
like that doesn't have to be in C if you
don't want it to be but you'll have the
don't want it to be but you'll have the
option basically to push it to whatever
option basically to push it to whatever
level of speed you
level of speed you
want based on the effort you want to put
want based on the effort you want to put
in
in
lots of people are doing this with
lots of people are doing this with
different ends
different ends
now really the way to
go pretty much if you do it any other
go pretty much if you do it any other
way you get um you're going to get
way you get um you're going to get
bottlenecked by tons of ridiculous RL
bottlenecked by tons of ridiculous RL
infra
problems Let's uh let's take a look at
problems Let's uh let's take a look at
this thing that we just trained for
okay so here is uh here it
okay so here is uh here it
is I mean you can see it's just I think
is I mean you can see it's just I think
it's probably exploiting the RNG or
it's probably exploiting the RNG or
something but it just learns to do this
something but it just learns to do this
and it
wins already in the Discord would keep
wins already in the Discord would keep
keep in touch yeah I mean this is the
keep in touch yeah I mean this is the
whole idea for stuff and um I don't know
whole idea for stuff and um I don't know
if this is for a company or for research
if this is for a company or for research
or for a project or something um but if
or for a project or something um but if
you want to do it in a way that's like
you want to do it in a way that's like
an open source puffer thing I will be
an open source puffer thing I will be
happy to help you out more and if it's a
happy to help you out more and if it's a
company thing then let me know about
company thing then let me know about
that too
we're kind of just always looking to add
we're kind of just always looking to add
stuff onto
stuff onto
this and uh some of them are you know
this and uh some of them are you know
this is fairly sophisticated
this is fairly sophisticated
right as an
right as an
environment research for PhD yeah
environment research for PhD yeah
perfect academic uh we run support for
perfect academic uh we run support for
academic collabs for
free so if you want to have uh if you
free so if you want to have uh if you
want to do online drone racing Sim that
want to do online drone racing Sim that
people can play around with and see in
people can play around with and see in
their browser like this and have that be
their browser like this and have that be
not all that difficult to do I can
not all that difficult to do I can
definitely help with
that I've kind of wanted to do more
that I've kind of wanted to do more
physics M for a while now I was thinking
physics M for a while now I was thinking
about like you know school of fish or
about like you know school of fish or
something but yeah like
something but yeah like
drones drone Racing type thing or drone
drones drone Racing type thing or drone
collab thing would be natural
fit I pretty much know exactly how to
fit I pretty much know exactly how to
set all that stuff up as
well kind of surprised that this just
well kind of surprised that this just
works immediately
works immediately
here well I guess this one's done we uh
here well I guess this one's done we uh
we have this one working
Spencer will be happy with
this reward score num num
games yeah we literally just have to do
games yeah we literally just have to do
the same thing with his
uh we literally just have to do the same
uh we literally just have to do the same
thing here with his
thing here with his
n is not
bad he literally asked me about
bad he literally asked me about
yesterday and he's going to have
yesterday and he's going to have
examples for both of his environments
examples for both of his environments
like less than 24
like less than 24
hours immediate
hours immediate
gratification we're big on instant
gratification we're big on instant
gratification here with uh puffer
support and I love when I just get to
support and I love when I just get to
solve people's stuff for them in like
solve people's stuff for them in like
you know an hour of just sitting down
you know an hour of just sitting down
and coding it for
okay
look how quickly all this code just
look how quickly all this code just
melts
melts
away with the uh the newer API thanks
away with the uh the newer API thanks
for come back to you perer see you
for come back to you perer see you
around thanks for dropping by
don't forget to feed the puffer a star
don't forget to feed the puffer a star
helps out a
lot really all I
lot really all I
ask for puffer for
free I swear these refactors are
free I swear these refactors are
actually making me type
faster uh where do I do tick maybe
faster uh where do I do tick maybe
here need this
beted it all already very
beted it all already very
good puffer gets larger when you feed it
stars puffer will grow to consume the
stars puffer will grow to consume the
entire
entire
field and remove all of the horrible
field and remove all of the horrible
infrastructure that PhD students have
infrastructure that PhD students have
been forced to live with and suffer
been forced to live with and suffer
through for the past decade that is the
through for the past decade that is the
goal I think we get
there all right so uh I forgot about all
there all right so uh I forgot about all
this pointer
Shenanigans most of this is not going to
Shenanigans most of this is not going to
be needed though
OBS actions rewards terminals num
OBS actions rewards terminals num
M's with yeah there we
go the amount of Interest nightmares I
go the amount of Interest nightmares I
had to suffer through in my PhD um
had to suffer through in my PhD um
making like Ms like this was nuts
making like Ms like this was nuts
so glad that this is going to be much
so glad that this is going to be much
much easier
this is what we
need max speed
okay we got OBS
okay we got OBS
actions what's the signature on
this OBS actions
this OBS actions
done yeah
RS log
RS log
buffer card width card height there's no
buffer card width card height there's no
frame
skip don't need
skip don't need
that we just
do
do
okay this has to be C triple Triad
grab
these
these
reset yes
clean that's looking
better grab these
what do we think
here I think it's we're probably going
here I think it's we're probably going
to want to have like a util thing cuz we
to want to have like a util thing cuz we
keep using this over and over but for
keep using this over and over but for
now I'm keeping the single file
now I'm keeping the single file
structure so it's just going to be
structure so it's just going to be
pasted in
you pass in Num cards was that a thing
and the allocator is going to be very
similar you do need to
similar you do need to
pass all you don't need to do
uh right I have to add to the
uh right I have to add to the
allocator oh geez the spacing
here and that where's the
here and that where's the
allocator so this m logging is going to
allocator so this m logging is going to
go
go
away it's got to
be allocate the log
buffer actually goes
here and and uh then this mis logging is
here and and uh then this mis logging is
going to get
replaced holy spacing
Batman kind of a mid complexity
Batman kind of a mid complexity
environment the amount of stuff in here
environment the amount of stuff in here
holy spacing
though this has not been renamed
correctly kind of fun just going through
correctly kind of fun just going through
and like fixing contributor code like
and like fixing contributor code like
adjusting things
quickly this is going to be a very nice
Improvement it's really the only thing
Improvement it's really the only thing
is
is
um the allocation buffers the way those
um the allocation buffers the way those
are handled that I don't like
are handled that I don't like
overall the rest of the stuff that I'm
overall the rest of the stuff that I'm
fixing now it's my fault that it's like
fixing now it's my fault that it's like
this way cuz I didn't have better uh
this way cuz I didn't have better uh
ways of doing it it for
him let's just start trying to compile
this uh Triple triad.
C
C
dot with
dot with
why can't I where's my auto complete yo
why can't I where's my auto complete yo
Spencer does this code look
familiar pick some stuff for you
we're uh dramatically dramatically
we're uh dramatically dramatically
simplifying binding code it's going to
simplifying binding code it's going to
be faster than it was before I already
be faster than it was before I already
did your connect
did your connect
4M your connect 4M is uh solved versus
4M your connect 4M is uh solved versus
the random bot as well literally first
the random bot as well literally first
experiment I
experiment I
ran not it versus harder opponents new
ran not it versus harder opponents new
new updates from infra yeah pretty much
new updates from infra yeah pretty much
just simplifying boil plate stuff like
just simplifying boil plate stuff like
that so you can see right here you know
that so you can see right here you know
you can put the m in like this and then
you can put the m in like this and then
allocate just goes with the reference
allocate just goes with the reference
doesn't need this giant
doesn't need this giant
signature reset and M make the
signature reset and M make the
client let's give this m do width do
client let's give this m do width do
height
crushes connect
yeah and now you have it um when you run
yeah and now you have it um when you run
like a th copies of Connect 4 or
like a th copies of Connect 4 or
whatever that Loop runs in C for you
whatever that Loop runs in C for you
now so that should be substantially
nicer cool that you added this mouse
nicer cool that you added this mouse
control
just have to make some minor
changes see what we got not return of
changes see what we got not return of
[Music]
value six
me card
with d it auto complete
relative triple Triad
still
no we just fix everything real quick
no we just fix everything real quick
there we
go
okay can I
click an empty
space that resets
space that resets
nice now we do The scon Binding
version fix these bugs
three client
sign
sign
charm little bit of casting
not convert
python says pong down there by
python says pong down there by
render yeah probably CU I
forgot there we
forgot there we
go M needs to be imported
okay that runs now that compiles but
okay that runs now that compiles but
we're not using the log buff
yet all
yet all
right so let me
right so let me
see
see
reset did I
uh okay where's the
scoring
scoring
i m score of I
equals where's
equals where's
step we got to add the
um well we got to add
everything nope not there
add one to episode
length let's see where you call reset
length let's see where you call reset
you call reset and
you call reset and
step and that's
step and that's
it score starts at five and increases or
it score starts at five and increases or
decreases cool yeah that's
decreases cool yeah that's
good
good
uh um so we just do add
uh um so we just do add
log We'll add this log
log We'll add this log
there then we call
there then we call
reset we have length handled now all we
reset we have length handled now all we
have to handle is reward and
have to handle is reward and
score let's
see check wind
condition this it
yeah this is literally it you just have
yeah this is literally it you just have
uh a wind
uh a wind
condition right
condition right
here so let's
do
do
minus
0.1 and what's this m
score this is a draw
so oh well you actually have score in
so oh well you actually have score in
here
right M do score is zero your player
right M do score is zero your player
your player zero here I can do it like
your player zero here I can do it like
this
think that's
think that's
right and
then
then
oops believe so
oops believe so
Co and we add to the episode return like
Co and we add to the episode return like
this which is cool we'll do like
that never randomized turn
that never randomized turn
start okay
start okay
okay and then let me see if this already
okay and then let me see if this already
works for
us native
andle you also need to
andle you also need to
do
for for
like VA very
nice let's figure out
why Works in and
see seems like it works
see seems like it works
there interesting that it would then seg
there interesting that it would then seg
fault I bet I didn't
pass not pass buffer correctly
maybe looks like I did
de cards is going to be
de cards is going to be
10 maybe I forgot
that still like
that still like
BS okay
12 run it with
12 run it with
GDB let's see where it's like
folting uh
yeah so this thing's not allocated for
yeah so this thing's not allocated for
some reason because I there it is this
some reason because I there it is this
is
why see
no attribute
no attribute
log uh there should be a
log I just forget to copy it
there we
go not particularly
go not particularly
learning we'll have to figure this
out let's start by setting
okay did you tune this learning
okay did you tune this learning
rate or is this just uh something you
rate or is this just uh something you
grabbed from
somewhere and of batch size
just
one same situation as
one same situation as
go okay cool yeah I'll go through this
go okay cool yeah I'll go through this
later with you uh but we'll we should be
later with you uh but we'll we should be
able to solve it
able to solve it
anyways if it's just
fast one one one yeah that's what we
fast one one one yeah that's what we
want one
coped okay leave it like this then this
coped okay leave it like this then this
should immediately take train up to
should immediately take train up to
something
something
respectable even on this
respectable even on this
Hardware yeah there you
go
go
now pry
now pry
H you
H you
obervations it's gets called I also I
obervations it's gets called I also I
noticed you forgot to call uh you always
noticed you forgot to call uh you always
forget to call on reset you forget to
forget to call on reset you forget to
call compute observations here and you
call compute observations here and you
need
to not a huge thing but it'll make you
to not a huge thing but it'll make you
misplay your first move every
game
game
yeah why because when the environment
yeah why because when the environment
resets set then you actually get don't
resets set then you actually get don't
you just call and
you just call and
step oh I guess it depends how you do
step oh I guess it depends how you do
it no because look you see you you call
it no because look you see you you call
reset here and then you call return so
reset here and then you call return so
it doesn't actually hit it at the bottom
it doesn't actually hit it at the bottom
that's why you see
that's why you see
that I checked your environments and
that I checked your environments and
like it's a common error um like if you
like it's a common error um like if you
check the first observation on after
check the first observation on after
reset it's empty
let's see what this is
so card
selected okay so you have a lot of stuff
selected okay so you have a lot of stuff
in here
it
yeah see there it is the zero right
yeah see there it is the zero right
there because I didn't rebuild and now
there because I didn't rebuild and now
I'm going to
I'm going to
rebuild it's not going to be zero
or I'm it's still going to be zero and
or I'm it's still going to be zero and
I'm going to look stupid oh no it's not
I'm going to look stupid oh no it's not
there it is okay so here we have some
there it is okay so here we have some
numbers they should probably be
numbers they should probably be
normalized a huge
deal surely they should be able to
deal surely they should be able to
figure something out unless the OBS are
figure something out unless the OBS are
completely unreasonable
opponent
opponent
turn check wind
turn check wind
[Music]
condition dumped everything thing
yeah let me see where you're doing
yeah let me see where you're doing
scoring logic
ler
index
e e
something weird is happening
decks are
randomized yeah I know but this is crazy
randomized yeah I know but this is crazy
chaotic and I think it's like not
chaotic and I think it's like not
playing valid moves or
playing valid moves or
something it's like learning that can
something it's like learning that can
just Spam invalid moves
where's it skip invalid
here is this else here
so can I just do
else like
else like
this and then if
this and then if
card check legal placement e
crazy
volatile the episode length not getting
reset no it
is ADD log yeah the episode length is
is ADD log yeah the episode length is
gone nuts
so why is it learning to do
so why is it learning to do
this it's invalid
stuff e
length should not be getting longer like
this e
yeah it
yeah it
should that's what I'm trying to figure
should that's what I'm trying to figure
out why it doesn't
look I do it right
here where is
it this zero is destruct
I'm only calling this here
should not be able to monotonically
should not be able to monotonically
increase like this
it's overriding your
it's overriding your
struct shouldn't be
possible yeah no I got rid of that
thing let's just do for
okay here's our triple
Triad click something
Triad click something
invalid I did not get any reward for
invalid I did not get any reward for
this ah negative one for pressing the
this ah negative one for pressing the
button one here see that
okay press the button
okay press the button
two negative one you see
that of
one and then one for winning I guess
yep so this actually looks reasonable to
yep so this actually looks reasonable to
me um I'm trying to think if it's
me um I'm trying to think if it's
possible that we're not resetting
possible that we're not resetting
somehow
legal placements
[Music]
yeah that's fine you're allowed to do
yeah that's fine you're allowed to do
that
yeah resets
here e
invalid move gets punished
get rid of this
should be going
down unless it's literally impossible
down unless it's literally impossible
but it it has to be able to reset
um why is it
15 oh I know
okay e
return length and score
these just get longer over time is that
these just get longer over time is that
what
happens yeah they
do games are genuinely finishing but
do games are genuinely finishing but
they're taking longer and longer
yes
crazy maybe they're not hold on
I bet it's just this
still
really that's nuts
oh cuz you already have it set
minus
5 why does it do
this why is it it get worse and
worse it eventually discovers it
why does it get worse and worse over
why does it get worse and worse over
time that literally gets worse reward
time that literally gets worse reward
for doing
for doing
that is it just too hard
no because the return is
no because the return is
not the return should be going
not the return should be going
crazy so something is wrong
crazy so something is wrong
here you see like this episode return
there's something that's not getting um
there's something that's not getting um
punished I think
you
have you have 15 actions here
right see if it's this
ah I
see it's the no op
man for
this is an in this is uh going to be
this is an in this is uh going to be
instructive for
you if I'm
right did not
recompile
e e
oh I see
that's so
obnoxious for
just tuned in quick 10sec rundown on
just tuned in quick 10sec rundown on
what you're working on today uh I'm
what you're working on today uh I'm
currently taking all the puffer M the
currently taking all the puffer M the
first party puffer M getting them bound
first party puffer M getting them bound
to the new infrastructure and getting
to the new infrastructure and getting
some basic training Loops working with
some basic training Loops working with
them so so far I have gotten pong
them so so far I have gotten pong
breakout both of these train I've got
breakout both of these train I've got
Connect Four that trains versus random
Connect Four that trains versus random
just fine now I'm doing this triple
just fine now I'm doing this triple
Triad card game um lots of boiler plate
Triad card game um lots of boiler plate
reduction lots of bug fixes lots of
reduction lots of bug fixes lots of
reward fixes stuff like
reward fixes stuff like
that really this is going to make them
that really this is going to make them
very usable
yeah
okay what's the point of even having a
okay what's the point of even having a
no op in the M there isn't one except
no op in the M there isn't one except
that you have to like it makes it easier
that you have to like it makes it easier
for people to play depending on how you
for people to play depending on how you
right it
we're going to see if this does it
H it still found to work around isn't it
literally have to check I have to do um
literally have to check I have to do um
I have to see what the hell it's
doing I think what's happening is it's
doing I think what's happening is it's
figuring out how to just like it's
figuring out how to just like it's
finding some set of moves that it's not
finding some set of moves that it's not
getting punished for um that just lets
getting punished for um that just lets
it cycle indefinitely so that it can
it cycle indefinitely so that it can
avoid playing the game
we're going to see in a moment
here fine
looks like EnV is returning it's it's
looks like EnV is returning it's it's
doing something stupid
man okay so here
look it's spamming card selection you
look it's spamming card selection you
see it's hard to see the Highlight
see it's hard to see the Highlight
moving around but it's spamming card
moving around but it's spamming card
selection and apparently it's not
selection and apparently it's not
getting punished for this either which I
getting punished for this either which I
thought we had uh I thought that I'd
thought we had uh I thought that I'd
done this
oh I see
see I mean literally I can just do
this we'll find a better way
after you're going to need to do a
after you're going to need to do a
little work on this one I think but this
little work on this one I think but this
will be a good uh a good demo you of of
will be a good uh a good demo you of of
RL
RL
debugging I'll get it to actually train
debugging I'll get it to actually train
first
though there we go
those non
implemented I'm use a restroom real
implemented I'm use a restroom real
quick while this trains for you we'll
quick while this trains for you we'll
see how this
goes
e
e
e
e e
[Music]
well
well
how's that
Spencer looks like your environment is
training we'll look at the policy in a
training we'll look at the policy in a
bit
figured something out though
actually it still goes up as
well let that be a lesson
though what was happening right is it
though what was happening right is it
was getting penalized for
was getting penalized for
losing and it couldn't figure out how to
losing and it couldn't figure out how to
win so it just found a way to avoid
win so it just found a way to avoid
playing the game
playing the game
it's all it
did and when we said no you have to
did and when we said no you have to
actually play the game then it started
actually play the game then it started
working
again that
easy now this has positive score on the
easy now this has positive score on the
game
let's see
let's see
if I do oops hold on
let's see what this
does
H if I reduce the FPS on this
to like
two think we can watch it
okay
five or
six it's not great at the
six it's not great at the
game but there are a lot of things that
game but there are a lot of things that
could
could
be it is according to uh the Cal though
be it is according to uh the Cal though
it is beating the random Bott on
average its average score is a six
average its average score is a six
apparently
cool hey
cool hey
bet well that's four RL
bet well that's four RL
environments uh moderately fixed
environments uh moderately fixed
in not that much
in not that much
time probably got to do the snake end
the Moa and
the Moa and
everything and this is such a big thing
everything and this is such a big thing
to have to
to have to
merge to
merge to
Dev break a bunch of
stuff guess I just have to have all the
stuff guess I just have to have all the
custom M's
working do they have the new streamline
working do they have the new streamline
Style
Style
yeah they
do it's uh much much much
simpler this is the triple Triad
simpler this is the triple Triad
file they basically all look like this
H and they all actually have um
H and they all actually have um
non-trivial or I mean they have like
non-trivial or I mean they have like
better than whatever Bots uh that are
better than whatever Bots uh that are
trained as
well I guess I got to do a snake
now better maybe uh after a hyper pram
now better maybe uh after a hyper pram
sweep probably
to be fair they'll probably just go from
to be fair they'll probably just go from
like being a bit better than random to
like being a bit better than random to
full solving the environments after
sweep yeah so we got to do snake as well
it's actually crazy how much simpler
it's actually crazy how much simpler
this is about to
get it's about to get much
simpler sweep that big a diff yes
much luck with your coding it's bedtime
much luck with your coding it's bedtime
in Norway thanks for dropping
by it's 4M I got to do this snake M
by it's 4M I got to do this snake M
here you know what I think I'm going to
here you know what I think I'm going to
do um
do um
because it's probably going to be too
because it's probably going to be too
much to also do the Moa today the Moa
much to also do the Moa today the Moa
has a more substantial binding and
has a more substantial binding and
there's some extras for it but why don't
there's some extras for it but why don't
I'm going to go make a
I'm going to go make a
shake and then how long have I been live
shake and then how long have I been live
for 340 so I'm going to go make a shake
for 340 so I'm going to go make a shake
I'm going to Port the snake
I'm going to Port the snake
environment and then we'll aim to have
environment and then we'll aim to have
this merge to Dev
this merge to Dev
tomorrow with um the Moa as well
tomorrow with um the Moa as well
because that'll be all the environments
because that'll be all the environments
then
then
right so we'll merge this to Dev
right so we'll merge this to Dev
tomorrow with the Moa as well with a
tomorrow with the Moa as well with a
little bit more
little bit more
testing yeah go ahead and do that promo
testing yeah go ahead and do that promo
if you like bet I'm uh I will be right
if you like bet I'm uh I will be right
back I got to go get myself a shake
back I got to go get myself a shake
before I
forget
e
e
e
e
e
e
e
e
e
e
e
e
e
e e
all
right one more environment to fix right
right one more environment to fix right
now
you know it's kind of so funny we've
you know it's kind of so funny we've
gotten rid of so much boilerplate that
gotten rid of so much boilerplate that
um the AI
um the AI
one
one
um well the one on the website isn't
um well the one on the website isn't
even AI it's just random the one that we
even AI it's just random the one that we
trained is
better the Connect 4 AI is literally
better the Connect 4 AI is literally
random
that might be considered negative
that might be considered negative
intelligence
I think we Port this snake
I think we Port this snake
end for today tomorrow we do uh the
end for today tomorrow we do uh the
puffer am MOA and we clean stuff
puffer am MOA and we clean stuff
up and we go from there
up and we go from there
um things that I'm not satisfied with at
um things that I'm not satisfied with at
the moment so
some of these are just so simple
some of these are just so simple
like I guess this one has extra render
like I guess this one has extra render
modes
yeah before there's going to be an
yeah before there's going to be an
animation we're going to replace the
animation we're going to replace the
tokens with like red puffer blue puffer
tokens with like red puffer blue puffer
I'm sure we'll
do for
this is
this is
interesting this is kind of more
interesting this is kind of more
intricate in a way
intricate in a way
it's funny like I see what I've done
it's funny like I see what I've done
here but I literally think it's easier
here but I literally think it's easier
to do stuff in C now than mess around
to do stuff in C now than mess around
with this
with this
python isn't that funny how that's
happened there's just more annoying
happened there's just more annoying
stuff to think about
let's start with the snake
start with
start with
this and hopefully I can uh I can get
this and hopefully I can uh I can get
this one done before I run out of steam
today for
this in it literally doesn't even need
this in it literally doesn't even need
to
to
exist it's whole
function
e
e e
okay this is fine
do we do for render cell size
you leave this as render
cell these can just be oh these need to
cell these can just be oh these need to
actually be uh
actually be uh
four with
there
there
okay do like this
demo file gets even
smaller now we're good
holy
this going to be passed by value if I do
this going to be passed by value if I do
this I don't know we'll
see for
okay this appears to still
work we still have reasonable snakes
work we still have reasonable snakes
that are doing things can still play the
that are doing things can still play the
game SS
good this is not
bad yeah this here this one's not bad
we're probably going to need logs
right we're going to need logs
yeah I may as
well just to save
stuff
uh
find see bet
so people will be able to play with this
so people will be able to play with this
at
least not done for the day yet not quite
yet e
thousand a big
PR all right this stuff's onbind
finish
snake let me see how I do
snake let me see how I do
this so much gross stuff here
yeah so much
stuff snakes Max snake length
none of these
none of these
things these things
I'm just going to go
I'm just going to go
into into this just real
quick e
poins
colors
food
Vision all right so here now now we
have our environment in
have our environment in
it and
it and
then s
by yeah
reset zero
this is no
this is no
longer
needed yeah it's literally going to end
needed yeah it's literally going to end
up just looking like the rest of
up just looking like the rest of
everything
thing I actually might even just wait on
thing I actually might even just wait on
the Moa like it's going to that's going
the Moa like it's going to that's going
to take some substantial
to take some substantial
work um and as for this render like
UMB
human I guess all I have to do is
give it the observation
right
right
oh yeah this is kind of awkward I guess
I didn't think about
I didn't think about
this a headless
this a headless
render well this doesn't work as
render well this doesn't work as
headless render anyways
though easiest thing for now is
though easiest thing for now is
literally just going to be to
literally just going to be to
remove and then rethink
yeah literally all this
stuff this whole
stuff this whole
client is now in
client is now in
C we don't need that it ends up looking
C we don't need that it ends up looking
identical to everything else it's just
identical to everything else it's just
all delicated to see
uh now we do the pong
thing we copy this
we got numm
client this all just gets easier doesn't
client this all just gets easier doesn't
it
yeah it's actually so funny the more
yeah it's actually so funny the more
that I think about it
that I think about it
like I came up with all this clever [ __ ]
like I came up with all this clever [ __ ]
right for like the python to C
right for like the python to C
barrier it's literally easier to write
see for
h
h for
that's
funny all right what is this massive
funny all right what is this massive
code
here and with height what do we
have these are actually going to end up
have these are actually going to end up
being less aren't
they snake lengths
it's actually funny to me that
it's actually funny to me that
like it's
like it's
been like three months and it literally
been like three months and it literally
already feels harder writing python than
already feels harder writing python than
it than writing
C swear all of modern software
C swear all of modern software
development is just a lie crazy
I got numb
I got numb
food we pass width height numb
food we pass width height numb
snakes well hold on this needs to be
snakes well hold on this needs to be
passed then doesn't
it so we'll do this will be num
snakes num snakes num food and that's it
snakes num snakes num food and that's it
right so
right so
widths you need widths and Heights don't
widths you need widths and Heights don't
you widths
Heights my snake
length
okay obervation actions rewards
terminals widths Heights um
snakes it's really nice being able to
snakes it's really nice being able to
mix stuff like
mix stuff like
this uh num food
this uh num food
Vision snake
Vision snake
length or
length or
food there we
go yeah
and then we'll just
and then we'll just
do things can go
away SE snake star
M for log in
M for log in
M's
oops damn it let me freaking type there
oops damn it let me freaking type there
we go
we go
n m is going to be length
n m is going to be length
of snakes let's do like
this none of this matters at
all uh none of this matters at
all okay
M's Seas
M's Seas
snake SE snake
like
this and we have ob's
this and we have ob's
eye actions rewards
eye actions rewards
terminals see
terminals see
snake
snake
obervations see what this
obervations see what this
takes doesn't okay we're going to have
takes doesn't okay we're going to have
to change a bunch of stuff apparently
that's fine
that's fine
though where'd it
though where'd it
go I was literally dis editing this
right was I did I do it here by
right was I did I do it here by
mistake
mistake
no well I have no idea where the heck
no well I have no idea where the heck
those edits just
went oh
went oh
wait yeah here we
go my bad we got
go my bad we got
with spy Heights spy num snakes num
with spy Heights spy num snakes num
food then we
food then we
get
get
Vision
Vision
Max snake
Max snake
length the corpses on
length the corpses on
death for food for death
okay and then there's literally not even
okay and then there's literally not even
anit function for this one it's that
anit function for this one it's that
easy
grab all
this it's actually crazy how much dev
this it's actually crazy how much dev
has sped up since I
graduated it's like the engineering
graduated it's like the engineering
skill Delta
skill Delta
is like I'm literally getting twice as
is like I'm literally getting twice as
twice as good at this every six months
now probably during PhD it was twice as
now probably during PhD it was twice as
good every two
years I says I'm copy pasting a bunch of
years I says I'm copy pasting a bunch of
dumb boiler plate
but to be fair there's less dumb boiler
but to be fair there's less dumb boiler
plate than before and it is simpler than
plate than before and it is simpler than
before which is key it's an
before which is key it's an
improvement it's not the end game yet
improvement it's not the end game yet
but it is an
improvement see like this can just go
improvement see like this can just go
this can just go [ __ ] off
now and we do have to add uh the whole
now and we do have to add uh the whole
struck death to this which is a little
struck death to this which is a little
annoying but it's not that bad I
believe little
annoying oh and this is where I'm going
annoying oh and this is where I'm going
to run into that issue right well we'll
to run into that issue right well we'll
see I don't know if you can get away
see I don't know if you can get away
with type deing destruct like this
with type deing destruct like this
um I think scyon is a little finicky
um I think scyon is a little finicky
about having to like
about having to like
pre pre- declare them or something
weird this is bent Maybe
I forget how we did
I forget how we did
this I think this is we did unsigned
this I think this is we did unsigned
Char for
this we'll see in a
moment
okay we also have to do
logs uh and this one I think we're going
logs uh and this one I think we're going
to
to
do this one's going to be bigger I
believe bigger log
believe bigger log
buffer uh what the
buffer uh what the
heck oh
yeah it'll be
cleaner
do and clear
do and clear
and
then I think you have to do
then I think you have to do
log yeah it's a little more complicated
log yeah it's a little more complicated
for multi agent here
signed I think I just unsigned in for
signed I think I just unsigned in for
actions didn't
actions didn't
I
I
yeah actions terminals
we got to add the log buffers in and
we got to add the log buffers in and
this is going to be the thing that's
annoying have to add logs in here like
annoying have to add logs in here like
this and then into the allocate
I don't like how much memory this will
I don't like how much memory this will
take up for the web but
we'll to make logs for each
we'll to make logs for each
snake and then they're
free this
let's avoid the
uh oh actually hold on we do need an nit
uh oh actually hold on we do need an nit
SE
SE
snake don't
we yeah we totally need an N SE
snake what we think this is dummy
like all these things are I'm going to
like all these things are I'm going to
get PED
in log buffer gets passed in but logs
in log buffer gets passed in but logs
don't
like I don't know why we did it this way
like I don't know why we did it this way
but
like go in a
like go in a
net that's
cleaner log buffer gets passed into
cleaner log buffer gets passed into
here and then we have to do
here and then we have to do
init the snake
init the snake
this
for for
there's some more stuff to do here but I
there's some more stuff to do here but I
think I think we can start trying to
think I think we can start trying to
test the C
layer okay
function
function
definition where did I
definition where did I
miss did I mess something
up oh yeah this right
up oh yeah this right
here D I hate this like this
here D I hate this like this
stupid I don't know why it tries to
stupid I don't know why it tries to
continue
continue
comments does that actually compile
comments does that actually compile
there's no way that this just works
right yeah now okay it doesn't just work
right yeah now okay it doesn't just work
but it'll be easy to
but it'll be easy to
fix
fix
um snake.
H
grid uh we C like a grid here don't
grid uh we C like a grid here don't
we what's it say and with
do I not set
do I not set
width I do set width and height
here you
here you
see 20541
do
do
I oh wait hold on this needs to call an
I oh wait hold on this needs to call an
ity
snake
snake
Okay it's kind of crazy how the code
Okay it's kind of crazy how the code
just works you
just works you
know with the amount of slice and dicing
know with the amount of slice and dicing
I'm doing I'm not being remotely careful
I'm doing I'm not being remotely careful
and it still is just working I love my
C yeah that's just a solid um now I
C yeah that's just a solid um now I
guess we go for scyon
version we're going to have to fix some
version we're going to have to fix some
bugs
let's
see the
see the
heck
type
type
here skip the proper errors
too many
arguments to
arguments to
function in it Seas
snake this is
void where the [ __ ] is this getting
void where the [ __ ] is this getting
called
syon errors sometimes are just
ridiculous well this struct isn't even
ridiculous well this struct isn't even
remotely correct now
remotely correct now
right so it's probably this type
death probably this type
death probably this type
def we might have to rethink the scon at
def we might have to rethink the scon at
some point but um I think for now
some point but um I think for now
the thing with scon is it makes it
the thing with scon is it makes it
really easy to do like it get it makes
really easy to do like it get it makes
it just really easy to do intermediate
it just really easy to do intermediate
binding layers and
such like I kind of like having this
such like I kind of like having this
Loop over M's done in scyon instead of
Loop over M's done in scyon instead of
C it feels
C it feels
cleaner I don't know maybe I could be
cleaner I don't know maybe I could be
persuaded not to care about that as much
though if I like didn't have to write
though if I like didn't have to write
these binding files but the thing I
these binding files but the thing I
don't think there's an alternative I
don't think there's an alternative I
think you have to write The Binding
think you have to write The Binding
files
files
regardless
regardless
stupid the loop has to be
stupid the loop has to be
somewhere actually yeah it's pretty good
somewhere actually yeah it's pretty good
like this
lie handles a
lot okay
I expected this to work
argument is of type
charar and self.
charar and self.
Ms of I
I don't know how it doesn't catch this
I don't know how it doesn't catch this
because this numb Ms is just not present
where is this coming
from
oops bindings
oops bindings
man read
size SI snake
incompatible pointer
type do I need to like clear this or
type do I need to like clear this or
something
it still has it like this I don't I do
it still has it like this I don't I do
not understand where this stupid um
not understand where this stupid um
function definition is coming
from like is this just wrong hold on
C
C
snake right this Tak C snake star
M let's not do that
okay let's do this again I think
okay let's do this again I think
something's cashed or something
weird oh hold on is it like
sore
snake how did this
happen completely different
happen completely different
file right
I really do not know how this happened
need to get the
signatures come
on want me finish this and get to the
on want me finish this and get to the
gym already going on too long too much
gym already going on too long too much
Dev
plant
um what is the
thing what's the Vim finding
replace s
replace s
slash perc s yeah that's it I use it so
slash perc s yeah that's it I use it so
rarely AS
rarely AS
Slash
Slash
client what it
client what it
renderer
client then we do
client then we do
renderer C
slash okay
[Music]
okay cannot
convert wait cannot convert
that
make does it not make client
in it
in it
client this is going to be
client this is going to be
make it returns
one only type so fast
do not take
this cell size width and
this cell size width and
height
fine is there wait cell size does this
fine is there wait cell size does this
get used
I don't think this gets
used do
eight
expected what's going
expected what's going
on crazy refactors on all these
on crazy refactors on all these
reinforcement learning environments
reinforcement learning environments
cutting out tons and tons of code making
cutting out tons and tons of code making
these very fast very easy to use and
these very fast very easy to use and
very
very
simple I've done four of them today so
simple I've done four of them today so
far this is the fifth
far this is the fifth
one um basically I found a way to cut
one um basically I found a way to cut
out tons and tons of boiler plate so uh
out tons and tons of boiler plate so uh
it's way way way easier for people to
it's way way way easier for people to
make and use these environments now and
make and use these environments now and
they'll all be crazy fast as well even
they'll all be crazy fast as well even
faster than
before
before
oh it's syon
right storing
right come
on BET is the resident advert
ising but yes do star the repo it's all
ising but yes do star the repo it's all
free and open source and it helps me out
free and open source and it helps me out
a
ton sad thing is I hate advertising
ton sad thing is I hate advertising
really
really
now puffer lib is good yes indeed you
now puffer lib is good yes indeed you
can advertise for
puffer is obsa charar
yeah it is wonder why I didn't make it
yeah it is wonder why I didn't make it
sign uh unsigned
what what's the thing that you need to
uh we want these right
advertising probably
advertising probably
negligible no it actually does
help definitely does
help
yeah actually to be
fair yeah it has to be an unsigned sh in
fair yeah it has to be an unsigned sh in
see did we figure this out
before well you're not right like bull
before well you're not right like bull
is fine in C it's totally fine in C and
is fine in C it's totally fine in C and
it's fine in scyon it's the problem is
it's fine in scyon it's the problem is
it's different across that
it's different across that
bound maybe a little bit
integer required
uh
what five hours and two it's I haven't
what five hours and two it's I haven't
been live for five hours in two
minutes my stream says 4:41 on
it I don't know
yeah let me finish this this needs to be
done what in the heck
done what in the heck
tensor
tensor
size
oh confused as to what I did here
oh confused as to what I did here
because I thought it was just
wait
snake
Okay does this need to
Okay does this need to
be reshaped
I'm uh a bit confused as to
I'm uh a bit confused as to
where this has gone wrong here
oh well that's
weird is there a reason for that
yeah this doesn't make sense I think
yeah this doesn't make sense I think
this should just
be BAS
[Music]
yeah there we
yeah there we
go uh no
logs hold on there no logs
yet we need to integrate log buffer
yeah we have new logging system you like
yeah we have new logging system you like
this is new logging system
here so it's got episode return length
here so it's got episode return length
and score
this yeah
inrease episode
length we go like this return
length we go like this return
score add log and then you spawn the
snake and then when you spawn snake you
snake and then when you spawn snake you
n
vogs log Z like
this
yeah then
yeah then
here rewards
I that
add the
episode I think that's literally it
right let's see
scores the snake
length don't think this is working
why is the episode return
weird sort of started it didn't start at
seven that's the
length shouldn't it return a not
length shouldn't it return a not
necessarily return it just some of
necessarily return it just some of
rewards if you have a bunch of negative
rewards I'm trying to figure out
yeah I know it's not training nicely and
yeah I know it's not training nicely and
also it just seg
bed I didn't control C
I think I missed something
I think I missed something
no greater than equal to wall covers
everything it's kind of funny it trains
everything it's kind of funny it trains
at 500k even with debugging on that's
at 500k even with debugging on that's
nuts okay so here we
go dude
go dude
what AIS
info
for e
two
MS e
Das
o0 for
h
we'll see whether this gives me any
we'll see whether this gives me any
debug
symbols and think what the heck though
yeah no I don't have
anything question mark question
mark optimized out optimized out
cannot find bounds it's like some
cannot find bounds it's like some
internal thing what the [ __ ] and why is
internal thing what the [ __ ] and why is
there C++ there shouldn't be
C++ for
let's get rid of this garbage before I
let's get rid of this garbage before I
forget
there's literally nothing here that
there's literally nothing here that
should be running
C++ for
oh hold
oh hold
on one of the widths I'm
passing
2560 this should be
2560 this should be
good it should be fine
is it like
is it like
Ram no this uses
nothing oh wait hold on I think I'm
nothing oh wait hold on I think I'm
dumb yeah we're dumb
I don't even know how the hell this
I don't even know how the hell this
works as
works as
is this should
be e
this I forgot about
that make a difference
No it should make a
difference should make a big difference
okay e
really num
really num
Ms the one m
Ms you say
Ms you say
star thought that would be it actually
star thought that would be it actually
how the heck does this even work without
how the heck does this even work without
this trying to
this trying to
think are these things even getting
think are these things even getting
written
to obervations
yeah these get R these get written
too do I have the types matched
up the types matched let me
up the types matched let me
see Char unsigned
see Char unsigned
in float
do I have any warnings on
do I have any warnings on
this have I like ignored any warnings by
accident no
accident no
no no these
no no these
actually not all members given
no those are
no those are
fine those have nothing to do with
fine those have nothing to do with
this um I'm very confused
though the heck could be seg faulting
though the heck could be seg faulting
this
should be matching I copied it directly
should be matching I copied it directly
I'm pretty damn
I'm pretty damn
sure oh wait it could be this
sure oh wait it could be this
freaking the forse
death now this is
death now this is
fine so I left it as an unsigned
Char the heck would Segal this with like
Char the heck would Segal this with like
no reasonable
no reasonable
error can I run the uh
hey this runs just
hey this runs just
fine right this runs fine in uh in
C where would there be like a
C where would there be like a
bounds could it be Max snake
bounds could it be Max snake
length
something well we're not going to know
something well we're not going to know
you'd have to run it for a
you'd have to run it for a
long after you hit a done well it
long after you hit a done well it
considering it only logs when you hit a
considering it only logs when you hit a
done
yes could it be like Max snake length or
yes could it be like Max snake length or
something no I already have that dealt
something no I already have that dealt
with like this the thing that this is is
with like this the thing that this is is
based on has been tested over like tens
based on has been tested over like tens
of billions of steps I must have
of billions of steps I must have
introduced
introduced
something I'm trying to think what I
something I'm trying to think what I
could have introduced
print the like print what
values you
know and why is it that I don't get a
know and why is it that I don't get a
segle in this piece of
segle in this piece of
code It's like got to be something not
code It's like got to be something not
in this piece of code
unless would I get a seg
unless would I get a seg
vault I have an out of bounds right on a
vault I have an out of bounds right on a
piece of
piece of
code passed in from
code passed in from
python let me double
check okay so we pass in
what do you mean probably you got no
what do you mean probably you got no
idea you've got no idea
well this is
well this is
interesting this is defined as
uint I have it as int
uint I have it as int
8 and then
ah actions is
ah actions is
wrong you
see how did that
happen how' that happen
oh it's because yeah
okay this is the first time I've had to
okay this is the first time I've had to
pass a slice of
pass a slice of
actions so
can you pass a d type here
though you can pass a d type
hem well it's like you can just say
hem well it's like you can just say
stuff but you don't know
how are you going to know
is there ever any damn good reason to
is there ever any damn good reason to
have that be hold on let me just try
have that be hold on let me just try
something real
quick
for e
there look score just went
there look score just went
up score just
surpassed you
surpassed you
see that was it
isn't
okay well this now works you can see
it well I don't actually know if it
it well I don't actually know if it
crashes hold
crashes hold
on well I control seed
on well I control seed
there we'll see about that but for now
there we'll see about that but for now
this is this is good progress um some
this is this is good progress um some
stuff on data type checks some safety
stuff on data type checks some safety
things but we've gotten
things but we've gotten
today of these M's
here we've got this into the new uh
here we've got this into the new uh
simplified streamline API these four
simplified streamline API these four
into the API this one doesn't have API
into the API this one doesn't have API
binds yet so we'll just do it in the new
binds yet so we'll just do it in the new
style when we do and then this one will
style when we do and then this one will
be uh a new you know a new thing to
be uh a new you know a new thing to
do um yeah
so we'll see if we can get this
so we'll see if we can get this
merged tomorrow uh is Spencer back yet
merged tomorrow uh is Spencer back yet
let me see it's
let me see it's
530 he needs help with
530 he needs help with
stuff I don't see
him I'll probably drop into the
him I'll probably drop into the
uh I don't think I will I'll just like
okay
okay
cool
cool
uh all
uh all
right I I think that's it for now I'm
right I I think that's it for now I'm
going to go get some
going to go get some
exercise uh we made like freaking 1,500
exercise uh we made like freaking 1,500
plus lines worth of commits and changes
plus lines worth of commits and changes
and stuff today
and stuff today
um lot a lot of stuff tomorrow we finish
um lot a lot of stuff tomorrow we finish
this
this
up we
up we
hopefully new M start going into this
hopefully new M start going into this
format we'll see if we streamline
format we'll see if we streamline
anything additional on top of this but
anything additional on top of this but
yeah this is pretty
yeah this is pretty
nice um this is live in just like a bind
nice um this is live in just like a bind
temporary branch on
puffer and yeah stara
puffer and yeah stara
Star Puffer for sure helps me out a ton
Star Puffer for sure helps me out a ton
uh We've also got
uh We've also got
discord.gg puffer that's where we manage
discord.gg puffer that's where we manage
all the open source Dev for this so if
all the open source Dev for this so if
you're interested in building some
you're interested in building some
environments we have people that have
environments we have people that have
never done RL that are building really
never done RL that are building really
awesome things over there so feel free
awesome things over there so feel free
to come by other than that thanks for
to come by other than that thanks for
dropping by folks and see
