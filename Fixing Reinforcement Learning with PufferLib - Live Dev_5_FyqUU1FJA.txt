Kind: captions
Language: en
got about an hour to do a bit of work
got about an hour to do a bit of work
here before uh next meeting and
thing let me see what we can do
thing let me see what we can do
here let me just make sure I have the
here let me just make sure I have the
meeting time
meeting time
correct as
well not showing up on my calendar is
well not showing up on my calendar is
not
great where's the damn Cal invite
hang on let me fig let me figure this
hang on let me fig let me figure this
out real quick and then we'll get
out real quick and then we'll get
started on what I got to do here um yeah
started on what I got to do here um yeah
that's bizarre I don't see the invite at
that's bizarre I don't see the invite at
all
whatever all right
so here's what we're going to
so here's what we're going to
do we're going to try to get this thing
do we're going to try to get this thing
to render
correctly I'm going to go
grab from the latest
phc and try to get this Isaac gem
phc and try to get this Isaac gem
simulator to render correctly and to
simulator to render correctly and to
behave for
data assets youf so this is just going
data assets youf so this is just going
to
be
for
e e
wait are we have to run this
from right
okay so here we have this
done humanoid render and
I
see how long is this 500 this is
actually substantial
I guess what we
do humanoid render
do humanoid render
m for
3 point
motion
file need that I still got few minutes
file need that I still got few minutes
here physics engine device type yada
here physics engine device type yada
yada yada
yada uh this thing has a bunch of
parameters
simrs
simrs
same config Sim prams equal
same config Sim prams equal
none okay so I think we can just set
none okay so I think we can just set
this
this
up basically as is
we
do actually is this the same signature
do actually is this the same signature
device this is literally the same
device this is literally the same
signature so we're just going to paste
signature so we're just going to paste
this in
okay unexpected value
motion oh hold on environment
phcn now I see so this is going to be
phcn now I see so this is going to be
Puffer
phcn e
we'll see how to get this to
render should probably have some render
render should probably have some render
settings
so we do 32 M's
what's
this
this D has no attribute
EXP for
this just not in the config
let's just put it in the config real
quick e
no attribute render
okay vender
hey
hey
welcome I just see
that I guess I saw that uh four minutes
that I guess I saw that uh four minutes
late but welcome
okay driver render
mode I think it's native right
whoa look at
that I don't know why we got camera
that I don't know why we got camera
Shake as
well but that's pretty nice
now let me
now let me
see if I can figure some other stuff out
see if I can figure some other stuff out
since that didn't take very long
oh wait k said there was a
oh wait k said there was a
fix for the end that he made
fix for the end that he made
maybe there's a fix that I
maybe there's a fix that I
need 12 hours ago fix po binding bug
need 12 hours ago fix po binding bug
that sounds
promising for
it looks like the
um move this in
end yeah so this is all going to have to
end yeah so this is all going to have to
get moved into the new one
I'll just pour His fixes in may as
well oops let's go to
well oops let's go to
C there we go
okay there's no default for this so
okay there's no default for this so
we're fine
yeah he had Deport this because my
yeah he had Deport this because my
stupid ass forgot to commit
it think we already have this
right yeah he just copied this in this
right yeah he just copied this in this
is
is
fine a reset also updates hang on
oh wait no I did this look
self-observations I think this is fine
self
terminals all that's
terminals all that's
fine this one's already
done action clipping he says is
done action clipping he says is
important
the end clip actions probably the end
the end clip actions probably the end
Clips actions
right so clip actions clip
okay self.
tick
tick
fine and then here was the bug
fine and then here was the bug
fix
terminals for. zer
okay this is fine and then clip actions
sh
just that Discord we're
just that Discord we're
good reviewing PR no this is not PR this
good reviewing PR no this is not PR this
is um collaboration slash uh work
is um collaboration slash uh work
with on a gymnasium not gymnasium Isaac
with on a gymnasium not gymnasium Isaac
gym stuff so this is the simulated the
gym stuff so this is the simulated the
High Fidelity control work
High Fidelity control work
and yeah I'm working on this with
Kum the
actions this is so this is to a
actions this is so this is to a
different repo so I can't just PR
different repo so I can't just PR
it um
it um
yeah update up
yeah update up
stats ah and then this is in this demo
stats ah and then this is in this demo
looks like there is a little weird
weirdness
train uh yeah one second let me get this
train uh yeah one second let me get this
running and then I will do that just
running and then I will do that just
finish this
I doubt that this piece is needed I
I doubt that this piece is needed I
really really doubt it because I don't
really really doubt it because I don't
have layer Norm or anything in there yet
have layer Norm or anything in there yet
so this should be
fine and then I was told
that I was told the adversarial reward
that I was told the adversarial reward
breaks thing so I'll just comment
breaks thing so I'll just comment
this
loss I'll comment
loss I'll comment
this and then I will comment this
yeah go ahead if you have uh questions
yeah go ahead if you have uh questions
on end I will take a quick look
red in development and Discord got
red in development and Discord got
you that is why I'm
streaming well we'll see what
streaming well we'll see what
information you have in here
information you have in here
first what thread is
first what thread is
it this
it this
one I can't access any c variables from
one I can't access any c variables from
my
python okay so lean key is also a very
python okay so lean key is also a very
new programmer
new programmer
so uh he will he is very helpful but
so uh he will he is very helpful but
take whatever he says with you know a
take whatever he says with you know a
grain of may or may not be
correct if you need any networking done
correct if you need any networking done
though he's your
guy what are you trying to access
next op
step so yeah so this is a pointer right
step so yeah so this is a pointer right
so whenever you call step it'll put the
so whenever you call step it'll put the
data into here and then it should just
data into here and then it should just
automatically be in the python end
automatically be in the python end
because this is the same memory address
because this is the same memory address
so you know it's it's the same memory in
so you know it's it's the same memory in
Python and in C so if you change it in
Python and in C so if you change it in
in Python it will also change in C
what are you trying to
access when I try to step my end in a
access when I try to step my end in a
python file I'm going to guess and I
python file I'm going to guess and I
know what the issue
is but I don't see where you have your
is but I don't see where you have your
command that you ran with the
command that you ran with the
error where's the error
OBS and next
OBS and next
OBS inial
OBS yeah you I mean uh I can jump in the
OBS yeah you I mean uh I can jump in the
in the Discord quick I think you'll be
in the Discord quick I think you'll be
your voice you'll probably have voice on
your voice you'll probably have voice on
stream if you care but uh I I can try to
stream if you care but uh I I can try to
mute that if you prefer I don't
mute that if you prefer I don't
know hey hey how's it going so what are
know hey hey how's it going so what are
you trying to access like what what's
you trying to access like what what's
going on here uh yeah just let let me
going on here uh yeah just let let me
close the the string cuz yeah okay great
close the the string cuz yeah okay great
um so I'm I'm trying to uh basically
um so I'm I'm trying to uh basically
step my amp this I thought at first it
step my amp this I thought at first it
was an access issue but it isn't really
was an access issue but it isn't really
now I figured out what's happening and
now I figured out what's happening and
when I reset my environment and I
when I reset my environment and I
collect the observations so I do
collect the observations so I do
observations data equals f. reset and
observations data equals f. reset and
then later I do next OBS data equals m.
then later I do next OBS data equals m.
step right and the the observations gets
step right and the the observations gets
overwritten by the next Ops basically oh
overwritten by the next Ops basically oh
okay can you paste the python file yes
okay can you paste the python file yes
sure I'm pretty sure I know what you're
sure I'm pretty sure I know what you're
doing
um yeah one second
uh I'll just paste it in uh in my thread
uh I'll just paste it in uh in my thread
yeah
yeah
yeah
um so yeah line eight this is my OBS and
um so yeah line eight this is my OBS and
then I run the environment for 100 steps
then I run the environment for 100 steps
or whatever and then at line 32 when I
or whatever and then at line 32 when I
get to the break point hold on let me
get to the break point hold on let me
see oh sorry let me
see oh sorry let me
read next
OBS no no no I meant paste the well I
OBS no no no I meant paste the well I
can check this but I meant paste the pi
can check this but I meant paste the pi
CPR that
CPR that
file the actual environment binding file
file the actual environment binding file
cuz that's that's a python file right
cuz that's that's a python file right
pcpr yeah yeah I'll do that yeah I my
pcpr yeah yeah I'll do that yeah I my
guess is you're overwriting the Ops
guess is you're overwriting the Ops
buffer in a way but you're not
buffer in a way but you're not
understanding yeah
probably you're probably just
probably you're probably just
misunderstanding the reference versus
misunderstanding the reference versus
value let me
see uh this actually looks fine let see
see uh this actually looks fine let see
so you do you init the
so you do you init the
buff pass these in
buff pass these in
p and then you reset and return
p and then you reset and return
this okay and then
this okay so this looks fine to
me let me see
see if you did anything weird in your
see if you did anything weird in your
test file it'd be very difficult to do
test file it'd be very difficult to do
that
though no because you're
not yeah cuz you're not doing anything
not yeah cuz you're not doing anything
here you're not trying to up like if you
here you're not trying to up like if you
try to update this in place you can
try to update this in place you can
break things but you didn't do
that then I'll look at your code
where is it oh You' already pasted it up
where is it oh You' already pasted it up
there my bad me
see
weird what the heck is
this so You' got
this observations
m c in I Nal
Z and then you pass num
Z and then you pass num
agents there's num
agents there's num
agents and num agents is given in the
agents and num agents is given in the
init function uh it's a list of yeah for
init function uh it's a list of yeah for
every environment there's x amount of
every environment there's x amount of
Agents
so that should be fine you might want to
so that should be fine you might want to
print this number out to make sure that
print this number out to make sure that
it's doing what you expect but other
it's doing what you expect but other
than that that looks fine actions and
than that that looks fine actions and
and then you get widths I Heights I yes
and then you get widths I Heights I yes
this is all correct as far as I can see
step and what's happening to your
step and what's happening to your
observations like what what are you
observations like what what are you
saying is happening with your
saying is happening with your
observations um so if you go back to the
observations um so if you go back to the
CPR test python
CPR test python
file um in the performance test
file um in the performance test
basically I so the end let's so so to be
basically I so the end let's so so to be
clear the entire environment is uh
clear the entire environment is uh
stepping fine and running fine it's just
stepping fine and running fine it's just
that the observations that I'm getting
that the observations that I'm getting
back from m. reset at line 8 is being
back from m. reset at line 8 is being
overwritten uh as I step my environment
overwritten uh as I step my environment
along the way and so when at the end I
along the way and so when at the end I
just want to look at OBS the variable
just want to look at OBS the variable
that I uh got at line eight is just it's
that I uh got at line eight is just it's
not the original observations anymore
not the original observations anymore
it's just the the the latest observation
it's just the the the latest observation
that is yeah this one here will get
that is yeah this one here will get
overwritten that's correct oh yeah so
overwritten that's correct oh yeah so
the reason for that right is this is a
the reason for that right is this is a
pointer to the buffer this is what this
pointer to the buffer this is what this
is giving you is this is just giving you
is giving you is this is just giving you
the memory that has the stuff in it so
the memory that has the stuff in it so
that's expected
that's expected
Behavior because oh you see okay so if
Behavior because oh you see okay so if
you want so so how would you do it if
you want so so how would you do it if
you wanted to fill a replay buffer for
you wanted to fill a replay buffer for
example well when you fill the replay
example well when you fill the replay
buffer you're going to put it into a
buffer you're going to put it into a
different spot
different spot
right like a replay buffer is going to
right like a replay buffer is going to
be a separate piece of memory
be a separate piece of memory
right oh okay okay sorry that's that's
right oh okay okay sorry that's that's
so dumb that's so dumb do you understand
so dumb that's so dumb do you understand
why I have it this way because if I gave
why I have it this way because if I gave
you it if I gave you back a copy and
you it if I gave you back a copy and
then you put it into your replay buffer
then you put it into your replay buffer
you copied the data twice and with how
you copied the data twice and with how
fast her environments go that's like 10
fast her environments go that's like 10
gigabytes of copies a second that it
gigabytes of copies a second that it
could
could
be yeah I I get it because I thought
be yeah I I get it because I thought
that when you define a variable like
that when you define a variable like
this at line eight for example I thought
this at line eight for example I thought
it was creating a new no spot memory
it was creating a new no spot memory
somewhere no no no no it's not so you're
somewhere no no no no it's not so you're
actually the second person who's brought
actually the second person who's brought
this up I actually don't know what I
this up I actually don't know what I
should do to make this clearer if you
should do to make this clearer if you
have any ideas I'm all years you can do
have any ideas I'm all years you can do
I mean I've I've I've clearly
I mean I've I've I've clearly
articulated exactly what's happening
articulated exactly what's happening
people just don't understand because
people just don't understand because
they're not used to it I think well I if
they're not used to it I think well I if
we have something for the docs that
we have something for the docs that
would have been useful to have in there
would have been useful to have in there
I'd like to include something because
I'd like to include something because
the thing is it has to stay this way
the thing is it has to stay this way
right this is I agree it's great yeah
right this is I agree it's great yeah
because this is where a lot of the
because this is where a lot of the
performance come from comes from um yeah
performance come from comes from um yeah
I've been confused myself at how it
I've been confused myself at how it
works with updating a thing and then not
works with updating a thing and then not
understanding how it's it's just it's
understanding how it's it's just it's
the way to look at it it's just shared
the way to look at it it's just shared
memory right it's just that you're not
memory right it's just that you're not
making a new object it's a pointer right
making a new object it's a pointer right
so when you get back an array in Python
so when you get back an array in Python
secretly what that is it's a pointer
secretly what that is it's a pointer
it's a reference to a thing in memory
it's a reference to a thing in memory
right the only time you don't have a
right the only time you don't have a
reference in Python is Primitives like
reference in Python is Primitives like
an integer or whatever then you're
an integer or whatever then you're
getting the value but otherwise you're
getting the value but otherwise you're
just getting a reference so all I did
just getting a reference so all I did
was hand you the reference without
was hand you the reference without
making a copy of the data so yeah if you
making a copy of the data so yeah if you
update if you update OBS there by the
update if you update OBS there by the
way then it's going to change the data
way then it's going to change the data
in the C it's the same way like how you
in the C it's the same way like how you
know you change actions and then you
know you change actions and then you
don't call step on actions right you
don't call step on actions right you
just call step well I guess you do call
just call step well I guess you do call
step on actions here but the C
step on actions here but the C
environment doesn't need actions right
environment doesn't need actions right
the internal C environment doesn't need
the internal C environment doesn't need
actions it's because it's a reference
actions it's because it's a reference
right everything is just done by
right everything is just done by
reference so we don't copy the data a
reference so we don't copy the data a
bunch of times because this is where
bunch of times because this is where
most of the performance loss comes from
most of the performance loss comes from
and in fact
and in fact
with the way that we do our stuff here
with the way that we do our stuff here
uh we can do all of vectorization with
uh we can do all of vectorization with
zero copies so this is like the zero
zero copies so this is like the zero
copy optimization so the end is
copy optimization so the end is
literally simulating data into the place
literally simulating data into the place
that it needs to be on the main
that it needs to be on the main
thread okay and it can do that multi
thread okay and it can do that multi
processed yeah that's that's much
processed yeah that's that's much
clearer now um as for your question
clearer now um as for your question
uh I mean I've went through the website
uh I mean I've went through the website
multiple times trying to find something
multiple times trying to find something
I guess if you would put anything on the
I guess if you would put anything on the
prefer. a doc uh HTML uh file I don't
prefer. a doc uh HTML uh file I don't
know I've looked at the vectorized
know I've looked at the vectorized
environment looking if so I don't know
environment looking if so I don't know
somewhere in there maybe just if you
somewhere in there maybe just if you
really want people to it's
really want people to it's
probably the native docs I guess is
probably the native docs I guess is
because we have like the making your own
because we have like the making your own
environment
environment
thing Doc so probably like
here we should explain this a little bit
here we should explain this a little bit
yeah
yeah
okay
okay
um but yeah I mean thank you very much
um but yeah I mean thank you very much
obviously that's very dumb for my UT no
obviously that's very dumb for my UT no
no no it's unintuitive if you're used to
no no it's unintuitive if you're used to
I mean this is the thing python obscures
I mean this is the thing python obscures
stuff like this so it's normal for you
stuff like this so it's normal for you
to be confused by this uh isue okay
to be confused by this uh isue okay
here's the
here's the
explanation copy message
explanation copy message
link I'll I'll just DM it to you
okay so basically in so okay if I need a
okay so basically in so okay if I need a
rep buffer there's no problem but then
rep buffer there's no problem but then
yeah in fact it's faster because we
yeah in fact it's faster because we
don't have the we don't have the
don't have the we don't have the
Redundant copy CU now if if I push the
Redundant copy CU now if if I push the
next observation and rewards into a
next observation and rewards into a
queue or anything this will get copied
queue or anything this will get copied
automatically right it depends so if you
automatically right it depends so if you
append the current object to a list then
append the current object to a list then
it will not but let's say that your
it will not but let's say that your
replay buffer is is your replay buffer a
replay buffer is is your replay buffer a
big tensor or is it going to be a
list it's usually a big
tensor well the way I used to do it
tensor well the way I used to do it
actually you know it's just like a class
actually you know it's just like a class
with the D DQ uh from python but yeah so
with the D DQ uh from python but yeah so
in that case then you'll have to dot
in that case then you'll have to dot
copy if you do dot copy on the array
copy if you do dot copy on the array
then you'll get new memory um but like
then you'll get new memory um but like
the way that we have it here like a
the way that we have it here like a
really fast way to do a buffer is like
really fast way to do a buffer is like
to just put everything into a tenser
to just put everything into a tenser
sometimes you have a tensor with a Time
sometimes you have a tensor with a Time
index um so in that case if you just
index um so in that case if you just
assign this tensor or this array that we
assign this tensor or this array that we
give you to your tensor then it gets
give you to your tensor then it gets
copied so basically you're running into
copied so basically you're running into
python memory uh
python memory uh
semantics okay and is the yeah is the
semantics okay and is the yeah is the
copy mechanism due to the tensor the way
copy mechanism due to the tensor the way
the tensors are built or is it it's due
the tensors are built or is it it's due
to the way python is built so in Python
to the way python is built so in Python
just by default except for The
just by default except for The
Primitives pretty much everything is an
Primitives pretty much everything is an
object right so like if you pass a list
object right so like if you pass a list
into a function and then you add stuff
into a function and then you add stuff
to the list right you don't have to
to the list right you don't have to
return the list like the list is going
return the list like the list is going
to get updated as well yeah same thing
to get updated as well yeah same thing
so we're giving you this object which is
so we're giving you this object which is
this like pointer to this array if you
this like pointer to this array if you
put it into a list we're not it's not
put it into a list we're not it's not
going to make a copy it's just going to
going to make a copy it's just going to
put the reference in but if you assign
put the reference in but if you assign
the data to a different array then think
the data to a different array then think
about it right the array is some piece
about it right the array is some piece
of data I have this other piece of data
of data I have this other piece of data
so it has to copy if you call. copy it
so it has to copy if you call. copy it
will also copy
will also copy
okay okay yeah I get it yeah thanks and
okay okay yeah I get it yeah thanks and
if you're confused then all you do is
if you're confused then all you do is
you like put a breakpoint before put a
you like put a breakpoint before put a
breakpoint after see if the you know the
breakpoint after see if the you know the
original
original
changes yeah okay that's fine yeah
changes yeah okay that's fine yeah
thanks so this is yeah python copy
thanks so this is yeah python copy
semantics being confusing um they're
semantics being confusing um they're
less confusing if you're familiar with
less confusing if you're familiar with
like a bunch of low-level programming
like a bunch of low-level programming
because it's just pass by reference pass
because it's just pass by reference pass
by value it's just pass pointer or pass
by value it's just pass pointer or pass
value but yeah same
value but yeah same
thing yeah right that makes sense now
thing yeah right that makes sense now
well was re an issue but great actually
well was re an issue but great actually
great everything works okay thank you
great everything works okay thank you
very much I'll just uh see you going
very much I'll just uh see you going
with your yeah and bet I'm only on here
with your yeah and bet I'm only on here
for another 20 minutes so I'm just going
for another 20 minutes so I'm just going
to finish this stuff up because then
to finish this stuff up because then
I've got to do um I got some meetings
I've got to do um I got some meetings
and stuff to
and stuff to
do all right sure thanks say hi hello
do all right sure thanks say hi hello
yeah hi bet I'll be back on chatting
yeah hi bet I'll be back on chatting
with people a whole bunch probably by
with people a whole bunch probably by
end of week but uh I've got uh I've got
end of week but uh I've got uh I've got
two contracts basically at the moment
two contracts basically at the moment
that are taking up some time you should
that are taking up some time you should
do those yeah and I was hoping I I was
do those yeah and I was hoping I I was
going to try to do some stuff in the
going to try to do some stuff in the
evening yesterday but I pretty much just
evening yesterday but I pretty much just
completely crashed out because I've been
completely crashed out because I've been
just doing this non-stop for weeks so I
just doing this non-stop for weeks so I
had to just I had to just take a day and
had to just I had to just take a day and
like not do this for a bit yep I've been
like not do this for a bit yep I've been
sleeping the whole
sleeping the whole
time ran my first 10K since pneumonia
time ran my first 10K since pneumonia
and played some games that's about it
and played some games that's about it
nice I I did a lot of vigorous exercise
nice I I did a lot of vigorous exercise
while being sick and that wasn't that
while being sick and that wasn't that
was not generally not a smart
was not generally not a smart
idea stop trying to power through yeah
idea stop trying to power through yeah
generally get that's kind of dumb yeah
generally get that's kind of dumb yeah
well still uh the kid wanted to play
well still uh the kid wanted to play
outside so you know running around the
outside so you know running around the
yard with him in a sled dragging him
yard with him in a sled dragging him
around for an hour literally running
around for an hour literally running
yeah the neighbor the neighbors watch me
yeah the neighbor the neighbors watch me
like have a
freak dangerous man plays with his kid
freak dangerous man plays with his kid
out side in
out side in
snow yeah okay just do it do it for the
snow yeah okay just do it do it for the
falls all right I
falls all right I
am and I will see you around
am and I will see you around
bye okay we
will okay so the K is insane here right
will okay so the K is insane here right
this is the issue
this is the issue
hopefully I can make it a PR that'd be
great see
you does this K blow up instantly or not
you does this K blow up instantly or not
instantly
I should commit these either way
I should also fix
I should also fix
humanoid phc while I'm at
it I messed this
it I messed this
up okay we'll not commit this one we'll
up okay we'll not commit this one we'll
do the rest though
did I miss
anything I think so
yeah so we still got crazy KL
here me
see okay we have episode return
see okay we have episode return
here and then
here and then
length policy
loss yeah so K's
crazy I wonder if Kale's crazy because
crazy I wonder if Kale's crazy because
actions are
crazy for
last thing I'm going to try right
here for
now it's still the K's still
bad it's
annoying for
okay so for folks watching I'm going to
okay so for folks watching I'm going to
uh go for a meeting and then I will be
uh go for a meeting and then I will be
back later in the afternoon here if
back later in the afternoon here if
you're interested in following any of
you're interested in following any of
this stuff all open source R Lev check
this stuff all open source R Lev check
out puffer doai follow the project here
out puffer doai follow the project here
we have lots of demos uh start the
we have lots of demos uh start the
project on GitHub to help me out it's
project on GitHub to help me out it's
free really helps and you can join the
free really helps and you can join the
Discord if you're interested in getting
Discord if you're interested in getting
involved got some articles on the blog
involved got some articles on the blog
here and there's more on my X where I
here and there's more on my X where I
post a few additional ones that you
post a few additional ones that you
can't find anywhere else thank you and
can't find anywhere else thank you and
back in

Kind: captions
Language: en
got about an hour to do a bit of work
got about an hour to do a bit of work
here before uh next meeting and
thing let me see what we can do
thing let me see what we can do
here let me just make sure I have the
here let me just make sure I have the
meeting time
meeting time
correct as
well not showing up on my calendar is
well not showing up on my calendar is
not
great where's the damn Cal invite
hang on let me fig let me figure this
hang on let me fig let me figure this
out real quick and then we'll get
out real quick and then we'll get
started on what I got to do here um yeah
started on what I got to do here um yeah
that's bizarre I don't see the invite at
that's bizarre I don't see the invite at
all
whatever all right
so here's what we're going to
so here's what we're going to
do we're going to try to get this thing
do we're going to try to get this thing
to render
correctly I'm going to go
grab from the latest
phc and try to get this Isaac gem
phc and try to get this Isaac gem
simulator to render correctly and to
simulator to render correctly and to
behave for
data assets youf so this is just going
data assets youf so this is just going
to
be
for
e e
wait are we have to run this
from right
okay so here we have this
done humanoid render and
I
see how long is this 500 this is
actually substantial
I guess what we
do humanoid render
do humanoid render
m for
3 point
motion
file need that I still got few minutes
file need that I still got few minutes
here physics engine device type yada
here physics engine device type yada
yada yada
yada uh this thing has a bunch of
parameters
simrs
simrs
same config Sim prams equal
same config Sim prams equal
none okay so I think we can just set
none okay so I think we can just set
this
this
up basically as is
we
do actually is this the same signature
do actually is this the same signature
device this is literally the same
device this is literally the same
signature so we're just going to paste
signature so we're just going to paste
this in
okay unexpected value
motion oh hold on environment
phcn now I see so this is going to be
phcn now I see so this is going to be
Puffer
phcn e
we'll see how to get this to
render should probably have some render
render should probably have some render
settings
so we do 32 M's
what's
this
this D has no attribute
EXP for
this just not in the config
let's just put it in the config real
quick e
no attribute render
okay vender
hey
hey
welcome I just see
that I guess I saw that uh four minutes
that I guess I saw that uh four minutes
late but welcome
okay driver render
mode I think it's native right
whoa look at
that I don't know why we got camera
that I don't know why we got camera
Shake as
well but that's pretty nice
now let me
now let me
see if I can figure some other stuff out
see if I can figure some other stuff out
since that didn't take very long
oh wait k said there was a
oh wait k said there was a
fix for the end that he made
fix for the end that he made
maybe there's a fix that I
maybe there's a fix that I
need 12 hours ago fix po binding bug
need 12 hours ago fix po binding bug
that sounds
promising for
it looks like the
um move this in
end yeah so this is all going to have to
end yeah so this is all going to have to
get moved into the new one
I'll just pour His fixes in may as
well oops let's go to
well oops let's go to
C there we go
okay there's no default for this so
okay there's no default for this so
we're fine
yeah he had Deport this because my
yeah he had Deport this because my
stupid ass forgot to commit
it think we already have this
right yeah he just copied this in this
right yeah he just copied this in this
is
is
fine a reset also updates hang on
oh wait no I did this look
self-observations I think this is fine
self
terminals all that's
terminals all that's
fine this one's already
done action clipping he says is
done action clipping he says is
important
the end clip actions probably the end
the end clip actions probably the end
Clips actions
right so clip actions clip
okay self.
tick
tick
fine and then here was the bug
fine and then here was the bug
fix
terminals for. zer
okay this is fine and then clip actions
sh
just that Discord we're
just that Discord we're
good reviewing PR no this is not PR this
good reviewing PR no this is not PR this
is um collaboration slash uh work
is um collaboration slash uh work
with on a gymnasium not gymnasium Isaac
with on a gymnasium not gymnasium Isaac
gym stuff so this is the simulated the
gym stuff so this is the simulated the
High Fidelity control work
High Fidelity control work
and yeah I'm working on this with
Kum the
actions this is so this is to a
actions this is so this is to a
different repo so I can't just PR
different repo so I can't just PR
it um
it um
yeah update up
yeah update up
stats ah and then this is in this demo
stats ah and then this is in this demo
looks like there is a little weird
weirdness
train uh yeah one second let me get this
train uh yeah one second let me get this
running and then I will do that just
running and then I will do that just
finish this
I doubt that this piece is needed I
I doubt that this piece is needed I
really really doubt it because I don't
really really doubt it because I don't
have layer Norm or anything in there yet
have layer Norm or anything in there yet
so this should be
fine and then I was told
that I was told the adversarial reward
that I was told the adversarial reward
breaks thing so I'll just comment
breaks thing so I'll just comment
this
loss I'll comment
loss I'll comment
this and then I will comment this
yeah go ahead if you have uh questions
yeah go ahead if you have uh questions
on end I will take a quick look
red in development and Discord got
red in development and Discord got
you that is why I'm
streaming well we'll see what
streaming well we'll see what
information you have in here
information you have in here
first what thread is
first what thread is
it this
it this
one I can't access any c variables from
one I can't access any c variables from
my
python okay so lean key is also a very
python okay so lean key is also a very
new programmer
new programmer
so uh he will he is very helpful but
so uh he will he is very helpful but
take whatever he says with you know a
take whatever he says with you know a
grain of may or may not be
correct if you need any networking done
correct if you need any networking done
though he's your
guy what are you trying to access
next op
step so yeah so this is a pointer right
step so yeah so this is a pointer right
so whenever you call step it'll put the
so whenever you call step it'll put the
data into here and then it should just
data into here and then it should just
automatically be in the python end
automatically be in the python end
because this is the same memory address
because this is the same memory address
so you know it's it's the same memory in
so you know it's it's the same memory in
Python and in C so if you change it in
Python and in C so if you change it in
in Python it will also change in C
what are you trying to
access when I try to step my end in a
access when I try to step my end in a
python file I'm going to guess and I
python file I'm going to guess and I
know what the issue
is but I don't see where you have your
is but I don't see where you have your
command that you ran with the
command that you ran with the
error where's the error
OBS and next
OBS and next
OBS inial
OBS yeah you I mean uh I can jump in the
OBS yeah you I mean uh I can jump in the
in the Discord quick I think you'll be
in the Discord quick I think you'll be
your voice you'll probably have voice on
your voice you'll probably have voice on
stream if you care but uh I I can try to
stream if you care but uh I I can try to
mute that if you prefer I don't
mute that if you prefer I don't
know hey hey how's it going so what are
know hey hey how's it going so what are
you trying to access like what what's
you trying to access like what what's
going on here uh yeah just let let me
going on here uh yeah just let let me
close the the string cuz yeah okay great
close the the string cuz yeah okay great
um so I'm I'm trying to uh basically
um so I'm I'm trying to uh basically
step my amp this I thought at first it
step my amp this I thought at first it
was an access issue but it isn't really
was an access issue but it isn't really
now I figured out what's happening and
now I figured out what's happening and
when I reset my environment and I
when I reset my environment and I
collect the observations so I do
collect the observations so I do
observations data equals f. reset and
observations data equals f. reset and
then later I do next OBS data equals m.
then later I do next OBS data equals m.
step right and the the observations gets
step right and the the observations gets
overwritten by the next Ops basically oh
overwritten by the next Ops basically oh
okay can you paste the python file yes
okay can you paste the python file yes
sure I'm pretty sure I know what you're
sure I'm pretty sure I know what you're
doing
um yeah one second
uh I'll just paste it in uh in my thread
uh I'll just paste it in uh in my thread
yeah
yeah
yeah
um so yeah line eight this is my OBS and
um so yeah line eight this is my OBS and
then I run the environment for 100 steps
then I run the environment for 100 steps
or whatever and then at line 32 when I
or whatever and then at line 32 when I
get to the break point hold on let me
get to the break point hold on let me
see oh sorry let me
see oh sorry let me
read next
OBS no no no I meant paste the well I
OBS no no no I meant paste the well I
can check this but I meant paste the pi
can check this but I meant paste the pi
CPR that
CPR that
file the actual environment binding file
file the actual environment binding file
cuz that's that's a python file right
cuz that's that's a python file right
pcpr yeah yeah I'll do that yeah I my
pcpr yeah yeah I'll do that yeah I my
guess is you're overwriting the Ops
guess is you're overwriting the Ops
buffer in a way but you're not
buffer in a way but you're not
understanding yeah
probably you're probably just
probably you're probably just
misunderstanding the reference versus
misunderstanding the reference versus
value let me
see uh this actually looks fine let see
see uh this actually looks fine let see
so you do you init the
so you do you init the
buff pass these in
buff pass these in
p and then you reset and return
p and then you reset and return
this okay and then
this okay so this looks fine to
me let me see
see if you did anything weird in your
see if you did anything weird in your
test file it'd be very difficult to do
test file it'd be very difficult to do
that
though no because you're
not yeah cuz you're not doing anything
not yeah cuz you're not doing anything
here you're not trying to up like if you
here you're not trying to up like if you
try to update this in place you can
try to update this in place you can
break things but you didn't do
that then I'll look at your code
where is it oh You' already pasted it up
where is it oh You' already pasted it up
there my bad me
see
weird what the heck is
this so You' got
this observations
m c in I Nal
Z and then you pass num
Z and then you pass num
agents there's num
agents there's num
agents and num agents is given in the
agents and num agents is given in the
init function uh it's a list of yeah for
init function uh it's a list of yeah for
every environment there's x amount of
every environment there's x amount of
Agents
so that should be fine you might want to
so that should be fine you might want to
print this number out to make sure that
print this number out to make sure that
it's doing what you expect but other
it's doing what you expect but other
than that that looks fine actions and
than that that looks fine actions and
and then you get widths I Heights I yes
and then you get widths I Heights I yes
this is all correct as far as I can see
step and what's happening to your
step and what's happening to your
observations like what what are you
observations like what what are you
saying is happening with your
saying is happening with your
observations um so if you go back to the
observations um so if you go back to the
CPR test python
CPR test python
file um in the performance test
file um in the performance test
basically I so the end let's so so to be
basically I so the end let's so so to be
clear the entire environment is uh
clear the entire environment is uh
stepping fine and running fine it's just
stepping fine and running fine it's just
that the observations that I'm getting
that the observations that I'm getting
back from m. reset at line 8 is being
back from m. reset at line 8 is being
overwritten uh as I step my environment
overwritten uh as I step my environment
along the way and so when at the end I
along the way and so when at the end I
just want to look at OBS the variable
just want to look at OBS the variable
that I uh got at line eight is just it's
that I uh got at line eight is just it's
not the original observations anymore
not the original observations anymore
it's just the the the latest observation
it's just the the the latest observation
that is yeah this one here will get
that is yeah this one here will get
overwritten that's correct oh yeah so
overwritten that's correct oh yeah so
the reason for that right is this is a
the reason for that right is this is a
pointer to the buffer this is what this
pointer to the buffer this is what this
is giving you is this is just giving you
is giving you is this is just giving you
the memory that has the stuff in it so
the memory that has the stuff in it so
that's expected
that's expected
Behavior because oh you see okay so if
Behavior because oh you see okay so if
you want so so how would you do it if
you want so so how would you do it if
you wanted to fill a replay buffer for
you wanted to fill a replay buffer for
example well when you fill the replay
example well when you fill the replay
buffer you're going to put it into a
buffer you're going to put it into a
different spot
different spot
right like a replay buffer is going to
right like a replay buffer is going to
be a separate piece of memory
be a separate piece of memory
right oh okay okay sorry that's that's
right oh okay okay sorry that's that's
so dumb that's so dumb do you understand
so dumb that's so dumb do you understand
why I have it this way because if I gave
why I have it this way because if I gave
you it if I gave you back a copy and
you it if I gave you back a copy and
then you put it into your replay buffer
then you put it into your replay buffer
you copied the data twice and with how
you copied the data twice and with how
fast her environments go that's like 10
fast her environments go that's like 10
gigabytes of copies a second that it
gigabytes of copies a second that it
could
could
be yeah I I get it because I thought
be yeah I I get it because I thought
that when you define a variable like
that when you define a variable like
this at line eight for example I thought
this at line eight for example I thought
it was creating a new no spot memory
it was creating a new no spot memory
somewhere no no no no it's not so you're
somewhere no no no no it's not so you're
actually the second person who's brought
actually the second person who's brought
this up I actually don't know what I
this up I actually don't know what I
should do to make this clearer if you
should do to make this clearer if you
have any ideas I'm all years you can do
have any ideas I'm all years you can do
I mean I've I've I've clearly
I mean I've I've I've clearly
articulated exactly what's happening
articulated exactly what's happening
people just don't understand because
people just don't understand because
they're not used to it I think well I if
they're not used to it I think well I if
we have something for the docs that
we have something for the docs that
would have been useful to have in there
would have been useful to have in there
I'd like to include something because
I'd like to include something because
the thing is it has to stay this way
the thing is it has to stay this way
right this is I agree it's great yeah
right this is I agree it's great yeah
because this is where a lot of the
because this is where a lot of the
performance come from comes from um yeah
performance come from comes from um yeah
I've been confused myself at how it
I've been confused myself at how it
works with updating a thing and then not
works with updating a thing and then not
understanding how it's it's just it's
understanding how it's it's just it's
the way to look at it it's just shared
the way to look at it it's just shared
memory right it's just that you're not
memory right it's just that you're not
making a new object it's a pointer right
making a new object it's a pointer right
so when you get back an array in Python
so when you get back an array in Python
secretly what that is it's a pointer
secretly what that is it's a pointer
it's a reference to a thing in memory
it's a reference to a thing in memory
right the only time you don't have a
right the only time you don't have a
reference in Python is Primitives like
reference in Python is Primitives like
an integer or whatever then you're
an integer or whatever then you're
getting the value but otherwise you're
getting the value but otherwise you're
just getting a reference so all I did
just getting a reference so all I did
was hand you the reference without
was hand you the reference without
making a copy of the data so yeah if you
making a copy of the data so yeah if you
update if you update OBS there by the
update if you update OBS there by the
way then it's going to change the data
way then it's going to change the data
in the C it's the same way like how you
in the C it's the same way like how you
know you change actions and then you
know you change actions and then you
don't call step on actions right you
don't call step on actions right you
just call step well I guess you do call
just call step well I guess you do call
step on actions here but the C
step on actions here but the C
environment doesn't need actions right
environment doesn't need actions right
the internal C environment doesn't need
the internal C environment doesn't need
actions it's because it's a reference
actions it's because it's a reference
right everything is just done by
right everything is just done by
reference so we don't copy the data a
reference so we don't copy the data a
bunch of times because this is where
bunch of times because this is where
most of the performance loss comes from
most of the performance loss comes from
and in fact
and in fact
with the way that we do our stuff here
with the way that we do our stuff here
uh we can do all of vectorization with
uh we can do all of vectorization with
zero copies so this is like the zero
zero copies so this is like the zero
copy optimization so the end is
copy optimization so the end is
literally simulating data into the place
literally simulating data into the place
that it needs to be on the main
that it needs to be on the main
thread okay and it can do that multi
thread okay and it can do that multi
processed yeah that's that's much
processed yeah that's that's much
clearer now um as for your question
clearer now um as for your question
uh I mean I've went through the website
uh I mean I've went through the website
multiple times trying to find something
multiple times trying to find something
I guess if you would put anything on the
I guess if you would put anything on the
prefer. a doc uh HTML uh file I don't
prefer. a doc uh HTML uh file I don't
know I've looked at the vectorized
know I've looked at the vectorized
environment looking if so I don't know
environment looking if so I don't know
somewhere in there maybe just if you
somewhere in there maybe just if you
really want people to it's
really want people to it's
probably the native docs I guess is
probably the native docs I guess is
because we have like the making your own
because we have like the making your own
environment
environment
thing Doc so probably like
here we should explain this a little bit
here we should explain this a little bit
yeah
yeah
okay
okay
um but yeah I mean thank you very much
um but yeah I mean thank you very much
obviously that's very dumb for my UT no
obviously that's very dumb for my UT no
no no it's unintuitive if you're used to
no no it's unintuitive if you're used to
I mean this is the thing python obscures
I mean this is the thing python obscures
stuff like this so it's normal for you
stuff like this so it's normal for you
to be confused by this uh isue okay
to be confused by this uh isue okay
here's the
here's the
explanation copy message
explanation copy message
link I'll I'll just DM it to you
okay so basically in so okay if I need a
okay so basically in so okay if I need a
rep buffer there's no problem but then
rep buffer there's no problem but then
yeah in fact it's faster because we
yeah in fact it's faster because we
don't have the we don't have the
don't have the we don't have the
Redundant copy CU now if if I push the
Redundant copy CU now if if I push the
next observation and rewards into a
next observation and rewards into a
queue or anything this will get copied
queue or anything this will get copied
automatically right it depends so if you
automatically right it depends so if you
append the current object to a list then
append the current object to a list then
it will not but let's say that your
it will not but let's say that your
replay buffer is is your replay buffer a
replay buffer is is your replay buffer a
big tensor or is it going to be a
list it's usually a big
tensor well the way I used to do it
tensor well the way I used to do it
actually you know it's just like a class
actually you know it's just like a class
with the D DQ uh from python but yeah so
with the D DQ uh from python but yeah so
in that case then you'll have to dot
in that case then you'll have to dot
copy if you do dot copy on the array
copy if you do dot copy on the array
then you'll get new memory um but like
then you'll get new memory um but like
the way that we have it here like a
the way that we have it here like a
really fast way to do a buffer is like
really fast way to do a buffer is like
to just put everything into a tenser
to just put everything into a tenser
sometimes you have a tensor with a Time
sometimes you have a tensor with a Time
index um so in that case if you just
index um so in that case if you just
assign this tensor or this array that we
assign this tensor or this array that we
give you to your tensor then it gets
give you to your tensor then it gets
copied so basically you're running into
copied so basically you're running into
python memory uh
python memory uh
semantics okay and is the yeah is the
semantics okay and is the yeah is the
copy mechanism due to the tensor the way
copy mechanism due to the tensor the way
the tensors are built or is it it's due
the tensors are built or is it it's due
to the way python is built so in Python
to the way python is built so in Python
just by default except for The
just by default except for The
Primitives pretty much everything is an
Primitives pretty much everything is an
object right so like if you pass a list
object right so like if you pass a list
into a function and then you add stuff
into a function and then you add stuff
to the list right you don't have to
to the list right you don't have to
return the list like the list is going
return the list like the list is going
to get updated as well yeah same thing
to get updated as well yeah same thing
so we're giving you this object which is
so we're giving you this object which is
this like pointer to this array if you
this like pointer to this array if you
put it into a list we're not it's not
put it into a list we're not it's not
going to make a copy it's just going to
going to make a copy it's just going to
put the reference in but if you assign
put the reference in but if you assign
the data to a different array then think
the data to a different array then think
about it right the array is some piece
about it right the array is some piece
of data I have this other piece of data
of data I have this other piece of data
so it has to copy if you call. copy it
so it has to copy if you call. copy it
will also copy
will also copy
okay okay yeah I get it yeah thanks and
okay okay yeah I get it yeah thanks and
if you're confused then all you do is
if you're confused then all you do is
you like put a breakpoint before put a
you like put a breakpoint before put a
breakpoint after see if the you know the
breakpoint after see if the you know the
original
original
changes yeah okay that's fine yeah
changes yeah okay that's fine yeah
thanks so this is yeah python copy
thanks so this is yeah python copy
semantics being confusing um they're
semantics being confusing um they're
less confusing if you're familiar with
less confusing if you're familiar with
like a bunch of low-level programming
like a bunch of low-level programming
because it's just pass by reference pass
because it's just pass by reference pass
by value it's just pass pointer or pass
by value it's just pass pointer or pass
value but yeah same
value but yeah same
thing yeah right that makes sense now
thing yeah right that makes sense now
well was re an issue but great actually
well was re an issue but great actually
great everything works okay thank you
great everything works okay thank you
very much I'll just uh see you going
very much I'll just uh see you going
with your yeah and bet I'm only on here
with your yeah and bet I'm only on here
for another 20 minutes so I'm just going
for another 20 minutes so I'm just going
to finish this stuff up because then
to finish this stuff up because then
I've got to do um I got some meetings
I've got to do um I got some meetings
and stuff to
and stuff to
do all right sure thanks say hi hello
do all right sure thanks say hi hello
yeah hi bet I'll be back on chatting
yeah hi bet I'll be back on chatting
with people a whole bunch probably by
with people a whole bunch probably by
end of week but uh I've got uh I've got
end of week but uh I've got uh I've got
two contracts basically at the moment
two contracts basically at the moment
that are taking up some time you should
that are taking up some time you should
do those yeah and I was hoping I I was
do those yeah and I was hoping I I was
going to try to do some stuff in the
going to try to do some stuff in the
evening yesterday but I pretty much just
evening yesterday but I pretty much just
completely crashed out because I've been
completely crashed out because I've been
just doing this non-stop for weeks so I
just doing this non-stop for weeks so I
had to just I had to just take a day and
had to just I had to just take a day and
like not do this for a bit yep I've been
like not do this for a bit yep I've been
sleeping the whole
sleeping the whole
time ran my first 10K since pneumonia
time ran my first 10K since pneumonia
and played some games that's about it
and played some games that's about it
nice I I did a lot of vigorous exercise
nice I I did a lot of vigorous exercise
while being sick and that wasn't that
while being sick and that wasn't that
was not generally not a smart
was not generally not a smart
idea stop trying to power through yeah
idea stop trying to power through yeah
generally get that's kind of dumb yeah
generally get that's kind of dumb yeah
well still uh the kid wanted to play
well still uh the kid wanted to play
outside so you know running around the
outside so you know running around the
yard with him in a sled dragging him
yard with him in a sled dragging him
around for an hour literally running
around for an hour literally running
yeah the neighbor the neighbors watch me
yeah the neighbor the neighbors watch me
like have a
freak dangerous man plays with his kid
freak dangerous man plays with his kid
out side in
out side in
snow yeah okay just do it do it for the
snow yeah okay just do it do it for the
falls all right I
falls all right I
am and I will see you around
am and I will see you around
bye okay we
will okay so the K is insane here right
will okay so the K is insane here right
this is the issue
this is the issue
hopefully I can make it a PR that'd be
great see
you does this K blow up instantly or not
you does this K blow up instantly or not
instantly
I should commit these either way
I should also fix
I should also fix
humanoid phc while I'm at
it I messed this
it I messed this
up okay we'll not commit this one we'll
up okay we'll not commit this one we'll
do the rest though
did I miss
anything I think so
yeah so we still got crazy KL
here me
see okay we have episode return
see okay we have episode return
here and then
here and then
length policy
loss yeah so K's
crazy I wonder if Kale's crazy because
crazy I wonder if Kale's crazy because
actions are
crazy for
last thing I'm going to try right
here for
now it's still the K's still
bad it's
annoying for
okay so for folks watching I'm going to
okay so for folks watching I'm going to
uh go for a meeting and then I will be
uh go for a meeting and then I will be
back later in the afternoon here if
back later in the afternoon here if
you're interested in following any of
you're interested in following any of
this stuff all open source R Lev check
this stuff all open source R Lev check
out puffer doai follow the project here
out puffer doai follow the project here
we have lots of demos uh start the
we have lots of demos uh start the
project on GitHub to help me out it's
project on GitHub to help me out it's
free really helps and you can join the
free really helps and you can join the
Discord if you're interested in getting
Discord if you're interested in getting
involved got some articles on the blog
involved got some articles on the blog
here and there's more on my X where I
here and there's more on my X where I
post a few additional ones that you
post a few additional ones that you
can't find anywhere else thank you and
can't find anywhere else thank you and
back in
