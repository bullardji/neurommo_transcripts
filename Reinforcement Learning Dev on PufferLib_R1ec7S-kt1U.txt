Kind: captions
Language: en
Okay, we should be live
Okay, we should be live
here.
here.
Hi. So, uh today we are going to
Hi. So, uh today we are going to
do a fair bit of experiment
do a fair bit of experiment
analysis. We are going to
do probably some work on the
do probably some work on the
blogs. Just going to be chill work day
blogs. Just going to be chill work day
working on release.
We'll see how the experiments have gone
We'll see how the experiments have gone
overnight and uh we will probably start
overnight and uh we will probably start
with launching some new
with launching some new
ones. Pop out the chat real quick
ones. Pop out the chat real quick
because I forgot to do
that. One
second chat.
So, we're going to start right here.
Two
sweeps and on real time
sweeps and on real time
here. This
one. There we go. 17 18 seconds. So,
one. There we go. 17 18 seconds. So,
we're sub 20. This is what we want to
we're sub 20. This is what we want to
see.
see.
And this other sweep I believe is
not 23. So it's pretty interesting that
not 23. So it's pretty interesting that
just preventing this thing from doing
just preventing this thing from doing
multiple
epochs has a pretty big effect. So I
epochs has a pretty big effect. So I
think that this means that probably
think that this means that probably
uh our sensitivity
uh our sensitivity
to our sensitivity for sweeping discrete
to our sensitivity for sweeping discrete
variables is probably
variables is probably
substantially too
low. These both on the same
machine actually. Hang on. That's a good
machine actually. Hang on. That's a good
point.
point.
Let me go check what machines I launched
Let me go check what machines I launched
these on because I might have launched
these on because I might have launched
one on a faster machine than the other,
one on a faster machine than the other,
which would be uh a bad mistake on my
part. I don't know why I did
email. We have this one.
We
The obvious next logical experiment
here. Trying to think which machine I
here. Trying to think which machine I
want to use for this.
status real quick.
So this is up to
date. It also be up to date.
on power
two.
Any specific reason why you pick Neptune
Any specific reason why you pick Neptune
over ML Flow? I haven't tried ML Flow.
over ML Flow? I haven't tried ML Flow.
Um, we support both WB and
Um, we support both WB and
Neptune. ML Flow
good. They have like almost the exact
good. They have like almost the exact
same landing page.
same landing page.
That's
funny. These like these all look like
funny. These like these all look like
clones of each
other. Is there anything that you like
other. Is there anything that you like
about this one specifically?
about this one specifically?
So, Neptune, I like um I like their
So, Neptune, I like um I like their
dashboard views for one. I like that I
dashboard views for one. I like that I
can just define a whole bunch of
can just define a whole bunch of
different plots here and then apply them
different plots here and then apply them
to any experiment really easily. I also
to any experiment really easily. I also
like their download API. The fact that
like their download API. The fact that
they just give you all your data as a
they just give you all your data as a
SQL table is really really nice. So, I
SQL table is really really nice. So, I
don't use it that often.
Um, and it's also a max of 200 points
Um, and it's also a max of 200 points
per plot at the moment and uh should be
per plot at the moment and uh should be
bigger in the future. Only thing I'm not
bigger in the future. Only thing I'm not
sure about actually I think they replied
sure about actually I think they replied
to
this if I check
this if I check
here I think they
here I think they
replied cuz there was a question about
replied cuz there was a question about
open
source closed access for new
So, actually, I might be forced to ditch
So, actually, I might be forced to ditch
this anyways because
this anyways because
um they don't know if
um they don't know if
uh if they're going to have an open
uh if they're going to have an open
source thing or not. So, if I have to
source thing or not. So, if I have to
ditch it, I have to ditch it.
It's kind of crazy for them to like 5x
It's kind of crazy for them to like 5x
their pricing and delete their free tier
their pricing and delete their free tier
if that's what they're going to do.
if that's what they're going to do.
Starting $250 a month is just
Starting $250 a month is just
dumb. So if they want to do that, they
dumb. So if they want to do that, they
will uh they'll go bankrupt, but that's
will uh they'll go bankrupt, but that's
up to
them. Mlow is is it all open source
them. Mlow is is it all open source
then? because all of these different
then? because all of these different
companies have on-prem, but it's not
companies have on-prem, but it's not
actually open source, and they charge
actually open source, and they charge
you a ton for
you a ton for
on-prem. Like, that's their most
on-prem. Like, that's their most
expensive
option. I do very much like Neptune's
option. I do very much like Neptune's
dashboards
thing. It's also kind of ridiculous how
thing. It's also kind of ridiculous how
many of these companies there are if you
many of these companies there are if you
think about it because like it's not a
think about it because like it's not a
big market at
big market at
all, right?
all, right?
like you're basically like relying on a
like you're basically like relying on a
few orgs to just massively overpay you
few orgs to just massively overpay you
and then fund your company. But I don't
and then fund your company. But I don't
know how the hell there's like in a
know how the hell there's like in a
space this small, there are like four or
space this small, there are like four or
five different different things. It's
five different different things. It's
kind of ridiculous. And how none of them
kind of ridiculous. And how none of them
are actually nailing it. Like they all
are actually nailing it. Like they all
write this really shitty web code that's
write this really shitty web code that's
just way too slow.
last place I interned out. We had two to
last place I interned out. We had two to
move from Wii because we got hit with
move from Wii because we got hit with
downright ridiculous fees.
downright ridiculous fees.
Yeah, I mean I want to have it's tough
Yeah, I mean I want to have it's tough
because I think wi is the biggest one
because I think wi is the biggest one
right now. So I have to have integration
right now. So I have to have integration
with that for uh for users.
I was going to do like Neptune as our
I was going to do like Neptune as our
default one actually because I think
default one actually because I think
it's substantially better, but we'll
it's substantially better, but we'll
have to see what they do with their next
have to see what they do with their next
release. Like if they make it no free
release. Like if they make it no free
tier
tier
um and $250 a month pricing, then like
um and $250 a month pricing, then like
even if I wanted to use it and would pay
even if I wanted to use it and would pay
for it, I still can't have it be the
for it, I still can't have it be the
default and puffer because that's just
default and puffer because that's just
downright stupid for an open source
downright stupid for an open source
library, right?
So, we'll see if they do that or not.
So, we'll see if they do that or not.
They have a good product.
They have a good product.
Um, it makes sense to have the free
Um, it makes sense to have the free
tier, I think, for this even if you like
tier, I think, for this even if you like
don't give a ton of data or like one
don't give a ton of data or like one
project or whatever. um because it'll be
project or whatever. um because it'll be
good for like individual use which is
good for like individual use which is
all I need for open source tier and then
all I need for open source tier and then
like it'll get bigger companies onto
like it'll get bigger companies onto
their platform because like people use
their platform because like people use
Puffer but that's up to
Puffer but that's up to
them
them
right I'm not going to endorse it at all
right I'm not going to endorse it at all
in the future if they do it
Okay. So, this is what I was doing
here. I'm going set the scale to be two.
here. I'm going set the scale to be two.
And then I'm going to run this sweep
again, Nvidia
again, Nvidia
drivers. There's so many like these
drivers. There's so many like these
little annoying pet
little annoying pet
quirks. It's just like why does this
quirks. It's just like why does this
stuff happen? Like why does just Docker
stuff happen? Like why does just Docker
forget that I have a
GPU? Driver library
mismatch. This can't
be Why Why do the drivers just do this?
I didn't update anything. It just
I didn't update anything. It just
randomly does this.
Really? I'll reboot the machine.
Hey,
Boxing. And we're waiting for this
Boxing. And we're waiting for this
machine to reboot so I can launch a job.
machine to reboot so I can launch a job.
container also Debian. No, we were doing
container also Debian. No, we were doing
um we've moved from Debian host in
um we've moved from Debian host in
Abuntu container to Abuntu host Abuntu
container. They're working on
container. They're working on
pre-release.
pre-release.
Yep. It's mostly we're doing experiments
Yep. It's mostly we're doing experiments
now. So, we're trying to speedrun
now. So, we're trying to speedrun
Breakout. We're trying to figure out
Breakout. We're trying to figure out
like what's the fastest possible
like what's the fastest possible
Breakout solve. That's going to be like
Breakout solve. That's going to be like
one of our demos because I want to do
one of our demos because I want to do
this thing basically where like you know
this thing basically where like you know
I just grab puffer lib and then I just
I just grab puffer lib and then I just
in one gif right I train a model on
in one gif right I train a model on
breakout I grab it and I evaluate it
As I said, I did a PR with changing the
As I said, I did a PR with changing the
name. I will go double check. Do you can
name. I will go double check. Do you can
you do you have a trainable model yet?
you do you have a trainable model yet?
Like do you have a model that does the
Like do you have a model that does the
end of in a way that you're happy with
end of in a way that you're happy with
or
no? Box is not coming back online
no? Box is not coming back online
yet. It was weird. Let me go double
yet. It was weird. Let me go double
check um with this box real
So, um, there's this really annoying
So, um, there's this really annoying
thing with modern desktop computers,
thing with modern desktop computers,
desktop motherboards. They don't turn on
desktop motherboards. They don't turn on
if you don't have a monitor plugged in.
if you don't have a monitor plugged in.
And I forgot to buy one of the dummy
And I forgot to buy one of the dummy
plugs that tricks it into thinking that
plugs that tricks it into thinking that
there is one plugged in. So,
there is one plugged in. So,
oops. It should come back on in a
oops. It should come back on in a
second. We'll
see. Nothing finds equilibri if you're
see. Nothing finds equilibri if you're
still here boxing.
still here boxing.
Um, I don't know. Maybe make the problem
simpler. You know, give it like a map
simpler. You know, give it like a map
with a bush and like two
agents. run a
agents. run a
sweep. It's a tough
sweep. It's a tough
problem. I think most humans fail that
problem. I think most humans fail that
problem.
So, works like a charm.
What the heck is wrong with
um I don't
understand how did it uninstall my
understand how did it uninstall my
drivers.
drivers.
Like, how is that a Yeah.
Makes no bloody sense that my server can
Makes no bloody sense that my server can
be fine one evening, nothing changes,
be fine one evening, nothing changes,
and in the morning Nvidia is just
and in the morning Nvidia is just
somehow not there. I don't have like
somehow not there. I don't have like
auto whatever update on
Somehow some library is missing that
Somehow some library is missing that
wasn't missing yesterday.
And now it
And now it
works.
works.
Weird. GPU driver would not
Weird. GPU driver would not
work. Well, this I actually I did have
work. Well, this I actually I did have
to do that cuz this needs specifically
to do that cuz this needs specifically
570 open. It says on the website like,
570 open. It says on the website like,
yep, you need 570. It'll like black
yep, you need 570. It'll like black
screen won't boot from motherboard if
screen won't boot from motherboard if
you do that. It needs 570 open
you do that. It needs 570 open
specifically. I somehow it uninstalled
specifically. I somehow it uninstalled
some library that it needed on the host
some library that it needed on the host
which makes no
which makes no
sense but whatever
This is going to fail because it needs
This is going to fail because it needs
uh my
uh my
key. Nope, I forgot I put it in an end
key. Nope, I forgot I put it in an end
variable. We're
good. Let's make sure that this actually
good. Let's make sure that this actually
finishes
running. This should give us decent
running. This should give us decent
speedun.
So, it would have to do 60 million steps
So, it would have to do 60 million steps
at 4 million SPS to get
at 4 million SPS to get
um 15 second
solve. Okay, we'll let that be.
Okay, so breakout speedrun probably will
Okay, so breakout speedrun probably will
be in a decent enough spot. I think
be in a decent enough spot. I think
um there like a few more params we can
um there like a few more params we can
sweep here and there. We'll get a couple
sweep here and there. We'll get a couple
more of these in per day. That's good.
more of these in per day. That's good.
Let's look at the rest of stuff. I did a
Let's look at the rest of stuff. I did a
draft for protein yesterday.
draft for protein yesterday.
We have this box here that we can run
We have this box here that we can run
and run extra stuff on as well. This one
here.
Oops. Okay. Okay, so we did draft a
Oops. Okay. Okay, so we did draft a
protein. We haven't drafted new M's yet.
protein. We haven't drafted new M's yet.
That's going to be a lot of like assets.
That's going to be a lot of like assets.
Algorithm improvements are pretty
Algorithm improvements are pretty
experiment heavy. Okay.
remaining
questions. Okay, so we're answering this
questions. Okay, so we're answering this
right
now. Priority
sweep. We could work in the
sweep. We could work in the
um the other prioritized replay
um the other prioritized replay
variables,
variables,
right? The sweeps. just have everything
right? The sweeps. just have everything
in the sweep
in the sweep
really. It shouldn't be an issue to have
really. It shouldn't be an issue to have
a ton of variables in the sweep provided
a ton of variables in the sweep provided
that
that
um they're continuous. I think
um they're continuous. I think
continuous bars in sweep
continuous bars in sweep
generally is pretty much
fine. And I guess
fine. And I guess
technically technically you need like
technically technically you need like
more and more samples to
more and more samples to
rank, but I haven't seen any big issues
yet. We can definitely do something
yet. We can definitely do something
about that. I think that that's probably
about that. I think that that's probably
what we should do today is try to get
what we should do today is try to get
some really killer maze
some really killer maze
sweep. Get like a baseline on maze and
sweep. Get like a baseline on maze and
then get some really killer maze sweep.
then get some really killer maze sweep.
Yeah, let's do that.
Okay, so this is the crazy sweep
here. Got real
here. Got real
time. And we got to just go pick one of
time. And we got to just go pick one of
these things.
Purple one is
good. And I really wish there were an
good. And I really wish there were an
easier way to just click the damn thing
easier way to just click the damn thing
that you
want. Just add a filter maybe.
This one's not as good actually as the
This one's not as good actually as the
other
other
ones. This is the one that's really
ones. This is the one that's really
quite
good. 0.9
like this one
like this one
maybe LSTM
maybe LSTM
question. What happens if the number of
question. What happens if the number of
consecutive time steps per
consecutive time steps per
agent per batch is less than BPT
agent per batch is less than BPT
horizon? You have num
horizon? You have num
m and effectively only get
uh it should break is what should
uh it should break is what should
happen. It should give you an error of
happen. It should give you an error of
some variety. And in fact in the latest
some variety. And in fact in the latest
versions I actually I have an auto
versions I actually I have an auto
option. So like let's say that you set
option. So like let's say that you set
numbum ms and uh batch size then it
numbum ms and uh batch size then it
should autocalc bt horizon or if you set
should autocalc bt horizon or if you set
bp horizon and ms it should autocal
bp horizon and ms it should autocal
batch size. I'm trying to make robust
batch size. I'm trying to make robust
ways to do this. But generally what
ways to do this. But generally what
we've done with this update is we've
we've done with this update is we've
given up a little bit of the flexibility
given up a little bit of the flexibility
of um the previous batching system in
of um the previous batching system in
order to enable all the advantage
order to enable all the advantage
filtering stuff that we do now. But that
filtering stuff that we do now. But that
has to operate on the level of
has to operate on the level of
trajectory segments. It's really worth
trajectory segments. It's really worth
it though from what we can see.
Okay. So, this is
Okay. So, this is
90% on mazes.
This is a very good policy.
Big bash.
is 250
is 250
mil 55 mil. They're pretty good.
mil 55 mil. They're pretty good.
One update
puck. Anything
puck. Anything
else? I think that's it.
Cool. So, this is a 3minut run. 1.4 mil
Cool. So, this is a 3minut run. 1.4 mil
SPS for a 2.2 million parameter model is
SPS for a 2.2 million parameter model is
amazing. And we'll see if this does
amazing. And we'll see if this does
anything. We
have this guy. No, this
guy go
Be right back. All this runs.
I'm just merging latest dev. Did you
I'm just merging latest dev. Did you
delete demo.py? Yes. You use clean puff
delete demo.py? Yes. You use clean puff
RL the same way you would have used
RL the same way you would have used
demo.py before.
So this doesn't
reproy. We get
reproy. We get
75. We don't get
90. Did I miss a parameter?
So, this does have some noise in
So, this does have some noise in
it, but
it, but
um yeah, not fully reproing is not
um yeah, not fully reproing is not
great.
I'm sure this is still a decent policy,
I'm sure this is still a decent policy,
right?
Load model
path. Wonder if it eventually gets out.
path. Wonder if it eventually gets out.
Yep. Oh, that's actually a very solid
Yep. Oh, that's actually a very solid
policy. Holy, look at the
policy. Holy, look at the
exploration. It doesn't have perfect
exploration. It doesn't have perfect
memory,
memory,
but it does. There's just this getting
but it does. There's just this getting
like stuck
thing. Yeah, that's crazy
good. It does get stuck in weird ways
good. It does get stuck in weird ways
occasionally.
This is
This is
bizarre in particular. and put Aaron on
bizarre in particular. and put Aaron on
that maybe.
What are the uh the clip
cos for Yes.
So wait this importance
thing we clip the importance
I can do like 0 to five uniform, right?
Now you have all your priority
coefficients. this up with gamma
lambda not sweep. Oh yeah. Did it was it
lambda not sweep. Oh yeah. Did it was it
one update
one update
epoch? That could totally be it, right?
Update
epoch one. Okay, that's not it.
Yeah. So, we're going to go to this box
Yeah. So, we're going to go to this box
now and we're going to
now and we're going to
sweep going to sweep grid. I
believe total time steps goes
believe total time steps goes
to 550 mil to 600 mil.
batch
batch
size. Do I have this on sweep or
not? The BPT Horizon gets swept.
The batch size should be auto.
Guess this is going to be proper grid.
Guess this is going to be proper grid.
Okay.
Make sure that this
Make sure that this
solves the
meantime. How's our breakout
going? Already 29
experiments. Pretty
good. We got
good. We got
23 with I don't know if these are full
23 with I don't know if these are full
solve
solve
scores, but this is pretty decent
scores, but this is pretty decent
looking.
looking.
We're getting these shorter
runs. Take a while to
runs. Take a while to
see. Okay, so that's uh two experiments
see. Okay, so that's uh two experiments
launched. We've got a full sweep on
launched. We've got a full sweep on
maze. We've got the breakout speedrun
maze. We've got the breakout speedrun
update. That's kind of all we need to
update. That's kind of all we need to
have uh running for now.
see if anybody needs me on the Discord.
see if anybody needs me on the Discord.
And then if not, we will probably get to
And then if not, we will probably get to
working on one of the release blog posts
working on one of the release blog posts
for
this. Just we make a little bit of
this. Just we make a little bit of
uh progress. I I don't know why
uh progress. I I don't know why
Discord's not opening.
There it is. Weird.
Well, nobody needs stuff. Just dumb [ __ ]
Well, nobody needs stuff. Just dumb [ __ ]
in
chat. Really dumb [ __ ] in chat.
Well, that's funny. So, restarting uh
Well, that's funny. So, restarting uh
Discord closed my browser tabs. Yeah,
Discord closed my browser tabs. Yeah,
that makes
that makes
sense. Me go get my reream tab back.
So we uh we did uh this initial protein
So we uh we did uh this initial protein
draft. I think we have this one for now.
draft. I think we have this one for now.
Now, I don't want to polish this too
Now, I don't want to polish this too
much
much
yet. Do I have any non-proin notes down
yet. Do I have any non-proin notes down
here?
here?
No. We're going to make next
one. Do algo improvements. New
M's the highlight.
I'm trying to think how I just like how
I'm trying to think how I just like how
do I make these interesting and exciting
do I make these interesting and exciting
in a way that it's not just like the
in a way that it's not just like the
obligatory release blog post,
right? Plus the algo stuff can be pretty
right? Plus the algo stuff can be pretty
interesting.
Trying to think what is the best claim I
Trying to think what is the best claim I
can make
can make
here. The most precise claim I can make
here. The most precise claim I can make
here. It is kind of just better than PO.
I hate when
I hate when
um Belche just doesn't
um Belche just doesn't
recognize words.
How many experiments do I have on
How many experiments do I have on
Neptune?
Have the Apple
self-driving flow.
What did we do this on like summed
advantage? Was like summed advantage.
Vantage.abs. Yeah.
forget how we sampled
this. I think we did prioritize replay
this. I think we did prioritize replay
based on this.
Yeah.
This is probably going to be like below
This is probably going to be like below
this will be like an image of like
this will be like an image of like
before and after like a sweeper
whatever. Oh, hey Weston. God damn it. I
whatever. Oh, hey Weston. God damn it. I
didn't notice your message cuz this
didn't notice your message cuz this
thing I forgot it crashed my browser and
thing I forgot it crashed my browser and
it
it
um crashed my uh my chat
um crashed my uh my chat
client. Let me grab
this. Usually I do this so that I have
this. Usually I do this so that I have
this like just under where my camera is
this like just under where my camera is
so I can actually see
messages.
Here we
go. Why are you adding the reream bot?
real message. Huh?
Uh, the reream bot is is a bot. It's
Uh, the reream bot is is a bot. It's
like the reream bot is
like the reream bot is
uh Oh, does it
uh Oh, does it
relay? I don't think I have it set up to
relay? I don't think I have it set up to
relay to other
relay to other
chats, but they do pop up on the screen.
chats, but they do pop up on the screen.
Does it?
H. They do pop up on the screen right
H. They do pop up on the screen right
here
here
though. Either
though. Either
way, I think it's platform specific.
way, I think it's platform specific.
Like I don't know if X receives messages
Like I don't know if X receives messages
from other platforms or not.
Go find the
Go find the
uh prioritize
replay. We can correct this fully
replay. We can correct this fully
compensates for non-uniform
compensates for non-uniform
probabilities. Beta is
one. Where's
one. Where's
alpha? There's an alpha term as well.
Alpha 0 and beta 1.
Excuse me. Anyways, they're taking a
Excuse me. Anyways, they're taking a
break my end I was making because it got
break my end I was making because it got
difficult. So, I'm making
difficult. So, I'm making
Sudoku. I have no
Sudoku. I have no
idea. I have no idea if Sudoku is easy
idea. I have no idea if Sudoku is easy
or not, to be honest. The action space
or not, to be honest. The action space
for that's going to be a pain in the
for that's going to be a pain in the
ass.
do funny Matrix
do funny Matrix
stuff. Rise of the half
stuff. Rise of the half
moon. What's
this? Is this a card game?
Do they just have random devs at Google
Do they just have random devs at Google
that just like make these for the hell
that just like make these for the hell
of it?
[Music]
What?
[Music]
Confused. Place your card.
Confused. Place your card.
[Music]
Phases are full.
[Music]
[Music]
What was this? An existing game or was
What was this? An existing game or was
this like some Googler was bored?
this like some Googler was bored?
[Music]
[Music]
[Music]
That's
[Music]
[Music]
funny. Yeah. I don't know.
Weird.
the doco is one to nine. I had to make
the doco is one to nine. I had to make
action zero to
eight and then just do action plus
eight and then just do action plus
one. I saved the action as one and nine
one. I saved the action as one and nine
and didn't notice.
and didn't notice.
Yeah, you'll do that. That's a common
Yeah, you'll do that. That's a common
one. I've done it before as well.
Do you think the same approach is fact
Do you think the same approach is fact
practical? Wait. Do you think the same
practical? Wait. Do you think the same
approach is practical for a field like
approach is practical for a field like
computer vision or do you think it's
computer vision or do you think it's
competitive? The same approach of what
Prime. Um, if you're the same guy from
Prime. Um, if you're the same guy from
before here, I don't know what the
before here, I don't know what the
question
is like the same approach for what is
is like the same approach for what is
practical.
This is pretty
This is pretty
good. How do you deep do you think I'd
good. How do you deep do you think I'd
have to make my neural net to be able to
have to make my neural net to be able to
replicate a Sudokco algorithm? I'm
replicate a Sudokco algorithm? I'm
assuming relatively
assuming relatively
deep. Doubt
deep. Doubt
it. I The bigger problem is the only
it. I The bigger problem is the only
thing that you're going to have as an
thing that you're going to have as an
issue with Sudoku, it's the action
issue with Sudoku, it's the action
space. Like how the hell do you do the
space. Like how the hell do you do the
action space for Sudoku,
right? I mean, isn't
right? I mean, isn't
it it's 9
it it's 9
by9? No, it's not. It's 9 by9 with nine
by9? No, it's not. It's 9 by9 with nine
options
each. So like the flat action space is
each. So like the flat action space is
almost a thousand
dimensional, right?
What do you think the action space is?
What do you think the action space is?
Right. You have to be able to select a
cell and then fill in a number on that
cell. What do you mean you're not
cell. What do you mean you're not
selecting? So, you're just going
selecting? So, you're just going
through. Well, you can't do that, right?
through. Well, you can't do that, right?
That's not how got to go. All right,
That's not how got to go. All right,
we'll chat later.
move on. Coaster kneeling prioritized 1H
move on. Coaster kneeling prioritized 1H
perm set. This is pretty good.
like as you have you taken things into
like as you have you taken things into
your own hands for RL research by
your own hands for RL research by
building your own algorithms from
building your own algorithms from
scratch. Yeah. Do you think the same
scratch. Yeah. Do you think the same
approach is practical and CV a waste of
approach is practical and CV a waste of
time? I don't think CV is anywhere near
time? I don't think CV is anywhere near
as cursed as reinforcement learning is.
as cursed as reinforcement learning is.
um reinforcement learning. There was a
um reinforcement learning. There was a
kind of a unique opportunity here just
kind of a unique opportunity here just
because people were hard trolling on the
because people were hard trolling on the
engineering side and they got the
engineering side and they got the
engineering side so horribly horribly
engineering side so horribly horribly
wrong that like there was this just
wrong that like there was this just
massive massive room for improvement. Um
massive massive room for improvement. Um
there's definitely cool stuff you can do
there's definitely cool stuff you can do
in CV and if you're good like obviously
in CV and if you're good like obviously
I mean I'm a big believer that anyone
I mean I'm a big believer that anyone
can really revolutionize a field if
can really revolutionize a field if
they're good enough, right? like
they're good enough, right? like
single-handedly
single-handedly
um you can make a huge impact, but
um you can make a huge impact, but
there's not like the obvious same amount
there's not like the obvious same amount
of opportunity as there would be in RL
of opportunity as there would be in RL
and it wouldn't be the next thing I
and it wouldn't be the next thing I
would go to to look at.
would go to to look at.
Um yeah, I like specifically I look for
Um yeah, I like specifically I look for
areas, right? I like to find problems
areas, right? I like to find problems
where um I see like a massive
where um I see like a massive
opportunity to change stuff and nobody's
opportunity to change stuff and nobody's
doing it, right? That's kind of what I
doing it, right? That's kind of what I
did with RL. And like here, I haven't
did with RL. And like here, I haven't
even gone that far into the algorithm
even gone that far into the algorithm
changes yet, right? We really just have
changes yet, right? We really just have
a few small changes and already we're
a few small changes and already we're
doing this.
Well, this is a nice short blog post,
Well, this is a nice short blog post,
right?
These don't need to be super long blog
These don't need to be super long blog
posts, right? I think that this
posts, right? I think that this
covers like obviously each of these
covers like obviously each of these
there's going to be like an experiment
there's going to be like an experiment
or two for each of these. Hello to
or two for each of these. Hello to
YouTube folks as well. I see we have a
YouTube folks as well. I see we have a
fair few people here.
fair few people here.
Um, what I'm doing right now is I'm
Um, what I'm doing right now is I'm
going back and forth between
going back and forth between
hyperparameter
hyperparameter
experiments for the uh the next
experiments for the uh the next
release and working on the various
release and working on the various
different blog posts for all the
different blog posts for all the
different things that we've done. Buffer
different things that we've done. Buffer
advantage is quite nice. I think that
advantage is quite nice. I think that
this is like people are going to going
this is like people are going to going
to be happy with this
to be happy with this
overall. Let's see how the sweep is
overall. Let's see how the sweep is
going.
We've
We've
got
got
86 experiments
here. And the best one is how
long? Yeah. How long the best experiment
long? Yeah. How long the best experiment
is?
is?
19ish seconds I think for full solve it
19ish seconds I think for full solve it
looks like. So I think our best before
looks like. So I think our best before
this was 17, but we have more than 100
this was 17, but we have more than 100
experiments left. So we'll see how much
experiments left. So we'll see how much
this improves. And then if I check mazes
out maze is not doing so
out maze is not doing so
hot which is kind of weird.
We will uh we'll have to check back in
We will uh we'll have to check back in
on why that is. I do remember mazes
on why that is. I do remember mazes
being um like they took a while to
being um like they took a while to
sweep, so it could just be that. We'll
sweep, so it could just be that. We'll
keep checking back in on those though.
We did draft of these two
We did draft of these two
articles. We will probably now
articles. We will probably now
do I could do CAPI draft. That's pretty
easy. I'll be right back though. I'm
easy. I'll be right back though. I'm
going to go use the restroom and do a
going to go use the restroom and do a
couple quick sets and then uh yeah, I'll
couple quick sets and then uh yeah, I'll
have another couple of hours to work on
have another couple of hours to work on
this
this
still. Be right back.
All
right. All right.
right. All right.
we do
we do
um quickie API blog
um quickie API blog
post. I think this will be the one that
post. I think this will be the one that
people care the least about, but
people care the least about, but
uh
uh
well, I don't want to do a blog post
well, I don't want to do a blog post
that people aren't going to care
that people aren't going to care
about. Let me see if there's anything
about. Let me see if there's anything
cool either to do instead of this one or
cool either to do instead of this one or
a way that people would find this
a way that people would find this
interesting.
building fast sims
fast. I think this would be I think we
fast. I think this would be I think we
can actually maybe get something out of
this. Building fast sims fast,
this. Building fast sims fast,
right? If I do like the puffer c API,
right? If I do like the puffer c API,
nobody cares. But if it's like building
nobody cares. But if it's like building
fast Sims fast, like how we build fast
fast Sims fast, like how we build fast
Sims fast or
something, I think we can do something
something, I think we can do something
with this.
This release includes improved way of
This release includes improved way of
connecting C environments to Python.
connecting C environments to Python.
Yeah, but the thing is I don't think
Yeah, but the thing is I don't think
anybody gives a [ __ ] about that, right?
anybody gives a [ __ ] about that, right?
Is the thing. If I just write something
Is the thing. If I just write something
like that where it's like that's like
like that where it's like that's like
something you put in like release notes,
something you put in like release notes,
right?
right?
I don't think that gets anyone
I don't think that gets anyone
excited, right? I want
like So, I mean, I kind of have to think
like So, I mean, I kind of have to think
of this stuff
of this stuff
like this is not just meant to be docs,
like this is not just meant to be docs,
right? It's kind of interesting now that
right? It's kind of interesting now that
it it's sort of my job to do a little
it it's sort of my job to do a little
bit of the marketing for Puffer as well.
bit of the marketing for Puffer as well.
Um, and like definitely like if you
Um, and like definitely like if you
don't want to think of it as marketing,
don't want to think of it as marketing,
you think of it as like how do we grow
you think of it as like how do we grow
the project in the library. Um, so it's
the project in the library. Um, so it's
like, you know, what type of stuff can I
like, you know, what type of stuff can I
write that will get people interested in
write that will get people interested in
trying out Puff or using Puffer and uh
trying out Puff or using Puffer and uh
seeing all the stuff we built and like
seeing all the stuff we built and like
that means not just playing to the
that means not just playing to the
existing bass. So like you'll see that
existing bass. So like you'll see that
in some of the articles, right? I'll
in some of the articles, right? I'll
like explain what something like a
like explain what something like a
standard thing in RL is. I'll give like
standard thing in RL is. I'll give like
a two sentence on what it is, but really
a two sentence on what it is, but really
simple. Like I try to do more things to
simple. Like I try to do more things to
bring people into
bring people into
it. Now, I don't go to the length of
it. Now, I don't go to the length of
like I don't really try to market stuff
like I don't really try to market stuff
to people who just like aren't going to
to people who just like aren't going to
be interested by any means, right? I
be interested by any means, right? I
don't try to like convince people to be
don't try to like convince people to be
interested, but there are people who are
interested, but there are people who are
like if they thought that they could get
like if they thought that they could get
good at this and like do cool work if
good at this and like do cool work if
they put in effort, they would put in
they put in effort, they would put in
effort. And those are the people I'm
effort. And those are the people I'm
interested in getting on to uh to see
interested in getting on to uh to see
our stuff.
I don't like that in that that opening.
I don't like that in that that opening.
I don't even like this intro
heading. I think we do bottom up here.
It's like I have to think of these
It's like I have to think of these
things like so differently from how I
things like so differently from how I
normally would. It's kind of fun to be
normally would. It's kind of fun to be
honest.
I actually kind of enjoy doing some of
I actually kind of enjoy doing some of
this type of writing myself because
this type of writing myself because
like one thing that really annoys the
like one thing that really annoys the
hell out of me is when marketing people
hell out of me is when marketing people
will like, "Oh yeah, let's sell it." The
will like, "Oh yeah, let's sell it." The
best way to sell about it is just to
best way to sell about it is just to
like [ __ ] lie. Basically, just
like [ __ ] lie. Basically, just
completely misrepresent what the thing
completely misrepresent what the thing
is. So, it's interesting to me to like
is. So, it's interesting to me to like
how do I accurately represent what it is
how do I accurately represent what it is
that we do while actually telling you
that we do while actually telling you
what it does?
Yeah, it turns out it's really easy to
Yeah, it turns out it's really easy to
market stuff if you just [ __ ] lie,
market stuff if you just [ __ ] lie,
right? It's like we discovered LLMs are
right? It's like we discovered LLMs are
really persuasive if they lie was the
really persuasive if they lie was the
recent research. It's like, yep.
What are your thoughts
What are your thoughts
on I've never heard of latest
tweets? Is this
Huh? None of that's true.
Yeah, I have no idea who this guy
Yeah, I have no idea who this guy
is. I don't think Is this I don't even
is. I don't think Is this I don't even
think is this an RL guy? I think he's
think is this an RL guy? I think he's
just
just
like Yeah. No, this is just some random
like Yeah. No, this is just some random
dude. I don't know.
You don't need a [ __ ] 100page RL book
You don't need a [ __ ] 100page RL book
is the thing to learn RL. You just need
is the thing to learn RL. You just need
to start doing
something though. I probably will
something though. I probably will
sometime soon. I've literally never read
sometime soon. I've literally never read
the Sutton and Bardo book. In fact, I've
the Sutton and Bardo book. In fact, I've
never read a single textbook in AI, ML,
never read a single textbook in AI, ML,
RL. I've never read a single textbook in
RL. I've never read a single textbook in
any of these.
any of these.
Like some people just like textbooks,
Like some people just like textbooks,
which is cool and
which is cool and
all, but you can kind of also just start
all, but you can kind of also just start
building
[ __ ] Yeah, but Yam's kind of gone crazy
lately. Brilliant guy, but he's gone
lately. Brilliant guy, but he's gone
kind of crazy.
Carpathy is brilliant. Carpathy is a
Carpathy is brilliant. Carpathy is a
funny dude in the sense that like he has
funny dude in the sense that like he has
some like brilliant insights and then he
some like brilliant insights and then he
also has some like absolutely awful
also has some like absolutely awful
takes on stuff. It's pretty funny.
takes on stuff. It's pretty funny.
I
I
uh I was interning in Fay's lab as a
uh I was interning in Fay's lab as a
high school student with uh with Justin
high school student with uh with Justin
while Andre was um was still there doing
while Andre was um was still there doing
his PhD. It was pretty
his PhD. It was pretty
cool. I have some funny little stories
cool. I have some funny little stories
on
that.
Yeah. Well, the thing is like I probably
Yeah. Well, the thing is like I probably
wasn't good enough back then to
wasn't good enough back then to
appreciate it. I was a [ __ ] awful
appreciate it. I was a [ __ ] awful
programmer. I was like 16 or 17. I was
programmer. I was like 16 or 17. I was
an awful awful programmer. Like holy
an awful awful programmer. Like holy
hell was I bad. Like dude I you've never
hell was I bad. Like dude I you've never
seen some of the code. I wrote like I
seen some of the code. I wrote like I
didn't know what a graph was or what a
didn't know what a graph was or what a
tree was. So I wrote like a 13 deep like
tree was. So I wrote like a 13 deep like
nested
nested
function recursive nightmare to try to
function recursive nightmare to try to
process a graph without knowing what a
process a graph without knowing what a
graph was and without knowing what BFS
graph was and without knowing what BFS
was. All right. I had some awful, awful
code. I was like by no means a natural.
code. I was like by no means a natural.
Yeah, exactly. That's how you learn,
right? Dude, there is like so much
right? Dude, there is like so much
stuff. that like there's so much just
stuff. that like there's so much just
basic stuff that you would expect
basic stuff that you would expect
somebody with my background to know that
somebody with my background to know that
I just have no idea of like at
I just have no idea of like at
all. And it's like I don't know but
all. And it's like I don't know but
whatever. It's like I'm still here and
whatever. It's like I'm still here and
I'm still getting done pretty awesome
stuff. How are you able to connect with
stuff. How are you able to connect with
these people and convince them to let
these people and convince them to let
you work with them? I cold emailed
FE in uh in like 2016. I cold emailed
FE in uh in like 2016. I cold emailed
Andrew Ing and I cold emailed FE. Andrew
Andrew Ing and I cold emailed FE. Andrew
didn't reply. Like Andrew didn't reply
didn't reply. Like Andrew didn't reply
and Feay
did. To be fair, I had like uh there was
did. To be fair, I had like uh there was
a high school research program. So like,
a high school research program. So like,
you know, my teacher also sent a thing
you know, my teacher also sent a thing
like, "Hey, you know, we do uh we have
like, "Hey, you know, we do uh we have
this research program. We've been
this research program. We've been
scientifically training these students
scientifically training these students
for the last year to hopefully do
for the last year to hopefully do
something kind of useful." So, I mean,
something kind of useful." So, I mean,
it wasn't just like a cold email out of
it wasn't just like a cold email out of
nothing, but it was still pretty darn
good. It's kind of crazy to think back
good. It's kind of crazy to think back
though on that and
though on that and
like I I honestly couldn't tell you if
like I I honestly couldn't tell you if
it was just like why it took me so long
it was just like why it took me so long
to become even baseline competent. I
to become even baseline competent. I
honestly like looking back I can't tell
honestly like looking back I can't tell
you if it was it was probably a
you if it was it was probably a
combination of like programming is
combination of like programming is
really hard. programming is taught
really hard. programming is taught
absolutely terrible. Like almost
absolutely terrible. Like almost
everything that's taught to you in a
everything that's taught to you in a
formal curriculum is the exact opposite
formal curriculum is the exact opposite
of what you should be doing.
of what you should be doing.
Um, you know, I wasn't just devoted to
Um, you know, I wasn't just devoted to
that. It's not like college or even
that. It's not like college or even
after where you have like a big chunk of
after where you have like a big chunk of
time to devote to getting good at a
time to devote to getting good at a
specific thing. I was like massively
specific thing. I was like massively
massively sleepdeprived trying to juggle
massively sleepdeprived trying to juggle
a billion
a billion
things. And I don't know, maybe at that
things. And I don't know, maybe at that
age you're just stupid as well. I don't
age you're just stupid as well. I don't
freaking know.
freaking know.
But
But
uh you know, you get there eventually.
like ML programming. Yeah.
I've literally I've never worked harder
I've literally I've never worked harder
than I did in high school. 12 and seven,
than I did in high school. 12 and seven,
man. I was sleeping at like two and
man. I was sleeping at like two and
waking up at
waking up at
7 if I was lucky. I think I averaged
7 if I was lucky. I think I averaged
like 110 hours a week for my last couple
like 110 hours a week for my last couple
years of high school. It was
years of high school. It was
awful. Yeah, it was just freaking awful.
I think I did like I probably did like
I think I did like I probably did like
90 hours a week for a decent chunk of
90 hours a week for a decent chunk of
undergrad. I never did triple digits
undergrad. I never did triple digits
though after that, you know. I never did
though after that, you know. I never did
triple digits after high school. And you
triple digits after high school. And you
can't either. Like you can only do that
can't either. Like you can only do that
when you're doing brain dead
when you're doing brain dead
work. Brain just does not do anything
work. Brain just does not do anything
that requires any amount of intelligence
that requires any amount of intelligence
at some point.
Weston, I get like minimum eight or nine
Weston, I get like minimum eight or nine
hours. Like I get eight hours minimum
hours. Like I get eight hours minimum
and usually nine
now. Like you just do not compromise on
now. Like you just do not compromise on
sleep at all. It's like the dumbest
sleep at all. It's like the dumbest
possible thing to compromise on. Like
possible thing to compromise on. Like
you have to because you're forced to
you have to because you're forced to
when you're in like the strict structure
when you're in like the strict structure
of a school program and like you know I
of a school program and like you know I
was trying to get into college and all
was trying to get into college and all
that, right? But afterwards, it's the
that, right? But afterwards, it's the
dumbest possible thing to compromise on.
And it's tough cuz like I wouldn't have
And it's tough cuz like I wouldn't have
told myself back then I wouldn't tell
told myself back then I wouldn't tell
younger me go get more sleep because
younger me go get more sleep because
like if I did I wouldn't have been able
like if I did I wouldn't have been able
to get done all the things I needed to
to get done all the things I needed to
get done right. But like it's just
get done right. But like it's just
rough. Why I even have Malik or Cal?
Uh, no. So, you do need you allocate.
Uh, no. So, you do need you allocate.
I'm calling it static memory because I'm
I'm calling it static memory because I'm
allocating once up front. It is
allocating once up front. It is
technically mal and that's because you
technically mal and that's because you
can't put everything on the stack. The
can't put everything on the stack. The
stack is not infinite. The stack is
stack is not infinite. The stack is
pretty
small. Stack is very small indeed.
small. Stack is very small indeed.
Speaking of which, article here. Um,
Yep, that's also
true. Well, you can still put stuff on
true. Well, you can still put stuff on
the stack at runtime,
the stack at runtime,
right? Like you can still
right? Like you can still
um I I mean that's what I meant, right?
um I I mean that's what I meant, right?
Like yeah, you can pre-allocate some
Like yeah, you can pre-allocate some
stuff, but like yes, that you can do
stuff, but like yes, that you can do
however big you want, but then like you
however big you want, but then like you
need to know how much memory you need
need to know how much memory you need
afterwards. I guess technically you
afterwards. I guess technically you
could just give yourself a giant buffer
could just give yourself a giant buffer
to work with at the start, but that's
to work with at the start, but that's
pretty
dumb. Malik once up front is fine. Malik
dumb. Malik once up front is fine. Malik
isn't
evil. Welcome to all the YouTube and
evil. Welcome to all the YouTube and
Twitch folks.
Twitch folks.
We're kind of chatting and researching
We're kind of chatting and researching
this and that at the moment, but also
this and that at the moment, but also
I'm working on blog post for the next
I'm working on blog post for the next
release currently on uh our how we make
release currently on uh our how we make
our environments super fast and simple.
our environments super fast and simple.
And then also periodically we are
And then also periodically we are
checking these uh
checking these uh
experiments. Oh, there you go. Look at
experiments. Oh, there you go. Look at
that. So like the sweep wasn't doing
that. So like the sweep wasn't doing
very well before and now look it just
very well before and now look it just
keeps going up and up and up like
keeps going up and up and up like
this. I bet this is just learning rate
this. I bet this is just learning rate
or something. There's got to be like
or something. There's got to be like
some dumb parameter that just takes a
some dumb parameter that just takes a
while to optimize.
Do you suggest or wait
Do you suggest or wait
to
to
University of
University of
Alberta? Uh I can't recommend a course
Alberta? Uh I can't recommend a course
that I have I don't know anything about.
that I have I don't know anything about.
Right.
Right.
I
I
um I have a very I have a very basic
um I have a very I have a very basic
quick start guide on my website that
quick start guide on my website that
gives you blogs and papers that you
gives you blogs and papers that you
should look at. Uh it assumes that you
should look at. Uh it assumes that you
have a basic knowledge of ML in general.
have a basic knowledge of ML in general.
So the only course I actually will
So the only course I actually will
consistently recommend is
consistently recommend is
CS231N for deep learning basics and then
CS231N for deep learning basics and then
from there you probably like need to
from there you probably like need to
start building things, reading papers
start building things, reading papers
and building things. Is it possible to
and building things. Is it possible to
use puffer to solve a 2x two Rubik's
use puffer to solve a 2x two Rubik's
cube? Well, yeah, of
cube? Well, yeah, of
course. Space will be No, it's not too
course. Space will be No, it's not too
large. RL solves way harder things than
large. RL solves way harder things than
Rubik's cubes. I'd be shocked if you
Rubik's cubes. I'd be shocked if you
couldn't do a 3x3 very, very
couldn't do a 3x3 very, very
easily. Andro Carpathy is really good.
easily. Andro Carpathy is really good.
Yeah, he's very good. So, Carpathy is
Yeah, he's very good. So, Carpathy is
very good. He has some good old blog
very good. He has some good old blog
posts on RL. The other really good
posts on RL. The other really good
person, and this is the blog post for
person, and this is the blog post for
this is in the quick start guide, which
this is in the quick start guide, which
is on puffer.ai as well. Um, Costa Ka is
is on puffer.ai as well. Um, Costa Ka is
amazing. Like the reason that I'm here
amazing. Like the reason that I'm here
solving RL and it hasn't been solved yet
solving RL and it hasn't been solved yet
is because Costa is doing language model
is because Costa is doing language model
stuff. Otherwise, he'd be doing it. Um,
stuff. Otherwise, he'd be doing it. Um,
Costa is
Costa is
awesome. Costa, CS Ta. He is the
awesome. Costa, CS Ta. He is the
developer of Clean RL, which before
developer of Clean RL, which before
Clean RL, all RL libraries sucked. Um,
Clean RL, all RL libraries sucked. Um,
after Clean RL, all RL libraries were
after Clean RL, all RL libraries were
still slow, but at least Clean RL was
still slow, but at least Clean RL was
like simple and easy to use.
5 to 6 days of P100 to solve a
5 to 6 days of P100 to solve a
3x3.
Um, no. Those people have to be
Um, no. Those people have to be
trolling. If you just write if you write
trolling. If you just write if you write
a quick little uh just write a quick
a quick little uh just write a quick
Rubik's cube environment and see it's
Rubik's cube environment and see it's
probably not that hard, right? If you at
probably not that hard, right? If you at
that guy on
that guy on
um on the Discord, he was actually
um on the Discord, he was actually
trying to write one in Numpai or
trying to write one in Numpai or
whatever. Like you can probably write
whatever. Like you can probably write
one pretty quick and
one pretty quick and
see if I want to be able to select
see if I want to be able to select
cells, I would make the action zero to
cells, I would make the action zero to
nine and make zero skip the next cell.
What? No, dude. Because then you have to
What? No, dude. Because then you have to
take freaking like if you want to get to
take freaking like if you want to get to
the last cell, you have to take 80 skip
the last cell, you have to take 80 skip
actions in a
actions in a
row. He's talking about Rubik's
cubes. Okay, look, Weston. If you
cubes. Okay, look, Weston. If you
actually want me to give you like a
actually want me to give you like a
reasonable way to do this that won't
reasonable way to do this that won't
suck, like this is what you do, okay?
suck, like this is what you do, okay?
You make the action space discreet. You
You make the action space discreet. You
make it uh 0 through eight or 1 through
make it uh 0 through eight or 1 through
nine, whatever. Okay? Action one selects
nine, whatever. Okay? Action one selects
which tile, you know, because it's 3x3
which tile, you know, because it's 3x3
of 3x3's. So, it selects which tile
of 3x3's. So, it selects which tile
you're going to fill in. Okay? Okay. And
you're going to fill in. Okay? Okay. And
then the next
then the next
action suggest uh selects
action suggest uh selects
which individual cell uh in that tile
which individual cell uh in that tile
you're going to fill in. And then the
you're going to fill in. And then the
last action selects the number. And you
last action selects the number. And you
can do that either as a three-way
can do that either as a three-way
multi-discreet or you can do it as a
multi-discreet or you can do it as a
sequence of three
actions. Try
both. That's how I did the market system
both. That's how I did the market system
for neural MMO. Like I just kind of
for neural MMO. Like I just kind of
imagined one really useful thing to do
imagined one really useful thing to do
in RL is just imagine your problem if
in RL is just imagine your problem if
your problem were like on a Game Boy or
your problem were like on a Game Boy or
something or like had to be played on
something or like had to be played on
like a numpad like how would you design
like a numpad like how would you design
the UI and then just build it that
way there. That'll actually solve it for
way there. That'll actually solve it for
you. That'll be super easy. And then you
you. That'll be super easy. And then you
just have to include in the observation
just have to include in the observation
space, right? The observation space
space, right? The observation space
probably just has to include like what
probably just has to include like what
cell you're looking at or whatever.
or your last action. That would also do
or your last action. That would also do
it. Yeah, do that. That's super
it. Yeah, do that. That's super
easy. So there went
easy. So there went
kaput. Uh so what you do here is you do
kaput. Uh so what you do here is you do
okay like let's just say that you're
okay like let's just say that you're
going to make your move a sequence of
going to make your move a sequence of
three actions. So first uh zero through
three actions. So first uh zero through
eight you select which 3x3 cell you're
eight you select which 3x3 cell you're
going to write into. Move two is which
going to write into. Move two is which
of the individual ones within that 3x3
of the individual ones within that 3x3
block you're going to write to. And then
block you're going to write to. And then
finally uh you select the number to
finally uh you select the number to
write to the
write to the
cell. Do
cell. Do
that then it will actually work. You
that then it will actually work. You
will be able to solve it very
quickly. Amit if you uh if you get that
quickly. Amit if you uh if you get that
environment done we will absolutely take
environment done we will absolutely take
a PR of a Rubik's cube environment and
a PR of a Rubik's cube environment and
see as well. We would be happy to have
that. That's actually really easy to
that. That's actually really easy to
render in 3D as well. You would
render in 3D as well. You would
literally just render
literally just render
um what is it? 3x3x3 27 cubes. Yeah,
um what is it? 3x3x3 27 cubes. Yeah,
that's that's
that's that's
like that's probably 20 lines in Rayb to
like that's probably 20 lines in Rayb to
just like render the
just like render the
cubes and it'll look pretty good.
I'm always afraid I get like ticks
I'm always afraid I get like ticks
running
running
outside. There are ton of them around
outside. There are ton of them around
and lime is no
and lime is no
joke. Like anything itches, it's like,
joke. Like anything itches, it's like,
is that a bug bite or a tick?
Pretty good.
pretty
pretty
decent quick little article.
I think if there's anything else that
I think if there's anything else that
makes
uh a big difference.
Okay. Decent little uh decent little
Okay. Decent little uh decent little
article prototype.
You see chatbot? I saw they've been
You see chatbot? I saw they've been
doing decentralized RL stuff. I don't
doing decentralized RL stuff. I don't
know. I have a chat uh I have a um like
know. I have a chat uh I have a um like
a group chat that has a bunch of those
a group chat that has a bunch of those
people in it, but like RL for language
people in it, but like RL for language
models really isn't remotely the same as
models really isn't remotely the same as
RL in the capacity that we're doing it.
RL in the capacity that we're doing it.
um RL LLM is like dramatically
um RL LLM is like dramatically
dramatically easier in some ways
dramatically easier in some ways
algorithmically and then just like
algorithmically and then just like
uh and then really the only annoying
uh and then really the only annoying
thing with it is just like everything's
thing with it is just like everything's
incredibly expensive to run and like it
incredibly expensive to run and like it
kind of breaks a little bit of their
kind of breaks a little bit of their
standard distributed
infrastructure. So it's like a pretty
infrastructure. So it's like a pretty
different problem space.
Why do you think the focus is on LLM RL
Why do you think the focus is on LLM RL
mostly because of money? Because LLMs
mostly because of money? Because LLMs
are the shiny thing right now and like
are the shiny thing right now and like
everybody goes and does the shiny thing.
everybody goes and does the shiny thing.
It's massively overinvested.
Like, don't get me wrong, it's great.
Like, don't get me wrong, it's great.
Like, LM are cool. LMRL is cool, but it
Like, LM are cool. LMRL is cool, but it
should be like 80 85% of the investment
should be like 80 85% of the investment
right now. Not
99, which is like I guess another way of
99, which is like I guess another way of
saying that is everything outside of
saying that is everything outside of
LLMs is like order of magnitude
LLMs is like order of magnitude
underinvested at the moment at least.
notoriously like
OpenBSD. Open BSD is cool. They got a
OpenBSD. Open BSD is cool. They got a
puffer.
I mean the thing is
I mean the thing is
like I'll believe it when I see it,
like I'll believe it when I see it,
right? But like right now LLMs generate
right? But like right now LLMs generate
absolutely garbage
absolutely garbage
code.
code.
So the thing is it's like code style is
So the thing is it's like code style is
not just it's not just do I use tabs or
not just it's not just do I use tabs or
spaces or whatever, right? It's a lot
spaces or whatever, right? It's a lot
more like refactoring things cleanly is
more like refactoring things cleanly is
a lot more than that. And it's
a lot more than that. And it's
like I mean that's not the easiest part
like I mean that's not the easiest part
of the job or anything. That's something
of the job or anything. That's something
that's like very few people are actually
that's like very few people are actually
good at. But like why would I expect
good at. But like why would I expect
that an LLM that can't do crap correctly
that an LLM that can't do crap correctly
is going to be able to do that
is going to be able to do that
well? Like LMS ain't touching my code
well? Like LMS ain't touching my code
until they don't suck at
coding. But I don't want boiler plate.
coding. But I don't want boiler plate.
That's the thing, right? You don't want
That's the thing, right? You don't want
boiler plate.
You want minimal boiler plate and you
You want minimal boiler plate and you
don't want to press tab. You want to
don't want to press tab. You want to
[ __ ] sit there and look at your
[ __ ] sit there and look at your
boiler plate and feel bad about it for
boiler plate and feel bad about it for
several hours until you figure out how
several hours until you figure out how
to make there be less of
it. Put a print statement. Well, yeah,
it. Put a print statement. Well, yeah,
that's easy. And I have Super Maven for
that's easy. And I have Super Maven for
that.
I like Super Maven though because it's
I like Super Maven though because it's
like it's mostly I do for like single
like it's mostly I do for like single
line autocomplete. It's not like oh you
line autocomplete. It's not like oh you
need an AI code editor. It's AI. It's
need an AI code editor. It's AI. It's
just like no I want a typing buff,
just like no I want a typing buff,
right? Like let you type the obvious
right? Like let you type the obvious
[ __ ] faster and get out of my way the
[ __ ] faster and get out of my way the
rest of the
time. Yeah, I know it was bought by
time. Yeah, I know it was bought by
Cursor. I am uh it wasn't developed by
Cursor. I am uh it wasn't developed by
them originally and I'm hoping they
them originally and I'm hoping they
don't ruin
it. It's
honestly like man so much garbage
honestly like man so much garbage
garbage code is coming out of just
garbage code is coming out of just
people pressing tab and cursor right
people pressing tab and cursor right
now. Like I not a fan of
it. Well, yeah, that's just not actually
it. Well, yeah, that's just not actually
coding, right?
I honestly I have all the keywords
I honestly I have all the keywords
around that stuff muted on X because
around that stuff muted on X because
it's just like okay
it's just like okay
whatever. People found yet another
whatever. People found yet another
excuse to not put in any work and
excuse to not put in any work and
pretend that they know things. Whoop did
pretend that they know things. Whoop did
he do,
right? Like honestly the way I run
right? Like honestly the way I run
Puffer, right, is like I will engage
Puffer, right, is like I will engage
with and help with anybody who actually
with and help with anybody who actually
gives a
gives a
[ __ ] Like you know if people are
[ __ ] Like you know if people are
actually at least trying to learn stuff
actually at least trying to learn stuff
and like trying to improve things,
and like trying to improve things,
right? like you can get good at a lot
right? like you can get good at a lot
just doing that if you have if you're
just doing that if you have if you're
like at all clever.
Um the people who just don't care and
Um the people who just don't care and
just want to do stuff the dumb way and
just want to do stuff the dumb way and
like not like you know I I just don't
like not like you know I I just don't
engage with them at
all choosing what to
all choosing what to
learn. It's just what do you want to do,
right? For me, it's like I saw this
right? For me, it's like I saw this
unique opportunity with reinforcement
unique opportunity with reinforcement
learning where I saw the potential of
learning where I saw the potential of
the field in 2019. I saw all the stuff
the field in 2019. I saw all the stuff
that could happen with it. And then
that could happen with it. And then
everybody just went out and started
everybody just went out and started
chasing the shiny thing with LLMs and
chasing the shiny thing with LLMs and
stopped doing it. And I'm still here
stopped doing it. And I'm still here
like, well, I can massively fix this
like, well, I can massively fix this
entire thing single-handedly. and I can
entire thing single-handedly. and I can
revolutionize this entire field of
revolutionize this entire field of
science which is going to trickle down
science which is going to trickle down
to so many different areas of tech. Like
to so many different areas of tech. Like
this is going to be a massive
this is going to be a massive
contribution. I can probably build a
contribution. I can probably build a
decent company out of it at the same
decent company out of it at the same
time. Like I'd be crazy not to do
time. Like I'd be crazy not to do
this. I'd either be crazy or wildly
this. I'd either be crazy or wildly
unambitious not to do
this. Thank you. I mean the thing is
this. Thank you. I mean the thing is
like at least on the research side we
like at least on the research side we
clearly are RL is not the same field as
clearly are RL is not the same field as
a year ago because of puffer liib like
a year ago because of puffer liib like
do any RL outside of puffer liib or any
do any RL outside of puffer liib or any
RL a year ago and compare to what you
RL a year ago and compare to what you
can do in puffer liib now and it's a
can do in puffer liib now and it's a
different
different
field well thank you we appreciate the
field well thank you we appreciate the
contributions we do appreciate the
contributions I got this one this one
contributions I got this one this one
and this one drafted
and this one drafted
We need this one to be drafted and we
We need this one to be drafted and we
need the new M
need the new M
ones. This one's super easy. It just
ones. This one's super easy. It just
needs um a lot of graphics which is
needs um a lot of graphics which is
annoying.
I could take a stab at um the highlight
I could take a stab at um the highlight
article,
right? I got like what an hour 20ish
right? I got like what an hour 20ish
before I got to go.
Maybe a little longer. I think I stay
Maybe a little longer. I think I stay
take a stab at the highlight
take a stab at the highlight
article. I go jam some experiments and
article. I go jam some experiments and
then we go from there. We'll be back in
then we go from there. We'll be back in
a couple minutes here.
I got to think if this is going to be a
I got to think if this is going to be a
puffer 25 or puffer 3
puffer 25 or puffer 3
0. Don't know yet.
Take a stab at the new article.
I don't know about 2530.
We'll put it as 2.5 for now and we'll
We'll put it as 2.5 for now and we'll
decide whether we
decide whether we
uh how we version it.
I honestly think it's probably safer to
I honestly think it's probably safer to
do 3 0 because
do 3 0 because
like
like
yeah I mean that's how versioning is
yeah I mean that's how versioning is
supposed to work anyways.
supposed to work anyways.
Every version is a major. Every
Every version is a major. Every
version's breaking
I figure out where I want to use. I got
I figure out where I want to use. I got
to workshop this bit a little bit. This
to workshop this bit a little bit. This
is going to have to be workshopped.
so this should just be cool demos
so this should just be cool demos
basically this article
This is kind of a bit much because we
This is kind of a bit much because we
still we still tune. I think what are
still we still tune. I think what are
like the best what are the coolest
like the best what are the coolest
things I can
things I can
show in this uh this
show in this uh this
release? Some random sweet plot.
release? Some random sweet plot.
People do tend to like the sweet plots.
So get all hyperparames we plot
Is it six new ones? Yes. No, it's eight
Is it six new ones? Yes. No, it's eight
new environments.
See how many we have. One, two, three,
See how many we have. One, two, three,
four, five, six, seven, eight, 20.
It's not quite a standalone like clean
It's not quite a standalone like clean
RL is. I guess pretty close.
I think something like this is decent.
I think something like this is decent.
This needs to be
This needs to be
workshopped. I'm going to need like a
workshopped. I'm going to need like a
few nice taglines for the release.
Look at my current website.
Yeah, this mobile looks so freaking
cool. I like our website.
This is actually not bad. I think I'm
This is actually not bad. I think I'm
going to have to like think through this
going to have to like think through this
more, but this is not bad. This is like
more, but this is not bad. This is like
a good start on a bunch of articles,
a good start on a bunch of articles,
right? I've got four of these. I still
right? I've got four of these. I still
have to write the environment one.
have to write the environment one.
They'll all have to be edited.
They'll all have to be edited.
1,700. The protein one's
1,700. The protein one's
big. Algorithm one's pretty short. This
big. Algorithm one's pretty short. This
one's very
one's very
short. Just a quick intro. So, we'll do
short. Just a quick intro. So, we'll do
like this one, then this one, then like
like this one, then this one, then like
this one, and like we'll we'll spread
this one, and like we'll we'll spread
them out
nicely. We'll spread them out very
nicely. We'll spread them out very
nicely.
Okay, so this is like surprisingly not
Okay, so this is like surprisingly not
working
working
right. We'll let it keep going. But
right. We'll let it keep going. But
there's something very weird
there's something very weird
there. And then what about
this? This still going? Yeah, this is
this? This still going? Yeah, this is
still going.
Oh, this is
interesting. So, this one
here, what happened to this one?
Yeah, this is a
Yeah, this is a
solve. I don't know if this one's lucky
solve. I don't know if this one's lucky
or what, but this is a 17-second solve
or what, but this is a 17-second solve
right here.
So, this is going to have like a whole
So, this is going to have like a whole
bunch of additional trials to see if it
bunch of additional trials to see if it
can replicate this. Um, yeah,
17. I guess it just doesn't run the full
17. I guess it just doesn't run the full
eval on this. This is Breakout. We're
eval on this. This is Breakout. We're
trying to speedrun Breakout.
trying to speedrun Breakout.
Yeah. Basically, this is just
Yeah. Basically, this is just
like it's kind of a showcase. It's kind
like it's kind of a showcase. It's kind
of for fun. It's just how fast can we
of for fun. It's just how fast can we
solve
breakout? That's pretty good.
undergrad in
CSC
CSC
EC computer science and
EC computer science and
engineering I don't know what ECE
engineering I don't know what ECE
is
math do what you're interested in and
math do what you're interested in and
like what the field you want to work in
is like if you hate building stuff,
is like if you hate building stuff,
you're not going to have a good time
you're not going to have a good time
spending a bunch of time trying to
spending a bunch of time trying to
figure out how to program better. If you
figure out how to program better. If you
hate math, you're not going to have a
hate math, you're not going to have a
fun time doing a bunch of math and
fun time doing a bunch of math and
you're not going to be good at
it. Like, pick something that genuinely
it. Like, pick something that genuinely
interests you.
Electronics and communication
engineering. Yeah, we don't we don't
engineering. Yeah, we don't we don't
have any of those
have any of those
like I don't know where this is the US.
like I don't know where this is the US.
It's like it's computer science,
It's like it's computer science,
electrical engineering,
math. And I have no idea what your
math. And I have no idea what your
curriculum, like what your stuff looks
curriculum, like what your stuff looks
like. Like in the US, I it's like you
like. Like in the US, I it's like you
take some courses and then you probably
take some courses and then you probably
better be doing some cool stuff on the
better be doing some cool stuff on the
side because like congratulations, your
side because like congratulations, your
courses qualify you to do exactly
courses qualify you to do exactly
nothing when you graduate.
You're doing something similar to the
You're doing something similar to the
fast
fast
GPT. What?
What?
Plasma. Oh, yeah. Yeah. Yeah. That.
Plasma. Oh, yeah. Yeah. Yeah. That.
Yeah,
exactly. In fact, I got a I got some of
exactly. In fact, I got a I got some of
the techniques from that and just like
the techniques from that and just like
threw them on
RL. Oh, this is insane. Huh.
It did the crazy value function clipping
It did the crazy value function clipping
thing. Minimum possible value function
thing. Minimum possible value function
clipping
coefficient. It's nutty.
You have a general general suggestion on
You have a general general suggestion on
how to minimize conditional
how to minimize conditional
branches. I feel like I have to use them
branches. I feel like I have to use them
constantly in my game. M. What's wrong
constantly in my game. M. What's wrong
with conditional
with conditional
branches? That's like a core component
branches? That's like a core component
of programming. There's nothing wrong
of programming. There's nothing wrong
with conditional
branching. Conditional branching is only
branching. Conditional branching is only
a problem if you're trying to run stuff
a problem if you're trying to run stuff
on pure GPU. And like RMs are not
on pure GPU. And like RMs are not
written for pure GPU. They run on CPU.
written for pure GPU. They run on CPU.
There's nothing wrong with branching.
Okay, so this
is burrito
is burrito
frontier. I guess we just
frontier. I guess we just
do I'm less
do I'm less
than I'm less than
25 filter. There.
What the heck is wrong with these
What the heck is wrong with these
filters?
I guess we just do
this. Okay, so this gives us something.
So this sample here, we have a learning
So this sample here, we have a learning
rate region here,
rate region here,
right? Got a gamma region
here,
here,
lambda. I'm just looking for like weird
lambda. I'm just looking for like weird
stuff.
stuff.
X gradient
X gradient
norm
entropy. Couple different mini batch
sizes. Oh jeez, these are crazy fast
sizes. Oh jeez, these are crazy fast
some of
them. So it is actually sweeping really
them. So it is actually sweeping really
high perf stuff if we're training over 5
high perf stuff if we're training over 5
million
million
SPS. We got Adam
SPS. We got Adam
Beta pretty tight
regen or to alpha pry
regen or to alpha pry
beta beta doesn't seem to matter very
beta beta doesn't seem to matter very
much. Alpha does
much. Alpha does
though. And then what was the
though. And then what was the
um where's VF clip coefficient?
I would like question why you're
I would like question why you're
thinking about minimizing branching in
thinking about minimizing branching in
the first place. There's nothing wrong
the first place. There's nothing wrong
with
branching,
right? You want to minimize complexity.
right? You want to minimize complexity.
Complexity and branching are not the
Complexity and branching are not the
same thing.
Okay, so we have generous clip
Okay, so we have generous clip
coefficient and a lot of like very
low value function clip coefficients.
Interestingly, well, yeah, unnecessary
Interestingly, well, yeah, unnecessary
branching,
right? But generally proxy things are
right? But generally proxy things are
bad. Like you don't want to look at your
bad. Like you don't want to look at your
code and be like, "Dang, how do I
code and be like, "Dang, how do I
minimize branching, right? You want to
minimize branching, right? You want to
think holistically about
complexity like really deep nesting is
complexity like really deep nesting is
often an indicator that something is
often an indicator that something is
done wrong. Not always.
done wrong. Not always.
Um having a ton of functions
Um having a ton of functions
is often an indicator like overly split
is often an indicator like overly split
up stuff is often an indicator stuff is
bad. Basically, anytime I open a
bad. Basically, anytime I open a
repository that has like 20 files that
repository that has like 20 files that
are 100 lines each, I can guarantee that
are 100 lines each, I can guarantee that
I can rewrite it in like two files that
I can rewrite it in like two files that
are, you know, 400 lines each
Interesting here. This one is so much
better. This could just be a lucky seed,
better. This could just be a lucky seed,
I
I
guess. I doubt it,
guess. I doubt it,
though. So, this is this
though. So, this is this
like dark maroonish one, I guess.
I guess we can
see
it. Where the heck is my There they are.
Okay. So, it's this one here.
Okay. So, it's this one here.
326. Got a pretty high learning rate.
Trying to see like what it is this does
differently. Not
differently. Not
this. Not really this
either. Let's see.
Oops. One
second. Well, this is creation time, so
second. Well, this is creation time, so
this doesn't
matter. Mini batch size.
matter. Mini batch size.
Okay, it is one of the few with higher
Okay, it is one of the few with higher
mini batch size. In fact, it's the only
mini batch size. In fact, it's the only
one with high mini batch size that's
one with high mini batch size that's
managed to um to do well. So, this is
managed to um to do well. So, this is
going to make it faster. Wait, do we
going to make it faster. Wait, do we
have total time
steps? Okay, so it is the highest total
steps? Okay, so it is the highest total
time steps
time steps
uh run. That is
good. But then where's the SPS?
It's like decently
It's like decently
fast. This one is
fast. This one is
faster. What's this? 29
184. Is this
right? Something seems off there,
right? Something seems off there,
doesn't it?
Okay.
Nine we have
here. So this is
here. So this is
29184 and
29184 and
2984 looks like this.
It
It
takes 22
seconds, but it
seconds, but it
has almost 7 million
has almost 7 million
SPS.
SPS.
A, that doesn't match
up cuz it's only
up cuz it's only
trained for 53 million steps.
trained for 53 million steps.
So this should be done in less than 10
So this should be done in less than 10
seconds,
right? So clearly something is wrong
here. The moment
any dang flies. All
right. I mean, so this seems weird,
right. I mean, so this seems weird,
right? If we have 7 million
SPS, I kind of want to grab these
SPS, I kind of want to grab these
params.
params.
Why do you have so many
Why do you have so many
files?
Where
Where
flies? Oh, cuz it's uh it's a warehouse
flies? Oh, cuz it's uh it's a warehouse
and we have 10ft garage doors and uh we
and we have 10ft garage doors and uh we
keep having to open them in order to
keep having to open them in order to
deliver gym
deliver gym
equipment. Plus, there are other people
equipment. Plus, there are other people
here doing maintenance because the
here doing maintenance because the
building's not fully finished. Like I
building's not fully finished. Like I
don't have hot water here
yet. Well, yeah, we are actually uh
yet. Well, yeah, we are actually uh
we're getting screens for some of it. Um
we're getting screens for some of it. Um
but they're not here
yet. I don't know. I've killed like 30
yet. I don't know. I've killed like 30
flies here just in front of my window.
Man, that's
Man, that's
like that's not even in the new ones,
like that's not even in the new ones,
right? That's like a super old
reference. I'm going to try these
How am
I? Let's see if we can figure out why
I? Let's see if we can figure out why
breakout is
weird. It's a good thing to do right
weird. It's a good thing to do right
now.
Well, something screwy that this is
Well, something screwy that this is
logging
logging
um 7 million SPS,
right? Oh, it's probably just logging
right? Oh, it's probably just logging
SPS wrong, right?
Yeah, cuz that's like a 20 30. Yeah,
Yeah, cuz that's like a 20 30. Yeah,
that's a reasonable time to
take self.
take self.
SPS DPU. How can it be bigger? because
SPS DPU. How can it be bigger? because
it's per core. If you're using two cores
it's per core. If you're using two cores
to full, it's 200.
I mean, this seems like it should
I mean, this seems like it should
uh it should log correctly, but I guess
Not. No, this does log
correctly. This totally logs correctly,
correctly. This totally logs correctly,
which is weird.
It's very
weird. Okay, so that's suspicious then,
weird. Okay, so that's suspicious then,
right? That
right? That
um we have like these ridiculously high
um we have like these ridiculously high
SPS
values. Hang on. Do I have like numb M's
values. Hang on. Do I have like numb M's
wrong or something?
Could that be a
thing? Batch size. This is
thing? Batch size. This is
auto. All
right. There like a numb M's on
here.
Well, that's not the one I
want. I have to have like um
Something screwy
here. So, vec has numbum ms,
right? Weep.ve.num
right? Weep.ve.num
m. I wonder if this is just like not
m. I wonder if this is just like not
getting
logged. I click this thing.
So this is
two. But does it actually log
this? So this does append args here,
right? What about
experiment? So
experiment? So
Neptune Neptune logs
Neptune Neptune logs
everything. Unroll nested
dict. Hang on. Shouldn't this then give
me This should do like train slash or
me This should do like train slash or
train
train
dot. Probably train slash or vex slash.
dot. Probably train slash or vex slash.
back
slashnums like just go
here. Okay, so here we go. We actually
here. Okay, so here we go. We actually
we have
this and it's all on
this and it's all on
two. So it is sweeping this but it's all
two. So it is sweeping this but it's all
on
on
two. That's not
it. I think it's just reporting SPS
it. I think it's just reporting SPS
wrong. Oh, you know what? It's reporting
wrong. Oh, you know what? It's reporting
inference SPS. That's what it is. Does
inference SPS. That's what it is. Does
it report the last point for SPS?
it report the last point for SPS?
I bet you I bet you I know if we just do
like Yeah, there you go.
like Yeah, there you go.
See, inference SPS at the
end. So, practically we're training
end. So, practically we're training
between
between
um like two and 500 uh two and 5 mil
um like two and 500 uh two and 5 mil
SPS, which is what we would expect from
SPS, which is what we would expect from
uh from this
It could go much
faster. What about update
epox? What? Wait,
epox? What? Wait,
four? Are we all on four update epochs?
four? Are we all on four update epochs?
No, that's
max. Do we have update epochs?
max. Do we have update epochs?
One. Oh, but this is just the best runs
One. Oh, but this is just the best runs
are one update epoch, right?
Like if I go here
now, they're still mostly on one.
How about numb
M's? Okay. I mean, there's a little bit
M's? Okay. I mean, there's a little bit
of exploration maybe.
I mean, so now we know the time
I mean, so now we know the time
estimates are mostly accurate, right?
The YOLO value function coefficient
The YOLO value function coefficient
thing is kind of
nuts. But we have seen that quite
nuts. But we have seen that quite
consistently.
Where's the paro front for this?
Not
that. I just want to make sure I'm not
that. I just want to make sure I'm not
missing any like major opportunities
missing any like major opportunities
here for
here for
this to be uh this to be
bigger. Let me see what this like this
bigger. Let me see what this like this
crazy one was.
No, it's not this one.
Yeah. So this is the one that we were
Yeah. So this is the one that we were
looking at. So this is 66 mil
steps. So this says 26
seconds. So we're not matching just on
seconds. So we're not matching just on
raw speed. I think
raw speed. I think
here though this is on the slower
machine. We can get SPS on
this. Oh, this says that it's supposed
this. Oh, this says that it's supposed
to run at uh at 4 mil.
to run at uh at 4 mil.
That's kind of weird,
That's kind of weird,
right? I did. I miss
right? I did. I miss
something. I feel like I must have
something. I feel like I must have
missed something for it to be running
missed something for it to be running
this
fast. Says vecum m is
two. I feel like I missed something.
be running that
fast. I mean, this does
fast. I mean, this does
repro. It just doesn't repro the
speed. I'm pretty sure I'm
logging like bap size or is it autoed?
autoed. Is it
autoed. Is it
like this or
something? That still doesn't give you 4
something? That still doesn't give you 4
mil.
cuz that's kind of
cuz that's kind of
weird. Mini batch
maybe. No. Oh, mini batch. I missed I
maybe. No. Oh, mini batch. I missed I
missed the mini batch size there. That's
missed the mini batch size there. That's
it.
Okay. So that's like up to 3 mil.
We don't get our
eval. Hang
on. This is a back
on. This is a back
end async
reset. And then
This has to do print dashboard.
It doesn't seem to do it right.
time. So
time. So
7:48. Yeah, this is 7:48. So this does
7:48. Yeah, this is 7:48. So this does
not
not
um I mean I can believe that it's like
um I mean I can believe that it's like
it got a lucky
it got a lucky
run, but it's not going to consistently
run, but it's not going to consistently
solve for you.
I also don't know where this thing is. 4
I also don't know where this thing is. 4
million
SPS. Could just be the other chip.
miles off.
Yeah, it is. It's a little luck
Yeah, it is. It's a little luck
dependent. You can
see then 5 mil SPS for
eval. Well, that's one of the things
eval. Well, that's one of the things
that's a little tricky with running a
that's a little tricky with running a
sweep, right? Is naturally also the best
sweep, right? Is naturally also the best
runs are going to be the luckiest runs.
So you generally what happens is that
So you generally what happens is that
the runs do uh they do roughly the same,
the runs do uh they do roughly the same,
but if you're on a speedrun budget,
but if you're on a speedrun budget,
right? Like let's say you get 10% lucky,
right? Like let's say you get 10% lucky,
right? You get like a better seed, it
right? You get like a better seed, it
could train like 10% faster or
could train like 10% faster or
something. So you'd have to add like 10%
something. So you'd have to add like 10%
steps to make up for it.
like this one here, right? Like this
like this one here, right? Like this
curve could be shifted over a little to
curve could be shifted over a little to
the right. So, it's not like the prams
the right. So, it's not like the prams
don't work. They do work. Um, but
don't work. They do work. Um, but
there's a bit of
variability. Like this is a 20 second
variability. Like this is a 20 second
run right here.
Little weird to me that we haven't found
Little weird to me that we haven't found
any
any
like really high perf
like really high perf
stuff. Randomly initial
weights. Sure.
Like you could attribute it to that.
Like you could attribute it to that.
Sure.
Well, I mean it's like the random
Well, I mean it's like the random
weights affect the data that you get,
weights affect the data that you get,
right? So you're actually your weights
right? So you're actually your weights
affect your data distribution in RL's.
Why it's a sure and not a
yes
yes
151. But we will let this
finish. Something happened with these
finish. Something happened with these
mazes.
I bet it's stuck on like bad VF clip
I bet it's stuck on like bad VF clip
coefficient. You
coefficient. You
see? I bet it's like stuck on bad VF
clip. Yeah. You see it's
clip. Yeah. You see it's
like I guess I need sweet
progress. Almost certainly stuck. Bad VF
clip clip function. It's a clipping
clip clip function. It's a clipping
coefficient for the value function.
coefficient for the value function.
Um there's this weird thing where you
Um there's this weird thing where you
can have like these YOLO runs that set
can have like these YOLO runs that set
it really low and still somehow
it really low and still somehow
work. No, it's the clipping for the
work. No, it's the clipping for the
reward function loss.
reward function loss.
Value value function learns to predict
Value value function learns to predict
the advantage function which is computed
the advantage function which is computed
based on the reward.
Maze run is not very
good value function similar to
cost. Um I mean supervised learning you
cost. Um I mean supervised learning you
often you have like one
often you have like one
loss but like not really
because you have two losses at least in
RL. Well, it is an MSE loss, but it's
RL. Well, it is an MSE loss, but it's
MSSE over the prediction of reward,
MSSE over the prediction of reward,
which is quite different from MSE over
which is quite different from MSE over
prediction of raw outputs or whatever or
prediction of raw outputs or whatever or
like of like a known
variable, prediction of returns, I
variable, prediction of returns, I
should say.
I'm trying to
I'm trying to
think what to do about
this. On one hand, like
kind of want to play with
kind of want to play with
um some of the
values or chain of
values or chain of
what? What chain of
what? What chain of
derivatives? Value function learns to
derivatives? Value function learns to
predict return. return is given by
predict return. return is given by
generalized advantage estimation or or
generalized advantage estimation or or
or in our case puffer advantage which is
or in our case puffer advantage which is
G plus V
G plus V
trace. Well, chain rule is just applied
trace. Well, chain rule is just applied
everywhere
everywhere
for like back prop in general, right?
for like back prop in general, right?
There's nothing special.
I'm just trying to make some good
I'm just trying to make some good
decisions here on like what I should run
decisions here on like what I should run
for these sweeps. I got to go soon as
for these sweeps. I got to go soon as
well. To be fair, I'm probably just
well. To be fair, I'm probably just
going to come back and launch these
going to come back and launch these
after dinner anyway. So, I let these
after dinner anyway. So, I let these
finish.
This was a value function clip in
uh the F
uh the F
coefficient. It's just clip coefficient
coefficient. It's just clip coefficient
that they use,
that they use,
right? Vlos
clipped clip
clipped clip
co which is like 0 2 or
whatever
whatever
2. And like if I go look
2. And like if I go look
at let's let me do one last thing here
at let's let me do one last thing here
that's kind of
that's kind of
important. If I like do this
important. If I like do this
I should
do. You've got one run out here.
Why the hell does it do this is what I
Why the hell does it do this is what I
want to
know. I got to figure out what the hell
know. I got to figure out what the hell
that even does to the policy.
bizarre.
Well, I'm going to call it. I'm going to
Well, I'm going to call it. I'm going to
go uh I got to go do some stuff and I
go uh I got to go do some stuff and I
got to get dinner go out for dinner
got to get dinner go out for dinner
today and um I'll probably be back in
today and um I'll probably be back in
the evening for a little bit. We will
the evening for a little bit. We will
see. But I do want to get these sweeps
see. But I do want to get these sweeps
done. So, for the folks watching here,
done. So, for the folks watching here,
upper.ai for all the things, all free
upper.ai for all the things, all free
and open source. Want to help me out for
and open source. Want to help me out for
free? Star the repo. And if you want to
free? Star the repo. And if you want to
get involved with development, join the
get involved with development, join the
Discord and also follow me on X for some
Discord and also follow me on X for some
periodic reinforcement learning content.
periodic reinforcement learning content.
So, thank you and I'll be back in a

Kind: captions
Language: en
Okay, we should be live
Okay, we should be live
here.
here.
Hi. So, uh today we are going to
Hi. So, uh today we are going to
do a fair bit of experiment
do a fair bit of experiment
analysis. We are going to
do probably some work on the
do probably some work on the
blogs. Just going to be chill work day
blogs. Just going to be chill work day
working on release.
We'll see how the experiments have gone
We'll see how the experiments have gone
overnight and uh we will probably start
overnight and uh we will probably start
with launching some new
with launching some new
ones. Pop out the chat real quick
ones. Pop out the chat real quick
because I forgot to do
that. One
second chat.
So, we're going to start right here.
Two
sweeps and on real time
sweeps and on real time
here. This
one. There we go. 17 18 seconds. So,
one. There we go. 17 18 seconds. So,
we're sub 20. This is what we want to
we're sub 20. This is what we want to
see.
see.
And this other sweep I believe is
not 23. So it's pretty interesting that
not 23. So it's pretty interesting that
just preventing this thing from doing
just preventing this thing from doing
multiple
epochs has a pretty big effect. So I
epochs has a pretty big effect. So I
think that this means that probably
think that this means that probably
uh our sensitivity
uh our sensitivity
to our sensitivity for sweeping discrete
to our sensitivity for sweeping discrete
variables is probably
variables is probably
substantially too
low. These both on the same
machine actually. Hang on. That's a good
machine actually. Hang on. That's a good
point.
point.
Let me go check what machines I launched
Let me go check what machines I launched
these on because I might have launched
these on because I might have launched
one on a faster machine than the other,
one on a faster machine than the other,
which would be uh a bad mistake on my
part. I don't know why I did
email. We have this one.
We
The obvious next logical experiment
here. Trying to think which machine I
here. Trying to think which machine I
want to use for this.
status real quick.
So this is up to
date. It also be up to date.
on power
two.
Any specific reason why you pick Neptune
Any specific reason why you pick Neptune
over ML Flow? I haven't tried ML Flow.
over ML Flow? I haven't tried ML Flow.
Um, we support both WB and
Um, we support both WB and
Neptune. ML Flow
good. They have like almost the exact
good. They have like almost the exact
same landing page.
same landing page.
That's
funny. These like these all look like
funny. These like these all look like
clones of each
other. Is there anything that you like
other. Is there anything that you like
about this one specifically?
about this one specifically?
So, Neptune, I like um I like their
So, Neptune, I like um I like their
dashboard views for one. I like that I
dashboard views for one. I like that I
can just define a whole bunch of
can just define a whole bunch of
different plots here and then apply them
different plots here and then apply them
to any experiment really easily. I also
to any experiment really easily. I also
like their download API. The fact that
like their download API. The fact that
they just give you all your data as a
they just give you all your data as a
SQL table is really really nice. So, I
SQL table is really really nice. So, I
don't use it that often.
Um, and it's also a max of 200 points
Um, and it's also a max of 200 points
per plot at the moment and uh should be
per plot at the moment and uh should be
bigger in the future. Only thing I'm not
bigger in the future. Only thing I'm not
sure about actually I think they replied
sure about actually I think they replied
to
this if I check
this if I check
here I think they
here I think they
replied cuz there was a question about
replied cuz there was a question about
open
source closed access for new
So, actually, I might be forced to ditch
So, actually, I might be forced to ditch
this anyways because
this anyways because
um they don't know if
um they don't know if
uh if they're going to have an open
uh if they're going to have an open
source thing or not. So, if I have to
source thing or not. So, if I have to
ditch it, I have to ditch it.
It's kind of crazy for them to like 5x
It's kind of crazy for them to like 5x
their pricing and delete their free tier
their pricing and delete their free tier
if that's what they're going to do.
if that's what they're going to do.
Starting $250 a month is just
Starting $250 a month is just
dumb. So if they want to do that, they
dumb. So if they want to do that, they
will uh they'll go bankrupt, but that's
will uh they'll go bankrupt, but that's
up to
them. Mlow is is it all open source
them. Mlow is is it all open source
then? because all of these different
then? because all of these different
companies have on-prem, but it's not
companies have on-prem, but it's not
actually open source, and they charge
actually open source, and they charge
you a ton for
you a ton for
on-prem. Like, that's their most
on-prem. Like, that's their most
expensive
option. I do very much like Neptune's
option. I do very much like Neptune's
dashboards
thing. It's also kind of ridiculous how
thing. It's also kind of ridiculous how
many of these companies there are if you
many of these companies there are if you
think about it because like it's not a
think about it because like it's not a
big market at
big market at
all, right?
all, right?
like you're basically like relying on a
like you're basically like relying on a
few orgs to just massively overpay you
few orgs to just massively overpay you
and then fund your company. But I don't
and then fund your company. But I don't
know how the hell there's like in a
know how the hell there's like in a
space this small, there are like four or
space this small, there are like four or
five different different things. It's
five different different things. It's
kind of ridiculous. And how none of them
kind of ridiculous. And how none of them
are actually nailing it. Like they all
are actually nailing it. Like they all
write this really shitty web code that's
write this really shitty web code that's
just way too slow.
last place I interned out. We had two to
last place I interned out. We had two to
move from Wii because we got hit with
move from Wii because we got hit with
downright ridiculous fees.
downright ridiculous fees.
Yeah, I mean I want to have it's tough
Yeah, I mean I want to have it's tough
because I think wi is the biggest one
because I think wi is the biggest one
right now. So I have to have integration
right now. So I have to have integration
with that for uh for users.
I was going to do like Neptune as our
I was going to do like Neptune as our
default one actually because I think
default one actually because I think
it's substantially better, but we'll
it's substantially better, but we'll
have to see what they do with their next
have to see what they do with their next
release. Like if they make it no free
release. Like if they make it no free
tier
tier
um and $250 a month pricing, then like
um and $250 a month pricing, then like
even if I wanted to use it and would pay
even if I wanted to use it and would pay
for it, I still can't have it be the
for it, I still can't have it be the
default and puffer because that's just
default and puffer because that's just
downright stupid for an open source
downright stupid for an open source
library, right?
So, we'll see if they do that or not.
So, we'll see if they do that or not.
They have a good product.
They have a good product.
Um, it makes sense to have the free
Um, it makes sense to have the free
tier, I think, for this even if you like
tier, I think, for this even if you like
don't give a ton of data or like one
don't give a ton of data or like one
project or whatever. um because it'll be
project or whatever. um because it'll be
good for like individual use which is
good for like individual use which is
all I need for open source tier and then
all I need for open source tier and then
like it'll get bigger companies onto
like it'll get bigger companies onto
their platform because like people use
their platform because like people use
Puffer but that's up to
Puffer but that's up to
them
them
right I'm not going to endorse it at all
right I'm not going to endorse it at all
in the future if they do it
Okay. So, this is what I was doing
here. I'm going set the scale to be two.
here. I'm going set the scale to be two.
And then I'm going to run this sweep
again, Nvidia
again, Nvidia
drivers. There's so many like these
drivers. There's so many like these
little annoying pet
little annoying pet
quirks. It's just like why does this
quirks. It's just like why does this
stuff happen? Like why does just Docker
stuff happen? Like why does just Docker
forget that I have a
GPU? Driver library
mismatch. This can't
be Why Why do the drivers just do this?
I didn't update anything. It just
I didn't update anything. It just
randomly does this.
Really? I'll reboot the machine.
Hey,
Boxing. And we're waiting for this
Boxing. And we're waiting for this
machine to reboot so I can launch a job.
machine to reboot so I can launch a job.
container also Debian. No, we were doing
container also Debian. No, we were doing
um we've moved from Debian host in
um we've moved from Debian host in
Abuntu container to Abuntu host Abuntu
container. They're working on
container. They're working on
pre-release.
pre-release.
Yep. It's mostly we're doing experiments
Yep. It's mostly we're doing experiments
now. So, we're trying to speedrun
now. So, we're trying to speedrun
Breakout. We're trying to figure out
Breakout. We're trying to figure out
like what's the fastest possible
like what's the fastest possible
Breakout solve. That's going to be like
Breakout solve. That's going to be like
one of our demos because I want to do
one of our demos because I want to do
this thing basically where like you know
this thing basically where like you know
I just grab puffer lib and then I just
I just grab puffer lib and then I just
in one gif right I train a model on
in one gif right I train a model on
breakout I grab it and I evaluate it
As I said, I did a PR with changing the
As I said, I did a PR with changing the
name. I will go double check. Do you can
name. I will go double check. Do you can
you do you have a trainable model yet?
you do you have a trainable model yet?
Like do you have a model that does the
Like do you have a model that does the
end of in a way that you're happy with
end of in a way that you're happy with
or
no? Box is not coming back online
no? Box is not coming back online
yet. It was weird. Let me go double
yet. It was weird. Let me go double
check um with this box real
So, um, there's this really annoying
So, um, there's this really annoying
thing with modern desktop computers,
thing with modern desktop computers,
desktop motherboards. They don't turn on
desktop motherboards. They don't turn on
if you don't have a monitor plugged in.
if you don't have a monitor plugged in.
And I forgot to buy one of the dummy
And I forgot to buy one of the dummy
plugs that tricks it into thinking that
plugs that tricks it into thinking that
there is one plugged in. So,
there is one plugged in. So,
oops. It should come back on in a
oops. It should come back on in a
second. We'll
see. Nothing finds equilibri if you're
see. Nothing finds equilibri if you're
still here boxing.
still here boxing.
Um, I don't know. Maybe make the problem
simpler. You know, give it like a map
simpler. You know, give it like a map
with a bush and like two
agents. run a
agents. run a
sweep. It's a tough
sweep. It's a tough
problem. I think most humans fail that
problem. I think most humans fail that
problem.
So, works like a charm.
What the heck is wrong with
um I don't
understand how did it uninstall my
understand how did it uninstall my
drivers.
drivers.
Like, how is that a Yeah.
Makes no bloody sense that my server can
Makes no bloody sense that my server can
be fine one evening, nothing changes,
be fine one evening, nothing changes,
and in the morning Nvidia is just
and in the morning Nvidia is just
somehow not there. I don't have like
somehow not there. I don't have like
auto whatever update on
Somehow some library is missing that
Somehow some library is missing that
wasn't missing yesterday.
And now it
And now it
works.
works.
Weird. GPU driver would not
Weird. GPU driver would not
work. Well, this I actually I did have
work. Well, this I actually I did have
to do that cuz this needs specifically
to do that cuz this needs specifically
570 open. It says on the website like,
570 open. It says on the website like,
yep, you need 570. It'll like black
yep, you need 570. It'll like black
screen won't boot from motherboard if
screen won't boot from motherboard if
you do that. It needs 570 open
you do that. It needs 570 open
specifically. I somehow it uninstalled
specifically. I somehow it uninstalled
some library that it needed on the host
some library that it needed on the host
which makes no
which makes no
sense but whatever
This is going to fail because it needs
This is going to fail because it needs
uh my
uh my
key. Nope, I forgot I put it in an end
key. Nope, I forgot I put it in an end
variable. We're
good. Let's make sure that this actually
good. Let's make sure that this actually
finishes
running. This should give us decent
running. This should give us decent
speedun.
So, it would have to do 60 million steps
So, it would have to do 60 million steps
at 4 million SPS to get
at 4 million SPS to get
um 15 second
solve. Okay, we'll let that be.
Okay, so breakout speedrun probably will
Okay, so breakout speedrun probably will
be in a decent enough spot. I think
be in a decent enough spot. I think
um there like a few more params we can
um there like a few more params we can
sweep here and there. We'll get a couple
sweep here and there. We'll get a couple
more of these in per day. That's good.
more of these in per day. That's good.
Let's look at the rest of stuff. I did a
Let's look at the rest of stuff. I did a
draft for protein yesterday.
draft for protein yesterday.
We have this box here that we can run
We have this box here that we can run
and run extra stuff on as well. This one
here.
Oops. Okay. Okay, so we did draft a
Oops. Okay. Okay, so we did draft a
protein. We haven't drafted new M's yet.
protein. We haven't drafted new M's yet.
That's going to be a lot of like assets.
That's going to be a lot of like assets.
Algorithm improvements are pretty
Algorithm improvements are pretty
experiment heavy. Okay.
remaining
questions. Okay, so we're answering this
questions. Okay, so we're answering this
right
now. Priority
sweep. We could work in the
sweep. We could work in the
um the other prioritized replay
um the other prioritized replay
variables,
variables,
right? The sweeps. just have everything
right? The sweeps. just have everything
in the sweep
in the sweep
really. It shouldn't be an issue to have
really. It shouldn't be an issue to have
a ton of variables in the sweep provided
a ton of variables in the sweep provided
that
that
um they're continuous. I think
um they're continuous. I think
continuous bars in sweep
continuous bars in sweep
generally is pretty much
fine. And I guess
fine. And I guess
technically technically you need like
technically technically you need like
more and more samples to
more and more samples to
rank, but I haven't seen any big issues
yet. We can definitely do something
yet. We can definitely do something
about that. I think that that's probably
about that. I think that that's probably
what we should do today is try to get
what we should do today is try to get
some really killer maze
some really killer maze
sweep. Get like a baseline on maze and
sweep. Get like a baseline on maze and
then get some really killer maze sweep.
then get some really killer maze sweep.
Yeah, let's do that.
Okay, so this is the crazy sweep
here. Got real
here. Got real
time. And we got to just go pick one of
time. And we got to just go pick one of
these things.
Purple one is
good. And I really wish there were an
good. And I really wish there were an
easier way to just click the damn thing
easier way to just click the damn thing
that you
want. Just add a filter maybe.
This one's not as good actually as the
This one's not as good actually as the
other
other
ones. This is the one that's really
ones. This is the one that's really
quite
good. 0.9
like this one
like this one
maybe LSTM
maybe LSTM
question. What happens if the number of
question. What happens if the number of
consecutive time steps per
consecutive time steps per
agent per batch is less than BPT
agent per batch is less than BPT
horizon? You have num
horizon? You have num
m and effectively only get
uh it should break is what should
uh it should break is what should
happen. It should give you an error of
happen. It should give you an error of
some variety. And in fact in the latest
some variety. And in fact in the latest
versions I actually I have an auto
versions I actually I have an auto
option. So like let's say that you set
option. So like let's say that you set
numbum ms and uh batch size then it
numbum ms and uh batch size then it
should autocalc bt horizon or if you set
should autocalc bt horizon or if you set
bp horizon and ms it should autocal
bp horizon and ms it should autocal
batch size. I'm trying to make robust
batch size. I'm trying to make robust
ways to do this. But generally what
ways to do this. But generally what
we've done with this update is we've
we've done with this update is we've
given up a little bit of the flexibility
given up a little bit of the flexibility
of um the previous batching system in
of um the previous batching system in
order to enable all the advantage
order to enable all the advantage
filtering stuff that we do now. But that
filtering stuff that we do now. But that
has to operate on the level of
has to operate on the level of
trajectory segments. It's really worth
trajectory segments. It's really worth
it though from what we can see.
Okay. So, this is
Okay. So, this is
90% on mazes.
This is a very good policy.
Big bash.
is 250
is 250
mil 55 mil. They're pretty good.
mil 55 mil. They're pretty good.
One update
puck. Anything
puck. Anything
else? I think that's it.
Cool. So, this is a 3minut run. 1.4 mil
Cool. So, this is a 3minut run. 1.4 mil
SPS for a 2.2 million parameter model is
SPS for a 2.2 million parameter model is
amazing. And we'll see if this does
amazing. And we'll see if this does
anything. We
have this guy. No, this
guy go
Be right back. All this runs.
I'm just merging latest dev. Did you
I'm just merging latest dev. Did you
delete demo.py? Yes. You use clean puff
delete demo.py? Yes. You use clean puff
RL the same way you would have used
RL the same way you would have used
demo.py before.
So this doesn't
reproy. We get
reproy. We get
75. We don't get
90. Did I miss a parameter?
So, this does have some noise in
So, this does have some noise in
it, but
it, but
um yeah, not fully reproing is not
um yeah, not fully reproing is not
great.
I'm sure this is still a decent policy,
I'm sure this is still a decent policy,
right?
Load model
path. Wonder if it eventually gets out.
path. Wonder if it eventually gets out.
Yep. Oh, that's actually a very solid
Yep. Oh, that's actually a very solid
policy. Holy, look at the
policy. Holy, look at the
exploration. It doesn't have perfect
exploration. It doesn't have perfect
memory,
memory,
but it does. There's just this getting
but it does. There's just this getting
like stuck
thing. Yeah, that's crazy
good. It does get stuck in weird ways
good. It does get stuck in weird ways
occasionally.
This is
This is
bizarre in particular. and put Aaron on
bizarre in particular. and put Aaron on
that maybe.
What are the uh the clip
cos for Yes.
So wait this importance
thing we clip the importance
I can do like 0 to five uniform, right?
Now you have all your priority
coefficients. this up with gamma
lambda not sweep. Oh yeah. Did it was it
lambda not sweep. Oh yeah. Did it was it
one update
one update
epoch? That could totally be it, right?
Update
epoch one. Okay, that's not it.
Yeah. So, we're going to go to this box
Yeah. So, we're going to go to this box
now and we're going to
now and we're going to
sweep going to sweep grid. I
believe total time steps goes
believe total time steps goes
to 550 mil to 600 mil.
batch
batch
size. Do I have this on sweep or
not? The BPT Horizon gets swept.
The batch size should be auto.
Guess this is going to be proper grid.
Guess this is going to be proper grid.
Okay.
Make sure that this
Make sure that this
solves the
meantime. How's our breakout
going? Already 29
experiments. Pretty
good. We got
good. We got
23 with I don't know if these are full
23 with I don't know if these are full
solve
solve
scores, but this is pretty decent
scores, but this is pretty decent
looking.
looking.
We're getting these shorter
runs. Take a while to
runs. Take a while to
see. Okay, so that's uh two experiments
see. Okay, so that's uh two experiments
launched. We've got a full sweep on
launched. We've got a full sweep on
maze. We've got the breakout speedrun
maze. We've got the breakout speedrun
update. That's kind of all we need to
update. That's kind of all we need to
have uh running for now.
see if anybody needs me on the Discord.
see if anybody needs me on the Discord.
And then if not, we will probably get to
And then if not, we will probably get to
working on one of the release blog posts
working on one of the release blog posts
for
this. Just we make a little bit of
this. Just we make a little bit of
uh progress. I I don't know why
uh progress. I I don't know why
Discord's not opening.
There it is. Weird.
Well, nobody needs stuff. Just dumb [ __ ]
Well, nobody needs stuff. Just dumb [ __ ]
in
chat. Really dumb [ __ ] in chat.
Well, that's funny. So, restarting uh
Well, that's funny. So, restarting uh
Discord closed my browser tabs. Yeah,
Discord closed my browser tabs. Yeah,
that makes
that makes
sense. Me go get my reream tab back.
So we uh we did uh this initial protein
So we uh we did uh this initial protein
draft. I think we have this one for now.
draft. I think we have this one for now.
Now, I don't want to polish this too
Now, I don't want to polish this too
much
much
yet. Do I have any non-proin notes down
yet. Do I have any non-proin notes down
here?
here?
No. We're going to make next
one. Do algo improvements. New
M's the highlight.
I'm trying to think how I just like how
I'm trying to think how I just like how
do I make these interesting and exciting
do I make these interesting and exciting
in a way that it's not just like the
in a way that it's not just like the
obligatory release blog post,
right? Plus the algo stuff can be pretty
right? Plus the algo stuff can be pretty
interesting.
Trying to think what is the best claim I
Trying to think what is the best claim I
can make
can make
here. The most precise claim I can make
here. The most precise claim I can make
here. It is kind of just better than PO.
I hate when
I hate when
um Belche just doesn't
um Belche just doesn't
recognize words.
How many experiments do I have on
How many experiments do I have on
Neptune?
Have the Apple
self-driving flow.
What did we do this on like summed
advantage? Was like summed advantage.
Vantage.abs. Yeah.
forget how we sampled
this. I think we did prioritize replay
this. I think we did prioritize replay
based on this.
Yeah.
This is probably going to be like below
This is probably going to be like below
this will be like an image of like
this will be like an image of like
before and after like a sweeper
whatever. Oh, hey Weston. God damn it. I
whatever. Oh, hey Weston. God damn it. I
didn't notice your message cuz this
didn't notice your message cuz this
thing I forgot it crashed my browser and
thing I forgot it crashed my browser and
it
it
um crashed my uh my chat
um crashed my uh my chat
client. Let me grab
this. Usually I do this so that I have
this. Usually I do this so that I have
this like just under where my camera is
this like just under where my camera is
so I can actually see
messages.
Here we
go. Why are you adding the reream bot?
real message. Huh?
Uh, the reream bot is is a bot. It's
Uh, the reream bot is is a bot. It's
like the reream bot is
like the reream bot is
uh Oh, does it
uh Oh, does it
relay? I don't think I have it set up to
relay? I don't think I have it set up to
relay to other
relay to other
chats, but they do pop up on the screen.
chats, but they do pop up on the screen.
Does it?
H. They do pop up on the screen right
H. They do pop up on the screen right
here
here
though. Either
though. Either
way, I think it's platform specific.
way, I think it's platform specific.
Like I don't know if X receives messages
Like I don't know if X receives messages
from other platforms or not.
Go find the
Go find the
uh prioritize
replay. We can correct this fully
replay. We can correct this fully
compensates for non-uniform
compensates for non-uniform
probabilities. Beta is
one. Where's
one. Where's
alpha? There's an alpha term as well.
Alpha 0 and beta 1.
Excuse me. Anyways, they're taking a
Excuse me. Anyways, they're taking a
break my end I was making because it got
break my end I was making because it got
difficult. So, I'm making
difficult. So, I'm making
Sudoku. I have no
Sudoku. I have no
idea. I have no idea if Sudoku is easy
idea. I have no idea if Sudoku is easy
or not, to be honest. The action space
or not, to be honest. The action space
for that's going to be a pain in the
for that's going to be a pain in the
ass.
do funny Matrix
do funny Matrix
stuff. Rise of the half
stuff. Rise of the half
moon. What's
this? Is this a card game?
Do they just have random devs at Google
Do they just have random devs at Google
that just like make these for the hell
that just like make these for the hell
of it?
[Music]
What?
[Music]
Confused. Place your card.
Confused. Place your card.
[Music]
Phases are full.
[Music]
[Music]
What was this? An existing game or was
What was this? An existing game or was
this like some Googler was bored?
this like some Googler was bored?
[Music]
[Music]
[Music]
That's
[Music]
[Music]
funny. Yeah. I don't know.
Weird.
the doco is one to nine. I had to make
the doco is one to nine. I had to make
action zero to
eight and then just do action plus
eight and then just do action plus
one. I saved the action as one and nine
one. I saved the action as one and nine
and didn't notice.
and didn't notice.
Yeah, you'll do that. That's a common
Yeah, you'll do that. That's a common
one. I've done it before as well.
Do you think the same approach is fact
Do you think the same approach is fact
practical? Wait. Do you think the same
practical? Wait. Do you think the same
approach is practical for a field like
approach is practical for a field like
computer vision or do you think it's
computer vision or do you think it's
competitive? The same approach of what
Prime. Um, if you're the same guy from
Prime. Um, if you're the same guy from
before here, I don't know what the
before here, I don't know what the
question
is like the same approach for what is
is like the same approach for what is
practical.
This is pretty
This is pretty
good. How do you deep do you think I'd
good. How do you deep do you think I'd
have to make my neural net to be able to
have to make my neural net to be able to
replicate a Sudokco algorithm? I'm
replicate a Sudokco algorithm? I'm
assuming relatively
assuming relatively
deep. Doubt
deep. Doubt
it. I The bigger problem is the only
it. I The bigger problem is the only
thing that you're going to have as an
thing that you're going to have as an
issue with Sudoku, it's the action
issue with Sudoku, it's the action
space. Like how the hell do you do the
space. Like how the hell do you do the
action space for Sudoku,
right? I mean, isn't
right? I mean, isn't
it it's 9
it it's 9
by9? No, it's not. It's 9 by9 with nine
by9? No, it's not. It's 9 by9 with nine
options
each. So like the flat action space is
each. So like the flat action space is
almost a thousand
dimensional, right?
What do you think the action space is?
What do you think the action space is?
Right. You have to be able to select a
cell and then fill in a number on that
cell. What do you mean you're not
cell. What do you mean you're not
selecting? So, you're just going
selecting? So, you're just going
through. Well, you can't do that, right?
through. Well, you can't do that, right?
That's not how got to go. All right,
That's not how got to go. All right,
we'll chat later.
move on. Coaster kneeling prioritized 1H
move on. Coaster kneeling prioritized 1H
perm set. This is pretty good.
like as you have you taken things into
like as you have you taken things into
your own hands for RL research by
your own hands for RL research by
building your own algorithms from
building your own algorithms from
scratch. Yeah. Do you think the same
scratch. Yeah. Do you think the same
approach is practical and CV a waste of
approach is practical and CV a waste of
time? I don't think CV is anywhere near
time? I don't think CV is anywhere near
as cursed as reinforcement learning is.
as cursed as reinforcement learning is.
um reinforcement learning. There was a
um reinforcement learning. There was a
kind of a unique opportunity here just
kind of a unique opportunity here just
because people were hard trolling on the
because people were hard trolling on the
engineering side and they got the
engineering side and they got the
engineering side so horribly horribly
engineering side so horribly horribly
wrong that like there was this just
wrong that like there was this just
massive massive room for improvement. Um
massive massive room for improvement. Um
there's definitely cool stuff you can do
there's definitely cool stuff you can do
in CV and if you're good like obviously
in CV and if you're good like obviously
I mean I'm a big believer that anyone
I mean I'm a big believer that anyone
can really revolutionize a field if
can really revolutionize a field if
they're good enough, right? like
they're good enough, right? like
single-handedly
single-handedly
um you can make a huge impact, but
um you can make a huge impact, but
there's not like the obvious same amount
there's not like the obvious same amount
of opportunity as there would be in RL
of opportunity as there would be in RL
and it wouldn't be the next thing I
and it wouldn't be the next thing I
would go to to look at.
would go to to look at.
Um yeah, I like specifically I look for
Um yeah, I like specifically I look for
areas, right? I like to find problems
areas, right? I like to find problems
where um I see like a massive
where um I see like a massive
opportunity to change stuff and nobody's
opportunity to change stuff and nobody's
doing it, right? That's kind of what I
doing it, right? That's kind of what I
did with RL. And like here, I haven't
did with RL. And like here, I haven't
even gone that far into the algorithm
even gone that far into the algorithm
changes yet, right? We really just have
changes yet, right? We really just have
a few small changes and already we're
a few small changes and already we're
doing this.
Well, this is a nice short blog post,
Well, this is a nice short blog post,
right?
These don't need to be super long blog
These don't need to be super long blog
posts, right? I think that this
posts, right? I think that this
covers like obviously each of these
covers like obviously each of these
there's going to be like an experiment
there's going to be like an experiment
or two for each of these. Hello to
or two for each of these. Hello to
YouTube folks as well. I see we have a
YouTube folks as well. I see we have a
fair few people here.
fair few people here.
Um, what I'm doing right now is I'm
Um, what I'm doing right now is I'm
going back and forth between
going back and forth between
hyperparameter
hyperparameter
experiments for the uh the next
experiments for the uh the next
release and working on the various
release and working on the various
different blog posts for all the
different blog posts for all the
different things that we've done. Buffer
different things that we've done. Buffer
advantage is quite nice. I think that
advantage is quite nice. I think that
this is like people are going to going
this is like people are going to going
to be happy with this
to be happy with this
overall. Let's see how the sweep is
overall. Let's see how the sweep is
going.
We've
We've
got
got
86 experiments
here. And the best one is how
long? Yeah. How long the best experiment
long? Yeah. How long the best experiment
is?
is?
19ish seconds I think for full solve it
19ish seconds I think for full solve it
looks like. So I think our best before
looks like. So I think our best before
this was 17, but we have more than 100
this was 17, but we have more than 100
experiments left. So we'll see how much
experiments left. So we'll see how much
this improves. And then if I check mazes
out maze is not doing so
out maze is not doing so
hot which is kind of weird.
We will uh we'll have to check back in
We will uh we'll have to check back in
on why that is. I do remember mazes
on why that is. I do remember mazes
being um like they took a while to
being um like they took a while to
sweep, so it could just be that. We'll
sweep, so it could just be that. We'll
keep checking back in on those though.
We did draft of these two
We did draft of these two
articles. We will probably now
articles. We will probably now
do I could do CAPI draft. That's pretty
easy. I'll be right back though. I'm
easy. I'll be right back though. I'm
going to go use the restroom and do a
going to go use the restroom and do a
couple quick sets and then uh yeah, I'll
couple quick sets and then uh yeah, I'll
have another couple of hours to work on
have another couple of hours to work on
this
this
still. Be right back.
All
right. All right.
right. All right.
we do
we do
um quickie API blog
um quickie API blog
post. I think this will be the one that
post. I think this will be the one that
people care the least about, but
people care the least about, but
uh
uh
well, I don't want to do a blog post
well, I don't want to do a blog post
that people aren't going to care
that people aren't going to care
about. Let me see if there's anything
about. Let me see if there's anything
cool either to do instead of this one or
cool either to do instead of this one or
a way that people would find this
a way that people would find this
interesting.
building fast sims
fast. I think this would be I think we
fast. I think this would be I think we
can actually maybe get something out of
this. Building fast sims fast,
this. Building fast sims fast,
right? If I do like the puffer c API,
right? If I do like the puffer c API,
nobody cares. But if it's like building
nobody cares. But if it's like building
fast Sims fast, like how we build fast
fast Sims fast, like how we build fast
Sims fast or
something, I think we can do something
something, I think we can do something
with this.
This release includes improved way of
This release includes improved way of
connecting C environments to Python.
connecting C environments to Python.
Yeah, but the thing is I don't think
Yeah, but the thing is I don't think
anybody gives a [ __ ] about that, right?
anybody gives a [ __ ] about that, right?
Is the thing. If I just write something
Is the thing. If I just write something
like that where it's like that's like
like that where it's like that's like
something you put in like release notes,
something you put in like release notes,
right?
right?
I don't think that gets anyone
I don't think that gets anyone
excited, right? I want
like So, I mean, I kind of have to think
like So, I mean, I kind of have to think
of this stuff
of this stuff
like this is not just meant to be docs,
like this is not just meant to be docs,
right? It's kind of interesting now that
right? It's kind of interesting now that
it it's sort of my job to do a little
it it's sort of my job to do a little
bit of the marketing for Puffer as well.
bit of the marketing for Puffer as well.
Um, and like definitely like if you
Um, and like definitely like if you
don't want to think of it as marketing,
don't want to think of it as marketing,
you think of it as like how do we grow
you think of it as like how do we grow
the project in the library. Um, so it's
the project in the library. Um, so it's
like, you know, what type of stuff can I
like, you know, what type of stuff can I
write that will get people interested in
write that will get people interested in
trying out Puff or using Puffer and uh
trying out Puff or using Puffer and uh
seeing all the stuff we built and like
seeing all the stuff we built and like
that means not just playing to the
that means not just playing to the
existing bass. So like you'll see that
existing bass. So like you'll see that
in some of the articles, right? I'll
in some of the articles, right? I'll
like explain what something like a
like explain what something like a
standard thing in RL is. I'll give like
standard thing in RL is. I'll give like
a two sentence on what it is, but really
a two sentence on what it is, but really
simple. Like I try to do more things to
simple. Like I try to do more things to
bring people into
bring people into
it. Now, I don't go to the length of
it. Now, I don't go to the length of
like I don't really try to market stuff
like I don't really try to market stuff
to people who just like aren't going to
to people who just like aren't going to
be interested by any means, right? I
be interested by any means, right? I
don't try to like convince people to be
don't try to like convince people to be
interested, but there are people who are
interested, but there are people who are
like if they thought that they could get
like if they thought that they could get
good at this and like do cool work if
good at this and like do cool work if
they put in effort, they would put in
they put in effort, they would put in
effort. And those are the people I'm
effort. And those are the people I'm
interested in getting on to uh to see
interested in getting on to uh to see
our stuff.
I don't like that in that that opening.
I don't like that in that that opening.
I don't even like this intro
heading. I think we do bottom up here.
It's like I have to think of these
It's like I have to think of these
things like so differently from how I
things like so differently from how I
normally would. It's kind of fun to be
normally would. It's kind of fun to be
honest.
I actually kind of enjoy doing some of
I actually kind of enjoy doing some of
this type of writing myself because
this type of writing myself because
like one thing that really annoys the
like one thing that really annoys the
hell out of me is when marketing people
hell out of me is when marketing people
will like, "Oh yeah, let's sell it." The
will like, "Oh yeah, let's sell it." The
best way to sell about it is just to
best way to sell about it is just to
like [ __ ] lie. Basically, just
like [ __ ] lie. Basically, just
completely misrepresent what the thing
completely misrepresent what the thing
is. So, it's interesting to me to like
is. So, it's interesting to me to like
how do I accurately represent what it is
how do I accurately represent what it is
that we do while actually telling you
that we do while actually telling you
what it does?
Yeah, it turns out it's really easy to
Yeah, it turns out it's really easy to
market stuff if you just [ __ ] lie,
market stuff if you just [ __ ] lie,
right? It's like we discovered LLMs are
right? It's like we discovered LLMs are
really persuasive if they lie was the
really persuasive if they lie was the
recent research. It's like, yep.
What are your thoughts
What are your thoughts
on I've never heard of latest
tweets? Is this
Huh? None of that's true.
Yeah, I have no idea who this guy
Yeah, I have no idea who this guy
is. I don't think Is this I don't even
is. I don't think Is this I don't even
think is this an RL guy? I think he's
think is this an RL guy? I think he's
just
just
like Yeah. No, this is just some random
like Yeah. No, this is just some random
dude. I don't know.
You don't need a [ __ ] 100page RL book
You don't need a [ __ ] 100page RL book
is the thing to learn RL. You just need
is the thing to learn RL. You just need
to start doing
something though. I probably will
something though. I probably will
sometime soon. I've literally never read
sometime soon. I've literally never read
the Sutton and Bardo book. In fact, I've
the Sutton and Bardo book. In fact, I've
never read a single textbook in AI, ML,
never read a single textbook in AI, ML,
RL. I've never read a single textbook in
RL. I've never read a single textbook in
any of these.
any of these.
Like some people just like textbooks,
Like some people just like textbooks,
which is cool and
which is cool and
all, but you can kind of also just start
all, but you can kind of also just start
building
[ __ ] Yeah, but Yam's kind of gone crazy
lately. Brilliant guy, but he's gone
lately. Brilliant guy, but he's gone
kind of crazy.
Carpathy is brilliant. Carpathy is a
Carpathy is brilliant. Carpathy is a
funny dude in the sense that like he has
funny dude in the sense that like he has
some like brilliant insights and then he
some like brilliant insights and then he
also has some like absolutely awful
also has some like absolutely awful
takes on stuff. It's pretty funny.
takes on stuff. It's pretty funny.
I
I
uh I was interning in Fay's lab as a
uh I was interning in Fay's lab as a
high school student with uh with Justin
high school student with uh with Justin
while Andre was um was still there doing
while Andre was um was still there doing
his PhD. It was pretty
his PhD. It was pretty
cool. I have some funny little stories
cool. I have some funny little stories
on
that.
Yeah. Well, the thing is like I probably
Yeah. Well, the thing is like I probably
wasn't good enough back then to
wasn't good enough back then to
appreciate it. I was a [ __ ] awful
appreciate it. I was a [ __ ] awful
programmer. I was like 16 or 17. I was
programmer. I was like 16 or 17. I was
an awful awful programmer. Like holy
an awful awful programmer. Like holy
hell was I bad. Like dude I you've never
hell was I bad. Like dude I you've never
seen some of the code. I wrote like I
seen some of the code. I wrote like I
didn't know what a graph was or what a
didn't know what a graph was or what a
tree was. So I wrote like a 13 deep like
tree was. So I wrote like a 13 deep like
nested
nested
function recursive nightmare to try to
function recursive nightmare to try to
process a graph without knowing what a
process a graph without knowing what a
graph was and without knowing what BFS
graph was and without knowing what BFS
was. All right. I had some awful, awful
code. I was like by no means a natural.
code. I was like by no means a natural.
Yeah, exactly. That's how you learn,
right? Dude, there is like so much
right? Dude, there is like so much
stuff. that like there's so much just
stuff. that like there's so much just
basic stuff that you would expect
basic stuff that you would expect
somebody with my background to know that
somebody with my background to know that
I just have no idea of like at
I just have no idea of like at
all. And it's like I don't know but
all. And it's like I don't know but
whatever. It's like I'm still here and
whatever. It's like I'm still here and
I'm still getting done pretty awesome
stuff. How are you able to connect with
stuff. How are you able to connect with
these people and convince them to let
these people and convince them to let
you work with them? I cold emailed
FE in uh in like 2016. I cold emailed
FE in uh in like 2016. I cold emailed
Andrew Ing and I cold emailed FE. Andrew
Andrew Ing and I cold emailed FE. Andrew
didn't reply. Like Andrew didn't reply
didn't reply. Like Andrew didn't reply
and Feay
did. To be fair, I had like uh there was
did. To be fair, I had like uh there was
a high school research program. So like,
a high school research program. So like,
you know, my teacher also sent a thing
you know, my teacher also sent a thing
like, "Hey, you know, we do uh we have
like, "Hey, you know, we do uh we have
this research program. We've been
this research program. We've been
scientifically training these students
scientifically training these students
for the last year to hopefully do
for the last year to hopefully do
something kind of useful." So, I mean,
something kind of useful." So, I mean,
it wasn't just like a cold email out of
it wasn't just like a cold email out of
nothing, but it was still pretty darn
good. It's kind of crazy to think back
good. It's kind of crazy to think back
though on that and
though on that and
like I I honestly couldn't tell you if
like I I honestly couldn't tell you if
it was just like why it took me so long
it was just like why it took me so long
to become even baseline competent. I
to become even baseline competent. I
honestly like looking back I can't tell
honestly like looking back I can't tell
you if it was it was probably a
you if it was it was probably a
combination of like programming is
combination of like programming is
really hard. programming is taught
really hard. programming is taught
absolutely terrible. Like almost
absolutely terrible. Like almost
everything that's taught to you in a
everything that's taught to you in a
formal curriculum is the exact opposite
formal curriculum is the exact opposite
of what you should be doing.
of what you should be doing.
Um, you know, I wasn't just devoted to
Um, you know, I wasn't just devoted to
that. It's not like college or even
that. It's not like college or even
after where you have like a big chunk of
after where you have like a big chunk of
time to devote to getting good at a
time to devote to getting good at a
specific thing. I was like massively
specific thing. I was like massively
massively sleepdeprived trying to juggle
massively sleepdeprived trying to juggle
a billion
a billion
things. And I don't know, maybe at that
things. And I don't know, maybe at that
age you're just stupid as well. I don't
age you're just stupid as well. I don't
freaking know.
freaking know.
But
But
uh you know, you get there eventually.
like ML programming. Yeah.
I've literally I've never worked harder
I've literally I've never worked harder
than I did in high school. 12 and seven,
than I did in high school. 12 and seven,
man. I was sleeping at like two and
man. I was sleeping at like two and
waking up at
waking up at
7 if I was lucky. I think I averaged
7 if I was lucky. I think I averaged
like 110 hours a week for my last couple
like 110 hours a week for my last couple
years of high school. It was
years of high school. It was
awful. Yeah, it was just freaking awful.
I think I did like I probably did like
I think I did like I probably did like
90 hours a week for a decent chunk of
90 hours a week for a decent chunk of
undergrad. I never did triple digits
undergrad. I never did triple digits
though after that, you know. I never did
though after that, you know. I never did
triple digits after high school. And you
triple digits after high school. And you
can't either. Like you can only do that
can't either. Like you can only do that
when you're doing brain dead
when you're doing brain dead
work. Brain just does not do anything
work. Brain just does not do anything
that requires any amount of intelligence
that requires any amount of intelligence
at some point.
Weston, I get like minimum eight or nine
Weston, I get like minimum eight or nine
hours. Like I get eight hours minimum
hours. Like I get eight hours minimum
and usually nine
now. Like you just do not compromise on
now. Like you just do not compromise on
sleep at all. It's like the dumbest
sleep at all. It's like the dumbest
possible thing to compromise on. Like
possible thing to compromise on. Like
you have to because you're forced to
you have to because you're forced to
when you're in like the strict structure
when you're in like the strict structure
of a school program and like you know I
of a school program and like you know I
was trying to get into college and all
was trying to get into college and all
that, right? But afterwards, it's the
that, right? But afterwards, it's the
dumbest possible thing to compromise on.
And it's tough cuz like I wouldn't have
And it's tough cuz like I wouldn't have
told myself back then I wouldn't tell
told myself back then I wouldn't tell
younger me go get more sleep because
younger me go get more sleep because
like if I did I wouldn't have been able
like if I did I wouldn't have been able
to get done all the things I needed to
to get done all the things I needed to
get done right. But like it's just
get done right. But like it's just
rough. Why I even have Malik or Cal?
Uh, no. So, you do need you allocate.
Uh, no. So, you do need you allocate.
I'm calling it static memory because I'm
I'm calling it static memory because I'm
allocating once up front. It is
allocating once up front. It is
technically mal and that's because you
technically mal and that's because you
can't put everything on the stack. The
can't put everything on the stack. The
stack is not infinite. The stack is
stack is not infinite. The stack is
pretty
small. Stack is very small indeed.
small. Stack is very small indeed.
Speaking of which, article here. Um,
Yep, that's also
true. Well, you can still put stuff on
true. Well, you can still put stuff on
the stack at runtime,
the stack at runtime,
right? Like you can still
right? Like you can still
um I I mean that's what I meant, right?
um I I mean that's what I meant, right?
Like yeah, you can pre-allocate some
Like yeah, you can pre-allocate some
stuff, but like yes, that you can do
stuff, but like yes, that you can do
however big you want, but then like you
however big you want, but then like you
need to know how much memory you need
need to know how much memory you need
afterwards. I guess technically you
afterwards. I guess technically you
could just give yourself a giant buffer
could just give yourself a giant buffer
to work with at the start, but that's
to work with at the start, but that's
pretty
dumb. Malik once up front is fine. Malik
dumb. Malik once up front is fine. Malik
isn't
evil. Welcome to all the YouTube and
evil. Welcome to all the YouTube and
Twitch folks.
Twitch folks.
We're kind of chatting and researching
We're kind of chatting and researching
this and that at the moment, but also
this and that at the moment, but also
I'm working on blog post for the next
I'm working on blog post for the next
release currently on uh our how we make
release currently on uh our how we make
our environments super fast and simple.
our environments super fast and simple.
And then also periodically we are
And then also periodically we are
checking these uh
checking these uh
experiments. Oh, there you go. Look at
experiments. Oh, there you go. Look at
that. So like the sweep wasn't doing
that. So like the sweep wasn't doing
very well before and now look it just
very well before and now look it just
keeps going up and up and up like
keeps going up and up and up like
this. I bet this is just learning rate
this. I bet this is just learning rate
or something. There's got to be like
or something. There's got to be like
some dumb parameter that just takes a
some dumb parameter that just takes a
while to optimize.
Do you suggest or wait
Do you suggest or wait
to
to
University of
University of
Alberta? Uh I can't recommend a course
Alberta? Uh I can't recommend a course
that I have I don't know anything about.
that I have I don't know anything about.
Right.
Right.
I
I
um I have a very I have a very basic
um I have a very I have a very basic
quick start guide on my website that
quick start guide on my website that
gives you blogs and papers that you
gives you blogs and papers that you
should look at. Uh it assumes that you
should look at. Uh it assumes that you
have a basic knowledge of ML in general.
have a basic knowledge of ML in general.
So the only course I actually will
So the only course I actually will
consistently recommend is
consistently recommend is
CS231N for deep learning basics and then
CS231N for deep learning basics and then
from there you probably like need to
from there you probably like need to
start building things, reading papers
start building things, reading papers
and building things. Is it possible to
and building things. Is it possible to
use puffer to solve a 2x two Rubik's
use puffer to solve a 2x two Rubik's
cube? Well, yeah, of
cube? Well, yeah, of
course. Space will be No, it's not too
course. Space will be No, it's not too
large. RL solves way harder things than
large. RL solves way harder things than
Rubik's cubes. I'd be shocked if you
Rubik's cubes. I'd be shocked if you
couldn't do a 3x3 very, very
couldn't do a 3x3 very, very
easily. Andro Carpathy is really good.
easily. Andro Carpathy is really good.
Yeah, he's very good. So, Carpathy is
Yeah, he's very good. So, Carpathy is
very good. He has some good old blog
very good. He has some good old blog
posts on RL. The other really good
posts on RL. The other really good
person, and this is the blog post for
person, and this is the blog post for
this is in the quick start guide, which
this is in the quick start guide, which
is on puffer.ai as well. Um, Costa Ka is
is on puffer.ai as well. Um, Costa Ka is
amazing. Like the reason that I'm here
amazing. Like the reason that I'm here
solving RL and it hasn't been solved yet
solving RL and it hasn't been solved yet
is because Costa is doing language model
is because Costa is doing language model
stuff. Otherwise, he'd be doing it. Um,
stuff. Otherwise, he'd be doing it. Um,
Costa is
Costa is
awesome. Costa, CS Ta. He is the
awesome. Costa, CS Ta. He is the
developer of Clean RL, which before
developer of Clean RL, which before
Clean RL, all RL libraries sucked. Um,
Clean RL, all RL libraries sucked. Um,
after Clean RL, all RL libraries were
after Clean RL, all RL libraries were
still slow, but at least Clean RL was
still slow, but at least Clean RL was
like simple and easy to use.
5 to 6 days of P100 to solve a
5 to 6 days of P100 to solve a
3x3.
Um, no. Those people have to be
Um, no. Those people have to be
trolling. If you just write if you write
trolling. If you just write if you write
a quick little uh just write a quick
a quick little uh just write a quick
Rubik's cube environment and see it's
Rubik's cube environment and see it's
probably not that hard, right? If you at
probably not that hard, right? If you at
that guy on
that guy on
um on the Discord, he was actually
um on the Discord, he was actually
trying to write one in Numpai or
trying to write one in Numpai or
whatever. Like you can probably write
whatever. Like you can probably write
one pretty quick and
one pretty quick and
see if I want to be able to select
see if I want to be able to select
cells, I would make the action zero to
cells, I would make the action zero to
nine and make zero skip the next cell.
What? No, dude. Because then you have to
What? No, dude. Because then you have to
take freaking like if you want to get to
take freaking like if you want to get to
the last cell, you have to take 80 skip
the last cell, you have to take 80 skip
actions in a
actions in a
row. He's talking about Rubik's
cubes. Okay, look, Weston. If you
cubes. Okay, look, Weston. If you
actually want me to give you like a
actually want me to give you like a
reasonable way to do this that won't
reasonable way to do this that won't
suck, like this is what you do, okay?
suck, like this is what you do, okay?
You make the action space discreet. You
You make the action space discreet. You
make it uh 0 through eight or 1 through
make it uh 0 through eight or 1 through
nine, whatever. Okay? Action one selects
nine, whatever. Okay? Action one selects
which tile, you know, because it's 3x3
which tile, you know, because it's 3x3
of 3x3's. So, it selects which tile
of 3x3's. So, it selects which tile
you're going to fill in. Okay? Okay. And
you're going to fill in. Okay? Okay. And
then the next
then the next
action suggest uh selects
action suggest uh selects
which individual cell uh in that tile
which individual cell uh in that tile
you're going to fill in. And then the
you're going to fill in. And then the
last action selects the number. And you
last action selects the number. And you
can do that either as a three-way
can do that either as a three-way
multi-discreet or you can do it as a
multi-discreet or you can do it as a
sequence of three
actions. Try
both. That's how I did the market system
both. That's how I did the market system
for neural MMO. Like I just kind of
for neural MMO. Like I just kind of
imagined one really useful thing to do
imagined one really useful thing to do
in RL is just imagine your problem if
in RL is just imagine your problem if
your problem were like on a Game Boy or
your problem were like on a Game Boy or
something or like had to be played on
something or like had to be played on
like a numpad like how would you design
like a numpad like how would you design
the UI and then just build it that
way there. That'll actually solve it for
way there. That'll actually solve it for
you. That'll be super easy. And then you
you. That'll be super easy. And then you
just have to include in the observation
just have to include in the observation
space, right? The observation space
space, right? The observation space
probably just has to include like what
probably just has to include like what
cell you're looking at or whatever.
or your last action. That would also do
or your last action. That would also do
it. Yeah, do that. That's super
it. Yeah, do that. That's super
easy. So there went
easy. So there went
kaput. Uh so what you do here is you do
kaput. Uh so what you do here is you do
okay like let's just say that you're
okay like let's just say that you're
going to make your move a sequence of
going to make your move a sequence of
three actions. So first uh zero through
three actions. So first uh zero through
eight you select which 3x3 cell you're
eight you select which 3x3 cell you're
going to write into. Move two is which
going to write into. Move two is which
of the individual ones within that 3x3
of the individual ones within that 3x3
block you're going to write to. And then
block you're going to write to. And then
finally uh you select the number to
finally uh you select the number to
write to the
write to the
cell. Do
cell. Do
that then it will actually work. You
that then it will actually work. You
will be able to solve it very
quickly. Amit if you uh if you get that
quickly. Amit if you uh if you get that
environment done we will absolutely take
environment done we will absolutely take
a PR of a Rubik's cube environment and
a PR of a Rubik's cube environment and
see as well. We would be happy to have
that. That's actually really easy to
that. That's actually really easy to
render in 3D as well. You would
render in 3D as well. You would
literally just render
literally just render
um what is it? 3x3x3 27 cubes. Yeah,
um what is it? 3x3x3 27 cubes. Yeah,
that's that's
that's that's
like that's probably 20 lines in Rayb to
like that's probably 20 lines in Rayb to
just like render the
just like render the
cubes and it'll look pretty good.
I'm always afraid I get like ticks
I'm always afraid I get like ticks
running
running
outside. There are ton of them around
outside. There are ton of them around
and lime is no
and lime is no
joke. Like anything itches, it's like,
joke. Like anything itches, it's like,
is that a bug bite or a tick?
Pretty good.
pretty
pretty
decent quick little article.
I think if there's anything else that
I think if there's anything else that
makes
uh a big difference.
Okay. Decent little uh decent little
Okay. Decent little uh decent little
article prototype.
You see chatbot? I saw they've been
You see chatbot? I saw they've been
doing decentralized RL stuff. I don't
doing decentralized RL stuff. I don't
know. I have a chat uh I have a um like
know. I have a chat uh I have a um like
a group chat that has a bunch of those
a group chat that has a bunch of those
people in it, but like RL for language
people in it, but like RL for language
models really isn't remotely the same as
models really isn't remotely the same as
RL in the capacity that we're doing it.
RL in the capacity that we're doing it.
um RL LLM is like dramatically
um RL LLM is like dramatically
dramatically easier in some ways
dramatically easier in some ways
algorithmically and then just like
algorithmically and then just like
uh and then really the only annoying
uh and then really the only annoying
thing with it is just like everything's
thing with it is just like everything's
incredibly expensive to run and like it
incredibly expensive to run and like it
kind of breaks a little bit of their
kind of breaks a little bit of their
standard distributed
infrastructure. So it's like a pretty
infrastructure. So it's like a pretty
different problem space.
Why do you think the focus is on LLM RL
Why do you think the focus is on LLM RL
mostly because of money? Because LLMs
mostly because of money? Because LLMs
are the shiny thing right now and like
are the shiny thing right now and like
everybody goes and does the shiny thing.
everybody goes and does the shiny thing.
It's massively overinvested.
Like, don't get me wrong, it's great.
Like, don't get me wrong, it's great.
Like, LM are cool. LMRL is cool, but it
Like, LM are cool. LMRL is cool, but it
should be like 80 85% of the investment
should be like 80 85% of the investment
right now. Not
99, which is like I guess another way of
99, which is like I guess another way of
saying that is everything outside of
saying that is everything outside of
LLMs is like order of magnitude
LLMs is like order of magnitude
underinvested at the moment at least.
notoriously like
OpenBSD. Open BSD is cool. They got a
OpenBSD. Open BSD is cool. They got a
puffer.
I mean the thing is
I mean the thing is
like I'll believe it when I see it,
like I'll believe it when I see it,
right? But like right now LLMs generate
right? But like right now LLMs generate
absolutely garbage
absolutely garbage
code.
code.
So the thing is it's like code style is
So the thing is it's like code style is
not just it's not just do I use tabs or
not just it's not just do I use tabs or
spaces or whatever, right? It's a lot
spaces or whatever, right? It's a lot
more like refactoring things cleanly is
more like refactoring things cleanly is
a lot more than that. And it's
a lot more than that. And it's
like I mean that's not the easiest part
like I mean that's not the easiest part
of the job or anything. That's something
of the job or anything. That's something
that's like very few people are actually
that's like very few people are actually
good at. But like why would I expect
good at. But like why would I expect
that an LLM that can't do crap correctly
that an LLM that can't do crap correctly
is going to be able to do that
is going to be able to do that
well? Like LMS ain't touching my code
well? Like LMS ain't touching my code
until they don't suck at
coding. But I don't want boiler plate.
coding. But I don't want boiler plate.
That's the thing, right? You don't want
That's the thing, right? You don't want
boiler plate.
You want minimal boiler plate and you
You want minimal boiler plate and you
don't want to press tab. You want to
don't want to press tab. You want to
[ __ ] sit there and look at your
[ __ ] sit there and look at your
boiler plate and feel bad about it for
boiler plate and feel bad about it for
several hours until you figure out how
several hours until you figure out how
to make there be less of
it. Put a print statement. Well, yeah,
it. Put a print statement. Well, yeah,
that's easy. And I have Super Maven for
that's easy. And I have Super Maven for
that.
I like Super Maven though because it's
I like Super Maven though because it's
like it's mostly I do for like single
like it's mostly I do for like single
line autocomplete. It's not like oh you
line autocomplete. It's not like oh you
need an AI code editor. It's AI. It's
need an AI code editor. It's AI. It's
just like no I want a typing buff,
just like no I want a typing buff,
right? Like let you type the obvious
right? Like let you type the obvious
[ __ ] faster and get out of my way the
[ __ ] faster and get out of my way the
rest of the
time. Yeah, I know it was bought by
time. Yeah, I know it was bought by
Cursor. I am uh it wasn't developed by
Cursor. I am uh it wasn't developed by
them originally and I'm hoping they
them originally and I'm hoping they
don't ruin
it. It's
honestly like man so much garbage
honestly like man so much garbage
garbage code is coming out of just
garbage code is coming out of just
people pressing tab and cursor right
people pressing tab and cursor right
now. Like I not a fan of
it. Well, yeah, that's just not actually
it. Well, yeah, that's just not actually
coding, right?
I honestly I have all the keywords
I honestly I have all the keywords
around that stuff muted on X because
around that stuff muted on X because
it's just like okay
it's just like okay
whatever. People found yet another
whatever. People found yet another
excuse to not put in any work and
excuse to not put in any work and
pretend that they know things. Whoop did
pretend that they know things. Whoop did
he do,
right? Like honestly the way I run
right? Like honestly the way I run
Puffer, right, is like I will engage
Puffer, right, is like I will engage
with and help with anybody who actually
with and help with anybody who actually
gives a
gives a
[ __ ] Like you know if people are
[ __ ] Like you know if people are
actually at least trying to learn stuff
actually at least trying to learn stuff
and like trying to improve things,
and like trying to improve things,
right? like you can get good at a lot
right? like you can get good at a lot
just doing that if you have if you're
just doing that if you have if you're
like at all clever.
Um the people who just don't care and
Um the people who just don't care and
just want to do stuff the dumb way and
just want to do stuff the dumb way and
like not like you know I I just don't
like not like you know I I just don't
engage with them at
all choosing what to
all choosing what to
learn. It's just what do you want to do,
right? For me, it's like I saw this
right? For me, it's like I saw this
unique opportunity with reinforcement
unique opportunity with reinforcement
learning where I saw the potential of
learning where I saw the potential of
the field in 2019. I saw all the stuff
the field in 2019. I saw all the stuff
that could happen with it. And then
that could happen with it. And then
everybody just went out and started
everybody just went out and started
chasing the shiny thing with LLMs and
chasing the shiny thing with LLMs and
stopped doing it. And I'm still here
stopped doing it. And I'm still here
like, well, I can massively fix this
like, well, I can massively fix this
entire thing single-handedly. and I can
entire thing single-handedly. and I can
revolutionize this entire field of
revolutionize this entire field of
science which is going to trickle down
science which is going to trickle down
to so many different areas of tech. Like
to so many different areas of tech. Like
this is going to be a massive
this is going to be a massive
contribution. I can probably build a
contribution. I can probably build a
decent company out of it at the same
decent company out of it at the same
time. Like I'd be crazy not to do
time. Like I'd be crazy not to do
this. I'd either be crazy or wildly
this. I'd either be crazy or wildly
unambitious not to do
this. Thank you. I mean the thing is
this. Thank you. I mean the thing is
like at least on the research side we
like at least on the research side we
clearly are RL is not the same field as
clearly are RL is not the same field as
a year ago because of puffer liib like
a year ago because of puffer liib like
do any RL outside of puffer liib or any
do any RL outside of puffer liib or any
RL a year ago and compare to what you
RL a year ago and compare to what you
can do in puffer liib now and it's a
can do in puffer liib now and it's a
different
different
field well thank you we appreciate the
field well thank you we appreciate the
contributions we do appreciate the
contributions I got this one this one
contributions I got this one this one
and this one drafted
and this one drafted
We need this one to be drafted and we
We need this one to be drafted and we
need the new M
need the new M
ones. This one's super easy. It just
ones. This one's super easy. It just
needs um a lot of graphics which is
needs um a lot of graphics which is
annoying.
I could take a stab at um the highlight
I could take a stab at um the highlight
article,
right? I got like what an hour 20ish
right? I got like what an hour 20ish
before I got to go.
Maybe a little longer. I think I stay
Maybe a little longer. I think I stay
take a stab at the highlight
take a stab at the highlight
article. I go jam some experiments and
article. I go jam some experiments and
then we go from there. We'll be back in
then we go from there. We'll be back in
a couple minutes here.
I got to think if this is going to be a
I got to think if this is going to be a
puffer 25 or puffer 3
puffer 25 or puffer 3
0. Don't know yet.
Take a stab at the new article.
I don't know about 2530.
We'll put it as 2.5 for now and we'll
We'll put it as 2.5 for now and we'll
decide whether we
decide whether we
uh how we version it.
I honestly think it's probably safer to
I honestly think it's probably safer to
do 3 0 because
do 3 0 because
like
like
yeah I mean that's how versioning is
yeah I mean that's how versioning is
supposed to work anyways.
supposed to work anyways.
Every version is a major. Every
Every version is a major. Every
version's breaking
I figure out where I want to use. I got
I figure out where I want to use. I got
to workshop this bit a little bit. This
to workshop this bit a little bit. This
is going to have to be workshopped.
so this should just be cool demos
so this should just be cool demos
basically this article
This is kind of a bit much because we
This is kind of a bit much because we
still we still tune. I think what are
still we still tune. I think what are
like the best what are the coolest
like the best what are the coolest
things I can
things I can
show in this uh this
show in this uh this
release? Some random sweet plot.
release? Some random sweet plot.
People do tend to like the sweet plots.
So get all hyperparames we plot
Is it six new ones? Yes. No, it's eight
Is it six new ones? Yes. No, it's eight
new environments.
See how many we have. One, two, three,
See how many we have. One, two, three,
four, five, six, seven, eight, 20.
It's not quite a standalone like clean
It's not quite a standalone like clean
RL is. I guess pretty close.
I think something like this is decent.
I think something like this is decent.
This needs to be
This needs to be
workshopped. I'm going to need like a
workshopped. I'm going to need like a
few nice taglines for the release.
Look at my current website.
Yeah, this mobile looks so freaking
cool. I like our website.
This is actually not bad. I think I'm
This is actually not bad. I think I'm
going to have to like think through this
going to have to like think through this
more, but this is not bad. This is like
more, but this is not bad. This is like
a good start on a bunch of articles,
a good start on a bunch of articles,
right? I've got four of these. I still
right? I've got four of these. I still
have to write the environment one.
have to write the environment one.
They'll all have to be edited.
They'll all have to be edited.
1,700. The protein one's
1,700. The protein one's
big. Algorithm one's pretty short. This
big. Algorithm one's pretty short. This
one's very
one's very
short. Just a quick intro. So, we'll do
short. Just a quick intro. So, we'll do
like this one, then this one, then like
like this one, then this one, then like
this one, and like we'll we'll spread
this one, and like we'll we'll spread
them out
nicely. We'll spread them out very
nicely. We'll spread them out very
nicely.
Okay, so this is like surprisingly not
Okay, so this is like surprisingly not
working
working
right. We'll let it keep going. But
right. We'll let it keep going. But
there's something very weird
there's something very weird
there. And then what about
this? This still going? Yeah, this is
this? This still going? Yeah, this is
still going.
Oh, this is
interesting. So, this one
here, what happened to this one?
Yeah, this is a
Yeah, this is a
solve. I don't know if this one's lucky
solve. I don't know if this one's lucky
or what, but this is a 17-second solve
or what, but this is a 17-second solve
right here.
So, this is going to have like a whole
So, this is going to have like a whole
bunch of additional trials to see if it
bunch of additional trials to see if it
can replicate this. Um, yeah,
17. I guess it just doesn't run the full
17. I guess it just doesn't run the full
eval on this. This is Breakout. We're
eval on this. This is Breakout. We're
trying to speedrun Breakout.
trying to speedrun Breakout.
Yeah. Basically, this is just
Yeah. Basically, this is just
like it's kind of a showcase. It's kind
like it's kind of a showcase. It's kind
of for fun. It's just how fast can we
of for fun. It's just how fast can we
solve
breakout? That's pretty good.
undergrad in
CSC
CSC
EC computer science and
EC computer science and
engineering I don't know what ECE
engineering I don't know what ECE
is
math do what you're interested in and
math do what you're interested in and
like what the field you want to work in
is like if you hate building stuff,
is like if you hate building stuff,
you're not going to have a good time
you're not going to have a good time
spending a bunch of time trying to
spending a bunch of time trying to
figure out how to program better. If you
figure out how to program better. If you
hate math, you're not going to have a
hate math, you're not going to have a
fun time doing a bunch of math and
fun time doing a bunch of math and
you're not going to be good at
it. Like, pick something that genuinely
it. Like, pick something that genuinely
interests you.
Electronics and communication
engineering. Yeah, we don't we don't
engineering. Yeah, we don't we don't
have any of those
have any of those
like I don't know where this is the US.
like I don't know where this is the US.
It's like it's computer science,
It's like it's computer science,
electrical engineering,
math. And I have no idea what your
math. And I have no idea what your
curriculum, like what your stuff looks
curriculum, like what your stuff looks
like. Like in the US, I it's like you
like. Like in the US, I it's like you
take some courses and then you probably
take some courses and then you probably
better be doing some cool stuff on the
better be doing some cool stuff on the
side because like congratulations, your
side because like congratulations, your
courses qualify you to do exactly
courses qualify you to do exactly
nothing when you graduate.
You're doing something similar to the
You're doing something similar to the
fast
fast
GPT. What?
What?
Plasma. Oh, yeah. Yeah. Yeah. That.
Plasma. Oh, yeah. Yeah. Yeah. That.
Yeah,
exactly. In fact, I got a I got some of
exactly. In fact, I got a I got some of
the techniques from that and just like
the techniques from that and just like
threw them on
RL. Oh, this is insane. Huh.
It did the crazy value function clipping
It did the crazy value function clipping
thing. Minimum possible value function
thing. Minimum possible value function
clipping
coefficient. It's nutty.
You have a general general suggestion on
You have a general general suggestion on
how to minimize conditional
how to minimize conditional
branches. I feel like I have to use them
branches. I feel like I have to use them
constantly in my game. M. What's wrong
constantly in my game. M. What's wrong
with conditional
with conditional
branches? That's like a core component
branches? That's like a core component
of programming. There's nothing wrong
of programming. There's nothing wrong
with conditional
branching. Conditional branching is only
branching. Conditional branching is only
a problem if you're trying to run stuff
a problem if you're trying to run stuff
on pure GPU. And like RMs are not
on pure GPU. And like RMs are not
written for pure GPU. They run on CPU.
written for pure GPU. They run on CPU.
There's nothing wrong with branching.
Okay, so this
is burrito
is burrito
frontier. I guess we just
frontier. I guess we just
do I'm less
do I'm less
than I'm less than
25 filter. There.
What the heck is wrong with these
What the heck is wrong with these
filters?
I guess we just do
this. Okay, so this gives us something.
So this sample here, we have a learning
So this sample here, we have a learning
rate region here,
rate region here,
right? Got a gamma region
here,
here,
lambda. I'm just looking for like weird
lambda. I'm just looking for like weird
stuff.
stuff.
X gradient
X gradient
norm
entropy. Couple different mini batch
sizes. Oh jeez, these are crazy fast
sizes. Oh jeez, these are crazy fast
some of
them. So it is actually sweeping really
them. So it is actually sweeping really
high perf stuff if we're training over 5
high perf stuff if we're training over 5
million
million
SPS. We got Adam
SPS. We got Adam
Beta pretty tight
regen or to alpha pry
regen or to alpha pry
beta beta doesn't seem to matter very
beta beta doesn't seem to matter very
much. Alpha does
much. Alpha does
though. And then what was the
though. And then what was the
um where's VF clip coefficient?
I would like question why you're
I would like question why you're
thinking about minimizing branching in
thinking about minimizing branching in
the first place. There's nothing wrong
the first place. There's nothing wrong
with
branching,
right? You want to minimize complexity.
right? You want to minimize complexity.
Complexity and branching are not the
Complexity and branching are not the
same thing.
Okay, so we have generous clip
Okay, so we have generous clip
coefficient and a lot of like very
low value function clip coefficients.
Interestingly, well, yeah, unnecessary
Interestingly, well, yeah, unnecessary
branching,
right? But generally proxy things are
right? But generally proxy things are
bad. Like you don't want to look at your
bad. Like you don't want to look at your
code and be like, "Dang, how do I
code and be like, "Dang, how do I
minimize branching, right? You want to
minimize branching, right? You want to
think holistically about
complexity like really deep nesting is
complexity like really deep nesting is
often an indicator that something is
often an indicator that something is
done wrong. Not always.
done wrong. Not always.
Um having a ton of functions
Um having a ton of functions
is often an indicator like overly split
is often an indicator like overly split
up stuff is often an indicator stuff is
bad. Basically, anytime I open a
bad. Basically, anytime I open a
repository that has like 20 files that
repository that has like 20 files that
are 100 lines each, I can guarantee that
are 100 lines each, I can guarantee that
I can rewrite it in like two files that
I can rewrite it in like two files that
are, you know, 400 lines each
Interesting here. This one is so much
better. This could just be a lucky seed,
better. This could just be a lucky seed,
I
I
guess. I doubt it,
guess. I doubt it,
though. So, this is this
though. So, this is this
like dark maroonish one, I guess.
I guess we can
see
it. Where the heck is my There they are.
Okay. So, it's this one here.
Okay. So, it's this one here.
326. Got a pretty high learning rate.
Trying to see like what it is this does
differently. Not
differently. Not
this. Not really this
either. Let's see.
Oops. One
second. Well, this is creation time, so
second. Well, this is creation time, so
this doesn't
matter. Mini batch size.
matter. Mini batch size.
Okay, it is one of the few with higher
Okay, it is one of the few with higher
mini batch size. In fact, it's the only
mini batch size. In fact, it's the only
one with high mini batch size that's
one with high mini batch size that's
managed to um to do well. So, this is
managed to um to do well. So, this is
going to make it faster. Wait, do we
going to make it faster. Wait, do we
have total time
steps? Okay, so it is the highest total
steps? Okay, so it is the highest total
time steps
time steps
uh run. That is
good. But then where's the SPS?
It's like decently
It's like decently
fast. This one is
fast. This one is
faster. What's this? 29
184. Is this
right? Something seems off there,
right? Something seems off there,
doesn't it?
Okay.
Nine we have
here. So this is
here. So this is
29184 and
29184 and
2984 looks like this.
It
It
takes 22
seconds, but it
seconds, but it
has almost 7 million
has almost 7 million
SPS.
SPS.
A, that doesn't match
up cuz it's only
up cuz it's only
trained for 53 million steps.
trained for 53 million steps.
So this should be done in less than 10
So this should be done in less than 10
seconds,
right? So clearly something is wrong
here. The moment
any dang flies. All
right. I mean, so this seems weird,
right. I mean, so this seems weird,
right? If we have 7 million
SPS, I kind of want to grab these
SPS, I kind of want to grab these
params.
params.
Why do you have so many
Why do you have so many
files?
Where
Where
flies? Oh, cuz it's uh it's a warehouse
flies? Oh, cuz it's uh it's a warehouse
and we have 10ft garage doors and uh we
and we have 10ft garage doors and uh we
keep having to open them in order to
keep having to open them in order to
deliver gym
deliver gym
equipment. Plus, there are other people
equipment. Plus, there are other people
here doing maintenance because the
here doing maintenance because the
building's not fully finished. Like I
building's not fully finished. Like I
don't have hot water here
yet. Well, yeah, we are actually uh
yet. Well, yeah, we are actually uh
we're getting screens for some of it. Um
we're getting screens for some of it. Um
but they're not here
yet. I don't know. I've killed like 30
yet. I don't know. I've killed like 30
flies here just in front of my window.
Man, that's
Man, that's
like that's not even in the new ones,
like that's not even in the new ones,
right? That's like a super old
reference. I'm going to try these
How am
I? Let's see if we can figure out why
I? Let's see if we can figure out why
breakout is
weird. It's a good thing to do right
weird. It's a good thing to do right
now.
Well, something screwy that this is
Well, something screwy that this is
logging
logging
um 7 million SPS,
right? Oh, it's probably just logging
right? Oh, it's probably just logging
SPS wrong, right?
Yeah, cuz that's like a 20 30. Yeah,
Yeah, cuz that's like a 20 30. Yeah,
that's a reasonable time to
take self.
take self.
SPS DPU. How can it be bigger? because
SPS DPU. How can it be bigger? because
it's per core. If you're using two cores
it's per core. If you're using two cores
to full, it's 200.
I mean, this seems like it should
I mean, this seems like it should
uh it should log correctly, but I guess
Not. No, this does log
correctly. This totally logs correctly,
correctly. This totally logs correctly,
which is weird.
It's very
weird. Okay, so that's suspicious then,
weird. Okay, so that's suspicious then,
right? That
right? That
um we have like these ridiculously high
um we have like these ridiculously high
SPS
values. Hang on. Do I have like numb M's
values. Hang on. Do I have like numb M's
wrong or something?
Could that be a
thing? Batch size. This is
thing? Batch size. This is
auto. All
right. There like a numb M's on
here.
Well, that's not the one I
want. I have to have like um
Something screwy
here. So, vec has numbum ms,
right? Weep.ve.num
right? Weep.ve.num
m. I wonder if this is just like not
m. I wonder if this is just like not
getting
logged. I click this thing.
So this is
two. But does it actually log
this? So this does append args here,
right? What about
experiment? So
experiment? So
Neptune Neptune logs
Neptune Neptune logs
everything. Unroll nested
dict. Hang on. Shouldn't this then give
me This should do like train slash or
me This should do like train slash or
train
train
dot. Probably train slash or vex slash.
dot. Probably train slash or vex slash.
back
slashnums like just go
here. Okay, so here we go. We actually
here. Okay, so here we go. We actually
we have
this and it's all on
this and it's all on
two. So it is sweeping this but it's all
two. So it is sweeping this but it's all
on
on
two. That's not
it. I think it's just reporting SPS
it. I think it's just reporting SPS
wrong. Oh, you know what? It's reporting
wrong. Oh, you know what? It's reporting
inference SPS. That's what it is. Does
inference SPS. That's what it is. Does
it report the last point for SPS?
it report the last point for SPS?
I bet you I bet you I know if we just do
like Yeah, there you go.
like Yeah, there you go.
See, inference SPS at the
end. So, practically we're training
end. So, practically we're training
between
between
um like two and 500 uh two and 5 mil
um like two and 500 uh two and 5 mil
SPS, which is what we would expect from
SPS, which is what we would expect from
uh from this
It could go much
faster. What about update
epox? What? Wait,
epox? What? Wait,
four? Are we all on four update epochs?
four? Are we all on four update epochs?
No, that's
max. Do we have update epochs?
max. Do we have update epochs?
One. Oh, but this is just the best runs
One. Oh, but this is just the best runs
are one update epoch, right?
Like if I go here
now, they're still mostly on one.
How about numb
M's? Okay. I mean, there's a little bit
M's? Okay. I mean, there's a little bit
of exploration maybe.
I mean, so now we know the time
I mean, so now we know the time
estimates are mostly accurate, right?
The YOLO value function coefficient
The YOLO value function coefficient
thing is kind of
nuts. But we have seen that quite
nuts. But we have seen that quite
consistently.
Where's the paro front for this?
Not
that. I just want to make sure I'm not
that. I just want to make sure I'm not
missing any like major opportunities
missing any like major opportunities
here for
here for
this to be uh this to be
bigger. Let me see what this like this
bigger. Let me see what this like this
crazy one was.
No, it's not this one.
Yeah. So this is the one that we were
Yeah. So this is the one that we were
looking at. So this is 66 mil
steps. So this says 26
seconds. So we're not matching just on
seconds. So we're not matching just on
raw speed. I think
raw speed. I think
here though this is on the slower
machine. We can get SPS on
this. Oh, this says that it's supposed
this. Oh, this says that it's supposed
to run at uh at 4 mil.
to run at uh at 4 mil.
That's kind of weird,
That's kind of weird,
right? I did. I miss
right? I did. I miss
something. I feel like I must have
something. I feel like I must have
missed something for it to be running
missed something for it to be running
this
fast. Says vecum m is
two. I feel like I missed something.
be running that
fast. I mean, this does
fast. I mean, this does
repro. It just doesn't repro the
speed. I'm pretty sure I'm
logging like bap size or is it autoed?
autoed. Is it
autoed. Is it
like this or
something? That still doesn't give you 4
something? That still doesn't give you 4
mil.
cuz that's kind of
cuz that's kind of
weird. Mini batch
maybe. No. Oh, mini batch. I missed I
maybe. No. Oh, mini batch. I missed I
missed the mini batch size there. That's
missed the mini batch size there. That's
it.
Okay. So that's like up to 3 mil.
We don't get our
eval. Hang
on. This is a back
on. This is a back
end async
reset. And then
This has to do print dashboard.
It doesn't seem to do it right.
time. So
time. So
7:48. Yeah, this is 7:48. So this does
7:48. Yeah, this is 7:48. So this does
not
not
um I mean I can believe that it's like
um I mean I can believe that it's like
it got a lucky
it got a lucky
run, but it's not going to consistently
run, but it's not going to consistently
solve for you.
I also don't know where this thing is. 4
I also don't know where this thing is. 4
million
SPS. Could just be the other chip.
miles off.
Yeah, it is. It's a little luck
Yeah, it is. It's a little luck
dependent. You can
see then 5 mil SPS for
eval. Well, that's one of the things
eval. Well, that's one of the things
that's a little tricky with running a
that's a little tricky with running a
sweep, right? Is naturally also the best
sweep, right? Is naturally also the best
runs are going to be the luckiest runs.
So you generally what happens is that
So you generally what happens is that
the runs do uh they do roughly the same,
the runs do uh they do roughly the same,
but if you're on a speedrun budget,
but if you're on a speedrun budget,
right? Like let's say you get 10% lucky,
right? Like let's say you get 10% lucky,
right? You get like a better seed, it
right? You get like a better seed, it
could train like 10% faster or
could train like 10% faster or
something. So you'd have to add like 10%
something. So you'd have to add like 10%
steps to make up for it.
like this one here, right? Like this
like this one here, right? Like this
curve could be shifted over a little to
curve could be shifted over a little to
the right. So, it's not like the prams
the right. So, it's not like the prams
don't work. They do work. Um, but
don't work. They do work. Um, but
there's a bit of
variability. Like this is a 20 second
variability. Like this is a 20 second
run right here.
Little weird to me that we haven't found
Little weird to me that we haven't found
any
any
like really high perf
like really high perf
stuff. Randomly initial
weights. Sure.
Like you could attribute it to that.
Like you could attribute it to that.
Sure.
Well, I mean it's like the random
Well, I mean it's like the random
weights affect the data that you get,
weights affect the data that you get,
right? So you're actually your weights
right? So you're actually your weights
affect your data distribution in RL's.
Why it's a sure and not a
yes
yes
151. But we will let this
finish. Something happened with these
finish. Something happened with these
mazes.
I bet it's stuck on like bad VF clip
I bet it's stuck on like bad VF clip
coefficient. You
coefficient. You
see? I bet it's like stuck on bad VF
clip. Yeah. You see it's
clip. Yeah. You see it's
like I guess I need sweet
progress. Almost certainly stuck. Bad VF
clip clip function. It's a clipping
clip clip function. It's a clipping
coefficient for the value function.
coefficient for the value function.
Um there's this weird thing where you
Um there's this weird thing where you
can have like these YOLO runs that set
can have like these YOLO runs that set
it really low and still somehow
it really low and still somehow
work. No, it's the clipping for the
work. No, it's the clipping for the
reward function loss.
reward function loss.
Value value function learns to predict
Value value function learns to predict
the advantage function which is computed
the advantage function which is computed
based on the reward.
Maze run is not very
good value function similar to
cost. Um I mean supervised learning you
cost. Um I mean supervised learning you
often you have like one
often you have like one
loss but like not really
because you have two losses at least in
RL. Well, it is an MSE loss, but it's
RL. Well, it is an MSE loss, but it's
MSSE over the prediction of reward,
MSSE over the prediction of reward,
which is quite different from MSE over
which is quite different from MSE over
prediction of raw outputs or whatever or
prediction of raw outputs or whatever or
like of like a known
variable, prediction of returns, I
variable, prediction of returns, I
should say.
I'm trying to
I'm trying to
think what to do about
this. On one hand, like
kind of want to play with
kind of want to play with
um some of the
values or chain of
values or chain of
what? What chain of
what? What chain of
derivatives? Value function learns to
derivatives? Value function learns to
predict return. return is given by
predict return. return is given by
generalized advantage estimation or or
generalized advantage estimation or or
or in our case puffer advantage which is
or in our case puffer advantage which is
G plus V
G plus V
trace. Well, chain rule is just applied
trace. Well, chain rule is just applied
everywhere
everywhere
for like back prop in general, right?
for like back prop in general, right?
There's nothing special.
I'm just trying to make some good
I'm just trying to make some good
decisions here on like what I should run
decisions here on like what I should run
for these sweeps. I got to go soon as
for these sweeps. I got to go soon as
well. To be fair, I'm probably just
well. To be fair, I'm probably just
going to come back and launch these
going to come back and launch these
after dinner anyway. So, I let these
after dinner anyway. So, I let these
finish.
This was a value function clip in
uh the F
uh the F
coefficient. It's just clip coefficient
coefficient. It's just clip coefficient
that they use,
that they use,
right? Vlos
clipped clip
clipped clip
co which is like 0 2 or
whatever
whatever
2. And like if I go look
2. And like if I go look
at let's let me do one last thing here
at let's let me do one last thing here
that's kind of
that's kind of
important. If I like do this
important. If I like do this
I should
do. You've got one run out here.
Why the hell does it do this is what I
Why the hell does it do this is what I
want to
know. I got to figure out what the hell
know. I got to figure out what the hell
that even does to the policy.
bizarre.
Well, I'm going to call it. I'm going to
Well, I'm going to call it. I'm going to
go uh I got to go do some stuff and I
go uh I got to go do some stuff and I
got to get dinner go out for dinner
got to get dinner go out for dinner
today and um I'll probably be back in
today and um I'll probably be back in
the evening for a little bit. We will
the evening for a little bit. We will
see. But I do want to get these sweeps
see. But I do want to get these sweeps
done. So, for the folks watching here,
done. So, for the folks watching here,
upper.ai for all the things, all free
upper.ai for all the things, all free
and open source. Want to help me out for
and open source. Want to help me out for
free? Star the repo. And if you want to
free? Star the repo. And if you want to
get involved with development, join the
get involved with development, join the
Discord and also follow me on X for some
Discord and also follow me on X for some
periodic reinforcement learning content.
periodic reinforcement learning content.
So, thank you and I'll be back in a
