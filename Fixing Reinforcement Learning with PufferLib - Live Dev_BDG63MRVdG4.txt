Kind: captions
Language: en
L we are back
L we are back
live what's happened to
live what's happened to
my my
camera freaking green
camera freaking green
screen hang
screen hang
on just do
this there we
go we've been busy
go we've been busy
today for
what the
what the
heck this
heck this
freaking the social media meta is just
freaking the social media meta is just
ridiculous
get out of there we have work to
get out of there we have work to
do
so I'm trying to think
so I'm trying to think
where we want to put the time in now
where we want to put the time in now
because o it's not this
one we run snake right
puy
puy
M I think we kind of just want to clean
M I think we kind of just want to clean
this up and make sure we haven't just
this up and make sure we haven't just
horribly broken everything
right so I do think we we have broken
right so I do think we we have broken
some stuff haven't
some stuff haven't
we like this should be learning properly
all right so we'll see if we can figure
all right so we'll see if we can figure
that out
it's probably the lstm weights
right it's not
this e
okay these are the
okay these are the
same is way too the
same so there's no desync
happening I bet this is it right here
where's
H uh where's HC even come from here oh
H uh where's HC even come from here oh
right there
so LST MH of zero
so LST MH of zero
and GPU and the ID
oops go
here and I probably should flip this SC
here and I probably should flip this SC
into here right
they exactly the
they exactly the
same I think they should be exactly the
same I think they should be exactly the
same that's
weird for
trying to think what stuff I changed
trying to think what stuff I changed
that could be messing this up
something's got to be screwy
right
oops actually I don't think the breakup
oops actually I don't think the breakup
defaults are any good snake defaults are
defaults are any good snake defaults are
definitely good though
policy.
policy.
parameters about without compile
score is just not going up fast
enough think it's something with the
enough think it's something with the
lstm
oh yeah definitely something with the
oh yeah definitely something with the
lstm look at
that oh yeah also remember the
that oh yeah also remember the
um remember this is a different version
um remember this is a different version
of the environment so this is actually
of the environment so this is actually
reasonable
perf e
what are we training
what are we training
snake yeah we're training just snake
snake yeah we're training just snake
we're using it as a uh just as a
we're using it as a uh just as a
baseline here we're just perf optimizing
baseline here we're just perf optimizing
the crap out of puffer Li
today that is the general idea
okay we can just get rid of
this ah so this is the
this ah so this is the
issue it seems
because this now
because this now
works so it's straight up just um the
works so it's straight up just um the
clever hack I came up with somehow not
clever hack I came up with somehow not
being fully
correct I hope I don't have to like
correct I hope I don't have to like
revert this because this is one of the
revert this because this is one of the
big perf
bumps I tested that the weights are the
bumps I tested that the weights are the
same
maybe it doesn't use them for some
maybe it doesn't use them for some
[Music]
[Music]
reason what did you
change well I clearly change some
change well I clearly change some
stuff because puffer lib is more than
stuff because puffer lib is more than
twice as fast now
why does this screw up
maybe you can't do it this
way okay s with current
849 so
849 so
um this seems
um this seems
fine to
me this seems completely
fine for
hey
hey
bet how's it
going we are making puffer look very
going we are making puffer look very
fast
well we hit 5 million with a very small
well we hit 5 million with a very small
Network and we hit 2.5 to 3 million with
Network and we hit 2.5 to 3 million with
like actual reasonable snake training
like actual reasonable snake training
setting so yeah we just have one bug to
setting so yeah we just have one bug to
fix here and then it'll be stable enough
fix here and then it'll be stable enough
and I just have to like clean it up a
and I just have to like clean it up a
bit and then we'll have a 3X faster Dev
bit and then we'll have a 3X faster Dev
Branch for most of our quick experiments
yeah 3X we went from 900k to 2.7 million
yeah 3X we went from 900k to 2.7 million
at the high end but I think we're
at the high end but I think we're
probably going to get more like 2.5
is
Puff for
oh no this is just literally normal po
oh no this is just literally normal po
being 3x
being 3x
faster not like 3X 3X fewer samples just
faster not like 3X 3X fewer samples just
like straight up 3x
faster wonderful Wizard of
Oz explain I fix some
Oz explain I fix some
stuff you know I got rid of some dumb
stuff you know I got rid of some dumb
python calls that shouldn't have been
python calls that shouldn't have been
there cuz they were slow and I've also
there cuz they were slow and I've also
been debugging horribly cursed things
been debugging horribly cursed things
deep in the depths of pie
torch it's very simple you know if you
torch it's very simple you know if you
stare too long into the abyss the abyss
stare too long into the abyss the abyss
May stare back into
you that's all it
is Vibe coding no I'm saying I'm fixing
[ __ ] you've got like Twitter brain rot
[ __ ] you've got like Twitter brain rot
my guy
n you've been on Twitter too
n you've been on Twitter too
much Vibe of puffer is fast exactly
much Vibe of puffer is fast exactly
though that is true puffer very
fast it is good that the puffer is fast
okay so these two things give me
okay so these two things give me
different results which is
[ __ ] the thing that's really sketchy is
[ __ ] the thing that's really sketchy is
like they're not that far
off I mean the implementations of to be
off I mean the implementations of to be
the same don't
they are there like options I'm not
seeing bias equals
true bias equals
true
e e
the hell
what why does this exist
e e
that's very
that's very
sketchy I mean is one of these weights
sketchy I mean is one of these weights
transposed like no that give me
transposed like no that give me
something very different
right go damn it
P
for
e
e e
wait what H
wait what H
cell H
lstm yes these are the same
lstm yes these are the same
here so what happened because
here so what happened because
in the test they're the same
in the test they're the same
right
right
so UNS squeeze zero
okay so in the test they're the
same e
this is exactly what I freaking did
this is exactly what I freaking did
isn't
it hang on they didn't give
uh oh shouldn't it be zero on the first
uh oh shouldn't it be zero on the first
step
anyways it is zeros
oh you
oh you
dumbass hang on
dumb
ass okay so now they ought to match
ass okay so now they ought to match
right
okay he just happened
oh this works a little differently
oh this works a little differently
doesn't
it I see you just screw it up as all
there we
go still just as
go still just as
fast but now it trains as well bug
fixed bug is fixed
yeah that thing is crazy fast holy
tho in less than a
minute so now we have to unfortunately
minute so now we have to unfortunately
deal with all the possible permutations
deal with all the possible permutations
of everything
oops okay that still
runs that still
runs for
oops we're just fix some [ __ ] real
oops we're just fix some [ __ ] real
quick it's not that
hard e
that
oh and you need to not use the snake
oh and you need to not use the snake
policy for
this for
runs
cool
e
e
e e
very
obnoxious so can just use n byid then
obnoxious so can just use n byid then
here right
there we
go this now runs
again without this
too many values expected to
the default
net e
oh I know what it
is e
very
very
nice that
runs no e3b now
there we
go so this all works
everything runs nicely
everything runs nicely
now so it is just a matter of cleaning
now so it is just a matter of cleaning
some stuff
some stuff
up we should be good I'm going to take
up we should be good I'm going to take
my vitamins before I
my vitamins before I
forget yeah it
forget yeah it
works just got to take my vitamins we're
works just got to take my vitamins we're
going to clean it up a little and then
going to clean it up a little and then
we're going to push
we're going to push
everything because it's like stuff's
everything because it's like stuff's
still pretty broken honestly in the dev
still pretty broken honestly in the dev
bran like and it's uh it's not
bran like and it's uh it's not
entirely ridiculous it's just that
entirely ridiculous it's just that
um there are a few things that we're
um there are a few things that we're
still
still
testing that will take additional work
testing that will take additional work
to fully integrate and I don't want to
to fully integrate and I don't want to
fully integrate them until I know that
fully integrate them until I know that
we're actually going to use them if that
we're actually going to use them if that
makes sense like e3b for
makes sense like e3b for
instance we're testing this for somebody
instance we're testing this for somebody
right now and it doesn't seem like it
right now and it doesn't seem like it
does
does
anything but we want to make sure it
anything but we want to make sure it
doesn't do anything before we drop it
code's not private it'll be on Devon
code's not private it'll be on Devon
like an
like an
hour CU I'm
done because apparently I hate money so
done because apparently I hate money so
fastest RL Library by a mile will be
fastest RL Library by a mile will be
free and open
source Blaster let me finish this [ __ ]
source Blaster let me finish this [ __ ]
man I've been coding all
day there will be Blaster code review
day there will be Blaster code review
let me finish this [ __ ] you said it was
let me finish this [ __ ] you said it was
done I I could just push it right now
done I I could just push it right now
but I'd like to clean it up do you see
but I'd like to clean it up do you see
what a [ __ ] mess this
what a [ __ ] mess this
is look at this [ __ ] this is a
is look at this [ __ ] this is a
mess look at the
dashboard look at the dashboard does
dashboard look at the dashboard does
this look like a good dashboard to you
this look like a good dashboard to you
no this is a mess
also now is probably not the best time
also now is probably not the best time
for you you're going to get a grumpy
for you you're going to get a grumpy
I've been fighting demons all day style
I've been fighting demons all day style
code review
freaking exorcism going on in RL space
here is there anything else we can get
here is there anything else we can get
out of this as
out of this as
well hang on so puffer breakout this is
well hang on so puffer breakout this is
a good uh a good
a good uh a good
metric train
frame 11% and miss
this is true I am usually
grumpy okay I'm seeing
grumpy okay I'm seeing
12% 12% misk
there so where's the 12 I want to know
there so where's the 12 I want to know
where 12% M crane is coming
where 12% M crane is coming
from that's weird right
is it here or is it not
here I can go
here I can go
jog probably not I will probably go to
jog probably not I will probably go to
sleep you should go jog
sleep you should go jog
though we can always do unless it's
though we can always do unless it's
today your only time to do this review
today your only time to do this review
if today's your only time to do this
if today's your only time to do this
review then I can I can just do it now
review then I can I can just do it now
real quick and we can just merge
it okay let's do it real quick where's
it okay let's do it real quick where's
the review link
the review link
code you asked for it link the code
hopp and puffer
hopp and puffer
VC we'll
do all right hey on stream let's go
do all right hey on stream let's go
hello hello where's code give
code you are L Joseph is
crazy I move the mic closer I'm out of
crazy I move the mic closer I'm out of
out of control uh does the mic sound
out of control uh does the mic sound
better or just
better or just
louder uh it sounds probably just Lou
louder uh it sounds probably just Lou
explosive on the E drums it's still good
explosive on the E drums it's still good
um I was testing moving the mic closer I
um I was testing moving the mic closer I
don't know because I thought I had it
don't know because I thought I had it
too far before well you had you did have
too far before well you had you did have
it a little far away like uh amplitude
it a little far away like uh amplitude
wise volume all right I can push it back
wise volume all right I can push it back
a little bit as well so it's still and
a little bit as well so it's still and
now I have to adjust your volume again
now I have to adjust your volume again
yeah we can do like this that's probably
yeah we can do like this that's probably
that's probably the right spot for it
that's probably the right spot for it
and it's out of frame
and it's out of frame
perfect fine think I pr this to two
perfect fine think I pr this to two
2.0 no play to De don't to
two well it might have been to
two well it might have been to
Dev now that I think about it last start
Dev now that I think about it last start
is complete there it is January 26 you
is complete there it is January 26 you
know what that's not you without no it's
know what that's not you without no it's
a whole month never mind I was confused
a whole month never mind I was confused
here if you recall there was a minor
here if you recall there was a minor
delay at the start of January you nearly
delay at the start of January you nearly
died so bake news you were you were
died so bake news you were you were
alive and well probably doing something
alive and well probably doing something
insane that you can't tell us about I
insane that you can't tell us about I
have a picture from the hospital
have a picture from the hospital
somewhere no I believe you I don't know
somewhere no I believe you I don't know
did I get sented
did I get sented
somewhere no I'm gen chats and sear
somewhere no I'm gen chats and sear
popular oh yeah
uh can I show this on stream I probably
uh can I show this on stream I probably
can that's not toss is it no that's not
can that's not toss is it no that's not
toss I am there you
toss I am there you
go that's when I was still freaking
go that's when I was still freaking
jacked before I'd had a week's worth of
jacked before I'd had a week's worth of
catabolic steroids pumped into me yeah
catabolic steroids pumped into me yeah
yeah yeah you initially agreed to the
yeah yeah you initially agreed to the
steroids because you thought they would
steroids because you thought they would
they would make you make you big no it
they would make you make you big no it
was because I would have died without
was because I would have died without
him but whatever
um it's okay I got my rack back I've
um it's okay I got my rack back I've
been doing couple quick sets of bench
been doing couple quick sets of bench
now yeah speak speaking of that you know
now yeah speak speaking of that you know
remember remember I was like I did you
remember remember I was like I did you
know I do 20 reps of you know a little
know I do 20 reps of you know a little
more than
more than
plates uh and you're like whoa or you
plates uh and you're like whoa or you
were surprised yeah uh yeah yep I did it
were surprised yeah uh yeah yep I did it
I'm Sor as sore as heck today uh ouch
I'm Sor as sore as heck today uh ouch
but I did it Joseph I
but I did it Joseph I
I I did uh what I do I did a set of 20
I I did uh what I do I did a set of 20
and then a set of 15 after I'm just
and then a set of 15 after I'm just
keeping it light so I don't have to warm
keeping it light so I don't have to warm
up it's 1222 uh General it's in the
up it's 1222 uh General it's in the
voice chat General chat yeah let's get
voice chat General chat yeah let's get
this thing done so I can it's in the
this thing done so I can it's in the
voice
chat
complete was this like the C code and
complete was this like the C code and
everything yeah it should be everything
everything yeah it should be everything
she how's it a thousand
she how's it a thousand
LS you want
LS you want
lines damn
lines damn
it wait wait this implementation is like
it wait wait this implementation is like
twice wasn't it 500 when Elon Musk wrote
twice wasn't it 500 when Elon Musk wrote
it Elon Elon did doesn't have any RL
it Elon Elon did doesn't have any RL
right elon's is complete trash I'm GNA
right elon's is complete trash I'm GNA
see yours and if yours is longer than
see yours and if yours is longer than
elon's I swear to
elon's I swear to
God uh you
God uh you
know it should be it should be fairly
know it should be it should be fairly
official why are there a
official why are there a
million [ __ ]
asserts oh jeez if this is to Dev I
asserts oh jeez if this is to Dev I
think this is going to have to be dev
think this is going to have to be dev
has changed a lot since then so this
has changed a lot since then so this
demo file PR is going to be a
demo file PR is going to be a
mess the yeah that could be okay 86
mess the yeah that could be okay 86
lines here for inputs we're going to
lines here for inputs we're going to
give you these because this has this
give you these because this has this
does have the neural net bind in it this
does have the neural net bind in it this
was this was fix this was fixing it
was this was fix this was fixing it
fixing it up uh from 56 lines fine it's
fixing it up uh from 56 lines fine it's
about the same like the the lons I think
about the same like the the lons I think
yeah let's see
yeah let's see
here PO for lib last anything stupid in
here PO for lib last anything stupid in
here no there's not there's nothing
here no there's not there's nothing
stupid uh here's the initial Cod
stupid uh here's the initial Cod
[Music]
[Music]
view look this is this is possible to
view look this is this is possible to
infinite Loop this by doing nothing or
infinite Loop this by doing nothing or
does the ship kill you it is not
does the ship kill you it is not
possible to infinite Loop uh it it uh it
possible to infinite Loop uh it it uh it
100% always kills okay I because I had
100% always kills okay I because I had
to fix that in breakout before yeah
to fix that in breakout before yeah
being underneath the ship kills you
being underneath the ship kills you
period um let me like let me link this
period um let me like let me link this
here uh you don't need to have all this
here uh you don't need to have all this
stuff in this syon header but it's
stuff in this syon header but it's
fine you only need stuff that you use
fine you only need stuff that you use
this is uh uh in the general General
this is uh uh in the general General
chat these are this is the notes I took
chat these are this is the notes I took
from the first code review
from the first code review
so you can see so I can see what I told
so you can see so I can see what I told
you
you
exactly it is all fixed allocate should
exactly it is all fixed allocate should
call a n yeah most stupid cheating I fix
call a n yeah most stupid cheating I fix
that withd and height remove this one
that withd and height remove this one
one
enemy there is only one enemy the
enemy there is only one enemy the
enemies has been
enemies has been
removed or it should
be okay so yeah I gave you I'm just
be okay so yeah I gave you I'm just
still giving you a bunch of style stuff
still giving you a bunch of style stuff
which is fine you've been programming
which is fine you've been programming
for a year and a couple months or
for a year and a couple months or
whatever so it's that's fine resources
whatever so it's that's fine resources
you still didn't bother making a tile
you still didn't bother making a tile
Atlas but that's probably fine yeah you
Atlas but that's probably fine yeah you
don't need it for this remember too
don't need it for this remember too
Joseph that this was like six files or
Joseph that this was like six files or
or seven files before I I did that just
or seven files before I I did that just
as
as
practice you're practicing writing bad
practice you're practicing writing bad
code though doing that you no no that
code though doing that you no no that
was that was that was only to practice
was that was that was only to practice
so i' I of course run.
so i' I of course run.
file
file
run.py oh is
run.py oh is
this this is for compiling
this this is for compiling
uh put put the com right at the Top This
uh put put the com right at the Top This
is for this is for a uh single single
is for this is for a uh single single
file solution to uh to
file solution to uh to
immediately uh
immediately uh
push specifically the models for or the
push specifically the models for or the
weight the weights it extracts it
weight the weights it extracts it
extracts the
extracts the
weights that shouldn't be in the pr
weights that shouldn't be in the pr
though latest
though latest
yeah
yeah
I it's not it's not part of it ignore
I it's not it's not part of it ignore
that okay that's that is M that is I
that okay that's that is M that is I
thought I I thought I had something that
thought I I thought I had something that
did that that was like five lines or
did that that was like five lines or
whatever um but requires like five steps
whatever um but requires like five steps
right this requires one
right this requires one
[Music]
step this is again skip that just skip
step this is again skip that just skip
skip that you don't need it well you did
skip that you don't need it well you did
modif you did modify my file of course I
modif you did modify my file of course I
did yeah to to to work with run.py right
did yeah to to to work with run.py right
soot it each time well no you modified
soot it each time well no you modified
you put
you put
your your local path in a PR to my file
your your local path in a PR to my file
here uh yeah like I said it wasn't
here uh yeah like I said it wasn't
supposed to be in the pr like it
supposed to be in the pr like it
shouldn't be please double check
shouldn't be please double check
these um script build ocean I'll just
these um script build ocean I'll just
merge it now I'm sick of I'll tell I'll
merge it now I'm sick of I'll tell I'll
tell you I'll tell you yeah can can we
tell you I'll tell you yeah can can we
can we is there a way to to not to not
can we is there a way to to not to not
merge those those things are not needed
merge those those things are not needed
yeah you could you can edit your PR but
yeah you could you can edit your PR but
since you don't know how to do that I'm
since you don't know how to do that I'm
just going to I'll and delete it okay
just going to I'll and delete it okay
okay just merge and delete what yeah you
okay just merge and delete what yeah you
only need the actual blastar files the
only need the actual blastar files the
standard thing you don't need any of the
standard thing you don't need any of the
special there is no special handling
special there is no special handling
that's
necessary if it's any constellation the
necessary if it's any constellation the
way I handle any
way I handle any
PRS it's also in build
PRS it's also in build
ocean those those are probably in there
ocean those those are probably in there
as uh carry over from before when I had
as uh carry over from before when I had
the stupid uh practice
the stupid uh practice
format okay again do not delete that
format okay again do not delete that
delete that well you need the setup. P
line you need nothing besides the
line you need nothing besides the
standard this is all stand the standard
standard this is all stand the standard
Baseline okay I'm gonna review I'm going
Baseline okay I'm gonna review I'm going
to I'm G to review the code and then I'm
to I'm G to review the code and then I'm
going to commit my stuff so that I don't
going to commit my stuff so that I don't
screw it up in the p in the process of
screw it up in the p in the process of
merging this
mess this doesn't matter this is just
mess this doesn't matter this is just
like okay double check your PRS before
like okay double check your PRS before
you do this in the future no big deal
you do this in the future no big deal
let's see let's see the main thing I
let's see let's see the main thing I
care that's an easy fix right that's
care that's an easy fix right that's
like easy for you to obviously see what
like easy for you to obviously see what
that is the main thing I want to see is
that is the main thing I want to see is
whether uh is how your code is uh
whether uh is how your code is uh
improved right yeah let's see
improved right yeah let's see
yeah knowing that this is an existing
yeah knowing that this is an existing
project and it's always easier to
project and it's always easier to
improve on new ones than to it is to fix
improve on new ones than to it is to fix
existing stuff um
this fine this
fine okay generally pick one like these
fine okay generally pick one like these
are fine or these are fine you probably
are fine or these are fine you probably
don't need
don't need
both um I see
yeah yeah like pick one or the other
yeah yeah like pick one or the other
are fine because it's like people do it
are fine because it's like people do it
in C static conss are fine doesn't
in C static conss are fine doesn't
really matter yeah yeah I have a weird
really matter yeah yeah I have a weird
differentiation between what's up pound
differentiation between what's up pound
defin and what's a static cons but so
defin and what's a static cons but so
what this does is this when you compile
what this does is this when you compile
your code it replaces every instance of
your code it replaces every instance of
this text with this it literally does a
this text with this it literally does a
find and replace yeah okay that's why
find and replace yeah okay that's why
parentheses under around the this
parentheses under around the this
defines yeah so this defines uh this
defines yeah so this defines uh this
just is a
just is a
number and you may or may not if you
number and you may or may not if you
enable extra warnings you may get some
enable extra warnings you may get some
weird warnings about con correctness
weird warnings about con correctness
that nobody cares about but these are
that nobody cares about but these are
generally fine in fact I think I
generally fine in fact I think I
probably will prefer these going forward
probably will prefer these going forward
um just cuz like there's no reason to
um just cuz like there's no reason to
have macros at all but it doesn't matter
have macros at all but it doesn't matter
at all it doesn't
at all it doesn't
matter
matter
understood float log you added stuff to
understood float log you added stuff to
my
my
logs log
logs log
buffer log buffer free log all my
buffer log buffer free log all my
stuff
clear
what
what
what the
[ __ ] [ __ ] where
I didn't
even it makes sense that this works but
even it makes sense that this works but
what the
what the
hell wait no no it isn't this is
wrong start with
wrong start with
that why don't you like my log agur and
that why don't you like my log agur and
clear it works no it doesn't it's
clear it works no it doesn't it's
wrong why is it wrong
wrong why is it wrong
I think it's
I think it's
wrong I'm pretty sure so first of all
wrong I'm pretty sure so first of all
you see that this is a slash equals
you see that this is a slash equals
right is this
right is this
intentional yeah
intentional yeah
why I
why I
mean the the the why is this just
slash yeah I don't I I don't have a good
slash yeah I don't I I don't have a good
answer so I'm pretty sure I don't
answer so I'm pretty sure I don't
actually know the order that these
actually know the order that these
things resolve in I'm pretty sure it
things resolve in I'm pretty sure it
goes left or right so then this what
goes left or right so then this what
this does is it takes your return okay
this does is it takes your return okay
this yeah and then it divides the entire
this yeah and then it divides the entire
quantity by the
quantity by the
index yeah which is not what you want
index yeah which is not what you want
unless I'm wrong which I could be I
unless I'm wrong which I could be I
don't know how operator priority have
don't know how operator priority have
works if you do assignments like this it
works if you do assignments like this it
could be that it does this and then it
could be that it does this and then it
does this but I don't
know in general never ever ever ever do
know in general never ever ever ever do
this never just just don't ever chain
this never just just don't ever chain
like multiple like in place operators
like multiple like in place operators
like this cuz nobody knows what you're
like this cuz nobody knows what you're
doing oh don't don't don't ever ever
doing oh don't don't don't ever ever
chain in place operators like this ever
chain in place operators like this ever
so replace these with slashes this is
so replace these with slashes this is
egregious okay don't do that if that was
egregious okay don't do that if that was
there the first time then I missed
there the first time then I missed
it okay holy don't do
that okay
that okay
so so what what do you what do you say
so so what what do you what do you say
to the uh the
to the uh the
uh the fact that it works I don't know
uh the fact that it works I don't know
if it works you could be dividing your
if it works you could be dividing your
you could be downscaling all your scores
you could be downscaling all your scores
by more than you intend to for all I
by more than you intend to for all I
know the only way that this works is if
know the only way that this works is if
the operator precedence does this
the operator precedence does this
operation and then it does this
operation you see
operation you see
if it does this and then it does this
if it does this and then it does this
you're
you're
screwed I think that you're right I
screwed I think that you're right I
think it maybe does this but I don't
think it maybe does this but I don't
know well I I definitely definitely
know well I I definitely definitely
tested it to make sure it actually you
tested it to make sure it actually you
know
know
obviously you just want this anyways you
obviously you just want this anyways you
don't want the equals you just want
slash okay here fine technically this
slash okay here fine technically this
works too
I guess my thought here is why are
you oh no here here we here we what does
you oh no here here we here we what does
this do do you know here we go if if if
this do do you know here we go if if if
if if a if a and and b or or
if if a if a and and b or or
C uh so you're saying if C or if a and
C uh so you're saying if C or if a and
b what does it
b what does it
do you have no this does and the re
do you have no this does and the re
asking for the order in which it will
asking for the order in which it will
happen because is it this yes right or
happen because is it this yes right or
is it this you don't
is it this you don't
know well I mean to argue semantics you
know well I mean to argue semantics you
can tell exactly what the compiler does
can tell exactly what the compiler does
but just be safe and use parentheses
but just be safe and use parentheses
exactly
exactly
so it's the same thing it's the same
so it's the same thing it's the same
thing there's literally no reason to
thing there's literally no reason to
ever do this so don't ever do
ever do this so don't ever do
it yeah I no to I'm not I'm not I'm not
it yeah I no to I'm not I'm not I'm not
arguing with your
arguing with your
assessment just just trying to very very
assessment just just trying to very very
pathetically
pathetically
rationalize which clearly it doesn't
rationalize which clearly it doesn't
matter if it works because it's
matter if it works because it's
redundant and it's
redundant and it's
confusing I only know that because I got
confusing I only know that because I got
burned without parentheses and making a
burned without parentheses and making a
I was making a pointer to a pointer and
I was making a pointer to a pointer and
if you're like I'm trying to remember it
if you're like I'm trying to remember it
so if you there is a correct answer by
so if you there is a correct answer by
the
way these all have correct answers but I
way these all have correct answers but I
don't remember because the thing is
don't remember because the thing is
you're taught this once in like your
you're taught this once in like your
undergrad like intro CS course they
undergrad like intro CS course they
teach you the order once and then they
teach you the order once and then they
say but never do this ever because if
say but never do this ever because if
you do it you're stupid because it's
you do it you're stupid because it's
confusing I think it's kind of deeper
confusing I think it's kind of deeper
than that because I also think it
than that because I also think it
depends on which compiler you're using
depends on which compiler you're using
as well it shouldn't it really shouldn't
as well it shouldn't it really shouldn't
if it does then that's a fault of the
if it does then that's a fault of the
language specification but uh I would
language specification but uh I would
blame the fight between you know Unix
blame the fight between you know Unix
and windows but that's I don't think
and windows but that's I don't think
that's relevant but
that's relevant but
whatever have you used Ming
whatever have you used Ming
W no I have self
W no I have self
resect yeah that's apparently I don't
resect yeah that's apparently I don't
but yeah
but yeah
okay well all right this is fine
okay well all right this is fine
um so yeah technically I it's like yeah
um so yeah technically I it's like yeah
look these things have overlapping
look these things have overlapping
Fields so you could do something fancy I
Fields so you could do something fancy I
don't care this is good this is
don't care this is good this is
perfectly fine so
perfectly fine so
technically uh okay so technically
technically uh okay so technically
here what I would do in this and it
here what I would do in this and it
doesn't matter at all because you only
doesn't matter at all because you only
have one of each of these things anyways
have one of each of these things anyways
so it really really doesn't matter but
so it really really doesn't matter but
what I do in neural
what I do in neural
MMO is instead of doing some fancy ass
MMO is instead of doing some fancy ass
thing with the type system to try to
thing with the type system to try to
like make a subtype or a union type so
like make a subtype or a union type so
you can have like you know it's like uh
you can have like you know it's like uh
a player is like an enemy but it has
a player is like an enemy but it has
extra Fields like instead of doing any
extra Fields like instead of doing any
of that [ __ ] I just make like an
of that [ __ ] I just make like an
entity struct and it just has all the
entity struct and it just has all the
fields and I just use the ones that I
fields and I just use the ones that I
need that's perfectly valid they're
need that's perfectly valid they're
actual real advantages to doing that um
actual real advantages to doing that um
but this is fine I think this is fine as
but this is fine I think this is fine as
well you only have one of each right if
well you only have one of each right if
you tried to have like a big array that
you tried to have like a big array that
has both entities and players you would
has both entities and players you would
hate yourself because you would need two
hate yourself because you would need two
arrays but it's fine now this is fine
arrays but it's fine now this is fine
for now here this is
for now here this is
probably that
link
link
this go go go go go to that it's example
this go go go go go to that it's example
in breakout it's probably where I saw
in breakout it's probably where I saw
these divides equals because I'll be
these divides equals because I'll be
honest I've never used the divides
honest I've never used the divides
equals before this is a loop yeah I know
equals before this is a loop yeah I know
and then this is at the end of the loop
and then this is at the end of the loop
right it's just copy these you don't you
right it's just copy these you don't you
don't just copy these onto each other
don't just copy these onto each other
like that in fact where do I have this
like that in fact where do I have this
in one of my more recent M what did I
in one of my more recent M what did I
write
recently I mean I'm do I do it in here
recently I mean I'm do I do it in here
correctly I'm not justifying the code
correctly I'm not justifying the code
I'm uh I'm simply
I'm uh I'm simply
uh telling you where I got the uh you
uh telling you where I got the uh you
see
see
yeah I I
yeah I I
I I
I I
see those are divides by the way this is
see those are divides by the way this is
actually this is actually slower than
actually this is actually slower than
the previous one technically but it
the previous one technically but it
doesn't matter because it's called
doesn't matter because it's called
infrequently so it doesn't
infrequently so it doesn't
matter logging it doesn't
matter okay L buffer log all is fine
these are Dynamic timers
these are Dynamic timers
right yes yes those are not those are
right yes yes those are not those are
not Concepts that I was lazy and didn't
not Concepts that I was lazy and didn't
I promise fine
fine yeah you can technically do
fine yeah you can technically do
something a little fancier here but uh
something a little fancier here but uh
this is good I'm happy with just this
this is good I'm happy with just this
being done this way it's
fine yeah I agonized over
fine yeah I agonized over
that yeah you shouldn't this is
that yeah you shouldn't this is
fine you do them in the same order as
fine you do them in the same order as
you declared so that you don't
you declared so that you don't
accidentally forget one and you're
fine allocate actions free allocated
fine allocate actions free allocated
free log
free log
[Music]
[Music]
buffer
uhuh we yes this is
uhuh we yes this is
correct C reset in
correct C reset in
it do you reset on a net I'm trying to
it do you reset on a net I'm trying to
remember yeah this was this I don't
remember yeah this was this I don't
think you reset on a net right this was
think you reset on a net right this was
see the the first the first time around
see the the first the first time around
I had it a different way and uh I think
I had it a different way and uh I think
you just call I think you should just be
you just call I think you should just be
calling reset from the
calling reset from the
C you can you can just call call
C you can you can just call call
reset uh
reset uh
I'm calling it from in it which well
I'm calling it from in it which well
then but then the thing is if you call
then but then the thing is if you call
if you call reset like the API will call
if you call reset like the API will call
reset again after you initialize because
reset again after you initialize because
that's how the API works so you're just
that's how the API works so you're just
calling it twice you're calling it twice
calling it twice you're calling it twice
yeah so this is minor but this is you
yeah so this is minor but this is you
know this is redundant so just like
know this is redundant so just like
avoid stuff like that so so re so C
avoid stuff like that so so re so C
reset doesn't even have to be called an
reset doesn't even have to be called an
in it you're telling me no it gets
in it you're telling me no it gets
called external that yeah make sure it
called external that yeah make sure it
works but yeah that's fine and then
works but yeah that's fine and then
let's see
allocate calculate
Center
Center
yeah
plus I do not like this you you don't
plus I do not like this you you don't
like the center calculation so you're
like the center calculation so you're
doing this because C doesn't have
doing this because C doesn't have
multiple
multiple
returns yeah
returns yeah
right yeah but like this
right yeah but like this
is you don't want to just like use
is you don't want to just like use
pointers in place of multiple returns
pointers in place of multiple returns
like this if it's part of a struct
like this if it's part of a struct
that's fine I really
that's fine I really
don't suggest mutating primitive types
don't suggest mutating primitive types
like this um and by the way this is like
like this um and by the way this is like
completely redundant because you could
completely redundant because you could
have literally made this just be a
have literally made this just be a
method that takes uh like X size right
method that takes uh like X size right
this could have literally just been X
this could have literally just been X
and size and return X plus size over
and size and return X plus size over
two so it's completely redundant and
two so it's completely redundant and
this is sketch don't do
this is sketch don't do
this try like don't mutate Primitives if
this try like don't mutate Primitives if
you don't have
you don't have
to you can mutate strs understood
I'm not sure why this gets updated in
I'm not sure why this gets updated in
compute observations this is kind of
compute observations this is kind of
just a weird place to uh that is a weird
just a weird place to uh that is a weird
place to put it update it yeah this is
place to put it update it yeah this is
all fine though right let's see that is
all fine though right let's see that is
fine yeah all this stuff is good very
good okay if it really matters to have a
good okay if it really matters to have a
constant one something
wrong it was it was it was on the first
wrong it was it was it was on the first
code review
code review
you but you know if you commenting them
you but you know if you commenting them
out makes it makes it not work
so I don't have an explanation I don't I
so I don't have an explanation I don't I
I wish I had an explanation I wish I had
I wish I had an explanation I wish I had
good
answers but yeah that's that's sketchy
answers but yeah that's that's sketchy
that's I know something is wrong there
that's I know something is wrong there
that if that makes it not work
that if that makes it not work
that's that's
that's that's
[ __ ] all
[ __ ] all
right I I I
right I I I
realize I wish I I wish I could have
realize I wish I I wish I could have
removed them and I definitely did and
removed them and I definitely did and
then it then it didn't work right so I
then it then it didn't work right so I
removed as much as possible so it still
removed as much as possible so it still
worked what what's that what's the on
worked what what's that what's the on
line version of
line version of
this the check Collision is there are
this the check Collision is there are
you gonna ding me on my Collision well
you gonna ding me on my Collision well
what's the on line version of this
what's the on line version of this
I don't know come on you know this I
I don't know come on you know this I
don't remember dude return right
here you're you're you want if condition
here you're you're you want if condition
return true else return false is the
return true else return false is the
same as return condition yeah yeah you
same as return condition yeah yeah you
want it to be
the so it should
be this is just return this is a
be this is just return this is a
oneliner for return condition yep there
oneliner for return condition yep there
probably an inline handed it as well but
probably an inline handed it as well but
it's
it's
fine this looks like I wrote
fine this looks like I wrote
it read reading it it's a those I would
it read reading it it's a those I would
I mean the only thing I ding you on here
I mean the only thing I ding you on here
is I would change up the bacing right
is I would change up the bacing right
I'd put like each of these and then and
I'd put like each of these and then and
on the next line and then and on the
on the next line and then and on the
next like just so it's like obvious but
next like just so it's like obvious but
it's like other than that it's just the
it's like other than that it's just the
basic programming thing right for turn
basic programming thing right for turn
condition yeah it's just like silly
condition yeah it's just like silly
those things are supposed to be cleaned
those things are supposed to be cleaned
up but yeah
um take
pass this is kind of weird the way this
pass this is kind of weird the way this
is but no big
deal yeah that's fine you could
deal yeah that's fine you could
technically unest this if if you were
technically unest this if if you were
clever but it's
fine okay this is non-trivially nested
fine okay this is non-trivially nested
though very mildly non-trivially nested
though very mildly non-trivially nested
so I won't ding you on it I think more
so I won't ding you on it I think more
I think it's fine it
I think it's fine it
it okay
it okay
good because because yeah I I was trying
good because because yeah I I was trying
to trying to not un it I would cash this
to trying to not un it I would cash this
if you're like annoying
expression yeah that does look annoying
expression yeah that does look annoying
um just put the thing here and
um just put the thing here and
then not end
then not end
player stuck
don't one line your
ifs first first you want the on line now
ifs first first you want the on line now
you don't want the on
you don't want the on
line I didn't ever say I wanted the one
line I didn't ever say I wanted the one
line I think at one point I thought it
line I think at one point I thought it
was kind of okay but then I used that
was kind of okay but then I used that
was when I first started programming
was when I first started programming
stuff in C and then I've I've gone since
stuff in C and then I've I've gone since
I'm then like no it's really not it's
I'm then like no it's really not it's
way better to just use use the language
way better to just use use the language
it's intended have the bra have your
it's intended have the bra have your
braces
everywhere I think one lines are okay if
everywhere I think one lines are okay if
it's specifically an if else but if
it's specifically an if else but if
you're stacking or things like that I
you're stacking or things like that I
mean a one line just reduces line count
mean a one line just reduces line count
I think it's just better to always just
I think it's just better to always just
have the brackets with this the one
have the brackets with this the one
thing that I've been watching to get
thing that I've been watching to get
used to that I haven't been able to is
used to that I haven't been able to is
like technically you don't need this
like technically you don't need this
white space cuz the the like If This
white space cuz the the like If This
Were python right the brace is in place
Were python right the brace is in place
with the white space but I I can't get
with the white space but I I can't get
used to this either so I always have the
used to this either so I always have the
extra white space even though you really
extra white space even though you really
don't need it um I don't know I actually
don't need it um I don't know I actually
like Python's white space over braces
like Python's white space over braces
cuz like you feel the need to do this
cuz like you feel the need to do this
and you waste even more space but
and you waste even more space but
whatever it's my
whatever it's my
for readability and to to Plate uh like
for readability and to to Plate uh like
uh you know yeah but the point is right
uh you know yeah but the point is right
that you have two lines of essentially
that you have two lines of essentially
white space right which is
white space right which is
obnoxious um so I think technically the
obnoxious um so I think technically the
better thing is to have this be the
better thing is to have this be the
white space line right so you don't have
white space line right so you don't have
the extra one but I can't get used to
the extra one but I can't get used to
that either so it doesn't it doesn't
that either so it doesn't it doesn't
matter I want I wanted to have it in the
matter I want I wanted to have it in the
the way that people were used to seeing
the way that people were used to seeing
yeah yeah yeah it's fine
you'd be able to have these as reward
you'd be able to have these as reward
components if they weren't
components if they weren't
hardcoded
yep yep so these ones silly
yeah this is very
yeah this is very
silly this whole
silly this whole
thing is very
thing is very
silly the center
silly the center
Coke like making
Coke like making
these just making these on initialized
these just making these on initialized
floats and then it's
silly yeah
yeah this is too big of a condition you
yeah this is too big of a condition you
should like break this
should like break this
out uh let's see
out uh let's see
here
326 round
326 round
attacking hold active through this still
attacking hold active through this still
this why than
this why than
get rid of get rid of which 330 this
get rid of get rid of which 330 this
crazy condition needs to be broken
crazy condition needs to be broken
up how would you break it
up how would you break it
up F ABS less than
speed okay this is like is close and
speed okay this is like is close and
then this one
then this one
[Music]
is
is
this I mean you could leave this one and
this I mean you could leave this one and
just put this one as close would be a
just put this one as close would be a
reasonable l
reasonable l
and then what's this one oh yeah
and then what's this one oh yeah
enemy and then whatever the hell this is
enemy and then whatever the hell this is
supposed to be semantic
supposed to be semantic
like
like
uh yeah enemy close or something I don't
uh yeah enemy close or something I don't
know underne under underneath enemy
know underne under underneath enemy
under yeah it's like yeah I would do I
under yeah it's like yeah I would do I
would just the big the big ones like
would just the big the big ones like
this I would just break
this I would just break
out yeah so this this is yeah this is if
out yeah so this this is yeah this is if
you're yeah yeah basically yourself for
you're yeah yeah basically yourself for
that as well if you come back to your if
that as well if you come back to your if
you're under the
you're under the
basically
basically
mhm I can figure it out in 30 seconds
mhm I can figure it out in 30 seconds
I'm sure it's just like it's
easier moves the enemy
bullet e
that's for animation of explosion yeah I
that's for animation of explosion yeah I
can tell which is a little weird that
can tell which is a little weird that
here but not
bad
e e
yeah like one thing you could do here to
yeah like one thing you could do here to
avoid all these messy calls which it you
avoid all these messy calls which it you
don't you could or you could not right
don't you could or you could not right
it's kind of optional is you could just
it's kind of optional is you could just
like you know Source text like texture X
like you know Source text like texture X
Y you set texture equal this x equal
Y you set texture equal this x equal
this y equals this
this y equals this
whatever and then you do the draw call
whatever and then you do the draw call
at the bottom there's stuff like that
at the bottom there's stuff like that
you can do but this is
you can do but this is
reasonable so I mean there's some things
reasonable so I mean there's some things
in here I could pick on but overall
in here I could pick on but overall
like you are definitely improving over
like you are definitely improving over
this just keep trying to keep stuff
this just keep trying to keep stuff
simple right don't try to like get
simple right don't try to like get
fancier and fancier the more stuff you
fancier and fancier the more stuff you
Dev just try to like try to make simple
Dev just try to like try to make simple
code better um and I think like if you
code better um and I think like if you
just keep doing a few more M's like this
just keep doing a few more M's like this
you're honestly going to be I mean
you're honestly going to be I mean
you're going to be in the place where
you're going to be in the place where
you're like writing better code than
you're like writing better code than
your average Fang engineer very very
your average Fang engineer very very
quickly because I can see you're
quickly because I can see you're
improving
improving
the Joseph Playbook yeah yeah uh that's
the Joseph Playbook yeah yeah uh that's
not hard by the way dang
not hard by the way dang
right yeah but the thing is that they do
right yeah but the thing is that they do
get stuff done right they get stuff done
get stuff done right they get stuff done
in a very long and convoluted way but
in a very long and convoluted way but
they eventually get stuff done
I don't know if I would say it's not
I don't know if I would say it's not
hard either honestly link key like yeah
hard either honestly link key like yeah
like your average fanging Jer sucks but
like your average fanging Jer sucks but
like writing good code is genuinely
like writing good code is genuinely
really really
really really
hard like something that takes many
hard like something that takes many
years of
years of
experience I think a lot of it is well
experience I think a lot of it is well
first of all the pressure to
first of all the pressure to
write WR code just like not fast code
write WR code just like not fast code
but code write it fast uh in a lot of
but code write it fast uh in a lot of
thing industry but they work hor
thing industry but they work hor
realistically like like they so [ __ ]
realistically like like they so [ __ ]
like you gotta be kidding me like I do
like you gotta be kidding me like I do
work at I do work 50 times faster than
work at I do work 50 times faster than
anyone it does in like in Fang it's
anyone it does in like in Fang it's
their processes are so bloated and so
their processes are so bloated and so
slow there's no pressure to do anything
slow there's no pressure to do anything
fast I'd say it's the opposite it's just
fast I'd say it's the opposite it's just
that coding like programming is taught
that coding like programming is taught
horribly it's horribly horri taught and
horribly it's horribly horri taught and
then as soon as you have one bad
then as soon as you have one bad
engineer in your group right it's like
engineer in your group right it's like
it's all bad yeah it takes one to solely
it's all bad yeah it takes one to solely
the whole the whole batch yeah and then
the whole the whole batch yeah and then
it's like and then all the Fang
it's like and then all the Fang
practices start to make sense when you
practices start to make sense when you
think of it that way right because they
think of it that way right because they
put all their code in a box and like
put all their code in a box and like
you're not responsible for reading
you're not responsible for reading
anybody's code in that box it just has
anybody's code in that box it just has
to work in the box that they've given it
to work in the box that they've given it
to you so it doesn't matter if it's
to you so it doesn't matter if it's
50,000 lines of garage as long as it
50,000 lines of garage as long as it
follows the API and the test and
follows the API and the test and
everything but like the thing is that's
everything but like the thing is that's
a really stupid way to write code
a really stupid way to write code
because now your thing runs 5,000 times
because now your thing runs 5,000 times
too slow and when you go to read it to
too slow and when you go to read it to
see how to make it better you can't and
see how to make it better you can't and
then you just have to throw the whole
then you just have to throw the whole
thing away and rewrite it so like yeah
thing away and rewrite it so like yeah
it's just a whole mess and like yeah
it's just a whole mess and like yeah
okay it works for these big
okay it works for these big
organizations but I'm not going to hold
organizations but I'm not going to hold
that up on a pedestal because you know I
that up on a pedestal because you know I
can do if I can do more than a
can do if I can do more than a
medium-sized team just On My Own by not
medium-sized team just On My Own by not
doing stuff that way then I'm going to
doing stuff that way then I'm going to
choose that every single time yeah so
choose that every single time yeah so
you're talking about writing code verus
you're talking about writing code verus
designing code
designing code
well I wouldn't even go that far I
well I wouldn't even go that far I
would mer this now um should I merge
would mer this now um should I merge
this now and then I some small fixes let
this now and then I some small fixes let
me let me c let me let me just let me
me let me c let me let me just let me
clean up this let me get rid of this
clean up this let me get rid of this
run.py and everything yeah okay good
run.py and everything yeah okay good
that at least saves me some time yeah
that at least saves me some time yeah
let me get rid of all the extra um
let me get rid of all the extra um
that's good
that's good
though all right thanks Joseph yeah no I
though all right thanks Joseph yeah no I
mean like you're definitely improving
mean like you're definitely improving
I'm going to be you know it's you're
I'm going to be you know it's you're
improving you're improving you're
improving you're improving you're
improving at a very good rate as well I
improving at a very good rate as well I
mean look if I don't have an answer to a
mean look if I don't have an answer to a
question like that's on me well look
question like that's on me well look
it's just like here's the thing right as
it's just like here's the thing right as
you get better there's a really strong
you get better there's a really strong
temptation to like keep finding clever
temptation to like keep finding clever
things right um but like the solution is
things right um but like the solution is
not clever things for the most part
not clever things for the most part
right the solution is getting better at
right the solution is getting better at
doing stuff in the simplest way possible
doing stuff in the simplest way possible
like you The Simple Solution is best you
like you The Simple Solution is best you
can do clever things for the purposes of
can do clever things for the purposes of
learning and sometimes that is important
learning and sometimes that is important
and you need to do the stupid thing to
and you need to do the stupid thing to
see why it's stupid right like I had
see why it's stupid right like I had
this whole like two week binge in Pota
this whole like two week binge in Pota
last year where I tried to write like
last year where I tried to write like
struct based procedural code in Python
struct based procedural code in Python
and The Language just really is not
and The Language just really is not
designed for that right and like I wrote
designed for that right and like I wrote
like a really stupid article on it and I
like a really stupid article on it and I
mean it wasn't terrible terrible but
mean it wasn't terrible terrible but
like it's just kind of silly um and then
like it's just kind of silly um and then
you do the exact same thing and see and
you do the exact same thing and see and
it works perfectly
it works perfectly
and like I needed to do that in Python
and like I needed to do that in Python
to see why it didn't work and to
to see why it didn't work and to
appreciate how nice it isn't see um but
appreciate how nice it isn't see um but
like generally the actual code that you
like generally the actual code that you
write at the end of the day is just
write at the end of the day is just
going to be something very very short
going to be something very very short
and very simple and has minimal tricks
and very simple and has minimal tricks
and bells and whistles on it um and this
and bells and whistles on it um and this
is how you get good work done quickly
is how you get good work done quickly
and it's like at the same time you get
and it's like at the same time you get
everything there it's like you have your
everything there it's like you have your
take and eat it too brand new
take and eat it too brand new
programmers can read and follow exactly
programmers can read and follow exactly
what you've done right and you have very
what you've done right and you have very
short and easy to maintain code and it's
short and easy to maintain code and it's
easy to add stuff on because you haven't
easy to add stuff on because you haven't
done something super dumb and convoluted
done something super dumb and convoluted
right and you just have less code to
right and you just have less code to
deal with right it's just it's good all
deal with right it's just it's good all
around
yep
okay yeah I was telling bet earlier uh
okay yeah I was telling bet earlier uh
and here it just goes to show that yes
and here it just goes to show that yes
he is learning at a pretty good
he is learning at a pretty good
uh because I told him when I get to the
uh because I told him when I get to the
point I'm going to need him to explain
point I'm going to need him to explain
to me like the the scon and interfacing
to me like the the scon and interfacing
with puffer lib because that's that's
with puffer lib because that's that's
kind of Beyond me and then pushing
kind of Beyond me and then pushing
everything into one giant struct so it
everything into one giant struct so it
passes everything to python you're
passes everything to python you're
overthinking it that's all you you'll
overthinking it that's all you you'll
see well you have to understand the
see well you have to understand the
thing is
thing is
like if you're used to python or higher
like if you're used to python or higher
level languages and you don't understand
level languages and you don't understand
the difference between a value and a
the difference between a value and a
reference and you don't understand what
reference and you don't understand what
a pointer is fundamentally and how
a pointer is fundamentally and how
memory is allocated like then yes stuff
memory is allocated like then yes stuff
is
is
confusing as soon as you think of it
confusing as soon as you think of it
that like that way though it's very
that like that way though it's very
simple yeah that's where I'm starting to
simple yeah that's where I'm starting to
get I guess to me it just kind of feels
get I guess to me it just kind of feels
counter intuitive to just like I
counter intuitive to just like I
understand the need for it to push all
understand the need for it to push all
the observation agents actions truncated
the observation agents actions truncated
terminals into one giant struct so it
terminals into one giant struct so it
passes it all in you know one motion if
passes it all in you know one motion if
you want to call it that it just it's
you want to call it that it just it's
not passing it linky it's like it's not
not passing it linky it's like it's not
passing it's just the address it's just
passing it's just the address it's just
like hey this is where we're storing
like hey this is where we're storing
observ environments right here this is
observ environments right here this is
where we're storing the observations for
where we're storing the observations for
all the environments and I'm just going
all the environments and I'm just going
to tell each environment where they can
to tell each environment where they can
store their chunk of the observations
store their chunk of the observations
that's all you're doing yeah you have it
that's all you're doing yeah you have it
you have it continuous chunk of memory
you have it continuous chunk of memory
and you allocate those to individual
and you allocate those to individual
purposes just like an arena would I get
purposes just like an arena would I get
that it just to me that's all feels
that it just to me that's all feels
counterintuitive it only feels
counterintuitive it only feels
counterintuitive because programming is
counterintuitive because programming is
taught really weirdly and a lot of the
taught really weirdly and a lot of the
references you see around are weird like
references you see around are weird like
it takes almost no time for this stuff
it takes almost no time for this stuff
to be very very simple and like provably
to be very very simple and like provably
like the code as you read it is very
like the code as you read it is very
simple as well um
simple as well um
so linky what it allows your it allows
so linky what it allows your it allows
python to to
python to to
modify the the the value uh at shared
modify the the the value uh at shared
mutable memory is what it isly shared
mutable memory is what it isly shared
mutable memory exactly what I'm trying
mutable memory exactly what I'm trying
to describe
to describe
correct
yeah yeah so I'll need that I actually
yeah yeah so I'll need that I actually
did do a good thing and I did leave like
did do a good thing and I did leave like
all the the logging struct in the
all the the logging struct in the
logging method I just have to actually
logging method I just have to actually
like set up how my [ __ ] generates to the
like set up how my [ __ ] generates to the
one solid
one solid
struct but I'm certain I'll have
struct but I'm certain I'll have
questions well you know where to find me
questions well you know where to find me
that is the idea that's that's what I
that is the idea that's that's what I
was
was
saying it hurts to say this bet at some
saying it hurts to say this bet at some
point I will need your help oh well it's
point I will need your help oh well it's
fine I don't
I need lots of help all
right now we
right now we
can remove all the stuff we don't
can remove all the stuff we don't
want just like
everything goodbye
Oops why does everybody love Lua
Oops why does everybody love Lua
uh it's just a common scripting language
uh it's just a common scripting language
used in games so a lot of people that
used in games so a lot of people that
mod games end up picking it up and then
mod games end up picking it up and then
they just use it they picked it
they just use it they picked it
up well a lot of people use it for like
up well a lot of people use it for like
plug in like neovim is a prime example
plug in like neovim is a prime example
they use Lua for neovim yeah it's just a
they use Lua for neovim yeah it's just a
scripting language it's a fine scripting
scripting language it's a fine scripting
language it's just a scripting
language it's just a scripting
language I mean anything is a fine
language I mean anything is a fine
scripting language right if you're just
scripting language right if you're just
writing like relatively short scripts
writing like relatively short scripts
it's
it's
fine oh yeah say that to my let's let's
fine oh yeah say that to my let's let's
scroll down in this real quick because
scroll down in this real quick because
I'm writing a plugin for
I'm writing a plugin for
micro uh file on this has changed
micro uh file on this has changed
no
um yeah say that to my thousand lines of
um yeah say that to my thousand lines of
implementing an LSP server
implementing an LSP server
into an
into an
editor I don't think you should be
editor I don't think you should be
implementing something in l
implementing something in l
you might buy something in L but if
you might buy something in L but if
you're implementing that's too much I
you're implementing that's too much I
should be saying an LSP server that
should be saying an LSP server that
exists and binding to the LSP server
exists and binding to the LSP server
which I think uses
which I think uses
go um through so the LSP uses go micro
go um through so the LSP uses go micro
for plug-in support uses ala so I'm
for plug-in support uses ala so I'm
having to use Lua to attach to
having to use Lua to attach to
go use
go use
LSP there you
LSP there you
yeah I have
yeah I have
done I have done an impressive amount
done I have done an impressive amount
without an LSP but I would love to not
without an LSP but I would love to not
have to GP for all of my struct and
have to GP for all of my struct and
method definition Comes A Time In in a
method definition Comes A Time In in a
in a man's life when when he must make a
in a man's life when when he must make a
choice between LSP and no LSP yeah use
choice between LSP and no LSP yeah use
it yeah exactly but here here's the
it yeah exactly but here here's the
funny thing like if you're writing
funny thing like if you're writing
python the LSP kind of sucks anyways so
python the LSP kind of sucks anyways so
like honestly super Maven is just as
like honestly super Maven is just as
good
good
no yeah but see that's the thing super
no yeah but see that's the thing super
Maven probably still uses an LSP because
Maven probably still uses an LSP because
co-pilot uses an LSP right does
co-pilot uses an LSP right does
it yes it does yeah but if it uses uses
it yes it does yeah but if it uses uses
it on their servers and I don't have to
it on their servers and I don't have to
configure it sounds sounds like it
configure it sounds sounds like it
doesn't matter if Joseph is like does it
doesn't matter if Joseph is like does it
right you don't see it because it's
right you don't see it because it's
already it's the plugin is built what
already it's the plugin is built what
I'm doing it makes enough mistakes that
I'm doing it makes enough mistakes that
I question whether it has one because it
I question whether it has one because it
makes
only I don't want it for autocomplete or
only I don't want it for autocomplete or
anything like that I want it only so I I
anything like that I want it only so I I
can like fuzzy find my definitions
can like fuzzy find my definitions
right you can just I think you can just
right you can just I think you can just
do that in them anyways without having
do that in them anyways without having
to I'm pretty sure you can just yeah I'm
to I'm pretty sure you can just yeah I'm
not I'm not using them though I'm using
not I'm not using them though I'm using
micro he's using micro inexplicable
micro he's using micro inexplicable
[Music]
contrl C control V and was like nope no
contrl C control V and was like nope no
you
can't what do you mean I can't contrl C
can't what do you mean I can't contrl C
control V nothing that's like I
control V nothing that's like I
literally can do I can do macros and
literally can do I can do macros and
everything it doesn't matter um matters
everything it doesn't matter um matters
I can use use doesn't matter oh it's
I can use use doesn't matter oh it's
it's beautiful I've gotten all of my
it's beautiful I've gotten all of my
syntax highlighting to colors I
syntax highlighting to colors I
like um
like um
I will say I should just bite the bullet
I will say I should just bite the bullet
and move to Vim
and move to Vim
but meanwhile buffer buffer whb slowness
but meanwhile buffer buffer whb slowness
has been divided by three pretty much
has been divided by three pretty much
yes how did you manage that I am
yes how did you manage that I am
curious
curious
LP listen so one of my side
projects is going to get stomped on I I
projects is going to get stomped on I I
don't really care it would be nice to
don't really care it would be nice to
have I'm still using micro without it
have I'm still using micro without it
and I've done I've made a lot of
and I've done I've made a lot of
progress it would be nice to have
progress it would be nice to have
though yeah if if the stopping has a lot
though yeah if if the stopping has a lot
to do with things I've said before like
to do with things I've said before like
in
passing maybe maybe it does maybe it
passing maybe maybe it does maybe it
doesn't I'm not
doesn't I'm not
sure it's stopping you said it's gonna
sure it's stopping you said it's gonna
be stomped on your project oh
be stomped on your project oh
stomping wise
stomping wise
to why is it that the Mis Loop here is
to why is it that the Mis Loop here is
so long but if I do
puffer be right
back m is
lower H it's probably just because the
lower H it's probably just because the
update EPO is
update EPO is
fine all right I mean that's pretty
fine all right I mean that's pretty
solid uh where we can reduce copy
solid uh where we can reduce copy
I don't think there's any way to reduce
I don't think there's any way to reduce
copy
copy
overhead we've already done pretty well
so what's your schedule looking like in
so what's your schedule looking like in
the upcoming days
the upcoming days
Joe I don't have
Joe I don't have
one just coding and streaming pretty
one just coding and streaming pretty
much I just do that and then ad hoc
much I just do that and then ad hoc
whatever meetings I need to take
whatever meetings I need to take
whatever client stuff I need to
whatever client stuff I need to
do that's fair um if at some point you
do that's fair um if at some point you
could do a one onone with me
could do a one onone with me
I'd appreciate
I'd appreciate
that uh no not an m just
that uh no not an m just
conversationally sure is this about the
conversationally sure is this about the
Pokemon stuff is this pressing or is
Pokemon stuff is this pressing or is
this like uh it's not pressing just I
this like uh it's not pressing just I
guess like in a week or so if you could
guess like in a week or so if you could
do a oneon-one just so we're not like in
do a oneon-one just so we're not like in
DC or anything yeah sure no
wor
wor
um yeah I'll send you a DM on on what
um yeah I'll send you a DM on on what
it's about here
it's about here
in I don't know like half an hour
in I don't know like half an hour
okay not incredibly pressing but would
okay not incredibly pressing but would
be nice to just have a conversation
be nice to just have a conversation
clear some of my thoughts and
opinions I mean you think you know I'm
opinions I mean you think you know I'm
pretty much always
pretty much always
around I yeah I just [ __ ] occasionally
around I yeah I just [ __ ] occasionally
but that's about
but that's about
it yeah I get that I just don't want to
it yeah I get that I just don't want to
like if you got clients or anything
like if you got clients or anything
coming up I'm not well it's there's
coming up I'm not well it's there's
always GNA be stuff because like
always GNA be stuff because like
whenever I like I just I don't do well
whenever I like I just I don't do well
when I've got nothing to do so like I
when I've got nothing to do so like I
find something like this to spend all
find something like this to spend all
day on right I feel it but like
day on right I feel it but like
occasionally stuff like this happens
occasionally stuff like this happens
where I mixed up 3x faster so that's
where I mixed up 3x faster so that's
pretty
pretty
cool yeah bet was saying he wasn't sure
cool yeah bet was saying he wasn't sure
exactly what you did I did see your post
exactly what you did I did see your post
earlier you had was that that puffer
earlier you had was that that puffer
snake at 5 million steps a second uh
snake at 5 million steps a second uh
yeah that's that's like the best
yeah that's that's like the best
possible case but it does exist
possible case but it does exist
so I mean even even in the best possible
so I mean even even in the best possible
case 5 million is like
obsc
obsc
um and then this is just I'm not I'm not
um and then this is just I'm not I'm not
fishing for information I'm genuinely
fishing for information I'm genuinely
curious about your view point on
curious about your view point on
this the moving direction of puffer Li
this the moving direction of puffer Li
to me it feels like you're more
to me it feels like you're more
supporting SE environments right now do
supporting SE environments right now do
you have plans in the future to start
you have plans in the future to start
moving some of the uh some of your files
moving some of the uh some of your files
in puffer lib and
in puffer lib and
Toc not really because the more stuff I
Toc not really because the more stuff I
move into C the more I'm going to just
move into C the more I'm going to just
piss people and users off so I'm only
piss people and users off so I'm only
going to move stuff into C when there's
going to move stuff into C when there's
like a a clear clear performance reason
like a a clear clear performance reason
to do it I'm not just going to move all
to do it I'm not just going to move all
the learning code into C for the sake of
the learning code into C for the sake of
it having it in C right if I could get
it having it in C right if I could get
10 million steps per second by moving it
10 million steps per second by moving it
into SE then yeah I would do it but I
into SE then yeah I would do it but I
don't think I can I don't think that's a
don't think I can I don't think that's a
thing that can
thing that can
happen yeah I was
happen yeah I was
just yeah potentially thinking
just yeah potentially thinking
because
because
um kind of along the line of what that
um kind of along the line of what that
guy was saying but I I'll be honest I
guy was saying but I I'll be honest I
still don't know how he's getting his
still don't know how he's getting his
deadlock issue I think like maybe he's
deadlock issue I think like maybe he's
doing something
doing something
wrong uh the same like whatever issue
wrong uh the same like whatever issue
it's not like moving it to C is not
it's not like moving it to C is not
likely to fix anything like that or make
likely to fix anything like that or make
it any
it any
easier I just mean in the sense of like
easier I just mean in the sense of like
when I think about it you're handling
when I think about it you're handling
vectorization
vectorization
for um python within vector. piy but
for um python within vector. piy but
then the vectorization is essentially
then the vectorization is essentially
happening on its own within the C
happening on its own within the C
environment um compliment
environment um compliment
processes okay I just wasn't sure if
processes okay I just wasn't sure if
there were any plans in the works to
there were any plans in the works to
like maybe work on moving things to more
like maybe work on moving things to more
of a Smo threading and and keeping it
of a Smo threading and and keeping it
out of like python multiprocessing so
out of like python multiprocessing so
the issue is that if you do that then
the issue is that if you do that then
for python environment you have to go
for python environment you have to go
from python to C to python which is kind
from python to C to python which is kind
of
of
gross yeah I agree so like do that if I
gross yeah I agree so like do that if I
were to do that it would be ocean M
were to do that it would be ocean M
would work directly with the
would work directly with the
vectorization without going back to
vectorization without going back to
Python and then that would hurt
Python and then that would hurt
compatibility with other stuff so like
compatibility with other stuff so like
again there' have to be a very very good
again there' have to be a very very good
reason to do that and I don't really
reason to do that and I don't really
foresee there being a good reason
foresee there being a good reason
because if anything puffer is going to
because if anything puffer is going to
move in the opposite direction we're
move in the opposite direction we're
like these perf improvements I'm doing
like these perf improvements I'm doing
now are cool and they're like really
now are cool and they're like really
nice for running quick experiments but
nice for running quick experiments but
like longer term puffer is going to move
like longer term puffer is going to move
to more complex environments where these
to more complex environments where these
perfect enhancements matter less and
perfect enhancements matter less and
really this perf is just used for uh
really this perf is just used for uh
fast experimentation on methods which
fast experimentation on methods which
are then going to be thrown on slower
are then going to be thrown on slower
stuff so there's not really a hug
stuff so there's not really a hug
incentive to do it really the this is
incentive to do it really the this is
more like I spend a little bit of time
more like I spend a little bit of time
once in a while puffer has the highest
once in a while puffer has the highest
per of any RL Library by a mile haaha
per of any RL Library by a mile haaha
and uh then we get back to real work
and uh then we get back to real work
yeah uh that kind of makes sense I was
yeah uh that kind of makes sense I was
just wondering because and I know you
just wondering because and I know you
need puffet and all that to compile
need puffet and all that to compile
sorry to compile into web assembly and
sorry to compile into web assembly and
such so I wasn't sure if that was
such so I wasn't sure if that was
just to make things happen to make it
just to make things happen to make it
work on your website or if you were
work on your website or if you were
slowly starting to like my great no
slowly starting to like my great no
that's for that's just for the website
that's for that's just for the website
demos like look if pie torch had like a
demos like look if pie torch had like a
really lightweight awesome C back end
really lightweight awesome C back end
then I would just use that but it
then I would just use that but it
doesn't it has a really heavy and
doesn't it has a really heavy and
obnoxious C++ back end so it was just
obnoxious C++ back end so it was just
easier to make
easier to make
puffet and it's kind of funny I see I
puffet and it's kind of funny I see I
just think it's kind of funny right to
just think it's kind of funny right to
be able to like yeah here's 500 lines it
be able to like yeah here's 500 lines it
does like most of what you'd want out of
does like most of what you'd want out of
high torch and it runs on
high torch and it runs on
web yeah here's the the funny thing when
web yeah here's the the funny thing when
because I talk with my older brother
because I talk with my older brother
often and he is a C++ Dev MH um and
often and he is a C++ Dev MH um and
he firmly believes that I am doing
he firmly believes that I am doing
myself a disservice and that c is way
myself a disservice and that c is way
harder to learn than C++ that's and I'm
harder to learn than C++ that's and I'm
at I agree unlike C is like simple C++
at I agree unlike C is like simple C++
there's way less BS and crap to have to
there's way less BS and crap to have to
wonder if I'm using yeah um and then
wonder if I'm using yeah um and then
read his code and I'm like it's a
read his code and I'm like it's a
totally different
totally different
language
yeah I don't really have much desire to
yeah I don't really have much desire to
interact with idiomatic C++ at
interact with idiomatic C++ at
all the only C++ that I'm comfortable
all the only C++ that I'm comfortable
with interacting with is I do use high
with interacting with is I do use high
bind to
bind to
compile
compile
sometimes to compile bindings for python
sometimes to compile bindings for python
directly from SU so I can just import
directly from SU so I can just import
like whatever file it spits out into C
like whatever file it spits out into C
it's pretty much scyon but as a
it's pretty much scyon but as a
binary pbind is usually yeah
binary pbind is usually yeah
C++ it's C++ but you can use it as a
C++ it's C++ but you can use it as a
wrapper you can
wrapper you can
compile as a wrapper from c yeah I
compile as a wrapper from c yeah I
haven't looked at that honestly because
haven't looked at that honestly because
scon there may be a not there may be a
scon there may be a not there may be a
reason to replace scon at some point but
reason to replace scon at some point but
um
um
that's uh the difference
that's uh the difference
is so Sion you have to redefine all of
is so Sion you have to redefine all of
your function so you go like python step
your function so you go like python step
takes s step and then s steps takes
takes s step and then s steps takes
cstep whereas pbind you're just
cstep whereas pbind you're just
compiling a DOT death of whatever your
compiling a DOT death of whatever your
thing is I understand how it works it's
thing is I understand how it works it's
but like there has to be a bunch of
but like there has to be a bunch of
usability testing and stuff to see how
usability testing and stuff to see how
it would feel to use it for for this
it would feel to use it for for this
versus
versus
syon oh I mean I've got a demo if you
syon oh I mean I've got a demo if you
want to I have it on a private repo when
want to I have it on a private repo when
I was helping my brother because that's
I was helping my brother because that's
the only reason I used
the only reason I used
pbind so and maybe I'm just saying to me
pbind so and maybe I'm just saying to me
it's a little more convenient because it
it's a little more convenient because it
was my first exposure to like C and
was my first exposure to like C and
python versus like realize that the
python versus like realize that the
other thing is that um you don't get
other thing is that um you don't get
memory views which are syon gives you
memory views which are syon gives you
are really nice you don't get memory
are really nice you don't get memory
views and then you don't get the outer
views and then you don't get the outer
loop uh yeah you don't get the outer
loop uh yeah you don't get the outer
loop that you would like that you get in
loop that you would like that you get in
scon at the moment you have to do that
scon at the moment you have to do that
in C as well convenient when you start
in C as well convenient when you start
yeah but we're not starting from C++ and
yeah but we're not starting from C++ and
we have no plan we have no plans
we have no plan we have no plans
too oh well yeah no what I mean is that
too oh well yeah no what I mean is that
even I was responding to
even I was responding to
that uh you can see on the screen
that uh you can see on the screen
sorry I was outside you're
good I think I'm going to Port this
good I think I'm going to Port this
network
network
too I think we're going to Port this
too I think we're going to Port this
network
we're going to put this network
we're going to put this network
to
to
snake so we can test
it just for
it just for
perf have you actually I can answer my
perf have you actually I can answer my
question
you do
indeed uh you've uh
indeed uh you've uh
convolutional puffet embedding one h
convolutional puffet embedding one h
as
as
well I see
well I see
that it's like it's pretty decent for
that it's like it's pretty decent for
what it
is it looks really dense I'm not gonna
is it looks really dense I'm not gonna
lie well yeah obviously it's the
lie well yeah obviously it's the
implementation of a
conf yeah it's like the most obnoxious
conf yeah it's like the most obnoxious
possible thing to
possible thing to
implement no seriously I [ __ ] hated
implement no seriously I [ __ ] hated
implementing that thing it sucked
implementing that thing it sucked
those are such a pain to implement
those are such a pain to implement
correctly
correctly
I I will say I I've had like 10 times as
I I will say I I've had like 10 times as
well over the years and it just they
well over the years and it just they
just always suck because it's like
just always suck because it's like
they're really simple and you feel
they're really simple and you feel
stupid for not getting them right but
stupid for not getting them right but
they're just like really fidly getting
they're just like really fidly getting
the
the
indexing well not only that
indexing well not only that
but I and maybe I still don't know the
but I and maybe I still don't know the
full implications of this but like
full implications of this but like
actually understanding abstraction and
actually understanding abstraction and
things like that it
things like that it
has blown my
has blown my
mind the the different ways I have to
mind the the different ways I have to
think about like I've made my
think about like I've made my
environment in Python it does wonderful
environment in Python it does wonderful
I can understand it moving it to see is
I can understand it moving it to see is
an
an
entirely different ball game like you
entirely different ball game like you
have to just think about it entirely
have to just think about it entirely
different yeah it's easier when you
different yeah it's easier when you
start and see though because what
start and see though because what
happens with the python is you get it
happens with the python is you get it
done and then it's slow and then you're
done and then it's slow and then you're
screwed because there's no way to make
screwed because there's no way to make
it fast I got
it fast I got
25,000 steps a second and that is
25,000 steps a second and that is
without like doing some optimization or
without like doing some optimization or
anything yeah but what do you want that
anything yeah but what do you want that
that I could get you know I could get it
that I could get you know I could get it
to 2.5
to 2.5
million that's exactly what I'm saying
million that's exactly what I'm saying
that's when I was like maybe it's worth
that's when I was like maybe it's worth
me looking at writing this in C and
me looking at writing this in C and
seeing what seeing what I can do without
seeing what seeing what I can do without
optimizing it and c and comparing it
optimizing it and c and comparing it
doesn't have to be like just C I'm
doesn't have to be like just C I'm
writing is not optimized C at
writing is not optimized C at
all yeah no i' I've gone through I've I
all yeah no i' I've gone through I've I
actually do go through a lot
actually do go through a lot
of um I use ocean as my examples for C
of um I use ocean as my examples for C
I'm not going to lie oh but 40%
Miss so if we took off
Miss so if we took off
40% then maybe it's
40% then maybe it's
close o that also reminds me did you
ever manage to find your banner for
ever manage to find your banner for
puffer
Li uh I have the banner I the 3D model I
Li uh I have the banner I the 3D model I
don't have
don't have
yet I probably have to send an email to
yet I probably have to send an email to
get that to be
honest I want to include and maybe the
honest I want to include and maybe the
play is I just like steal your template
play is I just like steal your template
and well I have the banner I mean I mean
and well I have the banner I mean I mean
oh Banner Banner no I have I have to get
oh Banner Banner no I have I have to get
a banner made we'll see oh no I mean um
a banner made we'll see oh no I mean um
for your read
for your read
me so I'm not sure if you're in Discord
me so I'm not sure if you're in Discord
chat that the one the file on the read
chat that the one the file on the read
me you can just grab it from there yeah
me you can just grab it from there yeah
so I have a repo that named puffer mini
so I have a repo that named puffer mini
I apologize I'm using the puffer
I apologize I'm using the puffer
namesake but I want to include like the
namesake but I want to include like the
puffer assets and all that on it and
puffer assets and all that on it and
link it actually to puffer lib so like
link it actually to puffer lib so like
if if people don't like the small form
if if people don't like the small form
factor of puffer lib or the puffer mini
factor of puffer lib or the puffer mini
they'll still be connected to puffer lib
they'll still be connected to puffer lib
yeah so I like a powered by puffer
yeah so I like a powered by puffer
Banner or whatever you can just like
Banner or whatever you can just like
write that and put the puffer or
write that and put the puffer or
whatever that's
whatever that's
fine it's fine it's fine to use that
fine it's fine it's fine to use that
projects connected to puffer literally
projects connected to puffer literally
all the assets on the website if you
all the assets on the website if you
just like click on them and get Source
just like click on them and get Source
it'll link you because they're all just
it'll link you because they're all just
hosted from the GitHub um yeah Weston uh
hosted from the GitHub um yeah Weston uh
now that I've learned discreet math is
now that I've learned discreet math is
this true nope not at all not not that
this true nope not at all not not that
I've seen whatever maybe I haven't
I've seen whatever maybe I haven't
learned enough math um but if they're
learned enough math um but if they're
talking about like if these are a lot of
talking about like if these are a lot of
the math people are functional
the math people are functional
programming Bros and that code just
programming Bros and that code just
sucks ass uh it's just another it's
sucks ass uh it's just another it's
another Dogma functional a Dogma object
another Dogma functional a Dogma object
Orient is a
Orient is a
Dogma procedural is kind of the lack of
Dogma procedural is kind of the lack of
a Dogma where you just write simple [ __ ]
a Dogma where you just write simple [ __ ]
without any like coherent structure or
without any like coherent structure or
like presupposed
mind but yeah so I have a repo named
mind but yeah so I have a repo named
puffer mini and it's personally what I
puffer mini and it's personally what I
use because puffer Li just has too much
use because puffer Li just has too much
crap in it and I don't need a million
crap in it and I don't need a million
environments so
well it's going to get smaller
well it's going to get smaller
but hey I would appreciate that I
but hey I would appreciate that I
wouldn't be so against like cloning
wouldn't be so against like cloning
popper lib but it just oh the Clone I
popper lib but it just oh the Clone I
can make faster I just haven't bothered
can make faster I just haven't bothered
to prune that I should do it I can make
to prune that I should do it I can make
the Clone take I can make the Clone take
the Clone take I can make the Clone take
two seconds I just haven't bothered to
two seconds I just haven't bothered to
do
do
that yeah the cloning and then really
that yeah the cloning and then really
the only stats I have
the only stats I have
are d d single if you just clone Das Das
are d d single if you just clone Das Das
death equals one d d single Branch it'll
death equals one d d single Branch it'll
be instant and if I just were to prune
be instant and if I just were to prune
it it would have that speed
it it would have that speed
everywhere good to know so I just that's
everywhere good to know so I just that's
just me having been
just me having been
lazy hey I feel it I do lots of lazy
lazy hey I feel it I do lots of lazy
[ __ ] care you have to be a little bit
[ __ ] care you have to be a little bit
careful because it like it squashes some
careful because it like it squashes some
stuff and you want to make sure that you
stuff and you want to make sure that you
don't lose so it's like it's good to do
don't lose so it's like it's good to do
that when the repo is in a good and
that when the repo is in a good and
stable
stable
State um
before I attempt anything new on GitHub
before I attempt anything new on GitHub
I research what my best options are
I research what my best options are
there's just too much to remember and
there's just too much to remember and
cheat sheets don't cover everything
so this needs to be way faster
I don't know how I can make this code
I don't know how I can make this code
faster
I'll be right
back
e e
I'm not likely going to
uh it's crazy how much overhead that is
uh it's crazy how much overhead that is
and I'm
and I'm
back just
back just
um yeah that's annoying how much
um yeah that's annoying how much
overhead that is I just have to make
overhead that is I just have to make
this script faster at some point but I
this script faster at some point but I
think I'm in a good spot to uh
think I'm in a good spot to uh
oops what's over I just came back uh
oops what's over I just came back uh
there's the new algorithm has
there's the new algorithm has
a has a c script it needs to be made
faster I mean it's here I'll show it to
faster I mean it's here I'll show it to
you it's a very simple script right here
you it's a very simple script right here
let's go world's slowest
let's go world's slowest
stream we love YouTube yeah Yep this
stream we love YouTube yeah Yep this
function at the top needs to be made uh
function at the top needs to be made uh
much
faster and I don't actually know how to
faster and I don't actually know how to
make it like how do I make this 10 times
faster
huh see it's kind of awkward because
huh see it's kind of awkward because
there's like this conditional branching
there's like this conditional branching
if it were just this this is very easy
if it were just this this is very easy
but it doesn't work if you just do that
but it doesn't work if you just do that
uh this crashes your learning if you
uh this crashes your learning if you
just do this it just crashes uh well it
just do this it just crashes uh well it
this screws up your learning you have to
this screws up your learning you have to
have the
Mas what's the reason for
Mas what's the reason for
that uh you need to mask out when the
that uh you need to mask out when the
episode
ends I mean unless I did something wrong
ends I mean unless I did something wrong
but I don't think so and why do you have
but I don't think so and why do you have
to mask out when the episode
to mask out when the episode
ends it's a 32 look
ends it's a 32 look
ahead I I don't know we could try it
here word
here word
block DOD forward yeah we can try
it yeah
it yeah
it stay out of
there yeah
what is this not
what is this not
um how's that not
um how's that not
faster that's very odd let me
see you commented commented that or
see you commented commented that or
didn't run it no it's no it's
didn't run it no it's no it's
slower huh hold
slower huh hold
on oh this that's actually weird this is
on oh this that's actually weird this is
not actually the source the slow
down that's that's actually kind of good
down that's that's actually kind of good
hang
on e
really these are slow
huh e
one should always try to use defines of
one should always try to use defines of
const
const
no I don't know why you
no I don't know why you
would const is
would const is
fine I don't know I just when I was new
fine I don't know I just when I was new
to C I was using uh pound defines
to C I was using uh pound defines
they're both fine it doesn't
matter I'll probably be writing more con
matter I'll probably be writing more con
stuff until I find something that annoys
stuff until I find something that annoys
me about it at the
moment I think the only thing bad is
moment I think the only thing bad is
about it is there's some like warning
about it is there's some like warning
flags that if you have them enabled are
flags that if you have them enabled are
annoying but you shouldn't have them
annoying but you shouldn't have them
enabled
enabled
anyways
anyways
safety um just because macros in general
safety um just because macros in general
are like
I start writing pound defines for
I start writing pound defines for
constants and then people start writing
macros oh that's okay then is this okay
macros oh that's okay then is this okay
no no it's not stop it well they should
no no it's not stop it well they should
they should understand what you know
they should understand what you know
what they're doing and why right no
what they're doing and why right no
prepare yourself
prepare yourself
for probably a really stupid
for probably a really stupid
question what's the difference between
question what's the difference between
an extern and a const like a con is just
an extern and a const like a con is just
a constant is an external just a way to
a constant is an external just a way to
like make a constant like Global I have
like make a constant like Global I have
no idea what extern does I don't use
no idea what extern does I don't use
that
that
keyword I use
keyword I use
extern for mapping my movement
extern for mapping my movement
Delta
Delta
why because instead of defining all of
why because instead of defining all of
my movements I just extern int movement
my movements I just extern int movement
Delta and it's an array of 10 by two for
Delta and it's an array of 10 by two for
minus one Z and one just groupings of
minus one Z and one just groupings of
like Delta coordinates and I use ex turn
like Delta coordinates and I use ex turn
to be
to be
[Music]
[Music]
array here here here
here declare a variable without defining
here declare a variable without defining
it so I do this right here sounds
useful what and pound
defin don't [ __ ] do that
defin don't [ __ ] do that
whatever
whatever
extern extern
extern extern
versus your question was extern versus
versus your question was extern versus
Pound Define
Pound Define
linky uh ex Turn versus
linky uh ex Turn versus
cons versus cons totally
cons versus cons totally
different I mean
different I mean
yeah so if you look at my screen you can
yeah so if you look at my screen you can
and well see where I use it and why I
and well see where I use it and why I
use it I've highlighted it on both
places I'm not looking I'm trying to
places I'm not looking I'm trying to
debug this yeah you're
good man that's surprising that that is
good man that's surprising that that is
slow as it
slow as it
is really like so you found the actual
is really like so you found the actual
slow
down I mean it's just like uh it like
down I mean it's just like uh it like
just some random numpy array operations
just some random numpy array operations
that are all
that are all
numpy are just very
slow I mean they that's 20% overhead
slow I mean they that's 20% overhead
right
right
there imagine slow update to Python 3.11
there imagine slow update to Python 3.11
and use numpy's free threaded
and use numpy's free threaded
version I'm not doing that I wouldn't
version I'm not doing that I wouldn't
it's
it's
bad um
I could could I do the whole thing and
see I mean that's wasn't that where this
see I mean that's wasn't that where this
was supposed to be
was supposed to be
going I think I
can but
then yeah it's a little late to do this
then yeah it's a little late to do this
tonight but I think that's where this is
tonight but I think that's where this is
going you're just gonna just gonna just
going you're just gonna just gonna just
going to crush all the all all the numpy
going to crush all the all all the numpy
things you don't need numpy at
things you don't need numpy at
all uh pretty much
all uh pretty much
yeah the C is
yeah the C is
fast now numpy is supposed to be
fast now numpy is supposed to be
leveraging that speed
leveraging that speed
no no
so so
so so
linky yeah it's it's you've been
linky yeah it's it's you've been
poisoned by
poisoned by
C++
C++
uh the ex the X turn thing is your your
uh the ex the X turn thing is your your
standard
standard
C++
C++
uh program is is going to have a b a
uh program is is going to have a b a
bunch of X turns because you're if you
bunch of X turns because you're if you
need to use a a function that's declared
need to use a a function that's declared
somewhere
somewhere
else you de you put you put an
else you de you put you put an
extern there in in the file you want to
extern there in in the file you want to
use it that way you don't have to okay
use it that way you don't have to okay
re redefine it
re redefine it
so that way goes I wouldn't say that's
so that way goes I wouldn't say that's
like poisoned by C++ I mean just writing
like poisoned by C++ I mean just writing
in C I just do it in multiple files
in C I just do it in multiple files
because it keeps
because it keeps
everything more
everything more
organized well yeah like if you're going
organized well yeah like if you're going
to do multiple files like you have to
to do multiple files like you have to
know what you're doing and have it be
know what you're doing and have it be
saying oh yeah
saying oh yeah
that's literally
that's literally
client and gr like two files you're
client and gr like two files you're
you're remember Joseph asking me earlier
you're remember Joseph asking me earlier
like why did you do this like I I had
like why did you do this like I I had
absolutely no answer yeah you're going
absolutely no answer yeah you're going
to have to have a better defense than
to have to have a better defense than
that no I've I can literally answer why
that no I've I can literally answer why
I've done what I've done I've literally
I've done what I've done I've literally
written this whole thing by hand like
written this whole thing by hand like
this
this
isn't code
isn't code
completion there isn't GPT or any this
completion there isn't GPT or any this
is literally like I wrote this myself we
is literally like I wrote this myself we
can give it the prompt hey make this
can give it the prompt hey make this
sane no no crazy C++ stuff it's not even
sane no no crazy C++ stuff it's not even
C++ I just use it so like I can because
C++ I just use it so like I can because
so I have a main file and then I have a
so I have a main file and then I have a
grid file and then I have a client file
grid file and then I have a client file
and then obviously the associated H
and then obviously the associated H
files for grid and client as well I run
files for grid and client as well I run
it from Main um like six files
it from Main um like six files
but five five and you're compiling how
I correct
I correct
yes you have a make
yes you have a make
file
file
yep was that counted in your file count
yep was that counted in your file count
it's not in my project
folder well where is it gonna where's it
folder well where is it gonna where's it
gonna go or is this not a puffer
gonna go or is this not a puffer
PR uh it will be a puffer lib PR that is
PR uh it will be a puffer lib PR that is
correct but puffer lib has their own
correct but puffer lib has their own
build in place method how I compile on
build in place method how I compile on
my own machine doesn't matter as long as
my own machine doesn't matter as long as
it still compiles with build in place so
it still compiles with build in place so
like my make file is above my project
like my make file is above my project
files by like two or three levels and I
files by like two or three levels and I
compile from above it because I use the
compile from above it because I use the
one make file for all of my
one make file for all of my
projects so it's not included in it I
projects so it's not included in it I
have a file named build which is where
have a file named build which is where
all my binaries go I have a file named
all my binaries go I have a file named
include which is where all my headers go
include which is where all my headers go
and then I have source which is all my C
and then I have source which is all my C
files and then I have
files and then I have
license um read me and all that and what
license um read me and all that and what
would be the project root
would be the project root
directories so when you're looking at
directories so when you're looking at
like the what your project has a read
like the what your project has a read
me yes impressive must be really
me yes impressive must be really
good if you're looking at my screen I'll
good if you're looking at my screen I'll
pull up the REO try
pull up the REO try
make
this this is all in there
this this is all in there
correctly so I think I have a make file
correctly so I think I have a make file
in here because my brother wanted to
in here because my brother wanted to
look at it but essentially it's read me
look at it but essentially it's read me
license ignore source and include
license ignore source and include
because I don't push my binaries up
because I don't push my binaries up
there uh two
headers three source
files and that's gener literally what it
files and that's gener literally what it
does this is my setup and in this file
does this is my setup and in this file
is where my make file is actually
is where my make file is actually
at um
at um
yeah so essentially all of this would
yeah so essentially all of this would
just be like when you clone
just be like when you clone
it how I operate you would get the
it how I operate you would get the
readme the license the dot get ignore
readme the license the dot get ignore
the source and the includes that's all
the source and the includes that's all
you really
need but I
need but I
use extern here because I need extern in
use extern here because I need extern in
order to use
it last words and scale factor never
it last words and scale factor never
used again that means that I forgot to I
used again that means that I forgot to I
use it so I use it
use it so I use it
here that just means I forgot to delete
here that just means I forgot to delete
stuff if they're never
used where and I oh oh I see glow and I
used where and I oh oh I see glow and I
see uh there's like a tricky there's a
see uh there's like a tricky there's a
really obnoxious glsl Shader that I was
really obnoxious glsl Shader that I was
fiddling with I
remember okay so the new algorithm has
remember okay so the new algorithm has
solve
solve
in it's still sub three
in it's still sub three
minutes with a new algorithm but it's
minutes with a new algorithm but it's
not as fast as the
not as fast as the
uh General
uh General
po just really obnoxious because it was
po just really obnoxious because it was
this fast before but then we found
this fast before but then we found
better sweep settings for the
original uh have you test tested on
original uh have you test tested on
other environment besides that no just
other environment besides that no just
as so far because we're just fiddling
as so far because we're just fiddling
with stuff still but okay so this is
with stuff still but okay so this is
before the before we made everything
before the before we made everything
really
really
fast in fact we could just run one of
fast in fact we could just run one of
these to see how fast is now CU it would
these to see how fast is now CU it would
be
be
funny
yep
see yeah I'm proud of my micro you guys
see yeah I'm proud of my micro you guys
can you can hate on it all you want
can you can hate on it all you want
micro is nice no no one's hating don't
micro is nice no no one's hating don't
don't don't don't
don't don't don't
mistake no I'm just I'll be honest I it
mistake no I'm just I'll be honest I it
I've spent so much time configuring it
I've spent so much time configuring it
i' like down to the syntax files and
i' like down to the syntax files and
everything so like I have syntax
everything so like I have syntax
highlighting on scon as
highlighting on scon as
well I spent an awful amount of time
well I spent an awful amount of time
configuring
configuring
it wow syntaxing
onon better than vs code that's for sure
onon better than vs code that's for sure
is this a blackbox
is this a blackbox
whatever yeah here let me go find a
whatever yeah here let me go find a
siphon file real quick I think you'll be
impressed uh we'll do
impressed uh we'll do
Enduro let's go look at your Enduro file
Enduro let's go look at your Enduro file
how about this that's actually
some you impressed some work what this
some you impressed some work what this
is actually
is actually
pretty yeah it keeps finding weirder and
pretty yeah it keeps finding weirder and
weirder parameters honestly
what uh what's weird about that you'll
what uh what's weird about that you'll
see it's little yeah it's not what it
see it's little yeah it's not what it
was
was
before so this is actually probably
before so this is actually probably
going to be kind of
going to be kind of
decent it actually
went it's like crazy the amount of like
went it's like crazy the amount of like
optimization that can be done on these
optimization that can be done on these
like it just keeps getting better
I'm CU so added a little bit of
I'm CU so added a little bit of
ENT J
Lambda it's got to be
thisam gamma's
thisam gamma's
higher then learning rate
mini bad
mini bad
size hello hello
size hello hello
hello hey who's that oh welcome hey
hello hey who's that oh welcome hey
Aaron Oh Aaron I made puffer lip three
Aaron Oh Aaron I made puffer lip three
times
times
faster nice yeah we uh we train we train
faster nice yeah we uh we train we train
at like uh 2.5 to 5 million steps per
at like uh 2.5 to 5 million steps per
second
second
now um I have some initial runs of
now um I have some initial runs of
learning progress for you stre by the
learning progress for you stre by the
way just FYI yeah no no worries to say
way just FYI yeah no no worries to say
once uh you have the hyper pram stuff
once uh you have the hyper pram stuff
pushed in I'll do the big
pushed in I'll do the big
sweep okay um well I just I just pushed
sweep okay um well I just I just pushed
the also the insane perfects is to Dev
the also the insane perfects is to Dev
so we're about to see whether or not we
so we're about to see whether or not we
can solve breakout in uh in like 30
can solve breakout in uh in like 30
seconds nice uh in that case we'll just
seconds nice uh in that case we'll just
chat tomorrow and then look at how to
chat tomorrow and then look at how to
pull this into main my plan for tomorrow
pull this into main my plan for tomorrow
is to go for a long run and if I have
is to go for a long run and if I have
anything left to lift a bunch of weits
anything left to lift a bunch of weits
and then hopefully I will still be able
and then hopefully I will still be able
to talk I don't think you'll have much
to talk I don't think you'll have much
left after all that we might I don't
left after all that we might I don't
[Laughter]
know uh sounds good yeah just wanted to
know uh sounds good yeah just wanted to
let you know thank you very nice no
let you know thank you very nice no
module named Neptune
module named Neptune
what oh up
what oh up
to that's
to that's
weird we will solve all of our
weird we will solve all of our
out with one p install thank you Aaron
out with one p install thank you Aaron
she still here no problem oh yeah
she still here no problem oh yeah
EAS does Break Out Auto
EAS does Break Out Auto
solve what the give me this token
solve what the give me this token
stupid this stupid thing doesn't
stupid this stupid thing doesn't
remember your token it's like yeah we're
remember your token it's like yeah we're
going to make it so secure that you leak
going to make it so secure that you leak
your stupid token on stream every time
your stupid token on stream every time
you want to use the
you want to use the
thing people GNA start pushing stuff to
thing people GNA start pushing stuff to
there pushing even faster
somehow GitHub
somehow GitHub
token Oh no you're Neptune no I don't L
token Oh no you're Neptune no I don't L
my get up token thankfully okay so this
my get up token thankfully okay so this
is slower than before which doesn't make
is slower than before which doesn't make
any damn sense 400k uh
any damn sense 400k uh
wasn't
wasn't
it me see how what was the speed before
it me see how what was the speed before
I
I
don't I'm looking hang on don't get your
don't I'm looking hang on don't get your
nickers in a
[Music]
Twist yeah this is 700k
before I'll update epox you
before I'll update epox you
dumbass hang on
dumbass hang on
I forgot update EPO that's got to be
I forgot update EPO that's got to be
it yeah one update
Epoch there you
go what if more eox is
go what if more eox is
better just
better just
kidding well we'll actually
kidding well we'll actually
see uh yeah we will see by comparison if
see uh yeah we will see by comparison if
it works anything like I think it works
it works anything like I think it works
then it should 1.1 mil so it went up
then it should 1.1 mil so it went up
from 6 700k to 1.1
mil what was theox that before was it
mil what was theox that before was it
one three no it's one now now it's
one three no it's one now now it's
one so that's awesome
yeah so you can see here it's slightly
yeah so you can see here it's slightly
slightly less ample
slightly less ample
efficient
efficient
but it's so
fast yeah sample efficiency doesn't
fast yeah sample efficiency doesn't
necessarily matter it's not the be all
necessarily matter it's not the be all
and end all
rather e
and I forgot to fix
and I forgot to fix
the minute 48
the minute 48
is 108
seconds for
pretty damn
pretty damn
good 108
good 108
seconds but is it the
seconds but is it the
best uh it's better than anything that
best uh it's better than anything that
we got
we got
before so the best so
far e
well that's [ __ ] right I have to send
well that's [ __ ] right I have to send
I gotta send a set up a wire this is why
I gotta send a set up a wire this is why
we
we
test I well Monday it'll be
test I well Monday it'll be
good Monday it'll be
good yeah send me that Aon and I'll uh
good yeah send me that Aon and I'll uh
I'm doing everything manually
I'm doing everything manually
so no worries and I'll send that on uh I
so no worries and I'll send that on uh I
thought I think it's for the third
thought I think it's for the third
anyways isn't it third fourth something
anyways isn't it third fourth something
right there at the start of the month
right there at the start of the month
yeah so I'm on time oh yeah 100% I try
yeah so I'm on time oh yeah 100% I try
not to no rush no worries I'm very
not to no rush no worries I'm very
careful of
[Music]
that I told I sent over that we've uh
that I told I sent over that we've uh
tripled her for small
Nets
Nets
and it's just cool you know
and it's just cool you know
it's like oh I got a guy know I got a
it's like oh I got a guy know I got a
guy who's going to be happy about that
guy who's going to be happy about that
you
you
know I would hope some people would be
know I would hope some people would be
happy about
this actually uh Joseph we've actually
this actually uh Joseph we've actually
been a big cabal of scientists this
been a big cabal of scientists this
whole time purposefully keeping things
whole time purposefully keeping things
slow and you're really [ __ ] with
slow and you're really [ __ ] with
us yeah sorry sorry about that sorry to
us yeah sorry sorry about that sorry to
ruin this
quo so is you don't want my information
quo so is you don't want my information
from the box and hopes that we slow
from the box and hopes that we slow
everyone down
no Hopper is
fast interesting this one didn't do as
fast interesting this one didn't do as
well but it did actually
well but it did actually
syn oh so hold on did
syn oh so hold on did
this when I checked this one before
uh you see here this is
uh you see here this is
actually 85 metal that's why it was
fast yeah it was fast because it this it
fast yeah it was fast because it this it
because it solved in
because it solved in
85 mil so unless I miss something here
85 mil so unless I miss something here
that's not why it is
fast in wall clock time it was fast
fast in wall clock time it was fast
because it solved 85 seconds I mean 85
mil I suppose solving sooner is
mil I suppose solving sooner is
preferred
it's a fair bit of variance from run to
run is that unexpected or it's expected
run is that unexpected or it's expected
in RL but I would love to know why it's
in RL but I would love to know why it's
like
like
this it's kind of
gross we definitely need to onboard more
gross we definitely need to onboard more
science side people though even like you
science side people though even like you
really don't need to have a crazy
really don't need to have a crazy
background for a lot of these things
background for a lot of these things
either just stuff like hey can somebody
either just stuff like hey can somebody
comprehensively try out different
comprehensively try out different
learning rate schedulers like does
learning rate schedulers like does
cosine anding actually do anything just
cosine anding actually do anything just
like small little things like this
right yeah so like this doesn't actually
match unless I missed a parameter hold
match unless I missed a parameter hold
on don't think I did though
yeah no see
yeah no see
it's it's weird
it's it's weird
because I have all the parameters
because I have all the parameters
matched but it doesn't do nearly as
well so it's kind it's like annoying
well so it's kind it's like annoying
because it's like um the best runs are
because it's like um the best runs are
also lucky runs not
replicable so maybe not a real
result well it's not like it's horribly
result well it's not like it's horribly
horribly far off right it's just like
horribly far off right it's just like
there's a fair there's a fair bit of
there's a fair there's a fair bit of
variance right so if you take a 100
variance right so if you take a 100
samples some of them are going to get
samples some of them are going to get
lucky where they solve it you know 30
lucky where they solve it you know 30
million steps faster than the average
million steps faster than the average
run just by virtue of RNG
I am going to start a new sweep on this
I am going to start a new sweep on this
uh
uh
overnight I think we can start two new
overnight I think we can start two new
sweeps
actually okay sweeping
what uh just the same sweeps on the new
code just to make sure I didn't break
code just to make sure I didn't break
anything all right
anything all right
and these resources folders there the
and these resources folders there the
two resources folders is
two resources folders is
annoying what
annoying what
two there are two there's one
two there are two there's one
puffer SL resources then there
is one of sim
is one of sim
link yeah exactly the same
link yeah exactly the same
thing puff resources
well my
my linking to the Sim link is not
my linking to the Sim link is not
working so
resources Enduro
resources Enduro
okay so this should just be resources
okay so this should just be resources
blaster
e e
sound like
me I mean I've been on this for a good
me I mean I've been on this for a good
12 hours
12 hours
today cool I worked that long
today cool I worked that long
too except you know what I did today
too except you know what I did today
not a goddamn
not a goddamn
thing that's tomorrow I'll get to go for
thing that's tomorrow I'll get to go for
a run and just get some exercises and
a run and just get some exercises and
stuff and
stuff I went out to
eat to be fair
eat to be fair
it's still kind of morning for me
it's still kind of morning for me
so going to fast
um yeah just
um yeah just
if I don't know I don't I don't know
if I don't know I don't I don't know
about celebrating for for 100 100K
about celebrating for for 100 100K
celebrating
celebrating
is
is
amazing I don't know someone said go to
amazing I don't know someone said go to
I suggested someone said go to go to
I suggested someone said go to go to
Japan and and eat a puffer fish oh I
Japan and and eat a puffer fish oh I
wait was it lion I saw you got 5 XP to
wait was it lion I saw you got 5 XP to
BU snake what kind of Wizardry oh this
BU snake what kind of Wizardry oh this
is Spencer in here hey Spencer who said
is Spencer in here hey Spencer who said
Wiz who said Wizardry I said wizard 5x
Wiz who said Wizardry I said wizard 5x
is
is
uh uh 5x is like the best Cas we still
uh uh 5x is like the best Cas we still
get 3x though it went from 900k to 2.5
get 3x though it went from 900k to 2.5
2.7 with
2.7 with
compile yes what did he do don't tell me
compile yes what did he do don't tell me
don't tell me you turned on
compile you upgrade you upgraded p and
compile you upgrade you upgraded p and
turned on compile don't tell me that was
turned on compile don't tell me that was
the fix
the silence is ominous hold
the silence is ominous hold
on well what is defined as an error say
on well what is defined as an error say
maybe we should try the nightly
[Music]
[Music]
string starts with that ends in that we
string starts with that ends in that we
skip that and the rules are if we
skip that and the rules are if we
have in [ __ ] so it is technically an
have in [ __ ] so it is technically an
error
think yelling at co-pilot
think yelling at co-pilot
yeah
yeah
f is
what we have footage of linky trying to
what we have footage of linky trying to
use
co-pilot no it just says co-pilot ready
co-pilot no it just says co-pilot ready
at the bottom it actually doesn't work
at the bottom it actually doesn't work
that's the LSP server I'm
that's the LSP server I'm
attempting I can show my work and do
attempting I can show my work and do
co-pilot do suggest and it'll say
co-pilot do suggest and it'll say
nothing even though you know I come in
nothing even though you know I come in
here and check my info it's
here and check my info it's
authenticated it's running and enabled
authenticated it's running and enabled
it just doesn't ever suggest this
it just doesn't ever suggest this
again the what oh I said oh this again
again the what oh I said oh this again
yeah I gave up on it for now all when I
yeah I gave up on it for now all when I
have some Epiphany moment where I've
have some Epiphany moment where I've
like it comes to me and I'm like I'm
like it comes to me and I'm like I'm
just a [ __ ] idiot I'll look at it
just a [ __ ] idiot I'll look at it
again but I'm fluid out as for
again but I'm fluid out as for
now so I am going over syntax files and
now so I am going over syntax files and
trying to figure out
trying to figure out
why
why
this
means that this is an error because I
means that this is an error because I
have no idea why
is there no
t-u t-u on that's really weird that's no
t-u t-u on that's really weird that's no
one's tring anything presumably I I must
one's tring anything presumably I I must
have killed it by mistake let me
have killed it by mistake let me
see o big sad no actually it's
fine the real teams was the friends we
fine the real teams was the friends we
made along the way
all right now let's try
this oh yeah it helps when I actually
this oh yeah it helps when I actually
put the Assets in the folder okay
put the Assets in the folder okay
great now if that's
solved e
my kid's getting lectured about not
my kid's getting lectured about not
knowing a second language
knowing a second language
[Laughter]
that's
horrible speak I speak English and I
horrible speak I speak English and I
speak
speak
American I said Jesus is
American I said Jesus is
a speak in English and speak
a speak in English and speak
American in Spanish and Chinese whatever
American in Spanish and Chinese whatever
yeah want do to be able to hear Chinese
yeah want do to be able to hear Chinese
uh
uh
Mandarin any
un as hell to learn
un as hell to learn
later I speak fluent
later I speak fluent
simplified it's the same language
simplified it's the same language
simplified and it's just the
simplified and it's just the
writing see that was that was the joke
writing see that was that was the joke
because I'm saying I'm an idiot so I
because I'm saying I'm an idiot so I
speak in simplified terms as well oh
speak in simplified terms as well oh
okay you had yes for yeah well it
okay you had yes for yeah well it
doesn't really translate that's yeah C
doesn't really translate that's yeah C
it should have been worked off better my
it should have been worked off better my
my favorite dumbass joke I made in
my favorite dumbass joke I made in
Chinese uh
isal which means have you eaten until
isal which means have you eaten until
you're full no I've eaten until I'm
you're full no I've eaten until I'm
round doesn't trans no that's hilarious
round doesn't trans no that's hilarious
because one time my older brother who is
because one time my older brother who is
one of the bigger people in our family
one of the bigger people in our family
um we were all my mom who's a nutrition
um we were all my mom who's a nutrition
nut was saying something about how she
nut was saying something about how she
only eats whatever whatever whatever my
only eats whatever whatever whatever my
older brother just looks up from his
older brother just looks up from his
plate and goes I don't eat until I'm
plate and goes I don't eat until I'm
full I eat until I'm or I eat until I
full I eat until I'm or I eat until I
hate myself or some [ __ ] like that it
hate myself or some [ __ ] like that it
was
hilarious I eat until I hate myself the
hilarious I eat until I hate myself the
sad thing is he was
sad thing is he was
serious yeah no it was full serious and
serious yeah no it was full serious and
it just it was like it was just a moment
it just it was like it was just a moment
where he's sitting there eating and he
where he's sitting there eating and he
it was almost like his face just panned
it was almost like his face just panned
upwards and he just looked at my mom and
upwards and he just looked at my mom and
said I don't eat until I'm full I eat
said I don't eat until I'm full I eat
until I hate myself because my mom was
until I hate myself because my mom was
saying something about I don't eat until
saying something about I don't eat until
I'm full I eat until I hit my moon fro
I'm full I eat until I hit my moon fro
or some [ __ ] and then he just looked up
or some [ __ ] and then he just looked up
and said that and then looked back down
and said that and then looked back down
and kept eating
okay this has been a successful day of
okay this has been a successful day of
puffer Li I think once we finish
puffer Li I think once we finish
basically once we finish if the new
basically once we finish if the new
algorithm works that's three things
algorithm works that's three things
three things well plus the new
three things well plus the new
environments that's enough for puffer
environments that's enough for puffer
2.5 um all the experiments and stuff
2.5 um all the experiments and stuff
have to be done as well but I think
have to be done as well but I think
content wise that's good that is is new
content wise that's good that is is new
sweeps new
sweeps new
algorithm uh old like way higher perf
algorithm uh old like way higher perf
plus the new
plus the new
M I think that's
M I think that's
good three new
Ms so we'll see on that the new the new
Ms so we'll see on that the new the new
algorithm I think that there's still
algorithm I think that there's still
hope for it
hope for it
because it's off by it's off by a fair
because it's off by it's off by a fair
bit but then a lot of that is just the
bit but then a lot of that is just the
uh wall clock overhead of the
uh wall clock overhead of the
unoptimized reward computation right now
unoptimized reward computation right now
so we can fix that for
so we can fix that for
sure and then we'll see from
sure and then we'll see from
there all right your new algorithm is
there all right your new algorithm is
that this PR here
that this PR here
p3l uh bet you got PR for me to merge
p3l uh bet you got PR for me to merge
real quick I am pring it as we speak
real quick I am pring it as we speak
okay I'm merging that
okay I'm merging that
2.0 I was just ask just
dude yeah we don't touch 2.0 unless it's
dude yeah we don't touch 2.0 unless it's
like an immediate high priority bug
like an immediate high priority bug
fix Doug for 2.0 considerate
fix Doug for 2.0 considerate
production
production
um automatically birs I'm
um automatically birs I'm
sure3 Spencer submit a thing that I
sure3 Spencer submit a thing that I
forgot about
so are you full moving puffer Li into
so are you full moving puffer Li into
the new algorithm or is there is still G
the new algorithm or is there is still G
to be okay if it works better across the
to be okay if it works better across the
board then why wouldn't
board then why wouldn't
I I agree I was just that's a high
I I agree I was just that's a high
bar wondering if you were going to keep
bar wondering if you were going to keep
both Po and P3 is optional we'll keep
both Po and P3 is optional we'll keep
keep whatever is best the only reason I
keep whatever is best the only reason I
specify that is because if anybody comes
specify that is because if anybody comes
in and starts like well actually then
in and starts like well actually then
you could just go PO is still
you could just go PO is still
implemented go ahead and run your own
implemented go ahead and run your own
Benchmark I mean scientists are going to
Benchmark I mean scientists are going to
want that that's what I'm saying that
want that that's what I'm saying that
way you can put the ball in their field
way you can put the ball in their field
there so many [ __ ] if
there so many [ __ ] if
statements it's the same bloody
statements it's the same bloody
thing [ __ ] You [ __ ] You Scientist like
thing [ __ ] You [ __ ] You Scientist like
stop it why you make my life
stop it why you make my life
hard it's like you know you give a
hard it's like you know you give a
scientist a piece of code a beautifully
scientist a piece of code a beautifully
optimized piece of code and they'll find
optimized piece of code and they'll find
a way to run it at they won't even run
a way to run it at they won't even run
it at like a fixed like 5x lower 10x
it at like a fixed like 5x lower 10x
lower they'll run it at a pace where the
lower they'll run it at a pace where the
experiments take three days because
experiments take three days because
that's how long they're willing to wait
that's how long they're willing to wait
look I didn't need you to call me out
look I didn't need you to call me out
just because the new learning progress
just because the new learning progress
experiments take an
experiments take an
hour up from a
hour up from a
minute okay nice what is that a 60 60x
minute okay nice what is that a 60 60x
impressive uh in actuality I think it's
impressive uh in actuality I think it's
like 40 minutes my God okay we're gonna
like 40 minutes my God okay we're gonna
fix that [ __ ] and then I just mean it's
fix that [ __ ] and then I just mean it's
it's an easy way to put the put all the
it's an easy way to put the put all the
pressure on them to say it's still
pressure on them to say it's still
implemented and feel free to Benchmark
implemented and feel free to Benchmark
it yourself and prove me wrong check I
it yourself and prove me wrong check I
mean they can also just go grab the 2.0
mean they can also just go grab the 2.0
it's annoying just it makes it just
it's annoying just it makes it just
makes the code like I said I would only
makes the code like I said I would only
consider replacing it if we beat it
consider replacing it if we beat it
across the board but it honestly it
across the board but it honestly it
would just be PO with two fewer hyper
would just be PO with two fewer hyper
parameters to
parameters to
optimize you don't have to explain it to
optimize you don't have to explain it to
me I am very firm in my own code if it
me I am very firm in my own code if it
doesn't work it's gone I don't want to
doesn't work it's gone I don't want to
look at Dead code I don't want to look
look at Dead code I don't want to look
at unused code anything that doesn't
at unused code anything that doesn't
work it's gone every new thing every
work it's gone every new thing every
extra thing in Dev makes it like every
extra thing in Dev makes it like every
extra thing in that clean puffero file
extra thing in that clean puffero file
makes it worse so E3 is probably getting
makes it worse so E3 is probably getting
tossed because I think that algorithm
tossed because I think that algorithm
sucks um we'll see I have to finish
sucks um we'll see I have to finish
testing it um I mean you're preaching to
testing it um I mean you're preaching to
the choir at this point because I
the choir at this point because I
legitimately made a neuter version of
legitimately made a neuter version of
puffer Li just because I was all the
puffer Li just because I was all the
files just waiting for you buddy
uh
uh
oh time out's happening
oh time out's happening
what
nothing his child is in
trouble it's
fun watch out cat thank
you damn it watch out cat wait
wait this is going
wait this is going
to wait oh no it's not
to wait oh no it's not
okay damn
okay damn
it see you Aaron
bye why you do this to
bye why you do this to
me we bought one of those small mini
me we bought one of those small mini
couches for for my son and it is the
couches for for my son and it is the
most adorable thing ever it looks like
most adorable thing ever it looks like
it's made out of like cushions from a
it's made out of like cushions from a
couch I love
it okay
it okay
merged so for the folks that are still
merged so for the folks that are still
on YouTube and twitch at 10:42 on a
on YouTube and twitch at 10:42 on a
Saturday
Saturday
thanks for tuning in you've been kind of
thanks for tuning in you've been kind of
keeping tabs today you've
keeping tabs today you've
watched the highest performance
watched the highest performance
reinforcement learning library get three
reinforcement learning library get three
times faster at least four fast M's
times faster at least four fast M's
small
small
models pretty much get faster across the
models pretty much get faster across the
board it's a hell of an optimization
board it's a hell of an optimization
day uh if you're interested
day uh if you're interested
in all this RL stuff that I
in all this RL stuff that I
do buffer.
do buffer.
a links are right there start the GitHub
a links are right there start the GitHub
please just start the GitHub it really
please just start the GitHub it really
helps out the project we're doing this
helps out the project we're doing this
full-time lots of folks involved just
full-time lots of folks involved just
helps the project row a lot and other
helps the project row a lot and other
than that you can join the Discord to
than that you can join the Discord to
get involved you do not need RL
get involved you do not need RL
experience prior any of our best
experience prior any of our best
contributors did not have any just need
contributors did not have any just need
to be able to
to be able to
code and uh follow on X for more RL
code and uh follow on X for more RL
content all RL content on X there's some
content all RL content on X there's some
blog posts here including this quick
blog posts here including this quick
start guide beginners but there's some
start guide beginners but there's some
more articles on X you can't find
more articles on X you can't find
anywhere else all the demos are on Ocean
anywhere else all the demos are on Ocean
docks data all that
docks data all that
stuff so I will be
stuff so I will be
back either tomorrow or if I crash out
back either tomorrow or if I crash out
then it will be on Monday and we'll be
then it will be on Monday and we'll be
back with more Dev going to be trying to
back with more Dev going to be trying to
get Dev stable we're going to be running
get Dev stable we're going to be running
all the new experiments especially now
all the new experiments especially now
that everything's nice and fast testing
that everything's nice and fast testing
the new algorithms final test on the new
the new algorithms final test on the new
algorithms and doing some client work as
algorithms and doing some client work as
well so thank you and I will see you
well so thank you and I will see you
around bye

Kind: captions
Language: en
L we are back
L we are back
live what's happened to
live what's happened to
my my
camera freaking green
camera freaking green
screen hang
screen hang
on just do
this there we
go we've been busy
go we've been busy
today for
what the
what the
heck this
heck this
freaking the social media meta is just
freaking the social media meta is just
ridiculous
get out of there we have work to
get out of there we have work to
do
so I'm trying to think
so I'm trying to think
where we want to put the time in now
where we want to put the time in now
because o it's not this
one we run snake right
puy
puy
M I think we kind of just want to clean
M I think we kind of just want to clean
this up and make sure we haven't just
this up and make sure we haven't just
horribly broken everything
right so I do think we we have broken
right so I do think we we have broken
some stuff haven't
some stuff haven't
we like this should be learning properly
all right so we'll see if we can figure
all right so we'll see if we can figure
that out
it's probably the lstm weights
right it's not
this e
okay these are the
okay these are the
same is way too the
same so there's no desync
happening I bet this is it right here
where's
H uh where's HC even come from here oh
H uh where's HC even come from here oh
right there
so LST MH of zero
so LST MH of zero
and GPU and the ID
oops go
here and I probably should flip this SC
here and I probably should flip this SC
into here right
they exactly the
they exactly the
same I think they should be exactly the
same I think they should be exactly the
same that's
weird for
trying to think what stuff I changed
trying to think what stuff I changed
that could be messing this up
something's got to be screwy
right
oops actually I don't think the breakup
oops actually I don't think the breakup
defaults are any good snake defaults are
defaults are any good snake defaults are
definitely good though
policy.
policy.
parameters about without compile
score is just not going up fast
enough think it's something with the
enough think it's something with the
lstm
oh yeah definitely something with the
oh yeah definitely something with the
lstm look at
that oh yeah also remember the
that oh yeah also remember the
um remember this is a different version
um remember this is a different version
of the environment so this is actually
of the environment so this is actually
reasonable
perf e
what are we training
what are we training
snake yeah we're training just snake
snake yeah we're training just snake
we're using it as a uh just as a
we're using it as a uh just as a
baseline here we're just perf optimizing
baseline here we're just perf optimizing
the crap out of puffer Li
today that is the general idea
okay we can just get rid of
this ah so this is the
this ah so this is the
issue it seems
because this now
because this now
works so it's straight up just um the
works so it's straight up just um the
clever hack I came up with somehow not
clever hack I came up with somehow not
being fully
correct I hope I don't have to like
correct I hope I don't have to like
revert this because this is one of the
revert this because this is one of the
big perf
bumps I tested that the weights are the
bumps I tested that the weights are the
same
maybe it doesn't use them for some
maybe it doesn't use them for some
[Music]
[Music]
reason what did you
change well I clearly change some
change well I clearly change some
stuff because puffer lib is more than
stuff because puffer lib is more than
twice as fast now
why does this screw up
maybe you can't do it this
way okay s with current
849 so
849 so
um this seems
um this seems
fine to
me this seems completely
fine for
hey
hey
bet how's it
going we are making puffer look very
going we are making puffer look very
fast
well we hit 5 million with a very small
well we hit 5 million with a very small
Network and we hit 2.5 to 3 million with
Network and we hit 2.5 to 3 million with
like actual reasonable snake training
like actual reasonable snake training
setting so yeah we just have one bug to
setting so yeah we just have one bug to
fix here and then it'll be stable enough
fix here and then it'll be stable enough
and I just have to like clean it up a
and I just have to like clean it up a
bit and then we'll have a 3X faster Dev
bit and then we'll have a 3X faster Dev
Branch for most of our quick experiments
yeah 3X we went from 900k to 2.7 million
yeah 3X we went from 900k to 2.7 million
at the high end but I think we're
at the high end but I think we're
probably going to get more like 2.5
is
Puff for
oh no this is just literally normal po
oh no this is just literally normal po
being 3x
being 3x
faster not like 3X 3X fewer samples just
faster not like 3X 3X fewer samples just
like straight up 3x
faster wonderful Wizard of
Oz explain I fix some
Oz explain I fix some
stuff you know I got rid of some dumb
stuff you know I got rid of some dumb
python calls that shouldn't have been
python calls that shouldn't have been
there cuz they were slow and I've also
there cuz they were slow and I've also
been debugging horribly cursed things
been debugging horribly cursed things
deep in the depths of pie
torch it's very simple you know if you
torch it's very simple you know if you
stare too long into the abyss the abyss
stare too long into the abyss the abyss
May stare back into
you that's all it
is Vibe coding no I'm saying I'm fixing
[ __ ] you've got like Twitter brain rot
[ __ ] you've got like Twitter brain rot
my guy
n you've been on Twitter too
n you've been on Twitter too
much Vibe of puffer is fast exactly
much Vibe of puffer is fast exactly
though that is true puffer very
fast it is good that the puffer is fast
okay so these two things give me
okay so these two things give me
different results which is
[ __ ] the thing that's really sketchy is
[ __ ] the thing that's really sketchy is
like they're not that far
off I mean the implementations of to be
off I mean the implementations of to be
the same don't
they are there like options I'm not
seeing bias equals
true bias equals
true
e e
the hell
what why does this exist
e e
that's very
that's very
sketchy I mean is one of these weights
sketchy I mean is one of these weights
transposed like no that give me
transposed like no that give me
something very different
right go damn it
P
for
e
e e
wait what H
wait what H
cell H
lstm yes these are the same
lstm yes these are the same
here so what happened because
here so what happened because
in the test they're the same
in the test they're the same
right
right
so UNS squeeze zero
okay so in the test they're the
same e
this is exactly what I freaking did
this is exactly what I freaking did
isn't
it hang on they didn't give
uh oh shouldn't it be zero on the first
uh oh shouldn't it be zero on the first
step
anyways it is zeros
oh you
oh you
dumbass hang on
dumb
ass okay so now they ought to match
ass okay so now they ought to match
right
okay he just happened
oh this works a little differently
oh this works a little differently
doesn't
it I see you just screw it up as all
there we
go still just as
go still just as
fast but now it trains as well bug
fixed bug is fixed
yeah that thing is crazy fast holy
tho in less than a
minute so now we have to unfortunately
minute so now we have to unfortunately
deal with all the possible permutations
deal with all the possible permutations
of everything
oops okay that still
runs that still
runs for
oops we're just fix some [ __ ] real
oops we're just fix some [ __ ] real
quick it's not that
hard e
that
oh and you need to not use the snake
oh and you need to not use the snake
policy for
this for
runs
cool
e
e
e e
very
obnoxious so can just use n byid then
obnoxious so can just use n byid then
here right
there we
go this now runs
again without this
too many values expected to
the default
net e
oh I know what it
is e
very
very
nice that
runs no e3b now
there we
go so this all works
everything runs nicely
everything runs nicely
now so it is just a matter of cleaning
now so it is just a matter of cleaning
some stuff
some stuff
up we should be good I'm going to take
up we should be good I'm going to take
my vitamins before I
my vitamins before I
forget yeah it
forget yeah it
works just got to take my vitamins we're
works just got to take my vitamins we're
going to clean it up a little and then
going to clean it up a little and then
we're going to push
we're going to push
everything because it's like stuff's
everything because it's like stuff's
still pretty broken honestly in the dev
still pretty broken honestly in the dev
bran like and it's uh it's not
bran like and it's uh it's not
entirely ridiculous it's just that
entirely ridiculous it's just that
um there are a few things that we're
um there are a few things that we're
still
still
testing that will take additional work
testing that will take additional work
to fully integrate and I don't want to
to fully integrate and I don't want to
fully integrate them until I know that
fully integrate them until I know that
we're actually going to use them if that
we're actually going to use them if that
makes sense like e3b for
makes sense like e3b for
instance we're testing this for somebody
instance we're testing this for somebody
right now and it doesn't seem like it
right now and it doesn't seem like it
does
does
anything but we want to make sure it
anything but we want to make sure it
doesn't do anything before we drop it
code's not private it'll be on Devon
code's not private it'll be on Devon
like an
like an
hour CU I'm
done because apparently I hate money so
done because apparently I hate money so
fastest RL Library by a mile will be
fastest RL Library by a mile will be
free and open
source Blaster let me finish this [ __ ]
source Blaster let me finish this [ __ ]
man I've been coding all
day there will be Blaster code review
day there will be Blaster code review
let me finish this [ __ ] you said it was
let me finish this [ __ ] you said it was
done I I could just push it right now
done I I could just push it right now
but I'd like to clean it up do you see
but I'd like to clean it up do you see
what a [ __ ] mess this
what a [ __ ] mess this
is look at this [ __ ] this is a
is look at this [ __ ] this is a
mess look at the
dashboard look at the dashboard does
dashboard look at the dashboard does
this look like a good dashboard to you
this look like a good dashboard to you
no this is a mess
also now is probably not the best time
also now is probably not the best time
for you you're going to get a grumpy
for you you're going to get a grumpy
I've been fighting demons all day style
I've been fighting demons all day style
code review
freaking exorcism going on in RL space
here is there anything else we can get
here is there anything else we can get
out of this as
out of this as
well hang on so puffer breakout this is
well hang on so puffer breakout this is
a good uh a good
a good uh a good
metric train
frame 11% and miss
this is true I am usually
grumpy okay I'm seeing
grumpy okay I'm seeing
12% 12% misk
there so where's the 12 I want to know
there so where's the 12 I want to know
where 12% M crane is coming
where 12% M crane is coming
from that's weird right
is it here or is it not
here I can go
here I can go
jog probably not I will probably go to
jog probably not I will probably go to
sleep you should go jog
sleep you should go jog
though we can always do unless it's
though we can always do unless it's
today your only time to do this review
today your only time to do this review
if today's your only time to do this
if today's your only time to do this
review then I can I can just do it now
review then I can I can just do it now
real quick and we can just merge
it okay let's do it real quick where's
it okay let's do it real quick where's
the review link
the review link
code you asked for it link the code
hopp and puffer
hopp and puffer
VC we'll
do all right hey on stream let's go
do all right hey on stream let's go
hello hello where's code give
code you are L Joseph is
crazy I move the mic closer I'm out of
crazy I move the mic closer I'm out of
out of control uh does the mic sound
out of control uh does the mic sound
better or just
better or just
louder uh it sounds probably just Lou
louder uh it sounds probably just Lou
explosive on the E drums it's still good
explosive on the E drums it's still good
um I was testing moving the mic closer I
um I was testing moving the mic closer I
don't know because I thought I had it
don't know because I thought I had it
too far before well you had you did have
too far before well you had you did have
it a little far away like uh amplitude
it a little far away like uh amplitude
wise volume all right I can push it back
wise volume all right I can push it back
a little bit as well so it's still and
a little bit as well so it's still and
now I have to adjust your volume again
now I have to adjust your volume again
yeah we can do like this that's probably
yeah we can do like this that's probably
that's probably the right spot for it
that's probably the right spot for it
and it's out of frame
and it's out of frame
perfect fine think I pr this to two
perfect fine think I pr this to two
2.0 no play to De don't to
two well it might have been to
two well it might have been to
Dev now that I think about it last start
Dev now that I think about it last start
is complete there it is January 26 you
is complete there it is January 26 you
know what that's not you without no it's
know what that's not you without no it's
a whole month never mind I was confused
a whole month never mind I was confused
here if you recall there was a minor
here if you recall there was a minor
delay at the start of January you nearly
delay at the start of January you nearly
died so bake news you were you were
died so bake news you were you were
alive and well probably doing something
alive and well probably doing something
insane that you can't tell us about I
insane that you can't tell us about I
have a picture from the hospital
have a picture from the hospital
somewhere no I believe you I don't know
somewhere no I believe you I don't know
did I get sented
did I get sented
somewhere no I'm gen chats and sear
somewhere no I'm gen chats and sear
popular oh yeah
uh can I show this on stream I probably
uh can I show this on stream I probably
can that's not toss is it no that's not
can that's not toss is it no that's not
toss I am there you
toss I am there you
go that's when I was still freaking
go that's when I was still freaking
jacked before I'd had a week's worth of
jacked before I'd had a week's worth of
catabolic steroids pumped into me yeah
catabolic steroids pumped into me yeah
yeah yeah you initially agreed to the
yeah yeah you initially agreed to the
steroids because you thought they would
steroids because you thought they would
they would make you make you big no it
they would make you make you big no it
was because I would have died without
was because I would have died without
him but whatever
um it's okay I got my rack back I've
um it's okay I got my rack back I've
been doing couple quick sets of bench
been doing couple quick sets of bench
now yeah speak speaking of that you know
now yeah speak speaking of that you know
remember remember I was like I did you
remember remember I was like I did you
know I do 20 reps of you know a little
know I do 20 reps of you know a little
more than
more than
plates uh and you're like whoa or you
plates uh and you're like whoa or you
were surprised yeah uh yeah yep I did it
were surprised yeah uh yeah yep I did it
I'm Sor as sore as heck today uh ouch
I'm Sor as sore as heck today uh ouch
but I did it Joseph I
but I did it Joseph I
I I did uh what I do I did a set of 20
I I did uh what I do I did a set of 20
and then a set of 15 after I'm just
and then a set of 15 after I'm just
keeping it light so I don't have to warm
keeping it light so I don't have to warm
up it's 1222 uh General it's in the
up it's 1222 uh General it's in the
voice chat General chat yeah let's get
voice chat General chat yeah let's get
this thing done so I can it's in the
this thing done so I can it's in the
voice
chat
complete was this like the C code and
complete was this like the C code and
everything yeah it should be everything
everything yeah it should be everything
she how's it a thousand
she how's it a thousand
LS you want
LS you want
lines damn
lines damn
it wait wait this implementation is like
it wait wait this implementation is like
twice wasn't it 500 when Elon Musk wrote
twice wasn't it 500 when Elon Musk wrote
it Elon Elon did doesn't have any RL
it Elon Elon did doesn't have any RL
right elon's is complete trash I'm GNA
right elon's is complete trash I'm GNA
see yours and if yours is longer than
see yours and if yours is longer than
elon's I swear to
elon's I swear to
God uh you
God uh you
know it should be it should be fairly
know it should be it should be fairly
official why are there a
official why are there a
million [ __ ]
asserts oh jeez if this is to Dev I
asserts oh jeez if this is to Dev I
think this is going to have to be dev
think this is going to have to be dev
has changed a lot since then so this
has changed a lot since then so this
demo file PR is going to be a
demo file PR is going to be a
mess the yeah that could be okay 86
mess the yeah that could be okay 86
lines here for inputs we're going to
lines here for inputs we're going to
give you these because this has this
give you these because this has this
does have the neural net bind in it this
does have the neural net bind in it this
was this was fix this was fixing it
was this was fix this was fixing it
fixing it up uh from 56 lines fine it's
fixing it up uh from 56 lines fine it's
about the same like the the lons I think
about the same like the the lons I think
yeah let's see
yeah let's see
here PO for lib last anything stupid in
here PO for lib last anything stupid in
here no there's not there's nothing
here no there's not there's nothing
stupid uh here's the initial Cod
stupid uh here's the initial Cod
[Music]
[Music]
view look this is this is possible to
view look this is this is possible to
infinite Loop this by doing nothing or
infinite Loop this by doing nothing or
does the ship kill you it is not
does the ship kill you it is not
possible to infinite Loop uh it it uh it
possible to infinite Loop uh it it uh it
100% always kills okay I because I had
100% always kills okay I because I had
to fix that in breakout before yeah
to fix that in breakout before yeah
being underneath the ship kills you
being underneath the ship kills you
period um let me like let me link this
period um let me like let me link this
here uh you don't need to have all this
here uh you don't need to have all this
stuff in this syon header but it's
stuff in this syon header but it's
fine you only need stuff that you use
fine you only need stuff that you use
this is uh uh in the general General
this is uh uh in the general General
chat these are this is the notes I took
chat these are this is the notes I took
from the first code review
from the first code review
so you can see so I can see what I told
so you can see so I can see what I told
you
you
exactly it is all fixed allocate should
exactly it is all fixed allocate should
call a n yeah most stupid cheating I fix
call a n yeah most stupid cheating I fix
that withd and height remove this one
that withd and height remove this one
one
enemy there is only one enemy the
enemy there is only one enemy the
enemies has been
enemies has been
removed or it should
be okay so yeah I gave you I'm just
be okay so yeah I gave you I'm just
still giving you a bunch of style stuff
still giving you a bunch of style stuff
which is fine you've been programming
which is fine you've been programming
for a year and a couple months or
for a year and a couple months or
whatever so it's that's fine resources
whatever so it's that's fine resources
you still didn't bother making a tile
you still didn't bother making a tile
Atlas but that's probably fine yeah you
Atlas but that's probably fine yeah you
don't need it for this remember too
don't need it for this remember too
Joseph that this was like six files or
Joseph that this was like six files or
or seven files before I I did that just
or seven files before I I did that just
as
as
practice you're practicing writing bad
practice you're practicing writing bad
code though doing that you no no that
code though doing that you no no that
was that was that was only to practice
was that was that was only to practice
so i' I of course run.
so i' I of course run.
file
file
run.py oh is
run.py oh is
this this is for compiling
this this is for compiling
uh put put the com right at the Top This
uh put put the com right at the Top This
is for this is for a uh single single
is for this is for a uh single single
file solution to uh to
file solution to uh to
immediately uh
immediately uh
push specifically the models for or the
push specifically the models for or the
weight the weights it extracts it
weight the weights it extracts it
extracts the
extracts the
weights that shouldn't be in the pr
weights that shouldn't be in the pr
though latest
though latest
yeah
yeah
I it's not it's not part of it ignore
I it's not it's not part of it ignore
that okay that's that is M that is I
that okay that's that is M that is I
thought I I thought I had something that
thought I I thought I had something that
did that that was like five lines or
did that that was like five lines or
whatever um but requires like five steps
whatever um but requires like five steps
right this requires one
right this requires one
[Music]
step this is again skip that just skip
step this is again skip that just skip
skip that you don't need it well you did
skip that you don't need it well you did
modif you did modify my file of course I
modif you did modify my file of course I
did yeah to to to work with run.py right
did yeah to to to work with run.py right
soot it each time well no you modified
soot it each time well no you modified
you put
you put
your your local path in a PR to my file
your your local path in a PR to my file
here uh yeah like I said it wasn't
here uh yeah like I said it wasn't
supposed to be in the pr like it
supposed to be in the pr like it
shouldn't be please double check
shouldn't be please double check
these um script build ocean I'll just
these um script build ocean I'll just
merge it now I'm sick of I'll tell I'll
merge it now I'm sick of I'll tell I'll
tell you I'll tell you yeah can can we
tell you I'll tell you yeah can can we
can we is there a way to to not to not
can we is there a way to to not to not
merge those those things are not needed
merge those those things are not needed
yeah you could you can edit your PR but
yeah you could you can edit your PR but
since you don't know how to do that I'm
since you don't know how to do that I'm
just going to I'll and delete it okay
just going to I'll and delete it okay
okay just merge and delete what yeah you
okay just merge and delete what yeah you
only need the actual blastar files the
only need the actual blastar files the
standard thing you don't need any of the
standard thing you don't need any of the
special there is no special handling
special there is no special handling
that's
necessary if it's any constellation the
necessary if it's any constellation the
way I handle any
way I handle any
PRS it's also in build
PRS it's also in build
ocean those those are probably in there
ocean those those are probably in there
as uh carry over from before when I had
as uh carry over from before when I had
the stupid uh practice
the stupid uh practice
format okay again do not delete that
format okay again do not delete that
delete that well you need the setup. P
line you need nothing besides the
line you need nothing besides the
standard this is all stand the standard
standard this is all stand the standard
Baseline okay I'm gonna review I'm going
Baseline okay I'm gonna review I'm going
to I'm G to review the code and then I'm
to I'm G to review the code and then I'm
going to commit my stuff so that I don't
going to commit my stuff so that I don't
screw it up in the p in the process of
screw it up in the p in the process of
merging this
mess this doesn't matter this is just
mess this doesn't matter this is just
like okay double check your PRS before
like okay double check your PRS before
you do this in the future no big deal
you do this in the future no big deal
let's see let's see the main thing I
let's see let's see the main thing I
care that's an easy fix right that's
care that's an easy fix right that's
like easy for you to obviously see what
like easy for you to obviously see what
that is the main thing I want to see is
that is the main thing I want to see is
whether uh is how your code is uh
whether uh is how your code is uh
improved right yeah let's see
improved right yeah let's see
yeah knowing that this is an existing
yeah knowing that this is an existing
project and it's always easier to
project and it's always easier to
improve on new ones than to it is to fix
improve on new ones than to it is to fix
existing stuff um
this fine this
fine okay generally pick one like these
fine okay generally pick one like these
are fine or these are fine you probably
are fine or these are fine you probably
don't need
don't need
both um I see
yeah yeah like pick one or the other
yeah yeah like pick one or the other
are fine because it's like people do it
are fine because it's like people do it
in C static conss are fine doesn't
in C static conss are fine doesn't
really matter yeah yeah I have a weird
really matter yeah yeah I have a weird
differentiation between what's up pound
differentiation between what's up pound
defin and what's a static cons but so
defin and what's a static cons but so
what this does is this when you compile
what this does is this when you compile
your code it replaces every instance of
your code it replaces every instance of
this text with this it literally does a
this text with this it literally does a
find and replace yeah okay that's why
find and replace yeah okay that's why
parentheses under around the this
parentheses under around the this
defines yeah so this defines uh this
defines yeah so this defines uh this
just is a
just is a
number and you may or may not if you
number and you may or may not if you
enable extra warnings you may get some
enable extra warnings you may get some
weird warnings about con correctness
weird warnings about con correctness
that nobody cares about but these are
that nobody cares about but these are
generally fine in fact I think I
generally fine in fact I think I
probably will prefer these going forward
probably will prefer these going forward
um just cuz like there's no reason to
um just cuz like there's no reason to
have macros at all but it doesn't matter
have macros at all but it doesn't matter
at all it doesn't
at all it doesn't
matter
matter
understood float log you added stuff to
understood float log you added stuff to
my
my
logs log
logs log
buffer log buffer free log all my
buffer log buffer free log all my
stuff
clear
what
what
what the
[ __ ] [ __ ] where
I didn't
even it makes sense that this works but
even it makes sense that this works but
what the
what the
hell wait no no it isn't this is
wrong start with
wrong start with
that why don't you like my log agur and
that why don't you like my log agur and
clear it works no it doesn't it's
clear it works no it doesn't it's
wrong why is it wrong
wrong why is it wrong
I think it's
I think it's
wrong I'm pretty sure so first of all
wrong I'm pretty sure so first of all
you see that this is a slash equals
you see that this is a slash equals
right is this
right is this
intentional yeah
intentional yeah
why I
why I
mean the the the why is this just
slash yeah I don't I I don't have a good
slash yeah I don't I I don't have a good
answer so I'm pretty sure I don't
answer so I'm pretty sure I don't
actually know the order that these
actually know the order that these
things resolve in I'm pretty sure it
things resolve in I'm pretty sure it
goes left or right so then this what
goes left or right so then this what
this does is it takes your return okay
this does is it takes your return okay
this yeah and then it divides the entire
this yeah and then it divides the entire
quantity by the
quantity by the
index yeah which is not what you want
index yeah which is not what you want
unless I'm wrong which I could be I
unless I'm wrong which I could be I
don't know how operator priority have
don't know how operator priority have
works if you do assignments like this it
works if you do assignments like this it
could be that it does this and then it
could be that it does this and then it
does this but I don't
know in general never ever ever ever do
know in general never ever ever ever do
this never just just don't ever chain
this never just just don't ever chain
like multiple like in place operators
like multiple like in place operators
like this cuz nobody knows what you're
like this cuz nobody knows what you're
doing oh don't don't don't ever ever
doing oh don't don't don't ever ever
chain in place operators like this ever
chain in place operators like this ever
so replace these with slashes this is
so replace these with slashes this is
egregious okay don't do that if that was
egregious okay don't do that if that was
there the first time then I missed
there the first time then I missed
it okay holy don't do
that okay
that okay
so so what what do you what do you say
so so what what do you what do you say
to the uh the
to the uh the
uh the fact that it works I don't know
uh the fact that it works I don't know
if it works you could be dividing your
if it works you could be dividing your
you could be downscaling all your scores
you could be downscaling all your scores
by more than you intend to for all I
by more than you intend to for all I
know the only way that this works is if
know the only way that this works is if
the operator precedence does this
the operator precedence does this
operation and then it does this
operation you see
operation you see
if it does this and then it does this
if it does this and then it does this
you're
you're
screwed I think that you're right I
screwed I think that you're right I
think it maybe does this but I don't
think it maybe does this but I don't
know well I I definitely definitely
know well I I definitely definitely
tested it to make sure it actually you
tested it to make sure it actually you
know
know
obviously you just want this anyways you
obviously you just want this anyways you
don't want the equals you just want
slash okay here fine technically this
slash okay here fine technically this
works too
I guess my thought here is why are
you oh no here here we here we what does
you oh no here here we here we what does
this do do you know here we go if if if
this do do you know here we go if if if
if if a if a and and b or or
if if a if a and and b or or
C uh so you're saying if C or if a and
C uh so you're saying if C or if a and
b what does it
b what does it
do you have no this does and the re
do you have no this does and the re
asking for the order in which it will
asking for the order in which it will
happen because is it this yes right or
happen because is it this yes right or
is it this you don't
is it this you don't
know well I mean to argue semantics you
know well I mean to argue semantics you
can tell exactly what the compiler does
can tell exactly what the compiler does
but just be safe and use parentheses
but just be safe and use parentheses
exactly
exactly
so it's the same thing it's the same
so it's the same thing it's the same
thing there's literally no reason to
thing there's literally no reason to
ever do this so don't ever do
ever do this so don't ever do
it yeah I no to I'm not I'm not I'm not
it yeah I no to I'm not I'm not I'm not
arguing with your
arguing with your
assessment just just trying to very very
assessment just just trying to very very
pathetically
pathetically
rationalize which clearly it doesn't
rationalize which clearly it doesn't
matter if it works because it's
matter if it works because it's
redundant and it's
redundant and it's
confusing I only know that because I got
confusing I only know that because I got
burned without parentheses and making a
burned without parentheses and making a
I was making a pointer to a pointer and
I was making a pointer to a pointer and
if you're like I'm trying to remember it
if you're like I'm trying to remember it
so if you there is a correct answer by
so if you there is a correct answer by
the
way these all have correct answers but I
way these all have correct answers but I
don't remember because the thing is
don't remember because the thing is
you're taught this once in like your
you're taught this once in like your
undergrad like intro CS course they
undergrad like intro CS course they
teach you the order once and then they
teach you the order once and then they
say but never do this ever because if
say but never do this ever because if
you do it you're stupid because it's
you do it you're stupid because it's
confusing I think it's kind of deeper
confusing I think it's kind of deeper
than that because I also think it
than that because I also think it
depends on which compiler you're using
depends on which compiler you're using
as well it shouldn't it really shouldn't
as well it shouldn't it really shouldn't
if it does then that's a fault of the
if it does then that's a fault of the
language specification but uh I would
language specification but uh I would
blame the fight between you know Unix
blame the fight between you know Unix
and windows but that's I don't think
and windows but that's I don't think
that's relevant but
that's relevant but
whatever have you used Ming
whatever have you used Ming
W no I have self
W no I have self
resect yeah that's apparently I don't
resect yeah that's apparently I don't
but yeah
but yeah
okay well all right this is fine
okay well all right this is fine
um so yeah technically I it's like yeah
um so yeah technically I it's like yeah
look these things have overlapping
look these things have overlapping
Fields so you could do something fancy I
Fields so you could do something fancy I
don't care this is good this is
don't care this is good this is
perfectly fine so
perfectly fine so
technically uh okay so technically
technically uh okay so technically
here what I would do in this and it
here what I would do in this and it
doesn't matter at all because you only
doesn't matter at all because you only
have one of each of these things anyways
have one of each of these things anyways
so it really really doesn't matter but
so it really really doesn't matter but
what I do in neural
what I do in neural
MMO is instead of doing some fancy ass
MMO is instead of doing some fancy ass
thing with the type system to try to
thing with the type system to try to
like make a subtype or a union type so
like make a subtype or a union type so
you can have like you know it's like uh
you can have like you know it's like uh
a player is like an enemy but it has
a player is like an enemy but it has
extra Fields like instead of doing any
extra Fields like instead of doing any
of that [ __ ] I just make like an
of that [ __ ] I just make like an
entity struct and it just has all the
entity struct and it just has all the
fields and I just use the ones that I
fields and I just use the ones that I
need that's perfectly valid they're
need that's perfectly valid they're
actual real advantages to doing that um
actual real advantages to doing that um
but this is fine I think this is fine as
but this is fine I think this is fine as
well you only have one of each right if
well you only have one of each right if
you tried to have like a big array that
you tried to have like a big array that
has both entities and players you would
has both entities and players you would
hate yourself because you would need two
hate yourself because you would need two
arrays but it's fine now this is fine
arrays but it's fine now this is fine
for now here this is
for now here this is
probably that
link
link
this go go go go go to that it's example
this go go go go go to that it's example
in breakout it's probably where I saw
in breakout it's probably where I saw
these divides equals because I'll be
these divides equals because I'll be
honest I've never used the divides
honest I've never used the divides
equals before this is a loop yeah I know
equals before this is a loop yeah I know
and then this is at the end of the loop
and then this is at the end of the loop
right it's just copy these you don't you
right it's just copy these you don't you
don't just copy these onto each other
don't just copy these onto each other
like that in fact where do I have this
like that in fact where do I have this
in one of my more recent M what did I
in one of my more recent M what did I
write
recently I mean I'm do I do it in here
recently I mean I'm do I do it in here
correctly I'm not justifying the code
correctly I'm not justifying the code
I'm uh I'm simply
I'm uh I'm simply
uh telling you where I got the uh you
uh telling you where I got the uh you
see
see
yeah I I
yeah I I
I I
I I
see those are divides by the way this is
see those are divides by the way this is
actually this is actually slower than
actually this is actually slower than
the previous one technically but it
the previous one technically but it
doesn't matter because it's called
doesn't matter because it's called
infrequently so it doesn't
infrequently so it doesn't
matter logging it doesn't
matter okay L buffer log all is fine
these are Dynamic timers
these are Dynamic timers
right yes yes those are not those are
right yes yes those are not those are
not Concepts that I was lazy and didn't
not Concepts that I was lazy and didn't
I promise fine
fine yeah you can technically do
fine yeah you can technically do
something a little fancier here but uh
something a little fancier here but uh
this is good I'm happy with just this
this is good I'm happy with just this
being done this way it's
fine yeah I agonized over
fine yeah I agonized over
that yeah you shouldn't this is
that yeah you shouldn't this is
fine you do them in the same order as
fine you do them in the same order as
you declared so that you don't
you declared so that you don't
accidentally forget one and you're
fine allocate actions free allocated
fine allocate actions free allocated
free log
free log
[Music]
[Music]
buffer
uhuh we yes this is
uhuh we yes this is
correct C reset in
correct C reset in
it do you reset on a net I'm trying to
it do you reset on a net I'm trying to
remember yeah this was this I don't
remember yeah this was this I don't
think you reset on a net right this was
think you reset on a net right this was
see the the first the first time around
see the the first the first time around
I had it a different way and uh I think
I had it a different way and uh I think
you just call I think you should just be
you just call I think you should just be
calling reset from the
calling reset from the
C you can you can just call call
C you can you can just call call
reset uh
reset uh
I'm calling it from in it which well
I'm calling it from in it which well
then but then the thing is if you call
then but then the thing is if you call
if you call reset like the API will call
if you call reset like the API will call
reset again after you initialize because
reset again after you initialize because
that's how the API works so you're just
that's how the API works so you're just
calling it twice you're calling it twice
calling it twice you're calling it twice
yeah so this is minor but this is you
yeah so this is minor but this is you
know this is redundant so just like
know this is redundant so just like
avoid stuff like that so so re so C
avoid stuff like that so so re so C
reset doesn't even have to be called an
reset doesn't even have to be called an
in it you're telling me no it gets
in it you're telling me no it gets
called external that yeah make sure it
called external that yeah make sure it
works but yeah that's fine and then
works but yeah that's fine and then
let's see
allocate calculate
Center
Center
yeah
plus I do not like this you you don't
plus I do not like this you you don't
like the center calculation so you're
like the center calculation so you're
doing this because C doesn't have
doing this because C doesn't have
multiple
multiple
returns yeah
returns yeah
right yeah but like this
right yeah but like this
is you don't want to just like use
is you don't want to just like use
pointers in place of multiple returns
pointers in place of multiple returns
like this if it's part of a struct
like this if it's part of a struct
that's fine I really
that's fine I really
don't suggest mutating primitive types
don't suggest mutating primitive types
like this um and by the way this is like
like this um and by the way this is like
completely redundant because you could
completely redundant because you could
have literally made this just be a
have literally made this just be a
method that takes uh like X size right
method that takes uh like X size right
this could have literally just been X
this could have literally just been X
and size and return X plus size over
and size and return X plus size over
two so it's completely redundant and
two so it's completely redundant and
this is sketch don't do
this is sketch don't do
this try like don't mutate Primitives if
this try like don't mutate Primitives if
you don't have
you don't have
to you can mutate strs understood
I'm not sure why this gets updated in
I'm not sure why this gets updated in
compute observations this is kind of
compute observations this is kind of
just a weird place to uh that is a weird
just a weird place to uh that is a weird
place to put it update it yeah this is
place to put it update it yeah this is
all fine though right let's see that is
all fine though right let's see that is
fine yeah all this stuff is good very
good okay if it really matters to have a
good okay if it really matters to have a
constant one something
wrong it was it was it was on the first
wrong it was it was it was on the first
code review
code review
you but you know if you commenting them
you but you know if you commenting them
out makes it makes it not work
so I don't have an explanation I don't I
so I don't have an explanation I don't I
I wish I had an explanation I wish I had
I wish I had an explanation I wish I had
good
answers but yeah that's that's sketchy
answers but yeah that's that's sketchy
that's I know something is wrong there
that's I know something is wrong there
that if that makes it not work
that if that makes it not work
that's that's
that's that's
[ __ ] all
[ __ ] all
right I I I
right I I I
realize I wish I I wish I could have
realize I wish I I wish I could have
removed them and I definitely did and
removed them and I definitely did and
then it then it didn't work right so I
then it then it didn't work right so I
removed as much as possible so it still
removed as much as possible so it still
worked what what's that what's the on
worked what what's that what's the on
line version of
line version of
this the check Collision is there are
this the check Collision is there are
you gonna ding me on my Collision well
you gonna ding me on my Collision well
what's the on line version of this
what's the on line version of this
I don't know come on you know this I
I don't know come on you know this I
don't remember dude return right
here you're you're you want if condition
here you're you're you want if condition
return true else return false is the
return true else return false is the
same as return condition yeah yeah you
same as return condition yeah yeah you
want it to be
the so it should
be this is just return this is a
be this is just return this is a
oneliner for return condition yep there
oneliner for return condition yep there
probably an inline handed it as well but
probably an inline handed it as well but
it's
it's
fine this looks like I wrote
fine this looks like I wrote
it read reading it it's a those I would
it read reading it it's a those I would
I mean the only thing I ding you on here
I mean the only thing I ding you on here
is I would change up the bacing right
is I would change up the bacing right
I'd put like each of these and then and
I'd put like each of these and then and
on the next line and then and on the
on the next line and then and on the
next like just so it's like obvious but
next like just so it's like obvious but
it's like other than that it's just the
it's like other than that it's just the
basic programming thing right for turn
basic programming thing right for turn
condition yeah it's just like silly
condition yeah it's just like silly
those things are supposed to be cleaned
those things are supposed to be cleaned
up but yeah
um take
pass this is kind of weird the way this
pass this is kind of weird the way this
is but no big
deal yeah that's fine you could
deal yeah that's fine you could
technically unest this if if you were
technically unest this if if you were
clever but it's
fine okay this is non-trivially nested
fine okay this is non-trivially nested
though very mildly non-trivially nested
though very mildly non-trivially nested
so I won't ding you on it I think more
so I won't ding you on it I think more
I think it's fine it
I think it's fine it
it okay
it okay
good because because yeah I I was trying
good because because yeah I I was trying
to trying to not un it I would cash this
to trying to not un it I would cash this
if you're like annoying
expression yeah that does look annoying
expression yeah that does look annoying
um just put the thing here and
um just put the thing here and
then not end
then not end
player stuck
don't one line your
ifs first first you want the on line now
ifs first first you want the on line now
you don't want the on
you don't want the on
line I didn't ever say I wanted the one
line I didn't ever say I wanted the one
line I think at one point I thought it
line I think at one point I thought it
was kind of okay but then I used that
was kind of okay but then I used that
was when I first started programming
was when I first started programming
stuff in C and then I've I've gone since
stuff in C and then I've I've gone since
I'm then like no it's really not it's
I'm then like no it's really not it's
way better to just use use the language
way better to just use use the language
it's intended have the bra have your
it's intended have the bra have your
braces
everywhere I think one lines are okay if
everywhere I think one lines are okay if
it's specifically an if else but if
it's specifically an if else but if
you're stacking or things like that I
you're stacking or things like that I
mean a one line just reduces line count
mean a one line just reduces line count
I think it's just better to always just
I think it's just better to always just
have the brackets with this the one
have the brackets with this the one
thing that I've been watching to get
thing that I've been watching to get
used to that I haven't been able to is
used to that I haven't been able to is
like technically you don't need this
like technically you don't need this
white space cuz the the like If This
white space cuz the the like If This
Were python right the brace is in place
Were python right the brace is in place
with the white space but I I can't get
with the white space but I I can't get
used to this either so I always have the
used to this either so I always have the
extra white space even though you really
extra white space even though you really
don't need it um I don't know I actually
don't need it um I don't know I actually
like Python's white space over braces
like Python's white space over braces
cuz like you feel the need to do this
cuz like you feel the need to do this
and you waste even more space but
and you waste even more space but
whatever it's my
whatever it's my
for readability and to to Plate uh like
for readability and to to Plate uh like
uh you know yeah but the point is right
uh you know yeah but the point is right
that you have two lines of essentially
that you have two lines of essentially
white space right which is
white space right which is
obnoxious um so I think technically the
obnoxious um so I think technically the
better thing is to have this be the
better thing is to have this be the
white space line right so you don't have
white space line right so you don't have
the extra one but I can't get used to
the extra one but I can't get used to
that either so it doesn't it doesn't
that either so it doesn't it doesn't
matter I want I wanted to have it in the
matter I want I wanted to have it in the
the way that people were used to seeing
the way that people were used to seeing
yeah yeah yeah it's fine
you'd be able to have these as reward
you'd be able to have these as reward
components if they weren't
components if they weren't
hardcoded
yep yep so these ones silly
yeah this is very
yeah this is very
silly this whole
silly this whole
thing is very
thing is very
silly the center
silly the center
Coke like making
Coke like making
these just making these on initialized
these just making these on initialized
floats and then it's
silly yeah
yeah this is too big of a condition you
yeah this is too big of a condition you
should like break this
should like break this
out uh let's see
out uh let's see
here
326 round
326 round
attacking hold active through this still
attacking hold active through this still
this why than
this why than
get rid of get rid of which 330 this
get rid of get rid of which 330 this
crazy condition needs to be broken
crazy condition needs to be broken
up how would you break it
up how would you break it
up F ABS less than
speed okay this is like is close and
speed okay this is like is close and
then this one
then this one
[Music]
is
is
this I mean you could leave this one and
this I mean you could leave this one and
just put this one as close would be a
just put this one as close would be a
reasonable l
reasonable l
and then what's this one oh yeah
and then what's this one oh yeah
enemy and then whatever the hell this is
enemy and then whatever the hell this is
supposed to be semantic
supposed to be semantic
like
like
uh yeah enemy close or something I don't
uh yeah enemy close or something I don't
know underne under underneath enemy
know underne under underneath enemy
under yeah it's like yeah I would do I
under yeah it's like yeah I would do I
would just the big the big ones like
would just the big the big ones like
this I would just break
this I would just break
out yeah so this this is yeah this is if
out yeah so this this is yeah this is if
you're yeah yeah basically yourself for
you're yeah yeah basically yourself for
that as well if you come back to your if
that as well if you come back to your if
you're under the
you're under the
basically
basically
mhm I can figure it out in 30 seconds
mhm I can figure it out in 30 seconds
I'm sure it's just like it's
easier moves the enemy
bullet e
that's for animation of explosion yeah I
that's for animation of explosion yeah I
can tell which is a little weird that
can tell which is a little weird that
here but not
bad
e e
yeah like one thing you could do here to
yeah like one thing you could do here to
avoid all these messy calls which it you
avoid all these messy calls which it you
don't you could or you could not right
don't you could or you could not right
it's kind of optional is you could just
it's kind of optional is you could just
like you know Source text like texture X
like you know Source text like texture X
Y you set texture equal this x equal
Y you set texture equal this x equal
this y equals this
this y equals this
whatever and then you do the draw call
whatever and then you do the draw call
at the bottom there's stuff like that
at the bottom there's stuff like that
you can do but this is
you can do but this is
reasonable so I mean there's some things
reasonable so I mean there's some things
in here I could pick on but overall
in here I could pick on but overall
like you are definitely improving over
like you are definitely improving over
this just keep trying to keep stuff
this just keep trying to keep stuff
simple right don't try to like get
simple right don't try to like get
fancier and fancier the more stuff you
fancier and fancier the more stuff you
Dev just try to like try to make simple
Dev just try to like try to make simple
code better um and I think like if you
code better um and I think like if you
just keep doing a few more M's like this
just keep doing a few more M's like this
you're honestly going to be I mean
you're honestly going to be I mean
you're going to be in the place where
you're going to be in the place where
you're like writing better code than
you're like writing better code than
your average Fang engineer very very
your average Fang engineer very very
quickly because I can see you're
quickly because I can see you're
improving
improving
the Joseph Playbook yeah yeah uh that's
the Joseph Playbook yeah yeah uh that's
not hard by the way dang
not hard by the way dang
right yeah but the thing is that they do
right yeah but the thing is that they do
get stuff done right they get stuff done
get stuff done right they get stuff done
in a very long and convoluted way but
in a very long and convoluted way but
they eventually get stuff done
I don't know if I would say it's not
I don't know if I would say it's not
hard either honestly link key like yeah
hard either honestly link key like yeah
like your average fanging Jer sucks but
like your average fanging Jer sucks but
like writing good code is genuinely
like writing good code is genuinely
really really
really really
hard like something that takes many
hard like something that takes many
years of
years of
experience I think a lot of it is well
experience I think a lot of it is well
first of all the pressure to
first of all the pressure to
write WR code just like not fast code
write WR code just like not fast code
but code write it fast uh in a lot of
but code write it fast uh in a lot of
thing industry but they work hor
thing industry but they work hor
realistically like like they so [ __ ]
realistically like like they so [ __ ]
like you gotta be kidding me like I do
like you gotta be kidding me like I do
work at I do work 50 times faster than
work at I do work 50 times faster than
anyone it does in like in Fang it's
anyone it does in like in Fang it's
their processes are so bloated and so
their processes are so bloated and so
slow there's no pressure to do anything
slow there's no pressure to do anything
fast I'd say it's the opposite it's just
fast I'd say it's the opposite it's just
that coding like programming is taught
that coding like programming is taught
horribly it's horribly horri taught and
horribly it's horribly horri taught and
then as soon as you have one bad
then as soon as you have one bad
engineer in your group right it's like
engineer in your group right it's like
it's all bad yeah it takes one to solely
it's all bad yeah it takes one to solely
the whole the whole batch yeah and then
the whole the whole batch yeah and then
it's like and then all the Fang
it's like and then all the Fang
practices start to make sense when you
practices start to make sense when you
think of it that way right because they
think of it that way right because they
put all their code in a box and like
put all their code in a box and like
you're not responsible for reading
you're not responsible for reading
anybody's code in that box it just has
anybody's code in that box it just has
to work in the box that they've given it
to work in the box that they've given it
to you so it doesn't matter if it's
to you so it doesn't matter if it's
50,000 lines of garage as long as it
50,000 lines of garage as long as it
follows the API and the test and
follows the API and the test and
everything but like the thing is that's
everything but like the thing is that's
a really stupid way to write code
a really stupid way to write code
because now your thing runs 5,000 times
because now your thing runs 5,000 times
too slow and when you go to read it to
too slow and when you go to read it to
see how to make it better you can't and
see how to make it better you can't and
then you just have to throw the whole
then you just have to throw the whole
thing away and rewrite it so like yeah
thing away and rewrite it so like yeah
it's just a whole mess and like yeah
it's just a whole mess and like yeah
okay it works for these big
okay it works for these big
organizations but I'm not going to hold
organizations but I'm not going to hold
that up on a pedestal because you know I
that up on a pedestal because you know I
can do if I can do more than a
can do if I can do more than a
medium-sized team just On My Own by not
medium-sized team just On My Own by not
doing stuff that way then I'm going to
doing stuff that way then I'm going to
choose that every single time yeah so
choose that every single time yeah so
you're talking about writing code verus
you're talking about writing code verus
designing code
designing code
well I wouldn't even go that far I
well I wouldn't even go that far I
would mer this now um should I merge
would mer this now um should I merge
this now and then I some small fixes let
this now and then I some small fixes let
me let me c let me let me just let me
me let me c let me let me just let me
clean up this let me get rid of this
clean up this let me get rid of this
run.py and everything yeah okay good
run.py and everything yeah okay good
that at least saves me some time yeah
that at least saves me some time yeah
let me get rid of all the extra um
let me get rid of all the extra um
that's good
that's good
though all right thanks Joseph yeah no I
though all right thanks Joseph yeah no I
mean like you're definitely improving
mean like you're definitely improving
I'm going to be you know it's you're
I'm going to be you know it's you're
improving you're improving you're
improving you're improving you're
improving at a very good rate as well I
improving at a very good rate as well I
mean look if I don't have an answer to a
mean look if I don't have an answer to a
question like that's on me well look
question like that's on me well look
it's just like here's the thing right as
it's just like here's the thing right as
you get better there's a really strong
you get better there's a really strong
temptation to like keep finding clever
temptation to like keep finding clever
things right um but like the solution is
things right um but like the solution is
not clever things for the most part
not clever things for the most part
right the solution is getting better at
right the solution is getting better at
doing stuff in the simplest way possible
doing stuff in the simplest way possible
like you The Simple Solution is best you
like you The Simple Solution is best you
can do clever things for the purposes of
can do clever things for the purposes of
learning and sometimes that is important
learning and sometimes that is important
and you need to do the stupid thing to
and you need to do the stupid thing to
see why it's stupid right like I had
see why it's stupid right like I had
this whole like two week binge in Pota
this whole like two week binge in Pota
last year where I tried to write like
last year where I tried to write like
struct based procedural code in Python
struct based procedural code in Python
and The Language just really is not
and The Language just really is not
designed for that right and like I wrote
designed for that right and like I wrote
like a really stupid article on it and I
like a really stupid article on it and I
mean it wasn't terrible terrible but
mean it wasn't terrible terrible but
like it's just kind of silly um and then
like it's just kind of silly um and then
you do the exact same thing and see and
you do the exact same thing and see and
it works perfectly
it works perfectly
and like I needed to do that in Python
and like I needed to do that in Python
to see why it didn't work and to
to see why it didn't work and to
appreciate how nice it isn't see um but
appreciate how nice it isn't see um but
like generally the actual code that you
like generally the actual code that you
write at the end of the day is just
write at the end of the day is just
going to be something very very short
going to be something very very short
and very simple and has minimal tricks
and very simple and has minimal tricks
and bells and whistles on it um and this
and bells and whistles on it um and this
is how you get good work done quickly
is how you get good work done quickly
and it's like at the same time you get
and it's like at the same time you get
everything there it's like you have your
everything there it's like you have your
take and eat it too brand new
take and eat it too brand new
programmers can read and follow exactly
programmers can read and follow exactly
what you've done right and you have very
what you've done right and you have very
short and easy to maintain code and it's
short and easy to maintain code and it's
easy to add stuff on because you haven't
easy to add stuff on because you haven't
done something super dumb and convoluted
done something super dumb and convoluted
right and you just have less code to
right and you just have less code to
deal with right it's just it's good all
deal with right it's just it's good all
around
yep
okay yeah I was telling bet earlier uh
okay yeah I was telling bet earlier uh
and here it just goes to show that yes
and here it just goes to show that yes
he is learning at a pretty good
he is learning at a pretty good
uh because I told him when I get to the
uh because I told him when I get to the
point I'm going to need him to explain
point I'm going to need him to explain
to me like the the scon and interfacing
to me like the the scon and interfacing
with puffer lib because that's that's
with puffer lib because that's that's
kind of Beyond me and then pushing
kind of Beyond me and then pushing
everything into one giant struct so it
everything into one giant struct so it
passes everything to python you're
passes everything to python you're
overthinking it that's all you you'll
overthinking it that's all you you'll
see well you have to understand the
see well you have to understand the
thing is
thing is
like if you're used to python or higher
like if you're used to python or higher
level languages and you don't understand
level languages and you don't understand
the difference between a value and a
the difference between a value and a
reference and you don't understand what
reference and you don't understand what
a pointer is fundamentally and how
a pointer is fundamentally and how
memory is allocated like then yes stuff
memory is allocated like then yes stuff
is
is
confusing as soon as you think of it
confusing as soon as you think of it
that like that way though it's very
that like that way though it's very
simple yeah that's where I'm starting to
simple yeah that's where I'm starting to
get I guess to me it just kind of feels
get I guess to me it just kind of feels
counter intuitive to just like I
counter intuitive to just like I
understand the need for it to push all
understand the need for it to push all
the observation agents actions truncated
the observation agents actions truncated
terminals into one giant struct so it
terminals into one giant struct so it
passes it all in you know one motion if
passes it all in you know one motion if
you want to call it that it just it's
you want to call it that it just it's
not passing it linky it's like it's not
not passing it linky it's like it's not
passing it's just the address it's just
passing it's just the address it's just
like hey this is where we're storing
like hey this is where we're storing
observ environments right here this is
observ environments right here this is
where we're storing the observations for
where we're storing the observations for
all the environments and I'm just going
all the environments and I'm just going
to tell each environment where they can
to tell each environment where they can
store their chunk of the observations
store their chunk of the observations
that's all you're doing yeah you have it
that's all you're doing yeah you have it
you have it continuous chunk of memory
you have it continuous chunk of memory
and you allocate those to individual
and you allocate those to individual
purposes just like an arena would I get
purposes just like an arena would I get
that it just to me that's all feels
that it just to me that's all feels
counterintuitive it only feels
counterintuitive it only feels
counterintuitive because programming is
counterintuitive because programming is
taught really weirdly and a lot of the
taught really weirdly and a lot of the
references you see around are weird like
references you see around are weird like
it takes almost no time for this stuff
it takes almost no time for this stuff
to be very very simple and like provably
to be very very simple and like provably
like the code as you read it is very
like the code as you read it is very
simple as well um
simple as well um
so linky what it allows your it allows
so linky what it allows your it allows
python to to
python to to
modify the the the value uh at shared
modify the the the value uh at shared
mutable memory is what it isly shared
mutable memory is what it isly shared
mutable memory exactly what I'm trying
mutable memory exactly what I'm trying
to describe
to describe
correct
yeah yeah so I'll need that I actually
yeah yeah so I'll need that I actually
did do a good thing and I did leave like
did do a good thing and I did leave like
all the the logging struct in the
all the the logging struct in the
logging method I just have to actually
logging method I just have to actually
like set up how my [ __ ] generates to the
like set up how my [ __ ] generates to the
one solid
one solid
struct but I'm certain I'll have
struct but I'm certain I'll have
questions well you know where to find me
questions well you know where to find me
that is the idea that's that's what I
that is the idea that's that's what I
was
was
saying it hurts to say this bet at some
saying it hurts to say this bet at some
point I will need your help oh well it's
point I will need your help oh well it's
fine I don't
I need lots of help all
right now we
right now we
can remove all the stuff we don't
can remove all the stuff we don't
want just like
everything goodbye
Oops why does everybody love Lua
Oops why does everybody love Lua
uh it's just a common scripting language
uh it's just a common scripting language
used in games so a lot of people that
used in games so a lot of people that
mod games end up picking it up and then
mod games end up picking it up and then
they just use it they picked it
they just use it they picked it
up well a lot of people use it for like
up well a lot of people use it for like
plug in like neovim is a prime example
plug in like neovim is a prime example
they use Lua for neovim yeah it's just a
they use Lua for neovim yeah it's just a
scripting language it's a fine scripting
scripting language it's a fine scripting
language it's just a scripting
language it's just a scripting
language I mean anything is a fine
language I mean anything is a fine
scripting language right if you're just
scripting language right if you're just
writing like relatively short scripts
writing like relatively short scripts
it's
it's
fine oh yeah say that to my let's let's
fine oh yeah say that to my let's let's
scroll down in this real quick because
scroll down in this real quick because
I'm writing a plugin for
I'm writing a plugin for
micro uh file on this has changed
micro uh file on this has changed
no
um yeah say that to my thousand lines of
um yeah say that to my thousand lines of
implementing an LSP server
implementing an LSP server
into an
into an
editor I don't think you should be
editor I don't think you should be
implementing something in l
implementing something in l
you might buy something in L but if
you might buy something in L but if
you're implementing that's too much I
you're implementing that's too much I
should be saying an LSP server that
should be saying an LSP server that
exists and binding to the LSP server
exists and binding to the LSP server
which I think uses
which I think uses
go um through so the LSP uses go micro
go um through so the LSP uses go micro
for plug-in support uses ala so I'm
for plug-in support uses ala so I'm
having to use Lua to attach to
having to use Lua to attach to
go use
go use
LSP there you
LSP there you
yeah I have
yeah I have
done I have done an impressive amount
done I have done an impressive amount
without an LSP but I would love to not
without an LSP but I would love to not
have to GP for all of my struct and
have to GP for all of my struct and
method definition Comes A Time In in a
method definition Comes A Time In in a
in a man's life when when he must make a
in a man's life when when he must make a
choice between LSP and no LSP yeah use
choice between LSP and no LSP yeah use
it yeah exactly but here here's the
it yeah exactly but here here's the
funny thing like if you're writing
funny thing like if you're writing
python the LSP kind of sucks anyways so
python the LSP kind of sucks anyways so
like honestly super Maven is just as
like honestly super Maven is just as
good
good
no yeah but see that's the thing super
no yeah but see that's the thing super
Maven probably still uses an LSP because
Maven probably still uses an LSP because
co-pilot uses an LSP right does
co-pilot uses an LSP right does
it yes it does yeah but if it uses uses
it yes it does yeah but if it uses uses
it on their servers and I don't have to
it on their servers and I don't have to
configure it sounds sounds like it
configure it sounds sounds like it
doesn't matter if Joseph is like does it
doesn't matter if Joseph is like does it
right you don't see it because it's
right you don't see it because it's
already it's the plugin is built what
already it's the plugin is built what
I'm doing it makes enough mistakes that
I'm doing it makes enough mistakes that
I question whether it has one because it
I question whether it has one because it
makes
only I don't want it for autocomplete or
only I don't want it for autocomplete or
anything like that I want it only so I I
anything like that I want it only so I I
can like fuzzy find my definitions
can like fuzzy find my definitions
right you can just I think you can just
right you can just I think you can just
do that in them anyways without having
do that in them anyways without having
to I'm pretty sure you can just yeah I'm
to I'm pretty sure you can just yeah I'm
not I'm not using them though I'm using
not I'm not using them though I'm using
micro he's using micro inexplicable
micro he's using micro inexplicable
[Music]
contrl C control V and was like nope no
contrl C control V and was like nope no
you
can't what do you mean I can't contrl C
can't what do you mean I can't contrl C
control V nothing that's like I
control V nothing that's like I
literally can do I can do macros and
literally can do I can do macros and
everything it doesn't matter um matters
everything it doesn't matter um matters
I can use use doesn't matter oh it's
I can use use doesn't matter oh it's
it's beautiful I've gotten all of my
it's beautiful I've gotten all of my
syntax highlighting to colors I
syntax highlighting to colors I
like um
like um
I will say I should just bite the bullet
I will say I should just bite the bullet
and move to Vim
and move to Vim
but meanwhile buffer buffer whb slowness
but meanwhile buffer buffer whb slowness
has been divided by three pretty much
has been divided by three pretty much
yes how did you manage that I am
yes how did you manage that I am
curious
curious
LP listen so one of my side
projects is going to get stomped on I I
projects is going to get stomped on I I
don't really care it would be nice to
don't really care it would be nice to
have I'm still using micro without it
have I'm still using micro without it
and I've done I've made a lot of
and I've done I've made a lot of
progress it would be nice to have
progress it would be nice to have
though yeah if if the stopping has a lot
though yeah if if the stopping has a lot
to do with things I've said before like
to do with things I've said before like
in
passing maybe maybe it does maybe it
passing maybe maybe it does maybe it
doesn't I'm not
doesn't I'm not
sure it's stopping you said it's gonna
sure it's stopping you said it's gonna
be stomped on your project oh
be stomped on your project oh
stomping wise
stomping wise
to why is it that the Mis Loop here is
to why is it that the Mis Loop here is
so long but if I do
puffer be right
back m is
lower H it's probably just because the
lower H it's probably just because the
update EPO is
update EPO is
fine all right I mean that's pretty
fine all right I mean that's pretty
solid uh where we can reduce copy
solid uh where we can reduce copy
I don't think there's any way to reduce
I don't think there's any way to reduce
copy
copy
overhead we've already done pretty well
so what's your schedule looking like in
so what's your schedule looking like in
the upcoming days
the upcoming days
Joe I don't have
Joe I don't have
one just coding and streaming pretty
one just coding and streaming pretty
much I just do that and then ad hoc
much I just do that and then ad hoc
whatever meetings I need to take
whatever meetings I need to take
whatever client stuff I need to
whatever client stuff I need to
do that's fair um if at some point you
do that's fair um if at some point you
could do a one onone with me
could do a one onone with me
I'd appreciate
I'd appreciate
that uh no not an m just
that uh no not an m just
conversationally sure is this about the
conversationally sure is this about the
Pokemon stuff is this pressing or is
Pokemon stuff is this pressing or is
this like uh it's not pressing just I
this like uh it's not pressing just I
guess like in a week or so if you could
guess like in a week or so if you could
do a oneon-one just so we're not like in
do a oneon-one just so we're not like in
DC or anything yeah sure no
wor
wor
um yeah I'll send you a DM on on what
um yeah I'll send you a DM on on what
it's about here
it's about here
in I don't know like half an hour
in I don't know like half an hour
okay not incredibly pressing but would
okay not incredibly pressing but would
be nice to just have a conversation
be nice to just have a conversation
clear some of my thoughts and
opinions I mean you think you know I'm
opinions I mean you think you know I'm
pretty much always
pretty much always
around I yeah I just [ __ ] occasionally
around I yeah I just [ __ ] occasionally
but that's about
but that's about
it yeah I get that I just don't want to
it yeah I get that I just don't want to
like if you got clients or anything
like if you got clients or anything
coming up I'm not well it's there's
coming up I'm not well it's there's
always GNA be stuff because like
always GNA be stuff because like
whenever I like I just I don't do well
whenever I like I just I don't do well
when I've got nothing to do so like I
when I've got nothing to do so like I
find something like this to spend all
find something like this to spend all
day on right I feel it but like
day on right I feel it but like
occasionally stuff like this happens
occasionally stuff like this happens
where I mixed up 3x faster so that's
where I mixed up 3x faster so that's
pretty
pretty
cool yeah bet was saying he wasn't sure
cool yeah bet was saying he wasn't sure
exactly what you did I did see your post
exactly what you did I did see your post
earlier you had was that that puffer
earlier you had was that that puffer
snake at 5 million steps a second uh
snake at 5 million steps a second uh
yeah that's that's like the best
yeah that's that's like the best
possible case but it does exist
possible case but it does exist
so I mean even even in the best possible
so I mean even even in the best possible
case 5 million is like
obsc
obsc
um and then this is just I'm not I'm not
um and then this is just I'm not I'm not
fishing for information I'm genuinely
fishing for information I'm genuinely
curious about your view point on
curious about your view point on
this the moving direction of puffer Li
this the moving direction of puffer Li
to me it feels like you're more
to me it feels like you're more
supporting SE environments right now do
supporting SE environments right now do
you have plans in the future to start
you have plans in the future to start
moving some of the uh some of your files
moving some of the uh some of your files
in puffer lib and
in puffer lib and
Toc not really because the more stuff I
Toc not really because the more stuff I
move into C the more I'm going to just
move into C the more I'm going to just
piss people and users off so I'm only
piss people and users off so I'm only
going to move stuff into C when there's
going to move stuff into C when there's
like a a clear clear performance reason
like a a clear clear performance reason
to do it I'm not just going to move all
to do it I'm not just going to move all
the learning code into C for the sake of
the learning code into C for the sake of
it having it in C right if I could get
it having it in C right if I could get
10 million steps per second by moving it
10 million steps per second by moving it
into SE then yeah I would do it but I
into SE then yeah I would do it but I
don't think I can I don't think that's a
don't think I can I don't think that's a
thing that can
thing that can
happen yeah I was
happen yeah I was
just yeah potentially thinking
just yeah potentially thinking
because
because
um kind of along the line of what that
um kind of along the line of what that
guy was saying but I I'll be honest I
guy was saying but I I'll be honest I
still don't know how he's getting his
still don't know how he's getting his
deadlock issue I think like maybe he's
deadlock issue I think like maybe he's
doing something
doing something
wrong uh the same like whatever issue
wrong uh the same like whatever issue
it's not like moving it to C is not
it's not like moving it to C is not
likely to fix anything like that or make
likely to fix anything like that or make
it any
it any
easier I just mean in the sense of like
easier I just mean in the sense of like
when I think about it you're handling
when I think about it you're handling
vectorization
vectorization
for um python within vector. piy but
for um python within vector. piy but
then the vectorization is essentially
then the vectorization is essentially
happening on its own within the C
happening on its own within the C
environment um compliment
environment um compliment
processes okay I just wasn't sure if
processes okay I just wasn't sure if
there were any plans in the works to
there were any plans in the works to
like maybe work on moving things to more
like maybe work on moving things to more
of a Smo threading and and keeping it
of a Smo threading and and keeping it
out of like python multiprocessing so
out of like python multiprocessing so
the issue is that if you do that then
the issue is that if you do that then
for python environment you have to go
for python environment you have to go
from python to C to python which is kind
from python to C to python which is kind
of
of
gross yeah I agree so like do that if I
gross yeah I agree so like do that if I
were to do that it would be ocean M
were to do that it would be ocean M
would work directly with the
would work directly with the
vectorization without going back to
vectorization without going back to
Python and then that would hurt
Python and then that would hurt
compatibility with other stuff so like
compatibility with other stuff so like
again there' have to be a very very good
again there' have to be a very very good
reason to do that and I don't really
reason to do that and I don't really
foresee there being a good reason
foresee there being a good reason
because if anything puffer is going to
because if anything puffer is going to
move in the opposite direction we're
move in the opposite direction we're
like these perf improvements I'm doing
like these perf improvements I'm doing
now are cool and they're like really
now are cool and they're like really
nice for running quick experiments but
nice for running quick experiments but
like longer term puffer is going to move
like longer term puffer is going to move
to more complex environments where these
to more complex environments where these
perfect enhancements matter less and
perfect enhancements matter less and
really this perf is just used for uh
really this perf is just used for uh
fast experimentation on methods which
fast experimentation on methods which
are then going to be thrown on slower
are then going to be thrown on slower
stuff so there's not really a hug
stuff so there's not really a hug
incentive to do it really the this is
incentive to do it really the this is
more like I spend a little bit of time
more like I spend a little bit of time
once in a while puffer has the highest
once in a while puffer has the highest
per of any RL Library by a mile haaha
per of any RL Library by a mile haaha
and uh then we get back to real work
and uh then we get back to real work
yeah uh that kind of makes sense I was
yeah uh that kind of makes sense I was
just wondering because and I know you
just wondering because and I know you
need puffet and all that to compile
need puffet and all that to compile
sorry to compile into web assembly and
sorry to compile into web assembly and
such so I wasn't sure if that was
such so I wasn't sure if that was
just to make things happen to make it
just to make things happen to make it
work on your website or if you were
work on your website or if you were
slowly starting to like my great no
slowly starting to like my great no
that's for that's just for the website
that's for that's just for the website
demos like look if pie torch had like a
demos like look if pie torch had like a
really lightweight awesome C back end
really lightweight awesome C back end
then I would just use that but it
then I would just use that but it
doesn't it has a really heavy and
doesn't it has a really heavy and
obnoxious C++ back end so it was just
obnoxious C++ back end so it was just
easier to make
easier to make
puffet and it's kind of funny I see I
puffet and it's kind of funny I see I
just think it's kind of funny right to
just think it's kind of funny right to
be able to like yeah here's 500 lines it
be able to like yeah here's 500 lines it
does like most of what you'd want out of
does like most of what you'd want out of
high torch and it runs on
high torch and it runs on
web yeah here's the the funny thing when
web yeah here's the the funny thing when
because I talk with my older brother
because I talk with my older brother
often and he is a C++ Dev MH um and
often and he is a C++ Dev MH um and
he firmly believes that I am doing
he firmly believes that I am doing
myself a disservice and that c is way
myself a disservice and that c is way
harder to learn than C++ that's and I'm
harder to learn than C++ that's and I'm
at I agree unlike C is like simple C++
at I agree unlike C is like simple C++
there's way less BS and crap to have to
there's way less BS and crap to have to
wonder if I'm using yeah um and then
wonder if I'm using yeah um and then
read his code and I'm like it's a
read his code and I'm like it's a
totally different
totally different
language
yeah I don't really have much desire to
yeah I don't really have much desire to
interact with idiomatic C++ at
interact with idiomatic C++ at
all the only C++ that I'm comfortable
all the only C++ that I'm comfortable
with interacting with is I do use high
with interacting with is I do use high
bind to
bind to
compile
compile
sometimes to compile bindings for python
sometimes to compile bindings for python
directly from SU so I can just import
directly from SU so I can just import
like whatever file it spits out into C
like whatever file it spits out into C
it's pretty much scyon but as a
it's pretty much scyon but as a
binary pbind is usually yeah
binary pbind is usually yeah
C++ it's C++ but you can use it as a
C++ it's C++ but you can use it as a
wrapper you can
wrapper you can
compile as a wrapper from c yeah I
compile as a wrapper from c yeah I
haven't looked at that honestly because
haven't looked at that honestly because
scon there may be a not there may be a
scon there may be a not there may be a
reason to replace scon at some point but
reason to replace scon at some point but
um
um
that's uh the difference
that's uh the difference
is so Sion you have to redefine all of
is so Sion you have to redefine all of
your function so you go like python step
your function so you go like python step
takes s step and then s steps takes
takes s step and then s steps takes
cstep whereas pbind you're just
cstep whereas pbind you're just
compiling a DOT death of whatever your
compiling a DOT death of whatever your
thing is I understand how it works it's
thing is I understand how it works it's
but like there has to be a bunch of
but like there has to be a bunch of
usability testing and stuff to see how
usability testing and stuff to see how
it would feel to use it for for this
it would feel to use it for for this
versus
versus
syon oh I mean I've got a demo if you
syon oh I mean I've got a demo if you
want to I have it on a private repo when
want to I have it on a private repo when
I was helping my brother because that's
I was helping my brother because that's
the only reason I used
the only reason I used
pbind so and maybe I'm just saying to me
pbind so and maybe I'm just saying to me
it's a little more convenient because it
it's a little more convenient because it
was my first exposure to like C and
was my first exposure to like C and
python versus like realize that the
python versus like realize that the
other thing is that um you don't get
other thing is that um you don't get
memory views which are syon gives you
memory views which are syon gives you
are really nice you don't get memory
are really nice you don't get memory
views and then you don't get the outer
views and then you don't get the outer
loop uh yeah you don't get the outer
loop uh yeah you don't get the outer
loop that you would like that you get in
loop that you would like that you get in
scon at the moment you have to do that
scon at the moment you have to do that
in C as well convenient when you start
in C as well convenient when you start
yeah but we're not starting from C++ and
yeah but we're not starting from C++ and
we have no plan we have no plans
we have no plan we have no plans
too oh well yeah no what I mean is that
too oh well yeah no what I mean is that
even I was responding to
even I was responding to
that uh you can see on the screen
that uh you can see on the screen
sorry I was outside you're
good I think I'm going to Port this
good I think I'm going to Port this
network
network
too I think we're going to Port this
too I think we're going to Port this
network
we're going to put this network
we're going to put this network
to
to
snake so we can test
it just for
it just for
perf have you actually I can answer my
perf have you actually I can answer my
question
you do
indeed uh you've uh
indeed uh you've uh
convolutional puffet embedding one h
convolutional puffet embedding one h
as
as
well I see
well I see
that it's like it's pretty decent for
that it's like it's pretty decent for
what it
is it looks really dense I'm not gonna
is it looks really dense I'm not gonna
lie well yeah obviously it's the
lie well yeah obviously it's the
implementation of a
conf yeah it's like the most obnoxious
conf yeah it's like the most obnoxious
possible thing to
possible thing to
implement no seriously I [ __ ] hated
implement no seriously I [ __ ] hated
implementing that thing it sucked
implementing that thing it sucked
those are such a pain to implement
those are such a pain to implement
correctly
correctly
I I will say I I've had like 10 times as
I I will say I I've had like 10 times as
well over the years and it just they
well over the years and it just they
just always suck because it's like
just always suck because it's like
they're really simple and you feel
they're really simple and you feel
stupid for not getting them right but
stupid for not getting them right but
they're just like really fidly getting
they're just like really fidly getting
the
the
indexing well not only that
indexing well not only that
but I and maybe I still don't know the
but I and maybe I still don't know the
full implications of this but like
full implications of this but like
actually understanding abstraction and
actually understanding abstraction and
things like that it
things like that it
has blown my
has blown my
mind the the different ways I have to
mind the the different ways I have to
think about like I've made my
think about like I've made my
environment in Python it does wonderful
environment in Python it does wonderful
I can understand it moving it to see is
I can understand it moving it to see is
an
an
entirely different ball game like you
entirely different ball game like you
have to just think about it entirely
have to just think about it entirely
different yeah it's easier when you
different yeah it's easier when you
start and see though because what
start and see though because what
happens with the python is you get it
happens with the python is you get it
done and then it's slow and then you're
done and then it's slow and then you're
screwed because there's no way to make
screwed because there's no way to make
it fast I got
it fast I got
25,000 steps a second and that is
25,000 steps a second and that is
without like doing some optimization or
without like doing some optimization or
anything yeah but what do you want that
anything yeah but what do you want that
that I could get you know I could get it
that I could get you know I could get it
to 2.5
to 2.5
million that's exactly what I'm saying
million that's exactly what I'm saying
that's when I was like maybe it's worth
that's when I was like maybe it's worth
me looking at writing this in C and
me looking at writing this in C and
seeing what seeing what I can do without
seeing what seeing what I can do without
optimizing it and c and comparing it
optimizing it and c and comparing it
doesn't have to be like just C I'm
doesn't have to be like just C I'm
writing is not optimized C at
writing is not optimized C at
all yeah no i' I've gone through I've I
all yeah no i' I've gone through I've I
actually do go through a lot
actually do go through a lot
of um I use ocean as my examples for C
of um I use ocean as my examples for C
I'm not going to lie oh but 40%
Miss so if we took off
Miss so if we took off
40% then maybe it's
40% then maybe it's
close o that also reminds me did you
ever manage to find your banner for
ever manage to find your banner for
puffer
Li uh I have the banner I the 3D model I
Li uh I have the banner I the 3D model I
don't have
don't have
yet I probably have to send an email to
yet I probably have to send an email to
get that to be
honest I want to include and maybe the
honest I want to include and maybe the
play is I just like steal your template
play is I just like steal your template
and well I have the banner I mean I mean
and well I have the banner I mean I mean
oh Banner Banner no I have I have to get
oh Banner Banner no I have I have to get
a banner made we'll see oh no I mean um
a banner made we'll see oh no I mean um
for your read
for your read
me so I'm not sure if you're in Discord
me so I'm not sure if you're in Discord
chat that the one the file on the read
chat that the one the file on the read
me you can just grab it from there yeah
me you can just grab it from there yeah
so I have a repo that named puffer mini
so I have a repo that named puffer mini
I apologize I'm using the puffer
I apologize I'm using the puffer
namesake but I want to include like the
namesake but I want to include like the
puffer assets and all that on it and
puffer assets and all that on it and
link it actually to puffer lib so like
link it actually to puffer lib so like
if if people don't like the small form
if if people don't like the small form
factor of puffer lib or the puffer mini
factor of puffer lib or the puffer mini
they'll still be connected to puffer lib
they'll still be connected to puffer lib
yeah so I like a powered by puffer
yeah so I like a powered by puffer
Banner or whatever you can just like
Banner or whatever you can just like
write that and put the puffer or
write that and put the puffer or
whatever that's
whatever that's
fine it's fine it's fine to use that
fine it's fine it's fine to use that
projects connected to puffer literally
projects connected to puffer literally
all the assets on the website if you
all the assets on the website if you
just like click on them and get Source
just like click on them and get Source
it'll link you because they're all just
it'll link you because they're all just
hosted from the GitHub um yeah Weston uh
hosted from the GitHub um yeah Weston uh
now that I've learned discreet math is
now that I've learned discreet math is
this true nope not at all not not that
this true nope not at all not not that
I've seen whatever maybe I haven't
I've seen whatever maybe I haven't
learned enough math um but if they're
learned enough math um but if they're
talking about like if these are a lot of
talking about like if these are a lot of
the math people are functional
the math people are functional
programming Bros and that code just
programming Bros and that code just
sucks ass uh it's just another it's
sucks ass uh it's just another it's
another Dogma functional a Dogma object
another Dogma functional a Dogma object
Orient is a
Orient is a
Dogma procedural is kind of the lack of
Dogma procedural is kind of the lack of
a Dogma where you just write simple [ __ ]
a Dogma where you just write simple [ __ ]
without any like coherent structure or
without any like coherent structure or
like presupposed
mind but yeah so I have a repo named
mind but yeah so I have a repo named
puffer mini and it's personally what I
puffer mini and it's personally what I
use because puffer Li just has too much
use because puffer Li just has too much
crap in it and I don't need a million
crap in it and I don't need a million
environments so
well it's going to get smaller
well it's going to get smaller
but hey I would appreciate that I
but hey I would appreciate that I
wouldn't be so against like cloning
wouldn't be so against like cloning
popper lib but it just oh the Clone I
popper lib but it just oh the Clone I
can make faster I just haven't bothered
can make faster I just haven't bothered
to prune that I should do it I can make
to prune that I should do it I can make
the Clone take I can make the Clone take
the Clone take I can make the Clone take
two seconds I just haven't bothered to
two seconds I just haven't bothered to
do
do
that yeah the cloning and then really
that yeah the cloning and then really
the only stats I have
the only stats I have
are d d single if you just clone Das Das
are d d single if you just clone Das Das
death equals one d d single Branch it'll
death equals one d d single Branch it'll
be instant and if I just were to prune
be instant and if I just were to prune
it it would have that speed
it it would have that speed
everywhere good to know so I just that's
everywhere good to know so I just that's
just me having been
just me having been
lazy hey I feel it I do lots of lazy
lazy hey I feel it I do lots of lazy
[ __ ] care you have to be a little bit
[ __ ] care you have to be a little bit
careful because it like it squashes some
careful because it like it squashes some
stuff and you want to make sure that you
stuff and you want to make sure that you
don't lose so it's like it's good to do
don't lose so it's like it's good to do
that when the repo is in a good and
that when the repo is in a good and
stable
stable
State um
before I attempt anything new on GitHub
before I attempt anything new on GitHub
I research what my best options are
I research what my best options are
there's just too much to remember and
there's just too much to remember and
cheat sheets don't cover everything
so this needs to be way faster
I don't know how I can make this code
I don't know how I can make this code
faster
I'll be right
back
e e
I'm not likely going to
uh it's crazy how much overhead that is
uh it's crazy how much overhead that is
and I'm
and I'm
back just
back just
um yeah that's annoying how much
um yeah that's annoying how much
overhead that is I just have to make
overhead that is I just have to make
this script faster at some point but I
this script faster at some point but I
think I'm in a good spot to uh
think I'm in a good spot to uh
oops what's over I just came back uh
oops what's over I just came back uh
there's the new algorithm has
there's the new algorithm has
a has a c script it needs to be made
faster I mean it's here I'll show it to
faster I mean it's here I'll show it to
you it's a very simple script right here
you it's a very simple script right here
let's go world's slowest
let's go world's slowest
stream we love YouTube yeah Yep this
stream we love YouTube yeah Yep this
function at the top needs to be made uh
function at the top needs to be made uh
much
faster and I don't actually know how to
faster and I don't actually know how to
make it like how do I make this 10 times
faster
huh see it's kind of awkward because
huh see it's kind of awkward because
there's like this conditional branching
there's like this conditional branching
if it were just this this is very easy
if it were just this this is very easy
but it doesn't work if you just do that
but it doesn't work if you just do that
uh this crashes your learning if you
uh this crashes your learning if you
just do this it just crashes uh well it
just do this it just crashes uh well it
this screws up your learning you have to
this screws up your learning you have to
have the
Mas what's the reason for
Mas what's the reason for
that uh you need to mask out when the
that uh you need to mask out when the
episode
ends I mean unless I did something wrong
ends I mean unless I did something wrong
but I don't think so and why do you have
but I don't think so and why do you have
to mask out when the episode
to mask out when the episode
ends it's a 32 look
ends it's a 32 look
ahead I I don't know we could try it
here word
here word
block DOD forward yeah we can try
it yeah
it yeah
it stay out of
there yeah
what is this not
what is this not
um how's that not
um how's that not
faster that's very odd let me
see you commented commented that or
see you commented commented that or
didn't run it no it's no it's
didn't run it no it's no it's
slower huh hold
slower huh hold
on oh this that's actually weird this is
on oh this that's actually weird this is
not actually the source the slow
down that's that's actually kind of good
down that's that's actually kind of good
hang
on e
really these are slow
huh e
one should always try to use defines of
one should always try to use defines of
const
const
no I don't know why you
no I don't know why you
would const is
would const is
fine I don't know I just when I was new
fine I don't know I just when I was new
to C I was using uh pound defines
to C I was using uh pound defines
they're both fine it doesn't
matter I'll probably be writing more con
matter I'll probably be writing more con
stuff until I find something that annoys
stuff until I find something that annoys
me about it at the
moment I think the only thing bad is
moment I think the only thing bad is
about it is there's some like warning
about it is there's some like warning
flags that if you have them enabled are
flags that if you have them enabled are
annoying but you shouldn't have them
annoying but you shouldn't have them
enabled
enabled
anyways
anyways
safety um just because macros in general
safety um just because macros in general
are like
I start writing pound defines for
I start writing pound defines for
constants and then people start writing
macros oh that's okay then is this okay
macros oh that's okay then is this okay
no no it's not stop it well they should
no no it's not stop it well they should
they should understand what you know
they should understand what you know
what they're doing and why right no
what they're doing and why right no
prepare yourself
prepare yourself
for probably a really stupid
for probably a really stupid
question what's the difference between
question what's the difference between
an extern and a const like a con is just
an extern and a const like a con is just
a constant is an external just a way to
a constant is an external just a way to
like make a constant like Global I have
like make a constant like Global I have
no idea what extern does I don't use
no idea what extern does I don't use
that
that
keyword I use
keyword I use
extern for mapping my movement
extern for mapping my movement
Delta
Delta
why because instead of defining all of
why because instead of defining all of
my movements I just extern int movement
my movements I just extern int movement
Delta and it's an array of 10 by two for
Delta and it's an array of 10 by two for
minus one Z and one just groupings of
minus one Z and one just groupings of
like Delta coordinates and I use ex turn
like Delta coordinates and I use ex turn
to be
to be
[Music]
[Music]
array here here here
here declare a variable without defining
here declare a variable without defining
it so I do this right here sounds
useful what and pound
defin don't [ __ ] do that
defin don't [ __ ] do that
whatever
whatever
extern extern
extern extern
versus your question was extern versus
versus your question was extern versus
Pound Define
Pound Define
linky uh ex Turn versus
linky uh ex Turn versus
cons versus cons totally
cons versus cons totally
different I mean
different I mean
yeah so if you look at my screen you can
yeah so if you look at my screen you can
and well see where I use it and why I
and well see where I use it and why I
use it I've highlighted it on both
places I'm not looking I'm trying to
places I'm not looking I'm trying to
debug this yeah you're
good man that's surprising that that is
good man that's surprising that that is
slow as it
slow as it
is really like so you found the actual
is really like so you found the actual
slow
down I mean it's just like uh it like
down I mean it's just like uh it like
just some random numpy array operations
just some random numpy array operations
that are all
that are all
numpy are just very
slow I mean they that's 20% overhead
slow I mean they that's 20% overhead
right
right
there imagine slow update to Python 3.11
there imagine slow update to Python 3.11
and use numpy's free threaded
and use numpy's free threaded
version I'm not doing that I wouldn't
version I'm not doing that I wouldn't
it's
it's
bad um
I could could I do the whole thing and
see I mean that's wasn't that where this
see I mean that's wasn't that where this
was supposed to be
was supposed to be
going I think I
can but
then yeah it's a little late to do this
then yeah it's a little late to do this
tonight but I think that's where this is
tonight but I think that's where this is
going you're just gonna just gonna just
going you're just gonna just gonna just
going to crush all the all all the numpy
going to crush all the all all the numpy
things you don't need numpy at
things you don't need numpy at
all uh pretty much
all uh pretty much
yeah the C is
yeah the C is
fast now numpy is supposed to be
fast now numpy is supposed to be
leveraging that speed
leveraging that speed
no no
so so
so so
linky yeah it's it's you've been
linky yeah it's it's you've been
poisoned by
poisoned by
C++
C++
uh the ex the X turn thing is your your
uh the ex the X turn thing is your your
standard
standard
C++
C++
uh program is is going to have a b a
uh program is is going to have a b a
bunch of X turns because you're if you
bunch of X turns because you're if you
need to use a a function that's declared
need to use a a function that's declared
somewhere
somewhere
else you de you put you put an
else you de you put you put an
extern there in in the file you want to
extern there in in the file you want to
use it that way you don't have to okay
use it that way you don't have to okay
re redefine it
re redefine it
so that way goes I wouldn't say that's
so that way goes I wouldn't say that's
like poisoned by C++ I mean just writing
like poisoned by C++ I mean just writing
in C I just do it in multiple files
in C I just do it in multiple files
because it keeps
because it keeps
everything more
everything more
organized well yeah like if you're going
organized well yeah like if you're going
to do multiple files like you have to
to do multiple files like you have to
know what you're doing and have it be
know what you're doing and have it be
saying oh yeah
saying oh yeah
that's literally
that's literally
client and gr like two files you're
client and gr like two files you're
you're remember Joseph asking me earlier
you're remember Joseph asking me earlier
like why did you do this like I I had
like why did you do this like I I had
absolutely no answer yeah you're going
absolutely no answer yeah you're going
to have to have a better defense than
to have to have a better defense than
that no I've I can literally answer why
that no I've I can literally answer why
I've done what I've done I've literally
I've done what I've done I've literally
written this whole thing by hand like
written this whole thing by hand like
this
this
isn't code
isn't code
completion there isn't GPT or any this
completion there isn't GPT or any this
is literally like I wrote this myself we
is literally like I wrote this myself we
can give it the prompt hey make this
can give it the prompt hey make this
sane no no crazy C++ stuff it's not even
sane no no crazy C++ stuff it's not even
C++ I just use it so like I can because
C++ I just use it so like I can because
so I have a main file and then I have a
so I have a main file and then I have a
grid file and then I have a client file
grid file and then I have a client file
and then obviously the associated H
and then obviously the associated H
files for grid and client as well I run
files for grid and client as well I run
it from Main um like six files
it from Main um like six files
but five five and you're compiling how
I correct
I correct
yes you have a make
yes you have a make
file
file
yep was that counted in your file count
yep was that counted in your file count
it's not in my project
folder well where is it gonna where's it
folder well where is it gonna where's it
gonna go or is this not a puffer
gonna go or is this not a puffer
PR uh it will be a puffer lib PR that is
PR uh it will be a puffer lib PR that is
correct but puffer lib has their own
correct but puffer lib has their own
build in place method how I compile on
build in place method how I compile on
my own machine doesn't matter as long as
my own machine doesn't matter as long as
it still compiles with build in place so
it still compiles with build in place so
like my make file is above my project
like my make file is above my project
files by like two or three levels and I
files by like two or three levels and I
compile from above it because I use the
compile from above it because I use the
one make file for all of my
one make file for all of my
projects so it's not included in it I
projects so it's not included in it I
have a file named build which is where
have a file named build which is where
all my binaries go I have a file named
all my binaries go I have a file named
include which is where all my headers go
include which is where all my headers go
and then I have source which is all my C
and then I have source which is all my C
files and then I have
files and then I have
license um read me and all that and what
license um read me and all that and what
would be the project root
would be the project root
directories so when you're looking at
directories so when you're looking at
like the what your project has a read
like the what your project has a read
me yes impressive must be really
me yes impressive must be really
good if you're looking at my screen I'll
good if you're looking at my screen I'll
pull up the REO try
pull up the REO try
make
this this is all in there
this this is all in there
correctly so I think I have a make file
correctly so I think I have a make file
in here because my brother wanted to
in here because my brother wanted to
look at it but essentially it's read me
look at it but essentially it's read me
license ignore source and include
license ignore source and include
because I don't push my binaries up
because I don't push my binaries up
there uh two
headers three source
files and that's gener literally what it
files and that's gener literally what it
does this is my setup and in this file
does this is my setup and in this file
is where my make file is actually
is where my make file is actually
at um
at um
yeah so essentially all of this would
yeah so essentially all of this would
just be like when you clone
just be like when you clone
it how I operate you would get the
it how I operate you would get the
readme the license the dot get ignore
readme the license the dot get ignore
the source and the includes that's all
the source and the includes that's all
you really
need but I
need but I
use extern here because I need extern in
use extern here because I need extern in
order to use
it last words and scale factor never
it last words and scale factor never
used again that means that I forgot to I
used again that means that I forgot to I
use it so I use it
use it so I use it
here that just means I forgot to delete
here that just means I forgot to delete
stuff if they're never
used where and I oh oh I see glow and I
used where and I oh oh I see glow and I
see uh there's like a tricky there's a
see uh there's like a tricky there's a
really obnoxious glsl Shader that I was
really obnoxious glsl Shader that I was
fiddling with I
remember okay so the new algorithm has
remember okay so the new algorithm has
solve
solve
in it's still sub three
in it's still sub three
minutes with a new algorithm but it's
minutes with a new algorithm but it's
not as fast as the
not as fast as the
uh General
uh General
po just really obnoxious because it was
po just really obnoxious because it was
this fast before but then we found
this fast before but then we found
better sweep settings for the
original uh have you test tested on
original uh have you test tested on
other environment besides that no just
other environment besides that no just
as so far because we're just fiddling
as so far because we're just fiddling
with stuff still but okay so this is
with stuff still but okay so this is
before the before we made everything
before the before we made everything
really
really
fast in fact we could just run one of
fast in fact we could just run one of
these to see how fast is now CU it would
these to see how fast is now CU it would
be
be
funny
yep
see yeah I'm proud of my micro you guys
see yeah I'm proud of my micro you guys
can you can hate on it all you want
can you can hate on it all you want
micro is nice no no one's hating don't
micro is nice no no one's hating don't
don't don't don't
don't don't don't
mistake no I'm just I'll be honest I it
mistake no I'm just I'll be honest I it
I've spent so much time configuring it
I've spent so much time configuring it
i' like down to the syntax files and
i' like down to the syntax files and
everything so like I have syntax
everything so like I have syntax
highlighting on scon as
highlighting on scon as
well I spent an awful amount of time
well I spent an awful amount of time
configuring
configuring
it wow syntaxing
onon better than vs code that's for sure
onon better than vs code that's for sure
is this a blackbox
is this a blackbox
whatever yeah here let me go find a
whatever yeah here let me go find a
siphon file real quick I think you'll be
impressed uh we'll do
impressed uh we'll do
Enduro let's go look at your Enduro file
Enduro let's go look at your Enduro file
how about this that's actually
some you impressed some work what this
some you impressed some work what this
is actually
is actually
pretty yeah it keeps finding weirder and
pretty yeah it keeps finding weirder and
weirder parameters honestly
what uh what's weird about that you'll
what uh what's weird about that you'll
see it's little yeah it's not what it
see it's little yeah it's not what it
was
was
before so this is actually probably
before so this is actually probably
going to be kind of
going to be kind of
decent it actually
went it's like crazy the amount of like
went it's like crazy the amount of like
optimization that can be done on these
optimization that can be done on these
like it just keeps getting better
I'm CU so added a little bit of
I'm CU so added a little bit of
ENT J
Lambda it's got to be
thisam gamma's
thisam gamma's
higher then learning rate
mini bad
mini bad
size hello hello
size hello hello
hello hey who's that oh welcome hey
hello hey who's that oh welcome hey
Aaron Oh Aaron I made puffer lip three
Aaron Oh Aaron I made puffer lip three
times
times
faster nice yeah we uh we train we train
faster nice yeah we uh we train we train
at like uh 2.5 to 5 million steps per
at like uh 2.5 to 5 million steps per
second
second
now um I have some initial runs of
now um I have some initial runs of
learning progress for you stre by the
learning progress for you stre by the
way just FYI yeah no no worries to say
way just FYI yeah no no worries to say
once uh you have the hyper pram stuff
once uh you have the hyper pram stuff
pushed in I'll do the big
pushed in I'll do the big
sweep okay um well I just I just pushed
sweep okay um well I just I just pushed
the also the insane perfects is to Dev
the also the insane perfects is to Dev
so we're about to see whether or not we
so we're about to see whether or not we
can solve breakout in uh in like 30
can solve breakout in uh in like 30
seconds nice uh in that case we'll just
seconds nice uh in that case we'll just
chat tomorrow and then look at how to
chat tomorrow and then look at how to
pull this into main my plan for tomorrow
pull this into main my plan for tomorrow
is to go for a long run and if I have
is to go for a long run and if I have
anything left to lift a bunch of weits
anything left to lift a bunch of weits
and then hopefully I will still be able
and then hopefully I will still be able
to talk I don't think you'll have much
to talk I don't think you'll have much
left after all that we might I don't
left after all that we might I don't
[Laughter]
know uh sounds good yeah just wanted to
know uh sounds good yeah just wanted to
let you know thank you very nice no
let you know thank you very nice no
module named Neptune
module named Neptune
what oh up
what oh up
to that's
to that's
weird we will solve all of our
weird we will solve all of our
out with one p install thank you Aaron
out with one p install thank you Aaron
she still here no problem oh yeah
she still here no problem oh yeah
EAS does Break Out Auto
EAS does Break Out Auto
solve what the give me this token
solve what the give me this token
stupid this stupid thing doesn't
stupid this stupid thing doesn't
remember your token it's like yeah we're
remember your token it's like yeah we're
going to make it so secure that you leak
going to make it so secure that you leak
your stupid token on stream every time
your stupid token on stream every time
you want to use the
you want to use the
thing people GNA start pushing stuff to
thing people GNA start pushing stuff to
there pushing even faster
somehow GitHub
somehow GitHub
token Oh no you're Neptune no I don't L
token Oh no you're Neptune no I don't L
my get up token thankfully okay so this
my get up token thankfully okay so this
is slower than before which doesn't make
is slower than before which doesn't make
any damn sense 400k uh
any damn sense 400k uh
wasn't
wasn't
it me see how what was the speed before
it me see how what was the speed before
I
I
don't I'm looking hang on don't get your
don't I'm looking hang on don't get your
nickers in a
[Music]
Twist yeah this is 700k
before I'll update epox you
before I'll update epox you
dumbass hang on
dumbass hang on
I forgot update EPO that's got to be
I forgot update EPO that's got to be
it yeah one update
Epoch there you
go what if more eox is
go what if more eox is
better just
better just
kidding well we'll actually
kidding well we'll actually
see uh yeah we will see by comparison if
see uh yeah we will see by comparison if
it works anything like I think it works
it works anything like I think it works
then it should 1.1 mil so it went up
then it should 1.1 mil so it went up
from 6 700k to 1.1
mil what was theox that before was it
mil what was theox that before was it
one three no it's one now now it's
one three no it's one now now it's
one so that's awesome
yeah so you can see here it's slightly
yeah so you can see here it's slightly
slightly less ample
slightly less ample
efficient
efficient
but it's so
fast yeah sample efficiency doesn't
fast yeah sample efficiency doesn't
necessarily matter it's not the be all
necessarily matter it's not the be all
and end all
rather e
and I forgot to fix
and I forgot to fix
the minute 48
the minute 48
is 108
seconds for
pretty damn
pretty damn
good 108
good 108
seconds but is it the
seconds but is it the
best uh it's better than anything that
best uh it's better than anything that
we got
we got
before so the best so
far e
well that's [ __ ] right I have to send
well that's [ __ ] right I have to send
I gotta send a set up a wire this is why
I gotta send a set up a wire this is why
we
we
test I well Monday it'll be
test I well Monday it'll be
good Monday it'll be
good yeah send me that Aon and I'll uh
good yeah send me that Aon and I'll uh
I'm doing everything manually
I'm doing everything manually
so no worries and I'll send that on uh I
so no worries and I'll send that on uh I
thought I think it's for the third
thought I think it's for the third
anyways isn't it third fourth something
anyways isn't it third fourth something
right there at the start of the month
right there at the start of the month
yeah so I'm on time oh yeah 100% I try
yeah so I'm on time oh yeah 100% I try
not to no rush no worries I'm very
not to no rush no worries I'm very
careful of
[Music]
that I told I sent over that we've uh
that I told I sent over that we've uh
tripled her for small
Nets
Nets
and it's just cool you know
and it's just cool you know
it's like oh I got a guy know I got a
it's like oh I got a guy know I got a
guy who's going to be happy about that
guy who's going to be happy about that
you
you
know I would hope some people would be
know I would hope some people would be
happy about
this actually uh Joseph we've actually
this actually uh Joseph we've actually
been a big cabal of scientists this
been a big cabal of scientists this
whole time purposefully keeping things
whole time purposefully keeping things
slow and you're really [ __ ] with
slow and you're really [ __ ] with
us yeah sorry sorry about that sorry to
us yeah sorry sorry about that sorry to
ruin this
quo so is you don't want my information
quo so is you don't want my information
from the box and hopes that we slow
from the box and hopes that we slow
everyone down
no Hopper is
fast interesting this one didn't do as
fast interesting this one didn't do as
well but it did actually
well but it did actually
syn oh so hold on did
syn oh so hold on did
this when I checked this one before
uh you see here this is
uh you see here this is
actually 85 metal that's why it was
fast yeah it was fast because it this it
fast yeah it was fast because it this it
because it solved in
because it solved in
85 mil so unless I miss something here
85 mil so unless I miss something here
that's not why it is
fast in wall clock time it was fast
fast in wall clock time it was fast
because it solved 85 seconds I mean 85
mil I suppose solving sooner is
mil I suppose solving sooner is
preferred
it's a fair bit of variance from run to
run is that unexpected or it's expected
run is that unexpected or it's expected
in RL but I would love to know why it's
in RL but I would love to know why it's
like
like
this it's kind of
gross we definitely need to onboard more
gross we definitely need to onboard more
science side people though even like you
science side people though even like you
really don't need to have a crazy
really don't need to have a crazy
background for a lot of these things
background for a lot of these things
either just stuff like hey can somebody
either just stuff like hey can somebody
comprehensively try out different
comprehensively try out different
learning rate schedulers like does
learning rate schedulers like does
cosine anding actually do anything just
cosine anding actually do anything just
like small little things like this
right yeah so like this doesn't actually
match unless I missed a parameter hold
match unless I missed a parameter hold
on don't think I did though
yeah no see
yeah no see
it's it's weird
it's it's weird
because I have all the parameters
because I have all the parameters
matched but it doesn't do nearly as
well so it's kind it's like annoying
well so it's kind it's like annoying
because it's like um the best runs are
because it's like um the best runs are
also lucky runs not
replicable so maybe not a real
result well it's not like it's horribly
result well it's not like it's horribly
horribly far off right it's just like
horribly far off right it's just like
there's a fair there's a fair bit of
there's a fair there's a fair bit of
variance right so if you take a 100
variance right so if you take a 100
samples some of them are going to get
samples some of them are going to get
lucky where they solve it you know 30
lucky where they solve it you know 30
million steps faster than the average
million steps faster than the average
run just by virtue of RNG
I am going to start a new sweep on this
I am going to start a new sweep on this
uh
uh
overnight I think we can start two new
overnight I think we can start two new
sweeps
actually okay sweeping
what uh just the same sweeps on the new
code just to make sure I didn't break
code just to make sure I didn't break
anything all right
anything all right
and these resources folders there the
and these resources folders there the
two resources folders is
two resources folders is
annoying what
annoying what
two there are two there's one
two there are two there's one
puffer SL resources then there
is one of sim
is one of sim
link yeah exactly the same
link yeah exactly the same
thing puff resources
well my
my linking to the Sim link is not
my linking to the Sim link is not
working so
resources Enduro
resources Enduro
okay so this should just be resources
okay so this should just be resources
blaster
e e
sound like
me I mean I've been on this for a good
me I mean I've been on this for a good
12 hours
12 hours
today cool I worked that long
today cool I worked that long
too except you know what I did today
too except you know what I did today
not a goddamn
not a goddamn
thing that's tomorrow I'll get to go for
thing that's tomorrow I'll get to go for
a run and just get some exercises and
a run and just get some exercises and
stuff and
stuff I went out to
eat to be fair
eat to be fair
it's still kind of morning for me
it's still kind of morning for me
so going to fast
um yeah just
um yeah just
if I don't know I don't I don't know
if I don't know I don't I don't know
about celebrating for for 100 100K
about celebrating for for 100 100K
celebrating
celebrating
is
is
amazing I don't know someone said go to
amazing I don't know someone said go to
I suggested someone said go to go to
I suggested someone said go to go to
Japan and and eat a puffer fish oh I
Japan and and eat a puffer fish oh I
wait was it lion I saw you got 5 XP to
wait was it lion I saw you got 5 XP to
BU snake what kind of Wizardry oh this
BU snake what kind of Wizardry oh this
is Spencer in here hey Spencer who said
is Spencer in here hey Spencer who said
Wiz who said Wizardry I said wizard 5x
Wiz who said Wizardry I said wizard 5x
is
is
uh uh 5x is like the best Cas we still
uh uh 5x is like the best Cas we still
get 3x though it went from 900k to 2.5
get 3x though it went from 900k to 2.5
2.7 with
2.7 with
compile yes what did he do don't tell me
compile yes what did he do don't tell me
don't tell me you turned on
compile you upgrade you upgraded p and
compile you upgrade you upgraded p and
turned on compile don't tell me that was
turned on compile don't tell me that was
the fix
the silence is ominous hold
the silence is ominous hold
on well what is defined as an error say
on well what is defined as an error say
maybe we should try the nightly
[Music]
[Music]
string starts with that ends in that we
string starts with that ends in that we
skip that and the rules are if we
skip that and the rules are if we
have in [ __ ] so it is technically an
have in [ __ ] so it is technically an
error
think yelling at co-pilot
think yelling at co-pilot
yeah
yeah
f is
what we have footage of linky trying to
what we have footage of linky trying to
use
co-pilot no it just says co-pilot ready
co-pilot no it just says co-pilot ready
at the bottom it actually doesn't work
at the bottom it actually doesn't work
that's the LSP server I'm
that's the LSP server I'm
attempting I can show my work and do
attempting I can show my work and do
co-pilot do suggest and it'll say
co-pilot do suggest and it'll say
nothing even though you know I come in
nothing even though you know I come in
here and check my info it's
here and check my info it's
authenticated it's running and enabled
authenticated it's running and enabled
it just doesn't ever suggest this
it just doesn't ever suggest this
again the what oh I said oh this again
again the what oh I said oh this again
yeah I gave up on it for now all when I
yeah I gave up on it for now all when I
have some Epiphany moment where I've
have some Epiphany moment where I've
like it comes to me and I'm like I'm
like it comes to me and I'm like I'm
just a [ __ ] idiot I'll look at it
just a [ __ ] idiot I'll look at it
again but I'm fluid out as for
again but I'm fluid out as for
now so I am going over syntax files and
now so I am going over syntax files and
trying to figure out
trying to figure out
why
why
this
means that this is an error because I
means that this is an error because I
have no idea why
is there no
t-u t-u on that's really weird that's no
t-u t-u on that's really weird that's no
one's tring anything presumably I I must
one's tring anything presumably I I must
have killed it by mistake let me
have killed it by mistake let me
see o big sad no actually it's
fine the real teams was the friends we
fine the real teams was the friends we
made along the way
all right now let's try
this oh yeah it helps when I actually
this oh yeah it helps when I actually
put the Assets in the folder okay
put the Assets in the folder okay
great now if that's
solved e
my kid's getting lectured about not
my kid's getting lectured about not
knowing a second language
knowing a second language
[Laughter]
that's
horrible speak I speak English and I
horrible speak I speak English and I
speak
speak
American I said Jesus is
American I said Jesus is
a speak in English and speak
a speak in English and speak
American in Spanish and Chinese whatever
American in Spanish and Chinese whatever
yeah want do to be able to hear Chinese
yeah want do to be able to hear Chinese
uh
uh
Mandarin any
un as hell to learn
un as hell to learn
later I speak fluent
later I speak fluent
simplified it's the same language
simplified it's the same language
simplified and it's just the
simplified and it's just the
writing see that was that was the joke
writing see that was that was the joke
because I'm saying I'm an idiot so I
because I'm saying I'm an idiot so I
speak in simplified terms as well oh
speak in simplified terms as well oh
okay you had yes for yeah well it
okay you had yes for yeah well it
doesn't really translate that's yeah C
doesn't really translate that's yeah C
it should have been worked off better my
it should have been worked off better my
my favorite dumbass joke I made in
my favorite dumbass joke I made in
Chinese uh
isal which means have you eaten until
isal which means have you eaten until
you're full no I've eaten until I'm
you're full no I've eaten until I'm
round doesn't trans no that's hilarious
round doesn't trans no that's hilarious
because one time my older brother who is
because one time my older brother who is
one of the bigger people in our family
one of the bigger people in our family
um we were all my mom who's a nutrition
um we were all my mom who's a nutrition
nut was saying something about how she
nut was saying something about how she
only eats whatever whatever whatever my
only eats whatever whatever whatever my
older brother just looks up from his
older brother just looks up from his
plate and goes I don't eat until I'm
plate and goes I don't eat until I'm
full I eat until I'm or I eat until I
full I eat until I'm or I eat until I
hate myself or some [ __ ] like that it
hate myself or some [ __ ] like that it
was
hilarious I eat until I hate myself the
hilarious I eat until I hate myself the
sad thing is he was
sad thing is he was
serious yeah no it was full serious and
serious yeah no it was full serious and
it just it was like it was just a moment
it just it was like it was just a moment
where he's sitting there eating and he
where he's sitting there eating and he
it was almost like his face just panned
it was almost like his face just panned
upwards and he just looked at my mom and
upwards and he just looked at my mom and
said I don't eat until I'm full I eat
said I don't eat until I'm full I eat
until I hate myself because my mom was
until I hate myself because my mom was
saying something about I don't eat until
saying something about I don't eat until
I'm full I eat until I hit my moon fro
I'm full I eat until I hit my moon fro
or some [ __ ] and then he just looked up
or some [ __ ] and then he just looked up
and said that and then looked back down
and said that and then looked back down
and kept eating
okay this has been a successful day of
okay this has been a successful day of
puffer Li I think once we finish
puffer Li I think once we finish
basically once we finish if the new
basically once we finish if the new
algorithm works that's three things
algorithm works that's three things
three things well plus the new
three things well plus the new
environments that's enough for puffer
environments that's enough for puffer
2.5 um all the experiments and stuff
2.5 um all the experiments and stuff
have to be done as well but I think
have to be done as well but I think
content wise that's good that is is new
content wise that's good that is is new
sweeps new
sweeps new
algorithm uh old like way higher perf
algorithm uh old like way higher perf
plus the new
plus the new
M I think that's
M I think that's
good three new
Ms so we'll see on that the new the new
Ms so we'll see on that the new the new
algorithm I think that there's still
algorithm I think that there's still
hope for it
hope for it
because it's off by it's off by a fair
because it's off by it's off by a fair
bit but then a lot of that is just the
bit but then a lot of that is just the
uh wall clock overhead of the
uh wall clock overhead of the
unoptimized reward computation right now
unoptimized reward computation right now
so we can fix that for
so we can fix that for
sure and then we'll see from
sure and then we'll see from
there all right your new algorithm is
there all right your new algorithm is
that this PR here
that this PR here
p3l uh bet you got PR for me to merge
p3l uh bet you got PR for me to merge
real quick I am pring it as we speak
real quick I am pring it as we speak
okay I'm merging that
okay I'm merging that
2.0 I was just ask just
dude yeah we don't touch 2.0 unless it's
dude yeah we don't touch 2.0 unless it's
like an immediate high priority bug
like an immediate high priority bug
fix Doug for 2.0 considerate
fix Doug for 2.0 considerate
production
production
um automatically birs I'm
um automatically birs I'm
sure3 Spencer submit a thing that I
sure3 Spencer submit a thing that I
forgot about
so are you full moving puffer Li into
so are you full moving puffer Li into
the new algorithm or is there is still G
the new algorithm or is there is still G
to be okay if it works better across the
to be okay if it works better across the
board then why wouldn't
board then why wouldn't
I I agree I was just that's a high
I I agree I was just that's a high
bar wondering if you were going to keep
bar wondering if you were going to keep
both Po and P3 is optional we'll keep
both Po and P3 is optional we'll keep
keep whatever is best the only reason I
keep whatever is best the only reason I
specify that is because if anybody comes
specify that is because if anybody comes
in and starts like well actually then
in and starts like well actually then
you could just go PO is still
you could just go PO is still
implemented go ahead and run your own
implemented go ahead and run your own
Benchmark I mean scientists are going to
Benchmark I mean scientists are going to
want that that's what I'm saying that
want that that's what I'm saying that
way you can put the ball in their field
way you can put the ball in their field
there so many [ __ ] if
there so many [ __ ] if
statements it's the same bloody
statements it's the same bloody
thing [ __ ] You [ __ ] You Scientist like
thing [ __ ] You [ __ ] You Scientist like
stop it why you make my life
stop it why you make my life
hard it's like you know you give a
hard it's like you know you give a
scientist a piece of code a beautifully
scientist a piece of code a beautifully
optimized piece of code and they'll find
optimized piece of code and they'll find
a way to run it at they won't even run
a way to run it at they won't even run
it at like a fixed like 5x lower 10x
it at like a fixed like 5x lower 10x
lower they'll run it at a pace where the
lower they'll run it at a pace where the
experiments take three days because
experiments take three days because
that's how long they're willing to wait
that's how long they're willing to wait
look I didn't need you to call me out
look I didn't need you to call me out
just because the new learning progress
just because the new learning progress
experiments take an
experiments take an
hour up from a
hour up from a
minute okay nice what is that a 60 60x
minute okay nice what is that a 60 60x
impressive uh in actuality I think it's
impressive uh in actuality I think it's
like 40 minutes my God okay we're gonna
like 40 minutes my God okay we're gonna
fix that [ __ ] and then I just mean it's
fix that [ __ ] and then I just mean it's
it's an easy way to put the put all the
it's an easy way to put the put all the
pressure on them to say it's still
pressure on them to say it's still
implemented and feel free to Benchmark
implemented and feel free to Benchmark
it yourself and prove me wrong check I
it yourself and prove me wrong check I
mean they can also just go grab the 2.0
mean they can also just go grab the 2.0
it's annoying just it makes it just
it's annoying just it makes it just
makes the code like I said I would only
makes the code like I said I would only
consider replacing it if we beat it
consider replacing it if we beat it
across the board but it honestly it
across the board but it honestly it
would just be PO with two fewer hyper
would just be PO with two fewer hyper
parameters to
parameters to
optimize you don't have to explain it to
optimize you don't have to explain it to
me I am very firm in my own code if it
me I am very firm in my own code if it
doesn't work it's gone I don't want to
doesn't work it's gone I don't want to
look at Dead code I don't want to look
look at Dead code I don't want to look
at unused code anything that doesn't
at unused code anything that doesn't
work it's gone every new thing every
work it's gone every new thing every
extra thing in Dev makes it like every
extra thing in Dev makes it like every
extra thing in that clean puffero file
extra thing in that clean puffero file
makes it worse so E3 is probably getting
makes it worse so E3 is probably getting
tossed because I think that algorithm
tossed because I think that algorithm
sucks um we'll see I have to finish
sucks um we'll see I have to finish
testing it um I mean you're preaching to
testing it um I mean you're preaching to
the choir at this point because I
the choir at this point because I
legitimately made a neuter version of
legitimately made a neuter version of
puffer Li just because I was all the
puffer Li just because I was all the
files just waiting for you buddy
uh
uh
oh time out's happening
oh time out's happening
what
nothing his child is in
trouble it's
fun watch out cat thank
you damn it watch out cat wait
wait this is going
wait this is going
to wait oh no it's not
to wait oh no it's not
okay damn
okay damn
it see you Aaron
bye why you do this to
bye why you do this to
me we bought one of those small mini
me we bought one of those small mini
couches for for my son and it is the
couches for for my son and it is the
most adorable thing ever it looks like
most adorable thing ever it looks like
it's made out of like cushions from a
it's made out of like cushions from a
couch I love
it okay
it okay
merged so for the folks that are still
merged so for the folks that are still
on YouTube and twitch at 10:42 on a
on YouTube and twitch at 10:42 on a
Saturday
Saturday
thanks for tuning in you've been kind of
thanks for tuning in you've been kind of
keeping tabs today you've
keeping tabs today you've
watched the highest performance
watched the highest performance
reinforcement learning library get three
reinforcement learning library get three
times faster at least four fast M's
times faster at least four fast M's
small
small
models pretty much get faster across the
models pretty much get faster across the
board it's a hell of an optimization
board it's a hell of an optimization
day uh if you're interested
day uh if you're interested
in all this RL stuff that I
in all this RL stuff that I
do buffer.
do buffer.
a links are right there start the GitHub
a links are right there start the GitHub
please just start the GitHub it really
please just start the GitHub it really
helps out the project we're doing this
helps out the project we're doing this
full-time lots of folks involved just
full-time lots of folks involved just
helps the project row a lot and other
helps the project row a lot and other
than that you can join the Discord to
than that you can join the Discord to
get involved you do not need RL
get involved you do not need RL
experience prior any of our best
experience prior any of our best
contributors did not have any just need
contributors did not have any just need
to be able to
to be able to
code and uh follow on X for more RL
code and uh follow on X for more RL
content all RL content on X there's some
content all RL content on X there's some
blog posts here including this quick
blog posts here including this quick
start guide beginners but there's some
start guide beginners but there's some
more articles on X you can't find
more articles on X you can't find
anywhere else all the demos are on Ocean
anywhere else all the demos are on Ocean
docks data all that
docks data all that
stuff so I will be
stuff so I will be
back either tomorrow or if I crash out
back either tomorrow or if I crash out
then it will be on Monday and we'll be
then it will be on Monday and we'll be
back with more Dev going to be trying to
back with more Dev going to be trying to
get Dev stable we're going to be running
get Dev stable we're going to be running
all the new experiments especially now
all the new experiments especially now
that everything's nice and fast testing
that everything's nice and fast testing
the new algorithms final test on the new
the new algorithms final test on the new
algorithms and doing some client work as
algorithms and doing some client work as
well so thank you and I will see you
well so thank you and I will see you
around bye
