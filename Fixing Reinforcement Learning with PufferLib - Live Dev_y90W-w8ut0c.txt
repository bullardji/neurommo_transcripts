Kind: captions
Language: en
I guess we're
I guess we're
live
hi I don't know why I'm streaming this
hi I don't know why I'm streaming this
but
but
uh some small PRS some small stuff to
uh some small PRS some small stuff to
fix and I'll see if I want to do
fix and I'll see if I want to do
anything at the moment
just got back from
just got back from
a 2hour route canal
so okay
so okay
so let me see what this guy did
I hate the auto format stuff because
I hate the auto format stuff because
they're 140 some odd file changes in
they're 140 some odd file changes in
here with almost all of them just being
here with almost all of them just being
deleting [ __ ] white
deleting [ __ ] white
space do not do
this where's the actual hold
this where's the actual hold
on I went through this and made sure it
on I went through this and made sure it
wasn't like somebody inject
wasn't like somebody inject
BS earlier
today let me see if I can find where
today let me see if I can find where
the okay so here's the actual file
the okay so here's the actual file
change in set up.
change in set up.
Pi
um oh does this make any
sense can't you
sense can't you
ignore can
you
where oh
I still have 141 files
changed it just doesn't show you where
changed it just doesn't show you where
it actually is uh it just doesn't show
it actually is uh it just doesn't show
you the changes to wh space made
yeah this is
fine
add what did this guy add with pre
add what did this guy add with pre
commit
I don't want this [ __ ]
here like why
no I wanted the setup changes that he
no I wanted the setup changes that he
made
where's the actual file change I want to
where's the actual file change I want to
see what he did for
see what he did for
Linux I mean for Mac
he said he didn't add rough so what is
this I didn't add rough exploit
okay so this is what he
actually man I don't know why
this is actually like a really obnoxious
this is actually like a really obnoxious
PR
PR
um this has like a good this has a good
um this has like a good this has a good
fix but then
I don't even know if this was needed
I don't even know if this was needed
this is old anyways let me
see what was even changed here
oh previously
hardcoded what the heck is did he even
hardcoded what the heck is did he even
add to this pre-commit hook
how do I let me see
should I just manually merge in his
should I just manually merge in his
setup stuff because I don't want
this
yeah this doesn't make it easier this
yeah this doesn't make it easier this
strictly makes it
harder
for e
let's at least fix
this for
this change I'll take
okay for
okay so
here they literally yeah this is not
here they literally yeah this is not
changed it's so annoying when like
changed it's so annoying when like
format changes are mixed in with a PR
format changes are mixed in with a PR
like
like
this I mean this is like a perfectly
this I mean this is like a perfectly
reasonable nice PR but it's just got
reasonable nice PR but it's just got
like a bunch of opinionated format
like a bunch of opinionated format
changes I don't get the point
man that's like going into somebody's
man that's like going into somebody's
house and then just starting to
house and then just starting to
rearrange their
Furniture who the [ __ ] does
that why is this like this anyways I
thought is t r
oh yeah yeah
oh yeah yeah
yeah it gets renamed here doesn't
it I think he broke my
Linux this breaks Linux doesn't
it dude I think this guy literally broke
it dude I think this guy literally broke
the Linux build too
right yeah this guy totally broke our
right yeah this guy totally broke our
Linux build
stupid it's going to be R include either
stupid it's going to be R include either
way cuz we renamed the damn
package oh wait did he remove
yeah
yeah
he I don't know why he did
this this does not make any sense to me
let me see what else you
changed okay so this is the real the
changed okay so this is the real the
only real change right
uh
yeah we don't have this on Windows
yeah we don't have this on Windows
anyways
then what did he add
here extra link ARS
yes what the [ __ ] what is this
oh do you change anything in
here
no then why why is this collapsed like
no then why why is this collapsed like
this these are identical
yeah this was previously hardcoded but
yeah this was previously hardcoded but
it wasn't causing a breakage cuz you
it wasn't causing a breakage cuz you
renamed the
renamed the
path
um I don't think this works on python
um I don't think this works on python
3.8
3.8
either bump
this we'll try this for
this we'll try this for
now
for e
this seems to
this seems to
work
oops it
oops it
Daniel
Daniel
denial for
what the heck was the thing that called
hey how's it
going oh yeah that guy you Dev on Mac
going oh yeah that guy you Dev on Mac
too does this uh does this fix the
too does this uh does this fix the
latest version on Mac for you like I
latest version on Mac for you like I
just merged uh I just like merged a
just merged uh I just like merged a
small version of that
PR don't do any
PR don't do any
okay I'll let him test it on Mac then
you know that is the one and only thing
you know that is the one and only thing
that I would actually consider getting
that I would actually consider getting
the
the
um uh the GitHub actions for is just
um uh the GitHub actions for is just
because you have to build it on [ __ ]
Mac that's basically the only thing
you have time to help me decide yeah I
you have time to help me decide yeah I
can do that now
can do that now
Captain
um let me take a quick look at
this I definitely don't want the frein
this I definitely don't want the frein
admit Shenanigans from the other
admit Shenanigans from the other
PR so what's this too
you added Mac okay
cool this doesn't ship Wheels right this
cool this doesn't ship Wheels right this
I mean this doesn't ship anything this
I mean this doesn't ship anything this
just runs build test I'll take build
tests this doesn't prevent you from
tests this doesn't prevent you from
[Music]
[Music]
merging wait does this on
merging wait does this on
push on pull
requests no shipping looks very
requests no shipping looks very
sane yeah that's fine that guy what I
sane yeah that's fine that guy what I
don't the only thing I don't want right
don't the only thing I don't want right
is I don't want to add extra steps for
is I don't want to add extra steps for
contributors like ever at all so just
contributors like ever at all so just
have something that sanity checks if the
have something that sanity checks if the
thing builds is
fine you have to set Branch protection
fine you have to set Branch protection
in your
settings oh to prevent it from merging
settings oh to prevent it from merging
yeah we're not doing that it's
yeah we're not doing that it's
fine it's enough to just have the badge
fine it's enough to just have the badge
there so I can see
what does the preview look like for
this let me just merge this for now
what's this look
like no
like no
status so will
this okay so it's
running okay
cool yeah that's nice
cool yeah that's nice
yeah I'll gladly take
yeah I'll gladly take
that thank
you Captain let me take a look at your
you Captain let me take a look at your
thing if uh if that's it for me that guy
thing if uh if that's it for me that guy
let me see what time is it 2:21 okay I
let me see what time is it 2:21 okay I
got
got
another I I have time I just I got to
another I I have time I just I got to
take a [ __ ] ton of tile and all in like
take a [ __ ] ton of tile and all in like
minutes P test Automation and 3 3.12 yes
minutes P test Automation and 3 3.12 yes
um
um
pie test we really don't care
pie test we really don't care
about yeah I like the
about yeah I like the
minimalism I like the minimalism on
this no this is good this is
this no this is good this is
particularly good because it's like
particularly good because it's like
testing Mac is just to pain in the ass
testing Mac is just to pain in the ass
to go build it on a
map uh oceans included without
extras we should it should probably
extras we should it should probably
include like clean orl or whatever by
include like clean orl or whatever by
default since those are like core demos
default since those are like core demos
but I think they should catch just about
but I think they should catch just about
everything with ocean
um Captain hold on let me fix this chat
um Captain hold on let me fix this chat
so I can actually see what the [ __ ] is
so I can actually see what the [ __ ] is
going on
okay what is it that you wanted me to
okay what is it that you wanted me to
look at
Captain is it
here my longer Discord message
okay
concise continuous doesn't matter fully
concise continuous doesn't matter fully
observable doesn't
matter
matter
okay War drones
10 scaler
items most TNN input layers being empty
items most TNN input layers being empty
is fine uh the issue
is fine uh the issue
is passing 10x 21 by
is passing 10x 21 by
21 uh onto the GPU that's just a lot of
21 uh onto the GPU that's just a lot of
data
there are up to 12 floating
there are up to 12 floating
cubes ex that they're one by one Dynamic
bodies don't know how to handle
bodies don't know how to handle
projectiles
[Music]
let's see what you're doing at the
let's see what you're doing at the
moment with this
moment with this
net is do you have your branch link
net is do you have your branch link
somewhere
here let me actually take let me go take
here let me actually take let me go take
this pyl andol real quick
all right I'll check that in a second
[ __ ] much ipren did they give
me oh that's fine 800
[ __ ] 800 milligrams
ibuprofen all right that should prevent
ibuprofen all right that should prevent
me from getting increasingly grumpy over
me from getting increasingly grumpy over
the next 20 minutes
no guarantees
Jesus let me think
I know how to do everything but the
I know how to do everything but the
projectiles just off the top of my
head you could do entity based
how big is entity based
how big is entity based
um let me just calculate how much data
um let me just calculate how much data
you have
here well you're going to need 2D data
here well you're going to need 2D data
for the freaking walls and anyways
right it's extremely hard to play
do we have some screenshots or
do we have some screenshots or
something from the
environment let to see what it looks
environment let to see what it looks
like
you're not doing clustering every step
you're not doing clustering every step
I'll tell you that
damn there's some cool ends here
why don't I see any of your
why don't I see any of your
videos oh is this
it aren't there obstacles though in some
it aren't there obstacles though in some
of the other like it's not just the
of the other like it's not just the
edges of the board right there actually
edges of the board right there actually
there are
there are
walls not just these bricks right there
walls not just these bricks right there
are like maps that have walls right
so the obnoxious thing about doing
so the obnoxious thing about doing
entity based here is you still need comp
entity based here is you still need comp
data for the
data for the
maps so then you'd need both
how would you make a space invader
how would you make a space invader
policy
I mean you should just be able to
I mean you should just be able to
discretize Captain why is it that you
discretize Captain why is it that you
can't just discretize like the bullets
can't just discretize like the bullets
onto the tiles that they occupy
again can you explain to me why you
again can you explain to me why you
can't just
discretize like this TI has a bullet
discretize like this TI has a bullet
this child doesn't have a
this child doesn't have a
bullet they will overlap with drone
so can you get hit by your own
bullets are like bullets unique to like
bullets are like bullets unique to like
their okay so it's literally just yeah
their okay so it's literally just yeah
then this is not that hard
then this is not that hard
man yes T can be multihop which is what
man yes T can be multihop which is what
we're about to I'm about to suggest
we're about to I'm about to suggest
so let me get your message up here hold
so let me get your message up here hold
on I'm going to get you something good
on I'm going to get you something good
it's little patience with me today we're
it's little patience with me today we're
moving a little
moving a little
slowly [ __ ] Christmas Eve 2hour root
slowly [ __ ] Christmas Eve 2hour root
canal all right
I was literally cracking jokes with his
I was literally cracking jokes with his
uh assistant about what a nightmare this
uh assistant about what a nightmare this
one
was where's your long post on this is it
was where's your long post on this is it
oh it's in Dev
du okay
so the thing you have to
so the thing you have to
understand you don't have this tile
understand you don't have this tile
representation internally do you it's
representation internally do you it's
just all continuous right
like does this grid exist as a concept
like does this grid exist as a concept
in your engine code or is this purely a
in your engine code or is this purely a
facet of
facet of
observations walls and weapons okay but
observations walls and weapons okay but
you're not like not everything is on
you're not like not everything is on
this grid right like the entity
this grid right like the entity
positions are just continuous or are
positions are just continuous or are
those
actually okay
interesting well my point is like you
interesting well my point is like you
can have like like a tile
can have like like a tile
here right and then you can have like an
here right and then you can have like an
agent
agent
here and this can have a bullet on it
here and this can have a bullet on it
and this can have a bullet on it and
and this can have a bullet on it and
this can have a bullet on it and it
this can have a bullet on it and it
doesn't
doesn't
matter okay you can have this can be
matter okay you can have this can be
whatever you want it to be so what you
whatever you want it to be so what you
can do here right is if you're going to
can do here right is if you're going to
think of each of these tiles as an array
um so it's probably going to be multi
um so it's probably going to be multi
hot or at
hot or at
least ideally what you do is you pack it
least ideally what you do is you pack it
kind of tight and then you make the
kind of tight and then you make the
multi hot in the forward P the
policy
so let's
say the first one of these this is going
say the first one of these this is going
to be a series of variables of uh
to be a series of variables of uh
variables so we can do
variables so we can do
like
empty uh the bot there can be multiple
empty uh the bot there can be multiple
bots on the same tile though
right but there can't be bots on a wall
I can't I got to
type so we can do like empty
can't pass the walls for each
can't pass the walls for each
other yeah but the the bounce
check the bounce check on drones can you
check the bounce check on drones can you
have two drones on the same
tile you can right
can maybe okay I've got it in my head
can maybe okay I've got it in my head
let me think how I'm going to get this
let me think how I'm going to get this
out on paper to you
so this
is the first number is going to be
is the first number is going to be
multi- discret of two and then it's
multi- discret of two and then it's
going to be 0al
empty and
empty and
[Music]
[Music]
then there's no not a good way to do
then there's no not a good way to do
this as as
a okay I'll do the less efficient
a okay I'll do the less efficient
representation first and then I'll try
representation first and then I'll try
to pair it down so
to pair it down so
like this bit here can be
like this bit here can be
zero this is like has
wall one
two Dot and then we have like agent
one two and this one can be
bullet so I think we can very
bullet so I think we can very
easily we could very easily make
easily we could very easily make
something like that
um and then it's just a matter of
um and then it's just a matter of
compressing this to a better
representation how bad would that
representation how bad would that
be how many agents are there going to
be yes it can of course be a and eight
be yes it can of course be a and eight
in fact we can pack this into
in fact we can pack this into
bits for
Max I don't think it fits in I don't
Max I don't think it fits in I don't
think it fits in8 bits
think it fits in8 bits
though cuz if they're three types of
though cuz if they're three types of
walls and four agents
oh that's what you meant this whole
oh that's what you meant this whole
thing is a single U and dat but then
thing is a single U and dat but then
there's only eight channels we need wall
there's only eight channels we need wall
bullet three
bullet three
walls four agents where one bit
walls four agents where one bit
over oh wait no wait it's and the boxes
over oh wait no wait it's and the boxes
too are there different types of
too are there different types of
boxes how many different things are
boxes how many different things are
there Captain how many channels do we
there Captain how many channels do we
need for this
same type as
same type as
walls they're not walls though we don't
walls they're not walls though we don't
want to tell the agents that the
want to tell the agents that the
floating cubes are walls
so like naive naive
so like naive naive
representation walls
representation walls
are so
are so
walls this is three three variables
walls this is three three variables
three yeah this is three discreet of
three yeah this is three discreet of
three or present three three
three or present three three
bits and then we
bits and then we
do
do
agent orbits
box three
bits
bullet one bit
yeah and then we have the scaler infos
yeah and then we have the scaler infos
per agent
[ __ ] do you need to know all that info
[ __ ] do you need to know all that info
about the opponent agents or just about
about the opponent agents or just about
your own agent like what are the what
your own agent like what are the what
are the infos
position velocity
how much do we care about knowing that
how much do we care about knowing that
about
opponents them to be fully
observable the m is never really
observable the m is never really
like it's not fully observable at all if
like it's not fully observable at all if
you're doing any of the type of stuff
you're doing any of the type of stuff
that we're doing at the moment like
that we're doing at the moment like
putting it on a grid you're losing
putting it on a grid you're losing
information discretizing it
information discretizing it
to begin
with okay so if you really wanted to
with okay so if you really wanted to
be if you wanted to be finicky about it
here all
here all
positions I don't know if that does very
positions I don't know if that does very
much
walls agents
walls agents
bullets what if we just took this
out we could make this one
out we could make this one
channel so three walls
channel so three walls
One
One
agent now this fits
agent now this fits
in this fix fits in one
in this fix fits in one
bite so
bite so
bytes get out of here you dumb twitch
bot um so that's 450 bytes which is
bot um so that's 450 bytes which is
actually a
actually a
reasonable reasonable
size well this is what I'm saying is
size well this is what I'm saying is
it's probably hybrid let hold on let me
it's probably hybrid let hold on let me
get my ideas out here that guy
get my ideas out here that guy
um and then there are four agents you
um and then there are four agents you
said with 10 attributes
each position velocity let's just give
each position velocity let's just give
you floats for
you floats for
those so
this is
10 and this is
10 and this is
four so
four so
bytes if their
floats total OB size is around
700 700 bytes
now we don't have infrastructure for
now we don't have infrastructure for
this but because it's fully
this but because it's fully
observable
observable
um well actually you need to know what
um well actually you need to know what
agent you are don't
you random number of entities could work
you random number of entities could work
what I what do you mean that I don't
what I what do you mean that I don't
know what that means that
guy yeah I I understand that Captain let
guy yeah I I understand that Captain let
me think
I mean that's just one extra number to
I mean that's just one extra number to
be fair
you know why don't for now cuz here's
you know why don't for now cuz here's
the thing Captain I know how you can do
the thing Captain I know how you can do
it you're just going to what you would
it you're just going to what you would
do is you would just pass the index of
do is you would just pass the index of
your agent and you would key it against
your agent and you would key it against
the four or the however many entities
the four or the however many entities
you can observe around you and then um
you can observe around you and then um
you would actually be able to deploy
you would actually be able to deploy
this against a different number of
this against a different number of
Agents as well if you do it that way but
Agents as well if you do it that way but
I think for now what you should do is
I think for now what you should do is
you should just
you should just
do you should let like do the 450 or
do you should let like do the 450 or
whatever and then pass the self Vector
whatever and then pass the self Vector
so that's about 500
so that's about 500
bytes something like take 25 random
bytes something like take 25 random
entities from the map
what in the
what in the
hell well that's a crazy idea
um so the thing that guy is that
um so the thing that guy is that
that all that does is you still you have
that all that does is you still you have
just a pure entity
just a pure entity
representation and it doesn't solve the
representation and it doesn't solve the
architecture problem because you're
architecture problem because you're
still not getting map data from that
so you basically just have an incomplete
so you basically just have an incomplete
representation that doesn't include the
representation that doesn't include the
map data and you don't have all the
map data and you don't have all the
entities and you still need an entity
entities and you still need an entity
based attentional architecture which is
based attentional architecture which is
a
pain Captain I would suggest that you
pain Captain I would suggest that you
just do
just do
um I bet you can get some pretty cool
um I bet you can get some pretty cool
looking policies if you just give the
looking policies if you just give the
self vector and then a 21x 21 U into 8
self vector and then a 21x 21 U into 8
map that you just unpack you just un bit
map that you just unpack you just un bit
pack that should be like a couple lines
pack that should be like a couple lines
of code I would hope if pie torches at
of code I would hope if pie torches at
all
all
sayane
sayane
um what do you think about this because
um what do you think about this because
you do have to be careful with your
you do have to be careful with your
bandwidth you said it was like 780
bandwidth you said it was like 780
Floats or whatever so I just cut I just
Floats or whatever so I just cut I just
cut your observation data uh your packet
cut your observation data uh your packet
size down by like a factor of eight as
size down by like a factor of eight as
well
welcome YouTube
folks happy Christmas Eve Merry
folks happy Christmas Eve Merry
Christmas is a Merry Christmas Eve I
Christmas is a Merry Christmas Eve I
don't
know we're debugging some observations
in un and H three bits for wall
in un and H three bits for wall
types one bits for agents as agent
types one bits for agents as agent
present three bits so it's three bits
present three bits so it's three bits
for wall type one bit for agent
for wall type one bit for agent
present and this is yeah so one bit for
present and this is yeah so one bit for
agent
agent
present uh three bits
present uh three bits
for box type present
for box type present
so if there's a box on a
so if there's a box on a
cell what color and you know there could
cell what color and you know there could
even be multiple on the same cell
even be multiple on the same cell
technically and then
technically and then
um the bullet uh bullet
um the bullet uh bullet
present couldn't that be one bit if
present couldn't that be one bit if
Wallace I thought you said that
the well yeah but then the network has
the well yeah but then the network has
to do something fancy right it has to
to do something fancy right it has to
combine the three bits that tell you the
combine the three bits that tell you the
wall uh the wall color with like a flag
wall uh the wall color with like a flag
rather than just having
rather than just having
it
it
yeah I mean this is not an optimal
yeah I mean this is not an optimal
representation I'm trying to come up
representation I'm trying to come up
with something that's not going to take
with something that's not going to take
you you know a full data
you you know a full data
code and that we get like the thing is
code and that we get like the thing is
once you get decent decent policies it's
once you get decent decent policies it's
very easy to start a blading right cuz
very easy to start a blading right cuz
you just swap the observation function
you just swap the observation function
swap the network and it's really easy to
swap the network and it's really easy to
make progress the hardest part of RL is
make progress the hardest part of RL is
getting to the point where you have a
getting to the point where you have a
decent policy to start
decent policy to start
with unsure what map dat would be
missing so that guy the thing that
missing so that guy the thing that
you're missing here is that not
you're missing here is that not
everything in the map is an entity like
everything in the map is an entity like
you can have walls in the map andless
you can have walls in the map andless
you want to also just represent each
you want to also just represent each
like brick of wall like if you have like
like brick of wall like if you have like
a big wall shape in the middle if you
a big wall shape in the middle if you
want to represent each brick of wall as
want to represent each brick of wall as
an entity as well then yeah you can do
an entity as well then yeah you can do
something like that um you're basically
something like that um you're basically
you almost have like a ray casting type
you almost have like a ray casting type
representation you can do that as well
representation you can do that as well
technically yes we can try it I don't
technically yes we can try it I don't
know how I don't know how to make that
know how I don't know how to make that
fast what type of what type well hold on
fast what type of what type well hold on
you didn't tell me I asked you about
you didn't tell me I asked you about
this you didn't tell me well okay I
this you didn't tell me well okay I
didn't ask clearly enough to be fair
didn't ask clearly enough to be fair
that's on me um what are the different
projectiles yeah we can upate that guy
projectiles yeah we can upate that guy
but the thing is the likelihood that
but the thing is the likelihood that
something that is going to work is
something that is going to work is
inversely proportional to how much you
inversely proportional to how much you
complicate the process like initially an
complicate the process like initially an
RL the simpler we get an observation
RL the simpler we get an observation
that's like Mak sense the more likely we
that's like Mak sense the more likely we
are to get a reasonable
are to get a reasonable
Baseline be adding more weapons though
I mean you can
I mean you can
use you can use 16 bits for the things
use you can use 16 bits for the things
if you
if you
want
want
right if you have a ton of different
right if you have a ton of different
weapon types and then you may as well
weapon types and then you may as well
you can put the like the agent types in
you can put the like the agent types in
there as well in 16
there as well in 16
bits not any harder to code
that's about a kilobyte per
observation what do you think about that
bits yeah that that guy is there a
bits yeah that that guy is there a
really easy way to do
really easy way to do
um like bits
um like bits
to bits to bites or whatever in pie
to bits to bites or whatever in pie
torch if we have like if we're using
torch if we have like if we're using
like a bit mask basically can we get
like a bit mask basically can we get
that do a pie torch where each of those
that do a pie torch where each of those
is a float
easily no yes 21 * 21 time 16 bit main
easily no yes 21 * 21 time 16 bit main
OBS yes and then scaler OBS for the
OBS yes and then scaler OBS for the
active drone yes I would say
active drone yes I would say
that not necessarily easy but I do it in
Pokemon not
easy
um that's obnoxious
okay do you have to like div like do you
okay do you have to like div like do you
have to like modulo it or some [ __ ]
have to like modulo it or some [ __ ]
um
um B
Mas is there not a reasonable way of
Mas is there not a reasonable way of
doing it it's fast
where's your
branch it is
branch it is
fast is it fast on the scale of
fast is it fast on the scale of
processing upwards of 500,000
processing upwards of 500,000
observations per
observations per
second which is actually going to be
second which is actually going to be
more than
that I guess if it's a single Vector
that I guess if it's a single Vector
operation then yeah
well yes that's why I asked you because
well yes that's why I asked you because
if it's in Pokemon it doesn't
if it's in Pokemon it doesn't
necessarily have to be fast right I was
necessarily have to be fast right I was
taking that into
account yeah but you're operating on a
account yeah but you're operating on a
scale that's like 100 time slower than
scale that's like 100 time slower than
what we're talking
about Captain um you can use 16 bytes to
about Captain um you can use 16 bytes to
make it easy there's a decent chance
make it easy there's a decent chance
that you're going to get um bandwidth
that you're going to get um bandwidth
bound that's a

Kind: captions
Language: en
I guess we're
I guess we're
live
hi I don't know why I'm streaming this
hi I don't know why I'm streaming this
but
but
uh some small PRS some small stuff to
uh some small PRS some small stuff to
fix and I'll see if I want to do
fix and I'll see if I want to do
anything at the moment
just got back from
just got back from
a 2hour route canal
so okay
so okay
so let me see what this guy did
I hate the auto format stuff because
I hate the auto format stuff because
they're 140 some odd file changes in
they're 140 some odd file changes in
here with almost all of them just being
here with almost all of them just being
deleting [ __ ] white
deleting [ __ ] white
space do not do
this where's the actual hold
this where's the actual hold
on I went through this and made sure it
on I went through this and made sure it
wasn't like somebody inject
wasn't like somebody inject
BS earlier
today let me see if I can find where
today let me see if I can find where
the okay so here's the actual file
the okay so here's the actual file
change in set up.
change in set up.
Pi
um oh does this make any
sense can't you
sense can't you
ignore can
you
where oh
I still have 141 files
changed it just doesn't show you where
changed it just doesn't show you where
it actually is uh it just doesn't show
it actually is uh it just doesn't show
you the changes to wh space made
yeah this is
fine
add what did this guy add with pre
add what did this guy add with pre
commit
I don't want this [ __ ]
here like why
no I wanted the setup changes that he
no I wanted the setup changes that he
made
where's the actual file change I want to
where's the actual file change I want to
see what he did for
see what he did for
Linux I mean for Mac
he said he didn't add rough so what is
this I didn't add rough exploit
okay so this is what he
actually man I don't know why
this is actually like a really obnoxious
this is actually like a really obnoxious
PR
PR
um this has like a good this has a good
um this has like a good this has a good
fix but then
I don't even know if this was needed
I don't even know if this was needed
this is old anyways let me
see what was even changed here
oh previously
hardcoded what the heck is did he even
hardcoded what the heck is did he even
add to this pre-commit hook
how do I let me see
should I just manually merge in his
should I just manually merge in his
setup stuff because I don't want
this
yeah this doesn't make it easier this
yeah this doesn't make it easier this
strictly makes it
harder
for e
let's at least fix
this for
this change I'll take
okay for
okay so
here they literally yeah this is not
here they literally yeah this is not
changed it's so annoying when like
changed it's so annoying when like
format changes are mixed in with a PR
format changes are mixed in with a PR
like
like
this I mean this is like a perfectly
this I mean this is like a perfectly
reasonable nice PR but it's just got
reasonable nice PR but it's just got
like a bunch of opinionated format
like a bunch of opinionated format
changes I don't get the point
man that's like going into somebody's
man that's like going into somebody's
house and then just starting to
house and then just starting to
rearrange their
Furniture who the [ __ ] does
that why is this like this anyways I
thought is t r
oh yeah yeah
oh yeah yeah
yeah it gets renamed here doesn't
it I think he broke my
Linux this breaks Linux doesn't
it dude I think this guy literally broke
it dude I think this guy literally broke
the Linux build too
right yeah this guy totally broke our
right yeah this guy totally broke our
Linux build
stupid it's going to be R include either
stupid it's going to be R include either
way cuz we renamed the damn
package oh wait did he remove
yeah
yeah
he I don't know why he did
this this does not make any sense to me
let me see what else you
changed okay so this is the real the
changed okay so this is the real the
only real change right
uh
yeah we don't have this on Windows
yeah we don't have this on Windows
anyways
then what did he add
here extra link ARS
yes what the [ __ ] what is this
oh do you change anything in
here
no then why why is this collapsed like
no then why why is this collapsed like
this these are identical
yeah this was previously hardcoded but
yeah this was previously hardcoded but
it wasn't causing a breakage cuz you
it wasn't causing a breakage cuz you
renamed the
renamed the
path
um I don't think this works on python
um I don't think this works on python
3.8
3.8
either bump
this we'll try this for
this we'll try this for
now
for e
this seems to
this seems to
work
oops it
oops it
Daniel
Daniel
denial for
what the heck was the thing that called
hey how's it
going oh yeah that guy you Dev on Mac
going oh yeah that guy you Dev on Mac
too does this uh does this fix the
too does this uh does this fix the
latest version on Mac for you like I
latest version on Mac for you like I
just merged uh I just like merged a
just merged uh I just like merged a
small version of that
PR don't do any
PR don't do any
okay I'll let him test it on Mac then
you know that is the one and only thing
you know that is the one and only thing
that I would actually consider getting
that I would actually consider getting
the
the
um uh the GitHub actions for is just
um uh the GitHub actions for is just
because you have to build it on [ __ ]
Mac that's basically the only thing
you have time to help me decide yeah I
you have time to help me decide yeah I
can do that now
can do that now
Captain
um let me take a quick look at
this I definitely don't want the frein
this I definitely don't want the frein
admit Shenanigans from the other
admit Shenanigans from the other
PR so what's this too
you added Mac okay
cool this doesn't ship Wheels right this
cool this doesn't ship Wheels right this
I mean this doesn't ship anything this
I mean this doesn't ship anything this
just runs build test I'll take build
tests this doesn't prevent you from
tests this doesn't prevent you from
[Music]
[Music]
merging wait does this on
merging wait does this on
push on pull
requests no shipping looks very
requests no shipping looks very
sane yeah that's fine that guy what I
sane yeah that's fine that guy what I
don't the only thing I don't want right
don't the only thing I don't want right
is I don't want to add extra steps for
is I don't want to add extra steps for
contributors like ever at all so just
contributors like ever at all so just
have something that sanity checks if the
have something that sanity checks if the
thing builds is
fine you have to set Branch protection
fine you have to set Branch protection
in your
settings oh to prevent it from merging
settings oh to prevent it from merging
yeah we're not doing that it's
yeah we're not doing that it's
fine it's enough to just have the badge
fine it's enough to just have the badge
there so I can see
what does the preview look like for
this let me just merge this for now
what's this look
like no
like no
status so will
this okay so it's
running okay
cool yeah that's nice
cool yeah that's nice
yeah I'll gladly take
yeah I'll gladly take
that thank
you Captain let me take a look at your
you Captain let me take a look at your
thing if uh if that's it for me that guy
thing if uh if that's it for me that guy
let me see what time is it 2:21 okay I
let me see what time is it 2:21 okay I
got
got
another I I have time I just I got to
another I I have time I just I got to
take a [ __ ] ton of tile and all in like
take a [ __ ] ton of tile and all in like
minutes P test Automation and 3 3.12 yes
minutes P test Automation and 3 3.12 yes
um
um
pie test we really don't care
pie test we really don't care
about yeah I like the
about yeah I like the
minimalism I like the minimalism on
this no this is good this is
this no this is good this is
particularly good because it's like
particularly good because it's like
testing Mac is just to pain in the ass
testing Mac is just to pain in the ass
to go build it on a
map uh oceans included without
extras we should it should probably
extras we should it should probably
include like clean orl or whatever by
include like clean orl or whatever by
default since those are like core demos
default since those are like core demos
but I think they should catch just about
but I think they should catch just about
everything with ocean
um Captain hold on let me fix this chat
um Captain hold on let me fix this chat
so I can actually see what the [ __ ] is
so I can actually see what the [ __ ] is
going on
okay what is it that you wanted me to
okay what is it that you wanted me to
look at
Captain is it
here my longer Discord message
okay
concise continuous doesn't matter fully
concise continuous doesn't matter fully
observable doesn't
matter
matter
okay War drones
10 scaler
items most TNN input layers being empty
items most TNN input layers being empty
is fine uh the issue
is fine uh the issue
is passing 10x 21 by
is passing 10x 21 by
21 uh onto the GPU that's just a lot of
21 uh onto the GPU that's just a lot of
data
there are up to 12 floating
there are up to 12 floating
cubes ex that they're one by one Dynamic
bodies don't know how to handle
bodies don't know how to handle
projectiles
[Music]
let's see what you're doing at the
let's see what you're doing at the
moment with this
moment with this
net is do you have your branch link
net is do you have your branch link
somewhere
here let me actually take let me go take
here let me actually take let me go take
this pyl andol real quick
all right I'll check that in a second
[ __ ] much ipren did they give
me oh that's fine 800
[ __ ] 800 milligrams
ibuprofen all right that should prevent
ibuprofen all right that should prevent
me from getting increasingly grumpy over
me from getting increasingly grumpy over
the next 20 minutes
no guarantees
Jesus let me think
I know how to do everything but the
I know how to do everything but the
projectiles just off the top of my
head you could do entity based
how big is entity based
how big is entity based
um let me just calculate how much data
um let me just calculate how much data
you have
here well you're going to need 2D data
here well you're going to need 2D data
for the freaking walls and anyways
right it's extremely hard to play
do we have some screenshots or
do we have some screenshots or
something from the
environment let to see what it looks
environment let to see what it looks
like
you're not doing clustering every step
you're not doing clustering every step
I'll tell you that
damn there's some cool ends here
why don't I see any of your
why don't I see any of your
videos oh is this
it aren't there obstacles though in some
it aren't there obstacles though in some
of the other like it's not just the
of the other like it's not just the
edges of the board right there actually
edges of the board right there actually
there are
there are
walls not just these bricks right there
walls not just these bricks right there
are like maps that have walls right
so the obnoxious thing about doing
so the obnoxious thing about doing
entity based here is you still need comp
entity based here is you still need comp
data for the
data for the
maps so then you'd need both
how would you make a space invader
how would you make a space invader
policy
I mean you should just be able to
I mean you should just be able to
discretize Captain why is it that you
discretize Captain why is it that you
can't just discretize like the bullets
can't just discretize like the bullets
onto the tiles that they occupy
again can you explain to me why you
again can you explain to me why you
can't just
discretize like this TI has a bullet
discretize like this TI has a bullet
this child doesn't have a
this child doesn't have a
bullet they will overlap with drone
so can you get hit by your own
bullets are like bullets unique to like
bullets are like bullets unique to like
their okay so it's literally just yeah
their okay so it's literally just yeah
then this is not that hard
then this is not that hard
man yes T can be multihop which is what
man yes T can be multihop which is what
we're about to I'm about to suggest
we're about to I'm about to suggest
so let me get your message up here hold
so let me get your message up here hold
on I'm going to get you something good
on I'm going to get you something good
it's little patience with me today we're
it's little patience with me today we're
moving a little
moving a little
slowly [ __ ] Christmas Eve 2hour root
slowly [ __ ] Christmas Eve 2hour root
canal all right
I was literally cracking jokes with his
I was literally cracking jokes with his
uh assistant about what a nightmare this
uh assistant about what a nightmare this
one
was where's your long post on this is it
was where's your long post on this is it
oh it's in Dev
du okay
so the thing you have to
so the thing you have to
understand you don't have this tile
understand you don't have this tile
representation internally do you it's
representation internally do you it's
just all continuous right
like does this grid exist as a concept
like does this grid exist as a concept
in your engine code or is this purely a
in your engine code or is this purely a
facet of
facet of
observations walls and weapons okay but
observations walls and weapons okay but
you're not like not everything is on
you're not like not everything is on
this grid right like the entity
this grid right like the entity
positions are just continuous or are
positions are just continuous or are
those
actually okay
interesting well my point is like you
interesting well my point is like you
can have like like a tile
can have like like a tile
here right and then you can have like an
here right and then you can have like an
agent
agent
here and this can have a bullet on it
here and this can have a bullet on it
and this can have a bullet on it and
and this can have a bullet on it and
this can have a bullet on it and it
this can have a bullet on it and it
doesn't
doesn't
matter okay you can have this can be
matter okay you can have this can be
whatever you want it to be so what you
whatever you want it to be so what you
can do here right is if you're going to
can do here right is if you're going to
think of each of these tiles as an array
um so it's probably going to be multi
um so it's probably going to be multi
hot or at
hot or at
least ideally what you do is you pack it
least ideally what you do is you pack it
kind of tight and then you make the
kind of tight and then you make the
multi hot in the forward P the
policy
so let's
say the first one of these this is going
say the first one of these this is going
to be a series of variables of uh
to be a series of variables of uh
variables so we can do
variables so we can do
like
empty uh the bot there can be multiple
empty uh the bot there can be multiple
bots on the same tile though
right but there can't be bots on a wall
I can't I got to
type so we can do like empty
can't pass the walls for each
can't pass the walls for each
other yeah but the the bounce
check the bounce check on drones can you
check the bounce check on drones can you
have two drones on the same
tile you can right
can maybe okay I've got it in my head
can maybe okay I've got it in my head
let me think how I'm going to get this
let me think how I'm going to get this
out on paper to you
so this
is the first number is going to be
is the first number is going to be
multi- discret of two and then it's
multi- discret of two and then it's
going to be 0al
empty and
empty and
[Music]
[Music]
then there's no not a good way to do
then there's no not a good way to do
this as as
a okay I'll do the less efficient
a okay I'll do the less efficient
representation first and then I'll try
representation first and then I'll try
to pair it down so
to pair it down so
like this bit here can be
like this bit here can be
zero this is like has
wall one
two Dot and then we have like agent
one two and this one can be
bullet so I think we can very
bullet so I think we can very
easily we could very easily make
easily we could very easily make
something like that
um and then it's just a matter of
um and then it's just a matter of
compressing this to a better
representation how bad would that
representation how bad would that
be how many agents are there going to
be yes it can of course be a and eight
be yes it can of course be a and eight
in fact we can pack this into
in fact we can pack this into
bits for
Max I don't think it fits in I don't
Max I don't think it fits in I don't
think it fits in8 bits
think it fits in8 bits
though cuz if they're three types of
though cuz if they're three types of
walls and four agents
oh that's what you meant this whole
oh that's what you meant this whole
thing is a single U and dat but then
thing is a single U and dat but then
there's only eight channels we need wall
there's only eight channels we need wall
bullet three
bullet three
walls four agents where one bit
walls four agents where one bit
over oh wait no wait it's and the boxes
over oh wait no wait it's and the boxes
too are there different types of
too are there different types of
boxes how many different things are
boxes how many different things are
there Captain how many channels do we
there Captain how many channels do we
need for this
same type as
same type as
walls they're not walls though we don't
walls they're not walls though we don't
want to tell the agents that the
want to tell the agents that the
floating cubes are walls
so like naive naive
so like naive naive
representation walls
representation walls
are so
are so
walls this is three three variables
walls this is three three variables
three yeah this is three discreet of
three yeah this is three discreet of
three or present three three
three or present three three
bits and then we
bits and then we
do
do
agent orbits
box three
bits
bullet one bit
yeah and then we have the scaler infos
yeah and then we have the scaler infos
per agent
[ __ ] do you need to know all that info
[ __ ] do you need to know all that info
about the opponent agents or just about
about the opponent agents or just about
your own agent like what are the what
your own agent like what are the what
are the infos
position velocity
how much do we care about knowing that
how much do we care about knowing that
about
opponents them to be fully
observable the m is never really
observable the m is never really
like it's not fully observable at all if
like it's not fully observable at all if
you're doing any of the type of stuff
you're doing any of the type of stuff
that we're doing at the moment like
that we're doing at the moment like
putting it on a grid you're losing
putting it on a grid you're losing
information discretizing it
information discretizing it
to begin
with okay so if you really wanted to
with okay so if you really wanted to
be if you wanted to be finicky about it
here all
here all
positions I don't know if that does very
positions I don't know if that does very
much
walls agents
walls agents
bullets what if we just took this
out we could make this one
out we could make this one
channel so three walls
channel so three walls
One
One
agent now this fits
agent now this fits
in this fix fits in one
in this fix fits in one
bite so
bite so
bytes get out of here you dumb twitch
bot um so that's 450 bytes which is
bot um so that's 450 bytes which is
actually a
actually a
reasonable reasonable
size well this is what I'm saying is
size well this is what I'm saying is
it's probably hybrid let hold on let me
it's probably hybrid let hold on let me
get my ideas out here that guy
get my ideas out here that guy
um and then there are four agents you
um and then there are four agents you
said with 10 attributes
each position velocity let's just give
each position velocity let's just give
you floats for
you floats for
those so
this is
10 and this is
10 and this is
four so
four so
bytes if their
floats total OB size is around
700 700 bytes
now we don't have infrastructure for
now we don't have infrastructure for
this but because it's fully
this but because it's fully
observable
observable
um well actually you need to know what
um well actually you need to know what
agent you are don't
you random number of entities could work
you random number of entities could work
what I what do you mean that I don't
what I what do you mean that I don't
know what that means that
guy yeah I I understand that Captain let
guy yeah I I understand that Captain let
me think
I mean that's just one extra number to
I mean that's just one extra number to
be fair
you know why don't for now cuz here's
you know why don't for now cuz here's
the thing Captain I know how you can do
the thing Captain I know how you can do
it you're just going to what you would
it you're just going to what you would
do is you would just pass the index of
do is you would just pass the index of
your agent and you would key it against
your agent and you would key it against
the four or the however many entities
the four or the however many entities
you can observe around you and then um
you can observe around you and then um
you would actually be able to deploy
you would actually be able to deploy
this against a different number of
this against a different number of
Agents as well if you do it that way but
Agents as well if you do it that way but
I think for now what you should do is
I think for now what you should do is
you should just
you should just
do you should let like do the 450 or
do you should let like do the 450 or
whatever and then pass the self Vector
whatever and then pass the self Vector
so that's about 500
so that's about 500
bytes something like take 25 random
bytes something like take 25 random
entities from the map
what in the
what in the
hell well that's a crazy idea
um so the thing that guy is that
um so the thing that guy is that
that all that does is you still you have
that all that does is you still you have
just a pure entity
just a pure entity
representation and it doesn't solve the
representation and it doesn't solve the
architecture problem because you're
architecture problem because you're
still not getting map data from that
so you basically just have an incomplete
so you basically just have an incomplete
representation that doesn't include the
representation that doesn't include the
map data and you don't have all the
map data and you don't have all the
entities and you still need an entity
entities and you still need an entity
based attentional architecture which is
based attentional architecture which is
a
pain Captain I would suggest that you
pain Captain I would suggest that you
just do
just do
um I bet you can get some pretty cool
um I bet you can get some pretty cool
looking policies if you just give the
looking policies if you just give the
self vector and then a 21x 21 U into 8
self vector and then a 21x 21 U into 8
map that you just unpack you just un bit
map that you just unpack you just un bit
pack that should be like a couple lines
pack that should be like a couple lines
of code I would hope if pie torches at
of code I would hope if pie torches at
all
all
sayane
sayane
um what do you think about this because
um what do you think about this because
you do have to be careful with your
you do have to be careful with your
bandwidth you said it was like 780
bandwidth you said it was like 780
Floats or whatever so I just cut I just
Floats or whatever so I just cut I just
cut your observation data uh your packet
cut your observation data uh your packet
size down by like a factor of eight as
size down by like a factor of eight as
well
welcome YouTube
folks happy Christmas Eve Merry
folks happy Christmas Eve Merry
Christmas is a Merry Christmas Eve I
Christmas is a Merry Christmas Eve I
don't
know we're debugging some observations
in un and H three bits for wall
in un and H three bits for wall
types one bits for agents as agent
types one bits for agents as agent
present three bits so it's three bits
present three bits so it's three bits
for wall type one bit for agent
for wall type one bit for agent
present and this is yeah so one bit for
present and this is yeah so one bit for
agent
agent
present uh three bits
present uh three bits
for box type present
for box type present
so if there's a box on a
so if there's a box on a
cell what color and you know there could
cell what color and you know there could
even be multiple on the same cell
even be multiple on the same cell
technically and then
technically and then
um the bullet uh bullet
um the bullet uh bullet
present couldn't that be one bit if
present couldn't that be one bit if
Wallace I thought you said that
the well yeah but then the network has
the well yeah but then the network has
to do something fancy right it has to
to do something fancy right it has to
combine the three bits that tell you the
combine the three bits that tell you the
wall uh the wall color with like a flag
wall uh the wall color with like a flag
rather than just having
rather than just having
it
it
yeah I mean this is not an optimal
yeah I mean this is not an optimal
representation I'm trying to come up
representation I'm trying to come up
with something that's not going to take
with something that's not going to take
you you know a full data
you you know a full data
code and that we get like the thing is
code and that we get like the thing is
once you get decent decent policies it's
once you get decent decent policies it's
very easy to start a blading right cuz
very easy to start a blading right cuz
you just swap the observation function
you just swap the observation function
swap the network and it's really easy to
swap the network and it's really easy to
make progress the hardest part of RL is
make progress the hardest part of RL is
getting to the point where you have a
getting to the point where you have a
decent policy to start
decent policy to start
with unsure what map dat would be
missing so that guy the thing that
missing so that guy the thing that
you're missing here is that not
you're missing here is that not
everything in the map is an entity like
everything in the map is an entity like
you can have walls in the map andless
you can have walls in the map andless
you want to also just represent each
you want to also just represent each
like brick of wall like if you have like
like brick of wall like if you have like
a big wall shape in the middle if you
a big wall shape in the middle if you
want to represent each brick of wall as
want to represent each brick of wall as
an entity as well then yeah you can do
an entity as well then yeah you can do
something like that um you're basically
something like that um you're basically
you almost have like a ray casting type
you almost have like a ray casting type
representation you can do that as well
representation you can do that as well
technically yes we can try it I don't
technically yes we can try it I don't
know how I don't know how to make that
know how I don't know how to make that
fast what type of what type well hold on
fast what type of what type well hold on
you didn't tell me I asked you about
you didn't tell me I asked you about
this you didn't tell me well okay I
this you didn't tell me well okay I
didn't ask clearly enough to be fair
didn't ask clearly enough to be fair
that's on me um what are the different
projectiles yeah we can upate that guy
projectiles yeah we can upate that guy
but the thing is the likelihood that
but the thing is the likelihood that
something that is going to work is
something that is going to work is
inversely proportional to how much you
inversely proportional to how much you
complicate the process like initially an
complicate the process like initially an
RL the simpler we get an observation
RL the simpler we get an observation
that's like Mak sense the more likely we
that's like Mak sense the more likely we
are to get a reasonable
are to get a reasonable
Baseline be adding more weapons though
I mean you can
I mean you can
use you can use 16 bits for the things
use you can use 16 bits for the things
if you
if you
want
want
right if you have a ton of different
right if you have a ton of different
weapon types and then you may as well
weapon types and then you may as well
you can put the like the agent types in
you can put the like the agent types in
there as well in 16
there as well in 16
bits not any harder to code
that's about a kilobyte per
observation what do you think about that
bits yeah that that guy is there a
bits yeah that that guy is there a
really easy way to do
really easy way to do
um like bits
um like bits
to bits to bites or whatever in pie
to bits to bites or whatever in pie
torch if we have like if we're using
torch if we have like if we're using
like a bit mask basically can we get
like a bit mask basically can we get
that do a pie torch where each of those
that do a pie torch where each of those
is a float
easily no yes 21 * 21 time 16 bit main
easily no yes 21 * 21 time 16 bit main
OBS yes and then scaler OBS for the
OBS yes and then scaler OBS for the
active drone yes I would say
active drone yes I would say
that not necessarily easy but I do it in
Pokemon not
easy
um that's obnoxious
okay do you have to like div like do you
okay do you have to like div like do you
have to like modulo it or some [ __ ]
have to like modulo it or some [ __ ]
um
um B
Mas is there not a reasonable way of
Mas is there not a reasonable way of
doing it it's fast
where's your
branch it is
branch it is
fast is it fast on the scale of
fast is it fast on the scale of
processing upwards of 500,000
processing upwards of 500,000
observations per
observations per
second which is actually going to be
second which is actually going to be
more than
that I guess if it's a single Vector
that I guess if it's a single Vector
operation then yeah
well yes that's why I asked you because
well yes that's why I asked you because
if it's in Pokemon it doesn't
if it's in Pokemon it doesn't
necessarily have to be fast right I was
necessarily have to be fast right I was
taking that into
account yeah but you're operating on a
account yeah but you're operating on a
scale that's like 100 time slower than
scale that's like 100 time slower than
what we're talking
about Captain um you can use 16 bytes to
about Captain um you can use 16 bytes to
make it easy there's a decent chance
make it easy there's a decent chance
that you're going to get um bandwidth
that you're going to get um bandwidth
bound that's a
