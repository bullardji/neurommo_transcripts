Kind: captions
Language: en
should be live
here what is wrong with my
here what is wrong with my
windows all right um I've been out for a
windows all right um I've been out for a
few days because I've been doing a lot
few days because I've been doing a lot
of Dev on stream to the point there was
of Dev on stream to the point there was
so much Dev I just needed to focus in on
so much Dev I just needed to focus in on
stuff for a few days and there's still
stuff for a few days and there's still
quite a bit left to do but it's in a
quite a bit left to do but it's in a
little bit of a better place now um at
little bit of a better place now um at
least it was until this new project
least it was until this new project
randomly cropped up
randomly cropped up
um so let me talk a little bit about
um so let me talk a little bit about
what's going on here CU there's there's
what's going on here CU there's there's
something pretty cool that we're
something pretty cool that we're
starting on and it'll be easier if I can
starting on and it'll be easier if I can
just show the
code all right puffer
code all right puffer
lib
puffer and
puffer and
TCG oops I got to pull this
TR right
TR right
so what we have here is a very
so what we have here is a very
early not even working prototype I had a
early not even working prototype I had a
a somewhat working prototype before but
a somewhat working prototype before but
I have to refactor it keep up the work
I have to refactor it keep up the work
thank you thank you I'll say so what
thank you thank you I'll say so what
we're doing today
we're doing today
here um I I figured that I had a little
here um I I figured that I had a little
bit of something I could stream uh
bit of something I could stream uh
there's still a lot of stuff I got to
there's still a lot of stuff I got to
finish off stream this the next update
finish off stream this the next update
to puffer is literally 10,000 lines of C
to puffer is literally 10,000 lines of C
it's it's going to Triple the size of
it's it's going to Triple the size of
the library and puffer is going to go
the library and puffer is going to go
from 98% python to like 60 70% c
um hold on let me get to the
repo where is this
repo where is this
perer lib
perer lib
environments
environments
okay do see
okay do see
so what happened here is I had all these
so what happened here is I had all these
environments that I was working on right
environments that I was working on right
and they were in kind of a good spot and
and they were in kind of a good spot and
I was kind of ready to lock this set of
I was kind of ready to lock this set of
environments in for the next update uh
environments in for the next update uh
but then randomly we had like five
but then randomly we had like five
different people get interested in
different people get interested in
building a trading card game environment
building a trading card game environment
for puffer uh and generally when you get
for puffer uh and generally when you get
people interested in doing stuff right
people interested in doing stuff right
you have to have something that they can
you have to have something that they can
work on very quickly before they get
work on very quickly before they get
distracted and you lose momentum so what
distracted and you lose momentum so what
I've been doing over the last couple of
I've been doing over the last couple of
days
days
is I've been working on this little
is I've been working on this little
prototype it's based Loosely off of uh
prototype it's based Loosely off of uh
Magic the Gathering um if we get sued
Magic the Gathering um if we get sued
it'll be based off of a different card
it'll be based off of a different card
game right uh it doesn't really matter
game right uh it doesn't really matter
like it's for AI to play anyways but the
like it's for AI to play anyways but the
idea is just to have some sort of TCG
idea is just to have some sort of TCG
environment for RL that has a lot of the
environment for RL that has a lot of the
complexity in it and we have
complexity in it and we have
contributors interested in this we've
contributors interested in this we've
got one formal uh research collab with
got one formal uh research collab with
another lab we've got a guy that's been
another lab we've got a guy that's been
already contributing a bunch of M who's
already contributing a bunch of M who's
interested in this and we've got a
interested in this and we've got a
couple others as well now so people want
couple others as well now so people want
to do this and really the thing that I
to do this and really the thing that I
want to get
want to get
today I want to ship a working minimal
today I want to ship a working minimal
prototype that feels fine to play that
prototype that feels fine to play that
has just the basic elements of a game so
has just the basic elements of a game so
not all the triggers not all of like the
not all the triggers not all of like the
fancy card effects and stuff but just
fancy card effects and stuff but just
like you can play a land I guess a Mana
like you can play a land I guess a Mana
card whatever you can play your cards
card whatever you can play your cards
you can attack you can block that type
you can attack you can block that type
of stuff uh I think that that whole
of stuff uh I think that that whole
thing is doable in about 500 lines of
thing is doable in about 500 lines of
code and I got very very close to doing
code and I got very very close to doing
that um but the way that I built it it
that um but the way that I built it it
the code was just getting too
the code was just getting too
complicated and had too much branching
complicated and had too much branching
for people to be able to use it so I
for people to be able to use it so I
came up with a weird idea on how to make
came up with a weird idea on how to make
it better and uh that's what we're going
it better and uh that's what we're going
to be doing right
to be doing right
now welcome back sorry was traveling to
now welcome back sorry was traveling to
Costa Rica but another the loop this
Costa Rica but another the loop this
this is awesome to catch well I mean
this is awesome to catch well I mean
I've been out for a few days as well
I've been out for a few days as well
I've been I've been doing a combination
I've been I've been doing a combination
of Devon
meetings um you know puffer is a company
meetings um you know puffer is a company
and we are starting to look for collabs
and we are starting to look for collabs
and clients and things so if you got
and clients and things so if you got
companies that want some help with RL
companies that want some help with RL
stuff you let me know but uh yeah it's
stuff you let me know but uh yeah it's
been there's been a bunch of meetings
been there's been a bunch of meetings
and there's been a bunch of
and there's been a bunch of
Dev it's been productive but definitely
Dev it's been productive but definitely
busy
busy
so let's talk a little bit about what
so let's talk a little bit about what
I'm wanting to do here so we've got this
I'm wanting to do here so we've got this
TCG environment thing uh you have a card
TCG environment thing uh you have a card
array that can be used to represent a
array that can be used to represent a
deck a hand the board whatever you've
deck a hand the board whatever you've
got Health you've got Mana got whether
got Health you've got Mana got whether
you've played a land this turn you've
you've played a land this turn you've
got some data that tells you who's
got some data that tells you who's
attacking and who's
attacking and who's
defending few other variables and then
defending few other variables and then
the stuff you'd expect
the stuff you'd expect
here the thing that's tricky and also I
here the thing that's tricky and also I
should move this
should move this
like this
yeah and you'll be able to see a little
yeah and you'll be able to see a little
bit you see how much branching there is
bit you see how much branching there is
here and down here it's even uh it's
here and down here it's even uh it's
even worse so that's the
even worse so that's the
renderer I let me get an image of this
renderer I let me get an image of this
as well because this doesn't build right
as well because this doesn't build right
now but I have on the Discord I posted
now but I have on the Discord I posted
in the puffer Discord so you can get us
in the puffer Discord so you can get us
just a sense of what this thing looks
just a sense of what this thing looks
like it's very very basic
oh wow this guy's made his uh his go
oh wow this guy's made his uh his go
environment awesome we got all these
environment awesome we got all these
contributors making cool
contributors making cool
stuff hey folks you guys can hop in and
stuff hey folks you guys can hop in and
just like build stuff if you want like a
just like build stuff if you want like a
lot of these people have no prior RL
lot of these people have no prior RL
experience it's really just if you can
experience it's really just if you can
code like if you can code you can make
code like if you can code you can make
these
these
environments cuz puffer handles a lot of
environments cuz puffer handles a lot of
the infra stuff for you let me see if I
the infra stuff for you let me see if I
can find the TCG screenshot that I
can find the TCG screenshot that I
dropped in Dev here
before this it maybe I put it in
before this it maybe I put it in
gen okay yeah here's the TCG prototype
gen okay yeah here's the TCG prototype
so you've got cards they've got stats
so you've got cards they've got stats
they've got lands you can play them to
they've got lands you can play them to
the board right and then you can attack
the board right and then you can attack
and block and stuff uh so we want this
and block and stuff uh so we want this
working today cleanly in a way that just
working today cleanly in a way that just
feels reasonable to play and you feel
feels reasonable to play and you feel
like you you could play something with
like you you could play something with
it cool CAU never caught your stream
it cool CAU never caught your stream
live before love the project thank you
live before love the project thank you
yeah I haven't been streaming the last
yeah I haven't been streaming the last
few days cuz like the dev has kind of
few days cuz like the dev has kind of
been a bit much and also there's one
been a bit much and also there's one
there's one new environment that is not
there's one new environment that is not
announced yet that will be open source
announced yet that will be open source
but I want it to be done and sort of
but I want it to be done and sort of
like release it all at once uh that's
like release it all at once uh that's
going to be like a 4,000 line commit on
going to be like a 4,000 line commit on
its own so there a lot of code and also
its own so there a lot of code and also
just too many damn
just too many damn
meetings but hey come got to get Revenue
right and also I mean there are a lot of
right and also I mean there are a lot of
cool people doing stuff with ourl that's
cool people doing stuff with ourl that's
fun to talk to but so much def needs to
fun to talk to but so much def needs to
get
done I only got so many hours in the
day yeah you can see what a mess this is
day yeah you can see what a mess this is
right like this is in a while loop and
right like this is in a while loop and
like there all these phases and you can
like there all these phases and you can
see all this branching stuff and you can
see all this branching stuff and you can
see all these print statements with me
see all these print statements with me
trying to debug this mess um is this the
trying to debug this mess um is this the
Moa M oh no this is a new one uh the Moa
Moa M oh no this is a new one uh the Moa
is still that's still around we're still
is still that's still around we're still
going to work on this this is just the
going to work on this this is just the
skeletal prototype of a TCG trading card
skeletal prototype of a TCG trading card
game uh this is what it looked like
game uh this is what it looked like
before I broke stuff we want to get it
before I broke stuff we want to get it
back to looking like this maybe with a
back to looking like this maybe with a
couple extra things and we want it to be
couple extra things and we want it to be
like nice clean code that people can
like nice clean code that people can
build off of because I think this one is
build off of because I think this one is
going to be largely Community
going to be largely Community
Development Le like we have enough
Development Le like we have enough
contributors that want to work on this
contributors that want to work on this
project that if I get them a skeleton of
project that if I get them a skeleton of
it like a prototype they'll be able to
it like a prototype they'll be able to
take it from there with my input but I
take it from there with my input but I
really need to get a clean starter code
really need to get a clean starter code
for them pretty much so that's what
for them pretty much so that's what
we're doing today uh I'm going to open
we're doing today uh I'm going to open
up I'm going to open up like a draw tool
up I'm going to open up like a draw tool
because one of the reasons I jumped on
because one of the reasons I jumped on
stream is because I wanted to just talk
stream is because I wanted to just talk
through my thoughts on how to design
through my thoughts on how to design
this cuz I got a little stuck
this cuz I got a little stuck
yesterday and I I know usually I can
yesterday and I I know usually I can
figure stuff out if I just spend some
figure stuff out if I just spend some
time talk through it on
time talk through it on
stream not this
stream not this
one yeah this
one okay
so I
okay
okay
so with the TCG
so with the TCG
right you've got
right you've got
like the key
like the key
elements excal draw is that
better
better
cool uh hold Mouse wheel
cool uh hold Mouse wheel
or space bar while
or space bar while
dragging
okay where do I
draw okay
cool how do I set this thing
whatever we'll do this on white for now
um so with the TCG you have like your
um so with the TCG you have like your
deck that you draw from right you've got
deck that you draw from right you've got
your
your
[Music]
[Music]
hand you've got your board State it's
hand you've got your board State it's
like maybe something like this which is
like maybe something like this which is
your board the opponent's board they've
your board the opponent's board they've
got their
got their
[Music]
[Music]
hand their deck and then there's also
hand their deck and then there's also
like graveyard or whatever
like graveyard or whatever
right and the key thing here is that
right and the key thing here is that
there are a ton of phases and there's
there are a ton of phases and there's
like branching logic and you need to
like branching logic and you need to
figure out when you actually want to
figure out when you actually want to
return it to the user it's the tricky
return it to the user it's the tricky
part cuz like so you there's like draw
part cuz like so you there's like draw
right
and then once you draw okay this is
and then once you draw okay this is
actually kind of nice that the way this
actually kind of nice that the way this
feels this is funny um so you have draw
feels this is funny um so you have draw
phase and then
phase and then
like so once you draw right you have to
like so once you draw right you have to
be able to play your cards right so then
be able to play your cards right so then
there's like a play
there's like a play
Phase then there's like attack
TCG is a trading card game so magic the
TCG is a trading card game so magic the
Gathering Hearthstone Legends of Runa
Gathering Hearthstone Legends of Runa
one of
those the thing that's really tricky
those the thing that's really tricky
with these phases is that um they're
with these phases is that um they're
kind of
kind of
conditional so
like let's say that you draw your card
like let's say that you draw your card
right but then there aren't any cards
right but then there aren't any cards
cards that you can play then what you
cards that you can play then what you
want to do is you want to skip
want to do is you want to skip
potentially straight to the attack phase
potentially straight to the attack phase
and if there is nothing that you can
and if there is nothing that you can
attack with then you skip you know over
attack with then you skip you know over
like this but if there's a card that you
like this but if there's a card that you
can play right but you can't attack then
can play right but you can't attack then
maybe you skip down like this so it's
maybe you skip down like this so it's
like this chain of events is kind of
like this chain of events is kind of
weird and it's very difficult to express
weird and it's very difficult to express
this uh in typical branching logic so
this uh in typical branching logic so
what I was going to do is I was going to
what I was going to do is I was going to
have there be an explicit call stack oh
have there be an explicit call stack oh
and by the way there are a lot of things
and by the way there are a lot of things
that do this because later on when we
that do this because later on when we
start implementing cards like there are
start implementing cards like there are
cards that will add essentially
cards that will add essentially
stages into this stack of of things as
stages into this stack of of things as
well so what I was thinking is we have
well so what I was thinking is we have
like this explicit call
like this explicit call
stack right where we go
stack right where we go
like uh
draw and then when this gets called you
draw and then when this gets called you
know this is going to put onto the next
know this is going to put onto the next
one this will put
play and then you draw so then you just
play and then you draw so then you just
have
play and then if you actually need uh if
play and then if you actually need uh if
you can't attack or whatever like this
you can't attack or whatever like this
thing will check basically for what it
thing will check basically for what it
puts onto the call stack next
for
instance and then that actually will let
you and then if each of these functions
you and then if each of these functions
returns like a a code or something it
returns like a a code or something it
can tell us whether we're done right
now so basically we have these functions
now so basically we have these functions
they can get chained together in a nice
they can get chained together in a nice
Loop and we will be able to tell when um
Loop and we will be able to tell when um
when we're ready to return control to
when we're ready to return control to
the user or not I think that this design
the user or not I think that this design
works I think that this is how you do a
TCG I think
so let's try this because this is what I
so let's try this because this is what I
started implementing just very very
started implementing just very very
briefly
so we have this play
Phase and
then okay I think I need to just like
then okay I think I need to just like
move all these things into their own
functions this
attack uh these also need to know your
attack uh these also need to know your
action I
action I
believe yeah so let's do
this so each of these goes into their
this so each of these goes into their
own function
block and then I think we're going to
block and then I think we're going to
get a pretty
get a pretty
clean like main phase logic out of this
clean like main phase logic out of this
maybe
it's kind of hard to tell still whether
it's kind of hard to tell still whether
this will be the way to do
it this still feels very doable though
it this still feels very doable though
it's like maybe slightly more
it's like maybe slightly more
complicated than I thought originally
complicated than I thought originally
but like really still not that
bad okay
bad okay
so when you call step here
I think we don't do any of this pointer
I think we don't do any of this pointer
Shenanigans and we just kind of write
out we just write out the phases
yeah I do actually have to grab the
yeah I do actually have to grab the
reset method from uh up
reset method from uh up
top because you'll see in a second reset
top because you'll see in a second reset
actually does have to call step the way
actually does have to call step the way
I'm doing it now
folks this is this is a project that
folks this is this is a project that
we're going to need contributors on as
we're going to need contributors on as
well like as soon as I get this
well like as soon as I get this
prototype done hopefully today uh it's
prototype done hopefully today uh it's
going to basically be on the community
going to basically be on the community
to like add stuff to
this the code will ideally be much
this the code will ideally be much
cleaner though before I hand that
over okay so here's the reset
over okay so here's the reset
uh we don't like this draw phase thing
uh we don't like this draw phase thing
here at all oh no this is fine this is
here at all oh no this is fine this is
just drawing the initial
cards phase draw I don't think we even
cards phase draw I don't think we even
need phase indicators anymore do
need phase indicators anymore do
we I don't think
so I think we literally get to just do
this we also probably should just make
this we also probably should just make
some like
stack just we should make some stack
stack just we should make some stack
thing just explicitly just so I don't
thing just explicitly just so I don't
mess it
mess it
up let's just do um
I don't know
I don't know
stack where I put
this ah right here
call in
call in
action PCG and int okay and then what
action PCG and int okay and then what
we'll do is type death
we'll do is type death
Dr
stack uh and then this is going to
have this is just going to be
have this is just going to be
call uh data of Stack
call uh data of Stack
size and then this is going to have
size and then this is going to have
int uh
int uh
idx right and then we'll just do
void
void
back uh
back uh
push it's going to
be probably can just do like this push
be probably can just do like this push
back St stack and then it's going to
back St stack and then it's going to
have
have
all
function
function
seert that we have room in the stack
we add this yep and we increment the
index yeah that's easy right minus equal
index yeah that's easy right minus equal
one and then we return the thing from
one and then we return the thing from
the
the
stack and we actually don't even need to
stack and we actually don't even need to
delete stuff from the stack because we
delete stuff from the stack because we
just use the indices basically to keep
just use the indices basically to keep
track of stuff so this is very
track of stuff so this is very
nice um very very basic probably don't
nice um very very basic probably don't
even need that uh I could do it manually
even need that uh I could do it manually
every time but like that's kind kind of
every time but like that's kind kind of
fine
right okay let's go to our
right okay let's go to our
TCG and then we'll just do right here
TCG and then we'll just do right here
this is going to be
this is going to be
stack
stack kind of
stack kind of
nice now we go to our step
nice now we go to our step
function reset
base draw yeah so we push draw to the
base draw yeah so we push draw to the
stack and then we call a step on the
stack and then we call a step on the
environment
yes and
then we can do uh all
then we can do uh all
function is going to be popped from the
function is going to be popped from the
stack
int
code
code
uh
user do I want this to be an inable
I think this can be a bull
right if return to user
return this is literally it this is
return this is literally it this is
going to be the whole logic of the game
going to be the whole logic of the game
is it's just going to be doing stuff
is it's just going to be doing stuff
like
like
this and then these function should be
this and then these function should be
able to just grab whatever the next
able to just grab whatever the next
thing is and put them on the stack
thing is and put them on the stack
I don't know if this design is actually
I don't know if this design is actually
a good idea yet but uh I think this is
a good idea yet but uh I think this is
probably what we
probably what we
want
yeah okay
yeah okay
so if we look at it this
so if we look at it this
way goes to BU
we have phase
play in
action so you return true is return to
action so you return true is return to
user
just because this is going to I don't
just because this is going to I don't
even know if this is smart but I'm going
even know if this is smart but I'm going
to do one thing real
quick I don't know if this is true I
quick I don't know if this is true I
mean I don't know if this is smart
mean I don't know if this is smart
but I think that this will prevent me
but I think that this will prevent me
from doing dumb
from doing dumb
things uh so this is going to
things uh so this is going to
be return to
user so you see what I'm trying to do
user so you see what I'm trying to do
here is I'm trying to set up like when
here is I'm trying to set up like when
like all these functions that get called
like all these functions that get called
in the stack some of them say Hey you
in the stack some of them say Hey you
know you took an invalid action or you
know you took an invalid action or you
know the user needs to make a decision
know the user needs to make a decision
or whatever those are going to break the
or whatever those are going to break the
whole call chain and get the next
action and wait for the user to like
action and wait for the user to like
click something or whatever or the agent
click something or whatever or the agent
to make an action but some of them don't
to make an action but some of them don't
some of them just want to grab the next
function okay so this is return to user
function okay so this is return to user
then this is
then this is
n or this is push
n or this is push
phase attack
phase attack
right and then you return to the
stack I like
this this is going to take quite a bit
this this is going to take quite a bit
of bidding though
and then what do we doing here okay this
and then what do we doing here okay this
is determining whether we can play any
is determining whether we can play any
cards right
and this is
and this is
tapping figuring out how many lands you
tapping figuring out how many lands you
can
tap oh yeah and then we have this
tap oh yeah and then we have this
absolutely gross thing here right
I think I'm going to do one another
I think I'm going to do one another
thing here as
well right CU I need to
know do all these need an
action we'll handle that later yeah
action we'll handle that later yeah
we'll handle that later so if you hit
I think we remove
I think we remove
this this is going to return to the
this this is going to return to the
user this returns to the stack
and I don't know why we have this as
and I don't know why we have this as
action enter
either yeah this untap step is in the
either yeah this untap step is in the
wrong spot anyways
yeah this is totally in the wrong
spot
so I think we take
this and we make uh an untap phase
this and we make uh an untap phase
explicitly right
tap you do need
this these are going to drive me
this these are going to drive me
uh yeah these things are going going to
uh yeah these things are going going to
drive me nuts I got to figure out a way
drive me nuts I got to figure out a way
around having to do
this go through the
board D Mana
board D Mana
zero tap is false
turn untap happens before draw
right we do
right we do
push yeah it does okay so this is going
push yeah it does okay so this is going
to be push
to be push
draw and then this is going to be return
draw and then this is going to be return
to
stack hi sir wanted to learn
stack hi sir wanted to learn
ml so there's no entry level
ml so there's no entry level
jobs data analyst need your
jobs data analyst need your
job yeah it's
not yeah there there's not I mean there
not yeah there there's not I mean there
are no entry-level jobs in rocket
are no entry-level jobs in rocket
science either right and like yeah
science either right and like yeah
applied ml's not exactly rocket science
applied ml's not exactly rocket science
science anymore it's a lot easier than
science anymore it's a lot easier than
it used to be but you still need to
it used to be but you still need to
learn some things uh for sure so really
learn some things uh for sure so really
it depends on where you are right like
it depends on where you are right like
if you're in University and you're smart
if you're in University and you're smart
studying things then yeah you can do
studying things then yeah you can do
stuff in ml um it really depends on your
stuff in ml um it really depends on your
situation
[Music]
some like applied AI team jobs are out
some like applied AI team jobs are out
of undergrad a lot of them want like a
of undergrad a lot of them want like a
master's and then their research jobs
master's and then their research jobs
are generally
PhD University business
information yeah ml is going to get much
information yeah ml is going to get much
more on the technical side very quickly
more on the technical side very quickly
um again like applied
um again like applied
stuff is not as much but like there's
stuff is not as much but like there's
still some level of mathematics um and
still some level of mathematics um and
programming right some quite substantial
programming right some quite substantial
level of that
level of that
so I it's there's no prerequisite to
so I it's there's no prerequisite to
learn ml right so like I the the best
learn ml right so like I the the best
thing you can do is just like very
thing you can do is just like very
quickly start trying some up some stuff
quickly start trying some up some stuff
out and seeing if you actually like
out and seeing if you actually like
doing
doing
it like you can very very quickly get a
it like you can very very quickly get a
sense for that that's I mean that's
sense for that that's I mean that's
probably the best recommendation I can
probably the best recommendation I can
give
give
you like there's so much material out
you like there's so much material out
there nowadays for just like getting a
there nowadays for just like getting a
sense of some stuff very quickly and see
sense of some stuff very quickly and see
if you actually like this stuff right
yeah no worries let me
see like what TCG are you trying to
see like what TCG are you trying to
implement yeah it's something pretty
implement yeah it's something pretty
close to Magic Ramy
and I had a working prototype mostly
and I had a working prototype mostly
working but
working but
um the structure of it just wasn't it
um the structure of it just wasn't it
wasn't where it needed to be in order
wasn't where it needed to be in order
for it to be you know reasonably
usable okay so here
can
play I mean really you need um
I guess this is fine
right well no you actually you need to
right well no you actually you need to
have this stuff inside of an explicit
have this stuff inside of an explicit
Ken play check I
think yeah we're going to do it this way
think yeah we're going to do it this way
for now
I really hate these types of functions
I really hate these types of functions
here I don't know maybe somebody will
here I don't know maybe somebody will
come up with a way to
uh there we go
we don't need this
we don't need this
check so Ken play is
check so Ken play is
false we get the Min cost card we figure
false we get the Min cost card we figure
out how much uh we can
out how much uh we can
tap and then we need to get
tap and then we need to get
Mana so
return star Mana plus
return star Mana plus
tapable greater than equal Min cost so
tapable greater than equal Min cost so
this tells us whether there is a card
this tells us whether there is a card
that we can
play and then what we'll
play and then what we'll
do is
do is
if if you can't
if if you can't
play we'll just put no valid
moves valid
moves valid
moves and then this is going to return
moves and then this is going to return
to the user and we're going to push
to the user and we're going to push
phase
attack
and does this make
sense why does this return to the user
sense why does this return to the user
and this returns to the
stack we're going to have to look into
this yeah definitely if there are uh TCG
this yeah definitely if there are uh TCG
players who have a better understanding
players who have a better understanding
of this than I do that would be great I
of this than I do that would be great I
I have very little TCG experience just
I have very little TCG experience just
in order to be able to build this over
in order to be able to build this over
the weekend I uh I downloaded like mtga
the weekend I uh I downloaded like mtga
and got to Silver real quick with a
and got to Silver real quick with a
really meme mono red
deck but that's about all I've
done I mean it's like literally
done I mean it's like literally
impossible not to get to Silver because
impossible not to get to Silver because
they literally don't even like you don't
they literally don't even like you don't
even lose rank for losing so it's just
even lose rank for losing so it's just
like if you play games you will get to
like if you play games you will get to
Silver in like some number of
[Music]
hours I'm surprised how active it is
hours I'm surprised how active it is
though like you get 10 second Q times
action as ever
action as ever
enter then you're going to
enter then you're going to
push phase
attack two
I think that actually all these are
I think that actually all these are
going to push to the
stack yeah I think pretty much all of
stack yeah I think pretty much all of
these are just going to push to this
these are just going to push to this
stack
what about actually playing the
what about actually playing the
card that's right here
right you also need to get
hand
hand
board probably
this I don't like these like these
this I don't like these like these
header things up
header things up
top
um I I know how we're going to end up
um I I know how we're going to end up
getting rid of these but for now it's a
pain Okay so
okay I kind of see how this works you
okay I kind of see how this works you
push so whenever the user does something
push so whenever the user does something
invalid you push the current phase back
invalid you push the current phase back
onto the stack and you return to the
onto the stack and you return to the
user right so this is if they try to
user right so this is if they try to
play a land and they've already played
play a land and they've already played
one right you push you say nope we're
one right you push you say nope we're
going to do the same thing again after
going to do the same thing again after
we return to the user
user okay and then you play this card
user okay and then you play this card
right so then this is going to be
push uh why is this not Auto completing
push uh why is this not Auto completing
is my Wi-Fi dropping or something oh no
is my Wi-Fi dropping or something oh no
we're
we're
good base Play
good base Play
Return to user
they've played a
card and
then you need to know how many you can
then you need to know how many you can
tap right how many lands you can
tap inable
L
and is this actually correct let me see
and is this actually correct let me see
no you don't need this tapable
zero
zero
what garbage
suggestions it's you want this thing
suggestions it's you want this thing
here okay
and then you return capable
ball capable
Mana B play and then return to
Mana B play and then return to
user and now here it's going to autotap
user and now here it's going to autotap
your lands for you
your lands for you
you're going to
go you're all the cards on your
board and then you just start tapping
board and then you just start tapping
stuff
right and you played your
right and you played your
card push F play and you return to the
card push F play and you return to the
user okay this is actually already
user okay this is actually already
looking
looking
better you have this very clean control
better you have this very clean control
flow here
flow here
where each phase
essentially can either directly like add
essentially can either directly like add
to another phase and you don't have to
to another phase and you don't have to
check too deep into it either right so
check too deep into it either right so
like you know let's say that there no
like you know let's say that there no
valid moves right so you go to the
valid moves right so you go to the
attack phase but you don't know if there
attack phase but you don't know if there
any valid attacks so what it'll do is
any valid attacks so what it'll do is
it'll just push the attack phase on the
it'll just push the attack phase on the
attack phase will determine whether or
attack phase will determine whether or
not there are any valid attacks if there
not there are any valid attacks if there
no valid attacks it'll skip over the
no valid attacks it'll skip over the
block phase entirely and go back to draw
block phase entirely and go back to draw
phase and you essentially you only ever
phase and you essentially you only ever
trigger back to the
trigger back to the
user when there's actually something to
user when there's actually something to
interact with so this is like a very
interact with so this is like a very
nice way of doing um control flow
nice way of doing um control flow
without ending up with like deep
without ending up with like deep
recursion or any [ __ ] like that or
recursion or any [ __ ] like that or
really deep call
chains cuz essentially you just have
chains cuz essentially you just have
this explicit call
stack I like this this is a much better
stack I like this this is a much better
design at least so far it looks like
design at least so far it looks like
this is a much better
design so like right here for
design so like right here for
instance this for MTG
instance this for MTG
yeah well we can't call it mtj that
yeah well we can't call it mtj that
name's kind of Taken can we call it puff
name's kind of Taken can we call it puff
for this scho
for this scho
or something like
that okay so like if you can't attack
that okay so like if you can't attack
right you're going to just push on uh
right you're going to just push on uh
this is the draw phase
right
right
turn you give it the draw
turn you give it the draw
phase just go like this then you return
phase just go like this then you return
you return to stack
and then if you ever if you hit
and then if you ever if you hit
enter your attacks get
confirmed and actually none of this is
confirmed and actually none of this is
needed here
needed here
right attacks confirmed phase end you
right attacks confirmed phase end you
push phase
push phase
block
block
and you return to the
and you return to the
stack and then this stuff is actually
stack and then this stuff is actually
going to go into the user uh this will
going to go into the user uh this will
all go into the block code now so this
all go into the block code now so this
is so much
cleaner this is kind of a weird pattern
cleaner this is kind of a weird pattern
I've not really had to implement
I've not really had to implement
anything that has uh a comparable
anything that has uh a comparable
pattern to this
pattern to this
before it's very nice
it avoids these very deep call chains
it avoids these very deep call chains
doesn't need
doesn't need
recursion kind of explicit recursion I
recursion kind of explicit recursion I
guess so phase attack if you can't
guess so phase attack if you can't
attack you skip the
attack you skip the
phase you actually skip over
phase you actually skip over
phases if action is
enter then you go to the block phase
enter then you go to the block phase
right
um and if your action is invalid
um and if your action is invalid
essentially so you go back to your
essentially so you go back to your
attack phase and then you return to
user same thing
here and then
here this is actually a valid
here this is actually a valid
one you push the attack phase and go
one you push the attack phase and go
back to the user
okay phase block here
let me see how I want to do
this these prints are giving me
this these prints are giving me
agida I just want these okay so we can
agida I just want these okay so we can
see that it's actually pretty simple
oh actually I get it so what I was doing
oh actually I get it so what I was doing
here so this is just going to skip stuff
here so this is just going to skip stuff
that you don't need to block
that you don't need to block
right and if you get to
right and if you get to
here nothing left to block
with Bay's
end I don't like this
end I don't like this
no I don't like
this this is going to cause
weirdness oh hold
weirdness oh hold
on I don't have to worry about the block
on I don't have to worry about the block
phase if there's no attack phase with
phase if there's no attack phase with
this design that never
this design that never
happens so I can actually just delete
happens so I can actually just delete
this
code which is
great and uh now this is going to be
great and uh now this is going to be
well we have to figure out what to do
well we have to figure out what to do
with this code let's just move this down
with this code let's just move this down
for
for
now I think this is actually the same as
now I think this is actually the same as
right here isn't it do I even need this
right here isn't it do I even need this
piece of code for anything
piece of code for anything
can block not can block literally this
can block not can block literally this
gets deleted yeah we don't need this
gets deleted yeah we don't need this
anymore the new design makes it
anymore the new design makes it
[Music]
irrelevant can things change in the
irrelevant can things change in the
middle of phases because of instance yes
middle of phases because of instance yes
and this is one of the reasons I'm
and this is one of the reasons I'm
designing it this way by having an
designing it this way by having an
explicit call stack um basically when I
explicit call stack um basically when I
want to add in instance what I'm going
want to add in instance what I'm going
to be able to do is like anytime there's
to be able to do is like anytime there's
an interrupt I'm just going to be able
an interrupt I'm just going to be able
to check like you know instant response
to check like you know instant response
or whatever and if there is one I can
or whatever and if there is one I can
just push it back on the call stack you
see it's going to be kind of cool like
see it's going to be kind of cool like
that so right now even though it's a
that so right now even though it's a
stack it doesn't ever become a deep
stack it doesn't ever become a deep
stack right CU there's always just going
stack right CU there's always just going
to be one thing on the stack it's just
to be one thing on the stack it's just
like this phase to this phase to this
like this phase to this phase to this
phase to this phase but when I want to
phase to this phase but when I want to
add instance what's going to happen is
add instance what's going to happen is
like uhoh there's a chance that you can
like uhoh there's a chance that you can
have an instant here so you know you put
have an instant here so you know you put
the Instant on the stack and then the
the Instant on the stack and then the
instant resolves it gets taken off the
instant resolves it gets taken off the
stack and you go right back to where you
stack and you go right back to where you
were and that all happens nice and
were and that all happens nice and
cleanly this is the reason that I'm
cleanly this is the reason that I'm
doing it myself right for the Prototype
doing it myself right for the Prototype
is so that when I hand this to the
is so that when I hand this to the
contributors right when I hand this to
contributors right when I hand this to
the rest of everybody there will at
the rest of everybody there will at
least be like this nice structure in
least be like this nice structure in
place that's had some thought put into
place that's had some thought put into
it
let me see how I want to handle this
let me see how I want to handle this
little portion here
so h
m
should
enter this is the one that's a little
enter this is the one that's a little
tricky getting this blocking stuff right
tricky getting this blocking stuff right
cuz you have to be able to choose block
cuz you have to be able to choose block
um like which cards block what and
stuff let me think a moment here so the
stuff let me think a moment here so the
tricky thing
right manual block confirmed
what I essentially want to do which I
what I essentially want to do which I
guess I'll just do explicitly for now
is I want to like copy
is I want to like copy
this
this
again I want to put this
here so we'll figure something out how
here so we'll figure something out how
to clean this or or whatever
but
push I shouldn't need to do
this yeah no I should not need to do
this yeah no I should not need to do
this no I'm thinking about this I'm
this no I'm thinking about this I'm
still thinking about this wrong
still thinking about this wrong
what this should
what this should
be is you advance the block
be is you advance the block
index
um by
one and then you return you
one and then you return you
push the block phase and you push back
push the block phase and you push back
to the stack I think
yes I just have to get the logic for
yes I just have to get the logic for
this
right okay
right okay
[Music]
action this is an invalid block so we
action this is an invalid block so we
return to the
return to the
user and then what's this you can't
user and then what's this you can't
block with Y land yeah we push block and
block with Y land yeah we push block and
return to
return to
user Okay so
oh they're just doing some maintenance
oh they're just doing some maintenance
outside okay
um so the tricky thing is basically just
um so the tricky thing is basically just
figuring
figuring
out when to actually
out when to actually
trigger the blocking calculations
so you skip block you skip
so you skip block you skip
Block it's going to return to the user
Block it's going to return to the user
eventually we're going to assume that we
eventually we're going to assume that we
handle
handle
this action
thing and
thing and
then I think it's just if the block
then I think it's just if the block
index
yeah there are a few edge
yeah there are a few edge
cases this is okay already
cases this is okay already
blocked so your action is invalid for
this is where you should resolve it it
this is where you should resolve it it
should be at the top I think this is
should be at the top I think this is
where it gets
resolved so all this logic
here gets moved up
okay so now we're assuming that it's not
okay so now we're assuming that it's not
resolving
now so here this is already blocked so
now so here this is already blocked so
this is push this and then return to
user and then this is okay we're
user and then this is okay we're
blocking right push block and return to
blocking right push block and return to
user uh and then this goes there and and
user uh and then this goes there and and
then this is good so now we just have to
then this is good so now we just have to
check this Logic for actually resolving
check this Logic for actually resolving
the block calculations which should not
the block calculations which should not
be that
bad let me go through this one more time
bad let me go through this one more time
though so the logic here is that you
though so the logic here is that you
enter the block phase you skip over all
enter the block phase you skip over all
the cards that aren't attacking if
the cards that aren't attacking if
you're at the end of the board then
you're at the end of the board then
you're done uh you're done with all of
you're done uh you're done with all of
the block calculations so you resolve it
the block calculations so you resolve it
you resolve all the blocks otherwise
you resolve all the blocks otherwise
you see if the users hit enter if the
you see if the users hit enter if the
users hit enter you advance to the next
users hit enter you advance to the next
thing that needs to be blocked if their
thing that needs to be blocked if their
action is invalid then you push back to
action is invalid then you push back to
the user and say Hey you know pick
the user and say Hey you know pick
something valid uh if you're trying to
something valid uh if you're trying to
like this is also invalid action
like this is also invalid action
handling right here if you're trying to
handling right here if you're trying to
uh block use a card to block something
uh block use a card to block something
but you've already used that card to
but you've already used that card to
block something
block something
else and then if none of these things
else and then if none of these things
are true then you toggle the block state
are true then you toggle the block state
of your current card and you push this
of your current card and you push this
um onto the will not call it the
um onto the will not call it the
blockchain but the block
sack I'm happy with that
I got to set up a couple more meetings
I got to set up a couple more meetings
in Pao Alto while I'm still here for the
in Pao Alto while I'm still here for the
next couple weeks so I got to give some
next couple weeks so I got to give some
of these guys
of these guys
out we got
stickers whole bunch of
them are you building the TCG for fun
them are you building the TCG for fun
well it's another RL environment
well it's another RL environment
right it's going to be another RL
right it's going to be another RL
environment to add to the
collection it's got some interesting
collection it's got some interesting
properties to it it's a good environment
properties to it it's a good environment
for research and for testing algorithms
right it's mainly because uh people were
right it's mainly because uh people were
interested in contributing to it so I
interested in contributing to it so I
figure okay I can get a nice little
figure okay I can get a nice little
prototype of this set up and then you
prototype of this set up and then you
know if contributors are going to want
know if contributors are going to want
to actually do a bunch of stuff on this
to actually do a bunch of stuff on this
then
great not attacking not attacking
great not attacking not attacking
uh I think that this is actually all
uh I think that this is actually all
correct right down until
correct right down until
here which is
here which is
push we have to push
push we have to push
phase uh draw onto the
phase uh draw onto the
stack and then we have to
do return to
stack skeleton for others sounds good
stack skeleton for others sounds good
yeah what properties does it have the
yeah what properties does it have the
other like poker don't I mean play MTG
other like poker don't I mean play MTG
and then play poker
and then play poker
right must
zero
zero
oh yeah I really don't like this
oh yeah I really don't like this
um I
um I
don't look I've it's only been a few
don't look I've it's only been a few
months since I've been doing stuff in C
months since I've been doing stuff in C
like a couple months even probably only
like a couple months even probably only
been like one month really since I've do
been like one month really since I've do
it been doing stuff in proper C in the
it been doing stuff in proper C in the
last 10 years there's still a few things
last 10 years there's still a few things
I'm getting used to and this is like a
I'm getting used to and this is like a
really big foot gun which is if you if
really big foot gun which is if you if
you callic something right then it gets
you callic something right then it gets
zeroed for you but if you allocate it
zeroed for you but if you allocate it
not on the stack it doesn't get zeroed
not on the stack it doesn't get zeroed
for you
for you
um so I don't know if you're just
um so I don't know if you're just
expected to zero your Stacks or if I'm
expected to zero your Stacks or if I'm
supposed to have if the init method is
supposed to have if the init method is
supposed to do it for you um
supposed to do it for you um
that's just like a potential way to
that's just like a potential way to
screw stuff up those for getting to zero
it this looks good though I think we are
it this looks good though I think we are
almost at the point where we can start
almost at the point where we can start
testing
testing
this function you don't need these
this function you don't need these
anymore
and I think once we cut some stuff out
and I think once we cut some stuff out
it'll be about 500 lines maybe 600 I did
it'll be about 500 lines maybe 600 I did
say 600 initially for the Prototype so
say 600 initially for the Prototype so
that might have been
that might have been
prophetic but let's look at the logic
prophetic but let's look at the logic
for
for
this because I think this will be pretty
this because I think this will be pretty
clean so you go to reset you push a draw
clean so you go to reset you push a draw
phase and you call
phase and you call
step well in the draw
phase hold on let me go up to draw
phase phase
phase phase
draw do I not have a phase draw
function I guess I don't have a phase
function I guess I don't have a phase
draw function that would be bad
base
base
draw and then what we're going to do
draw and then what we're going to do
is uh card array
is uh card array
hand card array Our
Deck draw card deck
Deck draw card deck
hand do not
hand do not
push push phase phase play
push push phase phase play
and then you return to this
and then you return to this
stack so now you call phase draw it
stack so now you call phase draw it
draws a card and it pushes phase play to
draws a card and it pushes phase play to
the
the
stack next thing uh on the stack gets
stack next thing uh on the stack gets
pulled or popped I
pulled or popped I
mean see you good luck thank
you so phase play gets uh executed here
and I don't like
how Okay the one thing I don't like
how Okay the one thing I don't like
about this is how the actions Cascade
about this is how the actions Cascade
through right cuz like I'm essentially
through right cuz like I'm essentially
I'm just calling phase play to see if
I'm just calling phase play to see if
you can even play at
you can even play at
all right
I think you kind of just want to no op
I think you kind of just want to no op
right let me think if that makes
sense I think you need to add an action
sense I think you need to add an action
no
op
no and then what I think you do is
like the stack is always going to return
like the stack is always going to return
right until the point that you need the
right until the point that you need the
action right
so here you step with a no
so here you step with a no
op and I think what you do
is return to
user action equals no op you only ever
user action equals no op you only ever
use the first action
use the first action
let me see how I like
that so if the board is
full and then we do if action is a no
full and then we do if action is a no
op we return to the
op we return to the
user so essentially we just get these
user so essentially we just get these
these two initial checks
off we'll have to do
off we'll have to do
some some stuff maybe to speed this up
some some stuff maybe to speed this up
but I think for now this is
but I think for now this is
fine cuz there's a little bit of
fine cuz there's a little bit of
redundant checking
here then if they hand hand length to
here then if they hand hand length to
Big okay we've done all this
Big okay we've done all this
now action enter returns
now action enter returns
to uh action
to uh action
enter returns to the
stack base
play and this actually is going to
play and this actually is going to
return to
return to
the the stack as well
right
right
yeah uh if you can't play Then you
yeah uh if you can't play Then you
return to the user lens get Auto
return to the user lens get Auto
tapped base play this is also to this
deack and then in
Phase or is this to the wait is this to
Phase or is this to the wait is this to
the user the stack hold
on Maybe not maybe this is to the
user yeah this is to user I was right
user yeah this is to user I was right
right yeah it's not until enter okay so
right yeah it's not until enter okay so
we do this then we go to phase
attack
attack
um if you can if you cannot
um if you can if you cannot
attack then you go to the draw
phase if it's no op return to the
user if enter
user if enter
okay and then phase block is going to be
okay and then phase block is going to be
very similar
very similar
right we return to the user
here so this
is how do we know if there's nothing to
is how do we know if there's nothing to
block
with is it this initial
check hold on how do we know if there's
check hold on how do we know if there's
nothing to block
nothing to block
with I mean I maybe I at this point I
with I mean I maybe I at this point I
just start debugging live
SX and a64
um oh this is
gross I have a weird dependency order
gross I have a weird dependency order
thing don't
thing don't
I I think I need to do what I need to do
I I think I need to do what I need to do
is I need to move the type def for the
is I need to move the type def for the
TCG
TCG
up so that they know that there's going
up so that they know that there's going
to be the compiler needs to know that
to be the compiler needs to know that
there is a
there is a
TCG TCG struct up here
okay that could s all the way down to
okay that could s all the way down to
63 get the
board unused variable hand yeah we don't
board unused variable hand yeah we don't
need hand we just need the board
need hand we just need the board
here uh can play not used
this is a return
true unused board
true unused board
W
five uh phase draw needs to
be oh well that's ABN
um how do you order
these I think you actually need to Ford
these I think you actually need to Ford
declare these don't
you yeah you actually need to for
you yeah you actually need to for
declare these because they all call each
declare these because they all call each
other
well
well passing stack to
incompatible yeah this is going to be
incompatible yeah this is going to be
stack star
stack and then allocate card
array so when we do allocate we need to
array so when we do allocate we need to
do n stack is going to be there's no
do n stack is going to be there's no
allocate stack so this is a
allocate stack so this is a
calices a
calices a
stack holy
incompatible wait
incompatible function
pointer TCG star
int type Def
what's wrong
here oh just in and bull
right yeah it's like this it's a type
right yeah it's like this it's a type
def bull
there we
there we
go conflicting type definitions for
go conflicting type definitions for
phase
attack I guess technically
attack I guess technically
uh it should
be do I leave it action as an in for now
H we do one sign sh
maybe conflicting types for
maybe conflicting types for
phase untap going to be sign
Char conflicting
Char conflicting
type this is a
pool six not need hand
apparently uh phase block this is also a
bull just uh refactor pains as
well Undeclared identifier board this is
well Undeclared identifier board this is
fine heart
board this
oops
oops
health I guess this needs a few
health I guess this needs a few
different things huh in Star
health and I think we have syntax as
well non-void
well non-void
function does not
function does not
return well I don't know what happened
return well I don't know what happened
here there we go
builds okay so here is is the
builds okay so here is is the
TCG we're now going to have to debug
this land is
played uh already played land this
turn card is
played card is
played card is
played
played
enter I really need to have this phase
enter I really need to have this phase
indicator
indicator
I need the phase indicator back I forgot
I need the phase indicator back I forgot
that I need it just to draw what phase
that I need it just to draw what phase
it is if nothing
else is that
right technically hold
on I have an idea
call function is going to be
call function is going to be
Peak and then what we're going to do is
Peak and then what we're going to do is
IF function is going to be equal to
IF function is going to be equal to
phase draw then you draw the
text what we think about this so I just
text what we think about this so I just
do it based on literally what's on the
do it based on literally what's on the
stack and instead of having to maintain
stack and instead of having to maintain
a separate
State base
State base
play already played land
yeah play invalid action 10
okay that's a legit bug let's fix
okay that's a legit bug let's fix
that yeah this is going to be so much
that yeah this is going to be so much
better
though okay this just has to
though okay this just has to
go this just just has to go up to here
else
else
if else
if
if
land Attack
Phase block phase
let's see what just
happened
so setting attacker one setting attacker
so setting attacker one setting attacker
two actions confirmed phase
two actions confirmed phase
end invalid Block action 11 that's
end invalid Block action 11 that's
another legitimate
bug this already feels so much better
bug this already feels so much better
though
yeah I can't wait this is going to be
great rectangle of zero got summoned
great rectangle of zero got summoned
yeah it's debug stuff right it's pretty
yeah it's debug stuff right it's pretty
important to have this honestly I'm
important to have this honestly I'm
probably going to make like a debug
probably going to make like a debug
print or something so I can leave these
print or something so I can leave these
prints in the code and just have it with
prints in the code and just have it with
a debug flag or something
a debug flag or something
because I don't know how else you debug
because I don't know how else you debug
a TCG like this you really need to know
a TCG like this you really need to know
you need to know a lot about the
you need to know a lot about the
underlying game
underlying game
State they just like compared to almost
State they just like compared to almost
any other game there just so many
any other game there just so many
interactions that can happen once this
interactions that can happen once this
thing gets
going the goal of this is to show
going the goal of this is to show
um the goal is to show like what you're
um the goal is to show like what you're
blocking with what card right so like
blocking with what card right so like
the row is the
the row is the
attackers it's well the row is going to
attackers it's well the row is going to
be the attackers and then the Call's
be the attackers and then the Call's
going to be Defenders so if I put one
going to be Defenders so if I put one
here it's like you're blocking uh the
here it's like you're blocking uh the
fourth attacker with your first card or
fourth attacker with your first card or
something like that you're blocking
something like that you're blocking
their fourth card with your first
card yes so if action is a no op and you
card yes so if action is a no op and you
go back to the
user else if TR
this player land Player Two Cards hit
this player land Player Two Cards hit
enter attack with these two
phase zero action
phase zero action
11 skipping block for zero not
attacking okay so it's letting me try to
attacking okay so it's letting me try to
block stuff is the problem right
now so it's not detecting that there's
now so it's not detecting that there's
no valid Block
action for
it's not detecting that there's no valid
it's not detecting that there's no valid
Block action
correct let me see where I'm supposed to
correct let me see where I'm supposed to
be handling
this well I'm just not handling it
this well I'm just not handling it
anywhere
let me think how I can do this cleanly
cookie
cookie
[Music]
first cookie first is good
somebody made some like really dumb
somebody made some like really dumb
tweet about like the Energy Efficiency
tweet about like the Energy Efficiency
of programming
of programming
languages and I I replied to it like
languages and I I replied to it like
well I eat three chocolate chip cookies
well I eat three chocolate chip cookies
debugging C so how's that count for
energy here to learn a bit yeah of
energy here to learn a bit yeah of
course
I
mean I've been coding seriously for what
mean I've been coding seriously for what
like at least 12 13 years
now the cool thing about what I'm doing
now the cool thing about what I'm doing
at the moment though is like you really
at the moment though is like you really
don't need to know too much of the
don't need to know too much of the
context for all the reinforcement
context for all the reinforcement
learning stuff that I have right in
learning stuff that I have right in
order to do this type of stuff like
order to do this type of stuff like
we have people that are just competent
we have people that are just competent
developers um that are making new
developers um that are making new
environments for puffer like really
environments for puffer like really
useful stuff for reinforcement learning
useful stuff for reinforcement learning
in the day from scratch um so that's
in the day from scratch um so that's
pretty cool right like that's not a
pretty cool right like that's not a
thing that you used to be able to
do so you know it can't we can't make it
do so you know it can't we can't make it
to the point where like anybody could do
to the point where like anybody could do
it but we can make it you can bring the
it but we can make it you can bring the
bar down a lot
bar down a lot
much more
accessible and the C is not required
accessible and the C is not required
either like you can write these things
either like you can write these things
in scyon they just won't render on the
in scyon they just won't render on the
web as all
web as all
um and for scientists that's
fine one of the nice things about C is
fine one of the nice things about C is
it's like it's not not hard but it looks
it's like it's not not hard but it looks
hard
hard
so it kind of weeds out the people that
so it kind of weeds out the people that
actually don't care and don't actually
actually don't care and don't actually
want to learn
stuff like I don't have to gate peep
stuff like I don't have to gate peep
people I do the exact opposite like
people I do the exact opposite like
people just gep themselves
people just gep themselves
instead which is kind of fun
it's actually very nice and comfortable
it's actually very nice and comfortable
writing this stuff and
see I think it would be like at most
see I think it would be like at most
marginally easier in
Python and it wouldn't be
fast what's your number one go-to
fast what's your number one go-to
resource I haven't written C in 10 years
resource I haven't written C in 10 years
like literally I barely use C outside of
like literally I barely use C outside of
uh university
uh university
courses um it's just like when you've
courses um it's just like when you've
been developing for like 10 plus years
been developing for like 10 plus years
and you at least have some understanding
and you at least have some understanding
of what low levels are supposed to be
of what low levels are supposed to be
right like I had courses and whatever uh
right like I had courses and whatever uh
it's just not that hard it's all it is
it's just not that hard it's all it is
like I haven't done anything specific I
like I haven't done anything specific I
just started using it that's
all I mean they're like at most there
all I mean they're like at most there
are a couple like weird syntax
are a couple like weird syntax
differences and yeah you need to
differences and yeah you need to
understand pointers that's about
it but it's like whoop did you do a
it but it's like whoop did you do a
pointer stores the address of a variable
pointer stores the address of a variable
instead of having the value itself
instead of having the value itself
that's it that's that's all it is
the only thing I will say that you do
the only thing I will say that you do
need to know
exists somebody does have to tell you
exists somebody does have to tell you
that these flags exist if you do not
that these flags exist if you do not
know that these flags exist for
know that these flags exist for
compiling you will have a very bad time
compiling you will have a very bad time
because you will not get good error
because you will not get good error
messages
messages
um but it's not that bad
otherwise let me figure out where this
otherwise let me figure out where this
error
is by any chance of you seeing the uh
is by any chance of you seeing the uh
the Pokemon Red work cuz I see your
the Pokemon Red work cuz I see your
username um have you seen like the
username um have you seen like the
Pokemon Red reinforcement learning stuff
Pokemon Red reinforcement learning stuff
cuz that's another I mean that's
cuz that's another I mean that's
probably the biggest project that puffer
probably the biggest project that puffer
is sponsoring at the
moment e
I think this is the the code that I need
right already blocked
I need some way of just checking if
I need some way of just checking if
there's nothing left to block
there's nothing left to block
with
right yeah I think I just have to copy
right yeah I think I just have to copy
this it's going to be slightly different
code saw on some social media or YouTube
code saw on some social media or YouTube
well there's some cool results coming
well there's some cool results coming
out with that soon uh you can you can
out with that soon uh you can you can
try the Discord for that I mean that
try the Discord for that I mean that
that project has actively been under
that project has actively been under
development like I think it was in
development like I think it was in
January or whatever like it's been under
January or whatever like it's been under
development the whole time
development the whole time
it's the main thing that puffer sponsors
it's the main thing that puffer sponsors
we uh most of the puffer cluster compute
we uh most of the puffer cluster compute
goes to that
project machines provided by yours truly
I this is where it needs to happen right
I this is where it needs to happen right
here
right just joined solid there's also
right just joined solid there's also
discord.gg SLP puffer which is our
discord.gg SLP puffer which is our
Discord that's where we do all the uh I
Discord that's where we do all the uh I
mean there's all sorts of cool stuff in
mean there's all sorts of cool stuff in
here like I have this environment we've
here like I have this environment we've
got like all sorts of other people
got like all sorts of other people
posting environments and stuff
posting environments and stuff
I think somebody just made go like a go
I think somebody just made go like a go
environment here's somebody making
environment here's somebody making
Enduro from scratch Ultra
Enduro from scratch Ultra
hyperf here's new car
hyperf here's new car
environments got go all this stuff
speaking of which there's one of the new
speaking of which there's one of the new
contributors the guy that just did go
contributors the guy that just did go
I've got to give him access to the
I've got to give him access to the
cluster people that uh contribute stuff
cluster people that uh contribute stuff
consistently get cluster
access Discord it's literally
access Discord it's literally
discord.gg SLP
discord.gg SLP
Puffer for
so basically we do bull can
block
block
equals false
you need to
go well I just need to see if there's
go well I just need to see if there's
anything on the
anything on the
board uh that can block
if
if
en Defenders
I don't like the way that this is
I don't like the way that this is
looking but let me see
is
is
land then you
continue so it's not
land and then you have to look here I'm
land and then you have to look here I'm
essentially just trying to figure out if
essentially just trying to figure out if
you have any cards available to block
with so you're going to block
attacker block index a PL attacker J
attacker block index a PL attacker J
with card I I believe
full lock it
block with card is false
block with card is false
M Stack yes it holds the current the way
M Stack yes it holds the current the way
it works is like each phase is a
it works is like each phase is a
function um that has access to the full
function um that has access to the full
game
game
State and whatever is on the top of the
State and whatever is on the top of the
stack is the current phase
and block is going to be true here
let me do if can
let me do if can
block uh then you
block uh then you
break and then if not can
break and then if not can
block nothing left to block
with well you need to trigger the
with well you need to trigger the
resolve right
oh you just have to set the block
index let me see if this does it oops
I'm sure we can
simplify okay so what does this
simplify okay so what does this
say skipping block for not attacking
so can block with
so can block with
one well it definitely can't block with
one well it definitely can't block with
one
let me see how I did this logic
wrong am I even doing this reasonably
wrong am I even doing this reasonably
like
this skips to the next
attacker and this
goes this goes over the length of the
goes this goes over the length of the
board of my board right yeah
oh wait no it's got to be the defender
oh wait no it's got to be the defender
board
EnV and so EnV is the environment that
EnV and so EnV is the environment that
is the full game State opponent op is
is the full game State opponent op is
just for
opponent oh look at that that actually
opponent oh look at that that actually
worked
uh I don't know why this guy didn't
uh I don't know why this guy didn't
play a
land maybe just randomly didn't play a
land and we do we're going to play our
land and we do we're going to play our
land for this turn up already played
land for this turn up already played
land this turn definitely did not so we
land this turn definitely did not so we
got to do the untap step correctly
got to do the untap step correctly
time for
time for
cookie one cookie per day
cookie one cookie per day
limit probably could use a second cookie
limit probably could use a second cookie
per day but one cookie per day
per day but one cookie per day
limit honestly it's not that bad that I
limit honestly it's not that bad that I
have the bakery nearby you should have
have the bakery nearby you should have
seen when I was in Boston there were no
seen when I was in Boston there were no
like bakeries close by there was just
like bakeries close by there was just
Dunkin
Dunkin
Donuts I think I was having between 25
Donuts I think I was having between 25
and 30 Donuts
let me think is that right maybe between
let me think is that right maybe between
20 and 30 Donuts per week it was like
20 and 30 Donuts per week it was like
three or four Donuts a day it was
three or four Donuts a day it was
ridiculous
for how
for how
long good few months how are you not
long good few months how are you not
super obese cuz IID start my day with
super obese cuz IID start my day with
like an hour and a half or two hour run
like an hour and a half or two hour run
and then I would lift in the
and then I would lift in the
evening you just burn
it for
I was running like 40 miles a week
I was running like 40 miles a week
then I'm probably I'm only doing like 25
then I'm probably I'm only doing like 25
30 miles a week at the moment because
30 miles a week at the moment because
I'm doing more strength work but
um yeah mileage varies depending on
um yeah mileage varies depending on
training you got to do reinforcement
training you got to do reinforcement
learning on yourself to do reinforcement
learning on yourself to do reinforcement
learning on the agents you know that
learning on the agents you know that
works
uh I think what's Happening Here
uh I think what's Happening Here
is
Phase yeah this has got to go to phase
Phase yeah this has got to go to phase
untap
right reset goes to phase
right reset goes to phase
draw phase untap goes to draw
draw phase untap goes to draw
well now I think we're
good
good
so we play our
so we play our
land we play our
cards they take two
damage uh why did we not untap
oh probably because um
hold
on let me figure out where this is
on let me figure out where this is
getting messed
getting messed
with phase
with phase
attack this is going to go to phase
attack this is going to go to phase
untap
here this here is going to go to untap
phase
phase
uh cool I think that does
it so we play
it so we play
land then we play these
we do two damage it's a lot of damage we
we do two damage it's a lot of damage we
get our
get our
land now we have two lands so we can
land now we have two lands so we can
play
play
this ah it let us play both of them
this ah it let us play both of them
which is not
which is not
good now our
good now our
attack we can attack with all
attack we can attack with all
this and they actually play
this and they actually play
something let's fix our lands per turn
something let's fix our lands per turn
thing real quick though
why does it let us play multiple lands
I don't think it should let me
see if I just do like
see if I just do like
three two five say already played land
three two five say already played land
this turn
this turn
right
right
okay and then
okay and then
three three already played land this
three three already played land this
turn
oh no it didn't it that's the thing it
oh no it didn't it that's the thing it
it's not that it's the Mana on
car you autotap your lands
car you autotap your lands
right assert the Mana is less than the
right assert the Mana is less than the
card
card
cost okay star Mana minus equal card
cost okay star Mana minus equal card
cost right
see did I forget to
build I think this is good
build I think this is good
now
now
three I can't play these and play
three I can't play these and play
these we
these we
attack can't play the next Land good I
attack can't play the next Land good I
play
play
this aha not enough Mana very good can't
this aha not enough Mana very good can't
do anything so we just
swing this is going to inflict five
swing this is going to inflict five
damage taking us down to 13
damage taking us down to 13
here we play our land brings us up to
here we play our land brings us up to
three lands we cannot play this card not
three lands we cannot play this card not
play a second land we can play
play a second land we can play
this and then we
swing with all of
this and it says it can block now with
this and it says it can block now with
zero can block with
zero can block with
zero
right look at
right look at
that so I can choose to block right here
that so I can choose to block right here
I can hit enter now I'm choosing I can
I can hit enter now I'm choosing I can
choose to block this one
right let's choose to block this one
right let's choose to block this one
like
this did his card get
destroyed it did but his land also got
destroyed it did but his land also got
destroyed so I don't know how that
happened well the line
happened well the line
yeah it's just showing what is targeting
yeah it's just showing what is targeting
what
what
um so then I should just win right let
um so then I should just win right let
me see if I play my next
me see if I play my next
land uh I play this big card I hit enter
land uh I play this big card I hit enter
I do
there's the full
there's the full
board uh we
board uh we
swing and now he's on negative health
can
block star Health negative equal to this
block star Health negative equal to this
this then we do
this then we do
if Health Less Than
Zero game
over and then we simply
over and then we simply
do
reset conflicting types
implicit declaration
GH vo
reset all right let's see what else is
reset all right let's see what else is
wrong with this so we play our land we
wrong with this so we play our land we
play our
play our
cards we swing we do
cards we swing we do
damage we try we can play this now
damage we try we can play this now
and then we
swing and we didn't get any chance to
swing and we didn't get any chance to
block
right so
right so
next we're going to play our
next we're going to play our
land play this
and we swing and now it's going to let
and we swing and now it's going to let
us select the block
here we're going to block here and what
here we're going to block here and what
we're expecting is for my uh zero Mana
we're expecting is for my uh zero Mana
one one to get destroyed their card to
one one to get destroyed their card to
get destroyed and the land to
remain yeah so that didn't happen uh
remain yeah so that didn't happen uh
something completely screwy just
something completely screwy just
happened
you can see that this is correct though
you can see that this is correct though
so right
so right
here this is it was blocking this
here this is it was blocking this
card with his first
card with his first
card so this was correct and then
card so this was correct and then
somehow the uh the resolution is wrong
where does reset come
where does reset come
from resets right
from resets right
here it just resets the game
here it just resets the game
State and you can see that it um it
State and you can see that it um it
pushes the first thing onto the stack
pushes the first thing onto the stack
which is how it starts it it pushes the
which is how it starts it it pushes the
uh the draw phase onto the
stack there might be a a couple other
stack there might be a a couple other
things that we have to reset but that's
things that we have to reset but that's
the main
thing so let's see what this uh what
thing so let's see what this uh what
messages we have attacker board length
messages we have attacker board length
was seven resolving zero not attacking
was seven resolving zero not attacking
yep resolving
land resolving
land resolving
one attacker
wins oh I was yeah the implementation
wins oh I was yeah the implementation
has just gotten stale this is like an
has just gotten stale this is like an
auto block thing
auto block thing
yeah this is like an auto blocker thing
yeah this is like an auto blocker thing
um I got to just re rethink about this
um I got to just re rethink about this
real
quick the team is going to be pretty
quick the team is going to be pretty
happy though to have this to work off of
happy though to have this to work off of
when I get this ready because this is
when I get this ready because this is
not this is really not
bad it'll be under 600 lines I'll make
bad it'll be under 600 lines I'll make
sure of that cuz I promised them like
sure of that cuz I promised them like
600 lines was the Prototype that's what
600 lines was the Prototype that's what
I estimated that's what it
be okay so you're going through the
be okay so you're going through the
attacker so far so good
attacker so far so good
right you get their
right you get their
attack Defender board length
if
if
not M
not M
Defenders
Defenders
attack
attack
defense
continue have their
continue have their
defense you have their card
attacker
Health minus equal Defender
attack defend your health
wait attack or health get
subtracted attacker wins attacker attack
hell Defender
wins well it's not really attacker wins
wins well it's not really attacker wins
or Defender wins here right
break let's see if this does it
else
hacker
hacker
attack let's
see
play play this card
swing play this play this
swing play this play this
[Music]
[Music]
swing and then what we're going to
swing and then what we're going to
do is we're going to do
do is we're going to do
this it
worked it
worked it
worked you see
worked you see
that our card was destroyed their card
that our card was destroyed their card
was destroyed the rest of the combat
was destroyed the rest of the combat
went
through so this is a mostly working
through so this is a mostly working
prototype
then why do you have attack or attack
then why do you have attack or attack
and attack attack which you have
and attack attack which you have
assigned so it's kind of messy at the
assigned so it's kind of messy at the
moment but the idea is I don't know if
moment but the idea is I don't know if
you've played magic um when you attack
you've played magic um when you attack
something um your attack gets temporary
decreased by uh so like let's say that
decreased by uh so like let's say that
you have five attack okay and then you
you have five attack okay and then you
attack something that has two health and
attack something that has two health and
then you're also attacking something
then you're also attacking something
that has like one Health what'll happen
that has like one Health what'll happen
is you hit the first one your attack
is you hit the first one your attack
goes down to two now you have three
goes down to two now you have three
attack left you hit the second one I I
attack left you hit the second one I I
think I said it has two Health you have
think I said it has two Health you have
three attack left uh you hit that now
three attack left uh you hit that now
you have one attack left and that one
you have one attack left and that one
extra damage goes to face so it goes to
extra damage goes to face so it goes to
the opponent
so but the thing is you're not actually
so but the thing is you're not actually
permanently reducing your attack you're
permanently reducing your attack you're
only reducing it for the purpose of that
only reducing it for the purpose of that
one
computation yeah it's a temporary thing
computation yeah it's a temporary thing
exactly so I have to keep track of that
exactly so I have to keep track of that
separately so what we're going to do now
separately so what we're going to do now
I'm going to use the restroom real quick
I'm going to use the restroom real quick
quick I'll be right back and then we're
quick I'll be right back and then we're
going to finish cleaning this up uh
going to finish cleaning this up uh
you're going to see you know how I clean
you're going to see you know how I clean
all this up nicely we're going to clean
all this up nicely we're going to clean
up all the logging and stuff we're going
up all the logging and stuff we're going
to get it down to hopefully 600 lines
to get it down to hopefully 600 lines
and then I'm going to ship this as a
and then I'm going to ship this as a
prototype to the team and uh I think
prototype to the team and uh I think
people are going to be very excited we
people are going to be very excited we
might also do a little bit of stuff with
might also do a little bit of stuff with
the rendering
the rendering
differently I kind of should have a
differently I kind of should have a
separate zone for
separate zone for
lands I don't know how I'm going to deal
lands I don't know how I'm going to deal
with that maybe I just won't bother for
with that maybe I just won't bother for
now I also kind of want to render when
now I also kind of want to render when
lands are tapped um but yeah I'll be
lands are tapped um but yeah I'll be
right
back yeah
for
e
e
e e
what team you're working
what team you're working
with uh open source team frankly
with uh open source team frankly
like puffer is a company but all the
like puffer is a company but all the
contributions and stuff and all the code
contributions and stuff and all the code
are all open
source I think this is going to have to
source I think this is going to have to
be called puffer the schooling
puffer the schooling
TCG yeah that's way
better all right we have to clean this
better all right we have to clean this
up
now these phase indicators no longer
needed put this here these are all
needed put this here these are all
forward declarations these can all go
together we have our
together we have our
stack how do people do code blocks and
stack how do people do code blocks and
see do they just like do this type of
see do they just like do this type of
stuff this is kind of gross
stuff this is kind of gross
right yeah that's kind of
gross I think we leave it like
this think these probably these
go maybe we do something like this
so we do Health
so we do Health
[Music]
Mana is this cleaner
don't need phas do need
turn do we do
this there like too many sections here
I'm kind of like doing this
I'm kind of like doing this
maybe organize these a little bit you
know then we have attackers
Defenders and the stack at the
bottom lock index turn yeah this is okay
bottom lock index turn yeah this is okay
this is laid out kind of
this is laid out kind of
fine
stack there that's nice and
stack there that's nice and
condensed uh these allocate and freeze
condensed uh these allocate and freeze
are good
randomize
randomize
deck draw a
card reorder these a little
bit H they're kind of fine like
bit H they're kind of fine like
this can attack
tapable
Mana I don't like the way that we have
Mana I don't like the way that we have
these question mark statements
these question mark statements
here
um technically I could make pointers
um technically I could make pointers
that are like always updated to the
that are like always updated to the
current
thing I don't know if that's worth
thing I don't know if that's worth
it I'm going to leave these alone for
it I'm going to leave these alone for
now
was there like a standard cdbg print or
was there like a standard cdbg print or
you just make your own
I hate
this I mean I guess it's kind
of why is it autocomplete to
of why is it autocomplete to
rust get out of here rust
yeah I don't like this at
all oh this is kind of cool though
let me play with
this for
uh this is not going to let me do like
uh this is not going to let me do like
my Matrix and stuff is it
yeah I think this is kind of Overkill
one
void debug print
oh yeah cuz print is uh variable args
right I forgot about
right I forgot about
that well I think we'll leave it for now
that well I think we'll leave it for now
we'll just not do that for now we'll
we'll just not do that for now we'll
just like clean up the prce and not do
just like clean up the prce and not do
any of that
Shenanigans B
untap can you get the name of a function
untap can you get the name of a function
and see
now no there's not a like that's too
now no there's not a like that's too
much we'll just do it this
way we just
do so board is
full valid moves
full valid moves
invalid
invalid
[Music]
[Music]
action replayed land land
played play
cool phas attack no valid
cool phas attack no valid
attack attack
confirmed
confirmed
okay we'll see if we get clean logs out
okay we'll see if we get clean logs out
of this right
B
Block I think we'll get rid of some of
Block I think we'll get rid of some of
these but
uh we don't need this
manual block confirm invalid
block well
block well
true think we just do this every step
here no member face
yeah you do not need the
phas turn
phas turn
action you got rid of the phase thing
action you got rid of the phase thing
right
phas render
phas render
label oh this was where our our labels
went print f
by
by
now we have the numbers back on these
now we have the numbers back on these
cards which is
cards which is
nice and say we play this and play this
nice and say we play this and play this
we play this
we play this
enter play this
right oops where'd it
go we already played everything
thing enough
Mana we hit
enter phase play Phase
attack two
enter untap draw play
so this
is if I block with this it should be
is if I block with this it should be
seven
seven
damage which leaves you with six Health
damage which leaves you with six Health
right six
right six
Health good now I just have to
Health good now I just have to
restructure a little bit
probably will'll have to write a little
probably will'll have to write a little
AI for this thing as
AI for this thing as
well
um this Prince look
it's like simultaneously printing too
it's like simultaneously printing too
much and not
enough Mana Zone and tapping yeah well
enough Mana Zone and tapping yeah well
Mana Zone will take a little bit more
Mana Zone will take a little bit more
time but tapping we should be able
to let me fix a couple things here first
to let me fix a couple things here first
what time is it it's only it's not even
what time is it it's only it's not even
two
what does TCG Trading Card Game
what does TCG Trading Card Game
Magic the Gathering Hearthstone Legends
Magic the Gathering Hearthstone Legends
of run Tera one of
those this is the Prototype we're
those this is the Prototype we're
working with at the
moment uh yeah this looks decent right
moment uh yeah this looks decent right
now
C game
yeah it's kind of difficult to get a
yeah it's kind of difficult to get a
clean logging with this stuff isn't it
well we can clean up the rendering quite
well we can clean up the rendering quite
a bit
okay so you only need this information
okay so you only need this information
when you go to
when you go to
do contextual here
right who's the attacker and who's the
right who's the attacker and who's the
defender is contextual right
turn one plus and turn
turn one plus and turn
maybe you need to put some systematic
maybe you need to put some systematic
line
line
braks yeah it's just a little weird
braks yeah it's just a little weird
because
because
um like the same phase gets called
um like the same phase gets called
potentially many
potentially many
times so there's not really a way to not
times so there's not really a way to not
have the left indent thing
easily
easily
and this should just be board
or hold on this should
or hold on this should
be damn
it attacker
board so this is going to be attacker
board so this is going to be attacker
board this is Defender
board this is Defender
board so let's try like this maybe
and then the turn
thing needs to pass
yeah so the turn thing needs to pass
differently Bas block
yeah so right here this needs to
yeah so right here this needs to
be
be
turn goes to one minus
turn goes to one minus
turn and then you go to phase
turn and then you go to phase
block and
then we go to
untap
phase let me see if this does it this
phase let me see if this does it this
should make it so that we now block our
should make it so that we now block our
own
side
side
[Music]
[Music]
okay
okay
two two
swing and now we have
swing and now we have
this we can swing whoops what did I just
this we can swing whoops what did I just
play was that allowed I think that was
valid we swing with
valid we swing with
this it rendered something freaking
weird did we not get to block our own
weird did we not get to block our own
stuff
stuff
stuff no they didn't
attack wait why are we at 20
Health okay well we're not doing damage
Health okay well we're not doing damage
somehow
buffer over
flow trading card game magic the
flow trading card game magic the
Gathering D start with decks
Gathering D start with decks
yeah well we're trying to get at least a
yeah well we're trying to get at least a
reasonable prototype here it's very
reasonable prototype here it's very
close to being at least a decent
prototype got to get the bugs out
turn to
stack let's figure out why it's not
stack let's figure out why it's not
rendering Health
correctly should
be okay
uh we don't want to do this cuz
uh we don't want to do this cuz
like maybe the opponent draws a card at
like maybe the opponent draws a card at
some point
right yeah whatever we do this for now
caught
caught
so pretty easy
right what happened
right what happened
here attackers one
here attackers one
one can block with
one can block with
one no no you can't block with one
wait attackers
confirmed phase
block if can block
the defender board has length zero why
the defender board has length zero why
the [ __ ] does this get
called do I have this thing backwards
called do I have this thing backwards
somehow oh yeah yeah yeah I know why
okay it's cuz I switched the way the
okay it's cuz I switched the way the
turn plays uh the turns play out it's
turn plays uh the turns play out it's
fine no worries
resolving reducing Health by one oh okay
resolving reducing Health by one oh okay
so it it uh took my health Away by
so it it uh took my health Away by
that's a bad
that's a bad
thing in Star health is going to be
thing in Star health is going to be
equal
to opponent Health like
this we're very close here to having
this we're very close here to having
this
there you go so there it is 18
Health okay 13 Health
Health okay 13 Health
right and then uh we're just going to
right and then uh we're just going to
pass a little bit here to hope he
pass a little bit here to hope he
attacks me at some
point uh it has rendered text on top of
point uh it has rendered text on top of
itself somehow
oh it's just rendered over the card
oh it's just rendered over the card
that's no big
that's no big
deal still not attacking me
so and then what happens we have an
so and then what happens we have an
overflow and draw a
card uh we need to know uh that your
card uh we need to know uh that your
hand is not too big right
if then you just return and not reset
right we're getting rid of
[Music]
bugs play some
bugs play some
[Music]
[Music]
Land wait for him to attack attack me
Land wait for him to attack attack me
with
something he didn't actually
attack okay so
attack okay so
um whatever the heck that just was
um whatever the heck that just was
doesn't make any sense because it
doesn't make any sense because it
has do you see how it has my cards
has do you see how it has my cards
rendered like this
oh these are the cards that they're
oh these are the cards that they're
attacking me
attacking me
with I
see yeah so this is just rendered
backwards hold on a second
are these two just these two are just
are these two just these two are just
backwards
right pop for the schooling
play some
play some
land play this
card okay and now we just wait to get
attacked can block with
one still render it
backwards how's it going hey Spencer
backwards how's it going hey Spencer
check it out we're almost done with uh
check it out we're almost done with uh
the prototype for the card game so if
the prototype for the card game so if
you want to jump into
you want to jump into
it it's going to be ready very soon
it it's going to be ready very soon
about 600 Lines Just As I
about 600 Lines Just As I
said um I see you've been
busy this looks
great can you play Stones like this on
great can you play Stones like this on
the edge of the board is this valid
puffer
go breakout is base file
go breakout is base file
yep yep exactly that was the main thing
yep yep exactly that was the main thing
for
you I'll do a quick a quick code review
you I'll do a quick a quick code review
on this whenever if it's helpful for
on this whenever if it's helpful for
you sorry what do you say about the
you sorry what do you say about the
stones oh I just haven't played go I
stones oh I just haven't played go I
don't can you put stones like this on
don't can you put stones like this on
the edge of the
board almost done with
board almost done with
this yeah I'll do a quick code review on
this yeah I'll do a quick code review on
this now or whenever you like if it's if
this now or whenever you like if it's if
it's helpful to you
pretty sure if it's correct then it's
pretty sure if it's correct then it's
correct I just don't
correct I just don't
know just double check like I said play
know just double check like I said play
a couple games
ago what the heck is wrong with this
ago what the heck is wrong with this
attacker
board I had this right before
board I had this right before
don't have capture mechanics yeah no
worries it's actually such an easy
worries it's actually such an easy
environment to do MCTS over if you think
environment to do MCTS over if you think
about it as well because like the whole
about it as well because like the whole
game state is just so easily represented
game state is just so easily represented
as one array without even having to be
as one array without even having to be
fancy so literally you're just you do
fancy so literally you're just you do
MCTS just by like writing that array and
MCTS just by like writing that array and
that sets your
state hey welcome
why do we need all these lines of
why do we need all these lines of
Defenders and why can't we have line for
Defenders and why can't we have line for
attackers you just want to draw the way
attackers you just want to draw the way
it works in Magic
it works in Magic
is well this is not this is bugged but
is well this is not this is bugged but
the way it works in Magic is you choose
the way it works in Magic is you choose
what cards you attack with but then your
what cards you attack with but then your
opponent chooses uh which cards they're
opponent chooses uh which cards they're
going to block each of your attackers
going to block each of your attackers
with
with
right so you kind of want to be able to
right so you kind of want to be able to
see like when you're blocking which
see like when you're blocking which
cards you're blocking with
cards you're blocking with
what it'll make sense as soon as I have
what it'll make sense as soon as I have
the rendering
the rendering
correct because I'll be able to show you
ah so here's the
ah so here's the
issue this has got to
beer board
length attacker board length
see if this does
see if this does
it on line
it on line
attackers no because you get to choose
attackers no because you get to choose
you get to choose which card your
you get to choose which card your
Defenders
Defenders
block you see what I
block you see what I
mean like you can choose to block the
mean like you can choose to block the
first attacker with cards two and three
first attacker with cards two and three
and then you can block like the third
and then you can block like the third
attacker with card five or
attacker with card five or
something having now finally watched the
something having now finally watched the
YouTube videos is the point of puffer to
YouTube videos is the point of puffer to
create good environments to massively
create good environments to massively
test various RL algorithmics algorithms
test various RL algorithmics algorithms
efficiently new strategy for RL you test
efficiently new strategy for RL you test
on TCG top one sucks for some other I
on TCG top one sucks for some other I
mean that's part of it right that's the
mean that's part of it right that's the
current push I mean the goal of puffer
current push I mean the goal of puffer
is to fix this cursed
is to fix this cursed
field um and the current thing is is
field um and the current thing is is
we've made training fast we've made good
we've made training fast we've made good
compatible infrastructure for the most
compatible infrastructure for the most
part and the M's are just too slow this
part and the M's are just too slow this
is the current bottleneck so at the
is the current bottleneck so at the
moment it's let's make a bunch of fast
moment it's let's make a bunch of fast
environments right now it's not going to
environments right now it's not going to
just be I keep sitting here writing fast
just be I keep sitting here writing fast
environments for the next five years
environments for the next five years
until I have a thousand of them right
until I have a thousand of them right
it's at some point it's going to be okay
it's at some point it's going to be okay
we have a bunch of fast environments
we have a bunch of fast environments
maybe people are contributing more of
maybe people are contributing more of
them but we've got like a decent base
them but we've got like a decent base
for now uh let's do some methods
for now uh let's do some methods
research and really figure out why these
research and really figure out why these
methods aren't working as well as they
methods aren't working as well as they
could be so really the goal of puffer is
could be so really the goal of puffer is
to push this field
forward like none of the stuff that
forward like none of the stuff that
we've been uh building here has existed
we've been uh building here has existed
before so this is all brand new stuff
still doesn't like letting me
block what do you mean my
block what do you mean my
methods could be algorithms could be
methods could be algorithms could be
training curricula could be architecture
training curricula could be architecture
any stuff right all the other side of
stuff why is this not working
hacker
board if the turn is zero then it's my
board this seems like it should be
board this seems like it should be
correct so the fact that it's not
correct so the fact that it's not
correct means
correct means
I'm missing something
well hold
on oh yeah it's cuz the turn flips
on oh yeah it's cuz the turn flips
that's
that's
obnoxious it's very obnoxious
I got to think about this a little
bit e
there even a good way of doing this
I mean I can technically put the indices
I mean I can technically put the indices
on them
is that
better I don't think so
It's Tricky how I'm using the uh the
turn the play to
toen I mean I could go real quick I can
add I can add like bull
attacking and I can add like into
attacking and I can add like into
defending
maybe this does
it and
then so we do phaser attack
then so we do phaser attack
right
board and we do board cards
board and we do board cards
attacking equals
attacking equals
not board cards attacking like
this and then we just do board cards
this and then we just do board cards
attacking like this
and
and
then we just do
then we just do
if uh this actually becomes easier come
if uh this actually becomes easier come
to think about it
to think about it
right because we just
do yeah this actually becomes easier did
do yeah this actually becomes easier did
you end up using a stack to manage the
you end up using a stack to manage the
different set of yes yes I did so we can
different set of yes yes I did so we can
manipulate it down the road yes I did
manipulate it down the road yes I did
um the way it works is each of these
um the way it works is each of these
things that you see here these functions
things that you see here these functions
they go onto the stack and then they add
they go onto the stack and then they add
stuff to the stack as well so like when
stuff to the stack as well so like when
a phase is over it'll just put whatever
a phase is over it'll just put whatever
the next phase is onto the stack and you
the next phase is onto the stack and you
also have control flow execution so what
also have control flow execution so what
you can do is you can say whether you
you can do is you can say whether you
want to put something on the stack and
want to put something on the stack and
return control to the user or put
return control to the user or put
something on the stack but keep going uh
something on the stack but keep going uh
and like keep executing stuff on the
and like keep executing stuff on the
stack so it's very general and it's uh
stack so it's very general and it's uh
it's very simple and it took a little
it's very simple and it took a little
bit more code than I had before but it
bit more code than I had before but it
should be very easy to work
should be very easy to work
with this is much much cleaner than I
with this is much much cleaner than I
had
had
before let me see if I can get this
before let me see if I can get this
thing done quickly so we can actually
thing done quickly so we can actually
have the full demo I want this shipped
have the full demo I want this shipped
today so like in the evening maybe I can
today so like in the evening maybe I can
chat with you guys and tell you about it
chat with you guys and tell you about it
and uh you know what is going to be
and uh you know what is going to be
needed there
right chilling
one okay I think this does
it if J
block not attacking
block Defenders
Defender
board card Star
card card is
land it's equal
to1 for
tricky
tricky card
not
continue just a bit of tricky
continue just a bit of tricky
refactoring here take me a few minutes
array and then at the end of this step
here just do four
attacking is
false negative
one like this
and the board State should not matter
and the board State should not matter
the end of the
game let's see what I have to fix here
Defender
Defender
Defenders what's this
Defenders what's this
here you're already blocking is the goal
here you're already blocking is the goal
here
loock
index I think this
works and
works and
Defenders yeah know this is
Defender
board
not is there a a flip I think there is
not is there a a flip I think there is
like a
unary
unary
see is there like a cleaner flip wall
not equal true that's interesting I mean
not equal true that's interesting I mean
exor but we don't need to do that
exor but we don't need to do that
I was just trying to see if there was
I was just trying to see if there was
like a a just like a clean unary
thing exor
works okay and now we actually we get to
works okay and now we actually we get to
change the uh the rendering here
right so we just get to do if card.
right so we just get to do if card.
attacking oh that's so nice
right if card Do
attacking and if card not
attacking and now we don't even have to
attacking and now we don't even have to
do this anymore
right Defender board here all right
attack if attack is negative one then
attack if attack is negative one then
you
continue look at
that yeah this is actually way easier
that yeah this is actually way easier
than before
of course I say that knowing that um
of course I say that knowing that um
there's going to be some stuff to fix
still
anding attacker board length
yeah you still need the attacker board
right all right and let's see uh how far
right all right and let's see uh how far
this gets play
land
land
yeah let's uh fix that
wait I forgot one thing I did forget one
wait I forgot one thing I did forget one
thing
right randomized deck
let's try
this how is this
this how is this
possibly defending should be equal to
possibly defending should be equal to
negative one here that shouldn't be
negative one here that shouldn't be
possible let's see
because I randomized both decks
because I randomized both decks
right say it's zero not negative
one Deck cards is equal to negative
1 oh
yeah it's got to go up
there there we
go 18 very
nice now we wait for them to attack me
okay so I'm now on my block stage
right why is this thing not uh
oh the lines are just reversed
oh the lines are just reversed
right yeah it's supposed to be it's
right yeah it's supposed to be it's
drawing in the wrong direction that's
drawing in the wrong direction that's
fine
so me figure this out
I'm going to not think about this first
I'm going to not think about this first
and I'm just going to see if I get if
and I'm just going to see if I get if
like my first guess
like my first guess
works that's usually a good strategy
[Music]
okay wait for them to attack
me okay now he attacks me
right okay so this is closer
this is almost
correct there are two things I need to
correct there are two things I need to
fix here
right for
fix
fix
that and now the second
thing this should be Defender board
thing this should be Defender board
length right
oops let's see how much this
fixes okay
well now this is
simply it's simply
backwards like simply just backwards
backwards like simply just backwards
right
let me think about this what am I doing
let me think about this what am I doing
wrong here
wouldn't it just be so much easier if I
wouldn't it just be so much easier if I
did this
separately like what if right
separately like what if right
here I guess I have to do it after I
here I guess I have to do it after I
draw the boards
draw the boards
right but
like for
we get the card right my board
here e
yeah I literally only ever have to do
this
this
Plus Card
X Card y
this literally
it let's see if this does it
huh well this doesn't really do it now
huh well this doesn't really do it now
does
it
so my board
so my board
length card y so yeah this is my board
length card y so yeah this is my board
right
hard y
hard y
one r.
one r.
[Music]
[Music]
defending here let's just try
defending here let's just try
this I don't know why I'm being stupid
this I don't know why I'm being stupid
with this particular thing
with this particular thing
but I am going to have to take a break
but I am going to have to take a break
in a few to get uh a shake because I'm
in a few to get uh a shake because I'm
getting rather hungry
all right so now we're being
attacked are these just
backwards these are just backwards right
how the hell are these
backwards I am confused
oh
wait no this is
right the opponent board is Row one my
right the opponent board is Row one my
board is row two
right so card X my board length
right so card X my board length
right board y 30 G2
right board y 30 G2
plus defending opponent
plus defending opponent
board looks good to me so let's see
board looks good to me so let's see
what's wrong
here well we still have this Matrix
here well we still have this Matrix
don't we we have this Matrix to look at
uh this Defender thing is not changing
uh this Defender thing is not changing
though when
though when
I when I press this is
it that's a little concerning
the attackers is correct but this
the attackers is correct but this
Defenders Matrix looks
wrong one more time just to be sure
well look at this Defender thing right
here this is nuts
right let's figure out how this is
right let's figure out how this is
getting computed I don't know if this is
getting computed I don't know if this is
even being
used
e e
let's see if this fixes the uh crazy
let's see if this fixes the uh crazy
board
stuff so we just do land Z
stuff so we just do land Z
Z
Z
attack okay board is empty and now we
attack okay board is empty and now we
play a land we play this we do this fine
play a land we play this we do this fine
enter my attacks
enter my attacks
here
here
and what
the no something's weird still
yeah these Defenders are not good
it really just seems like the uh the
it really just seems like the uh the
y-coordinate is
y-coordinate is
flipped doesn't
flipped doesn't
it yeah it just really seems like the
it yeah it just really seems like the
y-coordinate is flipped so now how the
y-coordinate is flipped so now how the
how was the y-coordinate possibly
flipped wait
card cards in my board
0 one
two not understanding
two not understanding
this there's something I'm not getting
this there's something I'm not getting
here
I don't want to just like flip them
I don't want to just like flip them
because I don't understand
why you
why you
know for
here Def defending with seven it says
here Def defending with seven it says
right it's a good thing I didn't just
right it's a good thing I didn't just
flip it because you can see it's
flip it because you can see it's
actually still off
here oh yeah this index is totally wrong
yeah know this index is
yeah know this index is
wrong well making an rltc GM is awesome
wrong well making an rltc GM is awesome
waiting for this overlap mtj and
waiting for this overlap mtj and
sometimes Hearthstone player yeah I mean
sometimes Hearthstone player yeah I mean
I uh I asked people if they'd be
I uh I asked people if they'd be
interested in this and we got a ton of
interested in this and we got a ton of
people who said they'd be interested in
people who said they'd be interested in
contributing to this so I'm finishing
contributing to this so I'm finishing
the prototype for this in the next
the prototype for this in the next
couple of hours here and then this will
couple of hours here and then this will
just be an open- source project as a
just be an open- source project as a
part of puffer so if you're interested
part of puffer so if you're interested
in contributing to stuff on this you
in contributing to stuff on this you
know come on over we need more people on
know come on over we need more people on
it
I think I found the
issue let's see about this
nice great to see you back I I haven't
nice great to see you back I I haven't
been able to stream as much lately just
been able to stream as much lately just
because like I stream Dev right well it
because like I stream Dev right well it
turns out when there's so much Dev uh
turns out when there's so much Dev uh
there's a point at which it's like no I
there's a point at which it's like no I
just have to grind this out solo you
just have to grind this out solo you
know
okay
okay
play play a land play
this
this
six can't play this can play
six can't play this can play
this takes it a while to pick a random
this takes it a while to pick a random
move we're just going to let it pass a
move we're just going to let it pass a
bit and
bit and
then defending
then defending
three I am defending three 012 2
three
uh there's a
uh there's a
rumor no I'm
rumor no I'm
not I like to be able to go home for
Christmas but what I will do is I will
Christmas but what I will do is I will
give these out to anybody I meet up with
give these out to anybody I meet up with
we got puffer stickers they're pretty
nice
e e
actually wait does this correct blocking
actually wait does this correct blocking
three with index
three with index
two oh
okay so
why my board. length
I don't know why this is taking me so
I don't know why this is taking me so
long this really shouldn't be that hard
long this really shouldn't be that hard
to
finish ah right here this
is this is it I have this portion
is this is it I have this portion
backwards
there blocking
there blocking
index with yeah this is it print was
index with yeah this is it print was
right code below it was
wrong okay we do this we swing Play Our
wrong okay we do this we swing Play Our
Land We
Land We
swing we play our land we chill a
swing we play our land we chill a
bit let's play land let's play big
bit let's play land let's play big
card we wait for them to
card we wait for them to
swing okay now they
swing oh yeah yeah look at
that so watch this I can go like this
that so watch this I can go like this
and I can just say I'm going to block
and I can just say I'm going to block
you
you
here and then I can say what's this uh a
here and then I can say what's this uh a
one two so I can block you here and then
one two so I can block you here and then
you both of your cards die
I still took damage to that didn't I
I still took damage to that didn't I
okay so we got to fix some Cals we're so
okay so we got to fix some Cals we're so
close at this point
close at this point
though this is so
close
cheat draw a
line e
try
this expected
this expected
expression I think I have to cast this
expression I think I have to cast this
right
there we go
land
land
uh now we do our attack or whatever now
uh now we do our attack or whatever now
we do our land we
we do our land we
play We skip we play land
play We skip we play land
skip uh land Big
Card wait for them to
Card wait for them to
swing okay so now we're going to block
swing okay so now we're going to block
you
you
here and then we're going to block you
here and then we're going to block you
here
right what should happen right
right what should happen right
here
here
is their card should die my first one
is their card should die my first one
should
should
die my fifth card here let's actually
die my fifth card here let's actually
just like before and after
this just so we can see exactly how this
this just so we can see exactly how this
is messing
up
okay so what happened is I took two
okay so what happened is I took two
damage I should not have taken two
damage this card's HP did not get
reset his cards both did die though
which is correct
if
the attacker Health wait if the defender
the attacker Health wait if the defender
health is less than the attacker's
attack then you kill it
right you need attacker Health in here
right you need attacker Health in here
as well and attacker
Health attacker health is going to
Health attacker health is going to
be Min equal Defender
be Min equal Defender
attack like this right
attack like this right
and you remove it and you keep
and you remove it and you keep
going otherwise you don't kill
it nothing happens I think if you don't
it nothing happens I think if you don't
kill it right
no if you don't kill it then your card
no if you don't kill it then your card
is dead
is dead
right no that's also not
true ah this is so easy I don't know why
true ah this is so easy I don't know why
this is bothering
me for
back from your health
oh it's possible that neither of these
oh it's possible that neither of these
things
right e
if you don't kill
if you don't kill
it
then attack her
health minus equal to Defender attack
and Defender Health doesn't matter
and Defender Health doesn't matter
because you don't kill it right
attack is
attack is
zero remove is
true and these don't things don't
matter you just break
here I think this is
it Well's play this out again and see if
it Well's play this out again and see if
it makes sense
now land play
now land play
cards play our land play
cards play our land play
this play our next land pass play land
this play our next land pass play land
play Big
Card okay now they swing
Card okay now they swing
now we can block like
now we can block like
this and then we block like this
right why did we still take damage
zero maybe it's this I think this is it
[Music]
let's do like
this okay so they
this okay so they
have block like this
have block like this
and then we will block this one with our
and then we will block this one with our
big card we no longer take damage they
big card we no longer take damage they
don't take damage
don't take damage
either
and yeah I believe that was good
and yeah I believe that was good
right and then let's say that we
swing we're going to do big swing
swing we're going to do big swing
here so this is
here so this is
up
to up to 12
damage so apparently he blocked a little
bit
possibly we'll let him swing
possibly we'll let him swing
again okay he's going to swing with some
again okay he's going to swing with some
cards uh so what we're going to do is
cards uh so what we're going to do is
we're going to intentionally not block
we're going to intentionally not block
great we're going to
great we're going to
block so we should get one this card
block so we should get one this card
should be killed and we should have one
should be killed and we should have one
damage flow through right and then we're
damage flow through right and then we're
going to block like this I'm going to
going to block like this I'm going to
take I'm going to take the screenshot
take I'm going to take the screenshot
again so we can make sure that this
again so we can make sure that this
resolves as we
expect and then we're going to hit
expect and then we're going to hit
enter and let's see what happened so we
enter and let's see what happened so we
took one
took one
damage as expected we took one damage
damage as expected we took one damage
right from this card flowing
through we killed their card but this
through we killed their card but this
should not have one right now this
should not have one right now this
should be this should have been a
should be this should have been a
reset so why did his
reset so why did his
health why did the attacker Health go
down cuz this needs to be
wait attack her
wait attack her
health why is this happening
twice that's
weird okay let's try this
again this is almost done we're
again this is almost done we're
like so good so
close Okay Place some
close Okay Place some
lands I get some good cards
lands I get some good cards
out let's get like uh
out let's get like uh
two we wait for them to do
something now we're going to do our
something now we're going to do our
screenshots
screenshots
again so we're going to perfect block
again so we're going to perfect block
this and then we're going
this and then we're going
to uh we're going to fail here
right see what happened is I took one
right see what happened is I took one
damage from failing to block correctly
damage from failing to block correctly
here we lost both of our cards but he
here we lost both of our cards but he
lost one as
lost one as
well this is correct let's just do one
well this is correct let's just do one
more scenario
more scenario
maybe uh let's get some cards back so we
can actually play the game
uh okay so let's just like let him hit
uh okay so let's just like let him hit
us 17 that's
us 17 that's
fine okay perfect this will be a nice
fine okay perfect this will be a nice
complex scenario so we've got triple
complex scenario so we've got triple
swing here so let's
swing here so let's
do we block into this no let's see so I
do we block into this no let's see so I
would probably do block
would probably do block
here and then block here nope a block
here and then block here nope a block
this one and then we'll block like
this one and then we'll block like
this and
this and
then we'll block
then we'll block
whoops six is already
blocked something to screwy here
yeah something screw here for
sure with the way our blocks just went
through if
that was very weird we need to replicate
that was very weird we need to replicate
some stuff I need to at least give them
some stuff I need to at least give them
a working
game yeah that'll be perfect I think I
game yeah that'll be perfect I think I
can get this cleaned up it'll be 4our
can get this cleaned up it'll be 4our
stream and then I'll get some other
stream and then I'll get some other
stuff done in the afternoon after this
stuff done in the afternoon after this
solo
okay we play our
okay we play our
lands play
land and I think we're happy with this
maybe we'd kind of like a three here we
maybe we'd kind of like a three here we
go okay so now we have
let's see so we
block can block with
one very very wrong
then it says five is already blocked
huh oh this is interesting
if Defender board
I think it's
this let's
this let's
see
okay we're going to get as a side effect
okay we're going to get as a side effect
of this we're going to get really fast
of this we're going to get really fast
at playing Magic the Gathering
play this play
play this play
this okay play our
this okay play our
land play
land play
this
okay so this kills both of our cards but
okay so this kills both of our cards but
we take no damage right
yes
perfect did he take damage from that I
perfect did he take damage from that I
don't think
don't think
so we'll play this and
so we'll play this and
this and then is two three we're going
this and then is two three we're going
to perfect
to perfect
block like this nobody loses
block like this nobody loses
Health uh do we have five lands we do we
Health uh do we have five lands we do we
play our big uh we play our c like
play our big uh we play our c like
this he's got a 2
this he's got a 2
three we're going to let him hit us 17
damage okay now we have an interesting
damage okay now we have an interesting
thing to
thing to
block um so we're going to do block this
block um so we're going to do block this
with five and this with like this and
with five and this with like this and
then we're going to make sure this will
then we're going to make sure this will
be our last test case
it's actually kind of interesting that
it's actually kind of interesting that
it should be very easy to make um some
it should be very easy to make um some
test cases for
this okay
so we should take their first card out
so we should take their first card out
which is their two three is gone and we
which is their two three is gone and we
lose no health for
lose no health for
this and then they take our card out our
this and then they take our card out our
34 which they
34 which they
did uh they keep their
did uh they keep their
card and we take one damage which is
card and we take one damage which is
exactly what happened perfect
um okay cool
and
and
okay
okay
if r. is
if r. is
tapped we have is
tapped
if color color
if color color
equals
AP so it's going to
AP so it's going to
be uh
be uh
28 0 0
red and then
red and then
[Music]
[Music]
here we'll do the same
do plus 32 as well let's align the
fonts
X
X
Plus 322
okay
why let's figure out what the heck is up
why let's figure out what the heck is up
with
this Plus
168 32 I don't think that's 80 is it
168 32 I don't think that's 80 is it
that's
that's
70 plus 16 no
70 plus 16 no
neither 72
wait I'm being like crazy crazy stupid
right this is plus
80 but actually this was close enough
oh so it's plus
oh so it's plus
right
right
64 let's try
this uh yeah that works but we have to
this uh yeah that works but we have to
fix the land
thing is there a lightning bolt thing un
code lightning bolt
here what if I just do this I'm sure it
here what if I just do this I'm sure it
won't actually show
up yeah I I don't think this is going to
up yeah I I don't think this is going to
show
show
up yeah it just shows up as question
up yeah it just shows up as question
marks on the other screen okay
so we'll just do this at like what
so we'll just do this at like what
plus
oops just clean up this we're just
oops just clean up this we're just
cleaning stuff up at the
moment and then the phase
moment and then the phase
here this phase can go in the bottom of
here this phase can go in the bottom of
the screen I think
the screen I think
this is also
not
not
eight
scen okay so here we
go this good right
Tech okay and then we have play
Phase this is also not symmetrical at
Phase this is also not symmetrical at
the moment I kind of likeed where the
the moment I kind of likeed where the
play button was before to be honest
uh it just needs to
uh it just needs to
be
symmetrical let me see how this
symmetrical let me see how this
is get
is get
card so there are four rows of
cards so we
cards so we
have minus they're 128 each so we've got
have minus they're 128 each so we've got
to
spare and it's it's four rows so that
spare and it's it's four rows so that
means you need
means you need
five not divisible by five
80 so what if I just do
80 so what if I just do
plus plus
20 oops
enironment we're just making this
decent well not bad
and then this can
be we put the
be we put the
land we put our card
land we put our card
right we attack with our
right we attack with our
[Music]
[Music]
card now we play our
card now we play our
land look at that it Taps the lands for
land look at that it Taps the lands for
us you see that it doesn't turn them yet
us you see that it doesn't turn them yet
but I have it tap like this for
now and then they untap
let's see if we can get a cool
let's see if we can get a cool
screenshot out of this
yeah he just tapped his lands out
yeah he just tapped his lands out
okay do I think he's going to
okay do I think he's going to
swing let's say I just
swing let's say I just
hit
hit
nine and then I'm going to do a three
nine and then I'm going to do a three
Mana it's like
Mana it's like
eight and we
eight and we
play and he
play and he
attacks and then I can do like this
that's a nice screenshot right
there PCG
look at
look at
that very
nice just over 600 lines with uh the
nice just over 600 lines with uh the
extra debug
stuff I think we can get rid of this as
stuff I think we can get rid of this as
well this is not really useful
anymore actual lines of code under 600
HML ECG
doc looks good
best
best
RB tank
something
Docker PG
slash
STS
STS
TCG I'm putting it on the web
let's
make break
out we'll just
put in here for now right
put in here for now right
oops did I mess this
oops did I mess this
up yeah I think I
did GG
G
sets and that should be
it
server
server
poost I need to copy the thumbnail
assets okay
look at
that now we got our TCG
here and we
here and we
can play it
that's pretty good to have this online
that's pretty good to have this online
already at least early build of
it let's uh commit this up
that's did we commit our stuff
that's did we commit our stuff
here no we
didn't. C build local build
web we modify the setup at
web we modify the setup at
all I don't think so I think this just
all I don't think so I think this just
builds
working TCG
working TCG
prototype 100 lines as
promise so the really nice thing about
promise so the really nice thing about
doing all this in C
it's already online that's all I had to
it's already online that's all I had to
do no custom code
link people the source
G do
C.H for
that wasn't bad
awesome 4 hours
exactly oops we don't want that we want
exactly oops we don't want that we want
the screenshot
image
hey Ramy it's playable on puffer GG
they probably have like link detection
they probably have like link detection
stuff for this
stuff for this
but maybe not
that's pretty nice
I like how easy it is to just get these
I like how easy it is to just get these
things online and playable you
know there's no mouse UI or anything but
know there's no mouse UI or anything but
you can just do like you know I probably
you can just do like you know I probably
need to add better instructions to
stuff
stuff
um but it
works lands tap
themselves I probably can crash it by
themselves I probably can crash it by
winning to be
fair I haven't really played with the
fair I haven't really played with the
reset
conditions uh-oh well we'll just let
conditions uh-oh well we'll just let
them
them
hit
hit
three
three
two
two
six
six
GG oh does it actually reset
cleanly I was not expecting
that got awful draw
I think technically you can just draw a
I think technically you can just draw a
full hand of lands and just be
screwed H it actually blocked me
did I lose health over
that block with
six and I win
cool very
cool very
nice I'm gonna hop off for the time
nice I'm gonna hop off for the time
being I'm uh I'm going to get some other
being I'm uh I'm going to get some other
work
work
done we got a good session in
done we got a good session in
here and
here and
uh yeah I basically a lot of the dev for
uh yeah I basically a lot of the dev for
this is just going to be in the Discord
this is just going to be in the Discord
for the next few days um so if you want
for the next few days um so if you want
to get involved with this project at all
to get involved with this project at all
check it out there

Kind: captions
Language: en
should be live
here what is wrong with my
here what is wrong with my
windows all right um I've been out for a
windows all right um I've been out for a
few days because I've been doing a lot
few days because I've been doing a lot
of Dev on stream to the point there was
of Dev on stream to the point there was
so much Dev I just needed to focus in on
so much Dev I just needed to focus in on
stuff for a few days and there's still
stuff for a few days and there's still
quite a bit left to do but it's in a
quite a bit left to do but it's in a
little bit of a better place now um at
little bit of a better place now um at
least it was until this new project
least it was until this new project
randomly cropped up
randomly cropped up
um so let me talk a little bit about
um so let me talk a little bit about
what's going on here CU there's there's
what's going on here CU there's there's
something pretty cool that we're
something pretty cool that we're
starting on and it'll be easier if I can
starting on and it'll be easier if I can
just show the
code all right puffer
code all right puffer
lib
puffer and
puffer and
TCG oops I got to pull this
TR right
TR right
so what we have here is a very
so what we have here is a very
early not even working prototype I had a
early not even working prototype I had a
a somewhat working prototype before but
a somewhat working prototype before but
I have to refactor it keep up the work
I have to refactor it keep up the work
thank you thank you I'll say so what
thank you thank you I'll say so what
we're doing today
we're doing today
here um I I figured that I had a little
here um I I figured that I had a little
bit of something I could stream uh
bit of something I could stream uh
there's still a lot of stuff I got to
there's still a lot of stuff I got to
finish off stream this the next update
finish off stream this the next update
to puffer is literally 10,000 lines of C
to puffer is literally 10,000 lines of C
it's it's going to Triple the size of
it's it's going to Triple the size of
the library and puffer is going to go
the library and puffer is going to go
from 98% python to like 60 70% c
um hold on let me get to the
repo where is this
repo where is this
perer lib
perer lib
environments
environments
okay do see
okay do see
so what happened here is I had all these
so what happened here is I had all these
environments that I was working on right
environments that I was working on right
and they were in kind of a good spot and
and they were in kind of a good spot and
I was kind of ready to lock this set of
I was kind of ready to lock this set of
environments in for the next update uh
environments in for the next update uh
but then randomly we had like five
but then randomly we had like five
different people get interested in
different people get interested in
building a trading card game environment
building a trading card game environment
for puffer uh and generally when you get
for puffer uh and generally when you get
people interested in doing stuff right
people interested in doing stuff right
you have to have something that they can
you have to have something that they can
work on very quickly before they get
work on very quickly before they get
distracted and you lose momentum so what
distracted and you lose momentum so what
I've been doing over the last couple of
I've been doing over the last couple of
days
days
is I've been working on this little
is I've been working on this little
prototype it's based Loosely off of uh
prototype it's based Loosely off of uh
Magic the Gathering um if we get sued
Magic the Gathering um if we get sued
it'll be based off of a different card
it'll be based off of a different card
game right uh it doesn't really matter
game right uh it doesn't really matter
like it's for AI to play anyways but the
like it's for AI to play anyways but the
idea is just to have some sort of TCG
idea is just to have some sort of TCG
environment for RL that has a lot of the
environment for RL that has a lot of the
complexity in it and we have
complexity in it and we have
contributors interested in this we've
contributors interested in this we've
got one formal uh research collab with
got one formal uh research collab with
another lab we've got a guy that's been
another lab we've got a guy that's been
already contributing a bunch of M who's
already contributing a bunch of M who's
interested in this and we've got a
interested in this and we've got a
couple others as well now so people want
couple others as well now so people want
to do this and really the thing that I
to do this and really the thing that I
want to get
want to get
today I want to ship a working minimal
today I want to ship a working minimal
prototype that feels fine to play that
prototype that feels fine to play that
has just the basic elements of a game so
has just the basic elements of a game so
not all the triggers not all of like the
not all the triggers not all of like the
fancy card effects and stuff but just
fancy card effects and stuff but just
like you can play a land I guess a Mana
like you can play a land I guess a Mana
card whatever you can play your cards
card whatever you can play your cards
you can attack you can block that type
you can attack you can block that type
of stuff uh I think that that whole
of stuff uh I think that that whole
thing is doable in about 500 lines of
thing is doable in about 500 lines of
code and I got very very close to doing
code and I got very very close to doing
that um but the way that I built it it
that um but the way that I built it it
the code was just getting too
the code was just getting too
complicated and had too much branching
complicated and had too much branching
for people to be able to use it so I
for people to be able to use it so I
came up with a weird idea on how to make
came up with a weird idea on how to make
it better and uh that's what we're going
it better and uh that's what we're going
to be doing right
to be doing right
now welcome back sorry was traveling to
now welcome back sorry was traveling to
Costa Rica but another the loop this
Costa Rica but another the loop this
this is awesome to catch well I mean
this is awesome to catch well I mean
I've been out for a few days as well
I've been out for a few days as well
I've been I've been doing a combination
I've been I've been doing a combination
of Devon
meetings um you know puffer is a company
meetings um you know puffer is a company
and we are starting to look for collabs
and we are starting to look for collabs
and clients and things so if you got
and clients and things so if you got
companies that want some help with RL
companies that want some help with RL
stuff you let me know but uh yeah it's
stuff you let me know but uh yeah it's
been there's been a bunch of meetings
been there's been a bunch of meetings
and there's been a bunch of
and there's been a bunch of
Dev it's been productive but definitely
Dev it's been productive but definitely
busy
busy
so let's talk a little bit about what
so let's talk a little bit about what
I'm wanting to do here so we've got this
I'm wanting to do here so we've got this
TCG environment thing uh you have a card
TCG environment thing uh you have a card
array that can be used to represent a
array that can be used to represent a
deck a hand the board whatever you've
deck a hand the board whatever you've
got Health you've got Mana got whether
got Health you've got Mana got whether
you've played a land this turn you've
you've played a land this turn you've
got some data that tells you who's
got some data that tells you who's
attacking and who's
attacking and who's
defending few other variables and then
defending few other variables and then
the stuff you'd expect
the stuff you'd expect
here the thing that's tricky and also I
here the thing that's tricky and also I
should move this
should move this
like this
yeah and you'll be able to see a little
yeah and you'll be able to see a little
bit you see how much branching there is
bit you see how much branching there is
here and down here it's even uh it's
here and down here it's even uh it's
even worse so that's the
even worse so that's the
renderer I let me get an image of this
renderer I let me get an image of this
as well because this doesn't build right
as well because this doesn't build right
now but I have on the Discord I posted
now but I have on the Discord I posted
in the puffer Discord so you can get us
in the puffer Discord so you can get us
just a sense of what this thing looks
just a sense of what this thing looks
like it's very very basic
oh wow this guy's made his uh his go
oh wow this guy's made his uh his go
environment awesome we got all these
environment awesome we got all these
contributors making cool
contributors making cool
stuff hey folks you guys can hop in and
stuff hey folks you guys can hop in and
just like build stuff if you want like a
just like build stuff if you want like a
lot of these people have no prior RL
lot of these people have no prior RL
experience it's really just if you can
experience it's really just if you can
code like if you can code you can make
code like if you can code you can make
these
these
environments cuz puffer handles a lot of
environments cuz puffer handles a lot of
the infra stuff for you let me see if I
the infra stuff for you let me see if I
can find the TCG screenshot that I
can find the TCG screenshot that I
dropped in Dev here
before this it maybe I put it in
before this it maybe I put it in
gen okay yeah here's the TCG prototype
gen okay yeah here's the TCG prototype
so you've got cards they've got stats
so you've got cards they've got stats
they've got lands you can play them to
they've got lands you can play them to
the board right and then you can attack
the board right and then you can attack
and block and stuff uh so we want this
and block and stuff uh so we want this
working today cleanly in a way that just
working today cleanly in a way that just
feels reasonable to play and you feel
feels reasonable to play and you feel
like you you could play something with
like you you could play something with
it cool CAU never caught your stream
it cool CAU never caught your stream
live before love the project thank you
live before love the project thank you
yeah I haven't been streaming the last
yeah I haven't been streaming the last
few days cuz like the dev has kind of
few days cuz like the dev has kind of
been a bit much and also there's one
been a bit much and also there's one
there's one new environment that is not
there's one new environment that is not
announced yet that will be open source
announced yet that will be open source
but I want it to be done and sort of
but I want it to be done and sort of
like release it all at once uh that's
like release it all at once uh that's
going to be like a 4,000 line commit on
going to be like a 4,000 line commit on
its own so there a lot of code and also
its own so there a lot of code and also
just too many damn
just too many damn
meetings but hey come got to get Revenue
right and also I mean there are a lot of
right and also I mean there are a lot of
cool people doing stuff with ourl that's
cool people doing stuff with ourl that's
fun to talk to but so much def needs to
fun to talk to but so much def needs to
get
done I only got so many hours in the
day yeah you can see what a mess this is
day yeah you can see what a mess this is
right like this is in a while loop and
right like this is in a while loop and
like there all these phases and you can
like there all these phases and you can
see all this branching stuff and you can
see all this branching stuff and you can
see all these print statements with me
see all these print statements with me
trying to debug this mess um is this the
trying to debug this mess um is this the
Moa M oh no this is a new one uh the Moa
Moa M oh no this is a new one uh the Moa
is still that's still around we're still
is still that's still around we're still
going to work on this this is just the
going to work on this this is just the
skeletal prototype of a TCG trading card
skeletal prototype of a TCG trading card
game uh this is what it looked like
game uh this is what it looked like
before I broke stuff we want to get it
before I broke stuff we want to get it
back to looking like this maybe with a
back to looking like this maybe with a
couple extra things and we want it to be
couple extra things and we want it to be
like nice clean code that people can
like nice clean code that people can
build off of because I think this one is
build off of because I think this one is
going to be largely Community
going to be largely Community
Development Le like we have enough
Development Le like we have enough
contributors that want to work on this
contributors that want to work on this
project that if I get them a skeleton of
project that if I get them a skeleton of
it like a prototype they'll be able to
it like a prototype they'll be able to
take it from there with my input but I
take it from there with my input but I
really need to get a clean starter code
really need to get a clean starter code
for them pretty much so that's what
for them pretty much so that's what
we're doing today uh I'm going to open
we're doing today uh I'm going to open
up I'm going to open up like a draw tool
up I'm going to open up like a draw tool
because one of the reasons I jumped on
because one of the reasons I jumped on
stream is because I wanted to just talk
stream is because I wanted to just talk
through my thoughts on how to design
through my thoughts on how to design
this cuz I got a little stuck
this cuz I got a little stuck
yesterday and I I know usually I can
yesterday and I I know usually I can
figure stuff out if I just spend some
figure stuff out if I just spend some
time talk through it on
time talk through it on
stream not this
stream not this
one yeah this
one okay
so I
okay
okay
so with the TCG
so with the TCG
right you've got
right you've got
like the key
like the key
elements excal draw is that
better
better
cool uh hold Mouse wheel
cool uh hold Mouse wheel
or space bar while
or space bar while
dragging
okay where do I
draw okay
cool how do I set this thing
whatever we'll do this on white for now
um so with the TCG you have like your
um so with the TCG you have like your
deck that you draw from right you've got
deck that you draw from right you've got
your
your
[Music]
[Music]
hand you've got your board State it's
hand you've got your board State it's
like maybe something like this which is
like maybe something like this which is
your board the opponent's board they've
your board the opponent's board they've
got their
got their
[Music]
[Music]
hand their deck and then there's also
hand their deck and then there's also
like graveyard or whatever
like graveyard or whatever
right and the key thing here is that
right and the key thing here is that
there are a ton of phases and there's
there are a ton of phases and there's
like branching logic and you need to
like branching logic and you need to
figure out when you actually want to
figure out when you actually want to
return it to the user it's the tricky
return it to the user it's the tricky
part cuz like so you there's like draw
part cuz like so you there's like draw
right
and then once you draw okay this is
and then once you draw okay this is
actually kind of nice that the way this
actually kind of nice that the way this
feels this is funny um so you have draw
feels this is funny um so you have draw
phase and then
phase and then
like so once you draw right you have to
like so once you draw right you have to
be able to play your cards right so then
be able to play your cards right so then
there's like a play
there's like a play
Phase then there's like attack
TCG is a trading card game so magic the
TCG is a trading card game so magic the
Gathering Hearthstone Legends of Runa
Gathering Hearthstone Legends of Runa
one of
those the thing that's really tricky
those the thing that's really tricky
with these phases is that um they're
with these phases is that um they're
kind of
kind of
conditional so
like let's say that you draw your card
like let's say that you draw your card
right but then there aren't any cards
right but then there aren't any cards
cards that you can play then what you
cards that you can play then what you
want to do is you want to skip
want to do is you want to skip
potentially straight to the attack phase
potentially straight to the attack phase
and if there is nothing that you can
and if there is nothing that you can
attack with then you skip you know over
attack with then you skip you know over
like this but if there's a card that you
like this but if there's a card that you
can play right but you can't attack then
can play right but you can't attack then
maybe you skip down like this so it's
maybe you skip down like this so it's
like this chain of events is kind of
like this chain of events is kind of
weird and it's very difficult to express
weird and it's very difficult to express
this uh in typical branching logic so
this uh in typical branching logic so
what I was going to do is I was going to
what I was going to do is I was going to
have there be an explicit call stack oh
have there be an explicit call stack oh
and by the way there are a lot of things
and by the way there are a lot of things
that do this because later on when we
that do this because later on when we
start implementing cards like there are
start implementing cards like there are
cards that will add essentially
cards that will add essentially
stages into this stack of of things as
stages into this stack of of things as
well so what I was thinking is we have
well so what I was thinking is we have
like this explicit call
like this explicit call
stack right where we go
stack right where we go
like uh
draw and then when this gets called you
draw and then when this gets called you
know this is going to put onto the next
know this is going to put onto the next
one this will put
play and then you draw so then you just
play and then you draw so then you just
have
play and then if you actually need uh if
play and then if you actually need uh if
you can't attack or whatever like this
you can't attack or whatever like this
thing will check basically for what it
thing will check basically for what it
puts onto the call stack next
for
instance and then that actually will let
you and then if each of these functions
you and then if each of these functions
returns like a a code or something it
returns like a a code or something it
can tell us whether we're done right
now so basically we have these functions
now so basically we have these functions
they can get chained together in a nice
they can get chained together in a nice
Loop and we will be able to tell when um
Loop and we will be able to tell when um
when we're ready to return control to
when we're ready to return control to
the user or not I think that this design
the user or not I think that this design
works I think that this is how you do a
TCG I think
so let's try this because this is what I
so let's try this because this is what I
started implementing just very very
started implementing just very very
briefly
so we have this play
Phase and
then okay I think I need to just like
then okay I think I need to just like
move all these things into their own
functions this
attack uh these also need to know your
attack uh these also need to know your
action I
action I
believe yeah so let's do
this so each of these goes into their
this so each of these goes into their
own function
block and then I think we're going to
block and then I think we're going to
get a pretty
get a pretty
clean like main phase logic out of this
clean like main phase logic out of this
maybe
it's kind of hard to tell still whether
it's kind of hard to tell still whether
this will be the way to do
it this still feels very doable though
it this still feels very doable though
it's like maybe slightly more
it's like maybe slightly more
complicated than I thought originally
complicated than I thought originally
but like really still not that
bad okay
bad okay
so when you call step here
I think we don't do any of this pointer
I think we don't do any of this pointer
Shenanigans and we just kind of write
out we just write out the phases
yeah I do actually have to grab the
yeah I do actually have to grab the
reset method from uh up
reset method from uh up
top because you'll see in a second reset
top because you'll see in a second reset
actually does have to call step the way
actually does have to call step the way
I'm doing it now
folks this is this is a project that
folks this is this is a project that
we're going to need contributors on as
we're going to need contributors on as
well like as soon as I get this
well like as soon as I get this
prototype done hopefully today uh it's
prototype done hopefully today uh it's
going to basically be on the community
going to basically be on the community
to like add stuff to
this the code will ideally be much
this the code will ideally be much
cleaner though before I hand that
over okay so here's the reset
over okay so here's the reset
uh we don't like this draw phase thing
uh we don't like this draw phase thing
here at all oh no this is fine this is
here at all oh no this is fine this is
just drawing the initial
cards phase draw I don't think we even
cards phase draw I don't think we even
need phase indicators anymore do
need phase indicators anymore do
we I don't think
so I think we literally get to just do
this we also probably should just make
this we also probably should just make
some like
stack just we should make some stack
stack just we should make some stack
thing just explicitly just so I don't
thing just explicitly just so I don't
mess it
mess it
up let's just do um
I don't know
I don't know
stack where I put
this ah right here
call in
call in
action PCG and int okay and then what
action PCG and int okay and then what
we'll do is type death
we'll do is type death
Dr
stack uh and then this is going to
have this is just going to be
have this is just going to be
call uh data of Stack
call uh data of Stack
size and then this is going to have
size and then this is going to have
int uh
int uh
idx right and then we'll just do
void
void
back uh
back uh
push it's going to
be probably can just do like this push
be probably can just do like this push
back St stack and then it's going to
back St stack and then it's going to
have
have
all
function
function
seert that we have room in the stack
we add this yep and we increment the
index yeah that's easy right minus equal
index yeah that's easy right minus equal
one and then we return the thing from
one and then we return the thing from
the
the
stack and we actually don't even need to
stack and we actually don't even need to
delete stuff from the stack because we
delete stuff from the stack because we
just use the indices basically to keep
just use the indices basically to keep
track of stuff so this is very
track of stuff so this is very
nice um very very basic probably don't
nice um very very basic probably don't
even need that uh I could do it manually
even need that uh I could do it manually
every time but like that's kind kind of
every time but like that's kind kind of
fine
right okay let's go to our
right okay let's go to our
TCG and then we'll just do right here
TCG and then we'll just do right here
this is going to be
this is going to be
stack
stack kind of
stack kind of
nice now we go to our step
nice now we go to our step
function reset
base draw yeah so we push draw to the
base draw yeah so we push draw to the
stack and then we call a step on the
stack and then we call a step on the
environment
yes and
then we can do uh all
then we can do uh all
function is going to be popped from the
function is going to be popped from the
stack
int
code
code
uh
user do I want this to be an inable
I think this can be a bull
right if return to user
return this is literally it this is
return this is literally it this is
going to be the whole logic of the game
going to be the whole logic of the game
is it's just going to be doing stuff
is it's just going to be doing stuff
like
like
this and then these function should be
this and then these function should be
able to just grab whatever the next
able to just grab whatever the next
thing is and put them on the stack
thing is and put them on the stack
I don't know if this design is actually
I don't know if this design is actually
a good idea yet but uh I think this is
a good idea yet but uh I think this is
probably what we
probably what we
want
yeah okay
yeah okay
so if we look at it this
so if we look at it this
way goes to BU
we have phase
play in
action so you return true is return to
action so you return true is return to
user
just because this is going to I don't
just because this is going to I don't
even know if this is smart but I'm going
even know if this is smart but I'm going
to do one thing real
quick I don't know if this is true I
quick I don't know if this is true I
mean I don't know if this is smart
mean I don't know if this is smart
but I think that this will prevent me
but I think that this will prevent me
from doing dumb
from doing dumb
things uh so this is going to
things uh so this is going to
be return to
user so you see what I'm trying to do
user so you see what I'm trying to do
here is I'm trying to set up like when
here is I'm trying to set up like when
like all these functions that get called
like all these functions that get called
in the stack some of them say Hey you
in the stack some of them say Hey you
know you took an invalid action or you
know you took an invalid action or you
know the user needs to make a decision
know the user needs to make a decision
or whatever those are going to break the
or whatever those are going to break the
whole call chain and get the next
action and wait for the user to like
action and wait for the user to like
click something or whatever or the agent
click something or whatever or the agent
to make an action but some of them don't
to make an action but some of them don't
some of them just want to grab the next
function okay so this is return to user
function okay so this is return to user
then this is
then this is
n or this is push
n or this is push
phase attack
phase attack
right and then you return to the
stack I like
this this is going to take quite a bit
this this is going to take quite a bit
of bidding though
and then what do we doing here okay this
and then what do we doing here okay this
is determining whether we can play any
is determining whether we can play any
cards right
and this is
and this is
tapping figuring out how many lands you
tapping figuring out how many lands you
can
tap oh yeah and then we have this
tap oh yeah and then we have this
absolutely gross thing here right
I think I'm going to do one another
I think I'm going to do one another
thing here as
well right CU I need to
know do all these need an
action we'll handle that later yeah
action we'll handle that later yeah
we'll handle that later so if you hit
I think we remove
I think we remove
this this is going to return to the
this this is going to return to the
user this returns to the stack
and I don't know why we have this as
and I don't know why we have this as
action enter
either yeah this untap step is in the
either yeah this untap step is in the
wrong spot anyways
yeah this is totally in the wrong
spot
so I think we take
this and we make uh an untap phase
this and we make uh an untap phase
explicitly right
tap you do need
this these are going to drive me
this these are going to drive me
uh yeah these things are going going to
uh yeah these things are going going to
drive me nuts I got to figure out a way
drive me nuts I got to figure out a way
around having to do
this go through the
board D Mana
board D Mana
zero tap is false
turn untap happens before draw
right we do
right we do
push yeah it does okay so this is going
push yeah it does okay so this is going
to be push
to be push
draw and then this is going to be return
draw and then this is going to be return
to
stack hi sir wanted to learn
stack hi sir wanted to learn
ml so there's no entry level
ml so there's no entry level
jobs data analyst need your
jobs data analyst need your
job yeah it's
not yeah there there's not I mean there
not yeah there there's not I mean there
are no entry-level jobs in rocket
are no entry-level jobs in rocket
science either right and like yeah
science either right and like yeah
applied ml's not exactly rocket science
applied ml's not exactly rocket science
science anymore it's a lot easier than
science anymore it's a lot easier than
it used to be but you still need to
it used to be but you still need to
learn some things uh for sure so really
learn some things uh for sure so really
it depends on where you are right like
it depends on where you are right like
if you're in University and you're smart
if you're in University and you're smart
studying things then yeah you can do
studying things then yeah you can do
stuff in ml um it really depends on your
stuff in ml um it really depends on your
situation
[Music]
some like applied AI team jobs are out
some like applied AI team jobs are out
of undergrad a lot of them want like a
of undergrad a lot of them want like a
master's and then their research jobs
master's and then their research jobs
are generally
PhD University business
information yeah ml is going to get much
information yeah ml is going to get much
more on the technical side very quickly
more on the technical side very quickly
um again like applied
um again like applied
stuff is not as much but like there's
stuff is not as much but like there's
still some level of mathematics um and
still some level of mathematics um and
programming right some quite substantial
programming right some quite substantial
level of that
level of that
so I it's there's no prerequisite to
so I it's there's no prerequisite to
learn ml right so like I the the best
learn ml right so like I the the best
thing you can do is just like very
thing you can do is just like very
quickly start trying some up some stuff
quickly start trying some up some stuff
out and seeing if you actually like
out and seeing if you actually like
doing
doing
it like you can very very quickly get a
it like you can very very quickly get a
sense for that that's I mean that's
sense for that that's I mean that's
probably the best recommendation I can
probably the best recommendation I can
give
give
you like there's so much material out
you like there's so much material out
there nowadays for just like getting a
there nowadays for just like getting a
sense of some stuff very quickly and see
sense of some stuff very quickly and see
if you actually like this stuff right
yeah no worries let me
see like what TCG are you trying to
see like what TCG are you trying to
implement yeah it's something pretty
implement yeah it's something pretty
close to Magic Ramy
and I had a working prototype mostly
and I had a working prototype mostly
working but
working but
um the structure of it just wasn't it
um the structure of it just wasn't it
wasn't where it needed to be in order
wasn't where it needed to be in order
for it to be you know reasonably
usable okay so here
can
play I mean really you need um
I guess this is fine
right well no you actually you need to
right well no you actually you need to
have this stuff inside of an explicit
have this stuff inside of an explicit
Ken play check I
think yeah we're going to do it this way
think yeah we're going to do it this way
for now
I really hate these types of functions
I really hate these types of functions
here I don't know maybe somebody will
here I don't know maybe somebody will
come up with a way to
uh there we go
we don't need this
we don't need this
check so Ken play is
check so Ken play is
false we get the Min cost card we figure
false we get the Min cost card we figure
out how much uh we can
out how much uh we can
tap and then we need to get
tap and then we need to get
Mana so
return star Mana plus
return star Mana plus
tapable greater than equal Min cost so
tapable greater than equal Min cost so
this tells us whether there is a card
this tells us whether there is a card
that we can
play and then what we'll
play and then what we'll
do is
do is
if if you can't
if if you can't
play we'll just put no valid
moves valid
moves valid
moves and then this is going to return
moves and then this is going to return
to the user and we're going to push
to the user and we're going to push
phase
attack
and does this make
sense why does this return to the user
sense why does this return to the user
and this returns to the
stack we're going to have to look into
this yeah definitely if there are uh TCG
this yeah definitely if there are uh TCG
players who have a better understanding
players who have a better understanding
of this than I do that would be great I
of this than I do that would be great I
I have very little TCG experience just
I have very little TCG experience just
in order to be able to build this over
in order to be able to build this over
the weekend I uh I downloaded like mtga
the weekend I uh I downloaded like mtga
and got to Silver real quick with a
and got to Silver real quick with a
really meme mono red
deck but that's about all I've
done I mean it's like literally
done I mean it's like literally
impossible not to get to Silver because
impossible not to get to Silver because
they literally don't even like you don't
they literally don't even like you don't
even lose rank for losing so it's just
even lose rank for losing so it's just
like if you play games you will get to
like if you play games you will get to
Silver in like some number of
[Music]
hours I'm surprised how active it is
hours I'm surprised how active it is
though like you get 10 second Q times
action as ever
action as ever
enter then you're going to
enter then you're going to
push phase
attack two
I think that actually all these are
I think that actually all these are
going to push to the
stack yeah I think pretty much all of
stack yeah I think pretty much all of
these are just going to push to this
these are just going to push to this
stack
what about actually playing the
what about actually playing the
card that's right here
right you also need to get
hand
hand
board probably
this I don't like these like these
this I don't like these like these
header things up
header things up
top
um I I know how we're going to end up
um I I know how we're going to end up
getting rid of these but for now it's a
pain Okay so
okay I kind of see how this works you
okay I kind of see how this works you
push so whenever the user does something
push so whenever the user does something
invalid you push the current phase back
invalid you push the current phase back
onto the stack and you return to the
onto the stack and you return to the
user right so this is if they try to
user right so this is if they try to
play a land and they've already played
play a land and they've already played
one right you push you say nope we're
one right you push you say nope we're
going to do the same thing again after
going to do the same thing again after
we return to the user
user okay and then you play this card
user okay and then you play this card
right so then this is going to be
push uh why is this not Auto completing
push uh why is this not Auto completing
is my Wi-Fi dropping or something oh no
is my Wi-Fi dropping or something oh no
we're
we're
good base Play
good base Play
Return to user
they've played a
card and
then you need to know how many you can
then you need to know how many you can
tap right how many lands you can
tap inable
L
and is this actually correct let me see
and is this actually correct let me see
no you don't need this tapable
zero
zero
what garbage
suggestions it's you want this thing
suggestions it's you want this thing
here okay
and then you return capable
ball capable
Mana B play and then return to
Mana B play and then return to
user and now here it's going to autotap
user and now here it's going to autotap
your lands for you
your lands for you
you're going to
go you're all the cards on your
board and then you just start tapping
board and then you just start tapping
stuff
right and you played your
right and you played your
card push F play and you return to the
card push F play and you return to the
user okay this is actually already
user okay this is actually already
looking
looking
better you have this very clean control
better you have this very clean control
flow here
flow here
where each phase
essentially can either directly like add
essentially can either directly like add
to another phase and you don't have to
to another phase and you don't have to
check too deep into it either right so
check too deep into it either right so
like you know let's say that there no
like you know let's say that there no
valid moves right so you go to the
valid moves right so you go to the
attack phase but you don't know if there
attack phase but you don't know if there
any valid attacks so what it'll do is
any valid attacks so what it'll do is
it'll just push the attack phase on the
it'll just push the attack phase on the
attack phase will determine whether or
attack phase will determine whether or
not there are any valid attacks if there
not there are any valid attacks if there
no valid attacks it'll skip over the
no valid attacks it'll skip over the
block phase entirely and go back to draw
block phase entirely and go back to draw
phase and you essentially you only ever
phase and you essentially you only ever
trigger back to the
trigger back to the
user when there's actually something to
user when there's actually something to
interact with so this is like a very
interact with so this is like a very
nice way of doing um control flow
nice way of doing um control flow
without ending up with like deep
without ending up with like deep
recursion or any [ __ ] like that or
recursion or any [ __ ] like that or
really deep call
chains cuz essentially you just have
chains cuz essentially you just have
this explicit call
stack I like this this is a much better
stack I like this this is a much better
design at least so far it looks like
design at least so far it looks like
this is a much better
design so like right here for
design so like right here for
instance this for MTG
instance this for MTG
yeah well we can't call it mtj that
yeah well we can't call it mtj that
name's kind of Taken can we call it puff
name's kind of Taken can we call it puff
for this scho
for this scho
or something like
that okay so like if you can't attack
that okay so like if you can't attack
right you're going to just push on uh
right you're going to just push on uh
this is the draw phase
right
right
turn you give it the draw
turn you give it the draw
phase just go like this then you return
phase just go like this then you return
you return to stack
and then if you ever if you hit
and then if you ever if you hit
enter your attacks get
confirmed and actually none of this is
confirmed and actually none of this is
needed here
needed here
right attacks confirmed phase end you
right attacks confirmed phase end you
push phase
push phase
block
block
and you return to the
and you return to the
stack and then this stuff is actually
stack and then this stuff is actually
going to go into the user uh this will
going to go into the user uh this will
all go into the block code now so this
all go into the block code now so this
is so much
cleaner this is kind of a weird pattern
cleaner this is kind of a weird pattern
I've not really had to implement
I've not really had to implement
anything that has uh a comparable
anything that has uh a comparable
pattern to this
pattern to this
before it's very nice
it avoids these very deep call chains
it avoids these very deep call chains
doesn't need
doesn't need
recursion kind of explicit recursion I
recursion kind of explicit recursion I
guess so phase attack if you can't
guess so phase attack if you can't
attack you skip the
attack you skip the
phase you actually skip over
phase you actually skip over
phases if action is
enter then you go to the block phase
enter then you go to the block phase
right
um and if your action is invalid
um and if your action is invalid
essentially so you go back to your
essentially so you go back to your
attack phase and then you return to
user same thing
here and then
here this is actually a valid
here this is actually a valid
one you push the attack phase and go
one you push the attack phase and go
back to the user
okay phase block here
let me see how I want to do
this these prints are giving me
this these prints are giving me
agida I just want these okay so we can
agida I just want these okay so we can
see that it's actually pretty simple
oh actually I get it so what I was doing
oh actually I get it so what I was doing
here so this is just going to skip stuff
here so this is just going to skip stuff
that you don't need to block
that you don't need to block
right and if you get to
right and if you get to
here nothing left to block
with Bay's
end I don't like this
end I don't like this
no I don't like
this this is going to cause
weirdness oh hold
weirdness oh hold
on I don't have to worry about the block
on I don't have to worry about the block
phase if there's no attack phase with
phase if there's no attack phase with
this design that never
this design that never
happens so I can actually just delete
happens so I can actually just delete
this
code which is
great and uh now this is going to be
great and uh now this is going to be
well we have to figure out what to do
well we have to figure out what to do
with this code let's just move this down
with this code let's just move this down
for
for
now I think this is actually the same as
now I think this is actually the same as
right here isn't it do I even need this
right here isn't it do I even need this
piece of code for anything
piece of code for anything
can block not can block literally this
can block not can block literally this
gets deleted yeah we don't need this
gets deleted yeah we don't need this
anymore the new design makes it
anymore the new design makes it
[Music]
irrelevant can things change in the
irrelevant can things change in the
middle of phases because of instance yes
middle of phases because of instance yes
and this is one of the reasons I'm
and this is one of the reasons I'm
designing it this way by having an
designing it this way by having an
explicit call stack um basically when I
explicit call stack um basically when I
want to add in instance what I'm going
want to add in instance what I'm going
to be able to do is like anytime there's
to be able to do is like anytime there's
an interrupt I'm just going to be able
an interrupt I'm just going to be able
to check like you know instant response
to check like you know instant response
or whatever and if there is one I can
or whatever and if there is one I can
just push it back on the call stack you
see it's going to be kind of cool like
see it's going to be kind of cool like
that so right now even though it's a
that so right now even though it's a
stack it doesn't ever become a deep
stack it doesn't ever become a deep
stack right CU there's always just going
stack right CU there's always just going
to be one thing on the stack it's just
to be one thing on the stack it's just
like this phase to this phase to this
like this phase to this phase to this
phase to this phase but when I want to
phase to this phase but when I want to
add instance what's going to happen is
add instance what's going to happen is
like uhoh there's a chance that you can
like uhoh there's a chance that you can
have an instant here so you know you put
have an instant here so you know you put
the Instant on the stack and then the
the Instant on the stack and then the
instant resolves it gets taken off the
instant resolves it gets taken off the
stack and you go right back to where you
stack and you go right back to where you
were and that all happens nice and
were and that all happens nice and
cleanly this is the reason that I'm
cleanly this is the reason that I'm
doing it myself right for the Prototype
doing it myself right for the Prototype
is so that when I hand this to the
is so that when I hand this to the
contributors right when I hand this to
contributors right when I hand this to
the rest of everybody there will at
the rest of everybody there will at
least be like this nice structure in
least be like this nice structure in
place that's had some thought put into
place that's had some thought put into
it
let me see how I want to handle this
let me see how I want to handle this
little portion here
so h
m
should
enter this is the one that's a little
enter this is the one that's a little
tricky getting this blocking stuff right
tricky getting this blocking stuff right
cuz you have to be able to choose block
cuz you have to be able to choose block
um like which cards block what and
stuff let me think a moment here so the
stuff let me think a moment here so the
tricky thing
right manual block confirmed
what I essentially want to do which I
what I essentially want to do which I
guess I'll just do explicitly for now
is I want to like copy
is I want to like copy
this
this
again I want to put this
here so we'll figure something out how
here so we'll figure something out how
to clean this or or whatever
but
push I shouldn't need to do
this yeah no I should not need to do
this yeah no I should not need to do
this no I'm thinking about this I'm
this no I'm thinking about this I'm
still thinking about this wrong
still thinking about this wrong
what this should
what this should
be is you advance the block
be is you advance the block
index
um by
one and then you return you
one and then you return you
push the block phase and you push back
push the block phase and you push back
to the stack I think
yes I just have to get the logic for
yes I just have to get the logic for
this
right okay
right okay
[Music]
action this is an invalid block so we
action this is an invalid block so we
return to the
return to the
user and then what's this you can't
user and then what's this you can't
block with Y land yeah we push block and
block with Y land yeah we push block and
return to
return to
user Okay so
oh they're just doing some maintenance
oh they're just doing some maintenance
outside okay
um so the tricky thing is basically just
um so the tricky thing is basically just
figuring
figuring
out when to actually
out when to actually
trigger the blocking calculations
so you skip block you skip
so you skip block you skip
Block it's going to return to the user
Block it's going to return to the user
eventually we're going to assume that we
eventually we're going to assume that we
handle
handle
this action
thing and
thing and
then I think it's just if the block
then I think it's just if the block
index
yeah there are a few edge
yeah there are a few edge
cases this is okay already
cases this is okay already
blocked so your action is invalid for
this is where you should resolve it it
this is where you should resolve it it
should be at the top I think this is
should be at the top I think this is
where it gets
resolved so all this logic
here gets moved up
okay so now we're assuming that it's not
okay so now we're assuming that it's not
resolving
now so here this is already blocked so
now so here this is already blocked so
this is push this and then return to
user and then this is okay we're
user and then this is okay we're
blocking right push block and return to
blocking right push block and return to
user uh and then this goes there and and
user uh and then this goes there and and
then this is good so now we just have to
then this is good so now we just have to
check this Logic for actually resolving
check this Logic for actually resolving
the block calculations which should not
the block calculations which should not
be that
bad let me go through this one more time
bad let me go through this one more time
though so the logic here is that you
though so the logic here is that you
enter the block phase you skip over all
enter the block phase you skip over all
the cards that aren't attacking if
the cards that aren't attacking if
you're at the end of the board then
you're at the end of the board then
you're done uh you're done with all of
you're done uh you're done with all of
the block calculations so you resolve it
the block calculations so you resolve it
you resolve all the blocks otherwise
you resolve all the blocks otherwise
you see if the users hit enter if the
you see if the users hit enter if the
users hit enter you advance to the next
users hit enter you advance to the next
thing that needs to be blocked if their
thing that needs to be blocked if their
action is invalid then you push back to
action is invalid then you push back to
the user and say Hey you know pick
the user and say Hey you know pick
something valid uh if you're trying to
something valid uh if you're trying to
like this is also invalid action
like this is also invalid action
handling right here if you're trying to
handling right here if you're trying to
uh block use a card to block something
uh block use a card to block something
but you've already used that card to
but you've already used that card to
block something
block something
else and then if none of these things
else and then if none of these things
are true then you toggle the block state
are true then you toggle the block state
of your current card and you push this
of your current card and you push this
um onto the will not call it the
um onto the will not call it the
blockchain but the block
sack I'm happy with that
I got to set up a couple more meetings
I got to set up a couple more meetings
in Pao Alto while I'm still here for the
in Pao Alto while I'm still here for the
next couple weeks so I got to give some
next couple weeks so I got to give some
of these guys
of these guys
out we got
stickers whole bunch of
them are you building the TCG for fun
them are you building the TCG for fun
well it's another RL environment
well it's another RL environment
right it's going to be another RL
right it's going to be another RL
environment to add to the
collection it's got some interesting
collection it's got some interesting
properties to it it's a good environment
properties to it it's a good environment
for research and for testing algorithms
right it's mainly because uh people were
right it's mainly because uh people were
interested in contributing to it so I
interested in contributing to it so I
figure okay I can get a nice little
figure okay I can get a nice little
prototype of this set up and then you
prototype of this set up and then you
know if contributors are going to want
know if contributors are going to want
to actually do a bunch of stuff on this
to actually do a bunch of stuff on this
then
great not attacking not attacking
great not attacking not attacking
uh I think that this is actually all
uh I think that this is actually all
correct right down until
correct right down until
here which is
here which is
push we have to push
push we have to push
phase uh draw onto the
phase uh draw onto the
stack and then we have to
do return to
stack skeleton for others sounds good
stack skeleton for others sounds good
yeah what properties does it have the
yeah what properties does it have the
other like poker don't I mean play MTG
other like poker don't I mean play MTG
and then play poker
and then play poker
right must
zero
zero
oh yeah I really don't like this
oh yeah I really don't like this
um I
um I
don't look I've it's only been a few
don't look I've it's only been a few
months since I've been doing stuff in C
months since I've been doing stuff in C
like a couple months even probably only
like a couple months even probably only
been like one month really since I've do
been like one month really since I've do
it been doing stuff in proper C in the
it been doing stuff in proper C in the
last 10 years there's still a few things
last 10 years there's still a few things
I'm getting used to and this is like a
I'm getting used to and this is like a
really big foot gun which is if you if
really big foot gun which is if you if
you callic something right then it gets
you callic something right then it gets
zeroed for you but if you allocate it
zeroed for you but if you allocate it
not on the stack it doesn't get zeroed
not on the stack it doesn't get zeroed
for you
for you
um so I don't know if you're just
um so I don't know if you're just
expected to zero your Stacks or if I'm
expected to zero your Stacks or if I'm
supposed to have if the init method is
supposed to have if the init method is
supposed to do it for you um
supposed to do it for you um
that's just like a potential way to
that's just like a potential way to
screw stuff up those for getting to zero
it this looks good though I think we are
it this looks good though I think we are
almost at the point where we can start
almost at the point where we can start
testing
testing
this function you don't need these
this function you don't need these
anymore
and I think once we cut some stuff out
and I think once we cut some stuff out
it'll be about 500 lines maybe 600 I did
it'll be about 500 lines maybe 600 I did
say 600 initially for the Prototype so
say 600 initially for the Prototype so
that might have been
that might have been
prophetic but let's look at the logic
prophetic but let's look at the logic
for
for
this because I think this will be pretty
this because I think this will be pretty
clean so you go to reset you push a draw
clean so you go to reset you push a draw
phase and you call
phase and you call
step well in the draw
phase hold on let me go up to draw
phase phase
phase phase
draw do I not have a phase draw
function I guess I don't have a phase
function I guess I don't have a phase
draw function that would be bad
base
base
draw and then what we're going to do
draw and then what we're going to do
is uh card array
is uh card array
hand card array Our
Deck draw card deck
Deck draw card deck
hand do not
hand do not
push push phase phase play
push push phase phase play
and then you return to this
and then you return to this
stack so now you call phase draw it
stack so now you call phase draw it
draws a card and it pushes phase play to
draws a card and it pushes phase play to
the
the
stack next thing uh on the stack gets
stack next thing uh on the stack gets
pulled or popped I
pulled or popped I
mean see you good luck thank
you so phase play gets uh executed here
and I don't like
how Okay the one thing I don't like
how Okay the one thing I don't like
about this is how the actions Cascade
about this is how the actions Cascade
through right cuz like I'm essentially
through right cuz like I'm essentially
I'm just calling phase play to see if
I'm just calling phase play to see if
you can even play at
you can even play at
all right
I think you kind of just want to no op
I think you kind of just want to no op
right let me think if that makes
sense I think you need to add an action
sense I think you need to add an action
no
op
no and then what I think you do is
like the stack is always going to return
like the stack is always going to return
right until the point that you need the
right until the point that you need the
action right
so here you step with a no
so here you step with a no
op and I think what you do
is return to
user action equals no op you only ever
user action equals no op you only ever
use the first action
use the first action
let me see how I like
that so if the board is
full and then we do if action is a no
full and then we do if action is a no
op we return to the
op we return to the
user so essentially we just get these
user so essentially we just get these
these two initial checks
off we'll have to do
off we'll have to do
some some stuff maybe to speed this up
some some stuff maybe to speed this up
but I think for now this is
but I think for now this is
fine cuz there's a little bit of
fine cuz there's a little bit of
redundant checking
here then if they hand hand length to
here then if they hand hand length to
Big okay we've done all this
Big okay we've done all this
now action enter returns
now action enter returns
to uh action
to uh action
enter returns to the
stack base
play and this actually is going to
play and this actually is going to
return to
return to
the the stack as well
right
right
yeah uh if you can't play Then you
yeah uh if you can't play Then you
return to the user lens get Auto
return to the user lens get Auto
tapped base play this is also to this
deack and then in
Phase or is this to the wait is this to
Phase or is this to the wait is this to
the user the stack hold
on Maybe not maybe this is to the
user yeah this is to user I was right
user yeah this is to user I was right
right yeah it's not until enter okay so
right yeah it's not until enter okay so
we do this then we go to phase
attack
attack
um if you can if you cannot
um if you can if you cannot
attack then you go to the draw
phase if it's no op return to the
user if enter
user if enter
okay and then phase block is going to be
okay and then phase block is going to be
very similar
very similar
right we return to the user
here so this
is how do we know if there's nothing to
is how do we know if there's nothing to
block
with is it this initial
check hold on how do we know if there's
check hold on how do we know if there's
nothing to block
nothing to block
with I mean I maybe I at this point I
with I mean I maybe I at this point I
just start debugging live
SX and a64
um oh this is
gross I have a weird dependency order
gross I have a weird dependency order
thing don't
thing don't
I I think I need to do what I need to do
I I think I need to do what I need to do
is I need to move the type def for the
is I need to move the type def for the
TCG
TCG
up so that they know that there's going
up so that they know that there's going
to be the compiler needs to know that
to be the compiler needs to know that
there is a
there is a
TCG TCG struct up here
okay that could s all the way down to
okay that could s all the way down to
63 get the
board unused variable hand yeah we don't
board unused variable hand yeah we don't
need hand we just need the board
need hand we just need the board
here uh can play not used
this is a return
true unused board
true unused board
W
five uh phase draw needs to
be oh well that's ABN
um how do you order
these I think you actually need to Ford
these I think you actually need to Ford
declare these don't
you yeah you actually need to for
you yeah you actually need to for
declare these because they all call each
declare these because they all call each
other
well
well passing stack to
incompatible yeah this is going to be
incompatible yeah this is going to be
stack star
stack and then allocate card
array so when we do allocate we need to
array so when we do allocate we need to
do n stack is going to be there's no
do n stack is going to be there's no
allocate stack so this is a
allocate stack so this is a
calices a
calices a
stack holy
incompatible wait
incompatible function
pointer TCG star
int type Def
what's wrong
here oh just in and bull
right yeah it's like this it's a type
right yeah it's like this it's a type
def bull
there we
there we
go conflicting type definitions for
go conflicting type definitions for
phase
attack I guess technically
attack I guess technically
uh it should
be do I leave it action as an in for now
H we do one sign sh
maybe conflicting types for
maybe conflicting types for
phase untap going to be sign
Char conflicting
Char conflicting
type this is a
pool six not need hand
apparently uh phase block this is also a
bull just uh refactor pains as
well Undeclared identifier board this is
well Undeclared identifier board this is
fine heart
board this
oops
oops
health I guess this needs a few
health I guess this needs a few
different things huh in Star
health and I think we have syntax as
well non-void
well non-void
function does not
function does not
return well I don't know what happened
return well I don't know what happened
here there we go
builds okay so here is is the
builds okay so here is is the
TCG we're now going to have to debug
this land is
played uh already played land this
turn card is
played card is
played card is
played
played
enter I really need to have this phase
enter I really need to have this phase
indicator
indicator
I need the phase indicator back I forgot
I need the phase indicator back I forgot
that I need it just to draw what phase
that I need it just to draw what phase
it is if nothing
else is that
right technically hold
on I have an idea
call function is going to be
call function is going to be
Peak and then what we're going to do is
Peak and then what we're going to do is
IF function is going to be equal to
IF function is going to be equal to
phase draw then you draw the
text what we think about this so I just
text what we think about this so I just
do it based on literally what's on the
do it based on literally what's on the
stack and instead of having to maintain
stack and instead of having to maintain
a separate
State base
State base
play already played land
yeah play invalid action 10
okay that's a legit bug let's fix
okay that's a legit bug let's fix
that yeah this is going to be so much
that yeah this is going to be so much
better
though okay this just has to
though okay this just has to
go this just just has to go up to here
else
else
if else
if
if
land Attack
Phase block phase
let's see what just
happened
so setting attacker one setting attacker
so setting attacker one setting attacker
two actions confirmed phase
two actions confirmed phase
end invalid Block action 11 that's
end invalid Block action 11 that's
another legitimate
bug this already feels so much better
bug this already feels so much better
though
yeah I can't wait this is going to be
great rectangle of zero got summoned
great rectangle of zero got summoned
yeah it's debug stuff right it's pretty
yeah it's debug stuff right it's pretty
important to have this honestly I'm
important to have this honestly I'm
probably going to make like a debug
probably going to make like a debug
print or something so I can leave these
print or something so I can leave these
prints in the code and just have it with
prints in the code and just have it with
a debug flag or something
a debug flag or something
because I don't know how else you debug
because I don't know how else you debug
a TCG like this you really need to know
a TCG like this you really need to know
you need to know a lot about the
you need to know a lot about the
underlying game
underlying game
State they just like compared to almost
State they just like compared to almost
any other game there just so many
any other game there just so many
interactions that can happen once this
interactions that can happen once this
thing gets
going the goal of this is to show
going the goal of this is to show
um the goal is to show like what you're
um the goal is to show like what you're
blocking with what card right so like
blocking with what card right so like
the row is the
the row is the
attackers it's well the row is going to
attackers it's well the row is going to
be the attackers and then the Call's
be the attackers and then the Call's
going to be Defenders so if I put one
going to be Defenders so if I put one
here it's like you're blocking uh the
here it's like you're blocking uh the
fourth attacker with your first card or
fourth attacker with your first card or
something like that you're blocking
something like that you're blocking
their fourth card with your first
card yes so if action is a no op and you
card yes so if action is a no op and you
go back to the
user else if TR
this player land Player Two Cards hit
this player land Player Two Cards hit
enter attack with these two
phase zero action
phase zero action
11 skipping block for zero not
attacking okay so it's letting me try to
attacking okay so it's letting me try to
block stuff is the problem right
now so it's not detecting that there's
now so it's not detecting that there's
no valid Block
action for
it's not detecting that there's no valid
it's not detecting that there's no valid
Block action
correct let me see where I'm supposed to
correct let me see where I'm supposed to
be handling
this well I'm just not handling it
this well I'm just not handling it
anywhere
let me think how I can do this cleanly
cookie
cookie
[Music]
first cookie first is good
somebody made some like really dumb
somebody made some like really dumb
tweet about like the Energy Efficiency
tweet about like the Energy Efficiency
of programming
of programming
languages and I I replied to it like
languages and I I replied to it like
well I eat three chocolate chip cookies
well I eat three chocolate chip cookies
debugging C so how's that count for
energy here to learn a bit yeah of
energy here to learn a bit yeah of
course
I
mean I've been coding seriously for what
mean I've been coding seriously for what
like at least 12 13 years
now the cool thing about what I'm doing
now the cool thing about what I'm doing
at the moment though is like you really
at the moment though is like you really
don't need to know too much of the
don't need to know too much of the
context for all the reinforcement
context for all the reinforcement
learning stuff that I have right in
learning stuff that I have right in
order to do this type of stuff like
order to do this type of stuff like
we have people that are just competent
we have people that are just competent
developers um that are making new
developers um that are making new
environments for puffer like really
environments for puffer like really
useful stuff for reinforcement learning
useful stuff for reinforcement learning
in the day from scratch um so that's
in the day from scratch um so that's
pretty cool right like that's not a
pretty cool right like that's not a
thing that you used to be able to
do so you know it can't we can't make it
do so you know it can't we can't make it
to the point where like anybody could do
to the point where like anybody could do
it but we can make it you can bring the
it but we can make it you can bring the
bar down a lot
bar down a lot
much more
accessible and the C is not required
accessible and the C is not required
either like you can write these things
either like you can write these things
in scyon they just won't render on the
in scyon they just won't render on the
web as all
web as all
um and for scientists that's
fine one of the nice things about C is
fine one of the nice things about C is
it's like it's not not hard but it looks
it's like it's not not hard but it looks
hard
hard
so it kind of weeds out the people that
so it kind of weeds out the people that
actually don't care and don't actually
actually don't care and don't actually
want to learn
stuff like I don't have to gate peep
stuff like I don't have to gate peep
people I do the exact opposite like
people I do the exact opposite like
people just gep themselves
people just gep themselves
instead which is kind of fun
it's actually very nice and comfortable
it's actually very nice and comfortable
writing this stuff and
see I think it would be like at most
see I think it would be like at most
marginally easier in
Python and it wouldn't be
fast what's your number one go-to
fast what's your number one go-to
resource I haven't written C in 10 years
resource I haven't written C in 10 years
like literally I barely use C outside of
like literally I barely use C outside of
uh university
uh university
courses um it's just like when you've
courses um it's just like when you've
been developing for like 10 plus years
been developing for like 10 plus years
and you at least have some understanding
and you at least have some understanding
of what low levels are supposed to be
of what low levels are supposed to be
right like I had courses and whatever uh
right like I had courses and whatever uh
it's just not that hard it's all it is
it's just not that hard it's all it is
like I haven't done anything specific I
like I haven't done anything specific I
just started using it that's
all I mean they're like at most there
all I mean they're like at most there
are a couple like weird syntax
are a couple like weird syntax
differences and yeah you need to
differences and yeah you need to
understand pointers that's about
it but it's like whoop did you do a
it but it's like whoop did you do a
pointer stores the address of a variable
pointer stores the address of a variable
instead of having the value itself
instead of having the value itself
that's it that's that's all it is
the only thing I will say that you do
the only thing I will say that you do
need to know
exists somebody does have to tell you
exists somebody does have to tell you
that these flags exist if you do not
that these flags exist if you do not
know that these flags exist for
know that these flags exist for
compiling you will have a very bad time
compiling you will have a very bad time
because you will not get good error
because you will not get good error
messages
messages
um but it's not that bad
otherwise let me figure out where this
otherwise let me figure out where this
error
is by any chance of you seeing the uh
is by any chance of you seeing the uh
the Pokemon Red work cuz I see your
the Pokemon Red work cuz I see your
username um have you seen like the
username um have you seen like the
Pokemon Red reinforcement learning stuff
Pokemon Red reinforcement learning stuff
cuz that's another I mean that's
cuz that's another I mean that's
probably the biggest project that puffer
probably the biggest project that puffer
is sponsoring at the
moment e
I think this is the the code that I need
right already blocked
I need some way of just checking if
I need some way of just checking if
there's nothing left to block
there's nothing left to block
with
right yeah I think I just have to copy
right yeah I think I just have to copy
this it's going to be slightly different
code saw on some social media or YouTube
code saw on some social media or YouTube
well there's some cool results coming
well there's some cool results coming
out with that soon uh you can you can
out with that soon uh you can you can
try the Discord for that I mean that
try the Discord for that I mean that
that project has actively been under
that project has actively been under
development like I think it was in
development like I think it was in
January or whatever like it's been under
January or whatever like it's been under
development the whole time
development the whole time
it's the main thing that puffer sponsors
it's the main thing that puffer sponsors
we uh most of the puffer cluster compute
we uh most of the puffer cluster compute
goes to that
project machines provided by yours truly
I this is where it needs to happen right
I this is where it needs to happen right
here
right just joined solid there's also
right just joined solid there's also
discord.gg SLP puffer which is our
discord.gg SLP puffer which is our
Discord that's where we do all the uh I
Discord that's where we do all the uh I
mean there's all sorts of cool stuff in
mean there's all sorts of cool stuff in
here like I have this environment we've
here like I have this environment we've
got like all sorts of other people
got like all sorts of other people
posting environments and stuff
posting environments and stuff
I think somebody just made go like a go
I think somebody just made go like a go
environment here's somebody making
environment here's somebody making
Enduro from scratch Ultra
Enduro from scratch Ultra
hyperf here's new car
hyperf here's new car
environments got go all this stuff
speaking of which there's one of the new
speaking of which there's one of the new
contributors the guy that just did go
contributors the guy that just did go
I've got to give him access to the
I've got to give him access to the
cluster people that uh contribute stuff
cluster people that uh contribute stuff
consistently get cluster
access Discord it's literally
access Discord it's literally
discord.gg SLP
discord.gg SLP
Puffer for
so basically we do bull can
block
block
equals false
you need to
go well I just need to see if there's
go well I just need to see if there's
anything on the
anything on the
board uh that can block
if
if
en Defenders
I don't like the way that this is
I don't like the way that this is
looking but let me see
is
is
land then you
continue so it's not
land and then you have to look here I'm
land and then you have to look here I'm
essentially just trying to figure out if
essentially just trying to figure out if
you have any cards available to block
with so you're going to block
attacker block index a PL attacker J
attacker block index a PL attacker J
with card I I believe
full lock it
block with card is false
block with card is false
M Stack yes it holds the current the way
M Stack yes it holds the current the way
it works is like each phase is a
it works is like each phase is a
function um that has access to the full
function um that has access to the full
game
game
State and whatever is on the top of the
State and whatever is on the top of the
stack is the current phase
and block is going to be true here
let me do if can
let me do if can
block uh then you
block uh then you
break and then if not can
break and then if not can
block nothing left to block
with well you need to trigger the
with well you need to trigger the
resolve right
oh you just have to set the block
index let me see if this does it oops
I'm sure we can
simplify okay so what does this
simplify okay so what does this
say skipping block for not attacking
so can block with
so can block with
one well it definitely can't block with
one well it definitely can't block with
one
let me see how I did this logic
wrong am I even doing this reasonably
wrong am I even doing this reasonably
like
this skips to the next
attacker and this
goes this goes over the length of the
goes this goes over the length of the
board of my board right yeah
oh wait no it's got to be the defender
oh wait no it's got to be the defender
board
EnV and so EnV is the environment that
EnV and so EnV is the environment that
is the full game State opponent op is
is the full game State opponent op is
just for
opponent oh look at that that actually
opponent oh look at that that actually
worked
uh I don't know why this guy didn't
uh I don't know why this guy didn't
play a
land maybe just randomly didn't play a
land and we do we're going to play our
land and we do we're going to play our
land for this turn up already played
land for this turn up already played
land this turn definitely did not so we
land this turn definitely did not so we
got to do the untap step correctly
got to do the untap step correctly
time for
time for
cookie one cookie per day
cookie one cookie per day
limit probably could use a second cookie
limit probably could use a second cookie
per day but one cookie per day
per day but one cookie per day
limit honestly it's not that bad that I
limit honestly it's not that bad that I
have the bakery nearby you should have
have the bakery nearby you should have
seen when I was in Boston there were no
seen when I was in Boston there were no
like bakeries close by there was just
like bakeries close by there was just
Dunkin
Dunkin
Donuts I think I was having between 25
Donuts I think I was having between 25
and 30 Donuts
let me think is that right maybe between
let me think is that right maybe between
20 and 30 Donuts per week it was like
20 and 30 Donuts per week it was like
three or four Donuts a day it was
three or four Donuts a day it was
ridiculous
for how
for how
long good few months how are you not
long good few months how are you not
super obese cuz IID start my day with
super obese cuz IID start my day with
like an hour and a half or two hour run
like an hour and a half or two hour run
and then I would lift in the
and then I would lift in the
evening you just burn
it for
I was running like 40 miles a week
I was running like 40 miles a week
then I'm probably I'm only doing like 25
then I'm probably I'm only doing like 25
30 miles a week at the moment because
30 miles a week at the moment because
I'm doing more strength work but
um yeah mileage varies depending on
um yeah mileage varies depending on
training you got to do reinforcement
training you got to do reinforcement
learning on yourself to do reinforcement
learning on yourself to do reinforcement
learning on the agents you know that
learning on the agents you know that
works
uh I think what's Happening Here
uh I think what's Happening Here
is
Phase yeah this has got to go to phase
Phase yeah this has got to go to phase
untap
right reset goes to phase
right reset goes to phase
draw phase untap goes to draw
draw phase untap goes to draw
well now I think we're
good
good
so we play our
so we play our
land we play our
cards they take two
damage uh why did we not untap
oh probably because um
hold
on let me figure out where this is
on let me figure out where this is
getting messed
getting messed
with phase
with phase
attack this is going to go to phase
attack this is going to go to phase
untap
here this here is going to go to untap
phase
phase
uh cool I think that does
it so we play
it so we play
land then we play these
we do two damage it's a lot of damage we
we do two damage it's a lot of damage we
get our
get our
land now we have two lands so we can
land now we have two lands so we can
play
play
this ah it let us play both of them
this ah it let us play both of them
which is not
which is not
good now our
good now our
attack we can attack with all
attack we can attack with all
this and they actually play
this and they actually play
something let's fix our lands per turn
something let's fix our lands per turn
thing real quick though
why does it let us play multiple lands
I don't think it should let me
see if I just do like
see if I just do like
three two five say already played land
three two five say already played land
this turn
this turn
right
right
okay and then
okay and then
three three already played land this
three three already played land this
turn
oh no it didn't it that's the thing it
oh no it didn't it that's the thing it
it's not that it's the Mana on
car you autotap your lands
car you autotap your lands
right assert the Mana is less than the
right assert the Mana is less than the
card
card
cost okay star Mana minus equal card
cost okay star Mana minus equal card
cost right
see did I forget to
build I think this is good
build I think this is good
now
now
three I can't play these and play
three I can't play these and play
these we
these we
attack can't play the next Land good I
attack can't play the next Land good I
play
play
this aha not enough Mana very good can't
this aha not enough Mana very good can't
do anything so we just
swing this is going to inflict five
swing this is going to inflict five
damage taking us down to 13
damage taking us down to 13
here we play our land brings us up to
here we play our land brings us up to
three lands we cannot play this card not
three lands we cannot play this card not
play a second land we can play
play a second land we can play
this and then we
swing with all of
this and it says it can block now with
this and it says it can block now with
zero can block with
zero can block with
zero
right look at
right look at
that so I can choose to block right here
that so I can choose to block right here
I can hit enter now I'm choosing I can
I can hit enter now I'm choosing I can
choose to block this one
right let's choose to block this one
right let's choose to block this one
like
this did his card get
destroyed it did but his land also got
destroyed it did but his land also got
destroyed so I don't know how that
happened well the line
happened well the line
yeah it's just showing what is targeting
yeah it's just showing what is targeting
what
what
um so then I should just win right let
um so then I should just win right let
me see if I play my next
me see if I play my next
land uh I play this big card I hit enter
land uh I play this big card I hit enter
I do
there's the full
there's the full
board uh we
board uh we
swing and now he's on negative health
can
block star Health negative equal to this
block star Health negative equal to this
this then we do
this then we do
if Health Less Than
Zero game
over and then we simply
over and then we simply
do
reset conflicting types
implicit declaration
GH vo
reset all right let's see what else is
reset all right let's see what else is
wrong with this so we play our land we
wrong with this so we play our land we
play our
play our
cards we swing we do
cards we swing we do
damage we try we can play this now
damage we try we can play this now
and then we
swing and we didn't get any chance to
swing and we didn't get any chance to
block
right so
right so
next we're going to play our
next we're going to play our
land play this
and we swing and now it's going to let
and we swing and now it's going to let
us select the block
here we're going to block here and what
here we're going to block here and what
we're expecting is for my uh zero Mana
we're expecting is for my uh zero Mana
one one to get destroyed their card to
one one to get destroyed their card to
get destroyed and the land to
remain yeah so that didn't happen uh
remain yeah so that didn't happen uh
something completely screwy just
something completely screwy just
happened
you can see that this is correct though
you can see that this is correct though
so right
so right
here this is it was blocking this
here this is it was blocking this
card with his first
card with his first
card so this was correct and then
card so this was correct and then
somehow the uh the resolution is wrong
where does reset come
where does reset come
from resets right
from resets right
here it just resets the game
here it just resets the game
State and you can see that it um it
State and you can see that it um it
pushes the first thing onto the stack
pushes the first thing onto the stack
which is how it starts it it pushes the
which is how it starts it it pushes the
uh the draw phase onto the
stack there might be a a couple other
stack there might be a a couple other
things that we have to reset but that's
things that we have to reset but that's
the main
thing so let's see what this uh what
thing so let's see what this uh what
messages we have attacker board length
messages we have attacker board length
was seven resolving zero not attacking
was seven resolving zero not attacking
yep resolving
land resolving
land resolving
one attacker
wins oh I was yeah the implementation
wins oh I was yeah the implementation
has just gotten stale this is like an
has just gotten stale this is like an
auto block thing
auto block thing
yeah this is like an auto blocker thing
yeah this is like an auto blocker thing
um I got to just re rethink about this
um I got to just re rethink about this
real
quick the team is going to be pretty
quick the team is going to be pretty
happy though to have this to work off of
happy though to have this to work off of
when I get this ready because this is
when I get this ready because this is
not this is really not
bad it'll be under 600 lines I'll make
bad it'll be under 600 lines I'll make
sure of that cuz I promised them like
sure of that cuz I promised them like
600 lines was the Prototype that's what
600 lines was the Prototype that's what
I estimated that's what it
be okay so you're going through the
be okay so you're going through the
attacker so far so good
attacker so far so good
right you get their
right you get their
attack Defender board length
if
if
not M
not M
Defenders
Defenders
attack
attack
defense
continue have their
continue have their
defense you have their card
attacker
Health minus equal Defender
attack defend your health
wait attack or health get
subtracted attacker wins attacker attack
hell Defender
wins well it's not really attacker wins
wins well it's not really attacker wins
or Defender wins here right
break let's see if this does it
else
hacker
hacker
attack let's
see
play play this card
swing play this play this
swing play this play this
[Music]
[Music]
swing and then what we're going to
swing and then what we're going to
do is we're going to do
do is we're going to do
this it
worked it
worked it
worked you see
worked you see
that our card was destroyed their card
that our card was destroyed their card
was destroyed the rest of the combat
was destroyed the rest of the combat
went
through so this is a mostly working
through so this is a mostly working
prototype
then why do you have attack or attack
then why do you have attack or attack
and attack attack which you have
and attack attack which you have
assigned so it's kind of messy at the
assigned so it's kind of messy at the
moment but the idea is I don't know if
moment but the idea is I don't know if
you've played magic um when you attack
you've played magic um when you attack
something um your attack gets temporary
decreased by uh so like let's say that
decreased by uh so like let's say that
you have five attack okay and then you
you have five attack okay and then you
attack something that has two health and
attack something that has two health and
then you're also attacking something
then you're also attacking something
that has like one Health what'll happen
that has like one Health what'll happen
is you hit the first one your attack
is you hit the first one your attack
goes down to two now you have three
goes down to two now you have three
attack left you hit the second one I I
attack left you hit the second one I I
think I said it has two Health you have
think I said it has two Health you have
three attack left uh you hit that now
three attack left uh you hit that now
you have one attack left and that one
you have one attack left and that one
extra damage goes to face so it goes to
extra damage goes to face so it goes to
the opponent
so but the thing is you're not actually
so but the thing is you're not actually
permanently reducing your attack you're
permanently reducing your attack you're
only reducing it for the purpose of that
only reducing it for the purpose of that
one
computation yeah it's a temporary thing
computation yeah it's a temporary thing
exactly so I have to keep track of that
exactly so I have to keep track of that
separately so what we're going to do now
separately so what we're going to do now
I'm going to use the restroom real quick
I'm going to use the restroom real quick
quick I'll be right back and then we're
quick I'll be right back and then we're
going to finish cleaning this up uh
going to finish cleaning this up uh
you're going to see you know how I clean
you're going to see you know how I clean
all this up nicely we're going to clean
all this up nicely we're going to clean
up all the logging and stuff we're going
up all the logging and stuff we're going
to get it down to hopefully 600 lines
to get it down to hopefully 600 lines
and then I'm going to ship this as a
and then I'm going to ship this as a
prototype to the team and uh I think
prototype to the team and uh I think
people are going to be very excited we
people are going to be very excited we
might also do a little bit of stuff with
might also do a little bit of stuff with
the rendering
the rendering
differently I kind of should have a
differently I kind of should have a
separate zone for
separate zone for
lands I don't know how I'm going to deal
lands I don't know how I'm going to deal
with that maybe I just won't bother for
with that maybe I just won't bother for
now I also kind of want to render when
now I also kind of want to render when
lands are tapped um but yeah I'll be
lands are tapped um but yeah I'll be
right
back yeah
for
e
e
e e
what team you're working
what team you're working
with uh open source team frankly
with uh open source team frankly
like puffer is a company but all the
like puffer is a company but all the
contributions and stuff and all the code
contributions and stuff and all the code
are all open
source I think this is going to have to
source I think this is going to have to
be called puffer the schooling
puffer the schooling
TCG yeah that's way
better all right we have to clean this
better all right we have to clean this
up
now these phase indicators no longer
needed put this here these are all
needed put this here these are all
forward declarations these can all go
together we have our
together we have our
stack how do people do code blocks and
stack how do people do code blocks and
see do they just like do this type of
see do they just like do this type of
stuff this is kind of gross
stuff this is kind of gross
right yeah that's kind of
gross I think we leave it like
this think these probably these
go maybe we do something like this
so we do Health
so we do Health
[Music]
Mana is this cleaner
don't need phas do need
turn do we do
this there like too many sections here
I'm kind of like doing this
I'm kind of like doing this
maybe organize these a little bit you
know then we have attackers
Defenders and the stack at the
bottom lock index turn yeah this is okay
bottom lock index turn yeah this is okay
this is laid out kind of
this is laid out kind of
fine
stack there that's nice and
stack there that's nice and
condensed uh these allocate and freeze
condensed uh these allocate and freeze
are good
randomize
randomize
deck draw a
card reorder these a little
bit H they're kind of fine like
bit H they're kind of fine like
this can attack
tapable
Mana I don't like the way that we have
Mana I don't like the way that we have
these question mark statements
these question mark statements
here
um technically I could make pointers
um technically I could make pointers
that are like always updated to the
that are like always updated to the
current
thing I don't know if that's worth
thing I don't know if that's worth
it I'm going to leave these alone for
it I'm going to leave these alone for
now
was there like a standard cdbg print or
was there like a standard cdbg print or
you just make your own
I hate
this I mean I guess it's kind
of why is it autocomplete to
of why is it autocomplete to
rust get out of here rust
yeah I don't like this at
all oh this is kind of cool though
let me play with
this for
uh this is not going to let me do like
uh this is not going to let me do like
my Matrix and stuff is it
yeah I think this is kind of Overkill
one
void debug print
oh yeah cuz print is uh variable args
right I forgot about
right I forgot about
that well I think we'll leave it for now
that well I think we'll leave it for now
we'll just not do that for now we'll
we'll just not do that for now we'll
just like clean up the prce and not do
just like clean up the prce and not do
any of that
Shenanigans B
untap can you get the name of a function
untap can you get the name of a function
and see
now no there's not a like that's too
now no there's not a like that's too
much we'll just do it this
way we just
do so board is
full valid moves
full valid moves
invalid
invalid
[Music]
[Music]
action replayed land land
played play
cool phas attack no valid
cool phas attack no valid
attack attack
confirmed
confirmed
okay we'll see if we get clean logs out
okay we'll see if we get clean logs out
of this right
B
Block I think we'll get rid of some of
Block I think we'll get rid of some of
these but
uh we don't need this
manual block confirm invalid
block well
block well
true think we just do this every step
here no member face
yeah you do not need the
phas turn
phas turn
action you got rid of the phase thing
action you got rid of the phase thing
right
phas render
phas render
label oh this was where our our labels
went print f
by
by
now we have the numbers back on these
now we have the numbers back on these
cards which is
cards which is
nice and say we play this and play this
nice and say we play this and play this
we play this
we play this
enter play this
right oops where'd it
go we already played everything
thing enough
Mana we hit
enter phase play Phase
attack two
enter untap draw play
so this
is if I block with this it should be
is if I block with this it should be
seven
seven
damage which leaves you with six Health
damage which leaves you with six Health
right six
right six
Health good now I just have to
Health good now I just have to
restructure a little bit
probably will'll have to write a little
probably will'll have to write a little
AI for this thing as
AI for this thing as
well
um this Prince look
it's like simultaneously printing too
it's like simultaneously printing too
much and not
enough Mana Zone and tapping yeah well
enough Mana Zone and tapping yeah well
Mana Zone will take a little bit more
Mana Zone will take a little bit more
time but tapping we should be able
to let me fix a couple things here first
to let me fix a couple things here first
what time is it it's only it's not even
what time is it it's only it's not even
two
what does TCG Trading Card Game
what does TCG Trading Card Game
Magic the Gathering Hearthstone Legends
Magic the Gathering Hearthstone Legends
of run Tera one of
those this is the Prototype we're
those this is the Prototype we're
working with at the
moment uh yeah this looks decent right
moment uh yeah this looks decent right
now
C game
yeah it's kind of difficult to get a
yeah it's kind of difficult to get a
clean logging with this stuff isn't it
well we can clean up the rendering quite
well we can clean up the rendering quite
a bit
okay so you only need this information
okay so you only need this information
when you go to
when you go to
do contextual here
right who's the attacker and who's the
right who's the attacker and who's the
defender is contextual right
turn one plus and turn
turn one plus and turn
maybe you need to put some systematic
maybe you need to put some systematic
line
line
braks yeah it's just a little weird
braks yeah it's just a little weird
because
because
um like the same phase gets called
um like the same phase gets called
potentially many
potentially many
times so there's not really a way to not
times so there's not really a way to not
have the left indent thing
easily
easily
and this should just be board
or hold on this should
or hold on this should
be damn
it attacker
board so this is going to be attacker
board so this is going to be attacker
board this is Defender
board this is Defender
board so let's try like this maybe
and then the turn
thing needs to pass
yeah so the turn thing needs to pass
differently Bas block
yeah so right here this needs to
yeah so right here this needs to
be
be
turn goes to one minus
turn goes to one minus
turn and then you go to phase
turn and then you go to phase
block and
then we go to
untap
phase let me see if this does it this
phase let me see if this does it this
should make it so that we now block our
should make it so that we now block our
own
side
side
[Music]
[Music]
okay
okay
two two
swing and now we have
swing and now we have
this we can swing whoops what did I just
this we can swing whoops what did I just
play was that allowed I think that was
valid we swing with
valid we swing with
this it rendered something freaking
weird did we not get to block our own
weird did we not get to block our own
stuff
stuff
stuff no they didn't
attack wait why are we at 20
Health okay well we're not doing damage
Health okay well we're not doing damage
somehow
buffer over
flow trading card game magic the
flow trading card game magic the
Gathering D start with decks
Gathering D start with decks
yeah well we're trying to get at least a
yeah well we're trying to get at least a
reasonable prototype here it's very
reasonable prototype here it's very
close to being at least a decent
prototype got to get the bugs out
turn to
stack let's figure out why it's not
stack let's figure out why it's not
rendering Health
correctly should
be okay
uh we don't want to do this cuz
uh we don't want to do this cuz
like maybe the opponent draws a card at
like maybe the opponent draws a card at
some point
right yeah whatever we do this for now
caught
caught
so pretty easy
right what happened
right what happened
here attackers one
here attackers one
one can block with
one can block with
one no no you can't block with one
wait attackers
confirmed phase
block if can block
the defender board has length zero why
the defender board has length zero why
the [ __ ] does this get
called do I have this thing backwards
called do I have this thing backwards
somehow oh yeah yeah yeah I know why
okay it's cuz I switched the way the
okay it's cuz I switched the way the
turn plays uh the turns play out it's
turn plays uh the turns play out it's
fine no worries
resolving reducing Health by one oh okay
resolving reducing Health by one oh okay
so it it uh took my health Away by
so it it uh took my health Away by
that's a bad
that's a bad
thing in Star health is going to be
thing in Star health is going to be
equal
to opponent Health like
this we're very close here to having
this we're very close here to having
this
there you go so there it is 18
Health okay 13 Health
Health okay 13 Health
right and then uh we're just going to
right and then uh we're just going to
pass a little bit here to hope he
pass a little bit here to hope he
attacks me at some
point uh it has rendered text on top of
point uh it has rendered text on top of
itself somehow
oh it's just rendered over the card
oh it's just rendered over the card
that's no big
that's no big
deal still not attacking me
so and then what happens we have an
so and then what happens we have an
overflow and draw a
card uh we need to know uh that your
card uh we need to know uh that your
hand is not too big right
if then you just return and not reset
right we're getting rid of
[Music]
bugs play some
bugs play some
[Music]
[Music]
Land wait for him to attack attack me
Land wait for him to attack attack me
with
something he didn't actually
attack okay so
attack okay so
um whatever the heck that just was
um whatever the heck that just was
doesn't make any sense because it
doesn't make any sense because it
has do you see how it has my cards
has do you see how it has my cards
rendered like this
oh these are the cards that they're
oh these are the cards that they're
attacking me
attacking me
with I
see yeah so this is just rendered
backwards hold on a second
are these two just these two are just
are these two just these two are just
backwards
right pop for the schooling
play some
play some
land play this
card okay and now we just wait to get
attacked can block with
one still render it
backwards how's it going hey Spencer
backwards how's it going hey Spencer
check it out we're almost done with uh
check it out we're almost done with uh
the prototype for the card game so if
the prototype for the card game so if
you want to jump into
you want to jump into
it it's going to be ready very soon
it it's going to be ready very soon
about 600 Lines Just As I
about 600 Lines Just As I
said um I see you've been
busy this looks
great can you play Stones like this on
great can you play Stones like this on
the edge of the board is this valid
puffer
go breakout is base file
go breakout is base file
yep yep exactly that was the main thing
yep yep exactly that was the main thing
for
you I'll do a quick a quick code review
you I'll do a quick a quick code review
on this whenever if it's helpful for
on this whenever if it's helpful for
you sorry what do you say about the
you sorry what do you say about the
stones oh I just haven't played go I
stones oh I just haven't played go I
don't can you put stones like this on
don't can you put stones like this on
the edge of the
board almost done with
board almost done with
this yeah I'll do a quick code review on
this yeah I'll do a quick code review on
this now or whenever you like if it's if
this now or whenever you like if it's if
it's helpful to you
pretty sure if it's correct then it's
pretty sure if it's correct then it's
correct I just don't
correct I just don't
know just double check like I said play
know just double check like I said play
a couple games
ago what the heck is wrong with this
ago what the heck is wrong with this
attacker
board I had this right before
board I had this right before
don't have capture mechanics yeah no
worries it's actually such an easy
worries it's actually such an easy
environment to do MCTS over if you think
environment to do MCTS over if you think
about it as well because like the whole
about it as well because like the whole
game state is just so easily represented
game state is just so easily represented
as one array without even having to be
as one array without even having to be
fancy so literally you're just you do
fancy so literally you're just you do
MCTS just by like writing that array and
MCTS just by like writing that array and
that sets your
state hey welcome
why do we need all these lines of
why do we need all these lines of
Defenders and why can't we have line for
Defenders and why can't we have line for
attackers you just want to draw the way
attackers you just want to draw the way
it works in Magic
it works in Magic
is well this is not this is bugged but
is well this is not this is bugged but
the way it works in Magic is you choose
the way it works in Magic is you choose
what cards you attack with but then your
what cards you attack with but then your
opponent chooses uh which cards they're
opponent chooses uh which cards they're
going to block each of your attackers
going to block each of your attackers
with
with
right so you kind of want to be able to
right so you kind of want to be able to
see like when you're blocking which
see like when you're blocking which
cards you're blocking with
cards you're blocking with
what it'll make sense as soon as I have
what it'll make sense as soon as I have
the rendering
the rendering
correct because I'll be able to show you
ah so here's the
ah so here's the
issue this has got to
beer board
length attacker board length
see if this does
see if this does
it on line
it on line
attackers no because you get to choose
attackers no because you get to choose
you get to choose which card your
you get to choose which card your
Defenders
Defenders
block you see what I
block you see what I
mean like you can choose to block the
mean like you can choose to block the
first attacker with cards two and three
first attacker with cards two and three
and then you can block like the third
and then you can block like the third
attacker with card five or
attacker with card five or
something having now finally watched the
something having now finally watched the
YouTube videos is the point of puffer to
YouTube videos is the point of puffer to
create good environments to massively
create good environments to massively
test various RL algorithmics algorithms
test various RL algorithmics algorithms
efficiently new strategy for RL you test
efficiently new strategy for RL you test
on TCG top one sucks for some other I
on TCG top one sucks for some other I
mean that's part of it right that's the
mean that's part of it right that's the
current push I mean the goal of puffer
current push I mean the goal of puffer
is to fix this cursed
is to fix this cursed
field um and the current thing is is
field um and the current thing is is
we've made training fast we've made good
we've made training fast we've made good
compatible infrastructure for the most
compatible infrastructure for the most
part and the M's are just too slow this
part and the M's are just too slow this
is the current bottleneck so at the
is the current bottleneck so at the
moment it's let's make a bunch of fast
moment it's let's make a bunch of fast
environments right now it's not going to
environments right now it's not going to
just be I keep sitting here writing fast
just be I keep sitting here writing fast
environments for the next five years
environments for the next five years
until I have a thousand of them right
until I have a thousand of them right
it's at some point it's going to be okay
it's at some point it's going to be okay
we have a bunch of fast environments
we have a bunch of fast environments
maybe people are contributing more of
maybe people are contributing more of
them but we've got like a decent base
them but we've got like a decent base
for now uh let's do some methods
for now uh let's do some methods
research and really figure out why these
research and really figure out why these
methods aren't working as well as they
methods aren't working as well as they
could be so really the goal of puffer is
could be so really the goal of puffer is
to push this field
forward like none of the stuff that
forward like none of the stuff that
we've been uh building here has existed
we've been uh building here has existed
before so this is all brand new stuff
still doesn't like letting me
block what do you mean my
block what do you mean my
methods could be algorithms could be
methods could be algorithms could be
training curricula could be architecture
training curricula could be architecture
any stuff right all the other side of
stuff why is this not working
hacker
board if the turn is zero then it's my
board this seems like it should be
board this seems like it should be
correct so the fact that it's not
correct so the fact that it's not
correct means
correct means
I'm missing something
well hold
on oh yeah it's cuz the turn flips
on oh yeah it's cuz the turn flips
that's
that's
obnoxious it's very obnoxious
I got to think about this a little
bit e
there even a good way of doing this
I mean I can technically put the indices
I mean I can technically put the indices
on them
is that
better I don't think so
It's Tricky how I'm using the uh the
turn the play to
toen I mean I could go real quick I can
add I can add like bull
attacking and I can add like into
attacking and I can add like into
defending
maybe this does
it and
then so we do phaser attack
then so we do phaser attack
right
board and we do board cards
board and we do board cards
attacking equals
attacking equals
not board cards attacking like
this and then we just do board cards
this and then we just do board cards
attacking like this
and
and
then we just do
then we just do
if uh this actually becomes easier come
if uh this actually becomes easier come
to think about it
to think about it
right because we just
do yeah this actually becomes easier did
do yeah this actually becomes easier did
you end up using a stack to manage the
you end up using a stack to manage the
different set of yes yes I did so we can
different set of yes yes I did so we can
manipulate it down the road yes I did
manipulate it down the road yes I did
um the way it works is each of these
um the way it works is each of these
things that you see here these functions
things that you see here these functions
they go onto the stack and then they add
they go onto the stack and then they add
stuff to the stack as well so like when
stuff to the stack as well so like when
a phase is over it'll just put whatever
a phase is over it'll just put whatever
the next phase is onto the stack and you
the next phase is onto the stack and you
also have control flow execution so what
also have control flow execution so what
you can do is you can say whether you
you can do is you can say whether you
want to put something on the stack and
want to put something on the stack and
return control to the user or put
return control to the user or put
something on the stack but keep going uh
something on the stack but keep going uh
and like keep executing stuff on the
and like keep executing stuff on the
stack so it's very general and it's uh
stack so it's very general and it's uh
it's very simple and it took a little
it's very simple and it took a little
bit more code than I had before but it
bit more code than I had before but it
should be very easy to work
should be very easy to work
with this is much much cleaner than I
with this is much much cleaner than I
had
had
before let me see if I can get this
before let me see if I can get this
thing done quickly so we can actually
thing done quickly so we can actually
have the full demo I want this shipped
have the full demo I want this shipped
today so like in the evening maybe I can
today so like in the evening maybe I can
chat with you guys and tell you about it
chat with you guys and tell you about it
and uh you know what is going to be
and uh you know what is going to be
needed there
right chilling
one okay I think this does
it if J
block not attacking
block Defenders
Defender
board card Star
card card is
land it's equal
to1 for
tricky
tricky card
not
continue just a bit of tricky
continue just a bit of tricky
refactoring here take me a few minutes
array and then at the end of this step
here just do four
attacking is
false negative
one like this
and the board State should not matter
and the board State should not matter
the end of the
game let's see what I have to fix here
Defender
Defender
Defenders what's this
Defenders what's this
here you're already blocking is the goal
here you're already blocking is the goal
here
loock
index I think this
works and
works and
Defenders yeah know this is
Defender
board
not is there a a flip I think there is
not is there a a flip I think there is
like a
unary
unary
see is there like a cleaner flip wall
not equal true that's interesting I mean
not equal true that's interesting I mean
exor but we don't need to do that
exor but we don't need to do that
I was just trying to see if there was
I was just trying to see if there was
like a a just like a clean unary
thing exor
works okay and now we actually we get to
works okay and now we actually we get to
change the uh the rendering here
right so we just get to do if card.
right so we just get to do if card.
attacking oh that's so nice
right if card Do
attacking and if card not
attacking and now we don't even have to
attacking and now we don't even have to
do this anymore
right Defender board here all right
attack if attack is negative one then
attack if attack is negative one then
you
continue look at
that yeah this is actually way easier
that yeah this is actually way easier
than before
of course I say that knowing that um
of course I say that knowing that um
there's going to be some stuff to fix
still
anding attacker board length
yeah you still need the attacker board
right all right and let's see uh how far
right all right and let's see uh how far
this gets play
land
land
yeah let's uh fix that
wait I forgot one thing I did forget one
wait I forgot one thing I did forget one
thing
right randomized deck
let's try
this how is this
this how is this
possibly defending should be equal to
possibly defending should be equal to
negative one here that shouldn't be
negative one here that shouldn't be
possible let's see
because I randomized both decks
because I randomized both decks
right say it's zero not negative
one Deck cards is equal to negative
1 oh
yeah it's got to go up
there there we
go 18 very
nice now we wait for them to attack me
okay so I'm now on my block stage
right why is this thing not uh
oh the lines are just reversed
oh the lines are just reversed
right yeah it's supposed to be it's
right yeah it's supposed to be it's
drawing in the wrong direction that's
drawing in the wrong direction that's
fine
so me figure this out
I'm going to not think about this first
I'm going to not think about this first
and I'm just going to see if I get if
and I'm just going to see if I get if
like my first guess
like my first guess
works that's usually a good strategy
[Music]
okay wait for them to attack
me okay now he attacks me
right okay so this is closer
this is almost
correct there are two things I need to
correct there are two things I need to
fix here
right for
fix
fix
that and now the second
thing this should be Defender board
thing this should be Defender board
length right
oops let's see how much this
fixes okay
well now this is
simply it's simply
backwards like simply just backwards
backwards like simply just backwards
right
let me think about this what am I doing
let me think about this what am I doing
wrong here
wouldn't it just be so much easier if I
wouldn't it just be so much easier if I
did this
separately like what if right
separately like what if right
here I guess I have to do it after I
here I guess I have to do it after I
draw the boards
draw the boards
right but
like for
we get the card right my board
here e
yeah I literally only ever have to do
this
this
Plus Card
X Card y
this literally
it let's see if this does it
huh well this doesn't really do it now
huh well this doesn't really do it now
does
it
so my board
so my board
length card y so yeah this is my board
length card y so yeah this is my board
right
hard y
hard y
one r.
one r.
[Music]
[Music]
defending here let's just try
defending here let's just try
this I don't know why I'm being stupid
this I don't know why I'm being stupid
with this particular thing
with this particular thing
but I am going to have to take a break
but I am going to have to take a break
in a few to get uh a shake because I'm
in a few to get uh a shake because I'm
getting rather hungry
all right so now we're being
attacked are these just
backwards these are just backwards right
how the hell are these
backwards I am confused
oh
wait no this is
right the opponent board is Row one my
right the opponent board is Row one my
board is row two
right so card X my board length
right so card X my board length
right board y 30 G2
right board y 30 G2
plus defending opponent
plus defending opponent
board looks good to me so let's see
board looks good to me so let's see
what's wrong
here well we still have this Matrix
here well we still have this Matrix
don't we we have this Matrix to look at
uh this Defender thing is not changing
uh this Defender thing is not changing
though when
though when
I when I press this is
it that's a little concerning
the attackers is correct but this
the attackers is correct but this
Defenders Matrix looks
wrong one more time just to be sure
well look at this Defender thing right
here this is nuts
right let's figure out how this is
right let's figure out how this is
getting computed I don't know if this is
getting computed I don't know if this is
even being
used
e e
let's see if this fixes the uh crazy
let's see if this fixes the uh crazy
board
stuff so we just do land Z
stuff so we just do land Z
Z
Z
attack okay board is empty and now we
attack okay board is empty and now we
play a land we play this we do this fine
play a land we play this we do this fine
enter my attacks
enter my attacks
here
here
and what
the no something's weird still
yeah these Defenders are not good
it really just seems like the uh the
it really just seems like the uh the
y-coordinate is
y-coordinate is
flipped doesn't
flipped doesn't
it yeah it just really seems like the
it yeah it just really seems like the
y-coordinate is flipped so now how the
y-coordinate is flipped so now how the
how was the y-coordinate possibly
flipped wait
card cards in my board
0 one
two not understanding
two not understanding
this there's something I'm not getting
this there's something I'm not getting
here
I don't want to just like flip them
I don't want to just like flip them
because I don't understand
why you
why you
know for
here Def defending with seven it says
here Def defending with seven it says
right it's a good thing I didn't just
right it's a good thing I didn't just
flip it because you can see it's
flip it because you can see it's
actually still off
here oh yeah this index is totally wrong
yeah know this index is
yeah know this index is
wrong well making an rltc GM is awesome
wrong well making an rltc GM is awesome
waiting for this overlap mtj and
waiting for this overlap mtj and
sometimes Hearthstone player yeah I mean
sometimes Hearthstone player yeah I mean
I uh I asked people if they'd be
I uh I asked people if they'd be
interested in this and we got a ton of
interested in this and we got a ton of
people who said they'd be interested in
people who said they'd be interested in
contributing to this so I'm finishing
contributing to this so I'm finishing
the prototype for this in the next
the prototype for this in the next
couple of hours here and then this will
couple of hours here and then this will
just be an open- source project as a
just be an open- source project as a
part of puffer so if you're interested
part of puffer so if you're interested
in contributing to stuff on this you
in contributing to stuff on this you
know come on over we need more people on
know come on over we need more people on
it
I think I found the
issue let's see about this
nice great to see you back I I haven't
nice great to see you back I I haven't
been able to stream as much lately just
been able to stream as much lately just
because like I stream Dev right well it
because like I stream Dev right well it
turns out when there's so much Dev uh
turns out when there's so much Dev uh
there's a point at which it's like no I
there's a point at which it's like no I
just have to grind this out solo you
just have to grind this out solo you
know
okay
okay
play play a land play
this
this
six can't play this can play
six can't play this can play
this takes it a while to pick a random
this takes it a while to pick a random
move we're just going to let it pass a
move we're just going to let it pass a
bit and
bit and
then defending
then defending
three I am defending three 012 2
three
uh there's a
uh there's a
rumor no I'm
rumor no I'm
not I like to be able to go home for
Christmas but what I will do is I will
Christmas but what I will do is I will
give these out to anybody I meet up with
give these out to anybody I meet up with
we got puffer stickers they're pretty
nice
e e
actually wait does this correct blocking
actually wait does this correct blocking
three with index
three with index
two oh
okay so
why my board. length
I don't know why this is taking me so
I don't know why this is taking me so
long this really shouldn't be that hard
long this really shouldn't be that hard
to
finish ah right here this
is this is it I have this portion
is this is it I have this portion
backwards
there blocking
there blocking
index with yeah this is it print was
index with yeah this is it print was
right code below it was
wrong okay we do this we swing Play Our
wrong okay we do this we swing Play Our
Land We
Land We
swing we play our land we chill a
swing we play our land we chill a
bit let's play land let's play big
bit let's play land let's play big
card we wait for them to
card we wait for them to
swing okay now they
swing oh yeah yeah look at
that so watch this I can go like this
that so watch this I can go like this
and I can just say I'm going to block
and I can just say I'm going to block
you
you
here and then I can say what's this uh a
here and then I can say what's this uh a
one two so I can block you here and then
one two so I can block you here and then
you both of your cards die
I still took damage to that didn't I
I still took damage to that didn't I
okay so we got to fix some Cals we're so
okay so we got to fix some Cals we're so
close at this point
close at this point
though this is so
close
cheat draw a
line e
try
this expected
this expected
expression I think I have to cast this
expression I think I have to cast this
right
there we go
land
land
uh now we do our attack or whatever now
uh now we do our attack or whatever now
we do our land we
we do our land we
play We skip we play land
play We skip we play land
skip uh land Big
Card wait for them to
Card wait for them to
swing okay so now we're going to block
swing okay so now we're going to block
you
you
here and then we're going to block you
here and then we're going to block you
here
right what should happen right
right what should happen right
here
here
is their card should die my first one
is their card should die my first one
should
should
die my fifth card here let's actually
die my fifth card here let's actually
just like before and after
this just so we can see exactly how this
this just so we can see exactly how this
is messing
up
okay so what happened is I took two
okay so what happened is I took two
damage I should not have taken two
damage this card's HP did not get
reset his cards both did die though
which is correct
if
the attacker Health wait if the defender
the attacker Health wait if the defender
health is less than the attacker's
attack then you kill it
right you need attacker Health in here
right you need attacker Health in here
as well and attacker
Health attacker health is going to
Health attacker health is going to
be Min equal Defender
be Min equal Defender
attack like this right
attack like this right
and you remove it and you keep
and you remove it and you keep
going otherwise you don't kill
it nothing happens I think if you don't
it nothing happens I think if you don't
kill it right
no if you don't kill it then your card
no if you don't kill it then your card
is dead
is dead
right no that's also not
true ah this is so easy I don't know why
true ah this is so easy I don't know why
this is bothering
me for
back from your health
oh it's possible that neither of these
oh it's possible that neither of these
things
right e
if you don't kill
if you don't kill
it
then attack her
health minus equal to Defender attack
and Defender Health doesn't matter
and Defender Health doesn't matter
because you don't kill it right
attack is
attack is
zero remove is
true and these don't things don't
matter you just break
here I think this is
it Well's play this out again and see if
it Well's play this out again and see if
it makes sense
now land play
now land play
cards play our land play
cards play our land play
this play our next land pass play land
this play our next land pass play land
play Big
Card okay now they swing
Card okay now they swing
now we can block like
now we can block like
this and then we block like this
right why did we still take damage
zero maybe it's this I think this is it
[Music]
let's do like
this okay so they
this okay so they
have block like this
have block like this
and then we will block this one with our
and then we will block this one with our
big card we no longer take damage they
big card we no longer take damage they
don't take damage
don't take damage
either
and yeah I believe that was good
and yeah I believe that was good
right and then let's say that we
swing we're going to do big swing
swing we're going to do big swing
here so this is
here so this is
up
to up to 12
damage so apparently he blocked a little
bit
possibly we'll let him swing
possibly we'll let him swing
again okay he's going to swing with some
again okay he's going to swing with some
cards uh so what we're going to do is
cards uh so what we're going to do is
we're going to intentionally not block
we're going to intentionally not block
great we're going to
great we're going to
block so we should get one this card
block so we should get one this card
should be killed and we should have one
should be killed and we should have one
damage flow through right and then we're
damage flow through right and then we're
going to block like this I'm going to
going to block like this I'm going to
take I'm going to take the screenshot
take I'm going to take the screenshot
again so we can make sure that this
again so we can make sure that this
resolves as we
expect and then we're going to hit
expect and then we're going to hit
enter and let's see what happened so we
enter and let's see what happened so we
took one
took one
damage as expected we took one damage
damage as expected we took one damage
right from this card flowing
through we killed their card but this
through we killed their card but this
should not have one right now this
should not have one right now this
should be this should have been a
should be this should have been a
reset so why did his
reset so why did his
health why did the attacker Health go
down cuz this needs to be
wait attack her
wait attack her
health why is this happening
twice that's
weird okay let's try this
again this is almost done we're
again this is almost done we're
like so good so
close Okay Place some
close Okay Place some
lands I get some good cards
lands I get some good cards
out let's get like uh
out let's get like uh
two we wait for them to do
something now we're going to do our
something now we're going to do our
screenshots
screenshots
again so we're going to perfect block
again so we're going to perfect block
this and then we're going
this and then we're going
to uh we're going to fail here
right see what happened is I took one
right see what happened is I took one
damage from failing to block correctly
damage from failing to block correctly
here we lost both of our cards but he
here we lost both of our cards but he
lost one as
lost one as
well this is correct let's just do one
well this is correct let's just do one
more scenario
more scenario
maybe uh let's get some cards back so we
can actually play the game
uh okay so let's just like let him hit
uh okay so let's just like let him hit
us 17 that's
us 17 that's
fine okay perfect this will be a nice
fine okay perfect this will be a nice
complex scenario so we've got triple
complex scenario so we've got triple
swing here so let's
swing here so let's
do we block into this no let's see so I
do we block into this no let's see so I
would probably do block
would probably do block
here and then block here nope a block
here and then block here nope a block
this one and then we'll block like
this one and then we'll block like
this and
this and
then we'll block
then we'll block
whoops six is already
blocked something to screwy here
yeah something screw here for
sure with the way our blocks just went
through if
that was very weird we need to replicate
that was very weird we need to replicate
some stuff I need to at least give them
some stuff I need to at least give them
a working
game yeah that'll be perfect I think I
game yeah that'll be perfect I think I
can get this cleaned up it'll be 4our
can get this cleaned up it'll be 4our
stream and then I'll get some other
stream and then I'll get some other
stuff done in the afternoon after this
stuff done in the afternoon after this
solo
okay we play our
okay we play our
lands play
land and I think we're happy with this
maybe we'd kind of like a three here we
maybe we'd kind of like a three here we
go okay so now we have
let's see so we
block can block with
one very very wrong
then it says five is already blocked
huh oh this is interesting
if Defender board
I think it's
this let's
this let's
see
okay we're going to get as a side effect
okay we're going to get as a side effect
of this we're going to get really fast
of this we're going to get really fast
at playing Magic the Gathering
play this play
play this play
this okay play our
this okay play our
land play
land play
this
okay so this kills both of our cards but
okay so this kills both of our cards but
we take no damage right
yes
perfect did he take damage from that I
perfect did he take damage from that I
don't think
don't think
so we'll play this and
so we'll play this and
this and then is two three we're going
this and then is two three we're going
to perfect
to perfect
block like this nobody loses
block like this nobody loses
Health uh do we have five lands we do we
Health uh do we have five lands we do we
play our big uh we play our c like
play our big uh we play our c like
this he's got a 2
this he's got a 2
three we're going to let him hit us 17
damage okay now we have an interesting
damage okay now we have an interesting
thing to
thing to
block um so we're going to do block this
block um so we're going to do block this
with five and this with like this and
with five and this with like this and
then we're going to make sure this will
then we're going to make sure this will
be our last test case
it's actually kind of interesting that
it's actually kind of interesting that
it should be very easy to make um some
it should be very easy to make um some
test cases for
this okay
so we should take their first card out
so we should take their first card out
which is their two three is gone and we
which is their two three is gone and we
lose no health for
lose no health for
this and then they take our card out our
this and then they take our card out our
34 which they
34 which they
did uh they keep their
did uh they keep their
card and we take one damage which is
card and we take one damage which is
exactly what happened perfect
um okay cool
and
and
okay
okay
if r. is
if r. is
tapped we have is
tapped
if color color
if color color
equals
AP so it's going to
AP so it's going to
be uh
be uh
28 0 0
red and then
red and then
[Music]
[Music]
here we'll do the same
do plus 32 as well let's align the
fonts
X
X
Plus 322
okay
why let's figure out what the heck is up
why let's figure out what the heck is up
with
this Plus
168 32 I don't think that's 80 is it
168 32 I don't think that's 80 is it
that's
that's
70 plus 16 no
70 plus 16 no
neither 72
wait I'm being like crazy crazy stupid
right this is plus
80 but actually this was close enough
oh so it's plus
oh so it's plus
right
right
64 let's try
this uh yeah that works but we have to
this uh yeah that works but we have to
fix the land
thing is there a lightning bolt thing un
code lightning bolt
here what if I just do this I'm sure it
here what if I just do this I'm sure it
won't actually show
up yeah I I don't think this is going to
up yeah I I don't think this is going to
show
show
up yeah it just shows up as question
up yeah it just shows up as question
marks on the other screen okay
so we'll just do this at like what
so we'll just do this at like what
plus
oops just clean up this we're just
oops just clean up this we're just
cleaning stuff up at the
moment and then the phase
moment and then the phase
here this phase can go in the bottom of
here this phase can go in the bottom of
the screen I think
the screen I think
this is also
not
not
eight
scen okay so here we
go this good right
Tech okay and then we have play
Phase this is also not symmetrical at
Phase this is also not symmetrical at
the moment I kind of likeed where the
the moment I kind of likeed where the
play button was before to be honest
uh it just needs to
uh it just needs to
be
symmetrical let me see how this
symmetrical let me see how this
is get
is get
card so there are four rows of
cards so we
cards so we
have minus they're 128 each so we've got
have minus they're 128 each so we've got
to
spare and it's it's four rows so that
spare and it's it's four rows so that
means you need
means you need
five not divisible by five
80 so what if I just do
80 so what if I just do
plus plus
20 oops
enironment we're just making this
decent well not bad
and then this can
be we put the
be we put the
land we put our card
land we put our card
right we attack with our
right we attack with our
[Music]
[Music]
card now we play our
card now we play our
land look at that it Taps the lands for
land look at that it Taps the lands for
us you see that it doesn't turn them yet
us you see that it doesn't turn them yet
but I have it tap like this for
now and then they untap
let's see if we can get a cool
let's see if we can get a cool
screenshot out of this
yeah he just tapped his lands out
yeah he just tapped his lands out
okay do I think he's going to
okay do I think he's going to
swing let's say I just
swing let's say I just
hit
hit
nine and then I'm going to do a three
nine and then I'm going to do a three
Mana it's like
Mana it's like
eight and we
eight and we
play and he
play and he
attacks and then I can do like this
that's a nice screenshot right
there PCG
look at
look at
that very
nice just over 600 lines with uh the
nice just over 600 lines with uh the
extra debug
stuff I think we can get rid of this as
stuff I think we can get rid of this as
well this is not really useful
anymore actual lines of code under 600
HML ECG
doc looks good
best
best
RB tank
something
Docker PG
slash
STS
STS
TCG I'm putting it on the web
let's
make break
out we'll just
put in here for now right
put in here for now right
oops did I mess this
oops did I mess this
up yeah I think I
did GG
G
sets and that should be
it
server
server
poost I need to copy the thumbnail
assets okay
look at
that now we got our TCG
here and we
here and we
can play it
that's pretty good to have this online
that's pretty good to have this online
already at least early build of
it let's uh commit this up
that's did we commit our stuff
that's did we commit our stuff
here no we
didn't. C build local build
web we modify the setup at
web we modify the setup at
all I don't think so I think this just
all I don't think so I think this just
builds
working TCG
working TCG
prototype 100 lines as
promise so the really nice thing about
promise so the really nice thing about
doing all this in C
it's already online that's all I had to
it's already online that's all I had to
do no custom code
link people the source
G do
C.H for
that wasn't bad
awesome 4 hours
exactly oops we don't want that we want
exactly oops we don't want that we want
the screenshot
image
hey Ramy it's playable on puffer GG
they probably have like link detection
they probably have like link detection
stuff for this
stuff for this
but maybe not
that's pretty nice
I like how easy it is to just get these
I like how easy it is to just get these
things online and playable you
know there's no mouse UI or anything but
know there's no mouse UI or anything but
you can just do like you know I probably
you can just do like you know I probably
need to add better instructions to
stuff
stuff
um but it
works lands tap
themselves I probably can crash it by
themselves I probably can crash it by
winning to be
fair I haven't really played with the
fair I haven't really played with the
reset
conditions uh-oh well we'll just let
conditions uh-oh well we'll just let
them
them
hit
hit
three
three
two
two
six
six
GG oh does it actually reset
cleanly I was not expecting
that got awful draw
I think technically you can just draw a
I think technically you can just draw a
full hand of lands and just be
screwed H it actually blocked me
did I lose health over
that block with
six and I win
cool very
cool very
nice I'm gonna hop off for the time
nice I'm gonna hop off for the time
being I'm uh I'm going to get some other
being I'm uh I'm going to get some other
work
work
done we got a good session in
done we got a good session in
here and
here and
uh yeah I basically a lot of the dev for
uh yeah I basically a lot of the dev for
this is just going to be in the Discord
this is just going to be in the Discord
for the next few days um so if you want
for the next few days um so if you want
to get involved with this project at all
to get involved with this project at all
check it out there
