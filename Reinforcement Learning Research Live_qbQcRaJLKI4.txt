Kind: captions
Language: en
Hello
back live.
back live.
Happy 5th.
Hope you've all had a
Hope you've all had a
festive 4th of July.
festive 4th of July.
Pretty much just worked on some AI stuff
Pretty much just worked on some AI stuff
yesterday and then called it a uh an
yesterday and then called it a uh an
early night.
early night.
We did do one cool thing though.
Look at this.
We got the drone flag.
Go grab my chat.
Go grab my chat.
Stick it underneath the uh
camera.
Yeah, this is pretty cool. Like maybe
Yeah, this is pretty cool. Like maybe
you've seen the drone light shows where
you've seen the drone light shows where
all the drones are super coordinated and
all the drones are super coordinated and
you're like, "Ah, why do you need RL?"
you're like, "Ah, why do you need RL?"
The thing is like those drones kind of
The thing is like those drones kind of
just have to go from point to point and
just have to go from point to point and
they're routed such that they don't
they're routed such that they don't
really have to worry about collisions at
really have to worry about collisions at
all because you're just kind of like
all because you're just kind of like
rotating an object for the most part. So
rotating an object for the most part. So
nothing can collide. Uh whereas this
nothing can collide. Uh whereas this
like there's no actual path planning
like there's no actual path planning
included. the drones kind of just have
included. the drones kind of just have
to figure out how to get there from
to figure out how to get there from
whatever starting point without crashing
whatever starting point without crashing
into each other. And you can actually
into each other. And you can actually
see them trying to like get out of each
see them trying to like get out of each
other's ways. Now, this is not perfect.
other's ways. Now, this is not perfect.
You can see that there are still a few
You can see that there are still a few
places where they're a bit off, but like
places where they're a bit off, but like
this was like a two-day demo and this
this was like a two-day demo and this
just works and it trains in a couple of
just works and it trains in a couple of
minutes. They can do a lot more than
minutes. They can do a lot more than
just this as well. Uh that's not what
just this as well. Uh that's not what
we're going to be working on
we're going to be working on
for the most part today, though.
for the most part today, though.
Today the plan is going to be to work on
Today the plan is going to be to work on
my article.
So, uh, we've had just I think more than
So, uh, we've had just I think more than
anything I've done, I've had people
anything I've done, I've had people
request educational materials
request educational materials
and you know, it's not the main thing I
and you know, it's not the main thing I
do. It's actually it's really not like I
do. It's actually it's really not like I
didn't start these streams to teach
didn't start these streams to teach
people reinforcement learning and it's
people reinforcement learning and it's
actually not even my main objective now.
See, my main objective
See, my main objective
is to advance the science, to advance
is to advance the science, to advance
the field, right?
the field, right?
That's the whole shtick around here.
That's the whole shtick around here.
But it's been pretty cool to see how
But it's been pretty cool to see how
many people have gotten into
many people have gotten into
reinforcement learning because of Puffer
reinforcement learning because of Puffer
Lib. And a lot of those people have gone
Lib. And a lot of those people have gone
on to actually help us quite
on to actually help us quite
meaningfully in our research. So, I
meaningfully in our research. So, I
think uh today I'm going to spend a
think uh today I'm going to spend a
little bit of time a little bit back to
little bit of time a little bit back to
that community and uh
that community and uh
put together a decent guide. Welcome,
put together a decent guide. Welcome,
Magid.
So, this is where we are at the moment
So, this is where we are at the moment
on the guide.
on the guide.
You're at 2200 words already.
You're at 2200 words already.
I do always get a little bit nervous
I do always get a little bit nervous
when I write longer pieces of content
when I write longer pieces of content
like this just because
like very often longer stuff doesn't do
like very often longer stuff doesn't do
as well. People have very short
as well. People have very short
attention spans. But at the very least
attention spans. But at the very least
this is going to end up being a
this is going to end up being a
very complete reference
very complete reference
for a lot of people. So we finished
for a lot of people. So we finished
yesterday,
the intro programming section,
and we got pretty far through the intro
and we got pretty far through the intro
ML section.
So, I think we'll finish the intro ML
So, I think we'll finish the intro ML
section and then we'll actually start on
section and then we'll actually start on
the RL proper today. And uh we'll see
the RL proper today. And uh we'll see
how far I can get on this. And the
how far I can get on this. And the
reason I'm streaming the writing of this
reason I'm streaming the writing of this
is so that people can give suggestions
is so that people can give suggestions
on things I'm doing. Try not to derail
on things I'm doing. Try not to derail
it too much, but obviously I do want
it too much, but obviously I do want
feedback and suggestions. Uh this is on
feedback and suggestions. Uh this is on
X, but this is not published yet. Magic.
X, but this is not published yet. Magic.
I am working on
I am working on
I am working on this live. So you can
I am working on this live. So you can
see what I'm writing on my screen.
see what I'm writing on my screen.
There's not really a way to do this in
There's not really a way to do this in
the X formatter. Technically do a Google
the X formatter. Technically do a Google
doc thing, but uh it's really a lot
doc thing, but uh it's really a lot
easier to do it directly in this format.
easier to do it directly in this format.
So I don't have to redo like reformat
So I don't have to redo like reformat
the whole thing. I'm already going to
the whole thing. I'm already going to
have to do this one like that once for
have to do this one like that once for
the website. So I like realistically I'm
the website. So I like realistically I'm
not going to be working on like jumping
not going to be working on like jumping
around sections too much. So, you'll
around sections too much. So, you'll
probably be able to just see the couple
probably be able to just see the couple
paragraphs on my screen and provide
paragraphs on my screen and provide
feedback on the thing I'm doing at the
feedback on the thing I'm doing at the
moment, which will be more helpful
moment, which will be more helpful
because like comments on like how to
because like comments on like how to
improve different sections all around
improve different sections all around
know that the screen is just going to
know that the screen is just going to
distract me. I think you'd rather like
distract me. I think you'd rather like
get feedback on one section at a time.
get feedback on one section at a time.
Okay, let me let's go through this
Okay, let me let's go through this
because I forgot what the heck I wrote
because I forgot what the heck I wrote
last night on this. And uh this is where
last night on this. And uh this is where
we'll start.
we'll start.
Becoming an effective re actually easier
Becoming an effective re actually easier
than becoming a good programmer. This is
than becoming a good programmer. This is
bait, but I genuinely believe that this
bait, but I genuinely believe that this
is true. Most researchers are bad
is true. Most researchers are bad
programmers. That's not even
programmers. That's not even
controversial. Good programmers have a
controversial. Good programmers have a
much easier time becoming good
much easier time becoming good
researchers
researchers
than bad uh than bad re uh than wait
than bad uh than bad re uh than wait
than bad.
I don't know what I was smoking
I don't know what I was smoking
yesterday, but okay.
yesterday, but okay.
I've become I became a good researcher
I've become I became a good researcher
before I became a good programmer. I
before I became a good programmer. I
wish I'd put more time into becoming a
wish I'd put more time into becoming a
good good programmer first. This is all
good good programmer first. This is all
true.
This is like the most provocative thing
This is like the most provocative thing
I can say while still being
I can say while still being
uh strictly true
uh strictly true
like or strictly in accordance with what
like or strictly in accordance with what
I believe which is
I believe which is
that's where I want to be.
Okay. Okay, so this is true. This is the
Okay. Okay, so this is true. This is the
best resource that I know. It is not a
best resource that I know. It is not a
hard course.
hard course.
It's a good minimum bar because if you
It's a good minimum bar because if you
can't do this course, you kind of just
can't do this course, you kind of just
need to pick up a calculus textbook.
And believe me, my math sucks. So that's
And believe me, my math sucks. So that's
not a high bar.
I've been studying a little bit of
I've been studying a little bit of
quantum physics lately, so I've been
quantum physics lately, so I've been
trying to pick back up some math, but
okay. So, I still believe that this is
okay. So, I still believe that this is
true like
courses have very quickly diminishing
courses have very quickly diminishing
returns especially in ML. So kind of
returns especially in ML. So kind of
take this course and you start reading
take this course and you start reading
papers.
papers.
So these are the two tips that I came up
So these are the two tips that I came up
with
with
that are the most helpful for
that are the most helpful for
understanding how to read science.
understanding how to read science.
Understanding the process by which
Understanding the process by which
science is done
and then not like trusting. These are
and then not like trusting. These are
two very good things.
I only want to do three to five I think
I only want to do three to five I think
main tips for ML because I think that's
main tips for ML because I think that's
really all you need.
What of my own experience
What of my own experience
most useful thing I can get?
got to be something about how I
how I look to evaluate like how do you
how I look to evaluate like how do you
know what to work on? I think
know what to work on? I think
the question right
do you have any questions magically
do you have any questions magically
things on how to learn ML things that
things on how to learn ML things that
are confusing
and Larry hello welcome
if you know ML what were things that
if you know ML what were things that
were confusing to
were confusing to
are learning or don't know ML like what
are learning or don't know ML like what
are things that are I mean same question
are things that are I mean same question
right what are things that are confusing
right what are things that are confusing
these are got like these have got to be
these are got like these have got to be
two of the best things I can tell you
two of the best things I can tell you
can I join Discord yeah I can jump in
can I join Discord yeah I can jump in
Discord
Discord
you're going to have to allow me to like
you're going to have to allow me to like
focus and write paragraphs when I need
focus and write paragraphs when I need
to absolutely discuss stuff in between
to absolutely discuss stuff in between
and that's open to everybody by the way
and that's open to everybody by the way
it's just discord.gg/puffer GG/puffer.
it's just discord.gg/puffer GG/puffer.
Uh you're free to just jump in here.
I think like
I still remember what it was like
I still remember what it was like
learning ML. It was hard. But the thing
learning ML. It was hard. But the thing
is the experience that I had is going to
is the experience that I had is going to
be even harder than the experience that
be even harder than the experience that
new people have today because like the
new people have today because like the
materials just sucked back then.
Not only did the material suck, but
Not only did the material suck, but
literally the technique sucked as well.
literally the technique sucked as well.
I don't even remember if we were using
I don't even remember if we were using
atom yet.
How to choose problems
or how I view progress maybe.
I don't know. I have a pretty unique way
I don't know. I have a pretty unique way
in which I
in which I
like the way that I look at research and
like the way that I look at research and
the way that I'm able to effectively
the way that I'm able to effectively
pick what to work on, I think is pretty
pick what to work on, I think is pretty
unique.
unique.
It's not the way that most other
It's not the way that most other
researchers do it.
Like these two things, I think these are
Like these two things, I think these are
very good tips.
very good tips.
Um, these are tips that
Um, these are tips that
I think many researchers could give you,
I think many researchers could give you,
but probably would be too polite to
but probably would be too polite to
because you kind of have to on the
because you kind of have to on the
scientific process and solutions.
Hey, Magic
Dirt, welcome.
Dirt, welcome.
Uh, I can't hear you.
Uh, I can't hear you.
say something.
Uh, yeah. You're just super quiet. Let
Uh, yeah. You're just super quiet. Let
me turn this up.
Say something.
I can I can I I can hear you. Okay. I
I can I can I I can hear you. Okay. I
can mostly hear you. You sound like
can mostly hear you. You sound like
you're super far away from a mic.
you're super far away from a mic.
Okay. Let me see if I can Okay, let me
Okay. Let me see if I can Okay, let me
turn you down first so that you don't
turn you down first so that you don't
blow out my eard drums.
Okay. Is it good now?
Okay. Is it good now?
Little better. Yeah. Okay. I'll just
Little better. Yeah. Okay. I'll just
I'll turn it up on my end and hopefully
I'll turn it up on my end and hopefully
let me know if you're going to like max
let me know if you're going to like max
your volume before you blow up my
your volume before you blow up my
eardrums, though. Okay. And uh I think
eardrums, though. Okay. And uh I think
Larry was here.
Larry was here.
I'm trying to remember which person
I'm trying to remember which person
Larry was. I think he was like wanting
Larry was. I think he was like wanting
to start with Puffer and already was
to start with Puffer and already was
doing RL. I'm trying to remember. I
doing RL. I'm trying to remember. I
don't know. You can jog my memory if
don't know. You can jog my memory if
you're still here.
you're still here.
Um,
yeah. Do you have uh magic or do you
yeah. Do you have uh magic or do you
have I hope I'm saying your name right.
have I hope I'm saying your name right.
Not completely butchering it by the way,
Not completely butchering it by the way,
but do you have stuff? You can say
but do you have stuff? You can say
magic. Magic. Okay.
magic. Magic. Okay.
physics grad with a few projects. Right.
physics grad with a few projects. Right.
Right. Right. Okay. Physics grad. Yeah.
Right. Right. Okay. Physics grad. Yeah.
We love I love when we have people in
We love I love when we have people in
hard sciences. Um because this is
hard sciences. Um because this is
ultimately where we want to go with
ultimately where we want to go with
Puffer,
Puffer,
not RL. We actually we have two physics
not RL. We actually we have two physics
grads around here. There's uh Tyler
grads around here. There's uh Tyler
is in the Discord and who drops in
is in the Discord and who drops in
around here as a uh he's currently a
around here as a uh he's currently a
physics postoc.
physics postoc.
Um,
yeah,
yeah,
we definitely want to do more stuff with
we definitely want to do more stuff with
hard science. Ultimately, where I want
hard science. Ultimately, where I want
to go with Puffer is optimizing like
to go with Puffer is optimizing like
complicated real world processes that
complicated real world processes that
just don't fit with LLMs and other of
just don't fit with LLMs and other of
these big models and where we can do
these big models and where we can do
like high perf and all that. Like I want
like high perf and all that. Like I want
to see if we can really push forward
to see if we can really push forward
hard science and hard tech.
LM stuff. Yeah.
LM stuff. Yeah.
And people don't really realize it. So
And people don't really realize it. So
that is my plan. And if you have ideas,
that is my plan. And if you have ideas,
I will be very happy to entertain them.
Ma, you wanted to share some of your
Ma, you wanted to share some of your
experience with uh ML. You said any
experience with uh ML. You said any
ideas for me for this article? Yeah, I
ideas for me for this article? Yeah, I
think uh before that I think if I give
think uh before that I think if I give
some
some
introduction about myself like
introduction about myself like
background that I have. Sure.
you know like I'm coming from you know
you know like I'm coming from you know
the industry I work for software
the industry I work for software
development
development
you know
you know
I mean I know programming well I know
I mean I know programming well I know
different languages JavaNet
different languages JavaNet
you know any web programming or back end
you know any web programming or back end
programming and I know that so what
programming and I know that so what
happened you know
happened you know
I have few problems by But I I actually
I have few problems by But I I actually
don't know how can I solve that using
don't know how can I solve that using
you know regular
you know regular
I mean we can we can solve a lot of
I mean we can we can solve a lot of
things using you know regular
things using you know regular
programming conditional
programming conditional
way right
way right
but you know I was interested to learn
but you know I was interested to learn
AI ML
I try to learn
I try to learn
little bit of deep learning and a basic
little bit of deep learning and a basic
projects but you know I was not kind of
projects but you know I was not kind of
uh feeling well that probably this is
uh feeling well that probably this is
not an uh exact thing that I should
not an uh exact thing that I should
learn then I found
learn then I found
which is you know I was super interested
which is you know I was super interested
like how things are work the fundamental
like how things are work the fundamental
things of ar
things of ar
so you know I I try maybe it's it's been
so you know I I try maybe it's it's been
four five months I I'm studying with
four five months I I'm studying with
and you know their different libraries
and you know their different libraries
but I was kind of stuck at some point
but I was kind of stuck at some point
yeah you know I I'm not able to solve
yeah you know I I'm not able to solve
few specific problem but I cannot even
few specific problem but I cannot even
run on my machine that's how frustrated
run on my machine that's how frustrated
I was yeah I I am aware I used I had to
I was yeah I I am aware I used I had to
deal with it for a while okay did you do
deal with it for a while okay did you do
something like 231N
something like 231N
did you do something like 231N or like a
did you do something like 231N or like a
general deep learning course or you just
general deep learning course or you just
coming into RL just without anything in
coming into RL just without anything in
AI?
AI?
No, no, I I know little bit of how how
No, no, I I know little bit of how how
to build
to build
not that deep, you know, like could you
not that deep, you know, like could you
write could you write a basic autograd?
write could you write a basic autograd?
Yes. Yeah. Okay. If you could write a
Yes. Yeah. Okay. If you could write a
basic autograd then you have at least
basic autograd then you have at least
something. Have you read like at least
something. Have you read like at least
some number of academic papers?
So I I don't have like Yeah, I did
So I I don't have like Yeah, I did
couple of them but you know I do not
couple of them but you know I do not
understand few of them are goes over my
understand few of them are goes over my
head. Okay. Yeah. So that's okay. I I
head. Okay. Yeah. So that's okay. I I
got you now. I So I didn't know where
got you now. I So I didn't know where
you are from that. Um
you are from that. Um
you do have to read papers in AI. It's
you do have to read papers in AI. It's
not just for the researcher. Like if
not just for the researcher. Like if
you're an AI you have to read some
you're an AI you have to read some
papers like at least some. Uh and it it
papers like at least some. Uh and it it
is hard and it gets easier. This is
is hard and it gets easier. This is
actually this right here is exactly
actually this right here is exactly
intended to help with this
intended to help with this
because one thing that I feel about
because one thing that I feel about
paper
paper
for some reason like
I I I do I do read couple of uh papers
I I I do I do read couple of uh papers
but I feel like
but I feel like
it's I mean on on paper for some reason
it's I mean on on paper for some reason
researcher they don't want to use simple
researcher they don't want to use simple
words and uh this is if you use
words and uh this is if you use
complicated word that means your paper
complicated word that means your paper
is great. If it is not if it if you use
is great. If it is not if it if you use
simple word that means it's a budget.
simple word that means it's a budget.
Okay. Read read have you read this
Okay. Read read have you read this
paragraph?
Oh I mean the X
Oh I mean the X
the paragraph that is on my screen right
the paragraph that is on my screen right
now. Have you read this paragraph?
Read this paragraph and see
What? Excretion.
What? Excretion.
This is uh
This is uh
this is an article, Larry.
Yeah.
Yeah.
Does Does this paragraph help Magic?
Does Does this paragraph help Magic?
We
We
It's an article, not a tweet. It's
It's an article, not a tweet. It's
helped to Yeah. help to kind of uh how
helped to Yeah. help to kind of uh how
should I prepare myself when I kind of
should I prepare myself when I kind of
approach a paper? So this article is
approach a paper? So this article is
very dense like it's not hard to read
very dense like it's not hard to read
but like everything in this article like
but like everything in this article like
it is meant to be very dense. So like if
it is meant to be very dense. So like if
you read this paragraph a couple times
you read this paragraph a couple times
and you really think about this
and you really think about this
a lot of things in science will be a lot
a lot of things in science will be a lot
clearer including how to read papers.
Yeah. No, that's that's that's actually
Yeah. No, that's that's that's actually
true. I think true for everybody. It's
true. I think true for everybody. It's
not not just wants to learn RL. It's
not not just wants to learn RL. It's
kind of a general
kind of a general
like this is a general comment on
like this is a general comment on
science but it's particularly true in
science but it's particularly true in
AI.
AI.
So it's it is literally the case that
So it's it is literally the case that
like yes very often a lot of these
like yes very often a lot of these
papers are way simpler than they appear
papers are way simpler than they appear
and that is by design.
and that is by design.
This is why it is by design
This is why it is by design
and understanding that should help you
and understanding that should help you
figure out understanding that should
figure out understanding that should
help you.
Yeah. So I was even when I open any
Yeah. So I was even when I open any
paper you know there ideal is good but
paper you know there ideal is good but
when I go you know beyond abstract I was
when I go you know beyond abstract I was
kind of a lost on every time takes time
kind of a lost on every time takes time
100%
100%
like if you look at this for instance
this the original imageet paper
this the original imageet paper
let's do like uh resnet
at GPU time. Literally, that is what
at GPU time. Literally, that is what
happens. That's actually in a nutshell
happens. That's actually in a nutshell
why RL is such a mess.
why RL is such a mess.
Like this is the ResNet paper.
This paper could probably be like two
This paper could probably be like two
pages.
This is like one of the most fundamental
This is like one of the most fundamental
papers.
But pretty much this is true of a lot of
But pretty much this is true of a lot of
things where like the key idea of this
things where like the key idea of this
is a few sentences
is a few sentences
and then like maybe like a few pages of
and then like maybe like a few pages of
experiments and details.
Instead, this is an eight-page very
Instead, this is an eight-page very
dense paper with an additional
dense paper with an additional
three pages of appendices.
We did some dot products and sketch
We did some dot products and sketch
connections. Yeah,
this is why I no longer write papers, by
this is why I no longer write papers, by
the way, because writing papers in this
the way, because writing papers in this
style is just soul crushingly painful to
style is just soul crushingly painful to
me.
me.
when I can write more way more casually,
when I can write more way more casually,
way more succinctly, and way more
way more succinctly, and way more
precisely like this.
Okay,
Okay,
let me think if there's a sentence or
let me think if there's a sentence or
two I can add to this that would help
two I can add to this that would help
you.
Um so let me let me share of experience
Um so let me let me share of experience
like
like
when I go through any
when I go through any
paper like nobody told me like how to
paper like nobody told me like how to
approach that paper what was what should
approach that paper what was what should
our expectation when I read that paper
our expectation when I read that paper
you know and the paper you mentioned is
you know and the paper you mentioned is
like those are all pre-selected or you
like those are all pre-selected or you
know for a who want to start
know for a who want to start
you know they shouldn't do all the paper
you know they shouldn't do all the paper
they should look some sort of sective
they should look some sort of sective
paper and we should kind of
paper and we should kind of
I will give you a list for reinforcement
I will give you a list for reinforcement
learning
learning
yeah yeah for summary and thing like do
yeah yeah for summary and thing like do
not expect other than these things from
not expect other than these things from
this paper just understand understand
this paper just understand understand
the fundamentals understand the
the fundamentals understand the
implementation that's it some of the so
implementation that's it some of the so
the papers that I suggest
the papers that I suggest
because it is such a short list um you
because it is such a short list um you
actually probably want to understand
actually probably want to understand
most of the things in the papers that I
most of the things in the papers that I
suggest because I don't tend to suggest
suggest because I don't tend to suggest
papers that are like super
papers that are like super
padded um but it's a very short list
padded um but it's a very short list
like for instance the open AI5 paper the
like for instance the open AI5 paper the
Dota paper is really long but like
Dota paper is really long but like
there's a huge amount of value in
there's a huge amount of value in
understanding that paper like I'd take
understanding that paper like I'd take
that I would take that paper over like a
that I would take that paper over like a
randomly selected set of a 100 RL papers
randomly selected set of a 100 RL papers
say all of which have a decent number of
say all of which have a decent number of
citations. I still take the open AI5
citations. I still take the open AI5
paper
right and so you know what approach I I
right and so you know what approach I I
took on that time when I don't
took on that time when I don't
understand so I what I did I basically
understand so I what I did I basically
upload that paper into
upload that paper into
uh Google notebook
uh Google notebook
and that's kind of simplified me the
and that's kind of simplified me the
overall expectation and so you can do
overall expectation and so you can do
that but like Google notebook book I
that but like Google notebook book I
assume is LLM.
Google notebook LLM.
Yeah. So, language models are really
Yeah. So, language models are really
stupid is the thing. And
stupid is the thing. And
you actually do need to like it's hard,
you actually do need to like it's hard,
but you do need to actually learn how to
but you do need to actually learn how to
extract truth out of papers. It is a
extract truth out of papers. It is a
very important skill. It is very hard. I
very important skill. It is very hard. I
remember this. I started doing this when
remember this. I started doing this when
I was 16. And let me tell you, it was a
I was 16. And let me tell you, it was a
hell of a lot harder back then. Um, but
hell of a lot harder back then. Um, but
you can learn it.
This is why this is why like when I said
This is why this is why like when I said
how to the point is like when I give
how to the point is like when I give
people this RL guide, I drip feed it to
people this RL guide, I drip feed it to
you. So like you don't have to do this
you. So like you don't have to do this
before you do anything in reinforcement
before you do anything in reinforcement
learning, right?
learning, right?
It is something that you do need to do
It is something that you do need to do
as you improve.
I can get people started without reading
I can get people started without reading
any papers.
But you do need to do this to improve.
But you do need to do this to improve.
Yeah, we need to have to read paper.
Yeah, we need to have to read paper.
It's it is mandatory. It is actually
It's it is mandatory. It is actually
mandatory.
mandatory.
Get this from Larry
to the block at that position.
Oh yeah, I forgot three blue, one brown.
Oh yeah, I forgot three blue, one brown.
I actually haven't seen any of his
I actually haven't seen any of his
videos really. People speak very highly
videos really. People speak very highly
of them.
Yeah, that's a very good animation.
I mean, it's cool looking. At least
this is kind of a explainer video, I
this is kind of a explainer video, I
guess. Yeah. And like this guy is this
guess. Yeah. And like this guy is this
guy is not like a shill. This guy is
guy is not like a shill. This guy is
like actually a mathematician who
like actually a mathematician who
usually gets stuff right.
I don't know. I don't really watch like
I don't know. I don't really watch like
a lot of technical content except
a lot of technical content except
courses. I don't really watch a lot of
courses. I don't really watch a lot of
technical content in my uh in my spare
technical content in my uh in my spare
time.
I most except for like course matering
facts. Oh yeah,
facts. Oh yeah,
it's it's not exactly that reason,
it's it's not exactly that reason,
Larry. It's the fact that like
distilling
distilling
uh actually distilling papers into what
uh actually distilling papers into what
matters, what matters, what is true,
matters, what matters, what is true,
what is probably true, what makes sense
what is probably true, what makes sense
but may or may not be true. Like that is
but may or may not be true. Like that is
a skill and LLMs are bad at it. Uh and
a skill and LLMs are bad at it. Uh and
if LLMs were good at it, then they could
if LLMs were good at it, then they could
probably do research on their own
probably do research on their own
effectively. Yeah, I think
effectively. Yeah, I think
Apple just uh published a paper like
Apple just uh published a paper like
about LMS and they said LM is about
about LMS and they said LM is about
illusion the model.
illusion the model.
Yeah. I So, basically, here's the thing,
Yeah. I So, basically, here's the thing,
and I will say this once because it's
and I will say this once because it's
like we banned this spot. Like,
like we banned this spot. Like,
regardless of your views on how fast you
regardless of your views on how fast you
think LLMs will improve,
think LLMs will improve,
it's kind of stupid to let it influence
it's kind of stupid to let it influence
how you learn things in any way, shape,
how you learn things in any way, shape,
or form because like
or form because like
if you think, oh, the LM is going to be
if you think, oh, the LM is going to be
able to distill the paper and like
able to distill the paper and like
suggest the topics. Oh, the LM is going
suggest the topics. Oh, the LM is going
to be able to code the experiments. Oh,
to be able to code the experiments. Oh,
the LM's going to be able to like
the LM's going to be able to like
validate results. Okay, you're just
validate results. Okay, you're just
saying that you think AGI is happening
saying that you think AGI is happening
next year and that all of like all human
next year and that all of like all human
talent will be irrelevant. So like at
talent will be irrelevant. So like at
that point, you may as well not be doing
that point, you may as well not be doing
any of this. Go lie on a beach
any of this. Go lie on a beach
somewhere, right? So like I if you
somewhere, right? So like I if you
actually think that your agency matters
actually think that your agency matters
at all, you should still learn these
at all, you should still learn these
things and you should learn them at a
things and you should learn them at a
deep level
deep level
because if you don't learn them at a
because if you don't learn them at a
deep level and you just learn things
deep level and you just learn things
surface level
surface level
then you have no you're not going to be
then you have no you're not going to be
able to provide any value compared to
able to provide any value compared to
people who actually do learn these
people who actually do learn these
things correctly.
This is how I view a lot of things.
This is how I view a lot of things.
Hey, welcome.
Hey, welcome.
Okay.
Okay.
Uh, is there something I can add on
Uh, is there something I can add on
this?
It's difficult to distill that
It's difficult to distill that
discussion a couple of sentences.
Well, I think I can make this part of
Well, I think I can make this part of
the next section. I think is going to be
What do I title this? It's kind of the
What do I title this? It's kind of the
way that I view research or the way that
way that I view research or the way that
I choose problems
I choose problems
or
how to interpret research, I guess.
How to interpret research?
Do you have any resources as you said
if someone's understand levels
if someone's understand levels
uh that is not true Almas because MIT
uh that is not true Almas because MIT
and Stanford I I did my undergrad at
and Stanford I I did my undergrad at
Stanford and I did my PhD at MIT and
Stanford and I did my PhD at MIT and
both of them have courses available
both of them have courses available
fulllength courses available for free
fulllength courses available for free
online that are the exact same courses
online that are the exact same courses
that I took
that I took
and I'm going to let you in on a little
and I'm going to let you in on a little
secret course work is like less than 10%
secret course work is like less than 10%
of my background of like what actually
of my background of like what actually
makes me able to do what I do. It's
makes me able to do what I do. It's
important and learning the fundamentals
important and learning the fundamentals
quickly uh does give you a leg up,
but it's like literally 10%.
Your time you have to put in is
Your time you have to put in is
non-negotiable. It's true. Now, Larry, I
non-negotiable. It's true. Now, Larry, I
do think that like we could
do think that like we could
substantially bring down the time that
substantially bring down the time that
is required to learn a lot of these
is required to learn a lot of these
things. Uh, it's still going to take
things. Uh, it's still going to take
time and effort, but like for instance,
time and effort, but like for instance,
I probably could have shaved five years
I probably could have shaved five years
of like five blunder years of terrible
of like five blunder years of terrible
programming off if like I actually had
programming off if like I actually had
somebody to discuss things with who was
somebody to discuss things with who was
actually good at what they did. Um,
actually good at what they did. Um,
programming is terribly taught.
programming is terribly taught.
You're taught to solve problems in just
You're taught to solve problems in just
about the worst way imaginable and it
about the worst way imaginable and it
gets ingrained very quickly and you
gets ingrained very quickly and you
actually end up having to spend years
actually end up having to spend years
unlearning stuff.
unlearning stuff.
That's my perspective.
Like overjectoriented everything is
Like overjectoriented everything is
awful, awful, awful, awful.
Literally one screw up in my systems
Literally one screw up in my systems
course. One screw-up in my systems
course. One screw-up in my systems
course um prevented me from touching
course um prevented me from touching
systems dev for almost a decade. You
systems dev for almost a decade. You
know what that screw-up was? They didn't
know what that screw-up was? They didn't
tell us what an address sanitizer was or
tell us what an address sanitizer was or
even that they existed.
even that they existed.
Writing C without an address sanitizer
Writing C without an address sanitizer
sucks. And it really put me off of
sucks. And it really put me off of
low-level programming in general.
low-level programming in general.
The rest of the courses actually were
The rest of the courses actually were
very very bad. Stanford's uh systems
very very bad. Stanford's uh systems
courses are terrible. Um
courses are terrible. Um
but like that in particular was I think
but like that in particular was I think
the worst screw up of all of them.
the worst screw up of all of them.
No Russians. Russian since I'm from past
No Russians. Russian since I'm from past
Soviet country. It's a good source. ML
Soviet country. It's a good source. ML
Yandex also working with best
Yandex also working with best
university.
university.
Well, if it's in Russian then that's not
Well, if it's in Russian then that's not
going to help too much of my audience.
going to help too much of my audience.
But if you can do that then yeah good
But if you can do that then yeah good
for you.
for you.
No, one thing I I I also have like I
No, one thing I I I also have like I
also face some of problem because you
also face some of problem because you
know when someone tried to learn or any
know when someone tried to learn or any
particular field like AI or deep
particular field like AI or deep
learning or data science or any any
learning or data science or any any
other fields
other fields
basically we think
basically we think
if I learn what I'll become
if I learn what I'll become
like let's say I'm investing 2 3 years
like let's say I'm investing 2 3 years
four years into particular technology or
four years into particular technology or
uh particular carrier what I I'll I'll
uh particular carrier what I I'll I'll
become next. So
become next. So
I I think for specific to RL we don't
I I think for specific to RL we don't
have
have
that kind of a vision in particularly
that kind of a vision in particularly
for a beginner like
for a beginner like
if I know you are trying to learn RL but
if I know you are trying to learn RL but
learning RL what you can do what you can
learning RL what you can do what you can
do with RL without you know playing
do with RL without you know playing
games.
games.
Yeah, I mean most of the tutorial or
Yeah, I mean most of the tutorial or
blogs everybody talks about the games
blogs everybody talks about the games
but nobody talks about the real world
but nobody talks about the real world
problem. Yeah. So that is also one of
problem. Yeah. So that is also one of
the main reason that people
the main reason that people
are kind of unsure like they are not
are kind of unsure like they are not
confident to be honest. Yeah. I need to
confident to be honest. Yeah. I need to
motivate this stuff to be fair. And also
motivate this stuff to be fair. And also
Almas we do have right here this quick
Almas we do have right here this quick
start guide. This thing is littered with
start guide. This thing is littered with
references. I'm working on it. The
references. I'm working on it. The
document I'm working on is a sequel to
document I'm working on is a sequel to
this, but all of this is still up to
this, but all of this is still up to
date. It's just shorter than the thing
date. It's just shorter than the thing
I'm making now. Um, this is on
I'm making now. Um, this is on
puffer.ai. It's on the blog. So, yeah,
puffer.ai. It's on the blog. So, yeah,
the thing is that like reinforcement
the thing is that like reinforcement
learning has been applied in a a few
learning has been applied in a a few
different very interesting use cases,
different very interesting use cases,
right? Um, outside of games. We use
right? Um, outside of games. We use
games a lot because they're
games a lot because they're
interpretable in research, but like RL
interpretable in research, but like RL
is also just a less mature area of AI in
is also just a less mature area of AI in
general than vision or language
general than vision or language
processing, right? Um,
processing, right? Um,
so it's like what if you understand the
so it's like what if you understand the
tech, there are things about it that
tech, there are things about it that
very clearly make it uh seem like this
very clearly make it uh seem like this
is going to be something useful down the
is going to be something useful down the
line. But a lot of the work in RL, it's
line. But a lot of the work in RL, it's
like there aren't just like applied RL
like there aren't just like applied RL
jobs like there are applied vision jobs,
jobs like there are applied vision jobs,
right? Like technically there are a few
right? Like technically there are a few
jobs that say that they're applied RL,
jobs that say that they're applied RL,
but they mostly don't work. Um,
but they mostly don't work. Um,
and that's just because it's a less
and that's just because it's a less
mature area. So
mature area. So
the bet that I have on RL right is
the bet that I have on RL right is
because very clearly it can solve hard
because very clearly it can solve hard
problems and we have seen the pace of
problems and we have seen the pace of
progress pick up in the last year with
progress pick up in the last year with
all of the stuff I'm doing with Puffer
all of the stuff I'm doing with Puffer
that this is going to be a very widely
that this is going to be a very widely
applicable
applicable
area and it's going to be applicable
area and it's going to be applicable
mostly to a lot of just unintuitive
mostly to a lot of just unintuitive
optimization processes that are
optimization processes that are
scattered all throughout different
scattered all throughout different
industries. So, it's going to have uh
industries. So, it's going to have uh
very broad reaching effects. Not going
very broad reaching effects. Not going
to be like a chatbot that you just ask
to be like a chatbot that you just ask
stuff. It's going to be like embedded
stuff. It's going to be like embedded
into a lot of hard tech.
That is uh that is my view on it. But
That is uh that is my view on it. But
like it's not here now because the thing
like it's not here now because the thing
is that it's not a mature it's not as
is that it's not a mature it's not as
mature area, right? You're looking at a
mature area, right? You're looking at a
branch that is mostly active research
branch that is mostly active research
that is being used by like largely
that is being used by like largely
technical companies that have their own
technical companies that have their own
scientists. Right.
And and if we talk about like f future
And and if we talk about like f future
opportunities like
opportunities like
well if you learn deep learning if you
well if you learn deep learning if you
learn deep learning like how long do you
learn deep learning like how long do you
think it would take me to go be like as
think it would take me to go be like as
good as at uh as good at language model
good as at uh as good at language model
work as I am now at RL? It would take me
work as I am now at RL? It would take me
a few months. It's all the same,
a few months. It's all the same,
right?
right?
I could go I can work in any area of
I could go I can work in any area of
deep learning that I like. It will take
deep learning that I like. It will take
me a few months to get up to speed.
And probably you know so what make me
And probably you know so what make me
come to in particularly why I choose if
come to in particularly why I choose if
I talk about myself why I prefer other
I talk about myself why I prefer other
industry compared to you know
industry compared to you know
Why I choose basic if if you know people
Why I choose basic if if you know people
already seeing this up until till now
already seeing this up until till now
every
every
um real world application that we have
um real world application that we have
you know maybe you know 90% or 97% or
you know maybe you know 90% or 97% or
99%. They are all rulebased application
99%. They are all rulebased application
not like a
not like a
you know
AIdriven or you know general purpose
AIdriven or you know general purpose
application. If if if we think about the
application. If if if we think about the
when we it comes to general purpose then
when we it comes to general purpose then
comes into our fundamental because
comes into our fundamental because
in real world that application needs to
in real world that application needs to
adapt and adapt such a way so that it
adapt and adapt such a way so that it
can you know be in the environment under
can you know be in the environment under
the
the
so I think uh in next 5 10 years there
so I think uh in next 5 10 years there
will be huge opportunity for you know
will be huge opportunity for you know
quite Well, another big thing is just
quite Well, another big thing is just
like
like
it's an area of deep learning that one
it's an area of deep learning that one
teaches you a lot of technical skills
teaches you a lot of technical skills
and two you can actually do it at home.
and two you can actually do it at home.
Like you can't go train GPT4 at home.
Like you can't go train GPT4 at home.
It's just not going to happen.
Uh Elma says, "Wait, by the way, it's
Uh Elma says, "Wait, by the way, it's
what PC you're using. I see you have
what PC you're using. I see you have
Linux. What about specs?" So, behind me
Linux. What about specs?" So, behind me
I have
uh like a dozen different PCs sitting on
uh like a dozen different PCs sitting on
the racks.
the racks.
Uh the one that I have right here is
Uh the one that I have right here is
just a it's a high-end Main Gear box
just a it's a high-end Main Gear box
with a 4090 in it.
If you just want something for
If you just want something for
reinforcement learning, uh, you need to
reinforcement learning, uh, you need to
get like something that has a good GPU
get like something that has a good GPU
of some variety. It doesn't need to have
of some variety. It doesn't need to have
a huge amount of memory.
a huge amount of memory.
4090s are really nice. I don't know how
4090s are really nice. I don't know how
fast a 5080 is by comparison, but some
fast a 5080 is by comparison, but some
good chip. And then you also want to
good chip. And then you also want to
ideally get you want to get a good
ideally get you want to get a good
multi-core CPU.
multi-core CPU.
Like I have a 9950X. I think that's the
Like I have a 9950X. I think that's the
best desktop chip you can get at the
best desktop chip you can get at the
moment for this. Uh the Intel chips I've
moment for this. Uh the Intel chips I've
had a bunch of problems with and they're
had a bunch of problems with and they're
architecturally a little bit wonky, but
architecturally a little bit wonky, but
they still work.
they still work.
But yeah, like you ideally you want to
But yeah, like you ideally you want to
get like a 16 core chip.
It's not free, right? Like it's just a
It's not free, right? Like it's just a
heck of a lot cheaper than everything
heck of a lot cheaper than everything
else. You can also you can rent stuff
else. You can also you can rent stuff
like if you go on like Vast
like if you go on like Vast
You can rent 4090s for 34 cents an hour,
You can rent 4090s for 34 cents an hour,
sometimes lower.
I have 1590.
I have 1590.
There's one of the machines back there
There's one of the machines back there
that's a test machine that's a 5090.
that's a test machine that's a 5090.
It's substantially faster for some
It's substantially faster for some
problems and not all that much faster
problems and not all that much faster
than a 4090 for others.
I was going to buy more and I think I
I was going to buy more and I think I
still am, but uh I did. I just bought
still am, but uh I did. I just bought
two tiny boxes. So that's plus 12 4090s.
two tiny boxes. So that's plus 12 4090s.
We now have a total of 20 4090s for
We now have a total of 20 4090s for
puffer.
anything
you think about finance world bots will
you think about finance world bots will
alter the quants I do a little bit of
alter the quants I do a little bit of
work in finance that I can't really talk
work in finance that I can't really talk
any details about um
when do you think
when do you think
and there already are bots like
and there already are bots like
everywhere in finance right just a
everywhere in finance right just a
question of like at what scale and such.
I would hope it's not just people like
I would hope it's not just people like
letting LLM run trades on the market
letting LLM run trades on the market
though. That's probably going to just
though. That's probably going to just
lose a ton of money.
Okay, I got to actually write on this,
Okay, I got to actually write on this,
right? The point of streaming this is so
right? The point of streaming this is so
that we discuss this and so that I write
that we discuss this and so that I write
it effectively. There are definitely
it effectively. There are definitely
people doing that. Yeah, but they're def
people doing that. Yeah, but they're def
like there people doing all sorts of
like there people doing all sorts of
stupid things.
I hate the idea of any human effort
I hate the idea of any human effort
being wasted on fan art. Yeah, like
being wasted on fan art. Yeah, like
there are way more interesting problems.
there are way more interesting problems.
I agree. I would like, you know, to
I agree. I would like, you know, to
solve disease and superconductivity
solve disease and superconductivity
and material science and all sorts of
and material science and all sorts of
things.
Let's let's add right here. How do I let
Let's let's add right here. How do I let
me see how I want to frame this though?
me see how I want to frame this though?
I've sort of been thinking about this
I've sort of been thinking about this
while I've been chatting. Um,
I don't want to say research taste
I don't want to say research taste
because
because
it's like the massive midwit topic on uh
it's like the massive midwit topic on uh
X at the moment
X at the moment
cuz it's not taste. That's not what it
cuz it's not taste. That's not what it
is. Not a good word for it.
It's really it's about it's building
It's really it's about it's building
intuition about research what it is.
build intuition about research. Yeah.
Let's keep going from here.
Thank you.
No, you're good. It's uh it's just like
No, you're good. It's uh it's just like
typos that happen when editing, right?
typos that happen when editing, right?
Like you changed the part of a sentence
Like you changed the part of a sentence
and now something later on that was uh
and now something later on that was uh
that was plural becomes singular, etc.,
that was plural becomes singular, etc.,
etc.
I have a pretty dumb question. Yeah.
So
So
when when should I I mean on which stage
when when should I I mean on which stage
I should see the papers beginning or
I should see the papers beginning or
after? You should probably start reading
after? You should probably start reading
them. words like you should have read a
them. words like you should have read a
few papers by the time that you finish
few papers by the time that you finish
something of the level of CS231N
something of the level of CS231N
and then pretty much as you are trying
and then pretty much as you are trying
to improve methods or as you are trying
to improve methods or as you are trying
to improve your understanding of any
to improve your understanding of any
specific area you should be reading a
specific area you should be reading a
few papers over time um
few papers over time um
it's a lot earlier than you think I
it's a lot earlier than you think I
would say like literally there were zero
would say like literally there were zero
courses in uh deep learning when I
courses in uh deep learning when I
started. So my first experience with
started. So my first experience with
deep learning at the age of 16
deep learning at the age of 16
uh was just reading papers.
uh was just reading papers.
I had like
I had like
basic I think I had like basic single
basic I think I had like basic single
variable calculus and linear algebra and
variable calculus and linear algebra and
that was it. That's all I knew and like
that was it. That's all I knew and like
basic programming. Which year it is? It
basic programming. Which year it is? It
was what?
was what?
Which year it was? Like I was like 16.
Which year it was? Like I was like 16.
That's halfway through high school.
That's halfway through high school.
2016.
2016.
Oh, which year was this? Uh, no. This
Oh, which year was this? Uh, no. This
would have been like 20 probably 2013 or
would have been like 20 probably 2013 or
14.
14.
Oh, that's that's pretty
Oh, that's that's pretty
Yeah. Yeah. I've been doing this a
Yeah. Yeah. I've been doing this a
while.
while.
How long you streaming for? I'm going to
How long you streaming for? I'm going to
go get stuck into Puffer and try out the
go get stuck into Puffer and try out the
environments
environments
probably until a bit before 6. I'm going
probably until a bit before 6. I'm going
to dinner with my family for a Fourth of
to dinner with my family for a Fourth of
July thing July thing. It's the day
July thing July thing. It's the day
after for some reason.
I need to make this paragraph good. This
I need to make this paragraph good. This
is not
I don't like the way this is going right
I don't like the way this is going right
at the moment.
Can can we um like before going into
Can can we um like before going into
like more details um can we kind of uh
like more details um can we kind of uh
generate like the steps step by step uh
generate like the steps step by step uh
you know a level category
you know a level category
let's say uh you know doing the the
let's say uh you know doing the the
course that you mentioned is let's Send
course that you mentioned is let's Send
for one step. Second is you have to read
for one step. Second is you have to read
paper. Second step. What's the third?
paper. Second step. What's the third?
What's the third?
What's the third?
Yeah, that's it. Yeah, third is you know
Yeah, that's it. Yeah, third is you know
pick a
pick a
easy to understandable.
easy to understandable.
That's it. There no more steps properly
That's it. There no more steps properly
for AI in general. That's it. There are
for AI in general. That's it. There are
no more steps. Like you do your intro
no more steps. Like you do your intro
stuff, you start reading papers and
stuff, you start reading papers and
building things and you keep reading
building things and you keep reading
papers and building things forever.
papers and building things forever.
That's it. There's no like magic third
That's it. There's no like magic third
thing. Now for reinforcement learning
thing. Now for reinforcement learning
specifically, right? Like if you want
specifically, right? Like if you want
like more details on the specific area
like more details on the specific area
of RL, then yes, that's going to be the
of RL, then yes, that's going to be the
other portion of the article. I want to
other portion of the article. I want to
finish the intro portion first, though.
finish the intro portion first, though.
I should be able to do quite quickly if
I should be able to do quite quickly if
I just like it's only a couple more
I just like it's only a couple more
paragraphs.
paragraphs.
I just actually have to
I just actually have to
Okay, let let me write my question to
Okay, let let me write my question to
you and then probably can um
you and then probably can um
those
Okay. So, I don't like this paragraph a
Okay. So, I don't like this paragraph a
ton. I think that there's
this is not telling people enough. This
this is not telling people enough. This
is like a very important topic.
I think it's fair to say I think it's
I think it's fair to say I think it's
fair to say that this is a combination
fair to say that this is a combination
of of validation
of of validation
of validating results and pattern
of validating results and pattern
matching, right?
Also some fundamentals,
knowledge of fundamentals,
knowledge of fundamentals,
pattern matching and validation.
pattern matching and validation.
Can't wait to read the whole thing. So
Can't wait to read the whole thing. So
much good stuff in there. Yeah, I'm
much good stuff in there. Yeah, I'm
working on it. Major
Um,
I have made like 15 question to you. 15
I have made like 15 question to you. 15
questions?
Yeah. Did you write up a doc or
Yeah. Did you write up a doc or
something?
something?
Yeah. Let me let me get the link. You
Yeah. Let me let me get the link. You
can link me the doc. Let me at least get
can link me the doc. Let me at least get
this paragraph done.
this paragraph done.
No, you can write you can you can see um
No, you can write you can you can see um
I I have those questions and I want to
I I have those questions and I want to
know how can Let me let me see if
know how can Let me let me see if
they're relevant. I'll look at them now
they're relevant. I'll look at them now
and if not I'll look at them after this
and if not I'll look at them after this
paragraph.
paragraph.
Okay, you can I can I'll post them
Okay, you can I can I'll post them
in general.
Where did you link these
in general?
Okay. Yeah. So, you're this is all RL
Okay. Yeah. So, you're this is all RL
specific.
specific.
So let me finish this first.
So let me finish this first.
We'll ask for this.
Actually I depending on how long this
Actually I depending on how long this
gets I could release it as two articles.
gets I could release it as two articles.
That might be better.
Playing halfway.
This is like an important point.
This is like an important point.
Like literally if you if you have too
Like literally if you if you have too
much respect
much respect
for the scientific process, you cannot
for the scientific process, you cannot
be an effective researcher because you
be an effective researcher because you
will simply assume that things are true
will simply assume that things are true
because they're published when they're
because they're published when they're
not.
All these mess
ram reels of metal.
That's what the scientific method is.
That's what the scientific method is.
So it depends because here's the thing,
So it depends because here's the thing,
Larry, right? like
Larry, right? like
there's a peer review process, right?
there's a peer review process, right?
Yes, the scientific method itself is
Yes, the scientific method itself is
about asking questions of things. But
about asking questions of things. But
the thing is
the thing is
like
like
if that's all it is, then like why is
if that's all it is, then like why is
there a peer review process, right? Why
there a peer review process, right? Why
like the point of the peer review
like the point of the peer review
process is to ascertain that the thing
process is to ascertain that the thing
being submitted for publication is
being submitted for publication is
actually correct.
actually correct.
which then creates this impression that
which then creates this impression that
if something is published, it's probably
if something is published, it's probably
correct and it's not.
See,
See,
so yeah, trust the science is the least
so yeah, trust the science is the least
scientific thing you can possibly say.
scientific thing you can possibly say.
But the thing is the institutions are
But the thing is the institutions are
set up in such a way that it suggests
set up in such a way that it suggests
that publications like have already been
that publications like have already been
reviewed by people smarter than you,
reviewed by people smarter than you,
especially when you're in a new area,
especially when you're in a new area,
right? Like, oh, this has already been
right? Like, oh, this has already been
reviewed by experts in this area. No,
reviewed by experts in this area. No,
man. It's been like leafed through by
man. It's been like leafed through by
some overworked grad student who's like
some overworked grad student who's like
writing some basically random comments
writing some basically random comments
and calling it a day.
Yeah, trust the science is so bad. Yes.
fundamentally not how science works.
What are you sipping on? Uh
What are you sipping on? Uh
a seltzer that is flat because
a seltzer that is flat because
apparently it was from yesterday which
apparently it was from yesterday which
is why I made a face.
I'll get more coffee in a second. I got
I'll get more coffee in a second. I got
to finish this paragraph and then my
to finish this paragraph and then my
reward is more coffee.
700 p.m.
Scotland
is 100 p.m. There.
Terrible.
Yeah.
And then they get published in nature
And then they get published in nature
and you go, "Oh, wow. What a great
and you go, "Oh, wow. What a great
thing.
actually. You know what we're going to
actually. You know what we're going to
do? I know what we're going to do.
There's way more out there than puffer
There's way more out there than puffer
and our lib.
obviously you forgot about the page.
obviously you forgot about the page.
page limits. There are usually
page limits. There are usually
appendices for that.
appendices for that.
I honestly I don't think that people
I honestly I don't think that people
drop ablations for page limits as much
drop ablations for page limits as much
as they drop them for time and GPU
as they drop them for time and GPU
constraints.
constraints.
That you'd hate it.
Why am I laughing?
Why am I laughing?
Because of this.
It is kind of like I don't know
like if you think about actually doing
like if you think about actually doing
RL research that guy you'd actually be
RL research that guy you'd actually be
kind of crazy to use anything else. Like
kind of crazy to use anything else. Like
I'm not talking about LLMs like core RL
I'm not talking about LLMs like core RL
research. You'd be kind of crazy to use
research. You'd be kind of crazy to use
anything else just because of the speed
anything else just because of the speed
difference alone.
Don't look at the appendices. Yeah,
they're actually explicitly not required
they're actually explicitly not required
to uh to look at the appendices most of
to uh to look at the appendices most of
the time.
conference has appendices.
conference has appendices.
Most of them do. I think at this point
Most of them do. I think at this point
most of them do have the appendices. It
most of them do have the appendices. It
does depend.
But like if you didn't have to write
But like if you didn't have to write
that paper the way that academic papers
that paper the way that academic papers
are supposed to be written, you actually
are supposed to be written, you actually
tried to like you could have fit a lot
tried to like you could have fit a lot
of that stuff in.
of that stuff in.
Like academic writing is super bloated
Like academic writing is super bloated
and dry and boring.
or robotics.
Okay. To be fair, I'm probably mostly
Okay. To be fair, I'm probably mostly
just thinking of Nurups because that's
just thinking of Nurups because that's
the big one that everyone submits to my
the big one that everyone submits to my
website.
Yeah. So that I mean that's more like
Yeah. So that I mean that's more like
blog post walkthrough. I think if you
blog post walkthrough. I think if you
wanted to just like put like the core
wanted to just like put like the core
ablations and like motivate like you
ablations and like motivate like you
could probably fit a lot of it. All
right, spy.
right, spy.
That's absolutely you. Totally not.
Honestly,
I know you're like you're only partially
I know you're like you're only partially
joking there. If Pokemon just ran a
joking there. If Pokemon just ran a
thousand times faster, you wouldn't have
thousand times faster, you wouldn't have
that problem.
That simple, right?
Ready
to put my Delops
to put my Delops
graphics to work.
graphics to work.
It will actually let you at least run
It will actually let you at least run
Pong with that.
just found the full RL iceberg. Yeah,
just found the full RL iceberg. Yeah,
that watch that video. That one's uh
that watch that video. That one's uh
that one took a lot of work and didn't
that one took a lot of work and didn't
get very much attention. I think it's a
get very much attention. I think it's a
a high quality thing.
Highest leverage unskilled engineer
AI research is
AI research is
five coding RL environments.
there,
there,
dude.
I mean, I would it would be a snarky
I mean, I would it would be a snarky
retweet if anything because it's an
retweet if anything because it's an
incredibly stupid take.
incredibly stupid take.
Welcome, essay.
the highest leverage thing you can do
the highest leverage thing you can do
is actually learn to code
is actually learn to code
uh
and then actually like help us build
and then actually like help us build
some RL environments and turn justice.
some RL environments and turn justice.
Is this like Who is this? Is this
Is this like Who is this? Is this
somebody I want to even
wait?
wait?
Oh, these dudes. Freaking Prime, man.
Oh, these dudes. Freaking Prime, man.
They have some good stuff and they have
They have some good stuff and they have
some abysmally stupid takes.
do that.
Where's the intro thing on puffer.ai?
Where's the intro thing on puffer.ai?
It's in the blog.
I got to fix a couple posts in here. But
I got to fix a couple posts in here. But
see, there's a quick start guide.
the RPO themselves into a
the RPO themselves into a
I thought you'd enjoy the take.
I thought you'd enjoy the take.
I don't know why. I mean, it's like
I don't know why. I mean, it's like
like literally all of my content is
like literally all of my content is
about actually understanding things
about actually understanding things
correctly.
Like you like, let me make something
Like you like, let me make something
clear. Like if you're typing things into
clear. Like if you're typing things into
if you're just basically typing
if you're just basically typing
into uh into whatever LLM in a loop
into uh into whatever LLM in a loop
without actually understanding what's
without actually understanding what's
going on, you have zero marginal value.
going on, you have zero marginal value.
Zero. Utterly worthless.
The highest leverage thing unskilled
The highest leverage thing unskilled
engineers can do is pay.
engineers can do is pay.
I mean, look,
I mean, look,
the highest leverage thing you can do
the highest leverage thing you can do
for RL is kind of just to mail me some
for RL is kind of just to mail me some
gold bars.
gold bars.
And uh I I will help solve your
And uh I I will help solve your
problems.
problems.
I will help solve your problems.
Like I'm literally making it as easy as
Like I'm literally making it as easy as
possible for new people to get good at
possible for new people to get good at
reinforcement learning. And we have a
reinforcement learning. And we have a
few people who have been puffer, but
few people who have been puffer, but
like the mainstream is still like a like
like the mainstream is still like a like
a catastrophic screw up. So for as long
a catastrophic screw up. So for as long
as people keep doing it wrong, that's
as people keep doing it wrong, that's
kind of the best thing you to get me to
kind of the best thing you to get me to
do it.
And for reference, we have set uh soda
And for reference, we have set uh soda
on like multiple different clients uh
on like multiple different clients uh
projects for 10k a month. So there you
projects for 10k a month. So there you
go. Also star puffer lip. It helps us
go. Also star puffer lip. It helps us
out a ton.
This is like a really good piece of
This is like a really good piece of
advice, but it feels generic and it
advice, but it feels generic and it
doesn't feel like the strongest thing I
doesn't feel like the strongest thing I
can tell people.
Why is X chat broken?
Why is X chat broken?
Uh, if you link stuff, it'll break. If
Uh, if you link stuff, it'll break. If
you spam messages, it'll break. If you
you spam messages, it'll break. If you
look at it the wrong way, it'll break.
It's not stop thinking just do it
It's not stop thinking just do it
sounds like a shippable product.
sounds like a shippable product.
The product that we have is service
The product that we have is service
contracts
contracts
uh as well as I mean deliverables
uh as well as I mean deliverables
contracts to be fair. But yeah, all our
contracts to be fair. But yeah, all our
stuff is free and companies can hire us
stuff is free and companies can hire us
to help with their reinforcement
to help with their reinforcement
learning efforts or to solve like
learning efforts or to solve like
problems that clearly are RL problems
problems that clearly are RL problems
for them.
for them.
They're larger though. Fix deliverables.
Why don't I like this paragraph?
Why don't I like this paragraph?
It's very good advice, but it feels
It's very good advice, but it feels
generic.
But something of this form I think is
But something of this form I think is
needed.
needed.
If I want to like think of the top three
If I want to like think of the top three
things that I can tell people on
things that I can tell people on
learning ML in general,
this is a good one.
I think it's missing.
The path to both are kind of the same.
But when you say learning research, how
But when you say learning research, how
do you do it?
Even gold bars. A male.
It's not quite that though, that guy.
It's not quite that though, that guy.
It's not just like it's not just put in
It's not just like it's not just put in
the reps.
the reps.
I'm trying to provide perspective on how
I'm trying to provide perspective on how
to approach that process to make it
to approach that process to make it
faster and make more sense.
Our alchemy
Our alchemy
turn money into
turn money into
gold is money
about your anecdotal experience instead
about your anecdotal experience instead
of some generic story.
There's only so much I can flame
There's only so much I can flame
existing researchers though because
existing researchers though because
basically the evidence that I would have
basically the evidence that I would have
to provide here
to provide here
um would basically be like how I found
um would basically be like how I found
out that X and Y researchers are frauds.
RLD no when do you realize you developed
RLD no when do you realize you developed
intuition? I mean it was a slow
intuition? I mean it was a slow
continual process right from the time I
continual process right from the time I
started reading papers
literally over a decade
You ever have an aha moment
You ever have an aha moment
in reading papers? Not really.
Are all having its own conference?
I mean, Nurups is massive. So, it's fine
I mean, Nurups is massive. So, it's fine
to have a smaller conference. I will be
to have a smaller conference. I will be
going to RLC. Hey,
I like this.
training. LM depend a lot on RL. Now
training. LM depend a lot on RL. Now
they do apparently
they do apparently
that like use a lot of RL in a specific
that like use a lot of RL in a specific
stage.
stage.
Uh yeah, mostly at the end.
Don't be afraid to be a contrarian, but
Don't be afraid to be a contrarian, but
you better know what I'm doing. I'm
you better know what I'm doing. I'm
being as contrarian as possible without
being as contrarian as possible without
saying X, Y, and Z specific research,
saying X, Y, and Z specific research,
specific incredibly wellrespected
specific incredibly wellrespected
researchers are frauds.
See, the problem is that with doing that
See, the problem is that with doing that
is that they're very damn good at it.
is that they're very damn good at it.
Um,
yeah.
yeah.
And that's not even a useful thing
And that's not even a useful thing
because that's not what I'm trying to
because that's not what I'm trying to
tell you, right?
research comes from contrarians.
research comes from contrarians.
I mean, I could write about the way that
I mean, I could write about the way that
I approach problems like that. It is
I approach problems like that. It is
pretty much I just like look for the
pretty much I just like look for the
thing that nobody else is doing.
But that's not how to learn ML, right?
When do you see RL problem and determine
When do you see RL problem and determine
it's not possible with current RL
it's not possible with current RL
research?
research?
Uh I mean some problems are just not
Uh I mean some problems are just not
formatted well for RL, right? You can
formatted well for RL, right? You can
very very easily construct problems that
very very easily construct problems that
are trivial for humans but like
are trivial for humans but like
virtually impossible for reinforcement
virtually impossible for reinforcement
learning.
learning.
Okay. So, like
literally all you'd have to do is take
literally all you'd have to do is take
an image that says like to solve this
an image that says like to solve this
problem, enter the following code and
problem, enter the following code and
put a code and then the action is
put a code and then the action is
entering the code. You're not going to
entering the code. You're not going to
solve it with RL ever.
mostly problems that rely on like baked
mostly problems that rely on like baked
in priors that are not learnable within
in priors that are not learnable within
an environment itself.
an environment itself.
How hard would it be to pre-train an LLM
How hard would it be to pre-train an LLM
with only RL? Impossible for the exact
with only RL? Impossible for the exact
same reason.
Just take the information theory
Just take the information theory
perspective on it, right? You're getting
perspective on it, right? You're getting
a bit of information per sequence
a bit of information per sequence
instead of like number of bits
instead of like number of bits
information of bits per sequence. Anyone
here play a chess? We have somebody in
here play a chess? We have somebody in
the Discord trying to uh get us a chess
the Discord trying to uh get us a chess
environment for RL. That's actually
environment for RL. That's actually
something that I wanted to do is see
something that I wanted to do is see
like how well you can do at chess with
like how well you can do at chess with
just RL and no search.
RL a little bit too damn complicated.
Usually it's because there's some form
Usually it's because there's some form
of outside knowledge
can see my DMs.
Oh, is this touring machine stuff
reward is scarce and requires complex
reward is scarce and requires complex
disc.
It's the thing with neural MMO, right,
It's the thing with neural MMO, right,
is like you almost a human doesn't have
is like you almost a human doesn't have
to actually have played it a bunch to
to actually have played it a bunch to
know how to play it because the visual
know how to play it because the visual
information is set up to be to be very
information is set up to be to be very
obvious, right?
You have to think about how how you
You have to think about how how you
would learn the problem tabularasa. How
would learn the problem tabularasa. How
would you learn the problem from
would you learn the problem from
scratch?
Okay, I'm spending way too long on this
Okay, I'm spending way too long on this
intro section and I want this to be
intro section and I want this to be
done. So, let me let me finish this
done. So, let me let me finish this
paragraph. Enough.
Okay.
Let's just do it this way.
into lunch. See you after
Yeah, this
Actually,
I can be more specific than this.
policy
is too simple to learn multiplication.
is too simple to learn multiplication.
How often do you see
How often do you see
big policy also? Not that often. We do
big policy also? Not that often. We do
have complicated problems where it makes
have complicated problems where it makes
a difference. I'm going to have to look
a difference. I'm going to have to look
more at your environment in detail. I
more at your environment in detail. I
haven't been able to do so yet though
haven't been able to do so yet though
because you actually have a fairly like
because you actually have a fairly like
sophisticated environment and it's going
sophisticated environment and it's going
to actually take me a fair bit of time
to actually take me a fair bit of time
to go through and like validate the
to go through and like validate the
method.
Okay, let me see how I like this.
So I also don't know how your data is
So I also don't know how your data is
being presented or normalized or
being presented or normalized or
anything like that. Like if you actually
anything like that. Like if you actually
trace through what has to be done to
trace through what has to be done to
solve your task and the rewards given,
solve your task and the rewards given,
does it seem like something that could
does it seem like something that could
be learned via curriculum or
be learned via curriculum or
exploration?
Okay,
Okay,
let's see if there's anything in here.
validation was close to 70.
Well, then that's
I mean then that tells you something,
I mean then that tells you something,
right?
right?
If you supervise the problem and you're
If you supervise the problem and you're
getting about the same result, that
getting about the same result, that
should tell you something. Been
should tell you something. Been
following you and watching streams for
following you and watching streams for
three months now. Stealth watching,
three months now. Stealth watching,
working my way up ML. Haven't reached RL
working my way up ML. Haven't reached RL
yet. And it's coded. Work ethic is
yet. And it's coded. Work ethic is
admirable. Oh man, this is considered
admirable. Oh man, this is considered
lazy for me this week
lazy for me this week
for these streams. You got it, man. I
for these streams. You got it, man. I
will uh I'll be releasing this guide
will uh I'll be releasing this guide
soon for beginners. you should
soon for beginners. you should
absolutely do some ML fundamentals
absolutely do some ML fundamentals
first. Um, as in the guide here, I it's
first. Um, as in the guide here, I it's
like one course worth of information, I
like one course worth of information, I
think, like one course worth of
think, like one course worth of
information in fundamentals of ML and
information in fundamentals of ML and
then you can do RL. We've literally had
then you can do RL. We've literally had
brand new programmers do like start
brand new programmers do like start
straight with reinforcement learning
straight with reinforcement learning
though. So, if that motivates you,
though. So, if that motivates you,
that's cool, too.
that's cool, too.
I generally suggest new people spend 20%
I generally suggest new people spend 20%
of their time on formal content and like
of their time on formal content and like
80% of their time building stuff to
80% of their time building stuff to
learn.
Puffer Pokemon on puffer 3 trying to see
Puffer Pokemon on puffer 3 trying to see
SPS fix compile info and state handler.
SPS fix compile info and state handler.
Cool.
there without Don't say what?
Don't say that. What?
What are you referring to, doctor? And
What are you referring to, doctor? And
one second. Let me use the restroom real
one second. Let me use the restroom real
quick.
lazy week is more
lazy week is more
Oh man, it's Yeah, if I work like a 40
Oh man, it's Yeah, if I work like a 40
or a 50 hour week, that's like pretty
or a 50 hour week, that's like pretty
lazy.
when I'm like actually well-rested and
when I'm like actually well-rested and
have like a cool project to work on, you
have like a cool project to work on, you
know, I can pull like an 80 or a 90 and
know, I can pull like an 80 or a 90 and
basically you can just solve like
basically you can just solve like
ridiculous things in like one week uh
ridiculous things in like one week uh
one productive week, but you can't do it
one productive week, but you can't do it
constantly.
Can't do it constantly.
Ironically, I'm least productive for uh
Ironically, I'm least productive for uh
conference things. Like, I have to I got
conference things. Like, I have to I got
to spend a day cleaning up and uh my
to spend a day cleaning up and uh my
camera ready for RLC. I'll probably just
camera ready for RLC. I'll probably just
do it on stream. I don't care. And it's
do it on stream. I don't care. And it's
like I'm just I don't want to do it.
like I'm just I don't want to do it.
Like mentally, I just can't force myself
Like mentally, I just can't force myself
to do boring stuff.
500 to 1k lower. Yeah. So, there's one
500 to 1k lower. Yeah. So, there's one
thing I did do that guy. Um, we did
thing I did do that guy. Um, we did
somewhat change the way vectorization
somewhat change the way vectorization
works a bit.
might want to like triple buffer instead
might want to like triple buffer instead
of double buffer if you're doing that.
Multiplication is a convolution
Multiplication is a convolution
of one multi- number
of one multi- number
over the digit dimension.
Is it
somebody will have to explain this cuz I
somebody will have to explain this cuz I
don't I don't think it is
with the digit dimension.
Don't think it is. I don't know.
Don't think it is. I don't know.
papers like RL graph
papers like RL graph
going to get the computational graph I
going to get the computational graph I
haven't seen that
point of this
huh
what's the point of
Okay, just based on this, I can tell you
Okay, just based on this, I can tell you
this is slow as hell.
So
if the point of this is to like
the heck
the heck
I don't know
digit multip phrasing is convolution
digit multip phrasing is convolution
using FFTs
using FFTs
well you can't then you have to learn
well you can't then you have to learn
the FFT
Okay, let me go through this and see
Okay, let me go through this and see
see how I like this as a intro to ML.
see how I like this as a intro to ML.
The programming one is way longer.
The programming one is way longer.
But I think honestly like
But I think honestly like
how much more advice do I have than this
how much more advice do I have than this
for
for
ML?
This is mostly it, man.
Buffer is 10% slower. So that guy you
Buffer is 10% slower. So that guy you
might have to
might have to
you might have to adjust
you might have to adjust
um the vectorization a little bit
um the vectorization a little bit
because
because
well I mean like the vectorization
well I mean like the vectorization
settings because basically
settings because basically
if it's assuming it's the environment
if it's assuming it's the environment
that is slower which you should time um
that is slower which you should time um
it's the thing is that we were doing
it's the thing is that we were doing
like a full endpool before and now we're
like a full endpool before and now we're
basically doing the zero copy mode by
basically doing the zero copy mode by
default where you get blocks you go like
default where you get blocks you go like
one block then the next block then the
one block then the next block then the
next block. So it's going to be better
next block. So it's going to be better
if you do like triple buffered instead
if you do like triple buffered instead
of double buffered for instance uh for
of double buffered for instance uh for
this setting.
Uh and also keep in mind that the
Uh and also keep in mind that the
learning should be more efficient
learning should be more efficient
because
because
you're uh you're no longer like wasting
you're uh you're no longer like wasting
time on low value samples and like
time on low value samples and like
screwing up your policy with lowv value
screwing up your policy with lowv value
samples. It should learn better.
We haven't figured out real time
We haven't figured out real time
training yet. It's not that we haven't
training yet. It's not that we haven't
figured out real time training. it's
figured out real time training. it's
that it fundamentally doesn't make sense
like at least not from a not from like a
like at least not from a not from like a
a newly instantiated model. It doesn't
a newly instantiated model. It doesn't
make sense. You're doing trajectory
make sense. You're doing trajectory
filtering in default puffer all. Yes, we
filtering in default puffer all. Yes, we
are doing trajectory filtering by
are doing trajectory filtering by
default. We're doing puffer advantage by
default. We're doing puffer advantage by
default. We are doing muon by default.
default. We are doing muon by default.
All the advancements are just in there
All the advancements are just in there
like by default for you to use.
Let's go through this and see if this
Let's go through this and see if this
makes sense. Still using Adam. Stop that
makes sense. Still using Adam. Stop that
Better. You're like, you're
Better. You're like, you're
trolling if you're using Adam.
You're straight trolling. That was like
You're straight trolling. That was like
one of the biggest advancements.
hidden config still all over the place.
hidden config still all over the place.
What do you mean hidden config still all
What do you mean hidden config still all
over the place? There's one there's like
over the place? There's one there's like
one config, right? Like the default
one config, right? Like the default
config just has all the parameters
config just has all the parameters
and d-help will list all of them.
I have to read your code to understand
I have to read your code to understand
the config.
By read the code, do you mean read the
By read the code, do you mean read the
read the config file or like the names
read the config file or like the names
are not explicit
I haven't ported to your config style.
I haven't ported to your config style.
I'm still using my own.
I'm still using my own.
I had to dig through puffer to
I had to dig through puffer to
understand the atom config.
So, you do have to read the any files
So, you do have to read the any files
and um I mean it's
you are sort of meant to just use the
you are sort of meant to just use the
any files. You can load stuff into a
any files. You can load stuff into a
dictionary if you really want to, but
dictionary if you really want to, but
then that's kind of like on you. Um
then that's kind of like on you. Um
again, like do you need
again, like do you need
are you looking for more than a list of
are you looking for more than a list of
names? Because like the atom parameters
names? Because like the atom parameters
are like atom beta 1 atom beta 2 atom
are like atom beta 1 atom beta 2 atom
epsilon or whatever right
epsilon or whatever right
and they are listed you don't have to
and they are listed you don't have to
read the code right like if you just run
read the code right like if you just run
d-help
d-help
it will list them for you
it will list them for you
in a way that is always up to date and
in a way that is always up to date and
that can't get out of sync.
exactly what I'm looking for. I'm not
exactly what I'm looking for. I'm not
using your version of main. I need my
using your version of main. I need my
modified personal train. Okay. So when
modified personal train. Okay. So when
you pip install it, you should still get
you pip install it, you should still get
the puffer trainer and that help will
the puffer trainer and that help will
still tell you what's in there
still tell you what's in there
and just run like puffer train puffer
and just run like puffer train puffer
breakout for instance
breakout for instance
d-help.
Why do we live when there's a star?
Why do we live when there's a star?
I managed to miss some things. I come
I managed to miss some things. I come
from neuroscience background and
from neuroscience background and
real-time learning sounds like a
real-time learning sounds like a
necessity actually training like the
necessity actually training like the
brain. So, okay, let me explain this
brain. So, okay, let me explain this
real quick. So, the reason this doesn't
real quick. So, the reason this doesn't
make sense is that the human brain is
make sense is that the human brain is
not an untrained neural network, right?
not an untrained neural network, right?
The human brain has a ton of priors
The human brain has a ton of priors
baked in and a heck of a lot more of
baked in and a heck of a lot more of
them that you get uh like general priors
them that you get uh like general priors
that you get early in development,
that you get early in development,
right? So, when you when you sit down to
right? So, when you when you sit down to
try to play Breakout, for instance, you
try to play Breakout, for instance, you
already know how to play the game
already know how to play the game
without having ever played it.
without having ever played it.
It's obvious. It's designed to be
It's obvious. It's designed to be
intuitive and obvious.
intuitive and obvious.
Not obvious or intuitive to the agent.
Not obvious or intuitive to the agent.
So if you want a better analog that
So if you want a better analog that
makes it obvious that real time learning
makes it obvious that real time learning
is not possible, we can screw up all the
is not possible, we can screw up all the
assets and like make a total mess out of
assets and like make a total mess out of
the data. And heck, we don't even have
the data. And heck, we don't even have
to present it in pixels. We can just
to present it in pixels. We can just
present it to you as a block of numbers
present it to you as a block of numbers
and then you try to play the game.
and then you try to play the game.
That's how the RL agent sees it.
making more progress to ML than
making more progress to ML than
neuroscience.
neuroscience.
Yeah,
turns out it's nice when you can
turns out it's nice when you can
actually like fully observe the system
actually like fully observe the system
you're working with.
Okay, I think that this is like a good
Okay, I think that this is like a good
this is a lot of good advice here.
this is a lot of good advice here.
I don't know the extent to which
I don't know the extent to which
people will be able to internalize it
because like appreciating this stuff
because like appreciating this stuff
requires just spending a bunch of time
requires just spending a bunch of time
in research.
in research.
I think that this will help. I think
I think that this will help. I think
that if I if I have three paragraphs
that if I if I have three paragraphs
basically that all revolve around the
basically that all revolve around the
idea of
idea of
Actually,
let's just do this.
or else that it's modeled after the way
or else that it's modeled after the way
the brain works. In general, you should
the brain works. In general, you should
assume that anything in ML that is
assume that anything in ML that is
modeled off of the way the brain works
modeled off of the way the brain works
is very very loosely so and it's mostly
is very very loosely so and it's mostly
modeled off of empirical results.
Okay, I think I'm happy with this these
Okay, I think I'm happy with this these
paragraphs.
I think that this can be
don't trust
I guess look for errors
about reason.
about reason.
I think just saying look for errors.
All I have to do is swap this sentence
All I have to do is swap this sentence
down to
Let me see how this paragraph works now.
Let me see how this paragraph works now.
And if so, I think we can move on to the
And if so, I think we can move on to the
rest of this
Okay, reply to one message.
Let me see what I missed here.
Let me see what I missed here.
Tactics strategy goal
Tactics strategy goal
from bio inpired agents
from bio inpired agents
biolas existed way before I'm LML.
biolas existed way before I'm LML.
Yeah. Uh
Yeah. Uh
I just finished training. Going to just
I just finished training. Going to just
eval enjoy the stream. Thanks for great.
eval enjoy the stream. Thanks for great.
Yeah, thanks for dropping by.
Oh, hey, we have a fair few people
Oh, hey, we have a fair few people
watching this. So, I'm going to start on
watching this. So, I'm going to start on
the RL specific portion of this in just
the RL specific portion of this in just
a second here.
a second here.
So, this is what 10 pages, probably nine
So, this is what 10 pages, probably nine
with the notes at the bottom.
with the notes at the bottom.
No, like 10 pages.
Okay. So, we've got like a 10page
Okay. So, we've got like a 10page
article
article
and it's
page or two on the intro
maybe six, no, five or six on
maybe six, no, five or six on
programming.
programming.
Then it's really only like two or three
Then it's really only like two or three
pages on ML.
And I think that this is
And I think that this is
I think that this is the information I
I think that this is the information I
want to present.
I think pretty much of everything,
this is probably the most valuable
this is probably the most valuable
piece of information that I could give
piece of information that I could give
myself
myself
because like I think when I started
because like I think when I started
research
I think that I started thinking about
I think that I started thinking about
like okay you know what is here okay
like okay you know what is here okay
these are the papers that have been done
these are the papers that have been done
this is the stuff that's been done let
this is the stuff that's been done let
me pattern match and figure out what I
me pattern match and figure out what I
can do based on this but I didn't take
can do based on this but I didn't take
into account that a lot of the work is
into account that a lot of the work is
just wrong
just wrong
so you can't really make progress when
so you can't really make progress when
you hold in your head many mutually
you hold in your head many mutually
incompatible results without realizing
incompatible results without realizing
it
it
so I think that this is a fundamentally
so I think that this is a fundamentally
better way of approaching research.
better way of approaching research.
This would have been useful to me.
Hang on. Let me go check on one thing.
Hang on. Let me go check on one thing.
My parents are at the window for some
My parents are at the window for some
reason. I'll uh they're visiting. I
reason. I'll uh they're visiting. I
don't know what they're doing. I'll be
don't know what they're doing. I'll be
right back. Walk around a minute because
right back. Walk around a minute because
I just wrote a whole bunch of stuff. And
I just wrote a whole bunch of stuff. And
then we will start on the RL guide. And
then we will start on the RL guide. And
uh any feedback you guys have, any stuff
uh any feedback you guys have, any stuff
that you want to uh see included, please
that you want to uh see included, please
write it all down. Comment it here. And
write it all down. Comment it here. And
then uh this this is the reason I'm
then uh this this is the reason I'm
streaming this is so I can get feedback
streaming this is so I can get feedback
on what you guys want to see and what
on what you guys want to see and what
questions you have.
All
right.
Time to write the RL section. I want a
Time to write the RL section. I want a
puffer plushy. You and me both.
puffer plushy. You and me both.
We can get uh we can get merch once we
We can get uh we can get merch once we
get
get
I don't know nine figures of revenue or
I don't know nine figures of revenue or
some whatever.
If the puffer is successful, we can make
If the puffer is successful, we can make
puffer plushies.
Let's go grab all the content from the
Let's go grab all the content from the
RL guide.
I'm going to do a little bit of thinking
I'm going to do a little bit of thinking
out loud on this. So,
there are kind of two parts to this,
there are kind of two parts to this,
right?
Like this type of thing.
Like this type of thing.
This is the ultra practical.
This is the ultra practical.
The like ultra ultra practical
version of what I could cover here.
version of what I could cover here.
How do I implement an environment?
Designing rewards is like fair
Designing rewards is like fair
networks. How to tune it.
networks. How to tune it.
Bug hunting.
Bug hunting.
Benchmarks.
Let me look at my existing quick start
Let me look at my existing quick start
guide as a reference.
guide as a reference.
See where I want to depart from there.
So I do uh
So I do uh
what is RL
covered
covered
like a bunch of common terms.
like a bunch of common terms.
I kind of just shotgun all the terms at
I kind of just shotgun all the terms at
you
you
and I give these like hiffy this is how
and I give these like hiffy this is how
to understand this terms.
perspective.
Man, this is actually a really good
Man, this is actually a really good
guide to try to beat.
People want more than this though. So
People want more than this though. So
let me think.
think exactly how to do this.
I mean, if I think about it,
I mean, if I think about it,
I kind of just wrote something this
I kind of just wrote something this
style
style
for programming in ML, didn't I?
Like that piece that I wrote compliments
Like that piece that I wrote compliments
this piece.
Okay.
The bar is higher than I thought. I set
The bar is higher than I thought. I set
my own bar pretty high.
I have to understand better, I think,
I have to understand better, I think,
where people are getting confused and
where people are getting confused and
what the limitations are.
What have I given people here?
What have I given people here?
I've given people common terms and how
I've given people common terms and how
to think about them.
to think about them.
A lot of general perspective that's very
A lot of general perspective that's very
valuable, but it's going to be
valuable, but it's going to be
it's going to be a lot to process for
it's going to be a lot to process for
newcomers.
And then I have some general tricks.
It's the fact that this is not threaded
It's the fact that this is not threaded
cleanly enough into
cleanly enough into
like actually showing you how to build
like actually showing you how to build
stuff, right?
So,
I have this quick start guide and I have
I have this quick start guide and I have
the docs
and there's somehow there's a gap
and there's somehow there's a gap
between those two Thanks.
really
really what I've done here right
and it makes sense that I would do this
and it makes sense that I would do this
because I wrote the other one so like
because I wrote the other one so like
this is the style which I write off.
This could be an ML quick start,
This could be an ML quick start,
the programming quick start.
Yeah. So, if I think of what I've
Yeah. So, if I think of what I've
written so far is just like
terms, tips, my best general advice,
and then I think of the docs
and then I think of the docs
as taking you through how to build
as taking you through how to build
stuff.
the gap between those two things.
Yeah. Like
Yeah. Like
on one hand, you have a relatively
on one hand, you have a relatively
simple tutorial that shows you how to
simple tutorial that shows you how to
build something
a new area.
a new area.
And on the other hand, you have a lot of
And on the other hand, you have a lot of
really good general advice for the same
really good general advice for the same
area.
A lot of really good general advice for
A lot of really good general advice for
this area,
this area,
but then you don't really know how to
but then you don't really know how to
having built a simple thing. How do you
having built a simple thing. How do you
use all this advice to do much more
use all this advice to do much more
complicated stuff?
How do you do that?
Is there anything close to comparable?
I think people want
do this, do this, do this, do this, do
do this, do this, do this, do this, do
this.
Is that what people want?
They kind of want a syllabus. I guess
makes sense. learning how to like
makes sense. learning how to like
I can't really assume that people just
I can't really assume that people just
know how to teach themselves things,
know how to teach themselves things,
right? That is also
that itself is a very difficult to learn
that itself is a very difficult to learn
skill.
We're not writing a blog on how to teach
We're not writing a blog on how to teach
yourself thing. That's too meta.
I mean the the best one of the best
I mean the the best one of the best
talks I've ever seen
talks I've ever seen
was on it was on game design
was on how to build tutorials
was on how to build tutorials
and it was just a one-s sentence
and it was just a one-s sentence
explanation. It's teach gradually
explanation. It's teach gradually
through experience. It
through experience. It
teach gradually through experience.
Did he get that from somewhere?
stuff like this.
stuff like this.
This needs to exist because some of this
This needs to exist because some of this
I can't teach you. I can't teach you
I can't teach you. I can't teach you
gradually through experience because you
gradually through experience because you
don't really need to like you shouldn't
don't really need to like you shouldn't
really experience it. You kind of just
really experience it. You kind of just
need to know that it exists.
need to know that it exists.
Other things I can teach here.
I can definitely make more concrete like
I can definitely make more concrete like
the level of projects and order you
the level of projects and order you
should take them Come on.
But that's not I don't think that's
But that's not I don't think that's
enough
because the thing is like
because the thing is like
this is all
this is all
all This stuff is like supporting
all This stuff is like supporting
knowledge around fundamentals.
I kind of want to do like my own minimal
fundamental.
Reading a blog is not experienced
Reading a blog is not experienced
problem.
I could do
I could do
thing implement this thing. Implement
thing implement this thing. Implement
this thing implement this.
The problem is a lot of these things are
The problem is a lot of these things are
like I can't do PO go implement PO right
like okay see you in a
I didn't think it would be this
I didn't think it would be this
difficult actually.
I kind of figured that I would come back
I kind of figured that I would come back
to this and it would just be like kind
to this and it would just be like kind
of mediocre. This is really good
of mediocre. This is really good
content. It's the presentation of the
content. It's the presentation of the
content I think that's a problem.
I'm really having a tough time actually
I'm really having a tough time actually
figuring out how we so like so the core
figuring out how we so like so the core
advice
advice
right the core advice comes down to
right the core advice comes down to
build RL environments
spend some fraction of your time reading
spend some fraction of your time reading
papers
papers
And then here's a blog post to tell you
And then here's a blog post to tell you
how to think about a lot of the things
how to think about a lot of the things
you're building
you're building
as well as the papers you're reading.
But somehow something's getting lost in
But somehow something's getting lost in
that
if you are contributed to speedruns of a
if you are contributed to speedruns of a
few few simple environments
few few simple environments
already solved it would be helpful.
already solved it would be helpful.
Yeah, but like so how do I get from
Yeah, but like so how do I get from
there to helping people understand this
there to helping people understand this
stuff, right? Because I literally all I
stuff, right? Because I literally all I
do is I run puffer sweep
do is I run puffer sweep
on some environments and like hey look
on some environments and like hey look
now we have some parameters so that when
now we have some parameters so that when
you press train it trains fast
like how to use puffer lib basics of how
like how to use puffer lib basics of how
to use puffer lib are the docs right
to use puffer lib are the docs right
that's not how to learn reinforcement
that's not how to learn reinforcement
learning
Like the key is that Puffer Lib lets you
Like the key is that Puffer Lib lets you
actually do reinforcement learning
actually do reinforcement learning
rather quickly while you're still
rather quickly while you're still
learning some of the basics, which not a
learning some of the basics, which not a
thing that you used to be able to do.
Like you can build you can basically
Like you can build you can basically
build an environment.
You can
You can
fix like some common error classes
to get a sense for the problem.
If I view this existing thing which
If I view this existing thing which
maybe I make some improvements to this,
maybe I make some improvements to this,
right? If I view this as like the
right? If I view this as like the
general glossery
general glossery
perspective and stuff,
what does this need as a what does this
what does this need as a what does this
need for glue? Right.
Well, we could use some very small
Well, we could use some very small
amount of math
amount of math
producing
producing
policy gradients, I suppose.
what exactly you're trying to teach
what exactly you're trying to teach
people. I'm trying to do an updated uh
people. I'm trying to do an updated uh
reinforcement learning guide,
reinforcement learning guide,
the reinforcement learning as a whole.
So, what I basically have here, right,
So, what I basically have here, right,
is I have my old RL quick start guide,
is I have my old RL quick start guide,
which upon looking at the information in
which upon looking at the information in
here is very, very good and is still all
here is very, very good and is still all
up to date.
I just wrote
and this was by request because normally
and this was by request because normally
I wouldn't write something like
I wouldn't write something like
I wouldn't write stuff for the real
I wouldn't write stuff for the real
fundamentals like this but I wrote a
fundamentals like this but I wrote a
programming like guide and I wrote an ML
programming like guide and I wrote an ML
guide general ML general programming
I could have do this, understand this,
I could have do this, understand this,
right? Like do this, understand that.
right? Like do this, understand that.
So I could say
So I could say
you know make a simple environment
you know make a simple environment
understand
understand
these like these common classes of
these like these common classes of
errors. Okay read this paper understand
errors. Okay read this paper understand
this about the paper and about ML and I
this about the paper and about ML and I
could do that.
That's probably the thing that's
That's probably the thing that's
missing.
missing.
People
People
would appreciate a little step-by-step
would appreciate a little step-by-step
guide.
guide.
There is a there is a step-by-step guide
There is a there is a step-by-step guide
for a very simple environment, right?
Here's a very very simple environment
Here's a very very simple environment
written in Python.
where everything is commented
and then here's the same thing in Ced
structure of an enverse simulator.py.
Okay, so there are two different things
Okay, so there are two different things
here, right? One of these is like, hey,
here, right? One of these is like, hey,
can you make some like clearer content
can you make some like clearer content
on puffer lib?
on puffer lib?
And another one is, can we have clearer
And another one is, can we have clearer
content on RL?
But I think that the thing that's
But I think that the thing that's
probably missing here
probably missing here
is like how do I write a puffer n? It
is like how do I write a puffer n? It
should be completely obvious if you
should be completely obvious if you
already know other things in RL and the
already know other things in RL and the
thing is you don't.
So it's like for instance if you know
So it's like for instance if you know
how Jim does its environments
how Jim does its environments
which if you're in RL at all you do then
which if you're in RL at all you do then
like the puffer end format's pretty
like the puffer end format's pretty
obvious from that
obvious from that
cuz it's like just that with all the
cuz it's like just that with all the
slow parts chopped off.
It's pretty helpful, but most people
It's pretty helpful, but most people
ask,
I guess.
I guess.
Do I want to try to do this in isolation
Do I want to try to do this in isolation
though is the thing
and puffer instead of RL
then they can learn RL through puffer.
Let me think how I can do this then.
So let's say that I expand this guide.
So let's say that I expand this guide.
Okay,
Okay,
let's say that I expand this guide and I
let's say that I expand this guide and I
add it's really only a few paragraphs,
add it's really only a few paragraphs,
right? to just essentially explain some
right? to just essentially explain some
of the things that is are in the
of the things that is are in the
comments of the files on how an
comments of the files on how an
environment is structured.
The problem formulation and problem
The problem formulation and problem
solving for RL, right?
solving for RL, right?
That's different from teaching people
That's different from teaching people
puffer.
Okay. So, let's say that I update this
Okay. So, let's say that I update this
guide.
You know, I kind of like the idea of
You know, I kind of like the idea of
having a few different articles,
having a few different articles,
right, as resources and then having a
right, as resources and then having a
glue article where like this is how to
glue article where like this is how to
learn reinforcement learning. It's like
learn reinforcement learning. It's like
are you new to programming in ML? Okay,
are you new to programming in ML? Okay,
go read this article and like do this,
go read this article and like do this,
this, and this. All right. Are you new
this, and this. All right. Are you new
like cool, you've done that or you're
like cool, you've done that or you're
like you know how to program? Cool. Uh
like you know how to program? Cool. Uh
you want to like you want to learn
you want to like you want to learn
reinforcement learning. You're going to
reinforcement learning. You're going to
start by writing a very basic puffer
start by writing a very basic puffer
environment to get just a feel for
environment to get just a feel for
things. And I link you to a revised
things. And I link you to a revised
version of this article right here or
version of this article right here or
this doc right here which could be an
this doc right here which could be an
article. Okay?
And that uh and the revised version will
And that uh and the revised version will
include the things that you guys are
include the things that you guys are
asking for.
Just problem formulation plus puffer.
Just problem formulation plus puffer.
It's a lot of stuff.
I definitely want to improve this.
any plans to make it easy for people who
any plans to make it easy for people who
just want to import instead of cloning.
just want to import instead of cloning.
Not sure if it's been done yet. You can
Not sure if it's been done yet. You can
there's uh there's a demo on this as
there's uh there's a demo on this as
well.
well.
Buffer importable.
Yeah. The problem is that if you want to
Yeah. The problem is that if you want to
like make your own environment, right,
like make your own environment, right,
you have to compile it and like it's
you have to compile it and like it's
annoying as hell to compile like C
annoying as hell to compile like C
extensions for Python unless you're
extensions for Python unless you're
going to hook into the tooling of an
going to hook into the tooling of an
existing package. Puffer li.
So you can absolutely use puffer liib.
So you can absolutely use puffer liib.
You can use our trainer on other stuff,
You can use our trainer on other stuff,
but if you want to build your own
but if you want to build your own
environment, it's still easiest to clone
environment, it's still easiest to clone
it for the sole reason that you have to
it for the sole reason that you have to
like you have to compile it somehow.
Okay, let's say that I'm going to start
Okay, let's say that I'm going to start
writing a little bit on the article.
writing a little bit on the article.
I'm going to update the docs for the
I'm going to update the docs for the
tutorial to include because like the
tutorial to include because like the
thing that you're asking for for like uh
thing that you're asking for for like uh
the step function and that stuff that's
the step function and that stuff that's
like two paragraphs. I can totally add
like two paragraphs. I can totally add
that.
Okay, I actually have some good ideas
Okay, I actually have some good ideas
now on how we can do this. Use the
now on how we can do this. Use the
restroom real quick and then we will uh
restroom real quick and then we will uh
we'll do this.
Oops.
Weird Python multipprocessing seg fault
Weird Python multipprocessing seg fault
when sweeping.
when sweeping.
Uh it's possible that your environment
Uh it's possible that your environment
has a seg fault in it.
Usually it's that your that your uh your
Usually it's that your that your uh your
environment has a rare seg.
Yeah, you can compile with it's a little
Yeah, you can compile with it's a little
tricky, but you can compile with debug
tricky, but you can compile with debug
equals true. Ideally, like what you
equals true. Ideally, like what you
should do is you should try to find a
should do is you should try to find a
set of hypers or something that actually
set of hypers or something that actually
reproduces this bug. If you can get a
reproduces this bug. If you can get a
single experiment where it happens
single experiment where it happens
within a few minutes consistently,
within a few minutes consistently,
you can compile uh puffer lib with debug
you can compile uh puffer lib with debug
equals true and um you can actually get
equals true and um you can actually get
stack traces
stack traces
You can actually get where this egg
You can actually get where this egg
fault
Okay.
Okay.
Go here.
Go here.
Two billion steps. Lovely.
Okay,
take get rid of this.
take get rid of this.
Make absolutely sure this is saved
Make absolutely sure this is saved
though. Hang on.
Yes.
Okay. Now have this. Let's make sure
that we now have this.
that we now have this.
It's okay words. Good length.
Hey Spencer, we got um
Hey Spencer, we got um
we got the general purpose article. We
we got the general purpose article. We
got a very good draft of this done.
got a very good draft of this done.
This is 2k words
This is 2k words
programming and ML and I'm starting on
programming and ML and I'm starting on
the main article now. And I the hardest
the main article now. And I the hardest
thing and I spent a lot of time on this
thing and I spent a lot of time on this
is figuring out the format and like how
is figuring out the format and like how
I wanted to present information.
I wanted to present information.
I think I figured it out. Like all these
I think I figured it out. Like all these
other articles I have, they're like
other articles I have, they're like
glosseries and like tips and general
glosseries and like tips and general
advice and such. And I like I think I
advice and such. And I like I think I
what I want to do is I want to have a
what I want to do is I want to have a
main article that says do this, do this,
main article that says do this, do this,
do this, do this, do this, do this. Now
do this, do this, do this, do this. Now
you know RL and it's going to reference
you know RL and it's going to reference
all the other stuff that I've done. So,
all the other stuff that I've done. So,
I actually don't really need to rewrite
I actually don't really need to rewrite
my old RL quick start guide as much as I
my old RL quick start guide as much as I
need to reference it and get you to do
need to reference it and get you to do
things around it.
What effect does a good sweep have
What effect does a good sweep have
versus arbitrarily picking
versus arbitrarily picking
hyperparameters? Well, it depends
hyperparameters? Well, it depends
whether you want your uh your training
whether you want your uh your training
to actually work or not.
target audiences to bring in
target audiences to bring in
uh new contributors,
uh new contributors,
new just generally folks interested in
new just generally folks interested in
reinforcement learning, bigger audience
reinforcement learning, bigger audience
in general. Uh yeah, it's it's mostly
in general. Uh yeah, it's it's mostly
just to grow Puffer LIIB as a platform
just to grow Puffer LIIB as a platform
and and everything that we do.
and and everything that we do.
So hopefully these do pretty well. We'll
So hopefully these do pretty well. We'll
see. the uh the pedibyte article did
see. the uh the pedibyte article did
incredibly well and uh we got multiple
incredibly well and uh we got multiple
new leads uh out of that on the business
new leads uh out of that on the business
side as well as quite a bit of interest
side as well as quite a bit of interest
on X.
So doing some
What's a good counterpart to squared
What's a good counterpart to squared
that would be super easy for someone to
that would be super easy for someone to
build?
Not cartpole
physics.
Okay.
policy gradient blog, I believe.
Yeah. So, this has the basics already.
Yeah, this is fine.
I should maybe make one of these.
I could probably do it more simply to be
I could probably do it more simply to be
fair now.
is the RMS prop.
Oh, yeah.
A few small things are dated.
binding vest step bind vec render vec
binding vest step bind vec render vec
close. Should these always be called in
close. Should these always be called in
the class that inherits from
the class that inherits from
pufferpufferm
pufferpufferm
toc training speed up? So um those are
toc training speed up? So um those are
the hooks into the C library. You'll
the hooks into the C library. You'll
notice that there's not really any logic
notice that there's not really any logic
in the uh the Python files because the
in the uh the Python files because the
actual logic is in C.
actual logic is in C.
So you have to call the logic from C
So you have to call the logic from C
somehow.
Oh yeah, the pong thing.
You make sure that this gives them
You make sure that this gives them
enough information like the readers
enough information like the readers
enough information to like
When you make a new M, do you start with
When you make a new M, do you start with
a certain template? Dur maybe ocean/
a certain template? Dur maybe ocean/
template. Yes, that is literally what it
template. Yes, that is literally what it
is for.
Copy paste that and then just change all
Copy paste that and then just change all
the templates to your end name.
in the uh the quick start guide as well.
in the uh the quick start guide as well.
I mean, not the quick start guide,
I mean, not the quick start guide,
that's in the docs as well.
wanted reward.
thing with this. Let me see what else I
thing with this. Let me see what else I
want to give people at this stage. Uh
want to give people at this stage. Uh
before you write another environment.
before you write another environment.
Okay, actually I know what I'm going to
Okay, actually I know what I'm going to
do.
do.
I give them target or convert. Give them
I give them target or convert. Give them
target.
Well, it's 400 p.m. already.
That's okay.
I'm in a good groove now.
Yeah. So they just see a normalized
Yeah. So they just see a normalized
distance to everyone.
Where the hell do I give them reward?
Where the hell do I give them reward?
Oh, here it is. Update goals.
Okay, so resources for this one.
any other references I need to give
any other references I need to give
people at this point.
I want to give people
100 lines.
Any
other simple ones in here?
Yeah.
common screw-ups. Do I have the common
common screw-ups. Do I have the common
screw-ups in?
I'm going to just add
I'm going to just add
common screw-ups.
common screw-ups.
I'm just going to make sure I do that in
I'm just going to make sure I do that in
the blog.
right?
Yeah. I'm going to do wrong horizon to
Yeah. I'm going to do wrong horizon to
blog.
blog.
So, we'll just do do
So, we'll just do do
long horizon
long horizon
box. Uh
Where did all the tricks go?
Yeah.
PO have generalized advantage estimation
PO have generalized advantage estimation
as a description in there or is it
as a description in there or is it
separate?
separate?
Really big fan of poper. Good work.
Really big fan of poper. Good work.
Thank you very much. I'm working on a
Thank you very much. I'm working on a
guide for beginners at the moment.
guide for beginners at the moment.
More of a comprehensive reinforcement
More of a comprehensive reinforcement
learning guide.
They don't even have uh J in here, do
They don't even have uh J in here, do
they?
What software using to write this? It's
What software using to write this? It's
just an X article.
Yeah, they don't even have it in here,
Yeah, they don't even have it in here,
do they?
do they?
I got to link both papers.
really liked Lillian's blog for a
really liked Lillian's blog for a
beginner's guide to RL. Oh, yeah.
Ah,
Ah,
this is too much math.
this is too much math.
Yeah, this is way too much math for
Yeah, this is way too much math for
this.
Yeah. No, this is this is not what I
Yeah. No, this is this is not what I
would suggest. This is way way too much
would suggest. This is way way too much
math for this.
Yeah, but you don't The thing is you
Yeah, but you don't The thing is you
don't need this much
don't need this much
and this is not actually like useful
and this is not actually like useful
math. Like honestly, one of the best
math. Like honestly, one of the best
things you can do in RL is completely
things you can do in RL is completely
ignore this MDP formulation every of
ignore this MDP formulation every of
everything. It's dated and irrelevant.
everything. It's dated and irrelevant.
Bellman like kind of don't really need
Bellman like kind of don't really need
to know this up front. Honestly, the
to know this up front. Honestly, the
most important thing is
most important thing is
even covered here.
Yeah, Carpath I think Carpathy's blog is
Yeah, Carpath I think Carpathy's blog is
way better than this. But yeah, this is
way better than this. But yeah, this is
the important bit here. the policy
the important bit here. the policy
gradient theorem.
Puffernet.h looks powerful but
Puffernet.h looks powerful but
intimidating.
intimidating.
Okay, so Tim Puffernet is literally just
Okay, so Tim Puffernet is literally just
for our web demos.
for our web demos.
It's not actually used for training.
It's not actually used for training.
It's just so that we can put our tiny
It's just so that we can put our tiny
neural netset on the web because it's C.
neural netset on the web because it's C.
So it compiles to WSOM.
So it compiles to WSOM.
Uh the the blog that I'm going to
Uh the the blog that I'm going to
recommend over this is Carpathy's old um
recommend over this is Carpathy's old um
Carpathy's old policy gradient blog by
Carpathy's old policy gradient blog by
far
Pong the pixels. Yeah, I'm writing this
Pong the pixels. Yeah, I'm writing this
all up now. And by the way, this is
all up now. And by the way, this is
actually in my current guide. It's just
actually in my current guide. It's just
not in this nice form, but I'm like I'm
not in this nice form, but I'm like I'm
kind of redoing
this real?
this real?
What do you mean is this real? Mike,
What do you mean is this real? Mike,
how's it going?
how's it going?
Tell us the secret to GPT5.
Tell us the secret to GPT5.
Uh so what they did is they stuffed Sam
Uh so what they did is they stuffed Sam
Alman into a box and uh what they did is
Alman into a box and uh what they did is
they overclocked him dramatically. So
they overclocked him dramatically. So
whenever you're querying GPT5, you're
whenever you're querying GPT5, you're
actually just asking a question directly
actually just asking a question directly
to turbo mode Sam Alman and he answers
to turbo mode Sam Alman and he answers
it personally.
it personally.
Where's your current guide? It's on
Where's your current guide? It's on
puffer.ai and it's also on X.
puffer.ai and it's also on X.
We have a blog on puffer.ai. I got to
We have a blog on puffer.ai. I got to
fix the top couple articles on there. Uh
fix the top couple articles on there. Uh
some formatting issues lately, but it's
some formatting issues lately, but it's
on there. It's also an X
mainly locked in. when you're typing
mainly locked in. when you're typing
fast
fast
without smiling.
I mean, this is kind of chill day. I'm
I mean, this is kind of chill day. I'm
just writing some stuff and normally
just writing some stuff and normally
building things,
building things,
guys. Actually, oh, that was uh that was
guys. Actually, oh, that was uh that was
a different startup. Like, that wasn't a
a different startup. Like, that wasn't a
different company that was actually
different company that was actually
doing that. I think that's happened a
doing that. I think that's happened a
couple times.
That's like I think that's actually
That's like I think that's actually
happened a couple of times.
I mean it's basically like a therronos
I mean it's basically like a therronos
but for AI, right? Kind of the
but for AI, right? Kind of the
situation.
You integrate Google Analytics on Puffer
You integrate Google Analytics on Puffer
AI. I don't think I did.
AI. I don't think I did.
Can you even Can you just go to like
No, I don't think I I didn't do this on
No, I don't think I I didn't do this on
our site.
duck try to poach you? I mean, unless
duck try to poach you? I mean, unless
I've missed an email. No,
what are you linking me?
Oh,
you need because you can track user
you need because you can track user
behavior.
behavior.
Why do you like AI?
Why do you like AI?
Uh, I mean, I can build stuff that
Uh, I mean, I can build stuff that
change the world from my chair here.
change the world from my chair here.
It's pretty cool. It's like fundamental
It's pretty cool. It's like fundamental
technological advancement of many many
technological advancement of many many
things.
things.
Did skip C render in training mode? Yes.
User have hard time find docs. I don't
User have hard time find docs. I don't
think it'll actually tell you that.
I searched RL for like once yesterday
I searched RL for like once yesterday
and now this pops up. That's funny.
and now this pops up. That's funny.
I mean, it's cool to see that there's
I mean, it's cool to see that there's
that much exposure given that it's like
that much exposure given that it's like
a pretty small channel. It's a niche
a pretty small channel. It's a niche
topic, so like there's not that much
topic, so like there's not that much
content out there. But yeah, welcome.
content out there. But yeah, welcome.
I'm Joseph. I uh I stream all of my
I'm Joseph. I uh I stream all of my
research. So, you'll mostly see me
research. So, you'll mostly see me
building new algorithms, new
building new algorithms, new
environments, applying RL to new stuff,
environments, applying RL to new stuff,
all sorts of things. And then every so
all sorts of things. And then every so
often I uh write articles and things on
often I uh write articles and things on
a little bit of the educational stuff
a little bit of the educational stuff
though it's mainly research.
though it's mainly research.
Currently experimenting with a bunch of
Currently experimenting with a bunch of
RLMs. Each RM takes like 20 hours for
RLMs. Each RM takes like 20 hours for
one seed. This is why you use Puffer
one seed. This is why you use Puffer
Lib. Actually, let me just give you a
Lib. Actually, let me just give you a
quick little demo here. All right.
quick little demo here. All right.
Let me just show you why I use Puffer
Let me just show you why I use Puffer
Lib.
Okay. Puffer Eval puffer pong.
Okay. Puffer Eval puffer pong.
This is going to load up a untrained
This is going to load up a untrained
neural net. So this is a neural net that
neural net. So this is a neural net that
has not been trained. It's very bad,
has not been trained. It's very bad,
right? The blue one. It's losing. Yes.
right? The blue one. It's losing. Yes.
Okay. Puffer. Train. Puffer pong.
Do the elevator music.
Do the elevator music.
Just kidding. It's actually literally
Just kidding. It's actually literally
already done training.
I just have to give it the latest model
I just have to give it the latest model
which we just trained.
And now you're playing Pong.
That's literally all there is to it.
That's literally all there is to it.
So from uh however many hours it's
So from uh however many hours it's
taking you to literally 5 seconds.
taking you to literally 5 seconds.
What algorithm?
What algorithm?
It is an enhanced variant of PO that is
It is an enhanced variant of PO that is
the product of our own research at
the product of our own research at
Puffer.
Puffer.
How many GPUs you got? That just ran on
How many GPUs you got? That just ran on
my desktop here, which I'm also using
my desktop here, which I'm also using
for streaming. So, one
for streaming. So, one
technically like probably 08 GPUs if the
technically like probably 08 GPUs if the
is taking like 20%.
And you can see that we have like 25
And you can see that we have like 25
different environments on puffer.ai.
different environments on puffer.ai.
Not all of them train that fast, but
Not all of them train that fast, but
many of them do. How long would it take
many of them do. How long would it take
for vision based? Uh, you'd be
for vision based? Uh, you'd be
bottlenecked by the rendering
bottlenecked by the rendering
essentially. But I think that
essentially. But I think that
technically
technically
you could probably I actually we have
you could probably I actually we have
done this. I think you can do it in a
done this. I think you can do it in a
few minutes if you really optimize, but
few minutes if you really optimize, but
it's a fair bit harder.
it's a fair bit harder.
How many GPUs do you have? Well, I have
How many GPUs do you have? Well, I have
20 overall. like in the background
20 overall. like in the background
there. You can see I have a whole bunch
there. You can see I have a whole bunch
of machines set up on those racks.
of machines set up on those racks.
Hello.
Not much contents available about this
Not much contents available about this
topic. Is there any reason why is it an
topic. Is there any reason why is it an
untapped topic? Uh it's really hard and
untapped topic? Uh it's really hard and
if you like if you check some of the
if you like if you check some of the
stuff on Puffer, you'll kind of see why.
stuff on Puffer, you'll kind of see why.
But pretty much we've like right here
But pretty much we've like right here
we've made the whole field a thousand
we've made the whole field a thousand
times faster in the last year.
times faster in the last year.
For context, um my PhD is in multi-agent
For context, um my PhD is in multi-agent
reinforcement learning. I've done a lot
reinforcement learning. I've done a lot
of work on speeding up reinforcement
of work on speeding up reinforcement
learning, uh different environments,
learning, uh different environments,
different tools, things like that. And
different tools, things like that. And
it's really only been since I graduated
it's really only been since I graduated
uh that I've been able to fully build
uh that I've been able to fully build
this stuff. And I essentially like I had
this stuff. And I essentially like I had
to rewrite the entire stack of
to rewrite the entire stack of
reinforcement learning to make all this
reinforcement learning to make all this
work. And before I did that, like if you
work. And before I did that, like if you
look at any of the other libraries,
look at any of the other libraries,
everything was just really really slow.
everything was just really really slow.
It was kind of hard to get meaningful
It was kind of hard to get meaningful
results. Uh as the other fellow said
results. Uh as the other fellow said
here, it was taking like forever to do
here, it was taking like forever to do
any basic experiments.
Now you're just bragging. I mean 20 GPUs
Now you're just bragging. I mean 20 GPUs
is not a lot for research standards.
Hey, Joseph.
I'm trying to
on you.
Side of RL is a nightmare. How many
Side of RL is a nightmare. How many
seeds? How many eval? Not to mention
seeds? How many eval? Not to mention
hyper prams. We've fixed a lot of that.
hyper prams. We've fixed a lot of that.
What if I'm making a new novel algorithm
What if I'm making a new novel algorithm
and I want to benchmark against DQN on a
and I want to benchmark against DQN on a
bunch of M? How does Puffer there help
bunch of M? How does Puffer there help
there? So, have you seen Clean RL?
there? So, have you seen Clean RL?
Puffer is not that much more
Puffer is not that much more
complicated. You'd basically just take
complicated. You'd basically just take
our trainer, you'd like remove the 200
our trainer, you'd like remove the 200
lines of code that are actually PO and
lines of code that are actually PO and
you would add your algorithm there and
you would add your algorithm there and
then you would test across those two
then you would test across those two
things
in practice. So, Pufferlib doesn't work
in practice. So, Pufferlib doesn't work
like other libraries, right? There are a
like other libraries, right? There are a
lot of libraries that are devoted to
lot of libraries that are devoted to
just having all the algorithms. The
just having all the algorithms. The
thing is they're all really slow and
thing is they're all really slow and
they're all really bad. But that's not
they're all really bad. But that's not
what we do. We have our own algorithm
what we do. We have our own algorithm
that is just the fastest and the best.
that is just the fastest and the best.
And uh we like as we develop more stuff
And uh we like as we develop more stuff
on it, we test versus the old version of
on it, we test versus the old version of
that algorithm to see if things have
that algorithm to see if things have
improved.
improved.
What was your bachelor's? Computer
What was your bachelor's? Computer
science, AI, same thing. I'm mainly
science, AI, same thing. I'm mainly
using SP3 for everything. Okay, so
using SP3 for everything. Okay, so
Huffer lib is going to be both simpler
Huffer lib is going to be both simpler
and a thousand times faster.
It's like actually download it and try
It's like actually download it and try
it. You can pip install it and you can
it. You can pip install it and you can
literally confirm for yourself in like
literally confirm for yourself in like
two minutes.
Even clean RL is slow. Yes. So clean RL
Even clean RL is slow. Yes. So clean RL
is also slow. You can think of puffer
is also slow. You can think of puffer
lib as clean RL but fast while trying to
lib as clean RL but fast while trying to
keep things as simple as possible.
keep things as simple as possible.
Understanding that of course it has to
Understanding that of course it has to
be a little bit more complicated in
be a little bit more complicated in
order to make it a thousand times faster
order to make it a thousand times faster
and support all the environments and all
and support all the environments and all
that.
that.
Clean RL is awesome. Uh it's really
Clean RL is awesome. Uh it's really
really nice overall but yeah we we just
really nice overall but yeah we we just
had to make it fast is all
had to make it fast is all
your algorithm better be a good one.
your algorithm better be a good one.
I'll be experiment
SP3 has been a nightmare. My use case is
SP3 has been a nightmare. My use case is
to test my novel algorithm. Yeah. So I
to test my novel algorithm. Yeah. So I
would just like go check puffer lab,
would just like go check puffer lab,
right? Pick some environments, run
right? Pick some environments, run
baselines, and then just make a fork and
baselines, and then just make a fork and
just do your algorithm there. Like the
just do your algorithm there. Like the
code is really not that bad. Let me show
code is really not that bad. Let me show
you. It's a heck of a lot easier than
you. It's a heck of a lot easier than
SP3. I can guarantee you that.
SP3. I can guarantee you that.
Okay, this is our entire trainer. It's a
Okay, this is our entire trainer. It's a
thousand lines.
thousand lines.
Uh the only actual relevant code for
Uh the only actual relevant code for
training is like the first maybe three
training is like the first maybe three
or 400 lines.
or 400 lines.
That's pretty much it.
That's pretty much it.
This is a standard PO implementation
This is a standard PO implementation
except that we have our know our
except that we have our know our
innovations on top of it. So we've got
innovations on top of it. So we've got
this prioritize replay thing. We've got
this prioritize replay thing. We've got
custom advantage function. A few other
custom advantage function. A few other
small differences.
small differences.
And then here's our eval loop.
There's some extra lines in here because
There's some extra lines in here because
we do a bunch of profiling. You can make
we do a bunch of profiling. You can make
sure that everything is fast and like we
sure that everything is fast and like we
have some speed optimizations.
have some speed optimizations.
But
But
we really really work hard to keep it
we really really work hard to keep it
simple. And I can guarantee you 100%
simple. And I can guarantee you 100%
that you will not find anything anywhere
that you will not find anything anywhere
close to this speed uh or any like
close to this speed uh or any like
anything close to this speed that's
anything close to this speed that's
anywhere near as simple. Or heck, you
anywhere near as simple. Or heck, you
won't find anything anywhere near this
won't find anything anywhere near this
fast in general. Like this is faster
fast in general. Like this is faster
than most of the Jacks repos by a factor
than most of the Jacks repos by a factor
of three or four in literally PyTorch
of three or four in literally PyTorch
eager mode.
I mean, you can see all the different
I mean, you can see all the different
agents that we've trained on here. Like
agents that we've trained on here. Like
Breakout, this trained in 30 seconds,
Breakout, this trained in 30 seconds,
beats the game.
beats the game.
We've got Snake. This trains in like a
We've got Snake. This trains in like a
minute.
minute.
plays snake with a whole bunch of
plays snake with a whole bunch of
snakes.
snakes.
We've got drone flying. This trains in
We've got drone flying. This trains in
30 seconds.
Pretty much works out of the box as
Pretty much works out of the box as
well, which is not a thing you see in
well, which is not a thing you see in
RL.
Probably replace my algorithm with PO
Probably replace my algorithm with PO
and try to run like 100 seeds.
and try to run like 100 seeds.
Yeah. So, it's so our it's not quite PO.
Yeah. So, it's so our it's not quite PO.
Ours is better than PO. It's going to be
Ours is better than PO. It's going to be
substantially more stable.
substantially more stable.
um
um
you can absolutely do 100 seeds. We've
you can absolutely do 100 seeds. We've
actually gotten it to the point where
actually gotten it to the point where
like most of our stuff is very very
like most of our stuff is very very
consistent. There really isn't that much
consistent. There really isn't that much
per seed variance at all for almost all
per seed variance at all for almost all
the environments. And we have like
the environments. And we have like
built-in hyperprem tuning. Welcome
built-in hyperprem tuning. Welcome
Kovac.
list is impressive. Does really need a
list is impressive. Does really need a
good step function with rewards and
good step function with rewards and
puffer handles LSTM and PO? Yep.
puffer handles LSTM and PO? Yep.
And it not only handles it, it handles
And it not only handles it, it handles
it in a way that's very transparent like
it in a way that's very transparent like
the entire training core of Puffer,
the entire training core of Puffer,
right? It's about a thousand lines for
right? It's about a thousand lines for
the train file. We have some default
the train file. We have some default
models that we use. So like few hundred
models that we use. So like few hundred
lines worth of default models if you
lines worth of default models if you
want. And then there's like I think
want. And then there's like I think
maybe 500 lines of ve of relevant code
maybe 500 lines of ve of relevant code
for vectorization and that is it. That
for vectorization and that is it. That
is the entire stack. So it's like all of
is the entire stack. So it's like all of
reinforcement learning is maybe 2,000
reinforcement learning is maybe 2,000
lines.
lines.
Doesn't have to be longer.
Doesn't have to be longer.
Does Puffer support continuous action
Does Puffer support continuous action
spaces? Absolutely.
Really inspiring work. Hope to meet you
Really inspiring work. Hope to meet you
at at an AAR next year. A star.
at at an AAR next year. A star.
next year or so I will be at RLC in a
next year or so I will be at RLC in a
few weeks
few weeks
I don't know Aar
I don't know Aar
different conference I know it's a
different conference I know it's a
search algorithm there conference called
search algorithm there conference called
AAR
I do meet up with people I will be in
I do meet up with people I will be in
Palo Alto in a few weeks followed by RLC
Palo Alto in a few weeks followed by RLC
and I'll be back in Palo Alto for a
Oh, ICML.
I did I've been doing less conferences
I did I've been doing less conferences
lately. Like I don't think I'm going to
lately. Like I don't think I'm going to
do Nurups this year cuz uh last year
do Nurups this year cuz uh last year
Nurups nearly killed me.
Nurups nearly killed me.
Uh, I spent like five days in the
Uh, I spent like five days in the
hospital, lost 18 pounds with pneumonia.
hospital, lost 18 pounds with pneumonia.
I'm still not recovered from that.
I'm still not recovered from that.
Sucks.
Sucks.
Uh, so I will be considering whether I
Uh, so I will be considering whether I
do big conferences for a little bit,
do big conferences for a little bit,
but I will be at RLC.
Ow.
Ow.
just pneumonia, man. It sucks. I
just pneumonia, man. It sucks. I
was in like ludicrously good physical
was in like ludicrously good physical
shape as well.
shape as well.
Like literally, I went to that
Like literally, I went to that
conference having come off of run a 50k
conference having come off of run a 50k
and then hit a like a few weeks after
and then hit a like a few weeks after
that hit a thousand powerlifting total
that hit a thousand powerlifting total
and then after that I hit like a pretty
and then after that I hit like a pretty
decent 5k time and then it just freaking
decent 5k time and then it just freaking
Yeah, it's rough.
Yeah, it's rough.
Open review for NAS last Nurup
Open review for NAS last Nurup
submission.
submission.
Was it the Was it the neural MMO? The
Was it the Was it the neural MMO? The
300? No. What was it? Was it the puffer
300? No. What was it? Was it the puffer
lib rejected one?
lib rejected one?
Underappreciated. Yeah. Yeah. Yeah. It's
Underappreciated. Yeah. Yeah. Yeah. It's
just Academia does not appreciate this
just Academia does not appreciate this
type of stuff. It's It's very
type of stuff. It's It's very
ridiculous. But hey, it's fine. No, we
ridiculous. But hey, it's fine. No, we
will solve things. They will not.
Yeah, it sucks. And I've kind of like in
Yeah, it sucks. And I've kind of like in
trying to train back, like in the
trying to train back, like in the
process of trying to train to like get
process of trying to train to like get
my old fitness back, I've kind of gotten
my old fitness back, I've kind of gotten
a bunch of injuries. So, it's like now I
a bunch of injuries. So, it's like now I
can't even really train properly, which
can't even really train properly, which
sucks. So, I'm working on all that
sucks. So, I'm working on all that
stuff, but I definitely don't want to
stuff, but I definitely don't want to
expose myself to giant ass conference
expose myself to giant ass conference
again if I can avoid it for a little
again if I can avoid it for a little
bit.
until I hurt my shoulder a month ago. I
until I hurt my shoulder a month ago. I
had at least I'd gotten my pressing
had at least I'd gotten my pressing
strength pretty much back and uh my
strength pretty much back and uh my
deadlift is kind of closeish to back
deadlift is kind of closeish to back
where it used to be, I think. Though I
where it used to be, I think. Though I
haven't really tested a 1 RM lately. Um
haven't really tested a 1 RM lately. Um
but everything else kind of just sucks.
2:30 here in India. Catch your next
2:30 here in India. Catch your next
stream. Thank you very much for dropping
stream. Thank you very much for dropping
by. I saw a comment environment DM
by. I saw a comment environment DM
control does not support an old commit
control does not support an old commit
buried. You asked if I supported
buried. You asked if I supported
continuous action space. The answer is
continuous action space. The answer is
yes. Uh can we add deep mind control?
yes. Uh can we add deep mind control?
Yes. If you look at any of the other
Yes. If you look at any of the other
thirdparty binding files, they're like
thirdparty binding files, they're like
super short and super easy. For the most
super short and super easy. For the most
part, they kind of just work. Um, we
part, they kind of just work. Um, we
haven't used deep mind control in a
haven't used deep mind control in a
while because nobody's asked for it
while because nobody's asked for it
really. But yeah, you can absolutely do
really. But yeah, you can absolutely do
that. It's you might have to like make a
that. It's you might have to like make a
fiveline change or whatever to make sure
fiveline change or whatever to make sure
the latest version is found.
the latest version is found.
But like we support continuous actions
But like we support continuous actions
and we mostly have a bunch of bindings
and we mostly have a bunch of bindings
for thirdparty environments. It's very
for thirdparty environments. It's very
very easy to add your own third party
very easy to add your own third party
bindings for stuff we don't
like. You don't have to do anything
like. You don't have to do anything
special really to make stuff work with
special really to make stuff work with
Puffer Lib. Like we have one line
Puffer Lib. Like we have one line
puffer.
puffer.
gymnasium puffer envelope.
They're all very basic.
No support cuz yeah, that comment is
No support cuz yeah, that comment is
super old. We do have we do have
super old. We do have we do have
continuous action space support.
Yeah, we do have continuous action space
Yeah, we do have continuous action space
support and we have we have it working
support and we have we have it working
on several different environments.
Heck, I literally posted this here. I
Heck, I literally posted this here. I
posted this yesterday.
Oops.
Where is it?
Where is it?
Yeah, here you go. This is continuous
Yeah, here you go. This is continuous
action spaces.
We did this for 4th of July.
see the drone M. Oh, yeah, Finn. So, I
see the drone M. Oh, yeah, Finn. So, I
did that. I did that. Uh Finn uh Finn
did that. I did that. Uh Finn uh Finn
and Sam made the original drone M. So,
and Sam made the original drone M. So,
yeah, we have a really cool new demo for
yeah, we have a really cool new demo for
uh drones now. It does more than just
uh drones now. It does more than just
flag. Like, it can follow targets. It
flag. Like, it can follow targets. It
can do a bunch of different formations.
can do a bunch of different formations.
And I came up with some like nice
And I came up with some like nice
structured rewards for all of it as
structured rewards for all of it as
well.
Did I get a chance to look at my
Did I get a chance to look at my
question? Which one? Oh, the giant list
question? Which one? Oh, the giant list
of them. It looks like you pretty much
of them. It looks like you pretty much
want like a full guide to a ton of
want like a full guide to a ton of
stuff, right?
Yeah. So, I'm going to add some
Yeah. So, I'm going to add some
material. I'm doing both, right? I'm
material. I'm doing both, right? I'm
going to add There's a lot of material I
going to add There's a lot of material I
got to add.
Like the thing is that like
Like the thing is that like
you're basically asking a whole bunch of
you're basically asking a whole bunch of
questions on how to do stuff without
questions on how to do stuff without
asking how to understand any of the
asking how to understand any of the
fundamentals, right? I can't really like
fundamentals, right? I can't really like
I can't give you a robust template for
I can't give you a robust template for
how to do stuff that doesn't involve at
how to do stuff that doesn't involve at
least some level of understanding of the
least some level of understanding of the
fundamentals.
fundamentals.
Does that make sense?
Section of required environment fields.
Section of required environment fields.
Nice.
Nice.
Uh that's part of the template, isn't
Uh that's part of the template, isn't
it?
it?
We have it like commented like you know
We have it like commented like you know
required required like you know make
required required like you know make
sure you do this this way etc etc.
The intent is that so you can copy the
The intent is that so you can copy the
template and then when you start editing
template and then when you start editing
stuff you know what not to edit or like
stuff you know what not to edit or like
what to keep.
how to think about them and use them.
Yeah. So that's like API documentation
Yeah. So that's like API documentation
basically about how the thing works
basically about how the thing works
which we will include in the uh writing
which we will include in the uh writing
your own environment.
your own environment.
What I'm going to do is I'm going to add
What I'm going to do is I'm going to add
I'm going to add that to the docs page,
I'm going to add that to the docs page,
right? And then that's going to be one
right? And then that's going to be one
of the first things that like this sends
of the first things that like this sends
you to
build answers for all of them.
Okay. How to understand an RL problem is
Okay. How to understand an RL problem is
going to basically what I'm trying to do
going to basically what I'm trying to do
mag is I'm trying to sort of get you to
mag is I'm trying to sort of get you to
build stuff and then slowly pull in
build stuff and then slowly pull in
resources. Like here it's you're going
resources. Like here it's you're going
to build a very simple environment.
to build a very simple environment.
Okay, you're going to read some docs.
Okay, you're going to read some docs.
You're going to build a very simple
You're going to build a very simple
environment. Then you're going to read a
environment. Then you're going to read a
blog post and a couple other things and
blog post and a couple other things and
you're going to like train a different
you're going to like train a different
environment. And then you're going to
environment. And then you're going to
build something a little bit more
build something a little bit more
complex and read a little bit more,
complex and read a little bit more,
etc., etc.
etc., etc.
I've used Wi and Neptune, but compared
I've used Wi and Neptune, but compared
your work sufficiently, my intuition
your work sufficiently, my intuition
would slow and bottleneck. How do you
would slow and bottleneck. How do you
handle logging millions of steps per
handle logging millions of steps per
second? Because you don't add you don't
second? Because you don't add you don't
log every data point like you're you're
log every data point like you're you're
logging
logging
What would it even be on average? I
What would it even be on average? I
think for Breakout, you're probably
think for Breakout, you're probably
logging like one point every several
logging like one point every several
million steps.
But we handle all of that for You
logging over epochs. Uh us well it
logging over epochs. Uh us well it
depends.
depends.
It's usually you log like once every
It's usually you log like once every
maybe every few epochs I believe or it's
maybe every few epochs I believe or it's
not every few epochs. I think it's time
not every few epochs. I think it's time
based. You log a like if it's been a
based. You log a like if it's been a
certain amount of time since you logged
certain amount of time since you logged
the last point and there's data
the last point and there's data
available then you log it.
available then you log it.
But like a lot of stuff is averaged,
But like a lot of stuff is averaged,
right? you're not even going to get the
right? you're not even going to get the
million log points into the trainer to
million log points into the trainer to
then average and log to wand B. Like
then average and log to wand B. Like
there's already averaging that's
there's already averaging that's
happened before that in C.
happened before that in C.
So like there millions of log points in
So like there millions of log points in
C. They've they're aggregated literally
C. They've they're aggregated literally
as you create them in C and then the
as you create them in C and then the
compressed versions are sent up to the
compressed versions are sent up to the
main trainer and then you have to like
main trainer and then you have to like
average a relatively smaller number of
average a relatively smaller number of
points across that. So, we've kind of
points across that. So, we've kind of
done we've done efficiency at very many
done we've done efficiency at very many
different layers for you. The code's not
different layers for you. The code's not
that complicated and there's not that
that complicated and there's not that
much of it.
I don't like the sequencing of this.
Yeah, this is a huge jump to reading
Yeah, this is a huge jump to reading
your first paper here.
your first paper here.
I think you should build something.
in making
in making
successful contributing. So going
successful contributing. So going
through your docs now M will probably be
through your docs now M will probably be
an OD cyst. Do you have other M built
an OD cyst. Do you have other M built
numerical integration? You say the end
numerical integration? You say the end
will be an OD cyst. What do you mean
will be an OD cyst. What do you mean
that the environment will be an OD
that the environment will be an OD
system?
system?
Like are you trying to do something like
Like are you trying to do something like
neural odes or like what what are you
neural odes or like what what are you
doing?
is a nonlinear physics system.
is a nonlinear physics system.
So step is often integrating the OD is
So step is often integrating the OD is
an initial value problem from zero to
an initial value problem from zero to
get to the next step. Why is it
get to the next step. Why is it
integrating from zero to t? I guess you
integrating from zero to t? I guess you
mean zero to dt.
I don't know if you have a specific
I don't know if you have a specific
solver that you want to have or you just
solver that you want to have or you just
want to like implement RK4 and see um is
want to like implement RK4 and see um is
there like a basic like RK4 and C
want to implement that would actually be
want to implement that would actually be
very useful to us like if you wanted to
very useful to us like if you wanted to
actually like do something like this and
actually like do something like this and
like make it work in the context of an
like make it work in the context of an
RL environment we would be very happy
RL environment we would be very happy
with that.
with that.
We actually we really really like when
We actually we really really like when
people uh with experience in other
people uh with experience in other
domains come in and do stuff that's not
domains come in and do stuff that's not
just games. Like our goal ultimately is
just games. Like our goal ultimately is
to really advance a ton of areas of
to really advance a ton of areas of
science. We suggest games because like
science. We suggest games because like
most people that come in don't have
most people that come in don't have
experience in another branch of science
experience in another branch of science
and games are like really easily
and games are like really easily
interpretable but that is actually the
interpretable but that is actually the
highest value thing for us.
Yeah, I would just like from what I
Yeah, I would just like from what I
know, I would just do like a basic RK4.
know, I would just do like a basic RK4.
You can always do like an energy
You can always do like an energy
estimation to see if it's stable, right?
estimation to see if it's stable, right?
If you're doing like I don't know some
If you're doing like I don't know some
sort of physical system, you can just
sort of physical system, you can just
like can track energy to make sure it's
like can track energy to make sure it's
stable. Just develop the ENV as a
stable. Just develop the ENV as a
standalone in C according to our format.
standalone in C according to our format.
If you follow the guide,
If you follow the guide,
we suggest you kind of implement
we suggest you kind of implement
everything in C first, just in the way
everything in C first, just in the way
that we do it. Make sure it works as a
that we do it. Make sure it works as a
standalone like environment in C that
standalone like environment in C that
you can interact with and see the
you can interact with and see the
dynamics working. And then you just plug
dynamics working. And then you just plug
it into our RL
it into our RL
DOP
DOP
5. I don't know how good. Well, it
5. I don't know how good. Well, it
depends on your uh it depends on how
depends on your uh it depends on how
many steps of integration you have to
many steps of integration you have to
take, right?
take, right?
RK4 is super fast, isn't it?
RK4 is super fast, isn't it?
Okay.
Okay.
It depends how many steps you have to
It depends how many steps you have to
take, doesn't it?
What's the complexity of Dockery 5?
Here's Dockery. C.
Here's Dockery. C.
Uh, this is gigantic, though. It really
Uh, this is gigantic, though. It really
shouldn't be this long for an
shouldn't be this long for an
integration method.
integration method.
Oh, it's got a whole bunch of features
Oh, it's got a whole bunch of features
and annoying things.
I hope it's not this fancy.
I hope it's not this fancy.
If it is, if it ends up being something
If it is, if it ends up being something
this complicated, I would just start
this complicated, I would just start
with RK4 and see if that's good enough.
RK with higher AC accuracy. Okay. Well,
RK with higher AC accuracy. Okay. Well,
I just don't know how complicated the
I just don't know how complicated the
implementation is by comparison or if it
implementation is by comparison or if it
has uh higher comp like compute
has uh higher comp like compute
complexity, right?
complexity, right?
So, the key thing to know in RL, right,
So, the key thing to know in RL, right,
is simulation speed is absolutely king.
is simulation speed is absolutely king.
So, if you can get your simulation to
So, if you can get your simulation to
run at like millions of steps per
run at like millions of steps per
second, you're usually like you're
second, you're usually like you're
golden because you can just train on
golden because you can just train on
unlimited data at that point. So, as
unlimited data at that point. So, as
long as you have a stable system that
long as you have a stable system that
runs fast, you're usually good.
I would definitely start with something
I would definitely start with something
simple, though, because as I'm writing
simple, though, because as I'm writing
in my guide right now, the price of
in my guide right now, the price of
complexity and reinforcement learning is
complexity and reinforcement learning is
very, very high. Errors are very
very, very high. Errors are very
difficult to catch because the agent
difficult to catch because the agent
can't tell you that its data is wrong,
can't tell you that its data is wrong,
right? Or that some corruption is
right? Or that some corruption is
happening
happening
and it's just going to like not behave
and it's just going to like not behave
as well as it should for some reason.
How how big is pawn?
Oh yeah, pawn.
What if you have a few different types
What if you have a few different types
of agents that need to train models for?
of agents that need to train models for?
Also, what if you want an agent to able
Also, what if you want an agent to able
to take an action every 100 steps?
to take an action every 100 steps?
Why would you do that?
So, if you have a few different types of
So, if you have a few different types of
agents that need to change, you can
agents that need to change, you can
usually just train one model. I've done
usually just train one model. I've done
this all the time, it's fine. Long as
this all the time, it's fine. Long as
you can make the obs and action spaces
you can make the obs and action spaces
match kind of fine.
match kind of fine.
Uh,
Uh,
if you want an agent to take an action
if you want an agent to take an action
every 100 steps, it's probably going to
every 100 steps, it's probably going to
be pretty slow. I don't know why you
be pretty slow. I don't know why you
would do that, but you can. It's just
would do that, but you can. It's just
that the step function takes the action
that the step function takes the action
and then it updates the end a 100 times
and then it updates the end a 100 times
in a loop, right?
You just better have fa fast dynamics if
You just better have fa fast dynamics if
you want to do that.
You're simulating an economy. We have
You're simulating an economy. We have
manufactured warehousing storefronts.
manufactured warehousing storefronts.
Manufactur just decides once to see make
RL is not a fun thing to do in a low
RL is not a fun thing to do in a low
data regime.
data regime.
So, if you're if you have a sim that
So, if you're if you have a sim that
runs really really fast,
runs really really fast,
you can do this. But if you're going to
you can do this. But if you're going to
get like if you're not going to get that
get like if you're not going to get that
much data on the like results of your
much data on the like results of your
actions and it's going to be really
actions and it's going to be really
delayed feedback at that, it's not going
delayed feedback at that, it's not going
to be a fun time.
Use RL for high data regime problems.
Use RL for high data regime problems.
And if your problem isn't high data
And if your problem isn't high data
regime, ask how you can make it such
regime, ask how you can make it such
right. Make it so.
Is it fair to say if you had a system
Is it fair to say if you had a system
where you had to control 10 gauges,
where you had to control 10 gauges,
build a model with all the gauge
build a model with all the gauge
chaining options the action space
chaining options the action space
rather than trying to make each gauge an
rather than trying to make each gauge an
agent? S
agent? S
it's just a box of 10 or a
it's just a box of 10 or a
multi-discreet with 10 options.
What's the difference between vecums and
What's the difference between vecums and
mnumms?
mnumms?
So env is in a single threat. So it's
So env is in a single threat. So it's
only this case for ocean. So only our
only this case for ocean. So only our
like RC environments do it this way. Um
like RC environments do it this way. Um
env tells you how many copies a single
env tells you how many copies a single
process is going to simulate. uh because
process is going to simulate. uh because
the individual Python class can actually
the individual Python class can actually
create like 4,000 environments or
create like 4,000 environments or
whatever sometimes. Okay. And then the
whatever sometimes. Okay. And then the
vecum m is going to tell you how many
vecum m is going to tell you how many
processes. Instead of spawning 8,000
processes. Instead of spawning 8,000
processes with one environment each,
processes with one environment each,
you're going to spawn like eight with
you're going to spawn like eight with
1024 environments each.
We have other ways of doing this as well
We have other ways of doing this as well
for like slower environments with serial
for like slower environments with serial
cuz like you can technically you can
cuz like you can technically you can
technically do the same thing a bit
technically do the same thing a bit
differently but this is the fast way of
differently but this is the fast way of
doing Yeah.
Heat.
Okay,
I will uh I think this is probably going
I will uh I think this is probably going
to be like a 10parter, like a 10
to be like a 10parter, like a 10
section.
section.
Let me just see if I can write these
Let me just see if I can write these
real quick.
real quick.
This is going to be like here like uh
This is going to be like here like uh
buffer algo article etc.
buffer algo article etc.
Then this is
PC.
It's going to be something like this, I
It's going to be something like this, I
believe.
And this is pretty well the the full
And this is pretty well the the full
path to becoming a uh a competent
path to becoming a uh a competent
researcher.
researcher.
Obviously, like you have to repeat the
Obviously, like you have to repeat the
last few of these several times,
last few of these several times,
but this is quite good, I'd say,
but this is quite good, I'd say,
overall.
overall.
Okay. Uh, it is 5th of July.
Huh. Kind of cool. So, apparently AI
Huh. Kind of cool. So, apparently AI
training computer benches are going to
training computer benches are going to
qualify as R&D. That is very nice.
That was a whole bunch of writing.
That was a whole bunch of writing.
Usually there will be experiments and
Usually there will be experiments and
research around here, but I figured that
research around here, but I figured that
I would uh work on something for you
I would uh work on something for you
guys. Need to finish this. Need to
guys. Need to finish this. Need to
update the docs, the extras that we
update the docs, the extras that we
discussed. Uh this is well on its way
discussed. Uh this is well on its way
though. I would say this is very well on
though. I would say this is very well on
its way. We'll have this. We'll have the
its way. We'll have this. We'll have the
programming and ML guide. We have all
programming and ML guide. We have all
the other articles I wrote for 30 and
the other articles I wrote for 30 and
Spencer wrote like all the different
Spencer wrote like all the different
things. We've actually we've got a
things. We've actually we've got a
pretty dang good base of content. We'll
pretty dang good base of content. We'll
just have to figure out sort of how I
just have to figure out sort of how I
want to organize it and what things are
want to organize it and what things are
going to go on the website and all that.
going to go on the website and all that.
Okay. Uh thank you for tuning in folks.
Okay. Uh thank you for tuning in folks.
I'm going to dinner.
I'm going to dinner.
You want to support all this work for
You want to support all this work for
free?
free?
Just star the repo. really helps.
Just star the repo. really helps.
Get involved by joining the Discord.
Get involved by joining the Discord.
It's free. It's just freely available.
It's free. It's just freely available.
There's no invite link. I mean, no
There's no invite link. I mean, no
invite code, just link. And follow me on
invite code, just link. And follow me on
X for more. Thank you and I will see

Kind: captions
Language: en
Hello
back live.
back live.
Happy 5th.
Hope you've all had a
Hope you've all had a
festive 4th of July.
festive 4th of July.
Pretty much just worked on some AI stuff
Pretty much just worked on some AI stuff
yesterday and then called it a uh an
yesterday and then called it a uh an
early night.
early night.
We did do one cool thing though.
Look at this.
We got the drone flag.
Go grab my chat.
Go grab my chat.
Stick it underneath the uh
camera.
Yeah, this is pretty cool. Like maybe
Yeah, this is pretty cool. Like maybe
you've seen the drone light shows where
you've seen the drone light shows where
all the drones are super coordinated and
all the drones are super coordinated and
you're like, "Ah, why do you need RL?"
you're like, "Ah, why do you need RL?"
The thing is like those drones kind of
The thing is like those drones kind of
just have to go from point to point and
just have to go from point to point and
they're routed such that they don't
they're routed such that they don't
really have to worry about collisions at
really have to worry about collisions at
all because you're just kind of like
all because you're just kind of like
rotating an object for the most part. So
rotating an object for the most part. So
nothing can collide. Uh whereas this
nothing can collide. Uh whereas this
like there's no actual path planning
like there's no actual path planning
included. the drones kind of just have
included. the drones kind of just have
to figure out how to get there from
to figure out how to get there from
whatever starting point without crashing
whatever starting point without crashing
into each other. And you can actually
into each other. And you can actually
see them trying to like get out of each
see them trying to like get out of each
other's ways. Now, this is not perfect.
other's ways. Now, this is not perfect.
You can see that there are still a few
You can see that there are still a few
places where they're a bit off, but like
places where they're a bit off, but like
this was like a two-day demo and this
this was like a two-day demo and this
just works and it trains in a couple of
just works and it trains in a couple of
minutes. They can do a lot more than
minutes. They can do a lot more than
just this as well. Uh that's not what
just this as well. Uh that's not what
we're going to be working on
we're going to be working on
for the most part today, though.
for the most part today, though.
Today the plan is going to be to work on
Today the plan is going to be to work on
my article.
So, uh, we've had just I think more than
So, uh, we've had just I think more than
anything I've done, I've had people
anything I've done, I've had people
request educational materials
request educational materials
and you know, it's not the main thing I
and you know, it's not the main thing I
do. It's actually it's really not like I
do. It's actually it's really not like I
didn't start these streams to teach
didn't start these streams to teach
people reinforcement learning and it's
people reinforcement learning and it's
actually not even my main objective now.
See, my main objective
See, my main objective
is to advance the science, to advance
is to advance the science, to advance
the field, right?
the field, right?
That's the whole shtick around here.
That's the whole shtick around here.
But it's been pretty cool to see how
But it's been pretty cool to see how
many people have gotten into
many people have gotten into
reinforcement learning because of Puffer
reinforcement learning because of Puffer
Lib. And a lot of those people have gone
Lib. And a lot of those people have gone
on to actually help us quite
on to actually help us quite
meaningfully in our research. So, I
meaningfully in our research. So, I
think uh today I'm going to spend a
think uh today I'm going to spend a
little bit of time a little bit back to
little bit of time a little bit back to
that community and uh
that community and uh
put together a decent guide. Welcome,
put together a decent guide. Welcome,
Magid.
So, this is where we are at the moment
So, this is where we are at the moment
on the guide.
on the guide.
You're at 2200 words already.
You're at 2200 words already.
I do always get a little bit nervous
I do always get a little bit nervous
when I write longer pieces of content
when I write longer pieces of content
like this just because
like very often longer stuff doesn't do
like very often longer stuff doesn't do
as well. People have very short
as well. People have very short
attention spans. But at the very least
attention spans. But at the very least
this is going to end up being a
this is going to end up being a
very complete reference
very complete reference
for a lot of people. So we finished
for a lot of people. So we finished
yesterday,
the intro programming section,
and we got pretty far through the intro
and we got pretty far through the intro
ML section.
So, I think we'll finish the intro ML
So, I think we'll finish the intro ML
section and then we'll actually start on
section and then we'll actually start on
the RL proper today. And uh we'll see
the RL proper today. And uh we'll see
how far I can get on this. And the
how far I can get on this. And the
reason I'm streaming the writing of this
reason I'm streaming the writing of this
is so that people can give suggestions
is so that people can give suggestions
on things I'm doing. Try not to derail
on things I'm doing. Try not to derail
it too much, but obviously I do want
it too much, but obviously I do want
feedback and suggestions. Uh this is on
feedback and suggestions. Uh this is on
X, but this is not published yet. Magic.
X, but this is not published yet. Magic.
I am working on
I am working on
I am working on this live. So you can
I am working on this live. So you can
see what I'm writing on my screen.
see what I'm writing on my screen.
There's not really a way to do this in
There's not really a way to do this in
the X formatter. Technically do a Google
the X formatter. Technically do a Google
doc thing, but uh it's really a lot
doc thing, but uh it's really a lot
easier to do it directly in this format.
easier to do it directly in this format.
So I don't have to redo like reformat
So I don't have to redo like reformat
the whole thing. I'm already going to
the whole thing. I'm already going to
have to do this one like that once for
have to do this one like that once for
the website. So I like realistically I'm
the website. So I like realistically I'm
not going to be working on like jumping
not going to be working on like jumping
around sections too much. So, you'll
around sections too much. So, you'll
probably be able to just see the couple
probably be able to just see the couple
paragraphs on my screen and provide
paragraphs on my screen and provide
feedback on the thing I'm doing at the
feedback on the thing I'm doing at the
moment, which will be more helpful
moment, which will be more helpful
because like comments on like how to
because like comments on like how to
improve different sections all around
improve different sections all around
know that the screen is just going to
know that the screen is just going to
distract me. I think you'd rather like
distract me. I think you'd rather like
get feedback on one section at a time.
get feedback on one section at a time.
Okay, let me let's go through this
Okay, let me let's go through this
because I forgot what the heck I wrote
because I forgot what the heck I wrote
last night on this. And uh this is where
last night on this. And uh this is where
we'll start.
we'll start.
Becoming an effective re actually easier
Becoming an effective re actually easier
than becoming a good programmer. This is
than becoming a good programmer. This is
bait, but I genuinely believe that this
bait, but I genuinely believe that this
is true. Most researchers are bad
is true. Most researchers are bad
programmers. That's not even
programmers. That's not even
controversial. Good programmers have a
controversial. Good programmers have a
much easier time becoming good
much easier time becoming good
researchers
researchers
than bad uh than bad re uh than wait
than bad uh than bad re uh than wait
than bad.
I don't know what I was smoking
I don't know what I was smoking
yesterday, but okay.
yesterday, but okay.
I've become I became a good researcher
I've become I became a good researcher
before I became a good programmer. I
before I became a good programmer. I
wish I'd put more time into becoming a
wish I'd put more time into becoming a
good good programmer first. This is all
good good programmer first. This is all
true.
This is like the most provocative thing
This is like the most provocative thing
I can say while still being
I can say while still being
uh strictly true
uh strictly true
like or strictly in accordance with what
like or strictly in accordance with what
I believe which is
I believe which is
that's where I want to be.
Okay. Okay, so this is true. This is the
Okay. Okay, so this is true. This is the
best resource that I know. It is not a
best resource that I know. It is not a
hard course.
hard course.
It's a good minimum bar because if you
It's a good minimum bar because if you
can't do this course, you kind of just
can't do this course, you kind of just
need to pick up a calculus textbook.
And believe me, my math sucks. So that's
And believe me, my math sucks. So that's
not a high bar.
I've been studying a little bit of
I've been studying a little bit of
quantum physics lately, so I've been
quantum physics lately, so I've been
trying to pick back up some math, but
okay. So, I still believe that this is
okay. So, I still believe that this is
true like
courses have very quickly diminishing
courses have very quickly diminishing
returns especially in ML. So kind of
returns especially in ML. So kind of
take this course and you start reading
take this course and you start reading
papers.
papers.
So these are the two tips that I came up
So these are the two tips that I came up
with
with
that are the most helpful for
that are the most helpful for
understanding how to read science.
understanding how to read science.
Understanding the process by which
Understanding the process by which
science is done
and then not like trusting. These are
and then not like trusting. These are
two very good things.
I only want to do three to five I think
I only want to do three to five I think
main tips for ML because I think that's
main tips for ML because I think that's
really all you need.
What of my own experience
What of my own experience
most useful thing I can get?
got to be something about how I
how I look to evaluate like how do you
how I look to evaluate like how do you
know what to work on? I think
know what to work on? I think
the question right
do you have any questions magically
do you have any questions magically
things on how to learn ML things that
things on how to learn ML things that
are confusing
and Larry hello welcome
if you know ML what were things that
if you know ML what were things that
were confusing to
were confusing to
are learning or don't know ML like what
are learning or don't know ML like what
are things that are I mean same question
are things that are I mean same question
right what are things that are confusing
right what are things that are confusing
these are got like these have got to be
these are got like these have got to be
two of the best things I can tell you
two of the best things I can tell you
can I join Discord yeah I can jump in
can I join Discord yeah I can jump in
Discord
Discord
you're going to have to allow me to like
you're going to have to allow me to like
focus and write paragraphs when I need
focus and write paragraphs when I need
to absolutely discuss stuff in between
to absolutely discuss stuff in between
and that's open to everybody by the way
and that's open to everybody by the way
it's just discord.gg/puffer GG/puffer.
it's just discord.gg/puffer GG/puffer.
Uh you're free to just jump in here.
I think like
I still remember what it was like
I still remember what it was like
learning ML. It was hard. But the thing
learning ML. It was hard. But the thing
is the experience that I had is going to
is the experience that I had is going to
be even harder than the experience that
be even harder than the experience that
new people have today because like the
new people have today because like the
materials just sucked back then.
Not only did the material suck, but
Not only did the material suck, but
literally the technique sucked as well.
literally the technique sucked as well.
I don't even remember if we were using
I don't even remember if we were using
atom yet.
How to choose problems
or how I view progress maybe.
I don't know. I have a pretty unique way
I don't know. I have a pretty unique way
in which I
in which I
like the way that I look at research and
like the way that I look at research and
the way that I'm able to effectively
the way that I'm able to effectively
pick what to work on, I think is pretty
pick what to work on, I think is pretty
unique.
unique.
It's not the way that most other
It's not the way that most other
researchers do it.
Like these two things, I think these are
Like these two things, I think these are
very good tips.
very good tips.
Um, these are tips that
Um, these are tips that
I think many researchers could give you,
I think many researchers could give you,
but probably would be too polite to
but probably would be too polite to
because you kind of have to on the
because you kind of have to on the
scientific process and solutions.
Hey, Magic
Dirt, welcome.
Dirt, welcome.
Uh, I can't hear you.
Uh, I can't hear you.
say something.
Uh, yeah. You're just super quiet. Let
Uh, yeah. You're just super quiet. Let
me turn this up.
Say something.
I can I can I I can hear you. Okay. I
I can I can I I can hear you. Okay. I
can mostly hear you. You sound like
can mostly hear you. You sound like
you're super far away from a mic.
you're super far away from a mic.
Okay. Let me see if I can Okay, let me
Okay. Let me see if I can Okay, let me
turn you down first so that you don't
turn you down first so that you don't
blow out my eard drums.
Okay. Is it good now?
Okay. Is it good now?
Little better. Yeah. Okay. I'll just
Little better. Yeah. Okay. I'll just
I'll turn it up on my end and hopefully
I'll turn it up on my end and hopefully
let me know if you're going to like max
let me know if you're going to like max
your volume before you blow up my
your volume before you blow up my
eardrums, though. Okay. And uh I think
eardrums, though. Okay. And uh I think
Larry was here.
Larry was here.
I'm trying to remember which person
I'm trying to remember which person
Larry was. I think he was like wanting
Larry was. I think he was like wanting
to start with Puffer and already was
to start with Puffer and already was
doing RL. I'm trying to remember. I
doing RL. I'm trying to remember. I
don't know. You can jog my memory if
don't know. You can jog my memory if
you're still here.
you're still here.
Um,
yeah. Do you have uh magic or do you
yeah. Do you have uh magic or do you
have I hope I'm saying your name right.
have I hope I'm saying your name right.
Not completely butchering it by the way,
Not completely butchering it by the way,
but do you have stuff? You can say
but do you have stuff? You can say
magic. Magic. Okay.
magic. Magic. Okay.
physics grad with a few projects. Right.
physics grad with a few projects. Right.
Right. Right. Okay. Physics grad. Yeah.
Right. Right. Okay. Physics grad. Yeah.
We love I love when we have people in
We love I love when we have people in
hard sciences. Um because this is
hard sciences. Um because this is
ultimately where we want to go with
ultimately where we want to go with
Puffer,
Puffer,
not RL. We actually we have two physics
not RL. We actually we have two physics
grads around here. There's uh Tyler
grads around here. There's uh Tyler
is in the Discord and who drops in
is in the Discord and who drops in
around here as a uh he's currently a
around here as a uh he's currently a
physics postoc.
physics postoc.
Um,
yeah,
yeah,
we definitely want to do more stuff with
we definitely want to do more stuff with
hard science. Ultimately, where I want
hard science. Ultimately, where I want
to go with Puffer is optimizing like
to go with Puffer is optimizing like
complicated real world processes that
complicated real world processes that
just don't fit with LLMs and other of
just don't fit with LLMs and other of
these big models and where we can do
these big models and where we can do
like high perf and all that. Like I want
like high perf and all that. Like I want
to see if we can really push forward
to see if we can really push forward
hard science and hard tech.
LM stuff. Yeah.
LM stuff. Yeah.
And people don't really realize it. So
And people don't really realize it. So
that is my plan. And if you have ideas,
that is my plan. And if you have ideas,
I will be very happy to entertain them.
Ma, you wanted to share some of your
Ma, you wanted to share some of your
experience with uh ML. You said any
experience with uh ML. You said any
ideas for me for this article? Yeah, I
ideas for me for this article? Yeah, I
think uh before that I think if I give
think uh before that I think if I give
some
some
introduction about myself like
introduction about myself like
background that I have. Sure.
you know like I'm coming from you know
you know like I'm coming from you know
the industry I work for software
the industry I work for software
development
development
you know
you know
I mean I know programming well I know
I mean I know programming well I know
different languages JavaNet
different languages JavaNet
you know any web programming or back end
you know any web programming or back end
programming and I know that so what
programming and I know that so what
happened you know
happened you know
I have few problems by But I I actually
I have few problems by But I I actually
don't know how can I solve that using
don't know how can I solve that using
you know regular
you know regular
I mean we can we can solve a lot of
I mean we can we can solve a lot of
things using you know regular
things using you know regular
programming conditional
programming conditional
way right
way right
but you know I was interested to learn
but you know I was interested to learn
AI ML
I try to learn
I try to learn
little bit of deep learning and a basic
little bit of deep learning and a basic
projects but you know I was not kind of
projects but you know I was not kind of
uh feeling well that probably this is
uh feeling well that probably this is
not an uh exact thing that I should
not an uh exact thing that I should
learn then I found
learn then I found
which is you know I was super interested
which is you know I was super interested
like how things are work the fundamental
like how things are work the fundamental
things of ar
things of ar
so you know I I try maybe it's it's been
so you know I I try maybe it's it's been
four five months I I'm studying with
four five months I I'm studying with
and you know their different libraries
and you know their different libraries
but I was kind of stuck at some point
but I was kind of stuck at some point
yeah you know I I'm not able to solve
yeah you know I I'm not able to solve
few specific problem but I cannot even
few specific problem but I cannot even
run on my machine that's how frustrated
run on my machine that's how frustrated
I was yeah I I am aware I used I had to
I was yeah I I am aware I used I had to
deal with it for a while okay did you do
deal with it for a while okay did you do
something like 231N
something like 231N
did you do something like 231N or like a
did you do something like 231N or like a
general deep learning course or you just
general deep learning course or you just
coming into RL just without anything in
coming into RL just without anything in
AI?
AI?
No, no, I I know little bit of how how
No, no, I I know little bit of how how
to build
to build
not that deep, you know, like could you
not that deep, you know, like could you
write could you write a basic autograd?
write could you write a basic autograd?
Yes. Yeah. Okay. If you could write a
Yes. Yeah. Okay. If you could write a
basic autograd then you have at least
basic autograd then you have at least
something. Have you read like at least
something. Have you read like at least
some number of academic papers?
So I I don't have like Yeah, I did
So I I don't have like Yeah, I did
couple of them but you know I do not
couple of them but you know I do not
understand few of them are goes over my
understand few of them are goes over my
head. Okay. Yeah. So that's okay. I I
head. Okay. Yeah. So that's okay. I I
got you now. I So I didn't know where
got you now. I So I didn't know where
you are from that. Um
you are from that. Um
you do have to read papers in AI. It's
you do have to read papers in AI. It's
not just for the researcher. Like if
not just for the researcher. Like if
you're an AI you have to read some
you're an AI you have to read some
papers like at least some. Uh and it it
papers like at least some. Uh and it it
is hard and it gets easier. This is
is hard and it gets easier. This is
actually this right here is exactly
actually this right here is exactly
intended to help with this
intended to help with this
because one thing that I feel about
because one thing that I feel about
paper
paper
for some reason like
I I I do I do read couple of uh papers
I I I do I do read couple of uh papers
but I feel like
but I feel like
it's I mean on on paper for some reason
it's I mean on on paper for some reason
researcher they don't want to use simple
researcher they don't want to use simple
words and uh this is if you use
words and uh this is if you use
complicated word that means your paper
complicated word that means your paper
is great. If it is not if it if you use
is great. If it is not if it if you use
simple word that means it's a budget.
simple word that means it's a budget.
Okay. Read read have you read this
Okay. Read read have you read this
paragraph?
Oh I mean the X
Oh I mean the X
the paragraph that is on my screen right
the paragraph that is on my screen right
now. Have you read this paragraph?
Read this paragraph and see
What? Excretion.
What? Excretion.
This is uh
This is uh
this is an article, Larry.
Yeah.
Yeah.
Does Does this paragraph help Magic?
Does Does this paragraph help Magic?
We
We
It's an article, not a tweet. It's
It's an article, not a tweet. It's
helped to Yeah. help to kind of uh how
helped to Yeah. help to kind of uh how
should I prepare myself when I kind of
should I prepare myself when I kind of
approach a paper? So this article is
approach a paper? So this article is
very dense like it's not hard to read
very dense like it's not hard to read
but like everything in this article like
but like everything in this article like
it is meant to be very dense. So like if
it is meant to be very dense. So like if
you read this paragraph a couple times
you read this paragraph a couple times
and you really think about this
and you really think about this
a lot of things in science will be a lot
a lot of things in science will be a lot
clearer including how to read papers.
Yeah. No, that's that's that's actually
Yeah. No, that's that's that's actually
true. I think true for everybody. It's
true. I think true for everybody. It's
not not just wants to learn RL. It's
not not just wants to learn RL. It's
kind of a general
kind of a general
like this is a general comment on
like this is a general comment on
science but it's particularly true in
science but it's particularly true in
AI.
AI.
So it's it is literally the case that
So it's it is literally the case that
like yes very often a lot of these
like yes very often a lot of these
papers are way simpler than they appear
papers are way simpler than they appear
and that is by design.
and that is by design.
This is why it is by design
This is why it is by design
and understanding that should help you
and understanding that should help you
figure out understanding that should
figure out understanding that should
help you.
Yeah. So I was even when I open any
Yeah. So I was even when I open any
paper you know there ideal is good but
paper you know there ideal is good but
when I go you know beyond abstract I was
when I go you know beyond abstract I was
kind of a lost on every time takes time
kind of a lost on every time takes time
100%
100%
like if you look at this for instance
this the original imageet paper
this the original imageet paper
let's do like uh resnet
at GPU time. Literally, that is what
at GPU time. Literally, that is what
happens. That's actually in a nutshell
happens. That's actually in a nutshell
why RL is such a mess.
why RL is such a mess.
Like this is the ResNet paper.
This paper could probably be like two
This paper could probably be like two
pages.
This is like one of the most fundamental
This is like one of the most fundamental
papers.
But pretty much this is true of a lot of
But pretty much this is true of a lot of
things where like the key idea of this
things where like the key idea of this
is a few sentences
is a few sentences
and then like maybe like a few pages of
and then like maybe like a few pages of
experiments and details.
Instead, this is an eight-page very
Instead, this is an eight-page very
dense paper with an additional
dense paper with an additional
three pages of appendices.
We did some dot products and sketch
We did some dot products and sketch
connections. Yeah,
this is why I no longer write papers, by
this is why I no longer write papers, by
the way, because writing papers in this
the way, because writing papers in this
style is just soul crushingly painful to
style is just soul crushingly painful to
me.
me.
when I can write more way more casually,
when I can write more way more casually,
way more succinctly, and way more
way more succinctly, and way more
precisely like this.
Okay,
Okay,
let me think if there's a sentence or
let me think if there's a sentence or
two I can add to this that would help
two I can add to this that would help
you.
Um so let me let me share of experience
Um so let me let me share of experience
like
like
when I go through any
when I go through any
paper like nobody told me like how to
paper like nobody told me like how to
approach that paper what was what should
approach that paper what was what should
our expectation when I read that paper
our expectation when I read that paper
you know and the paper you mentioned is
you know and the paper you mentioned is
like those are all pre-selected or you
like those are all pre-selected or you
know for a who want to start
know for a who want to start
you know they shouldn't do all the paper
you know they shouldn't do all the paper
they should look some sort of sective
they should look some sort of sective
paper and we should kind of
paper and we should kind of
I will give you a list for reinforcement
I will give you a list for reinforcement
learning
learning
yeah yeah for summary and thing like do
yeah yeah for summary and thing like do
not expect other than these things from
not expect other than these things from
this paper just understand understand
this paper just understand understand
the fundamentals understand the
the fundamentals understand the
implementation that's it some of the so
implementation that's it some of the so
the papers that I suggest
the papers that I suggest
because it is such a short list um you
because it is such a short list um you
actually probably want to understand
actually probably want to understand
most of the things in the papers that I
most of the things in the papers that I
suggest because I don't tend to suggest
suggest because I don't tend to suggest
papers that are like super
papers that are like super
padded um but it's a very short list
padded um but it's a very short list
like for instance the open AI5 paper the
like for instance the open AI5 paper the
Dota paper is really long but like
Dota paper is really long but like
there's a huge amount of value in
there's a huge amount of value in
understanding that paper like I'd take
understanding that paper like I'd take
that I would take that paper over like a
that I would take that paper over like a
randomly selected set of a 100 RL papers
randomly selected set of a 100 RL papers
say all of which have a decent number of
say all of which have a decent number of
citations. I still take the open AI5
citations. I still take the open AI5
paper
right and so you know what approach I I
right and so you know what approach I I
took on that time when I don't
took on that time when I don't
understand so I what I did I basically
understand so I what I did I basically
upload that paper into
upload that paper into
uh Google notebook
uh Google notebook
and that's kind of simplified me the
and that's kind of simplified me the
overall expectation and so you can do
overall expectation and so you can do
that but like Google notebook book I
that but like Google notebook book I
assume is LLM.
Google notebook LLM.
Yeah. So, language models are really
Yeah. So, language models are really
stupid is the thing. And
stupid is the thing. And
you actually do need to like it's hard,
you actually do need to like it's hard,
but you do need to actually learn how to
but you do need to actually learn how to
extract truth out of papers. It is a
extract truth out of papers. It is a
very important skill. It is very hard. I
very important skill. It is very hard. I
remember this. I started doing this when
remember this. I started doing this when
I was 16. And let me tell you, it was a
I was 16. And let me tell you, it was a
hell of a lot harder back then. Um, but
hell of a lot harder back then. Um, but
you can learn it.
This is why this is why like when I said
This is why this is why like when I said
how to the point is like when I give
how to the point is like when I give
people this RL guide, I drip feed it to
people this RL guide, I drip feed it to
you. So like you don't have to do this
you. So like you don't have to do this
before you do anything in reinforcement
before you do anything in reinforcement
learning, right?
learning, right?
It is something that you do need to do
It is something that you do need to do
as you improve.
I can get people started without reading
I can get people started without reading
any papers.
But you do need to do this to improve.
But you do need to do this to improve.
Yeah, we need to have to read paper.
Yeah, we need to have to read paper.
It's it is mandatory. It is actually
It's it is mandatory. It is actually
mandatory.
mandatory.
Get this from Larry
to the block at that position.
Oh yeah, I forgot three blue, one brown.
Oh yeah, I forgot three blue, one brown.
I actually haven't seen any of his
I actually haven't seen any of his
videos really. People speak very highly
videos really. People speak very highly
of them.
Yeah, that's a very good animation.
I mean, it's cool looking. At least
this is kind of a explainer video, I
this is kind of a explainer video, I
guess. Yeah. And like this guy is this
guess. Yeah. And like this guy is this
guy is not like a shill. This guy is
guy is not like a shill. This guy is
like actually a mathematician who
like actually a mathematician who
usually gets stuff right.
I don't know. I don't really watch like
I don't know. I don't really watch like
a lot of technical content except
a lot of technical content except
courses. I don't really watch a lot of
courses. I don't really watch a lot of
technical content in my uh in my spare
technical content in my uh in my spare
time.
I most except for like course matering
facts. Oh yeah,
facts. Oh yeah,
it's it's not exactly that reason,
it's it's not exactly that reason,
Larry. It's the fact that like
distilling
distilling
uh actually distilling papers into what
uh actually distilling papers into what
matters, what matters, what is true,
matters, what matters, what is true,
what is probably true, what makes sense
what is probably true, what makes sense
but may or may not be true. Like that is
but may or may not be true. Like that is
a skill and LLMs are bad at it. Uh and
a skill and LLMs are bad at it. Uh and
if LLMs were good at it, then they could
if LLMs were good at it, then they could
probably do research on their own
probably do research on their own
effectively. Yeah, I think
effectively. Yeah, I think
Apple just uh published a paper like
Apple just uh published a paper like
about LMS and they said LM is about
about LMS and they said LM is about
illusion the model.
illusion the model.
Yeah. I So, basically, here's the thing,
Yeah. I So, basically, here's the thing,
and I will say this once because it's
and I will say this once because it's
like we banned this spot. Like,
like we banned this spot. Like,
regardless of your views on how fast you
regardless of your views on how fast you
think LLMs will improve,
think LLMs will improve,
it's kind of stupid to let it influence
it's kind of stupid to let it influence
how you learn things in any way, shape,
how you learn things in any way, shape,
or form because like
or form because like
if you think, oh, the LM is going to be
if you think, oh, the LM is going to be
able to distill the paper and like
able to distill the paper and like
suggest the topics. Oh, the LM is going
suggest the topics. Oh, the LM is going
to be able to code the experiments. Oh,
to be able to code the experiments. Oh,
the LM's going to be able to like
the LM's going to be able to like
validate results. Okay, you're just
validate results. Okay, you're just
saying that you think AGI is happening
saying that you think AGI is happening
next year and that all of like all human
next year and that all of like all human
talent will be irrelevant. So like at
talent will be irrelevant. So like at
that point, you may as well not be doing
that point, you may as well not be doing
any of this. Go lie on a beach
any of this. Go lie on a beach
somewhere, right? So like I if you
somewhere, right? So like I if you
actually think that your agency matters
actually think that your agency matters
at all, you should still learn these
at all, you should still learn these
things and you should learn them at a
things and you should learn them at a
deep level
deep level
because if you don't learn them at a
because if you don't learn them at a
deep level and you just learn things
deep level and you just learn things
surface level
surface level
then you have no you're not going to be
then you have no you're not going to be
able to provide any value compared to
able to provide any value compared to
people who actually do learn these
people who actually do learn these
things correctly.
This is how I view a lot of things.
This is how I view a lot of things.
Hey, welcome.
Hey, welcome.
Okay.
Okay.
Uh, is there something I can add on
Uh, is there something I can add on
this?
It's difficult to distill that
It's difficult to distill that
discussion a couple of sentences.
Well, I think I can make this part of
Well, I think I can make this part of
the next section. I think is going to be
What do I title this? It's kind of the
What do I title this? It's kind of the
way that I view research or the way that
way that I view research or the way that
I choose problems
I choose problems
or
how to interpret research, I guess.
How to interpret research?
Do you have any resources as you said
if someone's understand levels
if someone's understand levels
uh that is not true Almas because MIT
uh that is not true Almas because MIT
and Stanford I I did my undergrad at
and Stanford I I did my undergrad at
Stanford and I did my PhD at MIT and
Stanford and I did my PhD at MIT and
both of them have courses available
both of them have courses available
fulllength courses available for free
fulllength courses available for free
online that are the exact same courses
online that are the exact same courses
that I took
that I took
and I'm going to let you in on a little
and I'm going to let you in on a little
secret course work is like less than 10%
secret course work is like less than 10%
of my background of like what actually
of my background of like what actually
makes me able to do what I do. It's
makes me able to do what I do. It's
important and learning the fundamentals
important and learning the fundamentals
quickly uh does give you a leg up,
but it's like literally 10%.
Your time you have to put in is
Your time you have to put in is
non-negotiable. It's true. Now, Larry, I
non-negotiable. It's true. Now, Larry, I
do think that like we could
do think that like we could
substantially bring down the time that
substantially bring down the time that
is required to learn a lot of these
is required to learn a lot of these
things. Uh, it's still going to take
things. Uh, it's still going to take
time and effort, but like for instance,
time and effort, but like for instance,
I probably could have shaved five years
I probably could have shaved five years
of like five blunder years of terrible
of like five blunder years of terrible
programming off if like I actually had
programming off if like I actually had
somebody to discuss things with who was
somebody to discuss things with who was
actually good at what they did. Um,
actually good at what they did. Um,
programming is terribly taught.
programming is terribly taught.
You're taught to solve problems in just
You're taught to solve problems in just
about the worst way imaginable and it
about the worst way imaginable and it
gets ingrained very quickly and you
gets ingrained very quickly and you
actually end up having to spend years
actually end up having to spend years
unlearning stuff.
unlearning stuff.
That's my perspective.
Like overjectoriented everything is
Like overjectoriented everything is
awful, awful, awful, awful.
Literally one screw up in my systems
Literally one screw up in my systems
course. One screw-up in my systems
course. One screw-up in my systems
course um prevented me from touching
course um prevented me from touching
systems dev for almost a decade. You
systems dev for almost a decade. You
know what that screw-up was? They didn't
know what that screw-up was? They didn't
tell us what an address sanitizer was or
tell us what an address sanitizer was or
even that they existed.
even that they existed.
Writing C without an address sanitizer
Writing C without an address sanitizer
sucks. And it really put me off of
sucks. And it really put me off of
low-level programming in general.
low-level programming in general.
The rest of the courses actually were
The rest of the courses actually were
very very bad. Stanford's uh systems
very very bad. Stanford's uh systems
courses are terrible. Um
courses are terrible. Um
but like that in particular was I think
but like that in particular was I think
the worst screw up of all of them.
the worst screw up of all of them.
No Russians. Russian since I'm from past
No Russians. Russian since I'm from past
Soviet country. It's a good source. ML
Soviet country. It's a good source. ML
Yandex also working with best
Yandex also working with best
university.
university.
Well, if it's in Russian then that's not
Well, if it's in Russian then that's not
going to help too much of my audience.
going to help too much of my audience.
But if you can do that then yeah good
But if you can do that then yeah good
for you.
for you.
No, one thing I I I also have like I
No, one thing I I I also have like I
also face some of problem because you
also face some of problem because you
know when someone tried to learn or any
know when someone tried to learn or any
particular field like AI or deep
particular field like AI or deep
learning or data science or any any
learning or data science or any any
other fields
other fields
basically we think
basically we think
if I learn what I'll become
if I learn what I'll become
like let's say I'm investing 2 3 years
like let's say I'm investing 2 3 years
four years into particular technology or
four years into particular technology or
uh particular carrier what I I'll I'll
uh particular carrier what I I'll I'll
become next. So
become next. So
I I think for specific to RL we don't
I I think for specific to RL we don't
have
have
that kind of a vision in particularly
that kind of a vision in particularly
for a beginner like
for a beginner like
if I know you are trying to learn RL but
if I know you are trying to learn RL but
learning RL what you can do what you can
learning RL what you can do what you can
do with RL without you know playing
do with RL without you know playing
games.
games.
Yeah, I mean most of the tutorial or
Yeah, I mean most of the tutorial or
blogs everybody talks about the games
blogs everybody talks about the games
but nobody talks about the real world
but nobody talks about the real world
problem. Yeah. So that is also one of
problem. Yeah. So that is also one of
the main reason that people
the main reason that people
are kind of unsure like they are not
are kind of unsure like they are not
confident to be honest. Yeah. I need to
confident to be honest. Yeah. I need to
motivate this stuff to be fair. And also
motivate this stuff to be fair. And also
Almas we do have right here this quick
Almas we do have right here this quick
start guide. This thing is littered with
start guide. This thing is littered with
references. I'm working on it. The
references. I'm working on it. The
document I'm working on is a sequel to
document I'm working on is a sequel to
this, but all of this is still up to
this, but all of this is still up to
date. It's just shorter than the thing
date. It's just shorter than the thing
I'm making now. Um, this is on
I'm making now. Um, this is on
puffer.ai. It's on the blog. So, yeah,
puffer.ai. It's on the blog. So, yeah,
the thing is that like reinforcement
the thing is that like reinforcement
learning has been applied in a a few
learning has been applied in a a few
different very interesting use cases,
different very interesting use cases,
right? Um, outside of games. We use
right? Um, outside of games. We use
games a lot because they're
games a lot because they're
interpretable in research, but like RL
interpretable in research, but like RL
is also just a less mature area of AI in
is also just a less mature area of AI in
general than vision or language
general than vision or language
processing, right? Um,
processing, right? Um,
so it's like what if you understand the
so it's like what if you understand the
tech, there are things about it that
tech, there are things about it that
very clearly make it uh seem like this
very clearly make it uh seem like this
is going to be something useful down the
is going to be something useful down the
line. But a lot of the work in RL, it's
line. But a lot of the work in RL, it's
like there aren't just like applied RL
like there aren't just like applied RL
jobs like there are applied vision jobs,
jobs like there are applied vision jobs,
right? Like technically there are a few
right? Like technically there are a few
jobs that say that they're applied RL,
jobs that say that they're applied RL,
but they mostly don't work. Um,
but they mostly don't work. Um,
and that's just because it's a less
and that's just because it's a less
mature area. So
mature area. So
the bet that I have on RL right is
the bet that I have on RL right is
because very clearly it can solve hard
because very clearly it can solve hard
problems and we have seen the pace of
problems and we have seen the pace of
progress pick up in the last year with
progress pick up in the last year with
all of the stuff I'm doing with Puffer
all of the stuff I'm doing with Puffer
that this is going to be a very widely
that this is going to be a very widely
applicable
applicable
area and it's going to be applicable
area and it's going to be applicable
mostly to a lot of just unintuitive
mostly to a lot of just unintuitive
optimization processes that are
optimization processes that are
scattered all throughout different
scattered all throughout different
industries. So, it's going to have uh
industries. So, it's going to have uh
very broad reaching effects. Not going
very broad reaching effects. Not going
to be like a chatbot that you just ask
to be like a chatbot that you just ask
stuff. It's going to be like embedded
stuff. It's going to be like embedded
into a lot of hard tech.
That is uh that is my view on it. But
That is uh that is my view on it. But
like it's not here now because the thing
like it's not here now because the thing
is that it's not a mature it's not as
is that it's not a mature it's not as
mature area, right? You're looking at a
mature area, right? You're looking at a
branch that is mostly active research
branch that is mostly active research
that is being used by like largely
that is being used by like largely
technical companies that have their own
technical companies that have their own
scientists. Right.
And and if we talk about like f future
And and if we talk about like f future
opportunities like
opportunities like
well if you learn deep learning if you
well if you learn deep learning if you
learn deep learning like how long do you
learn deep learning like how long do you
think it would take me to go be like as
think it would take me to go be like as
good as at uh as good at language model
good as at uh as good at language model
work as I am now at RL? It would take me
work as I am now at RL? It would take me
a few months. It's all the same,
a few months. It's all the same,
right?
right?
I could go I can work in any area of
I could go I can work in any area of
deep learning that I like. It will take
deep learning that I like. It will take
me a few months to get up to speed.
And probably you know so what make me
And probably you know so what make me
come to in particularly why I choose if
come to in particularly why I choose if
I talk about myself why I prefer other
I talk about myself why I prefer other
industry compared to you know
industry compared to you know
Why I choose basic if if you know people
Why I choose basic if if you know people
already seeing this up until till now
already seeing this up until till now
every
every
um real world application that we have
um real world application that we have
you know maybe you know 90% or 97% or
you know maybe you know 90% or 97% or
99%. They are all rulebased application
99%. They are all rulebased application
not like a
not like a
you know
AIdriven or you know general purpose
AIdriven or you know general purpose
application. If if if we think about the
application. If if if we think about the
when we it comes to general purpose then
when we it comes to general purpose then
comes into our fundamental because
comes into our fundamental because
in real world that application needs to
in real world that application needs to
adapt and adapt such a way so that it
adapt and adapt such a way so that it
can you know be in the environment under
can you know be in the environment under
the
the
so I think uh in next 5 10 years there
so I think uh in next 5 10 years there
will be huge opportunity for you know
will be huge opportunity for you know
quite Well, another big thing is just
quite Well, another big thing is just
like
like
it's an area of deep learning that one
it's an area of deep learning that one
teaches you a lot of technical skills
teaches you a lot of technical skills
and two you can actually do it at home.
and two you can actually do it at home.
Like you can't go train GPT4 at home.
Like you can't go train GPT4 at home.
It's just not going to happen.
Uh Elma says, "Wait, by the way, it's
Uh Elma says, "Wait, by the way, it's
what PC you're using. I see you have
what PC you're using. I see you have
Linux. What about specs?" So, behind me
Linux. What about specs?" So, behind me
I have
uh like a dozen different PCs sitting on
uh like a dozen different PCs sitting on
the racks.
the racks.
Uh the one that I have right here is
Uh the one that I have right here is
just a it's a high-end Main Gear box
just a it's a high-end Main Gear box
with a 4090 in it.
If you just want something for
If you just want something for
reinforcement learning, uh, you need to
reinforcement learning, uh, you need to
get like something that has a good GPU
get like something that has a good GPU
of some variety. It doesn't need to have
of some variety. It doesn't need to have
a huge amount of memory.
a huge amount of memory.
4090s are really nice. I don't know how
4090s are really nice. I don't know how
fast a 5080 is by comparison, but some
fast a 5080 is by comparison, but some
good chip. And then you also want to
good chip. And then you also want to
ideally get you want to get a good
ideally get you want to get a good
multi-core CPU.
multi-core CPU.
Like I have a 9950X. I think that's the
Like I have a 9950X. I think that's the
best desktop chip you can get at the
best desktop chip you can get at the
moment for this. Uh the Intel chips I've
moment for this. Uh the Intel chips I've
had a bunch of problems with and they're
had a bunch of problems with and they're
architecturally a little bit wonky, but
architecturally a little bit wonky, but
they still work.
they still work.
But yeah, like you ideally you want to
But yeah, like you ideally you want to
get like a 16 core chip.
It's not free, right? Like it's just a
It's not free, right? Like it's just a
heck of a lot cheaper than everything
heck of a lot cheaper than everything
else. You can also you can rent stuff
else. You can also you can rent stuff
like if you go on like Vast
like if you go on like Vast
You can rent 4090s for 34 cents an hour,
You can rent 4090s for 34 cents an hour,
sometimes lower.
I have 1590.
I have 1590.
There's one of the machines back there
There's one of the machines back there
that's a test machine that's a 5090.
that's a test machine that's a 5090.
It's substantially faster for some
It's substantially faster for some
problems and not all that much faster
problems and not all that much faster
than a 4090 for others.
I was going to buy more and I think I
I was going to buy more and I think I
still am, but uh I did. I just bought
still am, but uh I did. I just bought
two tiny boxes. So that's plus 12 4090s.
two tiny boxes. So that's plus 12 4090s.
We now have a total of 20 4090s for
We now have a total of 20 4090s for
puffer.
anything
you think about finance world bots will
you think about finance world bots will
alter the quants I do a little bit of
alter the quants I do a little bit of
work in finance that I can't really talk
work in finance that I can't really talk
any details about um
when do you think
when do you think
and there already are bots like
and there already are bots like
everywhere in finance right just a
everywhere in finance right just a
question of like at what scale and such.
I would hope it's not just people like
I would hope it's not just people like
letting LLM run trades on the market
letting LLM run trades on the market
though. That's probably going to just
though. That's probably going to just
lose a ton of money.
Okay, I got to actually write on this,
Okay, I got to actually write on this,
right? The point of streaming this is so
right? The point of streaming this is so
that we discuss this and so that I write
that we discuss this and so that I write
it effectively. There are definitely
it effectively. There are definitely
people doing that. Yeah, but they're def
people doing that. Yeah, but they're def
like there people doing all sorts of
like there people doing all sorts of
stupid things.
I hate the idea of any human effort
I hate the idea of any human effort
being wasted on fan art. Yeah, like
being wasted on fan art. Yeah, like
there are way more interesting problems.
there are way more interesting problems.
I agree. I would like, you know, to
I agree. I would like, you know, to
solve disease and superconductivity
solve disease and superconductivity
and material science and all sorts of
and material science and all sorts of
things.
Let's let's add right here. How do I let
Let's let's add right here. How do I let
me see how I want to frame this though?
me see how I want to frame this though?
I've sort of been thinking about this
I've sort of been thinking about this
while I've been chatting. Um,
I don't want to say research taste
I don't want to say research taste
because
because
it's like the massive midwit topic on uh
it's like the massive midwit topic on uh
X at the moment
X at the moment
cuz it's not taste. That's not what it
cuz it's not taste. That's not what it
is. Not a good word for it.
It's really it's about it's building
It's really it's about it's building
intuition about research what it is.
build intuition about research. Yeah.
Let's keep going from here.
Thank you.
No, you're good. It's uh it's just like
No, you're good. It's uh it's just like
typos that happen when editing, right?
typos that happen when editing, right?
Like you changed the part of a sentence
Like you changed the part of a sentence
and now something later on that was uh
and now something later on that was uh
that was plural becomes singular, etc.,
that was plural becomes singular, etc.,
etc.
I have a pretty dumb question. Yeah.
So
So
when when should I I mean on which stage
when when should I I mean on which stage
I should see the papers beginning or
I should see the papers beginning or
after? You should probably start reading
after? You should probably start reading
them. words like you should have read a
them. words like you should have read a
few papers by the time that you finish
few papers by the time that you finish
something of the level of CS231N
something of the level of CS231N
and then pretty much as you are trying
and then pretty much as you are trying
to improve methods or as you are trying
to improve methods or as you are trying
to improve your understanding of any
to improve your understanding of any
specific area you should be reading a
specific area you should be reading a
few papers over time um
few papers over time um
it's a lot earlier than you think I
it's a lot earlier than you think I
would say like literally there were zero
would say like literally there were zero
courses in uh deep learning when I
courses in uh deep learning when I
started. So my first experience with
started. So my first experience with
deep learning at the age of 16
deep learning at the age of 16
uh was just reading papers.
uh was just reading papers.
I had like
I had like
basic I think I had like basic single
basic I think I had like basic single
variable calculus and linear algebra and
variable calculus and linear algebra and
that was it. That's all I knew and like
that was it. That's all I knew and like
basic programming. Which year it is? It
basic programming. Which year it is? It
was what?
was what?
Which year it was? Like I was like 16.
Which year it was? Like I was like 16.
That's halfway through high school.
That's halfway through high school.
2016.
2016.
Oh, which year was this? Uh, no. This
Oh, which year was this? Uh, no. This
would have been like 20 probably 2013 or
would have been like 20 probably 2013 or
14.
14.
Oh, that's that's pretty
Oh, that's that's pretty
Yeah. Yeah. I've been doing this a
Yeah. Yeah. I've been doing this a
while.
while.
How long you streaming for? I'm going to
How long you streaming for? I'm going to
go get stuck into Puffer and try out the
go get stuck into Puffer and try out the
environments
environments
probably until a bit before 6. I'm going
probably until a bit before 6. I'm going
to dinner with my family for a Fourth of
to dinner with my family for a Fourth of
July thing July thing. It's the day
July thing July thing. It's the day
after for some reason.
I need to make this paragraph good. This
I need to make this paragraph good. This
is not
I don't like the way this is going right
I don't like the way this is going right
at the moment.
Can can we um like before going into
Can can we um like before going into
like more details um can we kind of uh
like more details um can we kind of uh
generate like the steps step by step uh
generate like the steps step by step uh
you know a level category
you know a level category
let's say uh you know doing the the
let's say uh you know doing the the
course that you mentioned is let's Send
course that you mentioned is let's Send
for one step. Second is you have to read
for one step. Second is you have to read
paper. Second step. What's the third?
paper. Second step. What's the third?
What's the third?
What's the third?
Yeah, that's it. Yeah, third is you know
Yeah, that's it. Yeah, third is you know
pick a
pick a
easy to understandable.
easy to understandable.
That's it. There no more steps properly
That's it. There no more steps properly
for AI in general. That's it. There are
for AI in general. That's it. There are
no more steps. Like you do your intro
no more steps. Like you do your intro
stuff, you start reading papers and
stuff, you start reading papers and
building things and you keep reading
building things and you keep reading
papers and building things forever.
papers and building things forever.
That's it. There's no like magic third
That's it. There's no like magic third
thing. Now for reinforcement learning
thing. Now for reinforcement learning
specifically, right? Like if you want
specifically, right? Like if you want
like more details on the specific area
like more details on the specific area
of RL, then yes, that's going to be the
of RL, then yes, that's going to be the
other portion of the article. I want to
other portion of the article. I want to
finish the intro portion first, though.
finish the intro portion first, though.
I should be able to do quite quickly if
I should be able to do quite quickly if
I just like it's only a couple more
I just like it's only a couple more
paragraphs.
paragraphs.
I just actually have to
I just actually have to
Okay, let let me write my question to
Okay, let let me write my question to
you and then probably can um
you and then probably can um
those
Okay. So, I don't like this paragraph a
Okay. So, I don't like this paragraph a
ton. I think that there's
this is not telling people enough. This
this is not telling people enough. This
is like a very important topic.
I think it's fair to say I think it's
I think it's fair to say I think it's
fair to say that this is a combination
fair to say that this is a combination
of of validation
of of validation
of validating results and pattern
of validating results and pattern
matching, right?
Also some fundamentals,
knowledge of fundamentals,
knowledge of fundamentals,
pattern matching and validation.
pattern matching and validation.
Can't wait to read the whole thing. So
Can't wait to read the whole thing. So
much good stuff in there. Yeah, I'm
much good stuff in there. Yeah, I'm
working on it. Major
Um,
I have made like 15 question to you. 15
I have made like 15 question to you. 15
questions?
Yeah. Did you write up a doc or
Yeah. Did you write up a doc or
something?
something?
Yeah. Let me let me get the link. You
Yeah. Let me let me get the link. You
can link me the doc. Let me at least get
can link me the doc. Let me at least get
this paragraph done.
this paragraph done.
No, you can write you can you can see um
No, you can write you can you can see um
I I have those questions and I want to
I I have those questions and I want to
know how can Let me let me see if
know how can Let me let me see if
they're relevant. I'll look at them now
they're relevant. I'll look at them now
and if not I'll look at them after this
and if not I'll look at them after this
paragraph.
paragraph.
Okay, you can I can I'll post them
Okay, you can I can I'll post them
in general.
Where did you link these
in general?
Okay. Yeah. So, you're this is all RL
Okay. Yeah. So, you're this is all RL
specific.
specific.
So let me finish this first.
So let me finish this first.
We'll ask for this.
Actually I depending on how long this
Actually I depending on how long this
gets I could release it as two articles.
gets I could release it as two articles.
That might be better.
Playing halfway.
This is like an important point.
This is like an important point.
Like literally if you if you have too
Like literally if you if you have too
much respect
much respect
for the scientific process, you cannot
for the scientific process, you cannot
be an effective researcher because you
be an effective researcher because you
will simply assume that things are true
will simply assume that things are true
because they're published when they're
because they're published when they're
not.
All these mess
ram reels of metal.
That's what the scientific method is.
That's what the scientific method is.
So it depends because here's the thing,
So it depends because here's the thing,
Larry, right? like
Larry, right? like
there's a peer review process, right?
there's a peer review process, right?
Yes, the scientific method itself is
Yes, the scientific method itself is
about asking questions of things. But
about asking questions of things. But
the thing is
the thing is
like
like
if that's all it is, then like why is
if that's all it is, then like why is
there a peer review process, right? Why
there a peer review process, right? Why
like the point of the peer review
like the point of the peer review
process is to ascertain that the thing
process is to ascertain that the thing
being submitted for publication is
being submitted for publication is
actually correct.
actually correct.
which then creates this impression that
which then creates this impression that
if something is published, it's probably
if something is published, it's probably
correct and it's not.
See,
See,
so yeah, trust the science is the least
so yeah, trust the science is the least
scientific thing you can possibly say.
scientific thing you can possibly say.
But the thing is the institutions are
But the thing is the institutions are
set up in such a way that it suggests
set up in such a way that it suggests
that publications like have already been
that publications like have already been
reviewed by people smarter than you,
reviewed by people smarter than you,
especially when you're in a new area,
especially when you're in a new area,
right? Like, oh, this has already been
right? Like, oh, this has already been
reviewed by experts in this area. No,
reviewed by experts in this area. No,
man. It's been like leafed through by
man. It's been like leafed through by
some overworked grad student who's like
some overworked grad student who's like
writing some basically random comments
writing some basically random comments
and calling it a day.
Yeah, trust the science is so bad. Yes.
fundamentally not how science works.
What are you sipping on? Uh
What are you sipping on? Uh
a seltzer that is flat because
a seltzer that is flat because
apparently it was from yesterday which
apparently it was from yesterday which
is why I made a face.
I'll get more coffee in a second. I got
I'll get more coffee in a second. I got
to finish this paragraph and then my
to finish this paragraph and then my
reward is more coffee.
700 p.m.
Scotland
is 100 p.m. There.
Terrible.
Yeah.
And then they get published in nature
And then they get published in nature
and you go, "Oh, wow. What a great
and you go, "Oh, wow. What a great
thing.
actually. You know what we're going to
actually. You know what we're going to
do? I know what we're going to do.
There's way more out there than puffer
There's way more out there than puffer
and our lib.
obviously you forgot about the page.
obviously you forgot about the page.
page limits. There are usually
page limits. There are usually
appendices for that.
appendices for that.
I honestly I don't think that people
I honestly I don't think that people
drop ablations for page limits as much
drop ablations for page limits as much
as they drop them for time and GPU
as they drop them for time and GPU
constraints.
constraints.
That you'd hate it.
Why am I laughing?
Why am I laughing?
Because of this.
It is kind of like I don't know
like if you think about actually doing
like if you think about actually doing
RL research that guy you'd actually be
RL research that guy you'd actually be
kind of crazy to use anything else. Like
kind of crazy to use anything else. Like
I'm not talking about LLMs like core RL
I'm not talking about LLMs like core RL
research. You'd be kind of crazy to use
research. You'd be kind of crazy to use
anything else just because of the speed
anything else just because of the speed
difference alone.
Don't look at the appendices. Yeah,
they're actually explicitly not required
they're actually explicitly not required
to uh to look at the appendices most of
to uh to look at the appendices most of
the time.
conference has appendices.
conference has appendices.
Most of them do. I think at this point
Most of them do. I think at this point
most of them do have the appendices. It
most of them do have the appendices. It
does depend.
But like if you didn't have to write
But like if you didn't have to write
that paper the way that academic papers
that paper the way that academic papers
are supposed to be written, you actually
are supposed to be written, you actually
tried to like you could have fit a lot
tried to like you could have fit a lot
of that stuff in.
of that stuff in.
Like academic writing is super bloated
Like academic writing is super bloated
and dry and boring.
or robotics.
Okay. To be fair, I'm probably mostly
Okay. To be fair, I'm probably mostly
just thinking of Nurups because that's
just thinking of Nurups because that's
the big one that everyone submits to my
the big one that everyone submits to my
website.
Yeah. So that I mean that's more like
Yeah. So that I mean that's more like
blog post walkthrough. I think if you
blog post walkthrough. I think if you
wanted to just like put like the core
wanted to just like put like the core
ablations and like motivate like you
ablations and like motivate like you
could probably fit a lot of it. All
right, spy.
right, spy.
That's absolutely you. Totally not.
Honestly,
I know you're like you're only partially
I know you're like you're only partially
joking there. If Pokemon just ran a
joking there. If Pokemon just ran a
thousand times faster, you wouldn't have
thousand times faster, you wouldn't have
that problem.
That simple, right?
Ready
to put my Delops
to put my Delops
graphics to work.
graphics to work.
It will actually let you at least run
It will actually let you at least run
Pong with that.
just found the full RL iceberg. Yeah,
just found the full RL iceberg. Yeah,
that watch that video. That one's uh
that watch that video. That one's uh
that one took a lot of work and didn't
that one took a lot of work and didn't
get very much attention. I think it's a
get very much attention. I think it's a
a high quality thing.
Highest leverage unskilled engineer
AI research is
AI research is
five coding RL environments.
there,
there,
dude.
I mean, I would it would be a snarky
I mean, I would it would be a snarky
retweet if anything because it's an
retweet if anything because it's an
incredibly stupid take.
incredibly stupid take.
Welcome, essay.
the highest leverage thing you can do
the highest leverage thing you can do
is actually learn to code
is actually learn to code
uh
and then actually like help us build
and then actually like help us build
some RL environments and turn justice.
some RL environments and turn justice.
Is this like Who is this? Is this
Is this like Who is this? Is this
somebody I want to even
wait?
wait?
Oh, these dudes. Freaking Prime, man.
Oh, these dudes. Freaking Prime, man.
They have some good stuff and they have
They have some good stuff and they have
some abysmally stupid takes.
do that.
Where's the intro thing on puffer.ai?
Where's the intro thing on puffer.ai?
It's in the blog.
I got to fix a couple posts in here. But
I got to fix a couple posts in here. But
see, there's a quick start guide.
the RPO themselves into a
the RPO themselves into a
I thought you'd enjoy the take.
I thought you'd enjoy the take.
I don't know why. I mean, it's like
I don't know why. I mean, it's like
like literally all of my content is
like literally all of my content is
about actually understanding things
about actually understanding things
correctly.
Like you like, let me make something
Like you like, let me make something
clear. Like if you're typing things into
clear. Like if you're typing things into
if you're just basically typing
if you're just basically typing
into uh into whatever LLM in a loop
into uh into whatever LLM in a loop
without actually understanding what's
without actually understanding what's
going on, you have zero marginal value.
going on, you have zero marginal value.
Zero. Utterly worthless.
The highest leverage thing unskilled
The highest leverage thing unskilled
engineers can do is pay.
engineers can do is pay.
I mean, look,
I mean, look,
the highest leverage thing you can do
the highest leverage thing you can do
for RL is kind of just to mail me some
for RL is kind of just to mail me some
gold bars.
gold bars.
And uh I I will help solve your
And uh I I will help solve your
problems.
problems.
I will help solve your problems.
Like I'm literally making it as easy as
Like I'm literally making it as easy as
possible for new people to get good at
possible for new people to get good at
reinforcement learning. And we have a
reinforcement learning. And we have a
few people who have been puffer, but
few people who have been puffer, but
like the mainstream is still like a like
like the mainstream is still like a like
a catastrophic screw up. So for as long
a catastrophic screw up. So for as long
as people keep doing it wrong, that's
as people keep doing it wrong, that's
kind of the best thing you to get me to
kind of the best thing you to get me to
do it.
And for reference, we have set uh soda
And for reference, we have set uh soda
on like multiple different clients uh
on like multiple different clients uh
projects for 10k a month. So there you
projects for 10k a month. So there you
go. Also star puffer lip. It helps us
go. Also star puffer lip. It helps us
out a ton.
This is like a really good piece of
This is like a really good piece of
advice, but it feels generic and it
advice, but it feels generic and it
doesn't feel like the strongest thing I
doesn't feel like the strongest thing I
can tell people.
Why is X chat broken?
Why is X chat broken?
Uh, if you link stuff, it'll break. If
Uh, if you link stuff, it'll break. If
you spam messages, it'll break. If you
you spam messages, it'll break. If you
look at it the wrong way, it'll break.
It's not stop thinking just do it
It's not stop thinking just do it
sounds like a shippable product.
sounds like a shippable product.
The product that we have is service
The product that we have is service
contracts
contracts
uh as well as I mean deliverables
uh as well as I mean deliverables
contracts to be fair. But yeah, all our
contracts to be fair. But yeah, all our
stuff is free and companies can hire us
stuff is free and companies can hire us
to help with their reinforcement
to help with their reinforcement
learning efforts or to solve like
learning efforts or to solve like
problems that clearly are RL problems
problems that clearly are RL problems
for them.
for them.
They're larger though. Fix deliverables.
Why don't I like this paragraph?
Why don't I like this paragraph?
It's very good advice, but it feels
It's very good advice, but it feels
generic.
But something of this form I think is
But something of this form I think is
needed.
needed.
If I want to like think of the top three
If I want to like think of the top three
things that I can tell people on
things that I can tell people on
learning ML in general,
this is a good one.
I think it's missing.
The path to both are kind of the same.
But when you say learning research, how
But when you say learning research, how
do you do it?
Even gold bars. A male.
It's not quite that though, that guy.
It's not quite that though, that guy.
It's not just like it's not just put in
It's not just like it's not just put in
the reps.
the reps.
I'm trying to provide perspective on how
I'm trying to provide perspective on how
to approach that process to make it
to approach that process to make it
faster and make more sense.
Our alchemy
Our alchemy
turn money into
turn money into
gold is money
about your anecdotal experience instead
about your anecdotal experience instead
of some generic story.
There's only so much I can flame
There's only so much I can flame
existing researchers though because
existing researchers though because
basically the evidence that I would have
basically the evidence that I would have
to provide here
to provide here
um would basically be like how I found
um would basically be like how I found
out that X and Y researchers are frauds.
RLD no when do you realize you developed
RLD no when do you realize you developed
intuition? I mean it was a slow
intuition? I mean it was a slow
continual process right from the time I
continual process right from the time I
started reading papers
literally over a decade
You ever have an aha moment
You ever have an aha moment
in reading papers? Not really.
Are all having its own conference?
I mean, Nurups is massive. So, it's fine
I mean, Nurups is massive. So, it's fine
to have a smaller conference. I will be
to have a smaller conference. I will be
going to RLC. Hey,
I like this.
training. LM depend a lot on RL. Now
training. LM depend a lot on RL. Now
they do apparently
they do apparently
that like use a lot of RL in a specific
that like use a lot of RL in a specific
stage.
stage.
Uh yeah, mostly at the end.
Don't be afraid to be a contrarian, but
Don't be afraid to be a contrarian, but
you better know what I'm doing. I'm
you better know what I'm doing. I'm
being as contrarian as possible without
being as contrarian as possible without
saying X, Y, and Z specific research,
saying X, Y, and Z specific research,
specific incredibly wellrespected
specific incredibly wellrespected
researchers are frauds.
See, the problem is that with doing that
See, the problem is that with doing that
is that they're very damn good at it.
is that they're very damn good at it.
Um,
yeah.
yeah.
And that's not even a useful thing
And that's not even a useful thing
because that's not what I'm trying to
because that's not what I'm trying to
tell you, right?
research comes from contrarians.
research comes from contrarians.
I mean, I could write about the way that
I mean, I could write about the way that
I approach problems like that. It is
I approach problems like that. It is
pretty much I just like look for the
pretty much I just like look for the
thing that nobody else is doing.
But that's not how to learn ML, right?
When do you see RL problem and determine
When do you see RL problem and determine
it's not possible with current RL
it's not possible with current RL
research?
research?
Uh I mean some problems are just not
Uh I mean some problems are just not
formatted well for RL, right? You can
formatted well for RL, right? You can
very very easily construct problems that
very very easily construct problems that
are trivial for humans but like
are trivial for humans but like
virtually impossible for reinforcement
virtually impossible for reinforcement
learning.
learning.
Okay. So, like
literally all you'd have to do is take
literally all you'd have to do is take
an image that says like to solve this
an image that says like to solve this
problem, enter the following code and
problem, enter the following code and
put a code and then the action is
put a code and then the action is
entering the code. You're not going to
entering the code. You're not going to
solve it with RL ever.
mostly problems that rely on like baked
mostly problems that rely on like baked
in priors that are not learnable within
in priors that are not learnable within
an environment itself.
an environment itself.
How hard would it be to pre-train an LLM
How hard would it be to pre-train an LLM
with only RL? Impossible for the exact
with only RL? Impossible for the exact
same reason.
Just take the information theory
Just take the information theory
perspective on it, right? You're getting
perspective on it, right? You're getting
a bit of information per sequence
a bit of information per sequence
instead of like number of bits
instead of like number of bits
information of bits per sequence. Anyone
here play a chess? We have somebody in
here play a chess? We have somebody in
the Discord trying to uh get us a chess
the Discord trying to uh get us a chess
environment for RL. That's actually
environment for RL. That's actually
something that I wanted to do is see
something that I wanted to do is see
like how well you can do at chess with
like how well you can do at chess with
just RL and no search.
RL a little bit too damn complicated.
Usually it's because there's some form
Usually it's because there's some form
of outside knowledge
can see my DMs.
Oh, is this touring machine stuff
reward is scarce and requires complex
reward is scarce and requires complex
disc.
It's the thing with neural MMO, right,
It's the thing with neural MMO, right,
is like you almost a human doesn't have
is like you almost a human doesn't have
to actually have played it a bunch to
to actually have played it a bunch to
know how to play it because the visual
know how to play it because the visual
information is set up to be to be very
information is set up to be to be very
obvious, right?
You have to think about how how you
You have to think about how how you
would learn the problem tabularasa. How
would learn the problem tabularasa. How
would you learn the problem from
would you learn the problem from
scratch?
Okay, I'm spending way too long on this
Okay, I'm spending way too long on this
intro section and I want this to be
intro section and I want this to be
done. So, let me let me finish this
done. So, let me let me finish this
paragraph. Enough.
Okay.
Let's just do it this way.
into lunch. See you after
Yeah, this
Actually,
I can be more specific than this.
policy
is too simple to learn multiplication.
is too simple to learn multiplication.
How often do you see
How often do you see
big policy also? Not that often. We do
big policy also? Not that often. We do
have complicated problems where it makes
have complicated problems where it makes
a difference. I'm going to have to look
a difference. I'm going to have to look
more at your environment in detail. I
more at your environment in detail. I
haven't been able to do so yet though
haven't been able to do so yet though
because you actually have a fairly like
because you actually have a fairly like
sophisticated environment and it's going
sophisticated environment and it's going
to actually take me a fair bit of time
to actually take me a fair bit of time
to go through and like validate the
to go through and like validate the
method.
Okay, let me see how I like this.
So I also don't know how your data is
So I also don't know how your data is
being presented or normalized or
being presented or normalized or
anything like that. Like if you actually
anything like that. Like if you actually
trace through what has to be done to
trace through what has to be done to
solve your task and the rewards given,
solve your task and the rewards given,
does it seem like something that could
does it seem like something that could
be learned via curriculum or
be learned via curriculum or
exploration?
Okay,
Okay,
let's see if there's anything in here.
validation was close to 70.
Well, then that's
I mean then that tells you something,
I mean then that tells you something,
right?
right?
If you supervise the problem and you're
If you supervise the problem and you're
getting about the same result, that
getting about the same result, that
should tell you something. Been
should tell you something. Been
following you and watching streams for
following you and watching streams for
three months now. Stealth watching,
three months now. Stealth watching,
working my way up ML. Haven't reached RL
working my way up ML. Haven't reached RL
yet. And it's coded. Work ethic is
yet. And it's coded. Work ethic is
admirable. Oh man, this is considered
admirable. Oh man, this is considered
lazy for me this week
lazy for me this week
for these streams. You got it, man. I
for these streams. You got it, man. I
will uh I'll be releasing this guide
will uh I'll be releasing this guide
soon for beginners. you should
soon for beginners. you should
absolutely do some ML fundamentals
absolutely do some ML fundamentals
first. Um, as in the guide here, I it's
first. Um, as in the guide here, I it's
like one course worth of information, I
like one course worth of information, I
think, like one course worth of
think, like one course worth of
information in fundamentals of ML and
information in fundamentals of ML and
then you can do RL. We've literally had
then you can do RL. We've literally had
brand new programmers do like start
brand new programmers do like start
straight with reinforcement learning
straight with reinforcement learning
though. So, if that motivates you,
though. So, if that motivates you,
that's cool, too.
that's cool, too.
I generally suggest new people spend 20%
I generally suggest new people spend 20%
of their time on formal content and like
of their time on formal content and like
80% of their time building stuff to
80% of their time building stuff to
learn.
Puffer Pokemon on puffer 3 trying to see
Puffer Pokemon on puffer 3 trying to see
SPS fix compile info and state handler.
SPS fix compile info and state handler.
Cool.
there without Don't say what?
Don't say that. What?
What are you referring to, doctor? And
What are you referring to, doctor? And
one second. Let me use the restroom real
one second. Let me use the restroom real
quick.
lazy week is more
lazy week is more
Oh man, it's Yeah, if I work like a 40
Oh man, it's Yeah, if I work like a 40
or a 50 hour week, that's like pretty
or a 50 hour week, that's like pretty
lazy.
when I'm like actually well-rested and
when I'm like actually well-rested and
have like a cool project to work on, you
have like a cool project to work on, you
know, I can pull like an 80 or a 90 and
know, I can pull like an 80 or a 90 and
basically you can just solve like
basically you can just solve like
ridiculous things in like one week uh
ridiculous things in like one week uh
one productive week, but you can't do it
one productive week, but you can't do it
constantly.
Can't do it constantly.
Ironically, I'm least productive for uh
Ironically, I'm least productive for uh
conference things. Like, I have to I got
conference things. Like, I have to I got
to spend a day cleaning up and uh my
to spend a day cleaning up and uh my
camera ready for RLC. I'll probably just
camera ready for RLC. I'll probably just
do it on stream. I don't care. And it's
do it on stream. I don't care. And it's
like I'm just I don't want to do it.
like I'm just I don't want to do it.
Like mentally, I just can't force myself
Like mentally, I just can't force myself
to do boring stuff.
500 to 1k lower. Yeah. So, there's one
500 to 1k lower. Yeah. So, there's one
thing I did do that guy. Um, we did
thing I did do that guy. Um, we did
somewhat change the way vectorization
somewhat change the way vectorization
works a bit.
might want to like triple buffer instead
might want to like triple buffer instead
of double buffer if you're doing that.
Multiplication is a convolution
Multiplication is a convolution
of one multi- number
of one multi- number
over the digit dimension.
Is it
somebody will have to explain this cuz I
somebody will have to explain this cuz I
don't I don't think it is
with the digit dimension.
Don't think it is. I don't know.
Don't think it is. I don't know.
papers like RL graph
papers like RL graph
going to get the computational graph I
going to get the computational graph I
haven't seen that
point of this
huh
what's the point of
Okay, just based on this, I can tell you
Okay, just based on this, I can tell you
this is slow as hell.
So
if the point of this is to like
the heck
the heck
I don't know
digit multip phrasing is convolution
digit multip phrasing is convolution
using FFTs
using FFTs
well you can't then you have to learn
well you can't then you have to learn
the FFT
Okay, let me go through this and see
Okay, let me go through this and see
see how I like this as a intro to ML.
see how I like this as a intro to ML.
The programming one is way longer.
The programming one is way longer.
But I think honestly like
But I think honestly like
how much more advice do I have than this
how much more advice do I have than this
for
for
ML?
This is mostly it, man.
Buffer is 10% slower. So that guy you
Buffer is 10% slower. So that guy you
might have to
might have to
you might have to adjust
you might have to adjust
um the vectorization a little bit
um the vectorization a little bit
because
because
well I mean like the vectorization
well I mean like the vectorization
settings because basically
settings because basically
if it's assuming it's the environment
if it's assuming it's the environment
that is slower which you should time um
that is slower which you should time um
it's the thing is that we were doing
it's the thing is that we were doing
like a full endpool before and now we're
like a full endpool before and now we're
basically doing the zero copy mode by
basically doing the zero copy mode by
default where you get blocks you go like
default where you get blocks you go like
one block then the next block then the
one block then the next block then the
next block. So it's going to be better
next block. So it's going to be better
if you do like triple buffered instead
if you do like triple buffered instead
of double buffered for instance uh for
of double buffered for instance uh for
this setting.
Uh and also keep in mind that the
Uh and also keep in mind that the
learning should be more efficient
learning should be more efficient
because
because
you're uh you're no longer like wasting
you're uh you're no longer like wasting
time on low value samples and like
time on low value samples and like
screwing up your policy with lowv value
screwing up your policy with lowv value
samples. It should learn better.
We haven't figured out real time
We haven't figured out real time
training yet. It's not that we haven't
training yet. It's not that we haven't
figured out real time training. it's
figured out real time training. it's
that it fundamentally doesn't make sense
like at least not from a not from like a
like at least not from a not from like a
a newly instantiated model. It doesn't
a newly instantiated model. It doesn't
make sense. You're doing trajectory
make sense. You're doing trajectory
filtering in default puffer all. Yes, we
filtering in default puffer all. Yes, we
are doing trajectory filtering by
are doing trajectory filtering by
default. We're doing puffer advantage by
default. We're doing puffer advantage by
default. We are doing muon by default.
default. We are doing muon by default.
All the advancements are just in there
All the advancements are just in there
like by default for you to use.
Let's go through this and see if this
Let's go through this and see if this
makes sense. Still using Adam. Stop that
makes sense. Still using Adam. Stop that
Better. You're like, you're
Better. You're like, you're
trolling if you're using Adam.
You're straight trolling. That was like
You're straight trolling. That was like
one of the biggest advancements.
hidden config still all over the place.
hidden config still all over the place.
What do you mean hidden config still all
What do you mean hidden config still all
over the place? There's one there's like
over the place? There's one there's like
one config, right? Like the default
one config, right? Like the default
config just has all the parameters
config just has all the parameters
and d-help will list all of them.
I have to read your code to understand
I have to read your code to understand
the config.
By read the code, do you mean read the
By read the code, do you mean read the
read the config file or like the names
read the config file or like the names
are not explicit
I haven't ported to your config style.
I haven't ported to your config style.
I'm still using my own.
I'm still using my own.
I had to dig through puffer to
I had to dig through puffer to
understand the atom config.
So, you do have to read the any files
So, you do have to read the any files
and um I mean it's
you are sort of meant to just use the
you are sort of meant to just use the
any files. You can load stuff into a
any files. You can load stuff into a
dictionary if you really want to, but
dictionary if you really want to, but
then that's kind of like on you. Um
then that's kind of like on you. Um
again, like do you need
again, like do you need
are you looking for more than a list of
are you looking for more than a list of
names? Because like the atom parameters
names? Because like the atom parameters
are like atom beta 1 atom beta 2 atom
are like atom beta 1 atom beta 2 atom
epsilon or whatever right
epsilon or whatever right
and they are listed you don't have to
and they are listed you don't have to
read the code right like if you just run
read the code right like if you just run
d-help
d-help
it will list them for you
it will list them for you
in a way that is always up to date and
in a way that is always up to date and
that can't get out of sync.
exactly what I'm looking for. I'm not
exactly what I'm looking for. I'm not
using your version of main. I need my
using your version of main. I need my
modified personal train. Okay. So when
modified personal train. Okay. So when
you pip install it, you should still get
you pip install it, you should still get
the puffer trainer and that help will
the puffer trainer and that help will
still tell you what's in there
still tell you what's in there
and just run like puffer train puffer
and just run like puffer train puffer
breakout for instance
breakout for instance
d-help.
Why do we live when there's a star?
Why do we live when there's a star?
I managed to miss some things. I come
I managed to miss some things. I come
from neuroscience background and
from neuroscience background and
real-time learning sounds like a
real-time learning sounds like a
necessity actually training like the
necessity actually training like the
brain. So, okay, let me explain this
brain. So, okay, let me explain this
real quick. So, the reason this doesn't
real quick. So, the reason this doesn't
make sense is that the human brain is
make sense is that the human brain is
not an untrained neural network, right?
not an untrained neural network, right?
The human brain has a ton of priors
The human brain has a ton of priors
baked in and a heck of a lot more of
baked in and a heck of a lot more of
them that you get uh like general priors
them that you get uh like general priors
that you get early in development,
that you get early in development,
right? So, when you when you sit down to
right? So, when you when you sit down to
try to play Breakout, for instance, you
try to play Breakout, for instance, you
already know how to play the game
already know how to play the game
without having ever played it.
without having ever played it.
It's obvious. It's designed to be
It's obvious. It's designed to be
intuitive and obvious.
intuitive and obvious.
Not obvious or intuitive to the agent.
Not obvious or intuitive to the agent.
So if you want a better analog that
So if you want a better analog that
makes it obvious that real time learning
makes it obvious that real time learning
is not possible, we can screw up all the
is not possible, we can screw up all the
assets and like make a total mess out of
assets and like make a total mess out of
the data. And heck, we don't even have
the data. And heck, we don't even have
to present it in pixels. We can just
to present it in pixels. We can just
present it to you as a block of numbers
present it to you as a block of numbers
and then you try to play the game.
and then you try to play the game.
That's how the RL agent sees it.
making more progress to ML than
making more progress to ML than
neuroscience.
neuroscience.
Yeah,
turns out it's nice when you can
turns out it's nice when you can
actually like fully observe the system
actually like fully observe the system
you're working with.
Okay, I think that this is like a good
Okay, I think that this is like a good
this is a lot of good advice here.
this is a lot of good advice here.
I don't know the extent to which
I don't know the extent to which
people will be able to internalize it
because like appreciating this stuff
because like appreciating this stuff
requires just spending a bunch of time
requires just spending a bunch of time
in research.
in research.
I think that this will help. I think
I think that this will help. I think
that if I if I have three paragraphs
that if I if I have three paragraphs
basically that all revolve around the
basically that all revolve around the
idea of
idea of
Actually,
let's just do this.
or else that it's modeled after the way
or else that it's modeled after the way
the brain works. In general, you should
the brain works. In general, you should
assume that anything in ML that is
assume that anything in ML that is
modeled off of the way the brain works
modeled off of the way the brain works
is very very loosely so and it's mostly
is very very loosely so and it's mostly
modeled off of empirical results.
Okay, I think I'm happy with this these
Okay, I think I'm happy with this these
paragraphs.
I think that this can be
don't trust
I guess look for errors
about reason.
about reason.
I think just saying look for errors.
All I have to do is swap this sentence
All I have to do is swap this sentence
down to
Let me see how this paragraph works now.
Let me see how this paragraph works now.
And if so, I think we can move on to the
And if so, I think we can move on to the
rest of this
Okay, reply to one message.
Let me see what I missed here.
Let me see what I missed here.
Tactics strategy goal
Tactics strategy goal
from bio inpired agents
from bio inpired agents
biolas existed way before I'm LML.
biolas existed way before I'm LML.
Yeah. Uh
Yeah. Uh
I just finished training. Going to just
I just finished training. Going to just
eval enjoy the stream. Thanks for great.
eval enjoy the stream. Thanks for great.
Yeah, thanks for dropping by.
Oh, hey, we have a fair few people
Oh, hey, we have a fair few people
watching this. So, I'm going to start on
watching this. So, I'm going to start on
the RL specific portion of this in just
the RL specific portion of this in just
a second here.
a second here.
So, this is what 10 pages, probably nine
So, this is what 10 pages, probably nine
with the notes at the bottom.
with the notes at the bottom.
No, like 10 pages.
Okay. So, we've got like a 10page
Okay. So, we've got like a 10page
article
article
and it's
page or two on the intro
maybe six, no, five or six on
maybe six, no, five or six on
programming.
programming.
Then it's really only like two or three
Then it's really only like two or three
pages on ML.
And I think that this is
And I think that this is
I think that this is the information I
I think that this is the information I
want to present.
I think pretty much of everything,
this is probably the most valuable
this is probably the most valuable
piece of information that I could give
piece of information that I could give
myself
myself
because like I think when I started
because like I think when I started
research
I think that I started thinking about
I think that I started thinking about
like okay you know what is here okay
like okay you know what is here okay
these are the papers that have been done
these are the papers that have been done
this is the stuff that's been done let
this is the stuff that's been done let
me pattern match and figure out what I
me pattern match and figure out what I
can do based on this but I didn't take
can do based on this but I didn't take
into account that a lot of the work is
into account that a lot of the work is
just wrong
just wrong
so you can't really make progress when
so you can't really make progress when
you hold in your head many mutually
you hold in your head many mutually
incompatible results without realizing
incompatible results without realizing
it
it
so I think that this is a fundamentally
so I think that this is a fundamentally
better way of approaching research.
better way of approaching research.
This would have been useful to me.
Hang on. Let me go check on one thing.
Hang on. Let me go check on one thing.
My parents are at the window for some
My parents are at the window for some
reason. I'll uh they're visiting. I
reason. I'll uh they're visiting. I
don't know what they're doing. I'll be
don't know what they're doing. I'll be
right back. Walk around a minute because
right back. Walk around a minute because
I just wrote a whole bunch of stuff. And
I just wrote a whole bunch of stuff. And
then we will start on the RL guide. And
then we will start on the RL guide. And
uh any feedback you guys have, any stuff
uh any feedback you guys have, any stuff
that you want to uh see included, please
that you want to uh see included, please
write it all down. Comment it here. And
write it all down. Comment it here. And
then uh this this is the reason I'm
then uh this this is the reason I'm
streaming this is so I can get feedback
streaming this is so I can get feedback
on what you guys want to see and what
on what you guys want to see and what
questions you have.
All
right.
Time to write the RL section. I want a
Time to write the RL section. I want a
puffer plushy. You and me both.
puffer plushy. You and me both.
We can get uh we can get merch once we
We can get uh we can get merch once we
get
get
I don't know nine figures of revenue or
I don't know nine figures of revenue or
some whatever.
If the puffer is successful, we can make
If the puffer is successful, we can make
puffer plushies.
Let's go grab all the content from the
Let's go grab all the content from the
RL guide.
I'm going to do a little bit of thinking
I'm going to do a little bit of thinking
out loud on this. So,
there are kind of two parts to this,
there are kind of two parts to this,
right?
Like this type of thing.
Like this type of thing.
This is the ultra practical.
This is the ultra practical.
The like ultra ultra practical
version of what I could cover here.
version of what I could cover here.
How do I implement an environment?
Designing rewards is like fair
Designing rewards is like fair
networks. How to tune it.
networks. How to tune it.
Bug hunting.
Bug hunting.
Benchmarks.
Let me look at my existing quick start
Let me look at my existing quick start
guide as a reference.
guide as a reference.
See where I want to depart from there.
So I do uh
So I do uh
what is RL
covered
covered
like a bunch of common terms.
like a bunch of common terms.
I kind of just shotgun all the terms at
I kind of just shotgun all the terms at
you
you
and I give these like hiffy this is how
and I give these like hiffy this is how
to understand this terms.
perspective.
Man, this is actually a really good
Man, this is actually a really good
guide to try to beat.
People want more than this though. So
People want more than this though. So
let me think.
think exactly how to do this.
I mean, if I think about it,
I mean, if I think about it,
I kind of just wrote something this
I kind of just wrote something this
style
style
for programming in ML, didn't I?
Like that piece that I wrote compliments
Like that piece that I wrote compliments
this piece.
Okay.
The bar is higher than I thought. I set
The bar is higher than I thought. I set
my own bar pretty high.
I have to understand better, I think,
I have to understand better, I think,
where people are getting confused and
where people are getting confused and
what the limitations are.
What have I given people here?
What have I given people here?
I've given people common terms and how
I've given people common terms and how
to think about them.
to think about them.
A lot of general perspective that's very
A lot of general perspective that's very
valuable, but it's going to be
valuable, but it's going to be
it's going to be a lot to process for
it's going to be a lot to process for
newcomers.
And then I have some general tricks.
It's the fact that this is not threaded
It's the fact that this is not threaded
cleanly enough into
cleanly enough into
like actually showing you how to build
like actually showing you how to build
stuff, right?
So,
I have this quick start guide and I have
I have this quick start guide and I have
the docs
and there's somehow there's a gap
and there's somehow there's a gap
between those two Thanks.
really
really what I've done here right
and it makes sense that I would do this
and it makes sense that I would do this
because I wrote the other one so like
because I wrote the other one so like
this is the style which I write off.
This could be an ML quick start,
This could be an ML quick start,
the programming quick start.
Yeah. So, if I think of what I've
Yeah. So, if I think of what I've
written so far is just like
terms, tips, my best general advice,
and then I think of the docs
and then I think of the docs
as taking you through how to build
as taking you through how to build
stuff.
the gap between those two things.
Yeah. Like
Yeah. Like
on one hand, you have a relatively
on one hand, you have a relatively
simple tutorial that shows you how to
simple tutorial that shows you how to
build something
a new area.
a new area.
And on the other hand, you have a lot of
And on the other hand, you have a lot of
really good general advice for the same
really good general advice for the same
area.
A lot of really good general advice for
A lot of really good general advice for
this area,
this area,
but then you don't really know how to
but then you don't really know how to
having built a simple thing. How do you
having built a simple thing. How do you
use all this advice to do much more
use all this advice to do much more
complicated stuff?
How do you do that?
Is there anything close to comparable?
I think people want
do this, do this, do this, do this, do
do this, do this, do this, do this, do
this.
Is that what people want?
They kind of want a syllabus. I guess
makes sense. learning how to like
makes sense. learning how to like
I can't really assume that people just
I can't really assume that people just
know how to teach themselves things,
know how to teach themselves things,
right? That is also
that itself is a very difficult to learn
that itself is a very difficult to learn
skill.
We're not writing a blog on how to teach
We're not writing a blog on how to teach
yourself thing. That's too meta.
I mean the the best one of the best
I mean the the best one of the best
talks I've ever seen
talks I've ever seen
was on it was on game design
was on how to build tutorials
was on how to build tutorials
and it was just a one-s sentence
and it was just a one-s sentence
explanation. It's teach gradually
explanation. It's teach gradually
through experience. It
through experience. It
teach gradually through experience.
Did he get that from somewhere?
stuff like this.
stuff like this.
This needs to exist because some of this
This needs to exist because some of this
I can't teach you. I can't teach you
I can't teach you. I can't teach you
gradually through experience because you
gradually through experience because you
don't really need to like you shouldn't
don't really need to like you shouldn't
really experience it. You kind of just
really experience it. You kind of just
need to know that it exists.
need to know that it exists.
Other things I can teach here.
I can definitely make more concrete like
I can definitely make more concrete like
the level of projects and order you
the level of projects and order you
should take them Come on.
But that's not I don't think that's
But that's not I don't think that's
enough
because the thing is like
because the thing is like
this is all
this is all
all This stuff is like supporting
all This stuff is like supporting
knowledge around fundamentals.
I kind of want to do like my own minimal
fundamental.
Reading a blog is not experienced
Reading a blog is not experienced
problem.
I could do
I could do
thing implement this thing. Implement
thing implement this thing. Implement
this thing implement this.
The problem is a lot of these things are
The problem is a lot of these things are
like I can't do PO go implement PO right
like okay see you in a
I didn't think it would be this
I didn't think it would be this
difficult actually.
I kind of figured that I would come back
I kind of figured that I would come back
to this and it would just be like kind
to this and it would just be like kind
of mediocre. This is really good
of mediocre. This is really good
content. It's the presentation of the
content. It's the presentation of the
content I think that's a problem.
I'm really having a tough time actually
I'm really having a tough time actually
figuring out how we so like so the core
figuring out how we so like so the core
advice
advice
right the core advice comes down to
right the core advice comes down to
build RL environments
spend some fraction of your time reading
spend some fraction of your time reading
papers
papers
And then here's a blog post to tell you
And then here's a blog post to tell you
how to think about a lot of the things
how to think about a lot of the things
you're building
you're building
as well as the papers you're reading.
But somehow something's getting lost in
But somehow something's getting lost in
that
if you are contributed to speedruns of a
if you are contributed to speedruns of a
few few simple environments
few few simple environments
already solved it would be helpful.
already solved it would be helpful.
Yeah, but like so how do I get from
Yeah, but like so how do I get from
there to helping people understand this
there to helping people understand this
stuff, right? Because I literally all I
stuff, right? Because I literally all I
do is I run puffer sweep
do is I run puffer sweep
on some environments and like hey look
on some environments and like hey look
now we have some parameters so that when
now we have some parameters so that when
you press train it trains fast
like how to use puffer lib basics of how
like how to use puffer lib basics of how
to use puffer lib are the docs right
to use puffer lib are the docs right
that's not how to learn reinforcement
that's not how to learn reinforcement
learning
Like the key is that Puffer Lib lets you
Like the key is that Puffer Lib lets you
actually do reinforcement learning
actually do reinforcement learning
rather quickly while you're still
rather quickly while you're still
learning some of the basics, which not a
learning some of the basics, which not a
thing that you used to be able to do.
Like you can build you can basically
Like you can build you can basically
build an environment.
You can
You can
fix like some common error classes
to get a sense for the problem.
If I view this existing thing which
If I view this existing thing which
maybe I make some improvements to this,
maybe I make some improvements to this,
right? If I view this as like the
right? If I view this as like the
general glossery
general glossery
perspective and stuff,
what does this need as a what does this
what does this need as a what does this
need for glue? Right.
Well, we could use some very small
Well, we could use some very small
amount of math
amount of math
producing
producing
policy gradients, I suppose.
what exactly you're trying to teach
what exactly you're trying to teach
people. I'm trying to do an updated uh
people. I'm trying to do an updated uh
reinforcement learning guide,
reinforcement learning guide,
the reinforcement learning as a whole.
So, what I basically have here, right,
So, what I basically have here, right,
is I have my old RL quick start guide,
is I have my old RL quick start guide,
which upon looking at the information in
which upon looking at the information in
here is very, very good and is still all
here is very, very good and is still all
up to date.
I just wrote
and this was by request because normally
and this was by request because normally
I wouldn't write something like
I wouldn't write something like
I wouldn't write stuff for the real
I wouldn't write stuff for the real
fundamentals like this but I wrote a
fundamentals like this but I wrote a
programming like guide and I wrote an ML
programming like guide and I wrote an ML
guide general ML general programming
I could have do this, understand this,
I could have do this, understand this,
right? Like do this, understand that.
right? Like do this, understand that.
So I could say
So I could say
you know make a simple environment
you know make a simple environment
understand
understand
these like these common classes of
these like these common classes of
errors. Okay read this paper understand
errors. Okay read this paper understand
this about the paper and about ML and I
this about the paper and about ML and I
could do that.
That's probably the thing that's
That's probably the thing that's
missing.
missing.
People
People
would appreciate a little step-by-step
would appreciate a little step-by-step
guide.
guide.
There is a there is a step-by-step guide
There is a there is a step-by-step guide
for a very simple environment, right?
Here's a very very simple environment
Here's a very very simple environment
written in Python.
where everything is commented
and then here's the same thing in Ced
structure of an enverse simulator.py.
Okay, so there are two different things
Okay, so there are two different things
here, right? One of these is like, hey,
here, right? One of these is like, hey,
can you make some like clearer content
can you make some like clearer content
on puffer lib?
on puffer lib?
And another one is, can we have clearer
And another one is, can we have clearer
content on RL?
But I think that the thing that's
But I think that the thing that's
probably missing here
probably missing here
is like how do I write a puffer n? It
is like how do I write a puffer n? It
should be completely obvious if you
should be completely obvious if you
already know other things in RL and the
already know other things in RL and the
thing is you don't.
So it's like for instance if you know
So it's like for instance if you know
how Jim does its environments
how Jim does its environments
which if you're in RL at all you do then
which if you're in RL at all you do then
like the puffer end format's pretty
like the puffer end format's pretty
obvious from that
obvious from that
cuz it's like just that with all the
cuz it's like just that with all the
slow parts chopped off.
It's pretty helpful, but most people
It's pretty helpful, but most people
ask,
I guess.
I guess.
Do I want to try to do this in isolation
Do I want to try to do this in isolation
though is the thing
and puffer instead of RL
then they can learn RL through puffer.
Let me think how I can do this then.
So let's say that I expand this guide.
So let's say that I expand this guide.
Okay,
Okay,
let's say that I expand this guide and I
let's say that I expand this guide and I
add it's really only a few paragraphs,
add it's really only a few paragraphs,
right? to just essentially explain some
right? to just essentially explain some
of the things that is are in the
of the things that is are in the
comments of the files on how an
comments of the files on how an
environment is structured.
The problem formulation and problem
The problem formulation and problem
solving for RL, right?
solving for RL, right?
That's different from teaching people
That's different from teaching people
puffer.
Okay. So, let's say that I update this
Okay. So, let's say that I update this
guide.
You know, I kind of like the idea of
You know, I kind of like the idea of
having a few different articles,
having a few different articles,
right, as resources and then having a
right, as resources and then having a
glue article where like this is how to
glue article where like this is how to
learn reinforcement learning. It's like
learn reinforcement learning. It's like
are you new to programming in ML? Okay,
are you new to programming in ML? Okay,
go read this article and like do this,
go read this article and like do this,
this, and this. All right. Are you new
this, and this. All right. Are you new
like cool, you've done that or you're
like cool, you've done that or you're
like you know how to program? Cool. Uh
like you know how to program? Cool. Uh
you want to like you want to learn
you want to like you want to learn
reinforcement learning. You're going to
reinforcement learning. You're going to
start by writing a very basic puffer
start by writing a very basic puffer
environment to get just a feel for
environment to get just a feel for
things. And I link you to a revised
things. And I link you to a revised
version of this article right here or
version of this article right here or
this doc right here which could be an
this doc right here which could be an
article. Okay?
And that uh and the revised version will
And that uh and the revised version will
include the things that you guys are
include the things that you guys are
asking for.
Just problem formulation plus puffer.
Just problem formulation plus puffer.
It's a lot of stuff.
I definitely want to improve this.
any plans to make it easy for people who
any plans to make it easy for people who
just want to import instead of cloning.
just want to import instead of cloning.
Not sure if it's been done yet. You can
Not sure if it's been done yet. You can
there's uh there's a demo on this as
there's uh there's a demo on this as
well.
well.
Buffer importable.
Yeah. The problem is that if you want to
Yeah. The problem is that if you want to
like make your own environment, right,
like make your own environment, right,
you have to compile it and like it's
you have to compile it and like it's
annoying as hell to compile like C
annoying as hell to compile like C
extensions for Python unless you're
extensions for Python unless you're
going to hook into the tooling of an
going to hook into the tooling of an
existing package. Puffer li.
So you can absolutely use puffer liib.
So you can absolutely use puffer liib.
You can use our trainer on other stuff,
You can use our trainer on other stuff,
but if you want to build your own
but if you want to build your own
environment, it's still easiest to clone
environment, it's still easiest to clone
it for the sole reason that you have to
it for the sole reason that you have to
like you have to compile it somehow.
Okay, let's say that I'm going to start
Okay, let's say that I'm going to start
writing a little bit on the article.
writing a little bit on the article.
I'm going to update the docs for the
I'm going to update the docs for the
tutorial to include because like the
tutorial to include because like the
thing that you're asking for for like uh
thing that you're asking for for like uh
the step function and that stuff that's
the step function and that stuff that's
like two paragraphs. I can totally add
like two paragraphs. I can totally add
that.
Okay, I actually have some good ideas
Okay, I actually have some good ideas
now on how we can do this. Use the
now on how we can do this. Use the
restroom real quick and then we will uh
restroom real quick and then we will uh
we'll do this.
Oops.
Weird Python multipprocessing seg fault
Weird Python multipprocessing seg fault
when sweeping.
when sweeping.
Uh it's possible that your environment
Uh it's possible that your environment
has a seg fault in it.
Usually it's that your that your uh your
Usually it's that your that your uh your
environment has a rare seg.
Yeah, you can compile with it's a little
Yeah, you can compile with it's a little
tricky, but you can compile with debug
tricky, but you can compile with debug
equals true. Ideally, like what you
equals true. Ideally, like what you
should do is you should try to find a
should do is you should try to find a
set of hypers or something that actually
set of hypers or something that actually
reproduces this bug. If you can get a
reproduces this bug. If you can get a
single experiment where it happens
single experiment where it happens
within a few minutes consistently,
within a few minutes consistently,
you can compile uh puffer lib with debug
you can compile uh puffer lib with debug
equals true and um you can actually get
equals true and um you can actually get
stack traces
stack traces
You can actually get where this egg
You can actually get where this egg
fault
Okay.
Okay.
Go here.
Go here.
Two billion steps. Lovely.
Okay,
take get rid of this.
take get rid of this.
Make absolutely sure this is saved
Make absolutely sure this is saved
though. Hang on.
Yes.
Okay. Now have this. Let's make sure
that we now have this.
that we now have this.
It's okay words. Good length.
Hey Spencer, we got um
Hey Spencer, we got um
we got the general purpose article. We
we got the general purpose article. We
got a very good draft of this done.
got a very good draft of this done.
This is 2k words
This is 2k words
programming and ML and I'm starting on
programming and ML and I'm starting on
the main article now. And I the hardest
the main article now. And I the hardest
thing and I spent a lot of time on this
thing and I spent a lot of time on this
is figuring out the format and like how
is figuring out the format and like how
I wanted to present information.
I wanted to present information.
I think I figured it out. Like all these
I think I figured it out. Like all these
other articles I have, they're like
other articles I have, they're like
glosseries and like tips and general
glosseries and like tips and general
advice and such. And I like I think I
advice and such. And I like I think I
what I want to do is I want to have a
what I want to do is I want to have a
main article that says do this, do this,
main article that says do this, do this,
do this, do this, do this, do this. Now
do this, do this, do this, do this. Now
you know RL and it's going to reference
you know RL and it's going to reference
all the other stuff that I've done. So,
all the other stuff that I've done. So,
I actually don't really need to rewrite
I actually don't really need to rewrite
my old RL quick start guide as much as I
my old RL quick start guide as much as I
need to reference it and get you to do
need to reference it and get you to do
things around it.
What effect does a good sweep have
What effect does a good sweep have
versus arbitrarily picking
versus arbitrarily picking
hyperparameters? Well, it depends
hyperparameters? Well, it depends
whether you want your uh your training
whether you want your uh your training
to actually work or not.
target audiences to bring in
target audiences to bring in
uh new contributors,
uh new contributors,
new just generally folks interested in
new just generally folks interested in
reinforcement learning, bigger audience
reinforcement learning, bigger audience
in general. Uh yeah, it's it's mostly
in general. Uh yeah, it's it's mostly
just to grow Puffer LIIB as a platform
just to grow Puffer LIIB as a platform
and and everything that we do.
and and everything that we do.
So hopefully these do pretty well. We'll
So hopefully these do pretty well. We'll
see. the uh the pedibyte article did
see. the uh the pedibyte article did
incredibly well and uh we got multiple
incredibly well and uh we got multiple
new leads uh out of that on the business
new leads uh out of that on the business
side as well as quite a bit of interest
side as well as quite a bit of interest
on X.
So doing some
What's a good counterpart to squared
What's a good counterpart to squared
that would be super easy for someone to
that would be super easy for someone to
build?
Not cartpole
physics.
Okay.
policy gradient blog, I believe.
Yeah. So, this has the basics already.
Yeah, this is fine.
I should maybe make one of these.
I could probably do it more simply to be
I could probably do it more simply to be
fair now.
is the RMS prop.
Oh, yeah.
A few small things are dated.
binding vest step bind vec render vec
binding vest step bind vec render vec
close. Should these always be called in
close. Should these always be called in
the class that inherits from
the class that inherits from
pufferpufferm
pufferpufferm
toc training speed up? So um those are
toc training speed up? So um those are
the hooks into the C library. You'll
the hooks into the C library. You'll
notice that there's not really any logic
notice that there's not really any logic
in the uh the Python files because the
in the uh the Python files because the
actual logic is in C.
actual logic is in C.
So you have to call the logic from C
So you have to call the logic from C
somehow.
Oh yeah, the pong thing.
You make sure that this gives them
You make sure that this gives them
enough information like the readers
enough information like the readers
enough information to like
When you make a new M, do you start with
When you make a new M, do you start with
a certain template? Dur maybe ocean/
a certain template? Dur maybe ocean/
template. Yes, that is literally what it
template. Yes, that is literally what it
is for.
Copy paste that and then just change all
Copy paste that and then just change all
the templates to your end name.
in the uh the quick start guide as well.
in the uh the quick start guide as well.
I mean, not the quick start guide,
I mean, not the quick start guide,
that's in the docs as well.
wanted reward.
thing with this. Let me see what else I
thing with this. Let me see what else I
want to give people at this stage. Uh
want to give people at this stage. Uh
before you write another environment.
before you write another environment.
Okay, actually I know what I'm going to
Okay, actually I know what I'm going to
do.
do.
I give them target or convert. Give them
I give them target or convert. Give them
target.
Well, it's 400 p.m. already.
That's okay.
I'm in a good groove now.
Yeah. So they just see a normalized
Yeah. So they just see a normalized
distance to everyone.
Where the hell do I give them reward?
Where the hell do I give them reward?
Oh, here it is. Update goals.
Okay, so resources for this one.
any other references I need to give
any other references I need to give
people at this point.
I want to give people
100 lines.
Any
other simple ones in here?
Yeah.
common screw-ups. Do I have the common
common screw-ups. Do I have the common
screw-ups in?
I'm going to just add
I'm going to just add
common screw-ups.
common screw-ups.
I'm just going to make sure I do that in
I'm just going to make sure I do that in
the blog.
right?
Yeah. I'm going to do wrong horizon to
Yeah. I'm going to do wrong horizon to
blog.
blog.
So, we'll just do do
So, we'll just do do
long horizon
long horizon
box. Uh
Where did all the tricks go?
Yeah.
PO have generalized advantage estimation
PO have generalized advantage estimation
as a description in there or is it
as a description in there or is it
separate?
separate?
Really big fan of poper. Good work.
Really big fan of poper. Good work.
Thank you very much. I'm working on a
Thank you very much. I'm working on a
guide for beginners at the moment.
guide for beginners at the moment.
More of a comprehensive reinforcement
More of a comprehensive reinforcement
learning guide.
They don't even have uh J in here, do
They don't even have uh J in here, do
they?
What software using to write this? It's
What software using to write this? It's
just an X article.
Yeah, they don't even have it in here,
Yeah, they don't even have it in here,
do they?
do they?
I got to link both papers.
really liked Lillian's blog for a
really liked Lillian's blog for a
beginner's guide to RL. Oh, yeah.
Ah,
Ah,
this is too much math.
this is too much math.
Yeah, this is way too much math for
Yeah, this is way too much math for
this.
Yeah. No, this is this is not what I
Yeah. No, this is this is not what I
would suggest. This is way way too much
would suggest. This is way way too much
math for this.
Yeah, but you don't The thing is you
Yeah, but you don't The thing is you
don't need this much
don't need this much
and this is not actually like useful
and this is not actually like useful
math. Like honestly, one of the best
math. Like honestly, one of the best
things you can do in RL is completely
things you can do in RL is completely
ignore this MDP formulation every of
ignore this MDP formulation every of
everything. It's dated and irrelevant.
everything. It's dated and irrelevant.
Bellman like kind of don't really need
Bellman like kind of don't really need
to know this up front. Honestly, the
to know this up front. Honestly, the
most important thing is
most important thing is
even covered here.
Yeah, Carpath I think Carpathy's blog is
Yeah, Carpath I think Carpathy's blog is
way better than this. But yeah, this is
way better than this. But yeah, this is
the important bit here. the policy
the important bit here. the policy
gradient theorem.
Puffernet.h looks powerful but
Puffernet.h looks powerful but
intimidating.
intimidating.
Okay, so Tim Puffernet is literally just
Okay, so Tim Puffernet is literally just
for our web demos.
for our web demos.
It's not actually used for training.
It's not actually used for training.
It's just so that we can put our tiny
It's just so that we can put our tiny
neural netset on the web because it's C.
neural netset on the web because it's C.
So it compiles to WSOM.
So it compiles to WSOM.
Uh the the blog that I'm going to
Uh the the blog that I'm going to
recommend over this is Carpathy's old um
recommend over this is Carpathy's old um
Carpathy's old policy gradient blog by
Carpathy's old policy gradient blog by
far
Pong the pixels. Yeah, I'm writing this
Pong the pixels. Yeah, I'm writing this
all up now. And by the way, this is
all up now. And by the way, this is
actually in my current guide. It's just
actually in my current guide. It's just
not in this nice form, but I'm like I'm
not in this nice form, but I'm like I'm
kind of redoing
this real?
this real?
What do you mean is this real? Mike,
What do you mean is this real? Mike,
how's it going?
how's it going?
Tell us the secret to GPT5.
Tell us the secret to GPT5.
Uh so what they did is they stuffed Sam
Uh so what they did is they stuffed Sam
Alman into a box and uh what they did is
Alman into a box and uh what they did is
they overclocked him dramatically. So
they overclocked him dramatically. So
whenever you're querying GPT5, you're
whenever you're querying GPT5, you're
actually just asking a question directly
actually just asking a question directly
to turbo mode Sam Alman and he answers
to turbo mode Sam Alman and he answers
it personally.
it personally.
Where's your current guide? It's on
Where's your current guide? It's on
puffer.ai and it's also on X.
puffer.ai and it's also on X.
We have a blog on puffer.ai. I got to
We have a blog on puffer.ai. I got to
fix the top couple articles on there. Uh
fix the top couple articles on there. Uh
some formatting issues lately, but it's
some formatting issues lately, but it's
on there. It's also an X
mainly locked in. when you're typing
mainly locked in. when you're typing
fast
fast
without smiling.
I mean, this is kind of chill day. I'm
I mean, this is kind of chill day. I'm
just writing some stuff and normally
just writing some stuff and normally
building things,
building things,
guys. Actually, oh, that was uh that was
guys. Actually, oh, that was uh that was
a different startup. Like, that wasn't a
a different startup. Like, that wasn't a
different company that was actually
different company that was actually
doing that. I think that's happened a
doing that. I think that's happened a
couple times.
That's like I think that's actually
That's like I think that's actually
happened a couple of times.
I mean it's basically like a therronos
I mean it's basically like a therronos
but for AI, right? Kind of the
but for AI, right? Kind of the
situation.
You integrate Google Analytics on Puffer
You integrate Google Analytics on Puffer
AI. I don't think I did.
AI. I don't think I did.
Can you even Can you just go to like
No, I don't think I I didn't do this on
No, I don't think I I didn't do this on
our site.
duck try to poach you? I mean, unless
duck try to poach you? I mean, unless
I've missed an email. No,
what are you linking me?
Oh,
you need because you can track user
you need because you can track user
behavior.
behavior.
Why do you like AI?
Why do you like AI?
Uh, I mean, I can build stuff that
Uh, I mean, I can build stuff that
change the world from my chair here.
change the world from my chair here.
It's pretty cool. It's like fundamental
It's pretty cool. It's like fundamental
technological advancement of many many
technological advancement of many many
things.
things.
Did skip C render in training mode? Yes.
User have hard time find docs. I don't
User have hard time find docs. I don't
think it'll actually tell you that.
I searched RL for like once yesterday
I searched RL for like once yesterday
and now this pops up. That's funny.
and now this pops up. That's funny.
I mean, it's cool to see that there's
I mean, it's cool to see that there's
that much exposure given that it's like
that much exposure given that it's like
a pretty small channel. It's a niche
a pretty small channel. It's a niche
topic, so like there's not that much
topic, so like there's not that much
content out there. But yeah, welcome.
content out there. But yeah, welcome.
I'm Joseph. I uh I stream all of my
I'm Joseph. I uh I stream all of my
research. So, you'll mostly see me
research. So, you'll mostly see me
building new algorithms, new
building new algorithms, new
environments, applying RL to new stuff,
environments, applying RL to new stuff,
all sorts of things. And then every so
all sorts of things. And then every so
often I uh write articles and things on
often I uh write articles and things on
a little bit of the educational stuff
a little bit of the educational stuff
though it's mainly research.
though it's mainly research.
Currently experimenting with a bunch of
Currently experimenting with a bunch of
RLMs. Each RM takes like 20 hours for
RLMs. Each RM takes like 20 hours for
one seed. This is why you use Puffer
one seed. This is why you use Puffer
Lib. Actually, let me just give you a
Lib. Actually, let me just give you a
quick little demo here. All right.
quick little demo here. All right.
Let me just show you why I use Puffer
Let me just show you why I use Puffer
Lib.
Okay. Puffer Eval puffer pong.
Okay. Puffer Eval puffer pong.
This is going to load up a untrained
This is going to load up a untrained
neural net. So this is a neural net that
neural net. So this is a neural net that
has not been trained. It's very bad,
has not been trained. It's very bad,
right? The blue one. It's losing. Yes.
right? The blue one. It's losing. Yes.
Okay. Puffer. Train. Puffer pong.
Do the elevator music.
Do the elevator music.
Just kidding. It's actually literally
Just kidding. It's actually literally
already done training.
I just have to give it the latest model
I just have to give it the latest model
which we just trained.
And now you're playing Pong.
That's literally all there is to it.
That's literally all there is to it.
So from uh however many hours it's
So from uh however many hours it's
taking you to literally 5 seconds.
taking you to literally 5 seconds.
What algorithm?
What algorithm?
It is an enhanced variant of PO that is
It is an enhanced variant of PO that is
the product of our own research at
the product of our own research at
Puffer.
Puffer.
How many GPUs you got? That just ran on
How many GPUs you got? That just ran on
my desktop here, which I'm also using
my desktop here, which I'm also using
for streaming. So, one
for streaming. So, one
technically like probably 08 GPUs if the
technically like probably 08 GPUs if the
is taking like 20%.
And you can see that we have like 25
And you can see that we have like 25
different environments on puffer.ai.
different environments on puffer.ai.
Not all of them train that fast, but
Not all of them train that fast, but
many of them do. How long would it take
many of them do. How long would it take
for vision based? Uh, you'd be
for vision based? Uh, you'd be
bottlenecked by the rendering
bottlenecked by the rendering
essentially. But I think that
essentially. But I think that
technically
technically
you could probably I actually we have
you could probably I actually we have
done this. I think you can do it in a
done this. I think you can do it in a
few minutes if you really optimize, but
few minutes if you really optimize, but
it's a fair bit harder.
it's a fair bit harder.
How many GPUs do you have? Well, I have
How many GPUs do you have? Well, I have
20 overall. like in the background
20 overall. like in the background
there. You can see I have a whole bunch
there. You can see I have a whole bunch
of machines set up on those racks.
of machines set up on those racks.
Hello.
Not much contents available about this
Not much contents available about this
topic. Is there any reason why is it an
topic. Is there any reason why is it an
untapped topic? Uh it's really hard and
untapped topic? Uh it's really hard and
if you like if you check some of the
if you like if you check some of the
stuff on Puffer, you'll kind of see why.
stuff on Puffer, you'll kind of see why.
But pretty much we've like right here
But pretty much we've like right here
we've made the whole field a thousand
we've made the whole field a thousand
times faster in the last year.
times faster in the last year.
For context, um my PhD is in multi-agent
For context, um my PhD is in multi-agent
reinforcement learning. I've done a lot
reinforcement learning. I've done a lot
of work on speeding up reinforcement
of work on speeding up reinforcement
learning, uh different environments,
learning, uh different environments,
different tools, things like that. And
different tools, things like that. And
it's really only been since I graduated
it's really only been since I graduated
uh that I've been able to fully build
uh that I've been able to fully build
this stuff. And I essentially like I had
this stuff. And I essentially like I had
to rewrite the entire stack of
to rewrite the entire stack of
reinforcement learning to make all this
reinforcement learning to make all this
work. And before I did that, like if you
work. And before I did that, like if you
look at any of the other libraries,
look at any of the other libraries,
everything was just really really slow.
everything was just really really slow.
It was kind of hard to get meaningful
It was kind of hard to get meaningful
results. Uh as the other fellow said
results. Uh as the other fellow said
here, it was taking like forever to do
here, it was taking like forever to do
any basic experiments.
Now you're just bragging. I mean 20 GPUs
Now you're just bragging. I mean 20 GPUs
is not a lot for research standards.
Hey, Joseph.
I'm trying to
on you.
Side of RL is a nightmare. How many
Side of RL is a nightmare. How many
seeds? How many eval? Not to mention
seeds? How many eval? Not to mention
hyper prams. We've fixed a lot of that.
hyper prams. We've fixed a lot of that.
What if I'm making a new novel algorithm
What if I'm making a new novel algorithm
and I want to benchmark against DQN on a
and I want to benchmark against DQN on a
bunch of M? How does Puffer there help
bunch of M? How does Puffer there help
there? So, have you seen Clean RL?
there? So, have you seen Clean RL?
Puffer is not that much more
Puffer is not that much more
complicated. You'd basically just take
complicated. You'd basically just take
our trainer, you'd like remove the 200
our trainer, you'd like remove the 200
lines of code that are actually PO and
lines of code that are actually PO and
you would add your algorithm there and
you would add your algorithm there and
then you would test across those two
then you would test across those two
things
in practice. So, Pufferlib doesn't work
in practice. So, Pufferlib doesn't work
like other libraries, right? There are a
like other libraries, right? There are a
lot of libraries that are devoted to
lot of libraries that are devoted to
just having all the algorithms. The
just having all the algorithms. The
thing is they're all really slow and
thing is they're all really slow and
they're all really bad. But that's not
they're all really bad. But that's not
what we do. We have our own algorithm
what we do. We have our own algorithm
that is just the fastest and the best.
that is just the fastest and the best.
And uh we like as we develop more stuff
And uh we like as we develop more stuff
on it, we test versus the old version of
on it, we test versus the old version of
that algorithm to see if things have
that algorithm to see if things have
improved.
improved.
What was your bachelor's? Computer
What was your bachelor's? Computer
science, AI, same thing. I'm mainly
science, AI, same thing. I'm mainly
using SP3 for everything. Okay, so
using SP3 for everything. Okay, so
Huffer lib is going to be both simpler
Huffer lib is going to be both simpler
and a thousand times faster.
It's like actually download it and try
It's like actually download it and try
it. You can pip install it and you can
it. You can pip install it and you can
literally confirm for yourself in like
literally confirm for yourself in like
two minutes.
Even clean RL is slow. Yes. So clean RL
Even clean RL is slow. Yes. So clean RL
is also slow. You can think of puffer
is also slow. You can think of puffer
lib as clean RL but fast while trying to
lib as clean RL but fast while trying to
keep things as simple as possible.
keep things as simple as possible.
Understanding that of course it has to
Understanding that of course it has to
be a little bit more complicated in
be a little bit more complicated in
order to make it a thousand times faster
order to make it a thousand times faster
and support all the environments and all
and support all the environments and all
that.
that.
Clean RL is awesome. Uh it's really
Clean RL is awesome. Uh it's really
really nice overall but yeah we we just
really nice overall but yeah we we just
had to make it fast is all
had to make it fast is all
your algorithm better be a good one.
your algorithm better be a good one.
I'll be experiment
SP3 has been a nightmare. My use case is
SP3 has been a nightmare. My use case is
to test my novel algorithm. Yeah. So I
to test my novel algorithm. Yeah. So I
would just like go check puffer lab,
would just like go check puffer lab,
right? Pick some environments, run
right? Pick some environments, run
baselines, and then just make a fork and
baselines, and then just make a fork and
just do your algorithm there. Like the
just do your algorithm there. Like the
code is really not that bad. Let me show
code is really not that bad. Let me show
you. It's a heck of a lot easier than
you. It's a heck of a lot easier than
SP3. I can guarantee you that.
SP3. I can guarantee you that.
Okay, this is our entire trainer. It's a
Okay, this is our entire trainer. It's a
thousand lines.
thousand lines.
Uh the only actual relevant code for
Uh the only actual relevant code for
training is like the first maybe three
training is like the first maybe three
or 400 lines.
or 400 lines.
That's pretty much it.
That's pretty much it.
This is a standard PO implementation
This is a standard PO implementation
except that we have our know our
except that we have our know our
innovations on top of it. So we've got
innovations on top of it. So we've got
this prioritize replay thing. We've got
this prioritize replay thing. We've got
custom advantage function. A few other
custom advantage function. A few other
small differences.
small differences.
And then here's our eval loop.
There's some extra lines in here because
There's some extra lines in here because
we do a bunch of profiling. You can make
we do a bunch of profiling. You can make
sure that everything is fast and like we
sure that everything is fast and like we
have some speed optimizations.
have some speed optimizations.
But
But
we really really work hard to keep it
we really really work hard to keep it
simple. And I can guarantee you 100%
simple. And I can guarantee you 100%
that you will not find anything anywhere
that you will not find anything anywhere
close to this speed uh or any like
close to this speed uh or any like
anything close to this speed that's
anything close to this speed that's
anywhere near as simple. Or heck, you
anywhere near as simple. Or heck, you
won't find anything anywhere near this
won't find anything anywhere near this
fast in general. Like this is faster
fast in general. Like this is faster
than most of the Jacks repos by a factor
than most of the Jacks repos by a factor
of three or four in literally PyTorch
of three or four in literally PyTorch
eager mode.
I mean, you can see all the different
I mean, you can see all the different
agents that we've trained on here. Like
agents that we've trained on here. Like
Breakout, this trained in 30 seconds,
Breakout, this trained in 30 seconds,
beats the game.
beats the game.
We've got Snake. This trains in like a
We've got Snake. This trains in like a
minute.
minute.
plays snake with a whole bunch of
plays snake with a whole bunch of
snakes.
snakes.
We've got drone flying. This trains in
We've got drone flying. This trains in
30 seconds.
Pretty much works out of the box as
Pretty much works out of the box as
well, which is not a thing you see in
well, which is not a thing you see in
RL.
Probably replace my algorithm with PO
Probably replace my algorithm with PO
and try to run like 100 seeds.
and try to run like 100 seeds.
Yeah. So, it's so our it's not quite PO.
Yeah. So, it's so our it's not quite PO.
Ours is better than PO. It's going to be
Ours is better than PO. It's going to be
substantially more stable.
substantially more stable.
um
um
you can absolutely do 100 seeds. We've
you can absolutely do 100 seeds. We've
actually gotten it to the point where
actually gotten it to the point where
like most of our stuff is very very
like most of our stuff is very very
consistent. There really isn't that much
consistent. There really isn't that much
per seed variance at all for almost all
per seed variance at all for almost all
the environments. And we have like
the environments. And we have like
built-in hyperprem tuning. Welcome
built-in hyperprem tuning. Welcome
Kovac.
list is impressive. Does really need a
list is impressive. Does really need a
good step function with rewards and
good step function with rewards and
puffer handles LSTM and PO? Yep.
puffer handles LSTM and PO? Yep.
And it not only handles it, it handles
And it not only handles it, it handles
it in a way that's very transparent like
it in a way that's very transparent like
the entire training core of Puffer,
the entire training core of Puffer,
right? It's about a thousand lines for
right? It's about a thousand lines for
the train file. We have some default
the train file. We have some default
models that we use. So like few hundred
models that we use. So like few hundred
lines worth of default models if you
lines worth of default models if you
want. And then there's like I think
want. And then there's like I think
maybe 500 lines of ve of relevant code
maybe 500 lines of ve of relevant code
for vectorization and that is it. That
for vectorization and that is it. That
is the entire stack. So it's like all of
is the entire stack. So it's like all of
reinforcement learning is maybe 2,000
reinforcement learning is maybe 2,000
lines.
lines.
Doesn't have to be longer.
Doesn't have to be longer.
Does Puffer support continuous action
Does Puffer support continuous action
spaces? Absolutely.
Really inspiring work. Hope to meet you
Really inspiring work. Hope to meet you
at at an AAR next year. A star.
at at an AAR next year. A star.
next year or so I will be at RLC in a
next year or so I will be at RLC in a
few weeks
few weeks
I don't know Aar
I don't know Aar
different conference I know it's a
different conference I know it's a
search algorithm there conference called
search algorithm there conference called
AAR
I do meet up with people I will be in
I do meet up with people I will be in
Palo Alto in a few weeks followed by RLC
Palo Alto in a few weeks followed by RLC
and I'll be back in Palo Alto for a
Oh, ICML.
I did I've been doing less conferences
I did I've been doing less conferences
lately. Like I don't think I'm going to
lately. Like I don't think I'm going to
do Nurups this year cuz uh last year
do Nurups this year cuz uh last year
Nurups nearly killed me.
Nurups nearly killed me.
Uh, I spent like five days in the
Uh, I spent like five days in the
hospital, lost 18 pounds with pneumonia.
hospital, lost 18 pounds with pneumonia.
I'm still not recovered from that.
I'm still not recovered from that.
Sucks.
Sucks.
Uh, so I will be considering whether I
Uh, so I will be considering whether I
do big conferences for a little bit,
do big conferences for a little bit,
but I will be at RLC.
Ow.
Ow.
just pneumonia, man. It sucks. I
just pneumonia, man. It sucks. I
was in like ludicrously good physical
was in like ludicrously good physical
shape as well.
shape as well.
Like literally, I went to that
Like literally, I went to that
conference having come off of run a 50k
conference having come off of run a 50k
and then hit a like a few weeks after
and then hit a like a few weeks after
that hit a thousand powerlifting total
that hit a thousand powerlifting total
and then after that I hit like a pretty
and then after that I hit like a pretty
decent 5k time and then it just freaking
decent 5k time and then it just freaking
Yeah, it's rough.
Yeah, it's rough.
Open review for NAS last Nurup
Open review for NAS last Nurup
submission.
submission.
Was it the Was it the neural MMO? The
Was it the Was it the neural MMO? The
300? No. What was it? Was it the puffer
300? No. What was it? Was it the puffer
lib rejected one?
lib rejected one?
Underappreciated. Yeah. Yeah. Yeah. It's
Underappreciated. Yeah. Yeah. Yeah. It's
just Academia does not appreciate this
just Academia does not appreciate this
type of stuff. It's It's very
type of stuff. It's It's very
ridiculous. But hey, it's fine. No, we
ridiculous. But hey, it's fine. No, we
will solve things. They will not.
Yeah, it sucks. And I've kind of like in
Yeah, it sucks. And I've kind of like in
trying to train back, like in the
trying to train back, like in the
process of trying to train to like get
process of trying to train to like get
my old fitness back, I've kind of gotten
my old fitness back, I've kind of gotten
a bunch of injuries. So, it's like now I
a bunch of injuries. So, it's like now I
can't even really train properly, which
can't even really train properly, which
sucks. So, I'm working on all that
sucks. So, I'm working on all that
stuff, but I definitely don't want to
stuff, but I definitely don't want to
expose myself to giant ass conference
expose myself to giant ass conference
again if I can avoid it for a little
again if I can avoid it for a little
bit.
until I hurt my shoulder a month ago. I
until I hurt my shoulder a month ago. I
had at least I'd gotten my pressing
had at least I'd gotten my pressing
strength pretty much back and uh my
strength pretty much back and uh my
deadlift is kind of closeish to back
deadlift is kind of closeish to back
where it used to be, I think. Though I
where it used to be, I think. Though I
haven't really tested a 1 RM lately. Um
haven't really tested a 1 RM lately. Um
but everything else kind of just sucks.
2:30 here in India. Catch your next
2:30 here in India. Catch your next
stream. Thank you very much for dropping
stream. Thank you very much for dropping
by. I saw a comment environment DM
by. I saw a comment environment DM
control does not support an old commit
control does not support an old commit
buried. You asked if I supported
buried. You asked if I supported
continuous action space. The answer is
continuous action space. The answer is
yes. Uh can we add deep mind control?
yes. Uh can we add deep mind control?
Yes. If you look at any of the other
Yes. If you look at any of the other
thirdparty binding files, they're like
thirdparty binding files, they're like
super short and super easy. For the most
super short and super easy. For the most
part, they kind of just work. Um, we
part, they kind of just work. Um, we
haven't used deep mind control in a
haven't used deep mind control in a
while because nobody's asked for it
while because nobody's asked for it
really. But yeah, you can absolutely do
really. But yeah, you can absolutely do
that. It's you might have to like make a
that. It's you might have to like make a
fiveline change or whatever to make sure
fiveline change or whatever to make sure
the latest version is found.
the latest version is found.
But like we support continuous actions
But like we support continuous actions
and we mostly have a bunch of bindings
and we mostly have a bunch of bindings
for thirdparty environments. It's very
for thirdparty environments. It's very
very easy to add your own third party
very easy to add your own third party
bindings for stuff we don't
like. You don't have to do anything
like. You don't have to do anything
special really to make stuff work with
special really to make stuff work with
Puffer Lib. Like we have one line
Puffer Lib. Like we have one line
puffer.
puffer.
gymnasium puffer envelope.
They're all very basic.
No support cuz yeah, that comment is
No support cuz yeah, that comment is
super old. We do have we do have
super old. We do have we do have
continuous action space support.
Yeah, we do have continuous action space
Yeah, we do have continuous action space
support and we have we have it working
support and we have we have it working
on several different environments.
Heck, I literally posted this here. I
Heck, I literally posted this here. I
posted this yesterday.
Oops.
Where is it?
Where is it?
Yeah, here you go. This is continuous
Yeah, here you go. This is continuous
action spaces.
We did this for 4th of July.
see the drone M. Oh, yeah, Finn. So, I
see the drone M. Oh, yeah, Finn. So, I
did that. I did that. Uh Finn uh Finn
did that. I did that. Uh Finn uh Finn
and Sam made the original drone M. So,
and Sam made the original drone M. So,
yeah, we have a really cool new demo for
yeah, we have a really cool new demo for
uh drones now. It does more than just
uh drones now. It does more than just
flag. Like, it can follow targets. It
flag. Like, it can follow targets. It
can do a bunch of different formations.
can do a bunch of different formations.
And I came up with some like nice
And I came up with some like nice
structured rewards for all of it as
structured rewards for all of it as
well.
Did I get a chance to look at my
Did I get a chance to look at my
question? Which one? Oh, the giant list
question? Which one? Oh, the giant list
of them. It looks like you pretty much
of them. It looks like you pretty much
want like a full guide to a ton of
want like a full guide to a ton of
stuff, right?
Yeah. So, I'm going to add some
Yeah. So, I'm going to add some
material. I'm doing both, right? I'm
material. I'm doing both, right? I'm
going to add There's a lot of material I
going to add There's a lot of material I
got to add.
Like the thing is that like
Like the thing is that like
you're basically asking a whole bunch of
you're basically asking a whole bunch of
questions on how to do stuff without
questions on how to do stuff without
asking how to understand any of the
asking how to understand any of the
fundamentals, right? I can't really like
fundamentals, right? I can't really like
I can't give you a robust template for
I can't give you a robust template for
how to do stuff that doesn't involve at
how to do stuff that doesn't involve at
least some level of understanding of the
least some level of understanding of the
fundamentals.
fundamentals.
Does that make sense?
Section of required environment fields.
Section of required environment fields.
Nice.
Nice.
Uh that's part of the template, isn't
Uh that's part of the template, isn't
it?
it?
We have it like commented like you know
We have it like commented like you know
required required like you know make
required required like you know make
sure you do this this way etc etc.
The intent is that so you can copy the
The intent is that so you can copy the
template and then when you start editing
template and then when you start editing
stuff you know what not to edit or like
stuff you know what not to edit or like
what to keep.
how to think about them and use them.
Yeah. So that's like API documentation
Yeah. So that's like API documentation
basically about how the thing works
basically about how the thing works
which we will include in the uh writing
which we will include in the uh writing
your own environment.
your own environment.
What I'm going to do is I'm going to add
What I'm going to do is I'm going to add
I'm going to add that to the docs page,
I'm going to add that to the docs page,
right? And then that's going to be one
right? And then that's going to be one
of the first things that like this sends
of the first things that like this sends
you to
build answers for all of them.
Okay. How to understand an RL problem is
Okay. How to understand an RL problem is
going to basically what I'm trying to do
going to basically what I'm trying to do
mag is I'm trying to sort of get you to
mag is I'm trying to sort of get you to
build stuff and then slowly pull in
build stuff and then slowly pull in
resources. Like here it's you're going
resources. Like here it's you're going
to build a very simple environment.
to build a very simple environment.
Okay, you're going to read some docs.
Okay, you're going to read some docs.
You're going to build a very simple
You're going to build a very simple
environment. Then you're going to read a
environment. Then you're going to read a
blog post and a couple other things and
blog post and a couple other things and
you're going to like train a different
you're going to like train a different
environment. And then you're going to
environment. And then you're going to
build something a little bit more
build something a little bit more
complex and read a little bit more,
complex and read a little bit more,
etc., etc.
etc., etc.
I've used Wi and Neptune, but compared
I've used Wi and Neptune, but compared
your work sufficiently, my intuition
your work sufficiently, my intuition
would slow and bottleneck. How do you
would slow and bottleneck. How do you
handle logging millions of steps per
handle logging millions of steps per
second? Because you don't add you don't
second? Because you don't add you don't
log every data point like you're you're
log every data point like you're you're
logging
logging
What would it even be on average? I
What would it even be on average? I
think for Breakout, you're probably
think for Breakout, you're probably
logging like one point every several
logging like one point every several
million steps.
But we handle all of that for You
logging over epochs. Uh us well it
logging over epochs. Uh us well it
depends.
depends.
It's usually you log like once every
It's usually you log like once every
maybe every few epochs I believe or it's
maybe every few epochs I believe or it's
not every few epochs. I think it's time
not every few epochs. I think it's time
based. You log a like if it's been a
based. You log a like if it's been a
certain amount of time since you logged
certain amount of time since you logged
the last point and there's data
the last point and there's data
available then you log it.
available then you log it.
But like a lot of stuff is averaged,
But like a lot of stuff is averaged,
right? you're not even going to get the
right? you're not even going to get the
million log points into the trainer to
million log points into the trainer to
then average and log to wand B. Like
then average and log to wand B. Like
there's already averaging that's
there's already averaging that's
happened before that in C.
happened before that in C.
So like there millions of log points in
So like there millions of log points in
C. They've they're aggregated literally
C. They've they're aggregated literally
as you create them in C and then the
as you create them in C and then the
compressed versions are sent up to the
compressed versions are sent up to the
main trainer and then you have to like
main trainer and then you have to like
average a relatively smaller number of
average a relatively smaller number of
points across that. So, we've kind of
points across that. So, we've kind of
done we've done efficiency at very many
done we've done efficiency at very many
different layers for you. The code's not
different layers for you. The code's not
that complicated and there's not that
that complicated and there's not that
much of it.
I don't like the sequencing of this.
Yeah, this is a huge jump to reading
Yeah, this is a huge jump to reading
your first paper here.
your first paper here.
I think you should build something.
in making
in making
successful contributing. So going
successful contributing. So going
through your docs now M will probably be
through your docs now M will probably be
an OD cyst. Do you have other M built
an OD cyst. Do you have other M built
numerical integration? You say the end
numerical integration? You say the end
will be an OD cyst. What do you mean
will be an OD cyst. What do you mean
that the environment will be an OD
that the environment will be an OD
system?
system?
Like are you trying to do something like
Like are you trying to do something like
neural odes or like what what are you
neural odes or like what what are you
doing?
is a nonlinear physics system.
is a nonlinear physics system.
So step is often integrating the OD is
So step is often integrating the OD is
an initial value problem from zero to
an initial value problem from zero to
get to the next step. Why is it
get to the next step. Why is it
integrating from zero to t? I guess you
integrating from zero to t? I guess you
mean zero to dt.
I don't know if you have a specific
I don't know if you have a specific
solver that you want to have or you just
solver that you want to have or you just
want to like implement RK4 and see um is
want to like implement RK4 and see um is
there like a basic like RK4 and C
want to implement that would actually be
want to implement that would actually be
very useful to us like if you wanted to
very useful to us like if you wanted to
actually like do something like this and
actually like do something like this and
like make it work in the context of an
like make it work in the context of an
RL environment we would be very happy
RL environment we would be very happy
with that.
with that.
We actually we really really like when
We actually we really really like when
people uh with experience in other
people uh with experience in other
domains come in and do stuff that's not
domains come in and do stuff that's not
just games. Like our goal ultimately is
just games. Like our goal ultimately is
to really advance a ton of areas of
to really advance a ton of areas of
science. We suggest games because like
science. We suggest games because like
most people that come in don't have
most people that come in don't have
experience in another branch of science
experience in another branch of science
and games are like really easily
and games are like really easily
interpretable but that is actually the
interpretable but that is actually the
highest value thing for us.
Yeah, I would just like from what I
Yeah, I would just like from what I
know, I would just do like a basic RK4.
know, I would just do like a basic RK4.
You can always do like an energy
You can always do like an energy
estimation to see if it's stable, right?
estimation to see if it's stable, right?
If you're doing like I don't know some
If you're doing like I don't know some
sort of physical system, you can just
sort of physical system, you can just
like can track energy to make sure it's
like can track energy to make sure it's
stable. Just develop the ENV as a
stable. Just develop the ENV as a
standalone in C according to our format.
standalone in C according to our format.
If you follow the guide,
If you follow the guide,
we suggest you kind of implement
we suggest you kind of implement
everything in C first, just in the way
everything in C first, just in the way
that we do it. Make sure it works as a
that we do it. Make sure it works as a
standalone like environment in C that
standalone like environment in C that
you can interact with and see the
you can interact with and see the
dynamics working. And then you just plug
dynamics working. And then you just plug
it into our RL
it into our RL
DOP
DOP
5. I don't know how good. Well, it
5. I don't know how good. Well, it
depends on your uh it depends on how
depends on your uh it depends on how
many steps of integration you have to
many steps of integration you have to
take, right?
take, right?
RK4 is super fast, isn't it?
RK4 is super fast, isn't it?
Okay.
Okay.
It depends how many steps you have to
It depends how many steps you have to
take, doesn't it?
What's the complexity of Dockery 5?
Here's Dockery. C.
Here's Dockery. C.
Uh, this is gigantic, though. It really
Uh, this is gigantic, though. It really
shouldn't be this long for an
shouldn't be this long for an
integration method.
integration method.
Oh, it's got a whole bunch of features
Oh, it's got a whole bunch of features
and annoying things.
I hope it's not this fancy.
I hope it's not this fancy.
If it is, if it ends up being something
If it is, if it ends up being something
this complicated, I would just start
this complicated, I would just start
with RK4 and see if that's good enough.
RK with higher AC accuracy. Okay. Well,
RK with higher AC accuracy. Okay. Well,
I just don't know how complicated the
I just don't know how complicated the
implementation is by comparison or if it
implementation is by comparison or if it
has uh higher comp like compute
has uh higher comp like compute
complexity, right?
complexity, right?
So, the key thing to know in RL, right,
So, the key thing to know in RL, right,
is simulation speed is absolutely king.
is simulation speed is absolutely king.
So, if you can get your simulation to
So, if you can get your simulation to
run at like millions of steps per
run at like millions of steps per
second, you're usually like you're
second, you're usually like you're
golden because you can just train on
golden because you can just train on
unlimited data at that point. So, as
unlimited data at that point. So, as
long as you have a stable system that
long as you have a stable system that
runs fast, you're usually good.
I would definitely start with something
I would definitely start with something
simple, though, because as I'm writing
simple, though, because as I'm writing
in my guide right now, the price of
in my guide right now, the price of
complexity and reinforcement learning is
complexity and reinforcement learning is
very, very high. Errors are very
very, very high. Errors are very
difficult to catch because the agent
difficult to catch because the agent
can't tell you that its data is wrong,
can't tell you that its data is wrong,
right? Or that some corruption is
right? Or that some corruption is
happening
happening
and it's just going to like not behave
and it's just going to like not behave
as well as it should for some reason.
How how big is pawn?
Oh yeah, pawn.
What if you have a few different types
What if you have a few different types
of agents that need to train models for?
of agents that need to train models for?
Also, what if you want an agent to able
Also, what if you want an agent to able
to take an action every 100 steps?
to take an action every 100 steps?
Why would you do that?
So, if you have a few different types of
So, if you have a few different types of
agents that need to change, you can
agents that need to change, you can
usually just train one model. I've done
usually just train one model. I've done
this all the time, it's fine. Long as
this all the time, it's fine. Long as
you can make the obs and action spaces
you can make the obs and action spaces
match kind of fine.
match kind of fine.
Uh,
Uh,
if you want an agent to take an action
if you want an agent to take an action
every 100 steps, it's probably going to
every 100 steps, it's probably going to
be pretty slow. I don't know why you
be pretty slow. I don't know why you
would do that, but you can. It's just
would do that, but you can. It's just
that the step function takes the action
that the step function takes the action
and then it updates the end a 100 times
and then it updates the end a 100 times
in a loop, right?
You just better have fa fast dynamics if
You just better have fa fast dynamics if
you want to do that.
You're simulating an economy. We have
You're simulating an economy. We have
manufactured warehousing storefronts.
manufactured warehousing storefronts.
Manufactur just decides once to see make
RL is not a fun thing to do in a low
RL is not a fun thing to do in a low
data regime.
data regime.
So, if you're if you have a sim that
So, if you're if you have a sim that
runs really really fast,
runs really really fast,
you can do this. But if you're going to
you can do this. But if you're going to
get like if you're not going to get that
get like if you're not going to get that
much data on the like results of your
much data on the like results of your
actions and it's going to be really
actions and it's going to be really
delayed feedback at that, it's not going
delayed feedback at that, it's not going
to be a fun time.
Use RL for high data regime problems.
Use RL for high data regime problems.
And if your problem isn't high data
And if your problem isn't high data
regime, ask how you can make it such
regime, ask how you can make it such
right. Make it so.
Is it fair to say if you had a system
Is it fair to say if you had a system
where you had to control 10 gauges,
where you had to control 10 gauges,
build a model with all the gauge
build a model with all the gauge
chaining options the action space
chaining options the action space
rather than trying to make each gauge an
rather than trying to make each gauge an
agent? S
agent? S
it's just a box of 10 or a
it's just a box of 10 or a
multi-discreet with 10 options.
What's the difference between vecums and
What's the difference between vecums and
mnumms?
mnumms?
So env is in a single threat. So it's
So env is in a single threat. So it's
only this case for ocean. So only our
only this case for ocean. So only our
like RC environments do it this way. Um
like RC environments do it this way. Um
env tells you how many copies a single
env tells you how many copies a single
process is going to simulate. uh because
process is going to simulate. uh because
the individual Python class can actually
the individual Python class can actually
create like 4,000 environments or
create like 4,000 environments or
whatever sometimes. Okay. And then the
whatever sometimes. Okay. And then the
vecum m is going to tell you how many
vecum m is going to tell you how many
processes. Instead of spawning 8,000
processes. Instead of spawning 8,000
processes with one environment each,
processes with one environment each,
you're going to spawn like eight with
you're going to spawn like eight with
1024 environments each.
We have other ways of doing this as well
We have other ways of doing this as well
for like slower environments with serial
for like slower environments with serial
cuz like you can technically you can
cuz like you can technically you can
technically do the same thing a bit
technically do the same thing a bit
differently but this is the fast way of
differently but this is the fast way of
doing Yeah.
Heat.
Okay,
I will uh I think this is probably going
I will uh I think this is probably going
to be like a 10parter, like a 10
to be like a 10parter, like a 10
section.
section.
Let me just see if I can write these
Let me just see if I can write these
real quick.
real quick.
This is going to be like here like uh
This is going to be like here like uh
buffer algo article etc.
buffer algo article etc.
Then this is
PC.
It's going to be something like this, I
It's going to be something like this, I
believe.
And this is pretty well the the full
And this is pretty well the the full
path to becoming a uh a competent
path to becoming a uh a competent
researcher.
researcher.
Obviously, like you have to repeat the
Obviously, like you have to repeat the
last few of these several times,
last few of these several times,
but this is quite good, I'd say,
but this is quite good, I'd say,
overall.
overall.
Okay. Uh, it is 5th of July.
Huh. Kind of cool. So, apparently AI
Huh. Kind of cool. So, apparently AI
training computer benches are going to
training computer benches are going to
qualify as R&D. That is very nice.
That was a whole bunch of writing.
That was a whole bunch of writing.
Usually there will be experiments and
Usually there will be experiments and
research around here, but I figured that
research around here, but I figured that
I would uh work on something for you
I would uh work on something for you
guys. Need to finish this. Need to
guys. Need to finish this. Need to
update the docs, the extras that we
update the docs, the extras that we
discussed. Uh this is well on its way
discussed. Uh this is well on its way
though. I would say this is very well on
though. I would say this is very well on
its way. We'll have this. We'll have the
its way. We'll have this. We'll have the
programming and ML guide. We have all
programming and ML guide. We have all
the other articles I wrote for 30 and
the other articles I wrote for 30 and
Spencer wrote like all the different
Spencer wrote like all the different
things. We've actually we've got a
things. We've actually we've got a
pretty dang good base of content. We'll
pretty dang good base of content. We'll
just have to figure out sort of how I
just have to figure out sort of how I
want to organize it and what things are
want to organize it and what things are
going to go on the website and all that.
going to go on the website and all that.
Okay. Uh thank you for tuning in folks.
Okay. Uh thank you for tuning in folks.
I'm going to dinner.
I'm going to dinner.
You want to support all this work for
You want to support all this work for
free?
free?
Just star the repo. really helps.
Just star the repo. really helps.
Get involved by joining the Discord.
Get involved by joining the Discord.
It's free. It's just freely available.
It's free. It's just freely available.
There's no invite link. I mean, no
There's no invite link. I mean, no
invite code, just link. And follow me on
invite code, just link. And follow me on
X for more. Thank you and I will see
