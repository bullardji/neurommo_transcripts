Kind: captions
Language: en
Okay, we are
live. It's been kind of a [ __ ] day. I'm
live. It's been kind of a [ __ ] day. I'm
not going to
lie. Cluster is down and
lie. Cluster is down and
uh I don't freaking know. Something
uh I don't freaking know. Something
screwed with the
ISP. So, I've got a technician coming
ISP. So, I've got a technician coming
out on Sunday.
out on Sunday.
Um, I can't really do anything about it
Um, I can't really do anything about it
until then. There just not going to be
until then. There just not going to be
any experiments running for the next
any experiments running for the next
couple of
couple of
days. Uh, I do have my one box right
days. Uh, I do have my one box right
here that I can use for a few small
here that I can use for a few small
things.
All I wanted to do tonight was to start
on a few of the uh experience buffer
on a few of the uh experience buffer
changes. That's all I wanted to
changes. That's all I wanted to
do. Oops. Let's not get that. Also to
do. Oops. Let's not get that. Also to
check on this run real
quick. Okay.
Well, I mean, that's interesting,
Well, I mean, that's interesting,
right? We'll see how this curve goes,
right? We'll see how this curve goes,
but
um the advantage filtering seems to
um the advantage filtering seems to
break something
break something
here. We'll see how stable this ends up
here. We'll see how stable this ends up
being and whether this eventually
being and whether this eventually
intersects or
intersects or
not.
not.
Very odd
Very odd
though.
Okay. I want to just chill and code some
Okay. I want to just chill and code some
stuff. Oh, that's Spencer up
too. The next hour or so.
Oh, that's
Oh, that's
Linky, not
Linky, not
Spencer. All right.
Well, let's just get on to this
Well, let's just get on to this
then. I think where we left
off, I was trying to figure out what was
off, I was trying to figure out what was
wrong with
wrong with
uh the multipprocessing.
It works with one uh big block of M's.
It works with one uh big block of M's.
Doesn't work with two
Well, that's weird, isn't it? Hang on.
Well, that's weird, isn't it? Hang on.
Episode
indices. Those should not overlap,
indices. Those should not overlap,
right? Am I crazy or should those not be
right? Am I crazy or should those not be
overlapped like that?
Oh, they're not
Oh, they're not
overlapped. Yeah, they're not
overlapped. So, what the heck is wrong
overlapped. So, what the heck is wrong
then?
Why is this
6,000? Isn't it? Um
8192 rows.
No, that is still right.
I better think what can even possibly be
I better think what can even possibly be
wrong with this thing.
like there's not much,
like there's not much,
right?
right?
Am I crazy for thinking that if it's
Am I crazy for thinking that if it's
like it's got to just be something in
store?
TMH. That's
TMH. Yeah, that's correct. That's been
TMH. Yeah, that's correct. That's been
that way for months.
I didn't do something stupid for testing
I didn't do something stupid for testing
and then forget to undo it. Did
I? Yeah, this doesn't break anything.
It's not something stupid with this
It's not something stupid with this
indexing,
indexing,
right? Like it can't be
Wait. No, this is
fine. Bizarre.
I would have thought this would have
I would have thought this would have
fixed
it. It's weird cuz like it it almost
it. It's weird cuz like it it almost
does and then it crashes
does and then it crashes
right now.
I can't even think of what this would
I can't even think of what this would
be. That's the issue.
didn't miss a
field. How did I screw this up? The
field. How did I screw this up? The
thing is, this was working before,
thing is, this was working before,
wasn't
wasn't
it? Pretty sure this was working.
Could I have screwed something else up
Could I have screwed something else up
in the process of implementing this?
Like I could have,
Like I could have,
right? Could it just be something
right? Could it just be something
completely
completely
unrelated to what I'm looking at now?
samples. Set your loss to zero,
right? Got rid of LSTM here, didn't you?
right? Got rid of LSTM here, didn't you?
But you were setting it to none anyways.
the 64 horizon
do. It's going to fit, right?
64. It's only halfway.
Yeah. So, you've got room for two sets
Yeah. So, you've got room for two sets
of these buffers, right?
make a difference. I guess I got to
make a difference. I guess I got to
check the
dip cuz this doesn't make any sense.
Wait.
Shoot. This is too big of a
I do have a bunch of commits that I
I do have a bunch of commits that I
could bisect, right?
Yeah, that's fine.
We're going to just do a get bisect on
We're going to just do a get bisect on
this. I almost never have to do this,
this. I almost never have to do this,
but lately
See, it's good There.
I do not have to find this bug
I do not have to find this bug
tomorrow. Then I can do real work
tomorrow. Then I can do real work
tomorrow.
Okay. So, this one's still wrong right
Okay. So, this one's still wrong right
here.
That
That
was Let's just fall back.
We good here? We are
right. I think we're not quite as good,
right. I think we're not quite as good,
but we're still good,
right? Oh, no. This is still fine.
And then this one here.
Good on
Good on
bet. Getting us some solid PRs in
So this is
like it trains stably but it's kind of
bad. What do I call that? Is do I just
bad. What do I call that? Is do I just
label that as bad?
It's definitely worse.
At least this one's easy. This one just
runs. Do I like unindent something or
runs. Do I like unindent something or
something ridiculous like that?
No. Is this one still
No. Is this one still
bad? Oh,
no. This one
is This one is good.
Okay, so the first bad commit is
here which is let's say 8 DC
This shouldn't be a bad commit at
This shouldn't be a bad commit at
all. So, I must have really broke
all. So, I must have really broke
something. This is E3B.
Oh, is it
this? We'll keep this in mind.
Change it from less to less than equal.
I wasn't changing episode indices
I wasn't changing episode indices
before. That's weird.
And I broke it by changing
this. So there
are Hey bet.
are Hey bet.
Literally two changes that could have
Literally two changes that could have
possibly broken
anything and everything's broken
today. Just make sure that this
today. Just make sure that this
is prop
This one doesn't work,
right? Doesn't fail as hard as the other
right? Doesn't fail as hard as the other
ones, but it doesn't
work. Oh, yeah. This hard
work. Oh, yeah. This hard
fails, right?
[Music]
Not as bad as the latest branch, but
Not as bad as the latest branch, but
it's still not
it's still not
good. Looks like it's working. It should
good. Looks like it's working. It should
be solved by now.
So the only two things I
did is I change this from less
did is I change this from less
to less than
to less than
equal and then I zero
Yes. Jeez. That much of a difference,
Yes. Jeez. That much of a difference,
huh?
So that brings us back to the solve
So that brings us back to the solve
speed we
speed we
expect. If that's going to solve, which
expect. If that's going to solve, which
it should
[Music]
overwriting the first batch or
overwriting the first batch or
something.
That still doesn't
That still doesn't
work. It solved it before, didn't it?
work. It solved it before, didn't it?
Oh, no, it didn't.
These are the two things though.
Well, but we also know um
That's
crazy. It's a one character bug.
Really? Yeah. One character bug. Now
Really? Yeah. One character bug. Now
it's back to soda.
it's back to soda.
right now. It doesn't work if I do this.
Right. Yeah. No, it's going to
Right. Yeah. No, it's going to
crash. Okay.
So now multiprock should work as
well. Oops.
Make sure this does stuff.
So if this works.
Um, if this works, then I will go
Um, if this works, then I will go
relaunch a job and I guess I can review
relaunch a job and I guess I can review
Enduro
stuff. The end of works and trains,
stuff. The end of works and trains,
right, bet?
zombies are linked. Very good. All
zombies are linked. Very good. All
right, let me go pick some one small
right, let me go pick some one small
thing
then. That'll be 32 I
then. That'll be 32 I
believe. Uh 26.
Hello. What stream is this? Proper lib
Hello. What stream is this? Proper lib
dev. This is reinforcement learning dev.
dev. This is reinforcement learning dev.
I stream all my work on this. We're
I stream all my work on this. We're
going to make reinforcement learning
going to make reinforcement learning
very, very fast and sane and
very, very fast and sane and
stable. I do this full
time. So today was a lot of no fun fix
time. So today was a lot of no fun fix
attempting to fix cluster networking
attempting to fix cluster networking
issues.
Usually we do cooler
Usually we do cooler
stuff. Launching this new
experiment. I am unfortunately going to
experiment. I am unfortunately going to
have to stop the last experiment for
have to stop the last experiment for
this which was doing okay.
Um do I want to do this with or without
Um do I want to do this with or without
advantage filtering?
It's a good
question. Maybe without as a
question. Maybe without as a
[Music]
[Music]
baseline. I don't want this thing to
baseline. I don't want this thing to
fail
fail
overnight. Though to be fair, if this
overnight. Though to be fair, if this
fails
fails
overnight, that's only like what a 12
overnight, that's only like what a 12
hour 11 hour
experiment and then I could run the next
24. Yeah, I think we should do
24. Yeah, I think we should do
that. We'd be a little greedy
today. Did I not push my last bang?
This didn't
pull. Oh, I forgot to
stash. Thank you for the advertising
stash. Thank you for the advertising
bet.
So, this did kind of
So, this did kind of
okay. What do we have been prop
okay. What do we have been prop
3.4? That's a pretty decent
3.4? That's a pretty decent
run. We will be able to rerun this now
run. We will be able to rerun this now
with the the fixes.
Cool. So, this will do
Cool. So, this will do
roughly How fast we running this? It's
roughly How fast we running this? It's
actually kind of fast now,
actually kind of fast now,
right?
540. So, that's like 1.5 bill an hour.
540. So, that's like 1.5 bill an hour.
So, this will probably
do like 17 18 billion by the time I wake
do like 17 18 billion by the time I wake
up. What these curves look
like? That ought to be enough to see if
like? That ought to be enough to see if
it's bad,
it's bad,
right? I mean, it'll be a little close,
but it's got to outperform this mesh,
but it's got to outperform this mesh,
though.
though.
All
All
right, we'll take
right, we'll take
that. We will take
that. We will take
that. Let's review your
thing. That was a very silly
bug. I don't often have to pull out
bug. I don't often have to pull out
bicep.
bicep.
Okay, so we've
Okay, so we've
got heart pole
first. Wait,
first. Wait,
specify atom
specify atom
optimizer other optimizers untested.
optimizer other optimizers untested.
going to
dev. So, uh, one thing on this bet is,
dev. So, uh, one thing on this bet is,
uh, with the new stuff, it seems like
uh, with the new stuff, it seems like
you're not going to need I don't know if
you're not going to need I don't know if
you tested with Muon, but we haven't
you tested with Muon, but we haven't
needed like really specialized per end
needed like really specialized per end
type hyperparameters
type hyperparameters
anymore, which is kind of
anymore, which is kind of
cool, but I will look at that myself.
Yeah. So, this thing doesn't
Yeah. So, this thing doesn't
fly. Why are you doing uh why are you
fly. Why are you doing uh why are you
doing global path for the demos, man?
I'm not going to make you fix small
I'm not going to make you fix small
stuff like this before I merge it, but I
stuff like this before I merge it, but I
would like you to fix them at some
point. What? No.
a local compile email not
implemented. Well, you should be able
implemented. Well, you should be able
to like play the game locally and see or
to like play the game locally and see or
whatever. That's a lot easier to do than
whatever. That's a lot easier to do than
implementing all the model
implementing all the model
stuff. Get that at some
stuff. Get that at some
point locally. All right, I'll take that
point locally. All right, I'll take that
pier when it's ready. Uh, what do we
pier when it's ready. Uh, what do we
have? Is this 240
lights? I guess to be fair, there is
lights? I guess to be fair, there is
some light
physics. Wait, this is the
physics. Wait, this is the
new is this new binding format or old
new is this new binding format or old
binding format?
binding format?
Bet this some
Bet this some
siphon. Not new. Okay, that's fine.
siphon. Not new. Okay, that's fine.
Yeah, that's fine. So then you'll uh
Yeah, that's fine. So then you'll uh
That'll cut 50 lines off,
That'll cut 50 lines off,
right? Yeah, that'll cut like 50 plus
right? Yeah, that'll cut like 50 plus
lines
off. Okay.
off. Okay.
So, let's just see how your code's been
So, let's just see how your code's been
going. Can I like Where's the non-split
going. Can I like Where's the non-split
view for this stupid thing?
view for this stupid thing?
Isn't that like a
toggle
toggle
code? Let's see how your code is going.
You're over commenting a little bit.
don't know the source code. Well, they
don't know the source code. Well, they
don't know the source code because
don't know the source code because
you're not naming stuff
you're not naming stuff
well. I don't know why this is X
well. I don't know why this is X
dot. Do people use dot for
dot. Do people use dot for
vector? Oh man, that's been so
vector? Oh man, that's been so
long. I use arrow. I guess they do use x
long. I use arrow. I guess they do use x
dot for arrow but there's no reason to
dot for arrow but there's no reason to
name it like the mathematical like like
name it like the mathematical like like
it's just
it's just
vx like theta is fine and you can do
like you either name this whatever the
like you either name this whatever the
hell the character is for angular
hell the character is for angular
velocity or you name it v theta or you
velocity or you name it v theta or you
name it like
name it like
something was it omega what's the
Why do I think it's omega? It's not
Why do I think it's omega? It's not
lowerase omega,
right? It's like a W. It is omega. Yeah,
right? It's like a W. It is omega. Yeah,
lowerase
omega. Picked on a run.
I mean, you don't have to go super crazy
I mean, you don't have to go super crazy
with name. It's just like you name the
with name. It's just like you name the
thing the thing that it is that it is
thing the thing that it is that it is
and then the code should be pretty
easy. It's not that comments are bad.
easy. It's not that comments are bad.
It's just like why do you why do you
It's just like why do you why do you
need to comment the thing that the name
need to comment the thing that the name
is when it's like you have the
is when it's like you have the
name steps beyond
name steps beyond
done? You shouldn't be able to step it
done? You shouldn't be able to step it
once it's done.
You also don't need an empty client if
You also don't need an empty client if
the client has no
state. Unless there's one. Oh, there is
state. Unless there's one. Oh, there is
one down
one down
here. Yeah, but this doesn't have
here. Yeah, but this doesn't have
anything. See? So, like you don't need
anything. See? So, like you don't need
to match this just for the sake of
to match this just for the sake of
matching it. If there's no if there's no
matching it. If there's no if there's no
struck, then you just don't need
one. And then you're not going to need
one. And then you're not going to need
this either once you get rid of log
this either once you get rid of log
buffer. So this will get
simplified. If this gets cal, you don't
simplified. If this gets cal, you don't
even like this ends up zero for
even like this ends up zero for
you. So it's kind of fine to have that
you. So it's kind of fine to have that
still.
There's some more tweaks I'm thinking
There's some more tweaks I'm thinking
about like this free allocated since
about like this free allocated since
this only gets called from the C. We
this only gets called from the C. We
might just move stuff like this into the
might just move stuff like this into the
C
C
file. But yeah, there this can just be
file. But yeah, there this can just be
void.
It's kind of fine to have a
It's kind of fine to have a
close not part of the API. So you could
close not part of the API. So you could
just call close
window. This is
fine. Don't we use tab for taking
fine. Don't we use tab for taking
control? No, we use shift for taking
control? No, we use shift for taking
control. Yeah, we use shift for taking
control. Yeah, we use shift for taking
control. That's fine.
The original ends goes beyond being
The original ends goes beyond being
considered
solved. Well, then you don't do steps
solved. Well, then you don't do steps
behind beyond done, right? You do
behind beyond done, right? You do
like you do like max steps or something,
like you do like max steps or something,
right? you set like max steps to uh as
right? you set like max steps to uh as
like a
like a
parameter and then when you create this
parameter and then when you create this
you can create it with a specific number
you can create it with a specific number
of max steps and then you set done if
of max steps and then you set done if
the thing falls over and then you set
the thing falls over and then you set
done if the thing runs out of time
done if the thing runs out of time
though technically if you want to be
though technically if you want to be
really correct about it you set
really correct about it you set
truncated if you run out of time which
truncated if you run out of time which
is something that we're going to start
is something that we're going to start
considering though I haven't actually
considering though I haven't actually
added truncated to the new bindings
because most of our apps don't use
it. Not using it.
it. Not using it.
Yeah. Yeah. So, I think you're kind of
Yeah. Yeah. So, I think you're kind of
in like the over commenting stage of
in like the over commenting stage of
being a developer.
Like if I were going to comment this,
Like if I were going to comment this,
which you don't really need it because
which you don't really need it because
it says cart X, cart Y. I can tell
it says cart X, cart Y. I can tell
you're drawing the cart. I can tell
you're drawing the cart. I can tell
you're drawing the
bowl. This, I might comment, is tracked
bowl. This, I might comment, is tracked
since there's that says track
here comments aren't for
Joseph's
well should be for code literate
I mean, it really does when you've like
I mean, it really does when you've like
been programming for a while, right? It
been programming for a while, right? It
literally does be like, "Well, why did
literally does be like, "Well, why did
you just write what's written right
you just write what's written right
here, right?" Because you just you read
here, right?" Because you just you read
the code and it's like, "Yeah, that's
the code and it's like, "Yeah, that's
that's what it says.
Wait. Yeah, that's just
once. Well, there like they're just all
once. Well, there like they're just all
sorts of little things that you can
sorts of little things that you can
do. Why I chose standard default
do. Why I chose standard default
valves. Do you think that I know what
valves. Do you think that I know what
the defaults are of cartpull off the top
the defaults are of cartpull off the top
of my head? I can assure you I
don't tell you that if you wanted to be
don't tell you that if you wanted to be
fancy, you could easily make this a
fancy, you could easily make this a
difficulty parameter, though.
difficulty parameter, though.
This could be difficulty right
here. That'd be kind of
cool. Randomize domain randomized part.
cool. Randomize domain randomized part.
It's probably too easy though.
Well, yeah. I know it's so that it
Well, yeah. I know it's so that it
doesn't start balanced. I don't know
doesn't start balanced. I don't know
what the defaults are in the actual cart
what the defaults are in the actual cart
pull, though. I don't know how much it
randomizes.
0.05. So, is this harder or easier than
0.05. So, is this harder or easier than
the default?
Is this like
Is this like
easier? What do you mean it's the
easier? What do you mean it's the
same? This is 0.04
same? This is 0.04
shifted,
right? Well, make sure our cart pull
right? Well, make sure our cart pull
isn't like easier than the actual cart
isn't like easier than the actual cart
pull because we'll get shipped for that.
Like our breakout is probably easier,
Like our breakout is probably easier,
but our breakout's easier because the
but our breakout's easier because the
original is stupid.
Okay.
You're going to link me the original,
You're going to link me the original,
which you ship,
right? Uh, paste it again. The chat
right? Uh, paste it again. The chat
broke.
Is the chat still [ __ ]
broken? Yeah, my chat doesn't
broken? Yeah, my chat doesn't
work. Like the window that I have on
work. Like the window that I have on
race is
race is
broken. That's
broken. That's
bizaro. I can just
go now. I see it on I see it where you
go now. I see it on I see it where you
see it, but my terminal doesn't work.
Oh, this one isn't
Oh, this one isn't
terrible.
terrible.
Wait. Yeah, they have some shitty
Wait. Yeah, they have some shitty
graphics library,
right? What is
right? What is
this? GFX.
Where the hell is this even
Where the hell is this even
from? Do they like import
it? Oh, Pie game. Uh, yeah. I'm
it? Oh, Pie game. Uh, yeah. I'm
surprised this is the
original. We're absolutely allowed to
original. We're absolutely allowed to
and are going to
recolor puffs match puffer colors when
possible. You can't do literally no
possible. You can't do literally no
branding.
Okay. So, this
here I actually don't know if this is
here I actually don't know if this is
faster.
faster.
Um, but you know the shortcut for this,
Um, but you know the shortcut for this,
right? and log equals you can just do
right? and log equals you can just do
open curly brace zero close curly brace
open curly brace zero close curly brace
that is uh zero
strruct this is probably faster but it
strruct this is probably faster but it
doesn't matter at all
doesn't matter at all
here I actually don't know they might
here I actually don't know they might
compile to the same
Okay. Does it just get a reward of one
Okay. Does it just get a reward of one
every time?
It It's kind of a shitty reward.
It's okay
though. And then we have
this. This isn't bad. Don't do this.
this. This isn't bad. Don't do this.
This is
This is
silly. This is fine. Something like this
silly. This is fine. Something like this
is fine. This is all going to be gone
is fine. This is all going to be gone
because of the new binding. So basically
because of the new binding. So basically
I'll remove like a third of the code
I'll remove like a third of the code
with the new binding stuff which will be
with the new binding stuff which will be
nice. Yeah, it's fine to it's fine to do
nice. Yeah, it's fine to it's fine to do
that in this case. Good job. Um you have
that in this case. Good job. Um you have
VOD for this.
VOD for this.
So the suggestions I made I would
So the suggestions I made I would
suggest you do if for no other reason
suggest you do if for no other reason
other than to remind
yourself. It's also fine to delay that
yourself. It's also fine to delay that
until
until
um new bind until you go to do new
um new bind until you go to do new
bindings, but probably good to like
bindings, but probably good to like
Yeah, don't do silly stuff like
Yeah, don't do silly stuff like
this. I can't really blame you because
this. I can't really blame you because
you were probably like you weren't
you were probably like you weren't
really sure what the API boundary is.
really sure what the API boundary is.
Like is it part of the API that
Like is it part of the API that
everything has to have a client and like
everything has to have a client and like
a make client and stuff? And uh the
a make client and stuff? And uh the
answer is not really.
answer is not really.
The only things that I think are
The only things that I think are
required
required
uh are the that you need to have a
uh are the that you need to have a
render a step function and a close
render a step function and a close
function. I get scared when stuff starts
function. I get scared when stuff starts
seging. So stuff shouldn't be seging
seging. So stuff shouldn't be seging
when you're debubbing in pure C because
when you're debubbing in pure C because
you have F sanitize, right?
you have F sanitize, right?
And then even when you run the Python
And then even when you run the Python
test, like the pure Python test with the
test, like the pure Python test with the
new bindings, you'll still have F
new bindings, you'll still have F
sanitize potentially. The only time that
sanitize potentially. The only time that
F sanitize is going to like break
F sanitize is going to like break
horribly is when you run through PyTorch
horribly is when you run through PyTorch
and
stuff. All
stuff. All
right, thank you for
right, thank you for
this. We will
this. We will
this to
this to
death. I've wanted to have fart for a
death. I've wanted to have fart for a
while. Thank
you.
And props to you finding time. You're
And props to you finding time. You're
going to have you now will have a very
going to have you now will have a very
busy schedule, I imagine.
busy schedule, I imagine.
Congratulations once again.
Sting. So you put all these parameters
Sting. So you put all these parameters
back in,
back in,
huh? We could solve Enduro um with
huh? We could solve Enduro um with
literally the defaults for everything. I
literally the defaults for everything. I
tested that before.
tested that before.
Why' you take you took the RNN out as
well for a while? I finally got them
well for a while? I finally got them
ready.
ready.
Chills. Wow. Yeah. And you've got a
Chills. Wow. Yeah. And you've got a
bike. So,
bike. So,
uh, with a few days, I imagine that'll
uh, with a few days, I imagine that'll
be help appreciated.
Yeah, exactly. Just had major surgery.
Yeah, RNN isn't there. It says
none driving [ __ ]
none driving [ __ ]
Yeah, I had there was one contributor
Yeah, I had there was one contributor
back in
back in
like one of the first people to join
like one of the first people to join
with
with
Pokemon, I believe. Uh, it wasn't you.
Pokemon, I believe. Uh, it wasn't you.
It was some other
guy. Wait, this wasn't you, right? No,
guy. Wait, this wasn't you, right? No,
there was another guy who literally just
there was another guy who literally just
had a kid and then was like, you know,
had a kid and then was like, you know,
on the Discord or whatever the same day
on the Discord or whatever the same day
like hacking on stuff and then his wife
like hacking on stuff and then his wife
came in with the baby and I'm just like,
came in with the baby and I'm just like,
"What are you doing, man?
"What are you doing, man?
Congratulations. Get off of here and be
Congratulations. Get off of here and be
with your family. What are you
with your family. What are you
[Laughter]
[Laughter]
doing? What are you doing hacking on
doing? What are you doing hacking on
Pokemon with us?
Pokemon with us?
You can do that like tomorrow, next week
You can do that like tomorrow, next week
or
something. Lost
something. Lost
our That's
true.
true.
Puffer. I'll have to use some stickers.
Okay, so this is the cbind port. So
Okay, so this is the cbind port. So
you've got this in
you've got this in
net. We also have to just remove some of
net. We also have to just remove some of
these stupid arguments, right? Like
these stupid arguments, right? Like
there's no reason. The game is a fixed
there's no reason. The game is a fixed
game. You don't need to tell it the
game. You don't need to tell it the
width and the height, the car width and
width and the height, the car width and
the car height and all that [ __ ] because
the car height and all that [ __ ] because
it's part of the game. It's like there's
it's part of the game. It's like there's
no real way that you're going to ever
no real way that you're going to ever
randomize over some of this. I guess
randomize over some of this. I guess
technically max enemies or something.
technically max enemies or something.
You could randomize max enemies, but the
You could randomize max enemies, but the
rest of these
rest of these
nah when you got
nah when you got
[Music]
continuous. Yeah. But the thing is
continuous. Yeah. But the thing is
like literally this is this is the crazy
like literally this is this is the crazy
thing, right? If I make one mistake in
thing, right? If I make one mistake in
reviewing, I end up having to deal with
reviewing, I end up having to deal with
a dozen mistakes. So, the one mistake I
a dozen mistakes. So, the one mistake I
made in reviewing, it might have even
made in reviewing, it might have even
been my own mistake with Snake. Uh, it
been my own mistake with Snake. Uh, it
probably was, was passing like a couple
probably was, was passing like a couple
too many arguments from Python to Syon
too many arguments from Python to Syon
to C, and then it got into Plong and
to C, and then it got into Plong and
Breakout. And now everybody thinks that
Breakout. And now everybody thinks that
you just have to pass everything from
you just have to pass everything from
Python all the way to C even when it can
Python all the way to C even when it can
just be in the C because it's never
just be in the C because it's never
going to change. It's a constant.
going to change. It's a constant.
So, it's got to be writed at some
point. Uh, this looks like an error.
point. Uh, this looks like an error.
This doesn't get used,
right?
right?
Wait, does this does
uh you don't call a net, dude? Where's
it? Does this get used on reset or
something? Like we're not going to call
something? Like we're not going to call
the init function for you if you don't
the init function for you if you don't
call your init function here.
does get
does get
used. Let me double check this before we
used. Let me double check this before we
break
break
everything. And it does not need calling
everything. And it does not need calling
from there. Is it good called reset or
from there. Is it good called reset or
something weird? Cuz we do not call it
something weird? Cuz we do not call it
for you at
for you at
all. Yes. Okay,
fine. Probably should just get called
fine. Probably should just get called
here, but
here, but
whatever.
whatever.
Um, yeah, assigned addict a bunch of
Um, yeah, assigned addict a bunch of
stuff. Current length score. Did you
stuff. Current length score. Did you
make a reasonable score
function? Got rid of this
function? Got rid of this
garbage. 150 lines of
it.
Uhoh. Wait.
So this was from the old logging right
So this was from the old logging right
before I let you do this. But you still
before I let you do this. But you still
have this dropped
here. Uhoh. Wait. No. Log is still
here. You could have made a temp log for
here. You could have made a temp log for
this to be fair.
If you had a ton of variables that need
If you had a ton of variables that need
to be tracked like this that don't
to be tracked like this that don't
already have trackers, I would have just
already have trackers, I would have just
made like a temporary
made like a temporary
log. But
log. But
um that's fine. The enum is what I
um that's fine. The enum is what I
meant. You don't need the enum,
right? Yep. And then this is
right? Yep. And then this is
gone. It's gone.
Yeah, the enum's unused. The enum is
Yeah, the enum's unused. The enum is
from an old version of the logging. So,
from an old version of the logging. So,
this is kind of silly, right? Like you
this is kind of silly, right? Like you
just make a temp log
just make a temp log
here. Like look, if log is the reserved
here. Like look, if log is the reserved
one that we use like that we can check
one that we use like that we can check
whenever you just make like a you make
whenever you just make like a you make
like a you know like a temporary log or
like a you know like a temporary log or
whatever. you fill that thing and then
whatever. you fill that thing and then
when that thing is done then you copy
when that thing is done then you copy
the results
the results
over instead of having to do
this. That's how you would do
it. I think this is also going to be
it. I think this is also going to be
truncations name's going to be different
truncations name's going to be different
once we finish
once we finish
it. That's not getting used yet.
it. That's not getting used yet.
Yeah, this is mega silly because now you
Yeah, this is mega silly because now you
have this
twice, right? Now you have this like
twice, right? Now you have this like
this zeroing out of this
twice. Yeah. See, this could have all
twice. Yeah. See, this could have all
just been like temp
just been like temp
log. Or whatever would have been much
log. Or whatever would have been much
easier on yourself.
client
client
[Music]
[Music]
under
presumably you moved the
presumably you moved the
uh yeah you added this. Okay, that's the
uh yeah you added this. Okay, that's the
other thing I was looking for. All
other thing I was looking for. All
right. I mean the one thing with the log
right. I mean the one thing with the log
was just
was just
like you know judgment could be a little
like you know judgment could be a little
better there but everything else is
better there but everything else is
reasonable.
reasonable.
And what do we
have?
Silly. Lots of code being deleted. Very
Silly. Lots of code being deleted. Very
good.
Shorter. And then
Shorter. And then
what? Oh, you had to screw with uh the
what? Oh, you had to screw with uh the
end binding file.
end binding file.
That is not something that you're
That is not something that you're
supposed to have to
do for the
do for the
RNG. Why did you have to screw with this
RNG. Why did you have to screw with this
for the
RNG? And why are you reference
counting? Needs a different
We give you a way to do that already
though I'm guessing. Yes. So this is not
though I'm guessing. Yes. So this is not
understanding
understanding
API
because oh you added to the reset
function. There's no reason that you
function. There's no reason that you
can't just have this in the
um there's no reason you can't have this
um there's no reason you can't have this
in the in it function, right?
Eval needs to not use
seating.
seating.
Why? Just pass it a random ass seed.
Right. First reset. It should not use
Right. First reset. It should not use
seating.
Is there something specific you're
Is there something specific you're
trying to do here? Because like this is
trying to do here? Because like this is
one process,
one process,
right? Unique structure. Yeah. But like
right? Unique structure. Yeah. But like
why? So this is one
why? So this is one
process. So, if I give this seed like
process. So, if I give this seed like
one or whatever, this whole thing I just
one or whatever, this whole thing I just
set seed one at the start of this, then
set seed one at the start of this, then
like you're going to consume some
like you're going to consume some
RNG for the first end, right? So, if you
RNG for the first end, right? So, if you
just set the seed once initially, you'll
just set the seed once initially, you'll
use that seed for the first end and then
use that seed for the first end and then
you'll go to the second end and it'll be
you'll go to the second end and it'll be
new data, new RNG data because the seed
new data, new RNG data because the seed
still hasn't been touched and you've
still hasn't been touched and you've
already consumed the previous RNG. The
already consumed the previous RNG. The
only way you screw it up is if you set
only way you screw it up is if you set
the seed
the seed
um is if you like set the seed and reset
um is if you like set the seed and reset
and you set it all to the same seed. So
and you set it all to the same seed. So
we give you a way to pass unique
we give you a way to pass unique
parameters to each environment instance
parameters to each environment instance
on a net. I don't know if you didn't see
on a net. I don't know if you didn't see
it. Uh if you saw neural mmo though I
it. Uh if you saw neural mmo though I
did this for neural mmo.
So this is neural
So this is neural
m3. So check this out, right? Unique
m3. So check this out, right? Unique
parameters per nth. All these are unique
parameters per nth. All these are unique
parameters per
parameters per
nth. I declare them in a loop like this.
nth. I declare them in a loop like this.
I append the ids and then I call
I append the ids and then I call
vector. And if you just call vectorz on
vector. And if you just call vectorz on
it, then it makes the back end and you
it, then it makes the back end and you
can call back reset and back step on it,
can call back reset and back step on it,
which is pretty cool.
So, I'm a bit sketched on this
So, I'm a bit sketched on this
because and also I the way even if you
because and also I the way even if you
were going to add quarks, I don't think
were going to add quarks, I don't think
you added it
you added it
right. Why do you add quarks like
right. Why do you add quarks like
this? Let me see.
seed each
seed each
unique. There's no such thing as a
unique. There's no such thing as a
nonseated
nonseated
state. All right.
Okay. So, why can't you
just
Yeah. Oh, I see what you did. Okay.
After it completes the
After it completes the
day, when it completes the first day, it
day, when it completes the first day, it
resets to the start of the beginning,
resets to the start of the beginning,
right? Yeah.
Yeah, you don't even need to seed that,
Yeah, you don't even need to seed that,
man. Literally not setting the seed
man. Literally not setting the seed
would work for
that. You just call you just call
that. You just call you just call
rand. I mean, you should probably
rand. I mean, you should probably
probably should set the seed of the
probably should set the seed of the
first end. There's a thing I'm adding
first end. There's a thing I'm adding
that'll help with
that, but I don't think that this is the
that, but I don't think that this is the
right way to do it either.
here. Yeah, this is not simple. This is
here. Yeah, this is not simple. This is
You're not meant to have to deal with
You're not meant to have to deal with
[ __ ] like this yet.
This was like annoying for me to deal
This was like annoying for me to deal
with.
Like, do you understand what any of this
Like, do you understand what any of this
stuff is for?
stuff is for?
This reference
counting look something up.
Looks funny as hell.
And plus one for each seed.
That is not what these do at
That is not what these do at
all.
What? Yeah, that's not what these do at
What? Yeah, that's not what these do at
all,
all,
man. Okay, this is
man. Okay, this is
for C is a me is a it does not do memory
for C is a me is a it does not do memory
management for you. Okay, this is for
management for you. Okay, this is for
reference counting. This tells like
reference counting. This tells like
Python's garbage
Python's garbage
collector when you no longer need So you
collector when you no longer need So you
can get rid of
can get rid of
it. Yeah. You like this is you like
it. Yeah. You like this is you like
these are not here in any way that they
these are not here in any way that they
should be
here. Prevent the SEG
faults
me. Yeah, so that's fair. I have not
me. Yeah, so that's fair. I have not
memory profiled my binding stuff yet.
Um, this is more that the Python API is
Um, this is more that the Python API is
really really freaking stupid though.
That is so
stupid. Pile. Wait, why do you have
stupid. Pile. Wait, why do you have
pylon? Add seed to qu.
Oh, you force pass the seed from

Kind: captions
Language: en
Okay, we are
live. It's been kind of a [ __ ] day. I'm
live. It's been kind of a [ __ ] day. I'm
not going to
lie. Cluster is down and
lie. Cluster is down and
uh I don't freaking know. Something
uh I don't freaking know. Something
screwed with the
ISP. So, I've got a technician coming
ISP. So, I've got a technician coming
out on Sunday.
out on Sunday.
Um, I can't really do anything about it
Um, I can't really do anything about it
until then. There just not going to be
until then. There just not going to be
any experiments running for the next
any experiments running for the next
couple of
couple of
days. Uh, I do have my one box right
days. Uh, I do have my one box right
here that I can use for a few small
here that I can use for a few small
things.
All I wanted to do tonight was to start
on a few of the uh experience buffer
on a few of the uh experience buffer
changes. That's all I wanted to
changes. That's all I wanted to
do. Oops. Let's not get that. Also to
do. Oops. Let's not get that. Also to
check on this run real
quick. Okay.
Well, I mean, that's interesting,
Well, I mean, that's interesting,
right? We'll see how this curve goes,
right? We'll see how this curve goes,
but
um the advantage filtering seems to
um the advantage filtering seems to
break something
break something
here. We'll see how stable this ends up
here. We'll see how stable this ends up
being and whether this eventually
being and whether this eventually
intersects or
intersects or
not.
not.
Very odd
Very odd
though.
Okay. I want to just chill and code some
Okay. I want to just chill and code some
stuff. Oh, that's Spencer up
too. The next hour or so.
Oh, that's
Oh, that's
Linky, not
Linky, not
Spencer. All right.
Well, let's just get on to this
Well, let's just get on to this
then. I think where we left
off, I was trying to figure out what was
off, I was trying to figure out what was
wrong with
wrong with
uh the multipprocessing.
It works with one uh big block of M's.
It works with one uh big block of M's.
Doesn't work with two
Well, that's weird, isn't it? Hang on.
Well, that's weird, isn't it? Hang on.
Episode
indices. Those should not overlap,
indices. Those should not overlap,
right? Am I crazy or should those not be
right? Am I crazy or should those not be
overlapped like that?
Oh, they're not
Oh, they're not
overlapped. Yeah, they're not
overlapped. So, what the heck is wrong
overlapped. So, what the heck is wrong
then?
Why is this
6,000? Isn't it? Um
8192 rows.
No, that is still right.
I better think what can even possibly be
I better think what can even possibly be
wrong with this thing.
like there's not much,
like there's not much,
right?
right?
Am I crazy for thinking that if it's
Am I crazy for thinking that if it's
like it's got to just be something in
store?
TMH. That's
TMH. Yeah, that's correct. That's been
TMH. Yeah, that's correct. That's been
that way for months.
I didn't do something stupid for testing
I didn't do something stupid for testing
and then forget to undo it. Did
I? Yeah, this doesn't break anything.
It's not something stupid with this
It's not something stupid with this
indexing,
indexing,
right? Like it can't be
Wait. No, this is
fine. Bizarre.
I would have thought this would have
I would have thought this would have
fixed
it. It's weird cuz like it it almost
it. It's weird cuz like it it almost
does and then it crashes
does and then it crashes
right now.
I can't even think of what this would
I can't even think of what this would
be. That's the issue.
didn't miss a
field. How did I screw this up? The
field. How did I screw this up? The
thing is, this was working before,
thing is, this was working before,
wasn't
wasn't
it? Pretty sure this was working.
Could I have screwed something else up
Could I have screwed something else up
in the process of implementing this?
Like I could have,
Like I could have,
right? Could it just be something
right? Could it just be something
completely
completely
unrelated to what I'm looking at now?
samples. Set your loss to zero,
right? Got rid of LSTM here, didn't you?
right? Got rid of LSTM here, didn't you?
But you were setting it to none anyways.
the 64 horizon
do. It's going to fit, right?
64. It's only halfway.
Yeah. So, you've got room for two sets
Yeah. So, you've got room for two sets
of these buffers, right?
make a difference. I guess I got to
make a difference. I guess I got to
check the
dip cuz this doesn't make any sense.
Wait.
Shoot. This is too big of a
I do have a bunch of commits that I
I do have a bunch of commits that I
could bisect, right?
Yeah, that's fine.
We're going to just do a get bisect on
We're going to just do a get bisect on
this. I almost never have to do this,
this. I almost never have to do this,
but lately
See, it's good There.
I do not have to find this bug
I do not have to find this bug
tomorrow. Then I can do real work
tomorrow. Then I can do real work
tomorrow.
Okay. So, this one's still wrong right
Okay. So, this one's still wrong right
here.
That
That
was Let's just fall back.
We good here? We are
right. I think we're not quite as good,
right. I think we're not quite as good,
but we're still good,
right? Oh, no. This is still fine.
And then this one here.
Good on
Good on
bet. Getting us some solid PRs in
So this is
like it trains stably but it's kind of
bad. What do I call that? Is do I just
bad. What do I call that? Is do I just
label that as bad?
It's definitely worse.
At least this one's easy. This one just
runs. Do I like unindent something or
runs. Do I like unindent something or
something ridiculous like that?
No. Is this one still
No. Is this one still
bad? Oh,
no. This one
is This one is good.
Okay, so the first bad commit is
here which is let's say 8 DC
This shouldn't be a bad commit at
This shouldn't be a bad commit at
all. So, I must have really broke
all. So, I must have really broke
something. This is E3B.
Oh, is it
this? We'll keep this in mind.
Change it from less to less than equal.
I wasn't changing episode indices
I wasn't changing episode indices
before. That's weird.
And I broke it by changing
this. So there
are Hey bet.
are Hey bet.
Literally two changes that could have
Literally two changes that could have
possibly broken
anything and everything's broken
today. Just make sure that this
today. Just make sure that this
is prop
This one doesn't work,
right? Doesn't fail as hard as the other
right? Doesn't fail as hard as the other
ones, but it doesn't
work. Oh, yeah. This hard
work. Oh, yeah. This hard
fails, right?
[Music]
Not as bad as the latest branch, but
Not as bad as the latest branch, but
it's still not
it's still not
good. Looks like it's working. It should
good. Looks like it's working. It should
be solved by now.
So the only two things I
did is I change this from less
did is I change this from less
to less than
to less than
equal and then I zero
Yes. Jeez. That much of a difference,
Yes. Jeez. That much of a difference,
huh?
So that brings us back to the solve
So that brings us back to the solve
speed we
speed we
expect. If that's going to solve, which
expect. If that's going to solve, which
it should
[Music]
overwriting the first batch or
overwriting the first batch or
something.
That still doesn't
That still doesn't
work. It solved it before, didn't it?
work. It solved it before, didn't it?
Oh, no, it didn't.
These are the two things though.
Well, but we also know um
That's
crazy. It's a one character bug.
Really? Yeah. One character bug. Now
Really? Yeah. One character bug. Now
it's back to soda.
it's back to soda.
right now. It doesn't work if I do this.
Right. Yeah. No, it's going to
Right. Yeah. No, it's going to
crash. Okay.
So now multiprock should work as
well. Oops.
Make sure this does stuff.
So if this works.
Um, if this works, then I will go
Um, if this works, then I will go
relaunch a job and I guess I can review
relaunch a job and I guess I can review
Enduro
stuff. The end of works and trains,
stuff. The end of works and trains,
right, bet?
zombies are linked. Very good. All
zombies are linked. Very good. All
right, let me go pick some one small
right, let me go pick some one small
thing
then. That'll be 32 I
then. That'll be 32 I
believe. Uh 26.
Hello. What stream is this? Proper lib
Hello. What stream is this? Proper lib
dev. This is reinforcement learning dev.
dev. This is reinforcement learning dev.
I stream all my work on this. We're
I stream all my work on this. We're
going to make reinforcement learning
going to make reinforcement learning
very, very fast and sane and
very, very fast and sane and
stable. I do this full
time. So today was a lot of no fun fix
time. So today was a lot of no fun fix
attempting to fix cluster networking
attempting to fix cluster networking
issues.
Usually we do cooler
Usually we do cooler
stuff. Launching this new
experiment. I am unfortunately going to
experiment. I am unfortunately going to
have to stop the last experiment for
have to stop the last experiment for
this which was doing okay.
Um do I want to do this with or without
Um do I want to do this with or without
advantage filtering?
It's a good
question. Maybe without as a
question. Maybe without as a
[Music]
[Music]
baseline. I don't want this thing to
baseline. I don't want this thing to
fail
fail
overnight. Though to be fair, if this
overnight. Though to be fair, if this
fails
fails
overnight, that's only like what a 12
overnight, that's only like what a 12
hour 11 hour
experiment and then I could run the next
24. Yeah, I think we should do
24. Yeah, I think we should do
that. We'd be a little greedy
today. Did I not push my last bang?
This didn't
pull. Oh, I forgot to
stash. Thank you for the advertising
stash. Thank you for the advertising
bet.
So, this did kind of
So, this did kind of
okay. What do we have been prop
okay. What do we have been prop
3.4? That's a pretty decent
3.4? That's a pretty decent
run. We will be able to rerun this now
run. We will be able to rerun this now
with the the fixes.
Cool. So, this will do
Cool. So, this will do
roughly How fast we running this? It's
roughly How fast we running this? It's
actually kind of fast now,
actually kind of fast now,
right?
540. So, that's like 1.5 bill an hour.
540. So, that's like 1.5 bill an hour.
So, this will probably
do like 17 18 billion by the time I wake
do like 17 18 billion by the time I wake
up. What these curves look
like? That ought to be enough to see if
like? That ought to be enough to see if
it's bad,
it's bad,
right? I mean, it'll be a little close,
but it's got to outperform this mesh,
but it's got to outperform this mesh,
though.
though.
All
All
right, we'll take
right, we'll take
that. We will take
that. We will take
that. Let's review your
thing. That was a very silly
bug. I don't often have to pull out
bug. I don't often have to pull out
bicep.
bicep.
Okay, so we've
Okay, so we've
got heart pole
first. Wait,
first. Wait,
specify atom
specify atom
optimizer other optimizers untested.
optimizer other optimizers untested.
going to
dev. So, uh, one thing on this bet is,
dev. So, uh, one thing on this bet is,
uh, with the new stuff, it seems like
uh, with the new stuff, it seems like
you're not going to need I don't know if
you're not going to need I don't know if
you tested with Muon, but we haven't
you tested with Muon, but we haven't
needed like really specialized per end
needed like really specialized per end
type hyperparameters
type hyperparameters
anymore, which is kind of
anymore, which is kind of
cool, but I will look at that myself.
Yeah. So, this thing doesn't
Yeah. So, this thing doesn't
fly. Why are you doing uh why are you
fly. Why are you doing uh why are you
doing global path for the demos, man?
I'm not going to make you fix small
I'm not going to make you fix small
stuff like this before I merge it, but I
stuff like this before I merge it, but I
would like you to fix them at some
point. What? No.
a local compile email not
implemented. Well, you should be able
implemented. Well, you should be able
to like play the game locally and see or
to like play the game locally and see or
whatever. That's a lot easier to do than
whatever. That's a lot easier to do than
implementing all the model
implementing all the model
stuff. Get that at some
stuff. Get that at some
point locally. All right, I'll take that
point locally. All right, I'll take that
pier when it's ready. Uh, what do we
pier when it's ready. Uh, what do we
have? Is this 240
lights? I guess to be fair, there is
lights? I guess to be fair, there is
some light
physics. Wait, this is the
physics. Wait, this is the
new is this new binding format or old
new is this new binding format or old
binding format?
binding format?
Bet this some
Bet this some
siphon. Not new. Okay, that's fine.
siphon. Not new. Okay, that's fine.
Yeah, that's fine. So then you'll uh
Yeah, that's fine. So then you'll uh
That'll cut 50 lines off,
That'll cut 50 lines off,
right? Yeah, that'll cut like 50 plus
right? Yeah, that'll cut like 50 plus
lines
off. Okay.
off. Okay.
So, let's just see how your code's been
So, let's just see how your code's been
going. Can I like Where's the non-split
going. Can I like Where's the non-split
view for this stupid thing?
view for this stupid thing?
Isn't that like a
toggle
toggle
code? Let's see how your code is going.
You're over commenting a little bit.
don't know the source code. Well, they
don't know the source code. Well, they
don't know the source code because
don't know the source code because
you're not naming stuff
you're not naming stuff
well. I don't know why this is X
well. I don't know why this is X
dot. Do people use dot for
dot. Do people use dot for
vector? Oh man, that's been so
vector? Oh man, that's been so
long. I use arrow. I guess they do use x
long. I use arrow. I guess they do use x
dot for arrow but there's no reason to
dot for arrow but there's no reason to
name it like the mathematical like like
name it like the mathematical like like
it's just
it's just
vx like theta is fine and you can do
like you either name this whatever the
like you either name this whatever the
hell the character is for angular
hell the character is for angular
velocity or you name it v theta or you
velocity or you name it v theta or you
name it like
name it like
something was it omega what's the
Why do I think it's omega? It's not
Why do I think it's omega? It's not
lowerase omega,
right? It's like a W. It is omega. Yeah,
right? It's like a W. It is omega. Yeah,
lowerase
omega. Picked on a run.
I mean, you don't have to go super crazy
I mean, you don't have to go super crazy
with name. It's just like you name the
with name. It's just like you name the
thing the thing that it is that it is
thing the thing that it is that it is
and then the code should be pretty
easy. It's not that comments are bad.
easy. It's not that comments are bad.
It's just like why do you why do you
It's just like why do you why do you
need to comment the thing that the name
need to comment the thing that the name
is when it's like you have the
is when it's like you have the
name steps beyond
name steps beyond
done? You shouldn't be able to step it
done? You shouldn't be able to step it
once it's done.
You also don't need an empty client if
You also don't need an empty client if
the client has no
state. Unless there's one. Oh, there is
state. Unless there's one. Oh, there is
one down
one down
here. Yeah, but this doesn't have
here. Yeah, but this doesn't have
anything. See? So, like you don't need
anything. See? So, like you don't need
to match this just for the sake of
to match this just for the sake of
matching it. If there's no if there's no
matching it. If there's no if there's no
struck, then you just don't need
one. And then you're not going to need
one. And then you're not going to need
this either once you get rid of log
this either once you get rid of log
buffer. So this will get
simplified. If this gets cal, you don't
simplified. If this gets cal, you don't
even like this ends up zero for
even like this ends up zero for
you. So it's kind of fine to have that
you. So it's kind of fine to have that
still.
There's some more tweaks I'm thinking
There's some more tweaks I'm thinking
about like this free allocated since
about like this free allocated since
this only gets called from the C. We
this only gets called from the C. We
might just move stuff like this into the
might just move stuff like this into the
C
C
file. But yeah, there this can just be
file. But yeah, there this can just be
void.
It's kind of fine to have a
It's kind of fine to have a
close not part of the API. So you could
close not part of the API. So you could
just call close
window. This is
fine. Don't we use tab for taking
fine. Don't we use tab for taking
control? No, we use shift for taking
control? No, we use shift for taking
control. Yeah, we use shift for taking
control. Yeah, we use shift for taking
control. That's fine.
The original ends goes beyond being
The original ends goes beyond being
considered
solved. Well, then you don't do steps
solved. Well, then you don't do steps
behind beyond done, right? You do
behind beyond done, right? You do
like you do like max steps or something,
like you do like max steps or something,
right? you set like max steps to uh as
right? you set like max steps to uh as
like a
like a
parameter and then when you create this
parameter and then when you create this
you can create it with a specific number
you can create it with a specific number
of max steps and then you set done if
of max steps and then you set done if
the thing falls over and then you set
the thing falls over and then you set
done if the thing runs out of time
done if the thing runs out of time
though technically if you want to be
though technically if you want to be
really correct about it you set
really correct about it you set
truncated if you run out of time which
truncated if you run out of time which
is something that we're going to start
is something that we're going to start
considering though I haven't actually
considering though I haven't actually
added truncated to the new bindings
because most of our apps don't use
it. Not using it.
it. Not using it.
Yeah. Yeah. So, I think you're kind of
Yeah. Yeah. So, I think you're kind of
in like the over commenting stage of
in like the over commenting stage of
being a developer.
Like if I were going to comment this,
Like if I were going to comment this,
which you don't really need it because
which you don't really need it because
it says cart X, cart Y. I can tell
it says cart X, cart Y. I can tell
you're drawing the cart. I can tell
you're drawing the cart. I can tell
you're drawing the
bowl. This, I might comment, is tracked
bowl. This, I might comment, is tracked
since there's that says track
here comments aren't for
Joseph's
well should be for code literate
I mean, it really does when you've like
I mean, it really does when you've like
been programming for a while, right? It
been programming for a while, right? It
literally does be like, "Well, why did
literally does be like, "Well, why did
you just write what's written right
you just write what's written right
here, right?" Because you just you read
here, right?" Because you just you read
the code and it's like, "Yeah, that's
the code and it's like, "Yeah, that's
that's what it says.
Wait. Yeah, that's just
once. Well, there like they're just all
once. Well, there like they're just all
sorts of little things that you can
sorts of little things that you can
do. Why I chose standard default
do. Why I chose standard default
valves. Do you think that I know what
valves. Do you think that I know what
the defaults are of cartpull off the top
the defaults are of cartpull off the top
of my head? I can assure you I
don't tell you that if you wanted to be
don't tell you that if you wanted to be
fancy, you could easily make this a
fancy, you could easily make this a
difficulty parameter, though.
difficulty parameter, though.
This could be difficulty right
here. That'd be kind of
cool. Randomize domain randomized part.
cool. Randomize domain randomized part.
It's probably too easy though.
Well, yeah. I know it's so that it
Well, yeah. I know it's so that it
doesn't start balanced. I don't know
doesn't start balanced. I don't know
what the defaults are in the actual cart
what the defaults are in the actual cart
pull, though. I don't know how much it
randomizes.
0.05. So, is this harder or easier than
0.05. So, is this harder or easier than
the default?
Is this like
Is this like
easier? What do you mean it's the
easier? What do you mean it's the
same? This is 0.04
same? This is 0.04
shifted,
right? Well, make sure our cart pull
right? Well, make sure our cart pull
isn't like easier than the actual cart
isn't like easier than the actual cart
pull because we'll get shipped for that.
Like our breakout is probably easier,
Like our breakout is probably easier,
but our breakout's easier because the
but our breakout's easier because the
original is stupid.
Okay.
You're going to link me the original,
You're going to link me the original,
which you ship,
right? Uh, paste it again. The chat
right? Uh, paste it again. The chat
broke.
Is the chat still [ __ ]
broken? Yeah, my chat doesn't
broken? Yeah, my chat doesn't
work. Like the window that I have on
work. Like the window that I have on
race is
race is
broken. That's
broken. That's
bizaro. I can just
go now. I see it on I see it where you
go now. I see it on I see it where you
see it, but my terminal doesn't work.
Oh, this one isn't
Oh, this one isn't
terrible.
terrible.
Wait. Yeah, they have some shitty
Wait. Yeah, they have some shitty
graphics library,
right? What is
right? What is
this? GFX.
Where the hell is this even
Where the hell is this even
from? Do they like import
it? Oh, Pie game. Uh, yeah. I'm
it? Oh, Pie game. Uh, yeah. I'm
surprised this is the
original. We're absolutely allowed to
original. We're absolutely allowed to
and are going to
recolor puffs match puffer colors when
possible. You can't do literally no
possible. You can't do literally no
branding.
Okay. So, this
here I actually don't know if this is
here I actually don't know if this is
faster.
faster.
Um, but you know the shortcut for this,
Um, but you know the shortcut for this,
right? and log equals you can just do
right? and log equals you can just do
open curly brace zero close curly brace
open curly brace zero close curly brace
that is uh zero
strruct this is probably faster but it
strruct this is probably faster but it
doesn't matter at all
doesn't matter at all
here I actually don't know they might
here I actually don't know they might
compile to the same
Okay. Does it just get a reward of one
Okay. Does it just get a reward of one
every time?
It It's kind of a shitty reward.
It's okay
though. And then we have
this. This isn't bad. Don't do this.
this. This isn't bad. Don't do this.
This is
This is
silly. This is fine. Something like this
silly. This is fine. Something like this
is fine. This is all going to be gone
is fine. This is all going to be gone
because of the new binding. So basically
because of the new binding. So basically
I'll remove like a third of the code
I'll remove like a third of the code
with the new binding stuff which will be
with the new binding stuff which will be
nice. Yeah, it's fine to it's fine to do
nice. Yeah, it's fine to it's fine to do
that in this case. Good job. Um you have
that in this case. Good job. Um you have
VOD for this.
VOD for this.
So the suggestions I made I would
So the suggestions I made I would
suggest you do if for no other reason
suggest you do if for no other reason
other than to remind
yourself. It's also fine to delay that
yourself. It's also fine to delay that
until
until
um new bind until you go to do new
um new bind until you go to do new
bindings, but probably good to like
bindings, but probably good to like
Yeah, don't do silly stuff like
Yeah, don't do silly stuff like
this. I can't really blame you because
this. I can't really blame you because
you were probably like you weren't
you were probably like you weren't
really sure what the API boundary is.
really sure what the API boundary is.
Like is it part of the API that
Like is it part of the API that
everything has to have a client and like
everything has to have a client and like
a make client and stuff? And uh the
a make client and stuff? And uh the
answer is not really.
answer is not really.
The only things that I think are
The only things that I think are
required
required
uh are the that you need to have a
uh are the that you need to have a
render a step function and a close
render a step function and a close
function. I get scared when stuff starts
function. I get scared when stuff starts
seging. So stuff shouldn't be seging
seging. So stuff shouldn't be seging
when you're debubbing in pure C because
when you're debubbing in pure C because
you have F sanitize, right?
you have F sanitize, right?
And then even when you run the Python
And then even when you run the Python
test, like the pure Python test with the
test, like the pure Python test with the
new bindings, you'll still have F
new bindings, you'll still have F
sanitize potentially. The only time that
sanitize potentially. The only time that
F sanitize is going to like break
F sanitize is going to like break
horribly is when you run through PyTorch
horribly is when you run through PyTorch
and
stuff. All
stuff. All
right, thank you for
right, thank you for
this. We will
this. We will
this to
this to
death. I've wanted to have fart for a
death. I've wanted to have fart for a
while. Thank
you.
And props to you finding time. You're
And props to you finding time. You're
going to have you now will have a very
going to have you now will have a very
busy schedule, I imagine.
busy schedule, I imagine.
Congratulations once again.
Sting. So you put all these parameters
Sting. So you put all these parameters
back in,
back in,
huh? We could solve Enduro um with
huh? We could solve Enduro um with
literally the defaults for everything. I
literally the defaults for everything. I
tested that before.
tested that before.
Why' you take you took the RNN out as
well for a while? I finally got them
well for a while? I finally got them
ready.
ready.
Chills. Wow. Yeah. And you've got a
Chills. Wow. Yeah. And you've got a
bike. So,
bike. So,
uh, with a few days, I imagine that'll
uh, with a few days, I imagine that'll
be help appreciated.
Yeah, exactly. Just had major surgery.
Yeah, RNN isn't there. It says
none driving [ __ ]
none driving [ __ ]
Yeah, I had there was one contributor
Yeah, I had there was one contributor
back in
back in
like one of the first people to join
like one of the first people to join
with
with
Pokemon, I believe. Uh, it wasn't you.
Pokemon, I believe. Uh, it wasn't you.
It was some other
guy. Wait, this wasn't you, right? No,
guy. Wait, this wasn't you, right? No,
there was another guy who literally just
there was another guy who literally just
had a kid and then was like, you know,
had a kid and then was like, you know,
on the Discord or whatever the same day
on the Discord or whatever the same day
like hacking on stuff and then his wife
like hacking on stuff and then his wife
came in with the baby and I'm just like,
came in with the baby and I'm just like,
"What are you doing, man?
"What are you doing, man?
Congratulations. Get off of here and be
Congratulations. Get off of here and be
with your family. What are you
with your family. What are you
[Laughter]
[Laughter]
doing? What are you doing hacking on
doing? What are you doing hacking on
Pokemon with us?
Pokemon with us?
You can do that like tomorrow, next week
You can do that like tomorrow, next week
or
something. Lost
something. Lost
our That's
true.
true.
Puffer. I'll have to use some stickers.
Okay, so this is the cbind port. So
Okay, so this is the cbind port. So
you've got this in
you've got this in
net. We also have to just remove some of
net. We also have to just remove some of
these stupid arguments, right? Like
these stupid arguments, right? Like
there's no reason. The game is a fixed
there's no reason. The game is a fixed
game. You don't need to tell it the
game. You don't need to tell it the
width and the height, the car width and
width and the height, the car width and
the car height and all that [ __ ] because
the car height and all that [ __ ] because
it's part of the game. It's like there's
it's part of the game. It's like there's
no real way that you're going to ever
no real way that you're going to ever
randomize over some of this. I guess
randomize over some of this. I guess
technically max enemies or something.
technically max enemies or something.
You could randomize max enemies, but the
You could randomize max enemies, but the
rest of these
rest of these
nah when you got
nah when you got
[Music]
continuous. Yeah. But the thing is
continuous. Yeah. But the thing is
like literally this is this is the crazy
like literally this is this is the crazy
thing, right? If I make one mistake in
thing, right? If I make one mistake in
reviewing, I end up having to deal with
reviewing, I end up having to deal with
a dozen mistakes. So, the one mistake I
a dozen mistakes. So, the one mistake I
made in reviewing, it might have even
made in reviewing, it might have even
been my own mistake with Snake. Uh, it
been my own mistake with Snake. Uh, it
probably was, was passing like a couple
probably was, was passing like a couple
too many arguments from Python to Syon
too many arguments from Python to Syon
to C, and then it got into Plong and
to C, and then it got into Plong and
Breakout. And now everybody thinks that
Breakout. And now everybody thinks that
you just have to pass everything from
you just have to pass everything from
Python all the way to C even when it can
Python all the way to C even when it can
just be in the C because it's never
just be in the C because it's never
going to change. It's a constant.
going to change. It's a constant.
So, it's got to be writed at some
point. Uh, this looks like an error.
point. Uh, this looks like an error.
This doesn't get used,
right?
right?
Wait, does this does
uh you don't call a net, dude? Where's
it? Does this get used on reset or
something? Like we're not going to call
something? Like we're not going to call
the init function for you if you don't
the init function for you if you don't
call your init function here.
does get
does get
used. Let me double check this before we
used. Let me double check this before we
break
break
everything. And it does not need calling
everything. And it does not need calling
from there. Is it good called reset or
from there. Is it good called reset or
something weird? Cuz we do not call it
something weird? Cuz we do not call it
for you at
for you at
all. Yes. Okay,
fine. Probably should just get called
fine. Probably should just get called
here, but
here, but
whatever.
whatever.
Um, yeah, assigned addict a bunch of
Um, yeah, assigned addict a bunch of
stuff. Current length score. Did you
stuff. Current length score. Did you
make a reasonable score
function? Got rid of this
function? Got rid of this
garbage. 150 lines of
it.
Uhoh. Wait.
So this was from the old logging right
So this was from the old logging right
before I let you do this. But you still
before I let you do this. But you still
have this dropped
here. Uhoh. Wait. No. Log is still
here. You could have made a temp log for
here. You could have made a temp log for
this to be fair.
If you had a ton of variables that need
If you had a ton of variables that need
to be tracked like this that don't
to be tracked like this that don't
already have trackers, I would have just
already have trackers, I would have just
made like a temporary
made like a temporary
log. But
log. But
um that's fine. The enum is what I
um that's fine. The enum is what I
meant. You don't need the enum,
right? Yep. And then this is
right? Yep. And then this is
gone. It's gone.
Yeah, the enum's unused. The enum is
Yeah, the enum's unused. The enum is
from an old version of the logging. So,
from an old version of the logging. So,
this is kind of silly, right? Like you
this is kind of silly, right? Like you
just make a temp log
just make a temp log
here. Like look, if log is the reserved
here. Like look, if log is the reserved
one that we use like that we can check
one that we use like that we can check
whenever you just make like a you make
whenever you just make like a you make
like a you know like a temporary log or
like a you know like a temporary log or
whatever. you fill that thing and then
whatever. you fill that thing and then
when that thing is done then you copy
when that thing is done then you copy
the results
the results
over instead of having to do
this. That's how you would do
it. I think this is also going to be
it. I think this is also going to be
truncations name's going to be different
truncations name's going to be different
once we finish
once we finish
it. That's not getting used yet.
it. That's not getting used yet.
Yeah, this is mega silly because now you
Yeah, this is mega silly because now you
have this
twice, right? Now you have this like
twice, right? Now you have this like
this zeroing out of this
twice. Yeah. See, this could have all
twice. Yeah. See, this could have all
just been like temp
just been like temp
log. Or whatever would have been much
log. Or whatever would have been much
easier on yourself.
client
client
[Music]
[Music]
under
presumably you moved the
presumably you moved the
uh yeah you added this. Okay, that's the
uh yeah you added this. Okay, that's the
other thing I was looking for. All
other thing I was looking for. All
right. I mean the one thing with the log
right. I mean the one thing with the log
was just
was just
like you know judgment could be a little
like you know judgment could be a little
better there but everything else is
better there but everything else is
reasonable.
reasonable.
And what do we
have?
Silly. Lots of code being deleted. Very
Silly. Lots of code being deleted. Very
good.
Shorter. And then
Shorter. And then
what? Oh, you had to screw with uh the
what? Oh, you had to screw with uh the
end binding file.
end binding file.
That is not something that you're
That is not something that you're
supposed to have to
do for the
do for the
RNG. Why did you have to screw with this
RNG. Why did you have to screw with this
for the
RNG? And why are you reference
counting? Needs a different
We give you a way to do that already
though I'm guessing. Yes. So this is not
though I'm guessing. Yes. So this is not
understanding
understanding
API
because oh you added to the reset
function. There's no reason that you
function. There's no reason that you
can't just have this in the
um there's no reason you can't have this
um there's no reason you can't have this
in the in it function, right?
Eval needs to not use
seating.
seating.
Why? Just pass it a random ass seed.
Right. First reset. It should not use
Right. First reset. It should not use
seating.
Is there something specific you're
Is there something specific you're
trying to do here? Because like this is
trying to do here? Because like this is
one process,
one process,
right? Unique structure. Yeah. But like
right? Unique structure. Yeah. But like
why? So this is one
why? So this is one
process. So, if I give this seed like
process. So, if I give this seed like
one or whatever, this whole thing I just
one or whatever, this whole thing I just
set seed one at the start of this, then
set seed one at the start of this, then
like you're going to consume some
like you're going to consume some
RNG for the first end, right? So, if you
RNG for the first end, right? So, if you
just set the seed once initially, you'll
just set the seed once initially, you'll
use that seed for the first end and then
use that seed for the first end and then
you'll go to the second end and it'll be
you'll go to the second end and it'll be
new data, new RNG data because the seed
new data, new RNG data because the seed
still hasn't been touched and you've
still hasn't been touched and you've
already consumed the previous RNG. The
already consumed the previous RNG. The
only way you screw it up is if you set
only way you screw it up is if you set
the seed
the seed
um is if you like set the seed and reset
um is if you like set the seed and reset
and you set it all to the same seed. So
and you set it all to the same seed. So
we give you a way to pass unique
we give you a way to pass unique
parameters to each environment instance
parameters to each environment instance
on a net. I don't know if you didn't see
on a net. I don't know if you didn't see
it. Uh if you saw neural mmo though I
it. Uh if you saw neural mmo though I
did this for neural mmo.
So this is neural
So this is neural
m3. So check this out, right? Unique
m3. So check this out, right? Unique
parameters per nth. All these are unique
parameters per nth. All these are unique
parameters per
parameters per
nth. I declare them in a loop like this.
nth. I declare them in a loop like this.
I append the ids and then I call
I append the ids and then I call
vector. And if you just call vectorz on
vector. And if you just call vectorz on
it, then it makes the back end and you
it, then it makes the back end and you
can call back reset and back step on it,
can call back reset and back step on it,
which is pretty cool.
So, I'm a bit sketched on this
So, I'm a bit sketched on this
because and also I the way even if you
because and also I the way even if you
were going to add quarks, I don't think
were going to add quarks, I don't think
you added it
you added it
right. Why do you add quarks like
right. Why do you add quarks like
this? Let me see.
seed each
seed each
unique. There's no such thing as a
unique. There's no such thing as a
nonseated
nonseated
state. All right.
Okay. So, why can't you
just
Yeah. Oh, I see what you did. Okay.
After it completes the
After it completes the
day, when it completes the first day, it
day, when it completes the first day, it
resets to the start of the beginning,
resets to the start of the beginning,
right? Yeah.
Yeah, you don't even need to seed that,
Yeah, you don't even need to seed that,
man. Literally not setting the seed
man. Literally not setting the seed
would work for
that. You just call you just call
that. You just call you just call
rand. I mean, you should probably
rand. I mean, you should probably
probably should set the seed of the
probably should set the seed of the
first end. There's a thing I'm adding
first end. There's a thing I'm adding
that'll help with
that, but I don't think that this is the
that, but I don't think that this is the
right way to do it either.
here. Yeah, this is not simple. This is
here. Yeah, this is not simple. This is
You're not meant to have to deal with
You're not meant to have to deal with
[ __ ] like this yet.
This was like annoying for me to deal
This was like annoying for me to deal
with.
Like, do you understand what any of this
Like, do you understand what any of this
stuff is for?
stuff is for?
This reference
counting look something up.
Looks funny as hell.
And plus one for each seed.
That is not what these do at
That is not what these do at
all.
What? Yeah, that's not what these do at
What? Yeah, that's not what these do at
all,
all,
man. Okay, this is
man. Okay, this is
for C is a me is a it does not do memory
for C is a me is a it does not do memory
management for you. Okay, this is for
management for you. Okay, this is for
reference counting. This tells like
reference counting. This tells like
Python's garbage
Python's garbage
collector when you no longer need So you
collector when you no longer need So you
can get rid of
can get rid of
it. Yeah. You like this is you like
it. Yeah. You like this is you like
these are not here in any way that they
these are not here in any way that they
should be
here. Prevent the SEG
faults
me. Yeah, so that's fair. I have not
me. Yeah, so that's fair. I have not
memory profiled my binding stuff yet.
Um, this is more that the Python API is
Um, this is more that the Python API is
really really freaking stupid though.
That is so
stupid. Pile. Wait, why do you have
stupid. Pile. Wait, why do you have
pylon? Add seed to qu.
Oh, you force pass the seed from
