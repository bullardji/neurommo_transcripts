Kind: captions
Language: en
we should be back
we should be back
live yeah there we
live yeah there we
go
uh what have I messed in here
what else if I miss
oh
cool 1700 line
cool 1700 line
PR crazy amounts of code we're getting
PR crazy amounts of code we're getting
submitted now
that stream's working I can see the
that stream's working I can see the
numbers on X going
up are these still
down
down
oh uh I'll tell you what I'm going to do
oh uh I'll tell you what I'm going to do
I'm going to run downstairs
I'm going to run downstairs
and boot the two
and boot the two
boxes and then we'll do
this on
this on
stream now Perfect all right I'll be
stream now Perfect all right I'll be
right back uh I'm just going to go
right back uh I'm just going to go
reboot the boxes and we'll be
good
for
e
e
e
e e
okay
Co be
Co be
good review Andrew end
okay yeah here's our PR
okay so I can just do
okay so I can just do
start a
start a
review environment episode
review environment episode
return see where I put the
return see where I put the
mic be a little
mic be a little
better because I have the mic up here
better because I have the mic up here
really it should be like
really it should be like
here but then it's in
here but then it's in
frame we'll just put it up like that
frame we'll just put it up like that
that'll be
decent so
decent so
episode
return
good do I use uniform for learning
rate think so let me look
help that for
now log uniform values
FP coefficient I
think can I tell him not to sweep this
yeah so like the custom I think you
yeah so like the custom I think you
misunderstood
yeah you want to sweep like reward
components it's good
architecture is nuts
yep you change hidden
SI yeah so this is still
SI yeah so this is still
crazy so let's
see linear re linear
yeah you dramatically over complicated
this for
yeah this is wrong in several ways
this is
crazy very good
okay so now here's pix
I'm not going to D him for this because
I'm not going to D him for this because
technically yeah I don't really bother
technically yeah I don't really bother
checking my CX because
like you don't really need it in this
case and let's
case and let's
see this is good
probably tweet that I'm doing this
demo
demo
F human control
mode
uh the
other than that this is
fine oh he doesn't
have this is
missing we'll do this one last because
missing we'll do this one last because
it's the big
F and leave the check
F and leave the check
sure I think they're kind of silly but
sure so now the main thing is just the C
sure so now the main thing is just the C
code which presumably is very similar to
before okay so the start of this is some
constants and then this is just my log
constants and then this is just my log
buffer
buffer
code people can copy
code people can copy
in
entity presence
[Music]
[Music]
um I don't know why
these red cell
oh this is silly
yeah
up that's a little
silly this is
fine this is fine
fine
okay and
okay and
now compute
now compute
observations is going to
go over all the
agents okay so this is an ENT format and
agents okay so this is an ENT format and
fine if you're going to do it this way
fine if you're going to do it this way
fine local crop
version what
grid
cell oh that's really weird
[Music]
um e
grid
grid
cell new grid
cell okay so this is
cell okay so this is
fine and then if it's
empty for
so these mem copies Yeah so basically
so these mem copies Yeah so basically
like this is more complicated than it
like this is more complicated than it
needs to be because the choice of data
needs to be because the choice of data
structures this is why having a a good
structures this is why having a a good
grasp on like basic data structures and
grasp on like basic data structures and
stuff is very very important because if
stuff is very very important because if
you pick the wrong ones then you end up
you pick the wrong ones then you end up
with a whole bunch of extra
with a whole bunch of extra
stuff right like yeah
what is this logic chain here so if
what is this logic chain here so if
it's else if it's a trash
bin so this is early
return there a couple places here where
return there a couple places here where
you could clean this up a little bit but
you could clean this up a little bit but
I won't pick be too picky on that the
I won't pick be too picky on that the
much much larger
much much larger
issue is uh this type of stuff here like
issue is uh this type of stuff here like
this is valid but it's
this is valid but it's
same here
Zero's the
grid prob fine
let me see if I look here
so this is fine
so we have
renderer renders
okay so he's drawing stuff a little
okay so he's drawing stuff a little
differently
this is just
this is just
like this just comes with
like this just comes with
experience like this is very easy to
experience like this is very easy to
just take the color variable
out
out
cool definitely some stuff to be
cool definitely some stuff to be
improved there have been uh improvements
improved there have been uh improvements
since last time for sure definitely more
since last time for sure definitely more
way to go but you know decent progress
way to go but you know decent progress
overall I'd say um biggest thing is just
overall I'd say um biggest thing is just
like understanding how and why you're
like understanding how and why you're
picking data
picking data
structures and then on the neuronet side
structures and then on the neuronet side
I can tell a few things aren't clicking
I can tell a few things aren't clicking
um what you want
um what you want
here they're kind of two different
here they're kind of two different
network architectures that make sense
network architectures that make sense
for this one is an entity Style Network
for this one is an entity Style Network
architecture in which you have let's say
architecture in which you have let's say
that there are 10 entities in the scene
that there are 10 entities in the scene
then you're going to get data for those
then you're going to get data for those
10 entities each entity is going to have
10 entities each entity is going to have
some attributes so maybe of their
some attributes so maybe of their
position X and positioned Y and like I
position X and positioned Y and like I
don't know some index or
don't know some index or
whatever and then what you would do is
whatever and then what you would do is
you'd reshape that data in the forward
you'd reshape that data in the forward
pass to the network and you would apply
pass to the network and you would apply
the same forward pass layer separately
the same forward pass layer separately
to each entity and then probably do some
to each entity and then probably do some
like attention mechanism or pooling
like attention mechanism or pooling
across them so that you get the idea is
across them so that you get the idea is
that the structure of the
that the structure of the
network is independently applied to each
network is independently applied to each
entity that you can
entity that you can
see that's one option the other option
see that's one option the other option
which I think is generally simpler for
which I think is generally simpler for
this type of n is just to do a tile crop
this type of n is just to do a tile crop
representation
representation
so you just represent nearby data into
so you just represent nearby data into
tiles bucket it into
tiles bucket it into
tiles and then you just have a very
tiles and then you just have a very
small compet on top of that like a
small compet on top of that like a
typical representation I'll use is say
typical representation I'll use is say
an 11 by1 crop of nearby tiles I'll put
an 11 by1 crop of nearby tiles I'll put
that into a two- layer compet and then
that into a two- layer compet and then
that's a very nice representation that
that's a very nice representation that
you can run a million steps per second
you can run a million steps per second
Network on including an
Network on including an
lstm so few fundamentals there to work
lstm so few fundamentals there to work
on um but yeah good progress overall I
on um but yeah good progress overall I
think I
think I
will I'll wait for Xander
will I'll wait for Xander
to watch uh watch this
to watch uh watch this
segment and you know reply to some of
segment and you know reply to some of
these things and I'll probably chat with
these things and I'll probably chat with
them on stream or on Discord uh and then
them on stream or on Discord uh and then
we can get this
we can get this
merged even at max volume sound isn't
merged even at max volume sound isn't
that high in my
that high in my
headset is this better
I hope it was
I hope it was
audible at the very
least is this better yes audible just
least is this better yes audible just
low is it still
low not really better
really what it switched my freaking
really what it switched my freaking
microphone e
one second let me fix it this is the bad
mic e
so for some
so for some
reason for some reason it's using this
reason for some reason it's using this
microphone I have no idea why and my
microphone I have no idea why and my
expensive nice microphone isn't
expensive nice microphone isn't
working I love drivers drivers are just
working I love drivers drivers are just
the best thing ever especially on
Linux yeah but this is just like the
Linux yeah but this is just like the
random headset
mic that's so obnoxious like I don't
mic that's so obnoxious like I don't
know why that
know why that
is is it the compressor being weird hold
on all right well I have absolutely no
on all right well I have absolutely no
idea why this is so
idea why this is so
weird um when headset is on top of yeah
weird um when headset is on top of yeah
I have no idea I'll keep the stupid
I have no idea I'll keep the stupid
headset on for
headset on for
now um and then I'll have to figure out
now um and then I'll have to figure out
drivers and stuff
later this is a really nice headset by
later this is a really nice headset by
the way I really like this this is uh
the way I really like this this is uh
they weren't making them like this for a
they weren't making them like this for a
while like they didn't have the
while like they didn't have the
retractable mic in them for a while this
retractable mic in them for a while this
is so much
is so much
better um they look kind of is silly but
whatever friendly reminder to folks if
whatever friendly reminder to folks if
any of this stuff is useful to you
any of this stuff is useful to you
please go ahead and star the puffer
please go ahead and star the puffer
helps us out a
helps us out a
lot sorry to force you to keep the
lot sorry to force you to keep the
headset no
headset no
it's is fine I need a haircut soon
it's is fine I need a haircut soon
anyways I uh it's a pain for running
Okay so we've reviewed Xander's
en latest
en latest
[Music]
[Music]
F added some
F added some
comments
comments
well and
well and
discuss never
we'll see from
we'll see from
here there's other stuff I can Dev on as
here there's other stuff I can Dev on as
well for now to be fair
and actually does involve I've got two
and actually does involve I've got two
different things to check uh
vectorization two build
fixes oh is this what it was
uh I so BET's
uh I so BET's
environments he's going to want to be
environments he's going to want to be
around in person for the
around in person for the
review I have some other some other
review I have some other some other
stuff I could do right now um but I will
stuff I could do right now um but I will
open it up briefly to the stream in case
open it up briefly to the stream in case
anybody has questions or stuff that they
anybody has questions or stuff that they
would like help getting started on on
would like help getting started on on
boarding and whatnot uh if not I have a
boarding and whatnot uh if not I have a
couple things I can Dev live here on
couple things I can Dev live here on
just some rappers like one thing people
just some rappers like one thing people
have been asking for is a way to uh to
have been asking for is a way to uh to
run multiple puffer ocean environments
run multiple puffer ocean environments
on the the same process uh without
on the the same process uh without
having to write the loop yourself and C
having to write the loop yourself and C
as an
option I think if there isn't anything
option I think if there isn't anything
else more pressing that's what I'll
do I guess there's also build system
do I guess there's also build system
issues but I think we'll do we'll do
issues but I think we'll do we'll do
this for now cuz I I don't have a Repro
this for now cuz I I don't have a Repro
on
those let's do
this
okay so the issue right now the thing
okay so the issue right now the thing
that people have been
wanting is when you
wanting is when you
[Music]
[Music]
use uh when you use serial or
use uh when you use serial or
multiprocessing
where is
it I think it actually does work for
cereal so if we do Native VC with snake
cereal so if we do Native VC with snake
be a million right
okay
so why are they not compatible with
so why are they not compatible with
seral that's going to be the
question seems like it
runs but I'm not getting any stats back
so I should be getting
stats okay so there is
stats okay so there is
some substantial amount of change
some substantial amount of change
here M's handle their own data buffers
you initialize the
you initialize the
M's right
M's right
here
here
right and then oh I just have to fix the
right and then oh I just have to fix the
way data buffers get
set m.
set m.
buff is there a reason that you can't do
buff is there a reason that you can't do
just m. observations and stuff
directly I don't think
directly I don't think
so this is a big change but I think I
so this is a big change but I think I
could do it
so we have this buff thing here
right okay okay you with box do do that
right okay okay you with box do do that
about tracks
injected buffer for shared
memory I think we can just
add I think I can just add this buff
add I think I can just add this buff
keyword Arc
right gymnasium
can I
can I
make these
environments I don't think I can make
environments I don't think I can make
them a
them a
um puffer M like this
um puffer M like this
directly
right e
but how do wait how do I
but how do wait how do I
make I make the
buffer oh okay so this
buffer oh okay so this
is this gets called at the end
okay so that it's I'm doing something a
okay so that it's I'm doing something a
little tricky now let me explain um I
little tricky now let me explain um I
came up with this buffer
came up with this buffer
format for puffer environments and this
format for puffer environments and this
allows you to maintain gy and petting
allows you to maintain gy and petting
zoo while having all your data in this
zoo while having all your data in this
efficient like cash buffer structure
efficient like cash buffer structure
that can also be in shared memory the
that can also be in shared memory the
native environments in Ocean just have
native environments in Ocean just have
an optimized version of this uh but the
an optimized version of this uh but the
code looks a little different so I'm
code looks a little different so I'm
trying to see if I can make the
trying to see if I can make the
vectorization work more cleanly such
vectorization work more cleanly such
that you can have like
that you can have like
multiple uh multiple puffer Ms like
multiple uh multiple puffer Ms like
multiple ocean Ms for process if you
multiple ocean Ms for process if you
want to do that for whatever reason uh
want to do that for whatever reason uh
it would mean that like you wouldn't
it would mean that like you wouldn't
have to write vectorized stuff in
have to write vectorized stuff in
necessarily with puffer
necessarily with puffer
en um you'd just be able to have
en um you'd just be able to have
multiprocessing do that portion of the
multiprocessing do that portion of the
loop and it makes it easier for some
loop and it makes it easier for some
people plus this has been a request as
well so that's why stuff gets a little
well so that's why stuff gets a little
slow until I figure out how I want to do
slow until I figure out how I want to do
stuff I mean I think it's got to
stuff I mean I think it's got to
be like this
though and then what you do is
servations num
agents for
I really don't like having to repeat all
I really don't like having to repeat all
this logic so much
though e
okay action
space let's see if this works
emulate you don't actually need this
hold
hold
on
yeah be right back one second
I'm all
right except for
so this is never going to be none
right this is never going to be none
right this is never going to be none
right if I just do
hold on I have to not mess this up here
hold on I have to not mess this up here
like
yeah something screw here so make
buffer oh I see
this is a little
tricky so you have the array dtype and
tricky so you have the array dtype and
you have the struct D type
yeah this is a way more involved thing
yeah this is a way more involved thing
than I thought it was going to be but I
than I thought it was going to be but I
think it'll be
think it'll be
good um the thing is that so what we
good um the thing is that so what we
want to do is we want to take
want to do is we want to take
this like obstruct thing
this like obstruct thing
and we want to be able to pass
and we want to be able to pass
it uh a buffer
can I put this down
can I put this down
here what if I do
here what if I do
this and you pass it the dtype and then
this and you pass it the dtype and then
the OBS dtype right but
the OBS dtype right but
when why can't I just pass it also like
when why can't I just pass it also like
self.
observations is that not
observations is that not
valid and is
none this will just be struck I guess
and then this just
becomes is OBS
becomes is OBS
emulated this is like a particularly
emulated this is like a particularly
tricky piece of
code
code
emulate e
view
okay I'm let me see if I can clarify
okay I'm let me see if I can clarify
what I'm trying to do here so uh the
what I'm trying to do here so uh the
initial thing that made puffer lib
initial thing that made puffer lib
really that put puffer lib on the map is
really that put puffer lib on the map is
this kind of clever piece of code that
this kind of clever piece of code that
allows us to handle environments
allows us to handle environments
with uh really whatever observation and
with uh really whatever observation and
action shapes that we
action shapes that we
want and it allows you to do this and
want and it allows you to do this and
it's like compatible with everything and
it's like compatible with everything and
basically it's just a clever way of
basically it's just a clever way of
flattening everything and then
flattening everything and then
unflattening it just in time before you
unflattening it just in time before you
need
it doing that is not that hard doing
it doing that is not that hard doing
that without incurring a whole bunch of
that without incurring a whole bunch of
redundant data copies is a little
hard so what I'm essentially trying to
hard so what I'm essentially trying to
do now is reconfigure the structure of
do now is reconfigure the structure of
buffers uh used by our environment to
buffers uh used by our environment to
match the ocean buffers so that then
match the ocean buffers so that then
everything is going to be able to be
everything is going to be able to be
treated the same by vectorization and
treated the same by vectorization and
everything is nice and clean also I
everything is nice and clean also I
think we're going to be able to save a
think we're going to be able to save a
redundant copy that I noticed here at
redundant copy that I noticed here at
the same time so they should even make
the same time so they should even make
puffer lib for non-ocean environments a
puffer lib for non-ocean environments a
bit faster which would always be nice
bit faster which would always be nice
you know always nice to
see
um so this doesn't even get called
um so this doesn't even get called
anywhere
self. obstruct
so I don't think I need this at
all yeah I don't need this at
all so it does actually I think it does
all so it does actually I think it does
get simpler
just watch the review
just watch the review
there some
questions
cool for
okay so let's see if this does
okay so let's see if this does
anything what's a good environment can I
anything what's a good environment can I
do like cartpole or something
no star here
wait check
wait check
space this
OB oh this is yeah this has to be colon
this step called before reset
dude what did you do
five did he just commit his
five did he just commit his
systems
numbers holy hell so some of this is
numbers holy hell so some of this is
just forgetting um
he can't possibly have made all these
he can't possibly have made all these
changes right like something he merged
changes right like something he merged
like some different
thing all right well I'll have to ask
thing all right well I'll have to ask
him what the heck cuz I'm not just
him what the heck cuz I'm not just
merging that if like that's going to be
merging that if like that's going to be
ridiculous
ridiculous
[Music]
uh why is this not called
reset I see it calling reset right here
this should give you uh a good idea of
this should give you uh a good idea of
the quality of the gem code by the
the quality of the gem code by the
way look at
that e
but why does reset not get called
like be getting called
right 206
oh
de my
bad
bad
okay does this thing
train doesn't appear to
so let's see what we broke
actually there's very little spot here
actually there's very little spot here
for it to have broken
anything what could I have messed
up e
h
see what happens to
action
e e
or
or
truncated am I sure that this actually
truncated am I sure that this actually
worked
before let me go check that real
before let me go check that real
quick because I could have just broken
quick because I could have just broken
this particular example and not know it
this particular example and not know it
right
let's just double check that
yeah so you can see that this train's
yeah so you can see that this train's
like
like
instantly
right
e e
okay so I'm assuming some of
okay so I'm assuming some of
the oh you know what it is I'm
dumb I'm just
dumb for
n e
cool so here's our driver
cool so here's our driver
n and then we'll
do our
buffer
e e
so we have buffers equal to
this
sofm and
when you live program how do you stop
when you live program how do you stop
chat from derailing
chat from derailing
you I I just don't I mean it's like it's
you I I just don't I mean it's like it's
usually people asking me stuff about
usually people asking me stuff about
like how to contribute to puffer lib and
like how to contribute to puffer lib and
stuff so that's part of the
job now to community
project half of 2.0 was written by
project half of 2.0 was written by
contributors and um we have like another
contributors and um we have like another
5,000 lines of Code by contributors in
5,000 lines of Code by contributors in
progress I mean at some point people
progress I mean at some point people
just are writing things faster than I
can and I'm just really doing like the
can and I'm just really doing like the
biddly infrastructure bits that hold
biddly infrastructure bits that hold
everything
together more like an office
together more like an office
hour um honestly at least before I I had
hour um honestly at least before I I had
one private project that like I didn't
one private project that like I didn't
want to do on stream but I kind of just
want to do on stream but I kind of just
do all my Dev on stream or at least a
do all my Dev on stream or at least a
decent chunk of
it and people just drop by
it and people just drop by
whenever I don't know it works we've got
whenever I don't know it works we've got
uh I can't tell how many watching on X
uh I can't tell how many watching on X
but somebody's on Twitch and five people
but somebody's on Twitch and five people
on YouTube so for whatever reason people
on YouTube so for whatever reason people
like watching Dev so I just stream it
like watching Dev so I just stream it
doesn't really bother me at
all can I pass slices
here I think I have to do slices right
here I think I have to do slices right
so if I do like buff
so if I do like buff
I equals name name
space pointer is
zero agents
per so we'll see this
it's kind of sketchy the way I have this
it's kind of sketchy the way I have this
at the moment I pulled puffer tank was
at the moment I pulled puffer tank was
able to start training using breakout
able to start training using breakout
Max sync is there a way to render
Max sync is there a way to render
and output directly to a set of images
and output directly to a set of images
um I have something that'll probably
um I have something that'll probably
work for
work for
that uh if you really want to be using
that uh if you really want to be using
yeah that M
then let me find it for
you so if you run the
you so if you run the
eval you see we have a little piece of
eval you see we have a little piece of
code for
code for
this where we save
this where we save
gifts and all I do is I grab frames from
gifts and all I do is I grab frames from
here
here
does that natively that works we don't
does that natively that works we don't
usually we don't usually save like
usually we don't usually save like
images during training um just because
images during training um just because
it tends to just clog up W be like you
it tends to just clog up W be like you
end up just very very quickly generating
end up just very very quickly generating
like hundreds of gigabytes worth of
like hundreds of gigabytes worth of
image logs if you're not careful it's a
image logs if you're not careful it's a
good thing to do to be fair so we
good thing to do to be fair so we
probably should do this more often but
probably should do this more often but
what we typically will do is we'll just
what we typically will do is we'll just
evaluate checkpoints and our checkpoint
evaluate checkpoints and our checkpoint
eval script uh does have the option to
eval script uh does have the option to
uh to save gifts so like all the demo
uh to save gifts so like all the demo
gifts that you see that you see me
gifts that you see that you see me
posting they mostly come from
here checkpoint EV Val
here checkpoint EV Val
yeah we should probably have more stuff
yeah we should probably have more stuff
done during training it's just it's
done during training it's just it's
tricky because like when you have these
tricky because like when you have these
really long training runs you kind of
really long training runs you kind of
want to
want to
like I guess we could try to like
like I guess we could try to like
estimate like one gift per 10 minutes or
estimate like one gift per 10 minutes or
something it's just it's tricky to get
something it's just it's tricky to get
right it's very easy to like overwhelm
right it's very easy to like overwhelm
stuff with data I mean in puffer now we
stuff with data I mean in puffer now we
do like 100 billion step training runs
do like 100 billion step training runs
so how many gifts do you want to save
so how many gifts do you want to save
over that right
I see why I had these buffers set up the
I see why I had these buffers set up the
way that I did
though how I do this in ocean
you
super net with the
buffer but then how do you know what to
buffer but then how do you know what to
pass in
I guess because this is a vector n of
I guess because this is a vector n of
itself then it works
so obnoxiously
tricky we're doing some like puffer lib
tricky we're doing some like puffer lib
data buffer Shenanigans at the
data buffer Shenanigans at the
moment though people are free to ask
moment though people are free to ask
questions about whatever while I'm doing
questions about whatever while I'm doing
this it's just kind of
fiddly I've got like a Chicken and the
fiddly I've got like a Chicken and the
Egg problem going on here
Egg problem going on here
here where it's like I need the buffer
here where it's like I need the buffer
to populate the M but I need the m to
to populate the M but I need the m to
know the size of the
buffer I see why I was doing it with
buffer I see why I was doing it with
like post talk injection
now so janky
now so janky
though well I guess for now what I can
though well I guess for now what I can
do is I can just like
assume I can just do like self. driver
and or that num
and or that num
agents what's up back from plague hey
agents what's up back from plague hey
Spencer good to see
you you've made some nice environments
you you've made some nice environments
and post them on Twitter been adding you
and post them on Twitter been adding you
with them as well
with them as well
um I didn't really have like the plague
um I didn't really have like the plague
per se I just had a cold it was really
per se I just had a cold it was really
just a combination of like grinding a
just a combination of like grinding a
whole bunch on the 2 release and then
whole bunch on the 2 release and then
going to like a crazy busy conference
going to like a crazy busy conference
and then having like multiple minor
and then having like multiple minor
illnesses on the way back that it's just
illnesses on the way back that it's just
like all right screw it I'm going to L
like all right screw it I'm going to L
for a bit I'm still kind of lethargic
for a bit I'm still kind of lethargic
honestly like I'm probably just going to
honestly like I'm probably just going to
taper back up the exercise and taper
taper back up the exercise and taper
back up the work I don't feel great like
back up the work I don't feel great like
I haven't done any exercise in over like
I haven't done any exercise in over like
over a week um so I just I'm not going
over a week um so I just I'm not going
to feel good until I do
to feel good until I do
that but we're going to taper back up
that but we're going to taper back up
the work taper back up the exercise and
the work taper back up the exercise and
see how that goes well depending I still
see how that goes well depending I still
haven't gotten the root canal which is
haven't gotten the root canal which is
going to be fun 3D platformer really
going to be fun 3D platformer really
awesome that's going to be
awesome that's going to be
fun so many new M's to PR man this will
fun so many new M's to PR man this will
be
good I showed the uh the robot warehouse
good I showed the uh the robot warehouse
and to um to a company at nups and they
and to um to a company at nups and they
liked it by the way obviously very
liked it by the way obviously very
simple
but I know putting feelers out
they actually say that they have like
they actually say that they have like
their simplest Sims kind of look like
their simplest Sims kind of look like
that
that
so you know ours look like that and they
fast yeah so the way we're going to do
fast yeah so the way we're going to do
this is we're just going to
this is we're just going to
do
do
observations try like One agent World
observations try like One agent World
building and one to solve oh that's what
building and one to solve oh that's what
you
meant that is
meant that is
hard that is
hard I'm warning you that you're jumping
hard I'm warning you that you're jumping
in at stuff that's like that's like PhD
in at stuff that's like that's like PhD
research right there that's like you
research right there that's like you
know somebody's like main area is what
know somebody's like main area is what
that would
be you can do
be you can do
it which might be tricky
any research tasks you want me to dive
any research tasks you want me to dive
into well on the research side it really
into well on the research side it really
depends what you're interested in um
depends what you're interested in um
what I was going to do for you if you
what I was going to do for you if you
didn't have other ideas and you just
didn't have other ideas and you just
just wanted like a really good practical
just wanted like a really good practical
way to contribute to the research and
way to contribute to the research and
science side of stuff uh and learn a ton
science side of stuff uh and learn a ton
and be guaranteed that you're not just
and be guaranteed that you're not just
going to be spinning your
going to be spinning your
wheels um I was going to get you
wheels um I was going to get you
involved with like the main like make RL
involved with like the main like make RL
stable and sane efforts that are going
stable and sane efforts that are going
to be starting basically as soon as I
to be starting basically as soon as I
just like clean up 20 a bit and
just like clean up 20 a bit and
integrate all these new Ms you can in
integrate all these new Ms you can in
fact you're already free to start on
fact you're already free to start on
that I'm I'll be happy to jum jump in uh
that I'm I'll be happy to jum jump in uh
invoice later and kind of brief you on
invoice later and kind of brief you on
what we're intending to do I got like a
what we're intending to do I got like a
couple very actionable things right now
couple very actionable things right now
that you can try I've got some bigger
that you can try I've got some bigger
ideas as well but it's all going to be
ideas as well but it's all going to be
like pretty doable um
yeah it's generally pretty accessible
yeah it's generally pretty accessible
work
work
um so one one of the Small Things One of
um so one one of the Small Things One of
like the smaller things is going to be
like the smaller things is going to be
just adding continuous modes to breakout
just adding continuous modes to breakout
pong and Enduro and then running
pong and Enduro and then running
comprehensive
comprehensive
oblations uh to see like continuous
oblations uh to see like continuous
versus discreet performance because in
versus discreet performance because in
theory right the environment is the same
theory right the environment is the same
but practically there are some
but practically there are some
algorithmic differences uh there's a
algorithmic differences uh there's a
work I can point to you from Pablo
work I can point to you from Pablo
Castro on this happy to get going I got
Castro on this happy to get going I got
final inspections passed on my
final inspections passed on my
construction deal very nice so I have
construction deal very nice so I have
more time soon that's
more time soon that's
good yeah so the only thing that's going
good yeah so the only thing that's going
to throw me for a little bit of a loop
to throw me for a little bit of a loop
is the uh I got a root canal in a few
is the uh I got a root canal in a few
days and I'm going to have to figure out
days and I'm going to have to figure out
basically I'm pretty sure that the
basically I'm pretty sure that the
dentist I went to just kind of screwed
dentist I went to just kind of screwed
up my tooth so I'm hoping that that's
up my tooth so I'm hoping that that's
actually going to just be fine but there
actually going to just be fine but there
might be some
might be some
complications I had like a stupid
complications I had like a stupid
dentist that just like they took the
dentist that just like they took the
x-rays they started drilling my tooth
x-rays they started drilling my tooth
and then they went oops we actually
and then they went oops we actually
can't drill this one this one need the
can't drill this one this one need the
root
canal
ridiculous yeah so I'm not going back to
ridiculous yeah so I'm not going back to
them they're kind of stupid
yeah
know agents per batch
voice later otherwise kind of
voice later otherwise kind of
crazy yeah no worries so I mean if you
crazy yeah no worries so I mean if you
just want like the brief version of
it it's this
it it's this
paper I went running with uh with this
paper I went running with uh with this
guy at
guy at
nups he does a bunch of cool work so he
nups he does a bunch of cool work so he
made a continuous action
made a continuous action
version of
version of
Atari you can actually see I tried to
Atari you can actually see I tried to
kind of do something like this with the
kind of do something like this with the
Moa as well I had a very similar idea to
Moa as well I had a very similar idea to
this and didn't really follow up on it
this and didn't really follow up on it
but pretty much like it should not be
but pretty much like it should not be
that many lines of code like basically
that many lines of code like basically
you just have to like change the action
you just have to like change the action
spaces to be floats and then have a flag
spaces to be floats and then have a flag
in the python environment like
in the python environment like
discretize or not disc discretize right
discretize or not disc discretize right
like discretize equal true or whatever
like discretize equal true or whatever
or actually it should be the other way
or actually it should be the other way
around it should be like continuous
around it should be like continuous
equal false by default and if you set
equal false by default and if you set
continuous to true it gives you a box
continuous to true it gives you a box
action space um you know it passes your
action space um you know it passes your
raw inputs as like as the float
raw inputs as like as the float
values
values
um yeah so if you did that then we would
um yeah so if you did that then we would
be able to essentially get a very clear
be able to essentially get a very clear
picture as to the fundamental
picture as to the fundamental
algorithmic differences between
algorithmic differences between
continuous and discreet and that's like
continuous and discreet and that's like
a pretty big area for like it's like a
a pretty big area for like it's like a
pretty likely area where things are
pretty likely area where things are
screwy in RL right now so that's like
screwy in RL right now so that's like
one of many many many things that we're
one of many many many things that we're
going to be doing um for like 20 on to
going to be doing um for like 20 on to
fix RL but that's like a pretty quick
fix RL but that's like a pretty quick
and actionable
one cuz they didn't run hyper parameter
one cuz they didn't run hyper parameter
sweeps like they didn't run
sweeps like they didn't run
hyperparameter sweeps on this work at
hyperparameter sweeps on this work at
all um so we have you know full hyper
all um so we have you know full hyper
Prem sweeps that we can do because our
Prem sweeps that we can do because our
M's are actually
M's are actually
fast
right
yeah so if you're interested in that
yeah so if you're interested in that
that's like a nice reasonably scoped
that's like a nice reasonably scoped
project for
you I'd say decent way to onboard to
you I'd say decent way to onboard to
science
science
side break yeah start with breakout and
side break yeah start with breakout and
pong we'll see if we can get b figure
pong we'll see if we can get b figure
out Enduro with it as
well want to play with 3D M yeah those
well want to play with 3D M yeah those
are cool did you see um the like
are cool did you see um the like
Robo robocup or whatever it was the
Robo robocup or whatever it was the
soccer Type M from Nev in the chat I'm
soccer Type M from Nev in the chat I'm
not touching I yeah I got to do a code
not touching I yeah I got to do a code
review for him he's got a lot of code in
there we'll get him to add continuous to
there we'll get him to add continuous to
that for us
native or was
bind I thought it was native yeah cuz I
bind I thought it was native yeah cuz I
saw him like developing it over time
saw him like developing it over time
right he posted a bunch of different
right he posted a bunch of different
versions didn't
he oh there's also classic control like
he oh there's also classic control like
there's cartpole discreet and continuous
there's cartpole discreet and continuous
but that's probably really simple for
going to hop off and link up later
going to hop off and link up later
awesome good to good to see a Spencer
awesome good to good to see a Spencer
I'll be uh I'll be around
I'll be uh I'll be around
no attribute
actions I really don't like the way this
actions I really don't like the way this
is going
is going
here cuz you have to add buff now to all
here cuz you have to add buff now to all
the make
functions but it is
functions but it is
required so let's say that we tolerate
required so let's say that we tolerate
that I think it'll be okay I think I
that I think it'll be okay I think I
just have to keep
going for
there we
go for
self. buff
I don't know anything about Docker but
I don't know anything about Docker but
one bash Docker sh test how can I
one bash Docker sh test how can I
use demo. P
use demo. P
so right here this is uh the puffer tank
so right here this is uh the puffer tank
like after you clone the docker it'll
like after you clone the docker it'll
take a second to well it'll take a while
take a second to well it'll take a while
to install the first time but then it'll
to install the first time but then it'll
be fast thereafter so you do you run
be fast thereafter so you do you run
Docker like this it immediately boots me
Docker like this it immediately boots me
into my
into my
container and a puffer
container and a puffer
lib puffer
lib puffer
snake mode train VC you know native
snake mode train VC you know native
whatever and uh did I break anything
whatever and uh did I break anything
yeah no so this still works even on my
yeah no so this still works even on my
messy local Dev so you should be able to
messy local Dev so you should be able to
get this directly from the container
get this directly from the container
make sure that you got the new container
make sure that you got the new container
though cuz make sure that you have the
though cuz make sure that you have the
20 one because up in I just fixed
20 one because up in I just fixed
earlier today uh this morning the
earlier today uh this morning the
container repo was on the 1 branch and I
container repo was on the 1 branch and I
had to bump it to the two Branch so make
had to bump it to the two Branch so make
sure that you have two of puffer tank
welcome to all the YouTube
welcome to all the YouTube
folks please do star the repo to help me
folks please do star the repo to help me
out I remind people because they
out I remind people because they
actually do star and it does
actually do star and it does
help how can I import my M and try wrap
help how can I import my M and try wrap
it with puffer lib if I am running the
it with puffer lib if I am running the
docker uh you just treat your Docker
docker uh you just treat your Docker
like any other development environment
like any other development environment
so you know if you have your environment
so you know if you have your environment
in a separate repository you just clone
in a separate repository you just clone
it inside of the docker container
right it's just like a heavier like a
right it's just like a heavier like a
heavier virtual environment you can sort
heavier virtual environment you can sort
of think of it so you just set
of think of it so you just set
everything up you basically treat it
everything up you basically treat it
like its own
machine um it takes a little bit longer
machine um it takes a little bit longer
to set up the first time cuz it's like
to set up the first time cuz it's like
it's handing you a full image with 12
it's handing you a full image with 12
gbt of stuff on it but then the cool
gbt of stuff on it but then the cool
thing about the containers is let's say
thing about the containers is let's say
that you need to Nuke it and reset it to
that you need to Nuke it and reset it to
scratch that's literally like a
scratch that's literally like a
10-second
10-second
process so it gives you a really nice
process so it gives you a really nice
consistent development environment where
consistent development environment where
just nothing ever goes wrong which is
just nothing ever goes wrong which is
pretty nice for
still not
working so that's what you do when
working so that's what you do when
you're Dev like right now you modify
you're Dev like right now you modify
scripts inside
scripts inside
puffer and yeah I'm testing so anytime
puffer and yeah I'm testing so anytime
you see the little puffer fish prompt on
you see the little puffer fish prompt on
my screen that's cuz I'm inside of the
container I do basically all my
container I do basically all my
development in containers I'm on a Linux
development in containers I'm on a Linux
desktop and I'm still doing my
desktop and I'm still doing my
development inside of containers because
development inside of containers because
it means I never mess up like I never
it means I never mess up like I never
mess up my base operating system right
mess up my base operating system right
everything that I mess with is confined
everything that I mess with is confined
to The Container so it's very easy to
to The Container so it's very easy to
keep all your systems clean and the
keep all your systems clean and the
really nice thing about this is if you
really nice thing about this is if you
just decide to start contributing to
just decide to start contributing to
puffer lib and let's say that we decide
puffer lib and let's say that we decide
to give you cluster access uh you
to give you cluster access uh you
literally just get booted right into a
literally just get booted right into a
puffer tank instance on one of our
puffer tank instance on one of our
desktops it's the identical setup
desktops it's the identical setup
locally and on the
servers there's cart pole
servers there's cart pole
fixed so this design actually does work
probably need
probably need
um ocean spaces
maybe yeah these are gymnas Maps
that's
backwards for
oh it's because uh it's getting imported
oh it's because uh it's getting imported
from the extensions isn't
from the extensions isn't
it yeah that's
it yeah that's
why
why
integer yeah cuz it's in the
integer yeah cuz it's in the
scon what cool things did you see at
nups I got time to see maybe like five
nups I got time to see maybe like five
posters at all of nups um I was pretty
posters at all of nups um I was pretty
much doing meetings the whole way
much doing meetings the whole way
through so I
through so I
saw continuous to action space Atari
saw continuous to action space Atari
stuff from Pablo's just good
stuff from Pablo's just good
science uh there was some op Optimizer
science uh there was some op Optimizer
stuff and actually we're going to
stuff and actually we're going to
there's some Optimizer stuff that we're
there's some Optimizer stuff that we're
going to collab on to see if like if
going to collab on to see if like if
optimizers make a difference for RL I
optimizers make a difference for RL I
saw that but mainly though like I talked
saw that but mainly though like I talked
to several different Labs I talked to a
to several different Labs I talked to a
couple of companies as well and just
couple of companies as well and just
like a ton of researchers on like stuff
like a ton of researchers on like stuff
that we can do with puffer lib and you
that we can do with puffer lib and you
know how puffer lib can help people in
know how puffer lib can help people in
their research and you know we set up a
their research and you know we set up a
couple new collaborations and then we
couple new collaborations and then we
have a couple pending things more on the
have a couple pending things more on the
business side as well well so I didn't
business side as well well so I didn't
really see a ton of like crazy new
really see a ton of like crazy new
projects that I hadn't already seen you
projects that I hadn't already seen you
kind of already know everything that's
kind of already know everything that's
out there just from
out there just from
Twitter
Twitter
um but it was still very productive like
um but it was still very productive like
that's not the goal of conferences
that's not the goal of conferences
usually um conferences are much more for
usually um conferences are much more for
networking and for meetings and for like
networking and for meetings and for like
setting up collabs and
setting up collabs and
stuff what Vector stuff are you working
stuff what Vector stuff are you working
on right now uh I'm trying to bring the
on right now uh I'm trying to bring the
puffer emulated the emulated puffer API
puffer emulated the emulated puffer API
closer not even the API the internals
closer not even the API the internals
closer to the um puffer ocean internals
closer to the um puffer ocean internals
because that will let us do stuff uh
because that will let us do stuff uh
that'll let us clean up some of the
that'll let us clean up some of the
vectorization stuff on Ocean
vectorization stuff on Ocean
environments so like you'll be able to
environments so like you'll be able to
run cereal on top of puffer M and stuff
run cereal on top of puffer M and stuff
like that that's been a request I
like that that's been a request I
thought that that would be a pretty
thought that that would be a pretty
simple one but actually I have to
simple one but actually I have to
rewrite a fair bit of stuff to make that
rewrite a fair bit of stuff to make that
work uh to make that work cleanly and
work uh to make that work cleanly and
fast so that's what I'm doing at the
moment valid
indices did I like forget to run this or
indices did I like forget to run this or
something what's what's going
on what's the benefit of running it's
on what's the benefit of running it's
just if you're lazy and you don't want
just if you're lazy and you don't want
to write the loops and
to write the loops and
see
see
um to be fair this is nice for new
um to be fair this is nice for new
developers who like want to write puffer
developers who like want to write puffer
M's but in Python CU there's still
M's but in Python CU there's still
benefits to doing that and then you
benefits to doing that and then you
don't have to write the loop yourself um
don't have to write the loop yourself um
but mainly it's like uh a client wanted
but mainly it's like uh a client wanted
this feature so it's a little more
this feature so it's a little more
involved than IID expected but yeah
involved than IID expected but yeah
we'll do
it and it's not a bad thing to add
it and it's not a bad thing to add
either right it's just it wouldn't be
either right it's just it wouldn't be
the top of my
the top of my
priorities can you explain action spaces
priorities can you explain action spaces
in puffer P bit for instance can you mix
in puffer P bit for instance can you mix
discre discreet and continuous
discre discreet and continuous
discreet action spaces ever Superior for
discreet action spaces ever Superior for
training so uh you currently cannot mix
training so uh you currently cannot mix
them you can have multi- discreete
them you can have multi- discreete
action spaces you can have discrete
action spaces you can have discrete
action spaces and then you can have you
action spaces and then you can have you
know arbitrary dimensional continuous
know arbitrary dimensional continuous
action spaces you just you can't mix
action spaces you just you can't mix
them at the moment that is something we
them at the moment that is something we
could support that we just haven't
could support that we just haven't
um are discrete action spaces ever
um are discrete action spaces ever
Superior say for training efficiency it
Superior say for training efficiency it
seems like the answer is yes from
seems like the answer is yes from
Pablo's uh from Pablo's work and
Pablo's uh from Pablo's work and
anecdotally but to be fair uh This
anecdotally but to be fair uh This
research really hasn't been done
research really hasn't been done
thoroughly enough to say for sure and I
thoroughly enough to say for sure and I
actually was just talking with Spencer
actually was just talking with Spencer
about some work we're going to do to uh
about some work we're going to do to uh
to really investigate that for
to really investigate that for
sure we like we ideally it should just
sure we like we ideally it should just
be as simple as like Po with continuous
be as simple as like Po with continuous
PO with discreet see which see what the
PO with discreet see which see what the
difference is
right speed-wise they're the same um
right speed-wise they're the same um
performance-wise maybe
not true
what is multi-
what is multi-
discreet just multiple discreet actions
discreet just multiple discreet actions
uh that occur at the same time so like
uh that occur at the same time so like
let's say that you wanted to have your
let's say that you wanted to have your
you don't want to like expand out your
you don't want to like expand out your
keyboard action space so it's like WD
keyboard action space so it's like WD
and then space is like or shift is like
and then space is like or shift is like
Sprint you could have a 01 for shift and
Sprint you could have a 01 for shift and
then WD your normal keys and then you
then WD your normal keys and then you
would have to learn you know the
would have to learn you know the
combination over stuff generally you use
combination over stuff generally you use
multi- discreet when uh action spaces
multi- discreet when uh action spaces
would be too big to unravel like we do
would be too big to unravel like we do
this in uh puffer MOBA for instance but
this in uh puffer MOBA for instance but
then neural MMO we specifically
then neural MMO we specifically
architected that so that it wouldn't
architected that so that it wouldn't
need multi- discreet and it's just
need multi- discreet and it's just
discreet so it really depends on your
discreet so it really depends on your
environment
well something screwy here isn't
well something screwy here isn't
it or no
nice that's really cool
yeah what if I don't
have what if I don't add the extension
isn't this thing
backwards
for
e e
isn't
isn't
it oh wait
what seed and reset
it's really
it's really
weird isn't
it observation
and know this is
correct somehow this got
injected kind of weird
how would this have happened
okay so this is correct right
okay so this is correct right
here um so my guess
here um so my guess
is that this
happens right
happens right
here be my guess
yeah so okay so this is wrong um emulate
OB e
yeah I knew that there was something
yeah I knew that there was something
weird with this
weird with this
function there's like there's always
function there's like there's always
been something slightly off with this
oh you know what it is okay I'm passing
oh you know what it is okay I'm passing
the
wrong for
let's see about this
okay so this didn't mess this up
right mix D type is real bad there
oh no it's not because this just gives
oh no it's not because this just gives
you bites yeah that's
fine is it possible to run not on GPU I
fine is it possible to run not on GPU I
get Auda related
get Auda related
error oh um um
error oh um um
[ __ ] where do you get the
[ __ ] where do you get the
error you might be able to run it just
error you might be able to run it just
with
with
like without gpus
like without gpus
all but it's really meant to be a Cuda
all but it's really meant to be a Cuda
container
container
um put error in Discord
waiting for error
holy
twitch might not be letting you uh paste
twitch might not be letting you uh paste
it you can put it in Discord and let me
know yeah just put the error in Discord
know yeah just put the error in Discord
like just copy paste it I'll look at
like just copy paste it I'll look at
it that's why I'm streaming it's so I
it that's why I'm streaming it's so I
can fix stuff you
can fix stuff you
know no point in streaming stuff if I
know no point in streaming stuff if I
don't don't actually bother fixing stuff
don't don't actually bother fixing stuff
for people
really build to
yeah maybe I should ship a CPU version
yeah maybe I should ship a CPU version
of this um it's just annoying because
of this um it's just annoying because
it's like torches installed at the
it's like torches installed at the
lowest level of our
lowest level of our
container um so this is not going to
work you can try stuff
work you can try stuff
locally um
locally um
the container is really meant for
the container is really meant for
Cuda clone the puff for yeah just try
Cuda clone the puff for yeah just try
cloning it if it doesn't build let me
cloning it if it doesn't build let me
know by the way cuz people have been
know by the way cuz people have been
having some weird local build errors and
having some weird local build errors and
that's like top priority to have fixed
that's like top priority to have fixed
so if something doesn't just work
so if something doesn't just work
immediately let me
know you really should just need like
know you really should just need like
puffer lib GCC should be
puffer lib GCC should be
good python can you try it with
good python can you try it with
three okay so I can either try to fix it
three okay so I can either try to fix it
for you with
for you with
312 did you post the disc details error
312 did you post the disc details error
I guess it's just that it doesn't
I guess it's just that it doesn't
exist hang
on what even uses distutils though
uh let me make sure I save
this e
just paste the raw text is
fine if your copy paste is weird and
fine if your copy paste is weird and
broken then sure paste screenshots
broken then sure paste screenshots
doesn't
matter
for for
okay so there's no disc
dils e
[Music]
ah python okay
okay I guess I still need to do
okay I guess I still need to do
this yeah you still need to install it
this yeah you still need to install it
separately
okay well this is weird because there
okay well this is weird because there
shouldn't be a VM I guess if you're not
shouldn't be a VM I guess if you're not
using the container then you have a VM
using the container then you have a VM
okay that's
fine what in the
fine what in the
hell that's a fun looking error message
you're
you're
fine let me take a look at
it let me see if I can reproduce
it
e for
got to love the python ecosystem
got to love the python ecosystem
holy
e e
still no
might just be the old numpy
version e
no torch
no torch
lovely um
do this
almost there I think we'll have your
almost there I think we'll have your
3.12 version working very
3.12 version working very
soon uh
soon uh
seriously collecting path
tools 0.9.1
one literally all I have to do is just
one literally all I have to do is just
clean out some old packages here and
clean out some old packages here and
you'll be
good and the deal I will make you is I
good and the deal I will make you is I
will push
will push
this um but since you're the one who
this um but since you're the one who
requested this feature
requested this feature
uh the deal is that if you find weird
uh the deal is that if you find weird
broken stuff on this thing that I'm
broken stuff on this thing that I'm
pushing for you you are obligated to
pushing for you you are obligated to
tell
tell
me fair
deal hopefully this is not breaking my
deal hopefully this is not breaking my
container
love when pytorch downloads gigabytes of
stuff literal gigabytes of
stuff literal gigabytes of
code yes this definitely needs to be
code yes this definitely needs to be
bigger than the Linux
kernel
for e
there you
go me make sure it
go me make sure it
trains 1.1 million steps a second works
trains 1.1 million steps a second works
fine on the new P torch
is the snake now training way
worse oh no there it
goes e
okay so this is
good that is very
distracting
for e
I think whatever this was like 20
I think whatever this was like 20
minutes or something for a PR is not a
minutes or something for a PR is not a
bad turnaround time
cool your fish your fix has been
pushed let me know if that
works for
oops no different
bug post
it cuz I did just run it on
312 is this the new one did you like
312 is this the new one did you like
replace it oh no here it is
uh
really pretty sure I just tried this
you pulled the latest
right seems to compil just fine
this is why containers are nice because
this is why containers are nice because
python is just generally a language that
python is just generally a language that
has absolutely terrible build
utils okay well include python. H
utils okay well include python. H
failing
um yeah something is not like
um yeah something is not like
something's not set up up correctly I'm
something's not set up up correctly I'm
pretty sure
pretty sure
because this is like you not having
because this is like you not having
scyon or
something so I don't know how this would
something so I don't know how this would
happen
here uh it should be installed by puffer
here uh it should be installed by puffer
lib you can try to install it
separately I don't know have you tried
separately I don't know have you tried
just
this jadine sometimes knows obscure
this jadine sometimes knows obscure
obnoxious error messages
do you have uh python 312
do you have uh python 312
Dev or did you just get python
312 I would try
this e
that's
fun let me know so I can like switch
fun let me know so I can like switch
back to 20 if uh if it works
does that work
yet all right
I'll make sure that uh 311 still
I'll make sure that uh 311 still
compiles while you do that
stuck
at oh well it's not
at oh well it's not
stuck I got a good machine
after I bought this machine I just
after I bought this machine I just
realized like wow actually I've never
realized like wow actually I've never
had a machine this good for personal
had a machine this good for personal
development it
development it
worked
worked
yeah uh apparently I screwed something
yeah uh apparently I screwed something
up
though unterminated string
literal are you kidding me I merged this
literal are you kidding me I merged this
PR and the guy freaking broke
PR and the guy freaking broke
it oh my God
God getting demerits for
that that's
embarrassing for
and stop letting people PR stuff to 2 if
and stop letting people PR stuff to 2 if
they're going to break
[ __ ] let me know how your training is
[ __ ] let me know how your training is
going
going
then uh on my system
it's actually kind of cool I get uh
it's actually kind of cool I get uh
250,000 steps per second on
CPU is this one you okay well you just
CPU is this one you okay well you just
you you don't just run demo. like
that it you got to you don't just run
that it you got to you don't just run
demo.
demo.
py um it shouldn't even let me
py um it shouldn't even let me
see uh that still might break stuff
see uh that still might break stuff
actually
actually
[ __ ] well no it doesn't break stuff on
[ __ ] well no it doesn't break stuff on
mine that's weird
um
um
really why does it work on mine
what gem version do you have
installed pip freeze pipe GP gem
so why does it work on mine and not on
so why does it work on mine and not on
yours
I get
gem grab numpy
H that is
H that is
weird why would that
be so I can import disc details
I can't see
Discord what do you mean
oh
yeah I'm wondering if it's because I
yeah I'm wondering if it's because I
have like the 3.11 version of disc
have like the 3.11 version of disc
details that it works
yeah you can just do
yeah you can just do
that if you just want it to
work so it basically looks like
um it basically looks like we'll have to
um it basically looks like we'll have to
drop gy if we want uh to support
3.12 want install python yeah they bump
3.12 want install python yeah they bump
the python versions up every so often
the python versions up every so often
the default ones
the default ones
um I think that I have like we will have
um I think that I have like we will have
to drop gym support is the thing if we
to drop gym support is the thing if we
want
want
uh if we want this to
work which is weird cuz I'm running it
work which is weird cuz I'm running it
with 3.12 but I have disc
with 3.12 but I have disc
utils um so probably it's like importing
utils um so probably it's like importing
the 311 version and it's just like
working that's so noxious
though
for e
does work with 312 but you need the 311
does work with 312 but you need the 311
dist utils and I think that we have to
dist utils and I think that we have to
get rid of
get rid of
gy I could technically add
um so I could technically add
something it would be a little Jank
something it would be a little Jank
though given that you don't absolutely
though given that you don't absolutely
need 312 12 for
need 312 12 for
now uh I would suggest just using 311
now uh I would suggest just using 311
cuz like there there are things I can do
cuz like there there are things I can do
to get it to work but it it like it'd be
to get it to work but it it like it'd be
pretty
pretty
Jank yeah 311 should just work already
Jank yeah 311 should just work already
helped a ton yeah no
helped a ton yeah no
worries I'm always happy to fix stuff if
worries I'm always happy to fix stuff if
it's like quick but like in this case
it's like quick but like in this case
it's like I'd either have to basically
it's like I'd either have to basically
I'd have to go mess around with
I'd have to go mess around with
conditional Imports with gy so that like
conditional Imports with gy so that like
you only import gy if it's supported and
you only import gy if it's supported and
then 312 works on all non- gy
then 312 works on all non- gy
environments um I'd have to do something
environments um I'd have to do something
janky like
that but then like I'm surprised it even
that but then like I'm surprised it even
lets you install gym in the first place
lets you install gym in the first place
it's like
it's like
weird what the [ __ ] is wrong with this
weird what the [ __ ] is wrong with this
now
I don't know what the heck this thing is
I don't know what the heck this thing is
doing oh it's like now it's using python
312 oh I know what it's doing
312 oh I know what it's doing
okay I I still know how to fix your bug
okay I I still know how to fix your bug
but
but
um e
okay so we'll keep on this infra for a
okay so we'll keep on this infra for a
little bit and then cold to
little bit and then cold to
day unless uh there's anything else to
review oh I haven't checked
review oh I haven't checked
Xander Xander have anything
no e
hm
I might have to revert
that yeah the numpy version is required
that yeah the numpy version is required
by too much
by too much
crap I got to revert that real quick
crap I got to revert that real quick
that's
annoying
e for
okay
okay this still works and now we do
okay this still works and now we do
cereal uh we can't do this one it's
cereal uh we can't do this one it's
going to be
going to be
puffer cereal
yeah this is what we were doing before
okay so flat
okay so flat
is
box
box
in8
image uh image is legitimately out of
image uh image is legitimately out of
bounds
bounds
here okay that's
interesting so this is actually a
interesting so this is actually a
correct check that's
correct check that's
funny for
still not in
space okay
okay so it
says
Ah see this is actually a good
check
for e
let's try
this let can go down here
look at
look at
that
boom so this now works
boom so this now works
um this is a nice valid proof
um this is a nice valid proof
concept We have basically what we've
concept We have basically what we've
done here is we've taken the nice fancy
done here is we've taken the nice fancy
new
new
infrastructure uh that is for dedicated
infrastructure uh that is for dedicated
environments and we've kind of made
environments and we've kind of made
something that's very similar
something that's very similar
for uh thirdparty
for uh thirdparty
environments that
environments that
includes like our emulation
includes like our emulation
functionality and stuff so this has two
functionality and stuff so this has two
nice effects one is that this is going
nice effects one is that this is going
to make it easier for us to do to do the
to make it easier for us to do to do the
opposite and add our emulation code into
opposite and add our emulation code into
native Ms when we need that um but
native Ms when we need that um but
also uh this is going to make it easier
also uh this is going to make it easier
for us to get our vectorization like our
for us to get our vectorization like our
serial stuff working on Ocean M as
serial stuff working on Ocean M as
well so this will be nice now there are
well so this will be nice now there are
a couple issues the first is this is
a couple issues the first is this is
like touching a critical critical piece
like touching a critical critical piece
of code and puffer so I have to actually
of code and puffer so I have to actually
make sure that this works properly
make sure that this works properly
before I ship it uh and then second of
before I ship it uh and then second of
all this is like a third of what I
all this is like a third of what I
actually need to do because there's also
actually need to do because there's also
a whole separate multi-agent path and I
a whole separate multi-agent path and I
have to fix that and then there's also a
have to fix that and then there's also a
multiprocessing section that I haven't
multiprocessing section that I haven't
touched yet
touched yet
either
um this is decent progress
though really the only thing that I
though really the only thing that I
don't like is that I have to repeat this
don't like is that I have to repeat this
giant block of code
giant block of code
constantly I think I just make a
constantly I think I just make a
function for
function for
this like a set buffers function
yeah we can just do this right right
and then we'll just reuse this
and then we'll just reuse this
function all over the
place and then I won't have to deal with
place and then I won't have to deal with
this
cool and I want this in pop
cool and I want this in pop
Li vation
just needs to have some
just needs to have some
buffers like
this realize disc is
this realize disc is
full we'll fix
full we'll fix
later yeah that'll get you good night
later yeah that'll get you good night
thanks for dropping by don't forget to
thanks for dropping by don't forget to
Star the puffer help us out a
Star the puffer help us out a
lot really does
already start very good that's what we
already start very good that's what we
like to
here does that just work first
try guess it
try guess it
does so that's super nice we can get rid
does so that's super nice we can get rid
of this whole Big Blob of
code and I bet that we can do
better yeah so right here
if I just move some stuff around I think
if I just move some stuff around I think
that this will
work I think I need this to be up
here e
there we
go so look at
go so look at
that we're already down
that we're already down
to probably simpler code than we started
to probably simpler code than we started
with uh and it
with uh and it
works now
this is still kind of obnoxious right
this is still kind of obnoxious right
here but this is not
here but this is not
terrible just like
splitting could be
worse and then we get rid of this
worse and then we get rid of this
because Puffs are now
compatible uh
compatible uh
and not
bad now I have to do the same thing
for uh for multi-agent M which is a
for uh for multi-agent M which is a
little bit annoying
I think not too
I think not too
bad so this should be able to just go
bad so this should be able to just go
right
here do I have a good like multi-agent
here do I have a good like multi-agent
test
environment I guess up for multi-agent
environment I guess up for multi-agent
right
and very nice so
and very nice so
from
here just have to copy over some logic
that's
make this even easier here
very nice so it's getting it's getting
very nice so it's getting it's getting
there definitely takes some time
and now there's quite a lot more here
I think I can make this
work right
I think it's if OBS is
emulated this is
emulated this is
fine I think
okay so I like
okay so I like
this I think this is going to let us get
this I think this is going to let us get
rid of this
rid of this
function which is a little
nicer and then I think there's going to
nicer and then I think there's going to
be another one of these in Step
be another one of these in Step
Right where's the emulate
Right where's the emulate
call right
here so if it's emulated then you call
here so if it's emulated then you call
emulate else you do this it's fine
and now what we
and now what we
do uh this actually can go
do uh this actually can go
up yeah this can go
up yeah this can go
up to
here e
this may not be the most interesting Dev
this may not be the most interesting Dev
to watch but this is I mean this is
to watch but this is I mean this is
mostly what like doing obnoxious python
mostly what like doing obnoxious python
infrastructure looks
like e
multi-agent object has no
multi-agent object has no
attribute ah
there we
go does it work I can't tell I don't
go does it work I can't tell I don't
think so does run
though
for e
okay let's test to make sure the other
okay let's test to make sure the other
end works
yeah so you can see here it works
perfectly
e
e
for for
okay so we know actually that it works
okay so we know actually that it works
on the main
branch I don't think anything in here
branch I don't think anything in here
would have to change
would have to change
either in right here yeah this should
either in right here yeah this should
not have to
change
change
yeah so it should be confined just to um
yeah so it should be confined just to um
just to write here
really okay so it's returning dick
really okay so it's returning dick
Ops um
see
this
this
oh is this not even going through the
oh is this not even going through the
right code
right code
path hold
on it might not be going through here at
on it might not be going through here at
all yeah so it's not emulated um
Pi
OBS okay so this is a one
so this does actually get updated
so this does actually get updated
correctly you can see that the one I
correctly you can see that the one I
updated in the array and it gets updated
updated in the array and it gets updated
in the dictionary so this is actually
correct and then when we call step
pad agent
data okay
data okay
so self Dot
terminals nope that's not it
mobs for
observations appear to be coming through
correctly why doesn't it
train let me
see because it's actually not going to
see because it's actually not going to
use it's not going to use these values
use it's not going to use these values
actually
right it's going to do
okay so this
match this match
okay so these actually do all match so
okay so these actually do all match so
there's something weird going
there's something weird going
on
um how self. observations get set
here should
here should
be from the buffer
h
soon as I get the thing to match I think
soon as I get the thing to match I think
this is the last thing I'll do today
this is the last thing I'll do today
other than I'll answer some questions if
other than I'll answer some questions if
anyone has any
anyone has any
um for some reason this doesn't match
um for some reason this doesn't match
the previous
the previous
version which trained
correctly
terminals this seems to be
terminals this seems to be
fine what else could I have messed up
fine what else could I have messed up
here
could be in
reset uh well this mask is going to be
reset uh well this mask is going to be
wrong no cuz it's masks plural so this
wrong no cuz it's masks plural so this
is sketchy but it's correct
is sketchy but it's correct
actually checked
then yeah this is sketchy but
fine and what do we have
here unpacking of
actions actions actually get passed in
actions actions actually get passed in
it
should yeah this should be fine
h
and do we use this all done
signal just started my PhD and RL
signal just started my PhD and RL
working on topics like Simer real Gap
working on topics like Simer real Gap
what are the benefits of working with
what are the benefits of working with
puffer Li is it mainly
puffer Li is it mainly
debugging what is the main purpose of it
debugging what is the main purpose of it
so puffer Li gives you million step per
so puffer Li gives you million step per
second reinforcement learning um outside
second reinforcement learning um outside
of like Manny skill for robotic
of like Manny skill for robotic
specifically it is going to be at least
specifically it is going to be at least
a 100 times faster than most other
a 100 times faster than most other
things out
things out
there we've
there we've
got very clean demos for all of these
got very clean demos for all of these
things and uh it's just generally like
things and uh it's just generally like
clean RL but scaled up to actually have
clean RL but scaled up to actually have
like really really fast
like really really fast
environments um here you can see all
environments um here you can see all
these environments here got neural mm
these environments here got neural mm
mo3 in
mo3 in
here so here let's see if I
here so here let's see if I
can there we
go yeah so now this is me playing
it ah I need to fix uh some controls
it ah I need to fix uh some controls
apparently that should
apparently that should
work oh yeah there it is I just didn't
work oh yeah there it is I just didn't
have my mouse hovered over it
have my mouse hovered over it
we've got like this puffer
MOBA we've got like board games we've
MOBA we've got like board games we've
got like a little mini versions of go
got like a little mini versions of go
we've got multi-agent stuff like
we've got multi-agent stuff like
snake so basically it's just a really
snake so basically it's just a really
good playground for testing different
good playground for testing different
algorithms very very
algorithms very very
quickly um at millions of steps per
quickly um at millions of steps per
second you can do stuff like run a 100
second you can do stuff like run a 100
billion step training runs on a single
billion step training runs on a single
GP with puffer lip which is is really
GP with puffer lip which is is really
not something you see just about
not something you see just about
anywhere else so that is the point of
anywhere else so that is the point of
puffer lib make RL really fast make
puffer lib make RL really fast make
experimentation really fast and we're
experimentation really fast and we're
starting to do more science side stuff
starting to do more science side stuff
ourselves uh on that aspect to like get
ourselves uh on that aspect to like get
more stable algorithms and whatnot as
more stable algorithms and whatnot as
well but generally give it a try we've
well but generally give it a try we've
got a nice helpful community of people
got a nice helpful community of people
using it as well in the Discord
thanks yeah no worries I've got lots of
thanks yeah no worries I've got lots of
material on it as well like if you check
material on it as well like if you check
on if you check on X it's actually I
on if you check on X it's actually I
ported the main article so the main
ported the main article so the main
articles are actually on the website
articles are actually on the website
there's some additional ones on X if you
there's some additional ones on X if you
want everything but like we've got docs
want everything but like we've got docs
here and we've also got this blog which
here and we've also got this blog which
covers like our latest release and you
covers like our latest release and you
know stuff we're trying to do got like
know stuff we're trying to do got like
quick start guides Hardware guides like
quick start guides Hardware guides like
tons and tons of stuff I mean really
tons and tons of stuff I mean really
puffer lib is just my effort to fix the
puffer lib is just my effort to fix the
state of this field because stuff is
state of this field because stuff is
really really hard and finicky in RL
really really hard and finicky in RL
right now and it just needs to be better
right now and it just needs to be better
so I finished my PhD in RL last spring
so I finished my PhD in RL last spring
and now I am working on doing that
and now I am working on doing that
full-time time without any of the
full-time time without any of the
strings attached that you find in
strings attached that you find in
Academia e
what is wrong with
this I've got to be doing something
this I've got to be doing something
stupid here right
is the
mask no if it wouldn't even run if the
mask no if it wouldn't even run if the
mask were all
mask were all
false
for e
so this assert
so this assert
runs so observations are
runs so observations are
correct yeah observations are
correct how about
this okay so all the data coming out of
this okay so all the data coming out of
this is evidently correct
this is evidently correct
correct but it's still not
running I can only assume that the
running I can only assume that the
buffer is somehow wrong
buff is
buff is
none don't think buff is supposed to be
none don't think buff is supposed to be
this could just be The Driver M
though okay so for some reason the
though okay so for some reason the
buffer is none
oh that's very silly
waiting for Claude 3.5
waiting for Claude 3.5
Opus the models really don't make a big
Opus the models really don't make a big
difference in my day-to-day programming
difference in my day-to-day programming
like at
all like I really don't rely on them
all like I really don't rely on them
very much at all
I mean you can see while I'm typing here
I mean you can see while I'm typing here
I have auto complete it's llm
I have auto complete it's llm
autocomplete but you see I use it for
autocomplete but you see I use it for
like one line it's basically a typing
like one line it's basically a typing
buff that's
buff that's
it I'll use GPT for like obscure errors
it I'll use GPT for like obscure errors
and Doc sometimes that's pretty much it
though yeah so all these need to
though yeah so all these need to
have uh to have like
buff visual dashboards well if you're
buff visual dashboards well if you're
not a programmer that's a different
not a programmer that's a different
story
story
though despite what uh Twitter seems to
though despite what uh Twitter seems to
think now is literally the best time to
think now is literally the best time to
learn how to
learn how to
program I do highly recommend
program I do highly recommend
it oops
why not use Google's AI studio for
why not use Google's AI studio for
that for what
the on Line auto complete uh because the
the on Line auto complete uh because the
main thing that matters is the speed of
main thing that matters is the speed of
the auto complete like the main thing
the auto complete like the main thing
that matters is that there's not a delay
that matters is that there's not a delay
while I'm typing and super Maven just
while I'm typing and super Maven just
has really fast models and they've got a
has really fast models and they've got a
nice plugin for neov them so it's very
nice plugin for neov them so it's very
easy it's pretty much
it flash thinking yeah but the thing is
it flash thinking yeah but the thing is
they all like the companies are all just
they all like the companies are all just
going to release models that leap prog
going to release models that leap prog
each other constantly it really doesn't
each other constantly it really doesn't
matter like it really doesn't matter
matter like it really doesn't matter
that
much to be switching between them
much to be switching between them
constantly like the only time like the
constantly like the only time like the
people that you see switching between
people that you see switching between
models constantly are the ones like you
models constantly are the ones like you
or her are using them to generate entire
or her are using them to generate entire
stuff Al together then yeah it really
stuff Al together then yeah it really
matters but I'm not doing that right I'm
matters but I'm not doing that right I'm
writing most of the code myself
writing most of the code myself
here um so like I'm like I have GPT up
here um so like I'm like I have GPT up
in the background you can see but like
in the background you can see but like
I've done I've like maybe typed a few
I've done I've like maybe typed a few
things into this today all of which were
things into this today all of which were
like setup error messages and
stuff the use of it is pretty
stuff the use of it is pretty
minimal honestly I get way more as just
minimal honestly I get way more as just
like having this fast auto complete not
like having this fast auto complete not
having to type everything
b
b
boom that works now
perfect where's the get credentials cach
thing pretty heavy on my
thing pretty heavy on my
end I mean yeah that's a perfectly ah
end I mean yeah that's a perfectly ah
blinding um that's a perfectly
blinding um that's a perfectly
reasonable case for it but like when I
reasonable case for it but like when I
don't know when I need to make good
don't know when I need to make good
charts like I just write I just code
charts like I just write I just code
them my
them my
S I don't need to do it that often like
S I don't need to do it that often like
it would probably take me a while but
it would probably take me a while but
like it's it's the type of thing where
like it's it's the type of thing where
if I had to make a lot of charts I'd be
if I had to make a lot of charts I'd be
really fast at it
there's actually very little to do
there's actually very little to do
between programming and
math it's like surprisingly very little
math it's like surprisingly very little
I actually I really do not enjoy
I actually I really do not enjoy
um I especially do not enjoy higher
um I especially do not enjoy higher
mathematics like I just don't find it
mathematics like I just don't find it
interesting at
interesting at
all um code is great though I can build
all um code is great though I can build
whatever the hell I
whatever the hell I
want when did I
learn I guess
learn I guess
like
like
seriously when I was maybe 13 or 14 I
seriously when I was maybe 13 or 14 I
started so yeah been doing it for a long
time I think I could learn a lot faster
time I think I could learn a lot faster
these days there was like most of the
these days there was like most of the
materials out back then were God awful
materials out back then were God awful
like they literally just teach you how
like they literally just teach you how
to program everything in the worst way
to program everything in the worst way
possible for
possible for
years like I think I could teach myself
years like I think I could teach myself
how to program decently in only a few
how to program decently in only a few
years
now starting pH never been good at
yeah I mean I think I could probably get
yeah I mean I think I could probably get
decent enough at math if I like wanted
decent enough at math if I like wanted
to it I don't think I would be like a
to it I don't think I would be like a
math genius or anything but I think I
math genius or anything but I think I
could at least function in higher
could at least function in higher
mathematics if I were to put in the time
mathematics if I were to put in the time
I just don't find it very interesting as
I just don't find it very interesting as
all like I'm not going to focus on it
all like I'm not going to focus on it
and do it right the other thing is I
and do it right the other thing is I
didn't find it very useful for the stuff
didn't find it very useful for the stuff
I wanted to do
I wanted to do
there's zero
there's zero
way well you just start building stuff
way well you just start building stuff
on the side
on the side
right you just build stuff on the side
right you just build stuff on the side
like people build little games people
like people build little games people
build little side applications
build little side applications
right it's a good way to learn
okay so this is very
okay so this is very
nice uh and let's take a quick look at
nice uh and let's take a quick look at
the the
multiprocessing I'm going to check what
multiprocessing I'm going to check what
we're doing for
dinner I'll be right back one second
hey what is dinner CL
all right got half an
hour I'm curious so if I were
hour I'm curious so if I were
learn well that's not going to go over
learn well that's not going to go over
very
well e
okay
so AI cannot replace a new version with
itself it's just not a thing it can do
if you mean like the Escape stuff or
if you mean like the Escape stuff or
whatever those are mainly like pretty
whatever those are mainly like pretty
low quality bait
articles I mean even with the stuff
articles I mean even with the stuff
today it's
today it's
like like 25% on Frontier math is like
like like 25% on Frontier math is like
an insane
an insane
result but
result but
uh it's it's very narrow problems in
uh it's it's very narrow problems in
which these things are good like these
which these things are good like these
like you still can't get an AI to build
like you still can't get an AI to build
a useful Library autonomously like at
allic kind of zany over
there kind of zany
really don't take a lot of their safety
really don't take a lot of their safety
side stuff very
side stuff very
seriously have a good model
though artifacts yeah Fair
GPT does that now as
well the companies just are going to
well the companies just are going to
leog each other
constantly so this is interesting
um if is native
and num NS is
and num NS is
one what about
that should train cial no problem right
try a different
one so there we go there's puffer spaces
right and then we
do processing
oh that's what you
oh that's what you
mean oh
what type of RL algo are you testing
what type of RL algo are you testing
it's just PO with like small model uh
it's just PO with like small model uh
what I'm doing at the moment is more
what I'm doing at the moment is more
infrastructure side stuff you know a lot
infrastructure side stuff you know a lot
of puffer lib is just like getting all
of puffer lib is just like getting all
the fancy data from your environment
the fancy data from your environment
into the main process quickly and I'm
into the main process quickly and I'm
currently screwing with the
currently screwing with the
multiprocessing modules to
multiprocessing modules to
essentially bring like the older code
essentially bring like the older code
that's compatible with everything up to
that's compatible with everything up to
speed with the newer faster code so
speed with the newer faster code so
everything is going to be pretty much
everything is going to be pretty much
like one
like one
implementation everything's going to be
implementation everything's going to be
a little bit faster everything's going
a little bit faster everything's going
to be a bit more
to be a bit more
stable oh hey Noah
stable oh hey Noah
welcome uh yeah I'm basically better I
welcome uh yeah I'm basically better I
it was just like a combination of
it was just like a combination of
crashing after the conference and like
crashing after the conference and like
stacking a few different minor
stacking a few different minor
illnesses um so I basically just hung
illnesses um so I basically just hung
out and played balers skate for a few
out and played balers skate for a few
days which of course now I have to
days which of course now I have to
finish the game so I'll be uh you know
finish the game so I'll be uh you know
clocking out a couple hours here and
clocking out a couple hours here and
there until I finish
that for
somehow something's getting messed up
somehow something's getting messed up
here it looks like
that's a different
error uh I think this has to go
error uh I think this has to go
and this is
good handle
good handle
buff why would this break
should be fine shouldn't it
here's the
print this it
I literally just do this
and now we're back to this error
okay so we
okay so we
get 4 by
four it made twice I think it
four it made twice I think it
does you
does you
went but we do get all this stuff
went but we do get all this stuff
right then
right then
this bug ban this bot real
this bug ban this bot real
quick get out of
here native is
I hate having to pull out the remote
I hate having to pull out the remote
debugger it's such a
debugger it's such a
pain I do it when I have
pain I do it when I have
to oops
we do it when we have
to do like
to do like
this
race waiting for connection
okay now we've got our nice remote
okay now we've got our nice remote
shell this is our
shell this is our
array this is our
array this is our
space
space
type array array
array array. view struct dtype
array array. view struct dtype
I'm changing to a larger dtype
sorry for interrupt I encountered some
sorry for interrupt I encountered some
error running vectorization
code
code
how I could not resolve the following
how I could not resolve the following
following
following
error uh did you put the full error
error uh did you put the full error
message in
Discord oh hey I see Xander
you
have yeah post
error so there's an interesting mismatch
error so there's an interesting mismatch
here
FL I guess this has to be actions
right
no
no
array where is
array where is
this this is on action
I just get past the wrong struct D type
is it just
is it just
up
yeah that's not right is
it I don't think that's right oops
are
pool I don't know what the satari pool
pool I don't know what the satari pool
file
file
is can you just post the full error
is can you just post the full error
message like I want to see what command
message like I want to see what command
you are running what file and all of
you are running what file and all of
that oh and my green screen messes up if
that oh and my green screen messes up if
I don't turn light some
this still not right
this still not right
enough my room is just kind of
dark it doesn't make any sense though I
dark it doesn't make any sense though I
have lights hold on
it's a little
it's a little
better not
really
yeah copy code
where is the satari pool file
put
oh well which one of
oh well which one of
these which one of these doesn't
work 8
it's the vectorization file not the
it's the vectorization file not the
Atari
file
file
oh this is an API signature
oh this is an API signature
man like this is is showing you how to
man like this is is showing you how to
use the function you can't like this
use the function you can't like this
doesn't have anything in
doesn't have anything in
it oh wait no actually I'm wrong hold on
it oh wait no actually I'm wrong hold on
no this should be valid shouldn't
no this should be valid shouldn't
it yeah no this should totally be valid
it yeah no this should totally be valid
okay let me see what you're no wait
okay let me see what you're no wait
you're right let me see let me
you're right let me see let me
see no you're right my bad hold on
oh no this is a
signature yeah this is a I I don't know
signature yeah this is a I I don't know
why I did it this way I could have
why I did it this way I could have
easily just
easily just
done couldn't I just done
done couldn't I just done
this oh no because cereal is not
imported yeah yeah yeah yeah so this is
imported yeah yeah yeah yeah so this is
just this was just an API signature man
just this was just an API signature man
like this is not even formatted like uh
like this is not even formatted like uh
the code should be correctly so what you
the code should be correctly so what you
do is just skip that that shows you how
do is just skip that that shows you how
to do this right so you take this
to do this right so you take this
code if you want to like just copy paste
code if you want to like just copy paste
it
it
in oops you do
in oops you do
this you do
this
this
uher lib
back there we
back there we
go I have these Imports up
there and this is the thing that I'm
there and this is the thing that I'm
working on right now so this will be
working on right now so this will be
fixed this is the bug that I'm working
fixed this is the bug that I'm working
on right
now but this is fine this is Works in 20
now but this is fine this is Works in 20
um this is on my Dev rant that I broken
this but that's a good point I should
this but that's a good point I should
add some imports to this
oh no I have it right here import puff.
oh no I have it right here import puff.
Vector yeah so that should be
fine the heck is wrong with this so
right I wanted to
check I wanted to check Sanity on
here okay so this is correct the action
here okay so this is correct the action
space is uh two discreet
space is uh two discreet
it should be
it should be
two FL no two in 32s
two FL no two in 32s
right it should be two in
32s so this action is
correct uh this action D type seems to
correct uh this action D type seems to
be wrong it should not be i8
why did it turn this into
I8 this is gymnasium PU
I8 this is gymnasium PU
right emulate action
space space. d
space space. d
type oh is this wrong hold
type oh is this wrong hold
on s.m.
on s.m.
action space flat D
action space flat D
type
ah why is I4
I can just apply this as a patch real
quicker. spaces. boox
uh then you return space
32 okay
still doesn't
work
37029 okay so array
37029 okay so array
and
and
32s try
32s try
type still i8
emulate action
space e type from
space plattin
space I think you need it right here
here
e
e e
there we go funny how it spins the CPU
there we go funny how it spins the CPU
at
5,000% but whatever you know
to
to
work
um okay uh initial initial thoughts
um okay uh initial initial thoughts
seems to work for
I said to C the why did the credentials
I said to C the why did the credentials
thing not
work oh it's this
work oh it's this
one oops
hey
Xander I'm quiet cuz I took the headset
Xander I'm quiet cuz I took the headset
off my
off my
bad
bad
um I forget that this mic at the
um I forget that this mic at the
moment's not
working there we
working there we
go uh definitely don't push to
2.0 what can I help you with Xander real
2.0 what can I help you with Xander real
quick before I head to dinner I just I'm
quick before I head to dinner I just I'm
just adding like this is unrelated just
just adding like this is unrelated just
vectorization stuff I was working
on very
optimally yep got rid of re board
optimally yep got rid of re board
sharing that's totally
sharing that's totally
fine this should be
fine this should be
fine 2D local crop performed
fine 2D local crop performed
worse that's
funny so yeah you way over complicated
funny so yeah you way over complicated
the lstm bit um if you look at our other
the lstm bit um if you look at our other
files it's it's like one line to add an
files it's it's like one line to add an
lstm do you still want 2D OBS I think
lstm do you still want 2D OBS I think
you should fix the other stuff first so
you should fix the other stuff first so
that you can actually run proper
that you can actually run proper
experiments on it um like the lstm that
experiments on it um like the lstm that
you like the STM architecture that you
you like the STM architecture that you
had is just like a very wrong
had is just like a very wrong
implementation
implementation
um like detaching from the graph will
um like detaching from the graph will
mess it up and there's other stuff that
mess it up and there's other stuff that
you can get wrong as well like lstms are
you can get wrong as well like lstms are
a pain there's a reason that I gave you
a pain there's a reason that I gave you
the rapper for it right so like if I
the rapper for it right so like if I
just look at puffer lib what's an
just look at puffer lib what's an
environment
environment
ocean I don't know let's look at
ocean I don't know let's look at
squared or actually I think they're all
squared or actually I think they're all
just in here right so
just in here right so
torch this is literally all you have to
torch this is literally all you have to
add
add
to get the recurrent
to get the recurrent
wrapper you just grab lstm wrapper you
wrapper you just grab lstm wrapper you
see for neural Mo 3 I made a custom one
see for neural Mo 3 I made a custom one
that just has a different input and
that just has a different input and
hidden size but yeah that's pretty much
hidden size but yeah that's pretty much
all you have to do and
then uh number three look just put the
then uh number three look just put the
name of it in there here's a policy name
name of it in there here's a policy name
and it'll pick it up from the file for
and it'll pick it up from the file for
you because like there's stuff that you
you because like there's stuff that you
have to do for the lstm that's annoying
have to do for the lstm that's annoying
like here you see like these obnoxious
like here you see like these obnoxious
so there's like these obnoxious
so there's like these obnoxious
transposes that you have to make sure
transposes that you have to make sure
that you get right so you call encode
that you get right so you call encode
then you call this obnoxious transposes
then you call this obnoxious transposes
then you call recurrent then you have to
then you call recurrent then you have to
obnoxious transpose reshape and then
obnoxious transpose reshape and then
decode you also don't want to break from
decode you also don't want to break from
the graph that'll make it wrong um so
the graph that'll make it wrong um so
there's a fair bit of stuff you got to
there's a fair bit of stuff you got to
look at
we also handle this
stuff let see your
graphs try to use wrapper yeah I would
graphs try to use wrapper yeah I would
suggest that
suggest that
so positional OBS no with
lstm it's funny that your I guess your
lstm it's funny that your I guess your
lstm would not make it fail it just
lstm would not make it fail it just
wouldn't be doing anything for
you and
then poop OB space
lstm I think what we should do is Anders
lstm I think what we should do is Anders
you should like we should play with it
you should like we should play with it
at the very least um cuz the m is easy
at the very least um cuz the m is easy
enough that it should work on both very
enough that it should work on both very
simply and it would be nice to get this
simply and it would be nice to get this
thing merged with uh you know nice
thing merged with uh you know nice
policies and
stuff I mean it's fine the way you have
stuff I mean it's fine the way you have
it it's just it's it's fine if you want
it it's just it's it's fine if you want
to keep it that way
like not really any main is there's not
like not really any main is there's not
really any major issue with it I think
really any major issue with it I think
we should try to get it on somewhat
we should try to get it on somewhat
larger Maps
larger Maps
working I mean this is like this train
working I mean this is like this train
super fast anyways right I'm assuming
super fast anyways right I'm assuming
you haven't even run a hyper pram sweep
you haven't even run a hyper pram sweep
or
anything op
anything op
space yeah so the fact that there's like
space yeah so the fact that there's like
this deviation with like no lstm vers
this deviation with like no lstm vers
lstm slightly better pick of related
lstm slightly better pick of related
result
yeah I I'm just not confident in it
yeah I I'm just not confident in it
because like one you could have
because like one you could have
implemented the crop space wrong right
implemented the crop space wrong right
two you could have the neuronet just
two you could have the neuronet just
being insane and three you could have
being insane and three you could have
bad hyper parameters for it
like this is not like the world's
like this is not like the world's
hardest environment where like there's
hardest environment where like there's
no way that crops are going to work
no way that crops are going to work
right it's like a very simple
right it's like a very simple
environment basically anything you throw
environment basically anything you throw
at it should
at it should
work so if you want to figure out if you
work so if you want to figure out if you
want to learn how to do like 2D OB
want to learn how to do like 2D OB
spaces we can do it otherwise you can
spaces we can do it otherwise you can
keep it I don't really care as long as
keep it I don't really care as long as
we have like you know a slightly larger
we have like you know a slightly larger
version of the environment that trains
version of the environment that trains
decently well uh so we can have like no
decently well uh so we can have like no
we're looking for something like the
we're looking for something like the
rware demo I'd say out of it
rware demo I'd say out of it
oh also you didn't do the uh the C thing
oh also you didn't do the uh the C thing
for the you didn't do like the C
for the you didn't do like the C
neuronet yet
neuronet yet
either from
rware so I mean basically like you have
rware so I mean basically like you have
like a trash pickup M that's pretty
like a trash pickup M that's pretty
similar to
this it's kind of mesmerizing you just
this it's kind of mesmerizing you just
watch them Huff
around uh but yeah those are my
around uh but yeah those are my
suggestions for the time being
suggestions for the time being
anyways uh I'm going to go get dinner
anyways uh I'm going to go get dinner
for folks watching the stream uh there
for folks watching the stream uh there
are a few things first of all everything
are a few things first of all everything
is linked on puffer doai you can join
is linked on puffer doai you can join
our Discord right here we got a lot of
our Discord right here we got a lot of
great people here if you're interested
great people here if you're interested
in getting into building M doing RL if
in getting into building M doing RL if
you're an existing researcher or work in
you're an existing researcher or work in
RL like we've got lots of great
RL like we've got lots of great
resources for you here you can St the
resources for you here you can St the
repository it helps us out a ton and if
repository it helps us out a ton and if
you want more content on RL you can
you want more content on RL you can
follow me on X other than that I've been
follow me on X other than that I've been
away for a fair bit but it starting in
away for a fair bit but it starting in
the next few weeks you're going to see
the next few weeks you're going to see
me streaming a lot more of the
me streaming a lot more of the
development for this project so it'll be
development for this project so it'll be
very very easy to get things answered in
very very easy to get things answered in
a timely manner other than that

Kind: captions
Language: en
we should be back
we should be back
live yeah there we
live yeah there we
go
uh what have I messed in here
what else if I miss
oh
cool 1700 line
cool 1700 line
PR crazy amounts of code we're getting
PR crazy amounts of code we're getting
submitted now
that stream's working I can see the
that stream's working I can see the
numbers on X going
up are these still
down
down
oh uh I'll tell you what I'm going to do
oh uh I'll tell you what I'm going to do
I'm going to run downstairs
I'm going to run downstairs
and boot the two
and boot the two
boxes and then we'll do
this on
this on
stream now Perfect all right I'll be
stream now Perfect all right I'll be
right back uh I'm just going to go
right back uh I'm just going to go
reboot the boxes and we'll be
good
for
e
e
e
e e
okay
Co be
Co be
good review Andrew end
okay yeah here's our PR
okay so I can just do
okay so I can just do
start a
start a
review environment episode
review environment episode
return see where I put the
return see where I put the
mic be a little
mic be a little
better because I have the mic up here
better because I have the mic up here
really it should be like
really it should be like
here but then it's in
here but then it's in
frame we'll just put it up like that
frame we'll just put it up like that
that'll be
decent so
decent so
episode
return
good do I use uniform for learning
rate think so let me look
help that for
now log uniform values
FP coefficient I
think can I tell him not to sweep this
yeah so like the custom I think you
yeah so like the custom I think you
misunderstood
yeah you want to sweep like reward
components it's good
architecture is nuts
yep you change hidden
SI yeah so this is still
SI yeah so this is still
crazy so let's
see linear re linear
yeah you dramatically over complicated
this for
yeah this is wrong in several ways
this is
crazy very good
okay so now here's pix
I'm not going to D him for this because
I'm not going to D him for this because
technically yeah I don't really bother
technically yeah I don't really bother
checking my CX because
like you don't really need it in this
case and let's
case and let's
see this is good
probably tweet that I'm doing this
demo
demo
F human control
mode
uh the
other than that this is
fine oh he doesn't
have this is
missing we'll do this one last because
missing we'll do this one last because
it's the big
F and leave the check
F and leave the check
sure I think they're kind of silly but
sure so now the main thing is just the C
sure so now the main thing is just the C
code which presumably is very similar to
before okay so the start of this is some
constants and then this is just my log
constants and then this is just my log
buffer
buffer
code people can copy
code people can copy
in
entity presence
[Music]
[Music]
um I don't know why
these red cell
oh this is silly
yeah
up that's a little
silly this is
fine this is fine
fine
okay and
okay and
now compute
now compute
observations is going to
go over all the
agents okay so this is an ENT format and
agents okay so this is an ENT format and
fine if you're going to do it this way
fine if you're going to do it this way
fine local crop
version what
grid
cell oh that's really weird
[Music]
um e
grid
grid
cell new grid
cell okay so this is
cell okay so this is
fine and then if it's
empty for
so these mem copies Yeah so basically
so these mem copies Yeah so basically
like this is more complicated than it
like this is more complicated than it
needs to be because the choice of data
needs to be because the choice of data
structures this is why having a a good
structures this is why having a a good
grasp on like basic data structures and
grasp on like basic data structures and
stuff is very very important because if
stuff is very very important because if
you pick the wrong ones then you end up
you pick the wrong ones then you end up
with a whole bunch of extra
with a whole bunch of extra
stuff right like yeah
what is this logic chain here so if
what is this logic chain here so if
it's else if it's a trash
bin so this is early
return there a couple places here where
return there a couple places here where
you could clean this up a little bit but
you could clean this up a little bit but
I won't pick be too picky on that the
I won't pick be too picky on that the
much much larger
much much larger
issue is uh this type of stuff here like
issue is uh this type of stuff here like
this is valid but it's
this is valid but it's
same here
Zero's the
grid prob fine
let me see if I look here
so this is fine
so we have
renderer renders
okay so he's drawing stuff a little
okay so he's drawing stuff a little
differently
this is just
this is just
like this just comes with
like this just comes with
experience like this is very easy to
experience like this is very easy to
just take the color variable
out
out
cool definitely some stuff to be
cool definitely some stuff to be
improved there have been uh improvements
improved there have been uh improvements
since last time for sure definitely more
since last time for sure definitely more
way to go but you know decent progress
way to go but you know decent progress
overall I'd say um biggest thing is just
overall I'd say um biggest thing is just
like understanding how and why you're
like understanding how and why you're
picking data
picking data
structures and then on the neuronet side
structures and then on the neuronet side
I can tell a few things aren't clicking
I can tell a few things aren't clicking
um what you want
um what you want
here they're kind of two different
here they're kind of two different
network architectures that make sense
network architectures that make sense
for this one is an entity Style Network
for this one is an entity Style Network
architecture in which you have let's say
architecture in which you have let's say
that there are 10 entities in the scene
that there are 10 entities in the scene
then you're going to get data for those
then you're going to get data for those
10 entities each entity is going to have
10 entities each entity is going to have
some attributes so maybe of their
some attributes so maybe of their
position X and positioned Y and like I
position X and positioned Y and like I
don't know some index or
don't know some index or
whatever and then what you would do is
whatever and then what you would do is
you'd reshape that data in the forward
you'd reshape that data in the forward
pass to the network and you would apply
pass to the network and you would apply
the same forward pass layer separately
the same forward pass layer separately
to each entity and then probably do some
to each entity and then probably do some
like attention mechanism or pooling
like attention mechanism or pooling
across them so that you get the idea is
across them so that you get the idea is
that the structure of the
that the structure of the
network is independently applied to each
network is independently applied to each
entity that you can
entity that you can
see that's one option the other option
see that's one option the other option
which I think is generally simpler for
which I think is generally simpler for
this type of n is just to do a tile crop
this type of n is just to do a tile crop
representation
representation
so you just represent nearby data into
so you just represent nearby data into
tiles bucket it into
tiles bucket it into
tiles and then you just have a very
tiles and then you just have a very
small compet on top of that like a
small compet on top of that like a
typical representation I'll use is say
typical representation I'll use is say
an 11 by1 crop of nearby tiles I'll put
an 11 by1 crop of nearby tiles I'll put
that into a two- layer compet and then
that into a two- layer compet and then
that's a very nice representation that
that's a very nice representation that
you can run a million steps per second
you can run a million steps per second
Network on including an
Network on including an
lstm so few fundamentals there to work
lstm so few fundamentals there to work
on um but yeah good progress overall I
on um but yeah good progress overall I
think I
think I
will I'll wait for Xander
will I'll wait for Xander
to watch uh watch this
to watch uh watch this
segment and you know reply to some of
segment and you know reply to some of
these things and I'll probably chat with
these things and I'll probably chat with
them on stream or on Discord uh and then
them on stream or on Discord uh and then
we can get this
we can get this
merged even at max volume sound isn't
merged even at max volume sound isn't
that high in my
that high in my
headset is this better
I hope it was
I hope it was
audible at the very
least is this better yes audible just
least is this better yes audible just
low is it still
low not really better
really what it switched my freaking
really what it switched my freaking
microphone e
one second let me fix it this is the bad
mic e
so for some
so for some
reason for some reason it's using this
reason for some reason it's using this
microphone I have no idea why and my
microphone I have no idea why and my
expensive nice microphone isn't
expensive nice microphone isn't
working I love drivers drivers are just
working I love drivers drivers are just
the best thing ever especially on
Linux yeah but this is just like the
Linux yeah but this is just like the
random headset
mic that's so obnoxious like I don't
mic that's so obnoxious like I don't
know why that
know why that
is is it the compressor being weird hold
on all right well I have absolutely no
on all right well I have absolutely no
idea why this is so
idea why this is so
weird um when headset is on top of yeah
weird um when headset is on top of yeah
I have no idea I'll keep the stupid
I have no idea I'll keep the stupid
headset on for
headset on for
now um and then I'll have to figure out
now um and then I'll have to figure out
drivers and stuff
later this is a really nice headset by
later this is a really nice headset by
the way I really like this this is uh
the way I really like this this is uh
they weren't making them like this for a
they weren't making them like this for a
while like they didn't have the
while like they didn't have the
retractable mic in them for a while this
retractable mic in them for a while this
is so much
is so much
better um they look kind of is silly but
whatever friendly reminder to folks if
whatever friendly reminder to folks if
any of this stuff is useful to you
any of this stuff is useful to you
please go ahead and star the puffer
please go ahead and star the puffer
helps us out a
helps us out a
lot sorry to force you to keep the
lot sorry to force you to keep the
headset no
headset no
it's is fine I need a haircut soon
it's is fine I need a haircut soon
anyways I uh it's a pain for running
Okay so we've reviewed Xander's
en latest
en latest
[Music]
[Music]
F added some
F added some
comments
comments
well and
well and
discuss never
we'll see from
we'll see from
here there's other stuff I can Dev on as
here there's other stuff I can Dev on as
well for now to be fair
and actually does involve I've got two
and actually does involve I've got two
different things to check uh
vectorization two build
fixes oh is this what it was
uh I so BET's
uh I so BET's
environments he's going to want to be
environments he's going to want to be
around in person for the
around in person for the
review I have some other some other
review I have some other some other
stuff I could do right now um but I will
stuff I could do right now um but I will
open it up briefly to the stream in case
open it up briefly to the stream in case
anybody has questions or stuff that they
anybody has questions or stuff that they
would like help getting started on on
would like help getting started on on
boarding and whatnot uh if not I have a
boarding and whatnot uh if not I have a
couple things I can Dev live here on
couple things I can Dev live here on
just some rappers like one thing people
just some rappers like one thing people
have been asking for is a way to uh to
have been asking for is a way to uh to
run multiple puffer ocean environments
run multiple puffer ocean environments
on the the same process uh without
on the the same process uh without
having to write the loop yourself and C
having to write the loop yourself and C
as an
option I think if there isn't anything
option I think if there isn't anything
else more pressing that's what I'll
do I guess there's also build system
do I guess there's also build system
issues but I think we'll do we'll do
issues but I think we'll do we'll do
this for now cuz I I don't have a Repro
this for now cuz I I don't have a Repro
on
those let's do
this
okay so the issue right now the thing
okay so the issue right now the thing
that people have been
wanting is when you
wanting is when you
[Music]
[Music]
use uh when you use serial or
use uh when you use serial or
multiprocessing
where is
it I think it actually does work for
cereal so if we do Native VC with snake
cereal so if we do Native VC with snake
be a million right
okay
so why are they not compatible with
so why are they not compatible with
seral that's going to be the
question seems like it
runs but I'm not getting any stats back
so I should be getting
stats okay so there is
stats okay so there is
some substantial amount of change
some substantial amount of change
here M's handle their own data buffers
you initialize the
you initialize the
M's right
M's right
here
here
right and then oh I just have to fix the
right and then oh I just have to fix the
way data buffers get
set m.
set m.
buff is there a reason that you can't do
buff is there a reason that you can't do
just m. observations and stuff
directly I don't think
directly I don't think
so this is a big change but I think I
so this is a big change but I think I
could do it
so we have this buff thing here
right okay okay you with box do do that
right okay okay you with box do do that
about tracks
injected buffer for shared
memory I think we can just
add I think I can just add this buff
add I think I can just add this buff
keyword Arc
right gymnasium
can I
can I
make these
environments I don't think I can make
environments I don't think I can make
them a
them a
um puffer M like this
um puffer M like this
directly
right e
but how do wait how do I
but how do wait how do I
make I make the
buffer oh okay so this
buffer oh okay so this
is this gets called at the end
okay so that it's I'm doing something a
okay so that it's I'm doing something a
little tricky now let me explain um I
little tricky now let me explain um I
came up with this buffer
came up with this buffer
format for puffer environments and this
format for puffer environments and this
allows you to maintain gy and petting
allows you to maintain gy and petting
zoo while having all your data in this
zoo while having all your data in this
efficient like cash buffer structure
efficient like cash buffer structure
that can also be in shared memory the
that can also be in shared memory the
native environments in Ocean just have
native environments in Ocean just have
an optimized version of this uh but the
an optimized version of this uh but the
code looks a little different so I'm
code looks a little different so I'm
trying to see if I can make the
trying to see if I can make the
vectorization work more cleanly such
vectorization work more cleanly such
that you can have like
that you can have like
multiple uh multiple puffer Ms like
multiple uh multiple puffer Ms like
multiple ocean Ms for process if you
multiple ocean Ms for process if you
want to do that for whatever reason uh
want to do that for whatever reason uh
it would mean that like you wouldn't
it would mean that like you wouldn't
have to write vectorized stuff in
have to write vectorized stuff in
necessarily with puffer
necessarily with puffer
en um you'd just be able to have
en um you'd just be able to have
multiprocessing do that portion of the
multiprocessing do that portion of the
loop and it makes it easier for some
loop and it makes it easier for some
people plus this has been a request as
well so that's why stuff gets a little
well so that's why stuff gets a little
slow until I figure out how I want to do
slow until I figure out how I want to do
stuff I mean I think it's got to
stuff I mean I think it's got to
be like this
though and then what you do is
servations num
agents for
I really don't like having to repeat all
I really don't like having to repeat all
this logic so much
though e
okay action
space let's see if this works
emulate you don't actually need this
hold
hold
on
yeah be right back one second
I'm all
right except for
so this is never going to be none
right this is never going to be none
right this is never going to be none
right if I just do
hold on I have to not mess this up here
hold on I have to not mess this up here
like
yeah something screw here so make
buffer oh I see
this is a little
tricky so you have the array dtype and
tricky so you have the array dtype and
you have the struct D type
yeah this is a way more involved thing
yeah this is a way more involved thing
than I thought it was going to be but I
than I thought it was going to be but I
think it'll be
think it'll be
good um the thing is that so what we
good um the thing is that so what we
want to do is we want to take
want to do is we want to take
this like obstruct thing
this like obstruct thing
and we want to be able to pass
and we want to be able to pass
it uh a buffer
can I put this down
can I put this down
here what if I do
here what if I do
this and you pass it the dtype and then
this and you pass it the dtype and then
the OBS dtype right but
the OBS dtype right but
when why can't I just pass it also like
when why can't I just pass it also like
self.
observations is that not
observations is that not
valid and is
none this will just be struck I guess
and then this just
becomes is OBS
becomes is OBS
emulated this is like a particularly
emulated this is like a particularly
tricky piece of
code
code
emulate e
view
okay I'm let me see if I can clarify
okay I'm let me see if I can clarify
what I'm trying to do here so uh the
what I'm trying to do here so uh the
initial thing that made puffer lib
initial thing that made puffer lib
really that put puffer lib on the map is
really that put puffer lib on the map is
this kind of clever piece of code that
this kind of clever piece of code that
allows us to handle environments
allows us to handle environments
with uh really whatever observation and
with uh really whatever observation and
action shapes that we
action shapes that we
want and it allows you to do this and
want and it allows you to do this and
it's like compatible with everything and
it's like compatible with everything and
basically it's just a clever way of
basically it's just a clever way of
flattening everything and then
flattening everything and then
unflattening it just in time before you
unflattening it just in time before you
need
it doing that is not that hard doing
it doing that is not that hard doing
that without incurring a whole bunch of
that without incurring a whole bunch of
redundant data copies is a little
hard so what I'm essentially trying to
hard so what I'm essentially trying to
do now is reconfigure the structure of
do now is reconfigure the structure of
buffers uh used by our environment to
buffers uh used by our environment to
match the ocean buffers so that then
match the ocean buffers so that then
everything is going to be able to be
everything is going to be able to be
treated the same by vectorization and
treated the same by vectorization and
everything is nice and clean also I
everything is nice and clean also I
think we're going to be able to save a
think we're going to be able to save a
redundant copy that I noticed here at
redundant copy that I noticed here at
the same time so they should even make
the same time so they should even make
puffer lib for non-ocean environments a
puffer lib for non-ocean environments a
bit faster which would always be nice
bit faster which would always be nice
you know always nice to
see
um so this doesn't even get called
um so this doesn't even get called
anywhere
self. obstruct
so I don't think I need this at
all yeah I don't need this at
all so it does actually I think it does
all so it does actually I think it does
get simpler
just watch the review
just watch the review
there some
questions
cool for
okay so let's see if this does
okay so let's see if this does
anything what's a good environment can I
anything what's a good environment can I
do like cartpole or something
no star here
wait check
wait check
space this
OB oh this is yeah this has to be colon
this step called before reset
dude what did you do
five did he just commit his
five did he just commit his
systems
numbers holy hell so some of this is
numbers holy hell so some of this is
just forgetting um
he can't possibly have made all these
he can't possibly have made all these
changes right like something he merged
changes right like something he merged
like some different
thing all right well I'll have to ask
thing all right well I'll have to ask
him what the heck cuz I'm not just
him what the heck cuz I'm not just
merging that if like that's going to be
merging that if like that's going to be
ridiculous
ridiculous
[Music]
uh why is this not called
reset I see it calling reset right here
this should give you uh a good idea of
this should give you uh a good idea of
the quality of the gem code by the
the quality of the gem code by the
way look at
that e
but why does reset not get called
like be getting called
right 206
oh
de my
bad
bad
okay does this thing
train doesn't appear to
so let's see what we broke
actually there's very little spot here
actually there's very little spot here
for it to have broken
anything what could I have messed
up e
h
see what happens to
action
e e
or
or
truncated am I sure that this actually
truncated am I sure that this actually
worked
before let me go check that real
before let me go check that real
quick because I could have just broken
quick because I could have just broken
this particular example and not know it
this particular example and not know it
right
let's just double check that
yeah so you can see that this train's
yeah so you can see that this train's
like
like
instantly
right
e e
okay so I'm assuming some of
okay so I'm assuming some of
the oh you know what it is I'm
dumb I'm just
dumb for
n e
cool so here's our driver
cool so here's our driver
n and then we'll
do our
buffer
e e
so we have buffers equal to
this
sofm and
when you live program how do you stop
when you live program how do you stop
chat from derailing
chat from derailing
you I I just don't I mean it's like it's
you I I just don't I mean it's like it's
usually people asking me stuff about
usually people asking me stuff about
like how to contribute to puffer lib and
like how to contribute to puffer lib and
stuff so that's part of the
job now to community
project half of 2.0 was written by
project half of 2.0 was written by
contributors and um we have like another
contributors and um we have like another
5,000 lines of Code by contributors in
5,000 lines of Code by contributors in
progress I mean at some point people
progress I mean at some point people
just are writing things faster than I
can and I'm just really doing like the
can and I'm just really doing like the
biddly infrastructure bits that hold
biddly infrastructure bits that hold
everything
together more like an office
together more like an office
hour um honestly at least before I I had
hour um honestly at least before I I had
one private project that like I didn't
one private project that like I didn't
want to do on stream but I kind of just
want to do on stream but I kind of just
do all my Dev on stream or at least a
do all my Dev on stream or at least a
decent chunk of
it and people just drop by
it and people just drop by
whenever I don't know it works we've got
whenever I don't know it works we've got
uh I can't tell how many watching on X
uh I can't tell how many watching on X
but somebody's on Twitch and five people
but somebody's on Twitch and five people
on YouTube so for whatever reason people
on YouTube so for whatever reason people
like watching Dev so I just stream it
like watching Dev so I just stream it
doesn't really bother me at
all can I pass slices
here I think I have to do slices right
here I think I have to do slices right
so if I do like buff
so if I do like buff
I equals name name
space pointer is
zero agents
per so we'll see this
it's kind of sketchy the way I have this
it's kind of sketchy the way I have this
at the moment I pulled puffer tank was
at the moment I pulled puffer tank was
able to start training using breakout
able to start training using breakout
Max sync is there a way to render
Max sync is there a way to render
and output directly to a set of images
and output directly to a set of images
um I have something that'll probably
um I have something that'll probably
work for
work for
that uh if you really want to be using
that uh if you really want to be using
yeah that M
then let me find it for
you so if you run the
you so if you run the
eval you see we have a little piece of
eval you see we have a little piece of
code for
code for
this where we save
this where we save
gifts and all I do is I grab frames from
gifts and all I do is I grab frames from
here
here
does that natively that works we don't
does that natively that works we don't
usually we don't usually save like
usually we don't usually save like
images during training um just because
images during training um just because
it tends to just clog up W be like you
it tends to just clog up W be like you
end up just very very quickly generating
end up just very very quickly generating
like hundreds of gigabytes worth of
like hundreds of gigabytes worth of
image logs if you're not careful it's a
image logs if you're not careful it's a
good thing to do to be fair so we
good thing to do to be fair so we
probably should do this more often but
probably should do this more often but
what we typically will do is we'll just
what we typically will do is we'll just
evaluate checkpoints and our checkpoint
evaluate checkpoints and our checkpoint
eval script uh does have the option to
eval script uh does have the option to
uh to save gifts so like all the demo
uh to save gifts so like all the demo
gifts that you see that you see me
gifts that you see that you see me
posting they mostly come from
here checkpoint EV Val
here checkpoint EV Val
yeah we should probably have more stuff
yeah we should probably have more stuff
done during training it's just it's
done during training it's just it's
tricky because like when you have these
tricky because like when you have these
really long training runs you kind of
really long training runs you kind of
want to
want to
like I guess we could try to like
like I guess we could try to like
estimate like one gift per 10 minutes or
estimate like one gift per 10 minutes or
something it's just it's tricky to get
something it's just it's tricky to get
right it's very easy to like overwhelm
right it's very easy to like overwhelm
stuff with data I mean in puffer now we
stuff with data I mean in puffer now we
do like 100 billion step training runs
do like 100 billion step training runs
so how many gifts do you want to save
so how many gifts do you want to save
over that right
I see why I had these buffers set up the
I see why I had these buffers set up the
way that I did
though how I do this in ocean
you
super net with the
buffer but then how do you know what to
buffer but then how do you know what to
pass in
I guess because this is a vector n of
I guess because this is a vector n of
itself then it works
so obnoxiously
tricky we're doing some like puffer lib
tricky we're doing some like puffer lib
data buffer Shenanigans at the
data buffer Shenanigans at the
moment though people are free to ask
moment though people are free to ask
questions about whatever while I'm doing
questions about whatever while I'm doing
this it's just kind of
fiddly I've got like a Chicken and the
fiddly I've got like a Chicken and the
Egg problem going on here
Egg problem going on here
here where it's like I need the buffer
here where it's like I need the buffer
to populate the M but I need the m to
to populate the M but I need the m to
know the size of the
buffer I see why I was doing it with
buffer I see why I was doing it with
like post talk injection
now so janky
now so janky
though well I guess for now what I can
though well I guess for now what I can
do is I can just like
assume I can just do like self. driver
and or that num
and or that num
agents what's up back from plague hey
agents what's up back from plague hey
Spencer good to see
you you've made some nice environments
you you've made some nice environments
and post them on Twitter been adding you
and post them on Twitter been adding you
with them as well
with them as well
um I didn't really have like the plague
um I didn't really have like the plague
per se I just had a cold it was really
per se I just had a cold it was really
just a combination of like grinding a
just a combination of like grinding a
whole bunch on the 2 release and then
whole bunch on the 2 release and then
going to like a crazy busy conference
going to like a crazy busy conference
and then having like multiple minor
and then having like multiple minor
illnesses on the way back that it's just
illnesses on the way back that it's just
like all right screw it I'm going to L
like all right screw it I'm going to L
for a bit I'm still kind of lethargic
for a bit I'm still kind of lethargic
honestly like I'm probably just going to
honestly like I'm probably just going to
taper back up the exercise and taper
taper back up the exercise and taper
back up the work I don't feel great like
back up the work I don't feel great like
I haven't done any exercise in over like
I haven't done any exercise in over like
over a week um so I just I'm not going
over a week um so I just I'm not going
to feel good until I do
to feel good until I do
that but we're going to taper back up
that but we're going to taper back up
the work taper back up the exercise and
the work taper back up the exercise and
see how that goes well depending I still
see how that goes well depending I still
haven't gotten the root canal which is
haven't gotten the root canal which is
going to be fun 3D platformer really
going to be fun 3D platformer really
awesome that's going to be
awesome that's going to be
fun so many new M's to PR man this will
fun so many new M's to PR man this will
be
good I showed the uh the robot warehouse
good I showed the uh the robot warehouse
and to um to a company at nups and they
and to um to a company at nups and they
liked it by the way obviously very
liked it by the way obviously very
simple
but I know putting feelers out
they actually say that they have like
they actually say that they have like
their simplest Sims kind of look like
their simplest Sims kind of look like
that
that
so you know ours look like that and they
fast yeah so the way we're going to do
fast yeah so the way we're going to do
this is we're just going to
this is we're just going to
do
do
observations try like One agent World
observations try like One agent World
building and one to solve oh that's what
building and one to solve oh that's what
you
meant that is
meant that is
hard that is
hard I'm warning you that you're jumping
hard I'm warning you that you're jumping
in at stuff that's like that's like PhD
in at stuff that's like that's like PhD
research right there that's like you
research right there that's like you
know somebody's like main area is what
know somebody's like main area is what
that would
be you can do
be you can do
it which might be tricky
any research tasks you want me to dive
any research tasks you want me to dive
into well on the research side it really
into well on the research side it really
depends what you're interested in um
depends what you're interested in um
what I was going to do for you if you
what I was going to do for you if you
didn't have other ideas and you just
didn't have other ideas and you just
just wanted like a really good practical
just wanted like a really good practical
way to contribute to the research and
way to contribute to the research and
science side of stuff uh and learn a ton
science side of stuff uh and learn a ton
and be guaranteed that you're not just
and be guaranteed that you're not just
going to be spinning your
going to be spinning your
wheels um I was going to get you
wheels um I was going to get you
involved with like the main like make RL
involved with like the main like make RL
stable and sane efforts that are going
stable and sane efforts that are going
to be starting basically as soon as I
to be starting basically as soon as I
just like clean up 20 a bit and
just like clean up 20 a bit and
integrate all these new Ms you can in
integrate all these new Ms you can in
fact you're already free to start on
fact you're already free to start on
that I'm I'll be happy to jum jump in uh
that I'm I'll be happy to jum jump in uh
invoice later and kind of brief you on
invoice later and kind of brief you on
what we're intending to do I got like a
what we're intending to do I got like a
couple very actionable things right now
couple very actionable things right now
that you can try I've got some bigger
that you can try I've got some bigger
ideas as well but it's all going to be
ideas as well but it's all going to be
like pretty doable um
yeah it's generally pretty accessible
yeah it's generally pretty accessible
work
work
um so one one of the Small Things One of
um so one one of the Small Things One of
like the smaller things is going to be
like the smaller things is going to be
just adding continuous modes to breakout
just adding continuous modes to breakout
pong and Enduro and then running
pong and Enduro and then running
comprehensive
comprehensive
oblations uh to see like continuous
oblations uh to see like continuous
versus discreet performance because in
versus discreet performance because in
theory right the environment is the same
theory right the environment is the same
but practically there are some
but practically there are some
algorithmic differences uh there's a
algorithmic differences uh there's a
work I can point to you from Pablo
work I can point to you from Pablo
Castro on this happy to get going I got
Castro on this happy to get going I got
final inspections passed on my
final inspections passed on my
construction deal very nice so I have
construction deal very nice so I have
more time soon that's
more time soon that's
good yeah so the only thing that's going
good yeah so the only thing that's going
to throw me for a little bit of a loop
to throw me for a little bit of a loop
is the uh I got a root canal in a few
is the uh I got a root canal in a few
days and I'm going to have to figure out
days and I'm going to have to figure out
basically I'm pretty sure that the
basically I'm pretty sure that the
dentist I went to just kind of screwed
dentist I went to just kind of screwed
up my tooth so I'm hoping that that's
up my tooth so I'm hoping that that's
actually going to just be fine but there
actually going to just be fine but there
might be some
might be some
complications I had like a stupid
complications I had like a stupid
dentist that just like they took the
dentist that just like they took the
x-rays they started drilling my tooth
x-rays they started drilling my tooth
and then they went oops we actually
and then they went oops we actually
can't drill this one this one need the
can't drill this one this one need the
root
canal
ridiculous yeah so I'm not going back to
ridiculous yeah so I'm not going back to
them they're kind of stupid
yeah
know agents per batch
voice later otherwise kind of
voice later otherwise kind of
crazy yeah no worries so I mean if you
crazy yeah no worries so I mean if you
just want like the brief version of
it it's this
it it's this
paper I went running with uh with this
paper I went running with uh with this
guy at
guy at
nups he does a bunch of cool work so he
nups he does a bunch of cool work so he
made a continuous action
made a continuous action
version of
version of
Atari you can actually see I tried to
Atari you can actually see I tried to
kind of do something like this with the
kind of do something like this with the
Moa as well I had a very similar idea to
Moa as well I had a very similar idea to
this and didn't really follow up on it
this and didn't really follow up on it
but pretty much like it should not be
but pretty much like it should not be
that many lines of code like basically
that many lines of code like basically
you just have to like change the action
you just have to like change the action
spaces to be floats and then have a flag
spaces to be floats and then have a flag
in the python environment like
in the python environment like
discretize or not disc discretize right
discretize or not disc discretize right
like discretize equal true or whatever
like discretize equal true or whatever
or actually it should be the other way
or actually it should be the other way
around it should be like continuous
around it should be like continuous
equal false by default and if you set
equal false by default and if you set
continuous to true it gives you a box
continuous to true it gives you a box
action space um you know it passes your
action space um you know it passes your
raw inputs as like as the float
raw inputs as like as the float
values
values
um yeah so if you did that then we would
um yeah so if you did that then we would
be able to essentially get a very clear
be able to essentially get a very clear
picture as to the fundamental
picture as to the fundamental
algorithmic differences between
algorithmic differences between
continuous and discreet and that's like
continuous and discreet and that's like
a pretty big area for like it's like a
a pretty big area for like it's like a
pretty likely area where things are
pretty likely area where things are
screwy in RL right now so that's like
screwy in RL right now so that's like
one of many many many things that we're
one of many many many things that we're
going to be doing um for like 20 on to
going to be doing um for like 20 on to
fix RL but that's like a pretty quick
fix RL but that's like a pretty quick
and actionable
one cuz they didn't run hyper parameter
one cuz they didn't run hyper parameter
sweeps like they didn't run
sweeps like they didn't run
hyperparameter sweeps on this work at
hyperparameter sweeps on this work at
all um so we have you know full hyper
all um so we have you know full hyper
Prem sweeps that we can do because our
Prem sweeps that we can do because our
M's are actually
M's are actually
fast
right
yeah so if you're interested in that
yeah so if you're interested in that
that's like a nice reasonably scoped
that's like a nice reasonably scoped
project for
you I'd say decent way to onboard to
you I'd say decent way to onboard to
science
science
side break yeah start with breakout and
side break yeah start with breakout and
pong we'll see if we can get b figure
pong we'll see if we can get b figure
out Enduro with it as
well want to play with 3D M yeah those
well want to play with 3D M yeah those
are cool did you see um the like
are cool did you see um the like
Robo robocup or whatever it was the
Robo robocup or whatever it was the
soccer Type M from Nev in the chat I'm
soccer Type M from Nev in the chat I'm
not touching I yeah I got to do a code
not touching I yeah I got to do a code
review for him he's got a lot of code in
there we'll get him to add continuous to
there we'll get him to add continuous to
that for us
native or was
bind I thought it was native yeah cuz I
bind I thought it was native yeah cuz I
saw him like developing it over time
saw him like developing it over time
right he posted a bunch of different
right he posted a bunch of different
versions didn't
he oh there's also classic control like
he oh there's also classic control like
there's cartpole discreet and continuous
there's cartpole discreet and continuous
but that's probably really simple for
going to hop off and link up later
going to hop off and link up later
awesome good to good to see a Spencer
awesome good to good to see a Spencer
I'll be uh I'll be around
I'll be uh I'll be around
no attribute
actions I really don't like the way this
actions I really don't like the way this
is going
is going
here cuz you have to add buff now to all
here cuz you have to add buff now to all
the make
functions but it is
functions but it is
required so let's say that we tolerate
required so let's say that we tolerate
that I think it'll be okay I think I
that I think it'll be okay I think I
just have to keep
going for
there we
go for
self. buff
I don't know anything about Docker but
I don't know anything about Docker but
one bash Docker sh test how can I
one bash Docker sh test how can I
use demo. P
use demo. P
so right here this is uh the puffer tank
so right here this is uh the puffer tank
like after you clone the docker it'll
like after you clone the docker it'll
take a second to well it'll take a while
take a second to well it'll take a while
to install the first time but then it'll
to install the first time but then it'll
be fast thereafter so you do you run
be fast thereafter so you do you run
Docker like this it immediately boots me
Docker like this it immediately boots me
into my
into my
container and a puffer
container and a puffer
lib puffer
lib puffer
snake mode train VC you know native
snake mode train VC you know native
whatever and uh did I break anything
whatever and uh did I break anything
yeah no so this still works even on my
yeah no so this still works even on my
messy local Dev so you should be able to
messy local Dev so you should be able to
get this directly from the container
get this directly from the container
make sure that you got the new container
make sure that you got the new container
though cuz make sure that you have the
though cuz make sure that you have the
20 one because up in I just fixed
20 one because up in I just fixed
earlier today uh this morning the
earlier today uh this morning the
container repo was on the 1 branch and I
container repo was on the 1 branch and I
had to bump it to the two Branch so make
had to bump it to the two Branch so make
sure that you have two of puffer tank
welcome to all the YouTube
welcome to all the YouTube
folks please do star the repo to help me
folks please do star the repo to help me
out I remind people because they
out I remind people because they
actually do star and it does
actually do star and it does
help how can I import my M and try wrap
help how can I import my M and try wrap
it with puffer lib if I am running the
it with puffer lib if I am running the
docker uh you just treat your Docker
docker uh you just treat your Docker
like any other development environment
like any other development environment
so you know if you have your environment
so you know if you have your environment
in a separate repository you just clone
in a separate repository you just clone
it inside of the docker container
right it's just like a heavier like a
right it's just like a heavier like a
heavier virtual environment you can sort
heavier virtual environment you can sort
of think of it so you just set
of think of it so you just set
everything up you basically treat it
everything up you basically treat it
like its own
machine um it takes a little bit longer
machine um it takes a little bit longer
to set up the first time cuz it's like
to set up the first time cuz it's like
it's handing you a full image with 12
it's handing you a full image with 12
gbt of stuff on it but then the cool
gbt of stuff on it but then the cool
thing about the containers is let's say
thing about the containers is let's say
that you need to Nuke it and reset it to
that you need to Nuke it and reset it to
scratch that's literally like a
scratch that's literally like a
10-second
10-second
process so it gives you a really nice
process so it gives you a really nice
consistent development environment where
consistent development environment where
just nothing ever goes wrong which is
just nothing ever goes wrong which is
pretty nice for
still not
working so that's what you do when
working so that's what you do when
you're Dev like right now you modify
you're Dev like right now you modify
scripts inside
scripts inside
puffer and yeah I'm testing so anytime
puffer and yeah I'm testing so anytime
you see the little puffer fish prompt on
you see the little puffer fish prompt on
my screen that's cuz I'm inside of the
container I do basically all my
container I do basically all my
development in containers I'm on a Linux
development in containers I'm on a Linux
desktop and I'm still doing my
desktop and I'm still doing my
development inside of containers because
development inside of containers because
it means I never mess up like I never
it means I never mess up like I never
mess up my base operating system right
mess up my base operating system right
everything that I mess with is confined
everything that I mess with is confined
to The Container so it's very easy to
to The Container so it's very easy to
keep all your systems clean and the
keep all your systems clean and the
really nice thing about this is if you
really nice thing about this is if you
just decide to start contributing to
just decide to start contributing to
puffer lib and let's say that we decide
puffer lib and let's say that we decide
to give you cluster access uh you
to give you cluster access uh you
literally just get booted right into a
literally just get booted right into a
puffer tank instance on one of our
puffer tank instance on one of our
desktops it's the identical setup
desktops it's the identical setup
locally and on the
servers there's cart pole
servers there's cart pole
fixed so this design actually does work
probably need
probably need
um ocean spaces
maybe yeah these are gymnas Maps
that's
backwards for
oh it's because uh it's getting imported
oh it's because uh it's getting imported
from the extensions isn't
from the extensions isn't
it yeah that's
it yeah that's
why
why
integer yeah cuz it's in the
integer yeah cuz it's in the
scon what cool things did you see at
nups I got time to see maybe like five
nups I got time to see maybe like five
posters at all of nups um I was pretty
posters at all of nups um I was pretty
much doing meetings the whole way
much doing meetings the whole way
through so I
through so I
saw continuous to action space Atari
saw continuous to action space Atari
stuff from Pablo's just good
stuff from Pablo's just good
science uh there was some op Optimizer
science uh there was some op Optimizer
stuff and actually we're going to
stuff and actually we're going to
there's some Optimizer stuff that we're
there's some Optimizer stuff that we're
going to collab on to see if like if
going to collab on to see if like if
optimizers make a difference for RL I
optimizers make a difference for RL I
saw that but mainly though like I talked
saw that but mainly though like I talked
to several different Labs I talked to a
to several different Labs I talked to a
couple of companies as well and just
couple of companies as well and just
like a ton of researchers on like stuff
like a ton of researchers on like stuff
that we can do with puffer lib and you
that we can do with puffer lib and you
know how puffer lib can help people in
know how puffer lib can help people in
their research and you know we set up a
their research and you know we set up a
couple new collaborations and then we
couple new collaborations and then we
have a couple pending things more on the
have a couple pending things more on the
business side as well well so I didn't
business side as well well so I didn't
really see a ton of like crazy new
really see a ton of like crazy new
projects that I hadn't already seen you
projects that I hadn't already seen you
kind of already know everything that's
kind of already know everything that's
out there just from
out there just from
Twitter
Twitter
um but it was still very productive like
um but it was still very productive like
that's not the goal of conferences
that's not the goal of conferences
usually um conferences are much more for
usually um conferences are much more for
networking and for meetings and for like
networking and for meetings and for like
setting up collabs and
setting up collabs and
stuff what Vector stuff are you working
stuff what Vector stuff are you working
on right now uh I'm trying to bring the
on right now uh I'm trying to bring the
puffer emulated the emulated puffer API
puffer emulated the emulated puffer API
closer not even the API the internals
closer not even the API the internals
closer to the um puffer ocean internals
closer to the um puffer ocean internals
because that will let us do stuff uh
because that will let us do stuff uh
that'll let us clean up some of the
that'll let us clean up some of the
vectorization stuff on Ocean
vectorization stuff on Ocean
environments so like you'll be able to
environments so like you'll be able to
run cereal on top of puffer M and stuff
run cereal on top of puffer M and stuff
like that that's been a request I
like that that's been a request I
thought that that would be a pretty
thought that that would be a pretty
simple one but actually I have to
simple one but actually I have to
rewrite a fair bit of stuff to make that
rewrite a fair bit of stuff to make that
work uh to make that work cleanly and
work uh to make that work cleanly and
fast so that's what I'm doing at the
moment valid
indices did I like forget to run this or
indices did I like forget to run this or
something what's what's going
on what's the benefit of running it's
on what's the benefit of running it's
just if you're lazy and you don't want
just if you're lazy and you don't want
to write the loops and
to write the loops and
see
see
um to be fair this is nice for new
um to be fair this is nice for new
developers who like want to write puffer
developers who like want to write puffer
M's but in Python CU there's still
M's but in Python CU there's still
benefits to doing that and then you
benefits to doing that and then you
don't have to write the loop yourself um
don't have to write the loop yourself um
but mainly it's like uh a client wanted
but mainly it's like uh a client wanted
this feature so it's a little more
this feature so it's a little more
involved than IID expected but yeah
involved than IID expected but yeah
we'll do
it and it's not a bad thing to add
it and it's not a bad thing to add
either right it's just it wouldn't be
either right it's just it wouldn't be
the top of my
the top of my
priorities can you explain action spaces
priorities can you explain action spaces
in puffer P bit for instance can you mix
in puffer P bit for instance can you mix
discre discreet and continuous
discre discreet and continuous
discreet action spaces ever Superior for
discreet action spaces ever Superior for
training so uh you currently cannot mix
training so uh you currently cannot mix
them you can have multi- discreete
them you can have multi- discreete
action spaces you can have discrete
action spaces you can have discrete
action spaces and then you can have you
action spaces and then you can have you
know arbitrary dimensional continuous
know arbitrary dimensional continuous
action spaces you just you can't mix
action spaces you just you can't mix
them at the moment that is something we
them at the moment that is something we
could support that we just haven't
could support that we just haven't
um are discrete action spaces ever
um are discrete action spaces ever
Superior say for training efficiency it
Superior say for training efficiency it
seems like the answer is yes from
seems like the answer is yes from
Pablo's uh from Pablo's work and
Pablo's uh from Pablo's work and
anecdotally but to be fair uh This
anecdotally but to be fair uh This
research really hasn't been done
research really hasn't been done
thoroughly enough to say for sure and I
thoroughly enough to say for sure and I
actually was just talking with Spencer
actually was just talking with Spencer
about some work we're going to do to uh
about some work we're going to do to uh
to really investigate that for
to really investigate that for
sure we like we ideally it should just
sure we like we ideally it should just
be as simple as like Po with continuous
be as simple as like Po with continuous
PO with discreet see which see what the
PO with discreet see which see what the
difference is
right speed-wise they're the same um
right speed-wise they're the same um
performance-wise maybe
not true
what is multi-
what is multi-
discreet just multiple discreet actions
discreet just multiple discreet actions
uh that occur at the same time so like
uh that occur at the same time so like
let's say that you wanted to have your
let's say that you wanted to have your
you don't want to like expand out your
you don't want to like expand out your
keyboard action space so it's like WD
keyboard action space so it's like WD
and then space is like or shift is like
and then space is like or shift is like
Sprint you could have a 01 for shift and
Sprint you could have a 01 for shift and
then WD your normal keys and then you
then WD your normal keys and then you
would have to learn you know the
would have to learn you know the
combination over stuff generally you use
combination over stuff generally you use
multi- discreet when uh action spaces
multi- discreet when uh action spaces
would be too big to unravel like we do
would be too big to unravel like we do
this in uh puffer MOBA for instance but
this in uh puffer MOBA for instance but
then neural MMO we specifically
then neural MMO we specifically
architected that so that it wouldn't
architected that so that it wouldn't
need multi- discreet and it's just
need multi- discreet and it's just
discreet so it really depends on your
discreet so it really depends on your
environment
well something screwy here isn't
well something screwy here isn't
it or no
nice that's really cool
yeah what if I don't
have what if I don't add the extension
isn't this thing
backwards
for
e e
isn't
isn't
it oh wait
what seed and reset
it's really
it's really
weird isn't
it observation
and know this is
correct somehow this got
injected kind of weird
how would this have happened
okay so this is correct right
okay so this is correct right
here um so my guess
here um so my guess
is that this
happens right
happens right
here be my guess
yeah so okay so this is wrong um emulate
OB e
yeah I knew that there was something
yeah I knew that there was something
weird with this
weird with this
function there's like there's always
function there's like there's always
been something slightly off with this
oh you know what it is okay I'm passing
oh you know what it is okay I'm passing
the
wrong for
let's see about this
okay so this didn't mess this up
right mix D type is real bad there
oh no it's not because this just gives
oh no it's not because this just gives
you bites yeah that's
fine is it possible to run not on GPU I
fine is it possible to run not on GPU I
get Auda related
get Auda related
error oh um um
error oh um um
[ __ ] where do you get the
[ __ ] where do you get the
error you might be able to run it just
error you might be able to run it just
with
with
like without gpus
like without gpus
all but it's really meant to be a Cuda
all but it's really meant to be a Cuda
container
container
um put error in Discord
waiting for error
holy
twitch might not be letting you uh paste
twitch might not be letting you uh paste
it you can put it in Discord and let me
know yeah just put the error in Discord
know yeah just put the error in Discord
like just copy paste it I'll look at
like just copy paste it I'll look at
it that's why I'm streaming it's so I
it that's why I'm streaming it's so I
can fix stuff you
can fix stuff you
know no point in streaming stuff if I
know no point in streaming stuff if I
don't don't actually bother fixing stuff
don't don't actually bother fixing stuff
for people
really build to
yeah maybe I should ship a CPU version
yeah maybe I should ship a CPU version
of this um it's just annoying because
of this um it's just annoying because
it's like torches installed at the
it's like torches installed at the
lowest level of our
lowest level of our
container um so this is not going to
work you can try stuff
work you can try stuff
locally um
locally um
the container is really meant for
the container is really meant for
Cuda clone the puff for yeah just try
Cuda clone the puff for yeah just try
cloning it if it doesn't build let me
cloning it if it doesn't build let me
know by the way cuz people have been
know by the way cuz people have been
having some weird local build errors and
having some weird local build errors and
that's like top priority to have fixed
that's like top priority to have fixed
so if something doesn't just work
so if something doesn't just work
immediately let me
know you really should just need like
know you really should just need like
puffer lib GCC should be
puffer lib GCC should be
good python can you try it with
good python can you try it with
three okay so I can either try to fix it
three okay so I can either try to fix it
for you with
for you with
312 did you post the disc details error
312 did you post the disc details error
I guess it's just that it doesn't
I guess it's just that it doesn't
exist hang
on what even uses distutils though
uh let me make sure I save
this e
just paste the raw text is
fine if your copy paste is weird and
fine if your copy paste is weird and
broken then sure paste screenshots
broken then sure paste screenshots
doesn't
matter
for for
okay so there's no disc
dils e
[Music]
ah python okay
okay I guess I still need to do
okay I guess I still need to do
this yeah you still need to install it
this yeah you still need to install it
separately
okay well this is weird because there
okay well this is weird because there
shouldn't be a VM I guess if you're not
shouldn't be a VM I guess if you're not
using the container then you have a VM
using the container then you have a VM
okay that's
fine what in the
fine what in the
hell that's a fun looking error message
you're
you're
fine let me take a look at
it let me see if I can reproduce
it
e for
got to love the python ecosystem
got to love the python ecosystem
holy
e e
still no
might just be the old numpy
version e
no torch
no torch
lovely um
do this
almost there I think we'll have your
almost there I think we'll have your
3.12 version working very
3.12 version working very
soon uh
soon uh
seriously collecting path
tools 0.9.1
one literally all I have to do is just
one literally all I have to do is just
clean out some old packages here and
clean out some old packages here and
you'll be
good and the deal I will make you is I
good and the deal I will make you is I
will push
will push
this um but since you're the one who
this um but since you're the one who
requested this feature
requested this feature
uh the deal is that if you find weird
uh the deal is that if you find weird
broken stuff on this thing that I'm
broken stuff on this thing that I'm
pushing for you you are obligated to
pushing for you you are obligated to
tell
tell
me fair
deal hopefully this is not breaking my
deal hopefully this is not breaking my
container
love when pytorch downloads gigabytes of
stuff literal gigabytes of
stuff literal gigabytes of
code yes this definitely needs to be
code yes this definitely needs to be
bigger than the Linux
kernel
for e
there you
go me make sure it
go me make sure it
trains 1.1 million steps a second works
trains 1.1 million steps a second works
fine on the new P torch
is the snake now training way
worse oh no there it
goes e
okay so this is
good that is very
distracting
for e
I think whatever this was like 20
I think whatever this was like 20
minutes or something for a PR is not a
minutes or something for a PR is not a
bad turnaround time
cool your fish your fix has been
pushed let me know if that
works for
oops no different
bug post
it cuz I did just run it on
312 is this the new one did you like
312 is this the new one did you like
replace it oh no here it is
uh
really pretty sure I just tried this
you pulled the latest
right seems to compil just fine
this is why containers are nice because
this is why containers are nice because
python is just generally a language that
python is just generally a language that
has absolutely terrible build
utils okay well include python. H
utils okay well include python. H
failing
um yeah something is not like
um yeah something is not like
something's not set up up correctly I'm
something's not set up up correctly I'm
pretty sure
pretty sure
because this is like you not having
because this is like you not having
scyon or
something so I don't know how this would
something so I don't know how this would
happen
here uh it should be installed by puffer
here uh it should be installed by puffer
lib you can try to install it
separately I don't know have you tried
separately I don't know have you tried
just
this jadine sometimes knows obscure
this jadine sometimes knows obscure
obnoxious error messages
do you have uh python 312
do you have uh python 312
Dev or did you just get python
312 I would try
this e
that's
fun let me know so I can like switch
fun let me know so I can like switch
back to 20 if uh if it works
does that work
yet all right
I'll make sure that uh 311 still
I'll make sure that uh 311 still
compiles while you do that
stuck
at oh well it's not
at oh well it's not
stuck I got a good machine
after I bought this machine I just
after I bought this machine I just
realized like wow actually I've never
realized like wow actually I've never
had a machine this good for personal
had a machine this good for personal
development it
development it
worked
worked
yeah uh apparently I screwed something
yeah uh apparently I screwed something
up
though unterminated string
literal are you kidding me I merged this
literal are you kidding me I merged this
PR and the guy freaking broke
PR and the guy freaking broke
it oh my God
God getting demerits for
that that's
embarrassing for
and stop letting people PR stuff to 2 if
and stop letting people PR stuff to 2 if
they're going to break
[ __ ] let me know how your training is
[ __ ] let me know how your training is
going
going
then uh on my system
it's actually kind of cool I get uh
it's actually kind of cool I get uh
250,000 steps per second on
CPU is this one you okay well you just
CPU is this one you okay well you just
you you don't just run demo. like
that it you got to you don't just run
that it you got to you don't just run
demo.
demo.
py um it shouldn't even let me
py um it shouldn't even let me
see uh that still might break stuff
see uh that still might break stuff
actually
actually
[ __ ] well no it doesn't break stuff on
[ __ ] well no it doesn't break stuff on
mine that's weird
um
um
really why does it work on mine
what gem version do you have
installed pip freeze pipe GP gem
so why does it work on mine and not on
so why does it work on mine and not on
yours
I get
gem grab numpy
H that is
H that is
weird why would that
be so I can import disc details
I can't see
Discord what do you mean
oh
yeah I'm wondering if it's because I
yeah I'm wondering if it's because I
have like the 3.11 version of disc
have like the 3.11 version of disc
details that it works
yeah you can just do
yeah you can just do
that if you just want it to
work so it basically looks like
um it basically looks like we'll have to
um it basically looks like we'll have to
drop gy if we want uh to support
3.12 want install python yeah they bump
3.12 want install python yeah they bump
the python versions up every so often
the python versions up every so often
the default ones
the default ones
um I think that I have like we will have
um I think that I have like we will have
to drop gym support is the thing if we
to drop gym support is the thing if we
want
want
uh if we want this to
work which is weird cuz I'm running it
work which is weird cuz I'm running it
with 3.12 but I have disc
with 3.12 but I have disc
utils um so probably it's like importing
utils um so probably it's like importing
the 311 version and it's just like
working that's so noxious
though
for e
does work with 312 but you need the 311
does work with 312 but you need the 311
dist utils and I think that we have to
dist utils and I think that we have to
get rid of
get rid of
gy I could technically add
um so I could technically add
something it would be a little Jank
something it would be a little Jank
though given that you don't absolutely
though given that you don't absolutely
need 312 12 for
need 312 12 for
now uh I would suggest just using 311
now uh I would suggest just using 311
cuz like there there are things I can do
cuz like there there are things I can do
to get it to work but it it like it'd be
to get it to work but it it like it'd be
pretty
pretty
Jank yeah 311 should just work already
Jank yeah 311 should just work already
helped a ton yeah no
helped a ton yeah no
worries I'm always happy to fix stuff if
worries I'm always happy to fix stuff if
it's like quick but like in this case
it's like quick but like in this case
it's like I'd either have to basically
it's like I'd either have to basically
I'd have to go mess around with
I'd have to go mess around with
conditional Imports with gy so that like
conditional Imports with gy so that like
you only import gy if it's supported and
you only import gy if it's supported and
then 312 works on all non- gy
then 312 works on all non- gy
environments um I'd have to do something
environments um I'd have to do something
janky like
that but then like I'm surprised it even
that but then like I'm surprised it even
lets you install gym in the first place
lets you install gym in the first place
it's like
it's like
weird what the [ __ ] is wrong with this
weird what the [ __ ] is wrong with this
now
I don't know what the heck this thing is
I don't know what the heck this thing is
doing oh it's like now it's using python
312 oh I know what it's doing
312 oh I know what it's doing
okay I I still know how to fix your bug
okay I I still know how to fix your bug
but
but
um e
okay so we'll keep on this infra for a
okay so we'll keep on this infra for a
little bit and then cold to
little bit and then cold to
day unless uh there's anything else to
review oh I haven't checked
review oh I haven't checked
Xander Xander have anything
no e
hm
I might have to revert
that yeah the numpy version is required
that yeah the numpy version is required
by too much
by too much
crap I got to revert that real quick
crap I got to revert that real quick
that's
annoying
e for
okay
okay this still works and now we do
okay this still works and now we do
cereal uh we can't do this one it's
cereal uh we can't do this one it's
going to be
going to be
puffer cereal
yeah this is what we were doing before
okay so flat
okay so flat
is
box
box
in8
image uh image is legitimately out of
image uh image is legitimately out of
bounds
bounds
here okay that's
interesting so this is actually a
interesting so this is actually a
correct check that's
correct check that's
funny for
still not in
space okay
okay so it
says
Ah see this is actually a good
check
for e
let's try
this let can go down here
look at
look at
that
boom so this now works
boom so this now works
um this is a nice valid proof
um this is a nice valid proof
concept We have basically what we've
concept We have basically what we've
done here is we've taken the nice fancy
done here is we've taken the nice fancy
new
new
infrastructure uh that is for dedicated
infrastructure uh that is for dedicated
environments and we've kind of made
environments and we've kind of made
something that's very similar
something that's very similar
for uh thirdparty
for uh thirdparty
environments that
environments that
includes like our emulation
includes like our emulation
functionality and stuff so this has two
functionality and stuff so this has two
nice effects one is that this is going
nice effects one is that this is going
to make it easier for us to do to do the
to make it easier for us to do to do the
opposite and add our emulation code into
opposite and add our emulation code into
native Ms when we need that um but
native Ms when we need that um but
also uh this is going to make it easier
also uh this is going to make it easier
for us to get our vectorization like our
for us to get our vectorization like our
serial stuff working on Ocean M as
serial stuff working on Ocean M as
well so this will be nice now there are
well so this will be nice now there are
a couple issues the first is this is
a couple issues the first is this is
like touching a critical critical piece
like touching a critical critical piece
of code and puffer so I have to actually
of code and puffer so I have to actually
make sure that this works properly
make sure that this works properly
before I ship it uh and then second of
before I ship it uh and then second of
all this is like a third of what I
all this is like a third of what I
actually need to do because there's also
actually need to do because there's also
a whole separate multi-agent path and I
a whole separate multi-agent path and I
have to fix that and then there's also a
have to fix that and then there's also a
multiprocessing section that I haven't
multiprocessing section that I haven't
touched yet
touched yet
either
um this is decent progress
though really the only thing that I
though really the only thing that I
don't like is that I have to repeat this
don't like is that I have to repeat this
giant block of code
giant block of code
constantly I think I just make a
constantly I think I just make a
function for
function for
this like a set buffers function
yeah we can just do this right right
and then we'll just reuse this
and then we'll just reuse this
function all over the
place and then I won't have to deal with
place and then I won't have to deal with
this
cool and I want this in pop
cool and I want this in pop
Li vation
just needs to have some
just needs to have some
buffers like
this realize disc is
this realize disc is
full we'll fix
full we'll fix
later yeah that'll get you good night
later yeah that'll get you good night
thanks for dropping by don't forget to
thanks for dropping by don't forget to
Star the puffer help us out a
Star the puffer help us out a
lot really does
already start very good that's what we
already start very good that's what we
like to
here does that just work first
try guess it
try guess it
does so that's super nice we can get rid
does so that's super nice we can get rid
of this whole Big Blob of
code and I bet that we can do
better yeah so right here
if I just move some stuff around I think
if I just move some stuff around I think
that this will
work I think I need this to be up
here e
there we
go so look at
go so look at
that we're already down
that we're already down
to probably simpler code than we started
to probably simpler code than we started
with uh and it
with uh and it
works now
this is still kind of obnoxious right
this is still kind of obnoxious right
here but this is not
here but this is not
terrible just like
splitting could be
worse and then we get rid of this
worse and then we get rid of this
because Puffs are now
compatible uh
compatible uh
and not
bad now I have to do the same thing
for uh for multi-agent M which is a
for uh for multi-agent M which is a
little bit annoying
I think not too
I think not too
bad so this should be able to just go
bad so this should be able to just go
right
here do I have a good like multi-agent
here do I have a good like multi-agent
test
environment I guess up for multi-agent
environment I guess up for multi-agent
right
and very nice so
and very nice so
from
here just have to copy over some logic
that's
make this even easier here
very nice so it's getting it's getting
very nice so it's getting it's getting
there definitely takes some time
and now there's quite a lot more here
I think I can make this
work right
I think it's if OBS is
emulated this is
emulated this is
fine I think
okay so I like
okay so I like
this I think this is going to let us get
this I think this is going to let us get
rid of this
rid of this
function which is a little
nicer and then I think there's going to
nicer and then I think there's going to
be another one of these in Step
be another one of these in Step
Right where's the emulate
Right where's the emulate
call right
here so if it's emulated then you call
here so if it's emulated then you call
emulate else you do this it's fine
and now what we
and now what we
do uh this actually can go
do uh this actually can go
up yeah this can go
up yeah this can go
up to
here e
this may not be the most interesting Dev
this may not be the most interesting Dev
to watch but this is I mean this is
to watch but this is I mean this is
mostly what like doing obnoxious python
mostly what like doing obnoxious python
infrastructure looks
like e
multi-agent object has no
multi-agent object has no
attribute ah
there we
go does it work I can't tell I don't
go does it work I can't tell I don't
think so does run
though
for e
okay let's test to make sure the other
okay let's test to make sure the other
end works
yeah so you can see here it works
perfectly
e
e
for for
okay so we know actually that it works
okay so we know actually that it works
on the main
branch I don't think anything in here
branch I don't think anything in here
would have to change
would have to change
either in right here yeah this should
either in right here yeah this should
not have to
change
change
yeah so it should be confined just to um
yeah so it should be confined just to um
just to write here
really okay so it's returning dick
really okay so it's returning dick
Ops um
see
this
this
oh is this not even going through the
oh is this not even going through the
right code
right code
path hold
on it might not be going through here at
on it might not be going through here at
all yeah so it's not emulated um
Pi
OBS okay so this is a one
so this does actually get updated
so this does actually get updated
correctly you can see that the one I
correctly you can see that the one I
updated in the array and it gets updated
updated in the array and it gets updated
in the dictionary so this is actually
correct and then when we call step
pad agent
data okay
data okay
so self Dot
terminals nope that's not it
mobs for
observations appear to be coming through
correctly why doesn't it
train let me
see because it's actually not going to
see because it's actually not going to
use it's not going to use these values
use it's not going to use these values
actually
right it's going to do
okay so this
match this match
okay so these actually do all match so
okay so these actually do all match so
there's something weird going
there's something weird going
on
um how self. observations get set
here should
here should
be from the buffer
h
soon as I get the thing to match I think
soon as I get the thing to match I think
this is the last thing I'll do today
this is the last thing I'll do today
other than I'll answer some questions if
other than I'll answer some questions if
anyone has any
anyone has any
um for some reason this doesn't match
um for some reason this doesn't match
the previous
the previous
version which trained
correctly
terminals this seems to be
terminals this seems to be
fine what else could I have messed up
fine what else could I have messed up
here
could be in
reset uh well this mask is going to be
reset uh well this mask is going to be
wrong no cuz it's masks plural so this
wrong no cuz it's masks plural so this
is sketchy but it's correct
is sketchy but it's correct
actually checked
then yeah this is sketchy but
fine and what do we have
here unpacking of
actions actions actually get passed in
actions actions actually get passed in
it
should yeah this should be fine
h
and do we use this all done
signal just started my PhD and RL
signal just started my PhD and RL
working on topics like Simer real Gap
working on topics like Simer real Gap
what are the benefits of working with
what are the benefits of working with
puffer Li is it mainly
puffer Li is it mainly
debugging what is the main purpose of it
debugging what is the main purpose of it
so puffer Li gives you million step per
so puffer Li gives you million step per
second reinforcement learning um outside
second reinforcement learning um outside
of like Manny skill for robotic
of like Manny skill for robotic
specifically it is going to be at least
specifically it is going to be at least
a 100 times faster than most other
a 100 times faster than most other
things out
things out
there we've
there we've
got very clean demos for all of these
got very clean demos for all of these
things and uh it's just generally like
things and uh it's just generally like
clean RL but scaled up to actually have
clean RL but scaled up to actually have
like really really fast
like really really fast
environments um here you can see all
environments um here you can see all
these environments here got neural mm
these environments here got neural mm
mo3 in
mo3 in
here so here let's see if I
here so here let's see if I
can there we
go yeah so now this is me playing
it ah I need to fix uh some controls
it ah I need to fix uh some controls
apparently that should
apparently that should
work oh yeah there it is I just didn't
work oh yeah there it is I just didn't
have my mouse hovered over it
have my mouse hovered over it
we've got like this puffer
MOBA we've got like board games we've
MOBA we've got like board games we've
got like a little mini versions of go
got like a little mini versions of go
we've got multi-agent stuff like
we've got multi-agent stuff like
snake so basically it's just a really
snake so basically it's just a really
good playground for testing different
good playground for testing different
algorithms very very
algorithms very very
quickly um at millions of steps per
quickly um at millions of steps per
second you can do stuff like run a 100
second you can do stuff like run a 100
billion step training runs on a single
billion step training runs on a single
GP with puffer lip which is is really
GP with puffer lip which is is really
not something you see just about
not something you see just about
anywhere else so that is the point of
anywhere else so that is the point of
puffer lib make RL really fast make
puffer lib make RL really fast make
experimentation really fast and we're
experimentation really fast and we're
starting to do more science side stuff
starting to do more science side stuff
ourselves uh on that aspect to like get
ourselves uh on that aspect to like get
more stable algorithms and whatnot as
more stable algorithms and whatnot as
well but generally give it a try we've
well but generally give it a try we've
got a nice helpful community of people
got a nice helpful community of people
using it as well in the Discord
thanks yeah no worries I've got lots of
thanks yeah no worries I've got lots of
material on it as well like if you check
material on it as well like if you check
on if you check on X it's actually I
on if you check on X it's actually I
ported the main article so the main
ported the main article so the main
articles are actually on the website
articles are actually on the website
there's some additional ones on X if you
there's some additional ones on X if you
want everything but like we've got docs
want everything but like we've got docs
here and we've also got this blog which
here and we've also got this blog which
covers like our latest release and you
covers like our latest release and you
know stuff we're trying to do got like
know stuff we're trying to do got like
quick start guides Hardware guides like
quick start guides Hardware guides like
tons and tons of stuff I mean really
tons and tons of stuff I mean really
puffer lib is just my effort to fix the
puffer lib is just my effort to fix the
state of this field because stuff is
state of this field because stuff is
really really hard and finicky in RL
really really hard and finicky in RL
right now and it just needs to be better
right now and it just needs to be better
so I finished my PhD in RL last spring
so I finished my PhD in RL last spring
and now I am working on doing that
and now I am working on doing that
full-time time without any of the
full-time time without any of the
strings attached that you find in
strings attached that you find in
Academia e
what is wrong with
this I've got to be doing something
this I've got to be doing something
stupid here right
is the
mask no if it wouldn't even run if the
mask no if it wouldn't even run if the
mask were all
mask were all
false
for e
so this assert
so this assert
runs so observations are
runs so observations are
correct yeah observations are
correct how about
this okay so all the data coming out of
this okay so all the data coming out of
this is evidently correct
this is evidently correct
correct but it's still not
running I can only assume that the
running I can only assume that the
buffer is somehow wrong
buff is
buff is
none don't think buff is supposed to be
none don't think buff is supposed to be
this could just be The Driver M
though okay so for some reason the
though okay so for some reason the
buffer is none
oh that's very silly
waiting for Claude 3.5
waiting for Claude 3.5
Opus the models really don't make a big
Opus the models really don't make a big
difference in my day-to-day programming
difference in my day-to-day programming
like at
all like I really don't rely on them
all like I really don't rely on them
very much at all
I mean you can see while I'm typing here
I mean you can see while I'm typing here
I have auto complete it's llm
I have auto complete it's llm
autocomplete but you see I use it for
autocomplete but you see I use it for
like one line it's basically a typing
like one line it's basically a typing
buff that's
buff that's
it I'll use GPT for like obscure errors
it I'll use GPT for like obscure errors
and Doc sometimes that's pretty much it
though yeah so all these need to
though yeah so all these need to
have uh to have like
buff visual dashboards well if you're
buff visual dashboards well if you're
not a programmer that's a different
not a programmer that's a different
story
story
though despite what uh Twitter seems to
though despite what uh Twitter seems to
think now is literally the best time to
think now is literally the best time to
learn how to
learn how to
program I do highly recommend
program I do highly recommend
it oops
why not use Google's AI studio for
why not use Google's AI studio for
that for what
the on Line auto complete uh because the
the on Line auto complete uh because the
main thing that matters is the speed of
main thing that matters is the speed of
the auto complete like the main thing
the auto complete like the main thing
that matters is that there's not a delay
that matters is that there's not a delay
while I'm typing and super Maven just
while I'm typing and super Maven just
has really fast models and they've got a
has really fast models and they've got a
nice plugin for neov them so it's very
nice plugin for neov them so it's very
easy it's pretty much
it flash thinking yeah but the thing is
it flash thinking yeah but the thing is
they all like the companies are all just
they all like the companies are all just
going to release models that leap prog
going to release models that leap prog
each other constantly it really doesn't
each other constantly it really doesn't
matter like it really doesn't matter
matter like it really doesn't matter
that
much to be switching between them
much to be switching between them
constantly like the only time like the
constantly like the only time like the
people that you see switching between
people that you see switching between
models constantly are the ones like you
models constantly are the ones like you
or her are using them to generate entire
or her are using them to generate entire
stuff Al together then yeah it really
stuff Al together then yeah it really
matters but I'm not doing that right I'm
matters but I'm not doing that right I'm
writing most of the code myself
writing most of the code myself
here um so like I'm like I have GPT up
here um so like I'm like I have GPT up
in the background you can see but like
in the background you can see but like
I've done I've like maybe typed a few
I've done I've like maybe typed a few
things into this today all of which were
things into this today all of which were
like setup error messages and
stuff the use of it is pretty
stuff the use of it is pretty
minimal honestly I get way more as just
minimal honestly I get way more as just
like having this fast auto complete not
like having this fast auto complete not
having to type everything
b
b
boom that works now
perfect where's the get credentials cach
thing pretty heavy on my
thing pretty heavy on my
end I mean yeah that's a perfectly ah
end I mean yeah that's a perfectly ah
blinding um that's a perfectly
blinding um that's a perfectly
reasonable case for it but like when I
reasonable case for it but like when I
don't know when I need to make good
don't know when I need to make good
charts like I just write I just code
charts like I just write I just code
them my
them my
S I don't need to do it that often like
S I don't need to do it that often like
it would probably take me a while but
it would probably take me a while but
like it's it's the type of thing where
like it's it's the type of thing where
if I had to make a lot of charts I'd be
if I had to make a lot of charts I'd be
really fast at it
there's actually very little to do
there's actually very little to do
between programming and
math it's like surprisingly very little
math it's like surprisingly very little
I actually I really do not enjoy
I actually I really do not enjoy
um I especially do not enjoy higher
um I especially do not enjoy higher
mathematics like I just don't find it
mathematics like I just don't find it
interesting at
interesting at
all um code is great though I can build
all um code is great though I can build
whatever the hell I
whatever the hell I
want when did I
learn I guess
learn I guess
like
like
seriously when I was maybe 13 or 14 I
seriously when I was maybe 13 or 14 I
started so yeah been doing it for a long
time I think I could learn a lot faster
time I think I could learn a lot faster
these days there was like most of the
these days there was like most of the
materials out back then were God awful
materials out back then were God awful
like they literally just teach you how
like they literally just teach you how
to program everything in the worst way
to program everything in the worst way
possible for
possible for
years like I think I could teach myself
years like I think I could teach myself
how to program decently in only a few
how to program decently in only a few
years
now starting pH never been good at
yeah I mean I think I could probably get
yeah I mean I think I could probably get
decent enough at math if I like wanted
decent enough at math if I like wanted
to it I don't think I would be like a
to it I don't think I would be like a
math genius or anything but I think I
math genius or anything but I think I
could at least function in higher
could at least function in higher
mathematics if I were to put in the time
mathematics if I were to put in the time
I just don't find it very interesting as
I just don't find it very interesting as
all like I'm not going to focus on it
all like I'm not going to focus on it
and do it right the other thing is I
and do it right the other thing is I
didn't find it very useful for the stuff
didn't find it very useful for the stuff
I wanted to do
I wanted to do
there's zero
there's zero
way well you just start building stuff
way well you just start building stuff
on the side
on the side
right you just build stuff on the side
right you just build stuff on the side
like people build little games people
like people build little games people
build little side applications
build little side applications
right it's a good way to learn
okay so this is very
okay so this is very
nice uh and let's take a quick look at
nice uh and let's take a quick look at
the the
multiprocessing I'm going to check what
multiprocessing I'm going to check what
we're doing for
dinner I'll be right back one second
hey what is dinner CL
all right got half an
hour I'm curious so if I were
hour I'm curious so if I were
learn well that's not going to go over
learn well that's not going to go over
very
well e
okay
so AI cannot replace a new version with
itself it's just not a thing it can do
if you mean like the Escape stuff or
if you mean like the Escape stuff or
whatever those are mainly like pretty
whatever those are mainly like pretty
low quality bait
articles I mean even with the stuff
articles I mean even with the stuff
today it's
today it's
like like 25% on Frontier math is like
like like 25% on Frontier math is like
an insane
an insane
result but
result but
uh it's it's very narrow problems in
uh it's it's very narrow problems in
which these things are good like these
which these things are good like these
like you still can't get an AI to build
like you still can't get an AI to build
a useful Library autonomously like at
allic kind of zany over
there kind of zany
really don't take a lot of their safety
really don't take a lot of their safety
side stuff very
side stuff very
seriously have a good model
though artifacts yeah Fair
GPT does that now as
well the companies just are going to
well the companies just are going to
leog each other
constantly so this is interesting
um if is native
and num NS is
and num NS is
one what about
that should train cial no problem right
try a different
one so there we go there's puffer spaces
right and then we
do processing
oh that's what you
oh that's what you
mean oh
what type of RL algo are you testing
what type of RL algo are you testing
it's just PO with like small model uh
it's just PO with like small model uh
what I'm doing at the moment is more
what I'm doing at the moment is more
infrastructure side stuff you know a lot
infrastructure side stuff you know a lot
of puffer lib is just like getting all
of puffer lib is just like getting all
the fancy data from your environment
the fancy data from your environment
into the main process quickly and I'm
into the main process quickly and I'm
currently screwing with the
currently screwing with the
multiprocessing modules to
multiprocessing modules to
essentially bring like the older code
essentially bring like the older code
that's compatible with everything up to
that's compatible with everything up to
speed with the newer faster code so
speed with the newer faster code so
everything is going to be pretty much
everything is going to be pretty much
like one
like one
implementation everything's going to be
implementation everything's going to be
a little bit faster everything's going
a little bit faster everything's going
to be a bit more
to be a bit more
stable oh hey Noah
stable oh hey Noah
welcome uh yeah I'm basically better I
welcome uh yeah I'm basically better I
it was just like a combination of
it was just like a combination of
crashing after the conference and like
crashing after the conference and like
stacking a few different minor
stacking a few different minor
illnesses um so I basically just hung
illnesses um so I basically just hung
out and played balers skate for a few
out and played balers skate for a few
days which of course now I have to
days which of course now I have to
finish the game so I'll be uh you know
finish the game so I'll be uh you know
clocking out a couple hours here and
clocking out a couple hours here and
there until I finish
that for
somehow something's getting messed up
somehow something's getting messed up
here it looks like
that's a different
error uh I think this has to go
error uh I think this has to go
and this is
good handle
good handle
buff why would this break
should be fine shouldn't it
here's the
print this it
I literally just do this
and now we're back to this error
okay so we
okay so we
get 4 by
four it made twice I think it
four it made twice I think it
does you
does you
went but we do get all this stuff
went but we do get all this stuff
right then
right then
this bug ban this bot real
this bug ban this bot real
quick get out of
here native is
I hate having to pull out the remote
I hate having to pull out the remote
debugger it's such a
debugger it's such a
pain I do it when I have
pain I do it when I have
to oops
we do it when we have
to do like
to do like
this
race waiting for connection
okay now we've got our nice remote
okay now we've got our nice remote
shell this is our
shell this is our
array this is our
array this is our
space
space
type array array
array array. view struct dtype
array array. view struct dtype
I'm changing to a larger dtype
sorry for interrupt I encountered some
sorry for interrupt I encountered some
error running vectorization
code
code
how I could not resolve the following
how I could not resolve the following
following
following
error uh did you put the full error
error uh did you put the full error
message in
Discord oh hey I see Xander
you
have yeah post
error so there's an interesting mismatch
error so there's an interesting mismatch
here
FL I guess this has to be actions
right
no
no
array where is
array where is
this this is on action
I just get past the wrong struct D type
is it just
is it just
up
yeah that's not right is
it I don't think that's right oops
are
pool I don't know what the satari pool
pool I don't know what the satari pool
file
file
is can you just post the full error
is can you just post the full error
message like I want to see what command
message like I want to see what command
you are running what file and all of
you are running what file and all of
that oh and my green screen messes up if
that oh and my green screen messes up if
I don't turn light some
this still not right
this still not right
enough my room is just kind of
dark it doesn't make any sense though I
dark it doesn't make any sense though I
have lights hold on
it's a little
it's a little
better not
really
yeah copy code
where is the satari pool file
put
oh well which one of
oh well which one of
these which one of these doesn't
work 8
it's the vectorization file not the
it's the vectorization file not the
Atari
file
file
oh this is an API signature
oh this is an API signature
man like this is is showing you how to
man like this is is showing you how to
use the function you can't like this
use the function you can't like this
doesn't have anything in
doesn't have anything in
it oh wait no actually I'm wrong hold on
it oh wait no actually I'm wrong hold on
no this should be valid shouldn't
no this should be valid shouldn't
it yeah no this should totally be valid
it yeah no this should totally be valid
okay let me see what you're no wait
okay let me see what you're no wait
you're right let me see let me
you're right let me see let me
see no you're right my bad hold on
oh no this is a
signature yeah this is a I I don't know
signature yeah this is a I I don't know
why I did it this way I could have
why I did it this way I could have
easily just
easily just
done couldn't I just done
done couldn't I just done
this oh no because cereal is not
imported yeah yeah yeah yeah so this is
imported yeah yeah yeah yeah so this is
just this was just an API signature man
just this was just an API signature man
like this is not even formatted like uh
like this is not even formatted like uh
the code should be correctly so what you
the code should be correctly so what you
do is just skip that that shows you how
do is just skip that that shows you how
to do this right so you take this
to do this right so you take this
code if you want to like just copy paste
code if you want to like just copy paste
it
it
in oops you do
in oops you do
this you do
this
this
uher lib
back there we
back there we
go I have these Imports up
there and this is the thing that I'm
there and this is the thing that I'm
working on right now so this will be
working on right now so this will be
fixed this is the bug that I'm working
fixed this is the bug that I'm working
on right
now but this is fine this is Works in 20
now but this is fine this is Works in 20
um this is on my Dev rant that I broken
this but that's a good point I should
this but that's a good point I should
add some imports to this
oh no I have it right here import puff.
oh no I have it right here import puff.
Vector yeah so that should be
fine the heck is wrong with this so
right I wanted to
check I wanted to check Sanity on
here okay so this is correct the action
here okay so this is correct the action
space is uh two discreet
space is uh two discreet
it should be
it should be
two FL no two in 32s
two FL no two in 32s
right it should be two in
32s so this action is
correct uh this action D type seems to
correct uh this action D type seems to
be wrong it should not be i8
why did it turn this into
I8 this is gymnasium PU
I8 this is gymnasium PU
right emulate action
space space. d
space space. d
type oh is this wrong hold
type oh is this wrong hold
on s.m.
on s.m.
action space flat D
action space flat D
type
ah why is I4
I can just apply this as a patch real
quicker. spaces. boox
uh then you return space
32 okay
still doesn't
work
37029 okay so array
37029 okay so array
and
and
32s try
32s try
type still i8
emulate action
space e type from
space plattin
space I think you need it right here
here
e
e e
there we go funny how it spins the CPU
there we go funny how it spins the CPU
at
5,000% but whatever you know
to
to
work
um okay uh initial initial thoughts
um okay uh initial initial thoughts
seems to work for
I said to C the why did the credentials
I said to C the why did the credentials
thing not
work oh it's this
work oh it's this
one oops
hey
Xander I'm quiet cuz I took the headset
Xander I'm quiet cuz I took the headset
off my
off my
bad
bad
um I forget that this mic at the
um I forget that this mic at the
moment's not
working there we
working there we
go uh definitely don't push to
2.0 what can I help you with Xander real
2.0 what can I help you with Xander real
quick before I head to dinner I just I'm
quick before I head to dinner I just I'm
just adding like this is unrelated just
just adding like this is unrelated just
vectorization stuff I was working
on very
optimally yep got rid of re board
optimally yep got rid of re board
sharing that's totally
sharing that's totally
fine this should be
fine this should be
fine 2D local crop performed
fine 2D local crop performed
worse that's
funny so yeah you way over complicated
funny so yeah you way over complicated
the lstm bit um if you look at our other
the lstm bit um if you look at our other
files it's it's like one line to add an
files it's it's like one line to add an
lstm do you still want 2D OBS I think
lstm do you still want 2D OBS I think
you should fix the other stuff first so
you should fix the other stuff first so
that you can actually run proper
that you can actually run proper
experiments on it um like the lstm that
experiments on it um like the lstm that
you like the STM architecture that you
you like the STM architecture that you
had is just like a very wrong
had is just like a very wrong
implementation
implementation
um like detaching from the graph will
um like detaching from the graph will
mess it up and there's other stuff that
mess it up and there's other stuff that
you can get wrong as well like lstms are
you can get wrong as well like lstms are
a pain there's a reason that I gave you
a pain there's a reason that I gave you
the rapper for it right so like if I
the rapper for it right so like if I
just look at puffer lib what's an
just look at puffer lib what's an
environment
environment
ocean I don't know let's look at
ocean I don't know let's look at
squared or actually I think they're all
squared or actually I think they're all
just in here right so
just in here right so
torch this is literally all you have to
torch this is literally all you have to
add
add
to get the recurrent
to get the recurrent
wrapper you just grab lstm wrapper you
wrapper you just grab lstm wrapper you
see for neural Mo 3 I made a custom one
see for neural Mo 3 I made a custom one
that just has a different input and
that just has a different input and
hidden size but yeah that's pretty much
hidden size but yeah that's pretty much
all you have to do and
then uh number three look just put the
then uh number three look just put the
name of it in there here's a policy name
name of it in there here's a policy name
and it'll pick it up from the file for
and it'll pick it up from the file for
you because like there's stuff that you
you because like there's stuff that you
have to do for the lstm that's annoying
have to do for the lstm that's annoying
like here you see like these obnoxious
like here you see like these obnoxious
so there's like these obnoxious
so there's like these obnoxious
transposes that you have to make sure
transposes that you have to make sure
that you get right so you call encode
that you get right so you call encode
then you call this obnoxious transposes
then you call this obnoxious transposes
then you call recurrent then you have to
then you call recurrent then you have to
obnoxious transpose reshape and then
obnoxious transpose reshape and then
decode you also don't want to break from
decode you also don't want to break from
the graph that'll make it wrong um so
the graph that'll make it wrong um so
there's a fair bit of stuff you got to
there's a fair bit of stuff you got to
look at
we also handle this
stuff let see your
graphs try to use wrapper yeah I would
graphs try to use wrapper yeah I would
suggest that
suggest that
so positional OBS no with
lstm it's funny that your I guess your
lstm it's funny that your I guess your
lstm would not make it fail it just
lstm would not make it fail it just
wouldn't be doing anything for
you and
then poop OB space
lstm I think what we should do is Anders
lstm I think what we should do is Anders
you should like we should play with it
you should like we should play with it
at the very least um cuz the m is easy
at the very least um cuz the m is easy
enough that it should work on both very
enough that it should work on both very
simply and it would be nice to get this
simply and it would be nice to get this
thing merged with uh you know nice
thing merged with uh you know nice
policies and
stuff I mean it's fine the way you have
stuff I mean it's fine the way you have
it it's just it's it's fine if you want
it it's just it's it's fine if you want
to keep it that way
like not really any main is there's not
like not really any main is there's not
really any major issue with it I think
really any major issue with it I think
we should try to get it on somewhat
we should try to get it on somewhat
larger Maps
larger Maps
working I mean this is like this train
working I mean this is like this train
super fast anyways right I'm assuming
super fast anyways right I'm assuming
you haven't even run a hyper pram sweep
you haven't even run a hyper pram sweep
or
anything op
anything op
space yeah so the fact that there's like
space yeah so the fact that there's like
this deviation with like no lstm vers
this deviation with like no lstm vers
lstm slightly better pick of related
lstm slightly better pick of related
result
yeah I I'm just not confident in it
yeah I I'm just not confident in it
because like one you could have
because like one you could have
implemented the crop space wrong right
implemented the crop space wrong right
two you could have the neuronet just
two you could have the neuronet just
being insane and three you could have
being insane and three you could have
bad hyper parameters for it
like this is not like the world's
like this is not like the world's
hardest environment where like there's
hardest environment where like there's
no way that crops are going to work
no way that crops are going to work
right it's like a very simple
right it's like a very simple
environment basically anything you throw
environment basically anything you throw
at it should
at it should
work so if you want to figure out if you
work so if you want to figure out if you
want to learn how to do like 2D OB
want to learn how to do like 2D OB
spaces we can do it otherwise you can
spaces we can do it otherwise you can
keep it I don't really care as long as
keep it I don't really care as long as
we have like you know a slightly larger
we have like you know a slightly larger
version of the environment that trains
version of the environment that trains
decently well uh so we can have like no
decently well uh so we can have like no
we're looking for something like the
we're looking for something like the
rware demo I'd say out of it
rware demo I'd say out of it
oh also you didn't do the uh the C thing
oh also you didn't do the uh the C thing
for the you didn't do like the C
for the you didn't do like the C
neuronet yet
neuronet yet
either from
rware so I mean basically like you have
rware so I mean basically like you have
like a trash pickup M that's pretty
like a trash pickup M that's pretty
similar to
this it's kind of mesmerizing you just
this it's kind of mesmerizing you just
watch them Huff
around uh but yeah those are my
around uh but yeah those are my
suggestions for the time being
suggestions for the time being
anyways uh I'm going to go get dinner
anyways uh I'm going to go get dinner
for folks watching the stream uh there
for folks watching the stream uh there
are a few things first of all everything
are a few things first of all everything
is linked on puffer doai you can join
is linked on puffer doai you can join
our Discord right here we got a lot of
our Discord right here we got a lot of
great people here if you're interested
great people here if you're interested
in getting into building M doing RL if
in getting into building M doing RL if
you're an existing researcher or work in
you're an existing researcher or work in
RL like we've got lots of great
RL like we've got lots of great
resources for you here you can St the
resources for you here you can St the
repository it helps us out a ton and if
repository it helps us out a ton and if
you want more content on RL you can
you want more content on RL you can
follow me on X other than that I've been
follow me on X other than that I've been
away for a fair bit but it starting in
away for a fair bit but it starting in
the next few weeks you're going to see
the next few weeks you're going to see
me streaming a lot more of the
me streaming a lot more of the
development for this project so it'll be
development for this project so it'll be
very very easy to get things answered in
very very easy to get things answered in
a timely manner other than that
