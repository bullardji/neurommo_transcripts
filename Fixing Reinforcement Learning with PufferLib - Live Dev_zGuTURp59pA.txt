Kind: captions
Language: en
okay we should be live
okay we should be live
here let me make
sure okay perfect
sure okay perfect
so what we're going to do right now um
so what we're going to do right now um
actually I'll tweet this as well we're
actually I'll tweet this as well we're
going to do a quick contributor code
going to do a quick contributor code
review
perfect oops
all right link me the uh I see isander
all right link me the uh I see isander
go ahead and just link me the current
go ahead and just link me the current
version also why does our Discord icon
version also why does our Discord icon
not
show okay that's just a glitch good
show okay that's just a glitch good
thought we'd lost our our URL or some
[ __ ] is this a
[ __ ] is this a
PR
PR
yes so
so is this the right
so is this the right
one to
review in Discord chat
gotcha
okay see read
me
perfect we'll just start a review on
this I'll do most of it just out loud
this I'll do most of it just out loud
but I'll give you should I give you
but I'll give you should I give you
actually I'll leave it up to you would
actually I'll leave it up to you would
you like me to do this formally with
you like me to do this formally with
like typed comments for you to review or
like typed comments for you to review or
do you want me to just do this live fix
do you want me to just do this live fix
it as is and go through the VOD
I can do either
I'll just start here
I'll just start here
so okay this is immediately this is a
so okay this is immediately this is a
lot of environments
um for more review okay so we'll do that
um for more review okay so we'll do that
then
so e
okay so args are probably
okay so args are probably
4096 and then two end copies like two
4096 and then two end copies like two
copies down here is what I would
copies down here is what I would
suggest as a starting point at the least
suggest as a starting point at the least
uh I see you're missing sweep config
uh I see you're missing sweep config
here here you're definitely going to
here here you're definitely going to
want to like
want to like
[Music]
add I want to add
that this is fine I actually I changed
that this is fine I actually I changed
uh stuff a little bit since I talked you
uh stuff a little bit since I talked you
about this but you'll see that when you
about this but you'll see that when you
go to
go to
integrate okay so let's take a look look
integrate okay so let's take a look look
at your neural net
um I
see I think you might have over
see I think you might have over
complicated
here so let's see you have this is a
here so let's see you have this is a
sequential which is l re
sequential which is l re
linear then you have this which is
linear then you have this which is
linear re
linear re
linear other agent
linear other agent
linear yeah so you've got all this stuff
linear yeah so you've got all this stuff
linear re linear
linear re linear
re then you have this combined one okay
re then you have this combined one okay
so yeah this network is what we would
so yeah this network is what we would
call
call
insane
insane
um yeah this net is
um yeah this net is
insane so
I'm going to have to leave a detailed
I'm going to have to leave a detailed
comment
comment
here this architecture is
here this architecture is
nuts one buying all these small linear
Nets uh so you
don't on of
don't on of
tiny kernels
just have
features and then we
features and then we
do
do
don't get in size
don't get in size
eight 16 is
eight 16 is
sketch 32 should be there well lose
sketch 32 should be there well lose
proper ke of high dimation
proper ke of high dimation
go this small and everything will just
go this small and everything will just
feel
CS net does not need to be this deep
CS net does not need to be this deep
either net does not
either net does not
need
de
de
comes the near TM
2D or
2D or
linear
near and starting point de
near and starting point de
Nets do not work
okay so yeah this whole network you're
okay so yeah this whole network you're
going to want to basically redo um just
going to want to basically redo um just
like keep it simple this is all just
like keep it simple this is all just
flat data from what I can see it's not
flat data from what I can see it's not
particularly big flat data just
particularly big flat data just
concatenate everything
concatenate everything
together oh yeah I'll just like leave
together oh yeah I'll just like leave
you what I would suggest as a comment
you what I would suggest as a comment
here um
to
to
suggest C
suggest C
everything and there's no point wise in
everything and there's no point wise in
here right I'm not being
here right I'm not being
stupid more you don't need to use you
stupid more you don't need to use you
won't need them for
won't need them for
this um hold
this um hold
on there's no cooling there's no like
on there's no cooling there's no like
pooling over agents here
right yeah what is this this
like at
everything linear from
everything linear from
that H
that H
reu
reu
lstm that's it
okay um so I don't know what you're
okay um so I don't know what you're
doing
here not sure what is going on
here every agent
here every agent
seeing most
seeing most
cases
cases
want f
see
see
okay some
docks did you write this or did GPT
docks did you write this or did GPT
write this let me read
this did you write this or did GPT write
this did you write this or did GPT write
this
G
G
GPT yeah so
GPT yeah so
that
case GPT bullets to
case GPT bullets to
expand into a page users will post into
expand into a page users will post into
GPT convert back to bullets just post
GPT convert back to bullets just post
the
bullets yeah so don't do that like you
bullets yeah so don't do that like you
had the format that you want is you just
had the format that you want is you just
want the outliner the bullet points like
want the outliner the bullet points like
there's no obligation to write a page of
there's no obligation to write a page of
docs for an M you can just write the
docs for an M you can just write the
bullet points and be
done there's no requirement like
done there's no requirement like
formality doesn't require that you write
formality doesn't require that you write
a
a
page we don't do that around here we
page we don't do that around here we
just you know simple code requires
just you know simple code requires
whatever docs is the minimum required to
whatever docs is the minimum required to
explain it and you're good
explain it and you're good
okay here's your track pick
okay here's your track pick
[Music]
Abend and client logs okay and then we
Abend and client logs okay and then we
have float
array okay actions in
yes this is correct
good okay your binding looks
good okay your binding looks
fine um these are really
fine um these are really
silly you know CU it's almost always the
silly you know CU it's almost always the
same code but we leave it there as a
same code but we leave it there as a
layer for now
ah there's no need to do this as a a
ah there's no need to do this as a a
macro like
macro like
this like what are you saving by doing
this like what are you saving by doing
this right
also it would be inside of trash pickup.
h.c okay
demo
good check other n demos for
good check other n demos for
nice Serv
nice Serv
syntax there's some better Syntax for
syntax there's some better Syntax for
initializing uh strs and C that you can
initializing uh strs and C that you can
look at that's in the other examples you
look at that's in the other examples you
get something that looks like you know a
get something that looks like you know a
Pam equals vow Pam equals vow in like
Pam equals vow Pam equals vow in like
one
one
take allocate make client reset
take allocate make client reset
good
good
um random actions
missing a human control
missing a human control
mode see other
mode see other
M's for how to do
M's for how to do
that want human to be able to hold
Shi perf
test long silly but
whatever okay
it for multi-agent Ms do your test
it for multi-agent Ms do your test
with
with
realistic
realistic
conditions
conditions
agents and
multiply agents because metric would
multiply agents because metric would
really be agent steps
second okay and then we'll do the main
second okay and then we'll do the main
code last only 600 lines is quite good
uh
uh
syon syon should do the type checks here
syon syon should do the type checks here
for
for
you time to
validate if you really want to but if
validate if you really want to but if
you pass negative number here you sort
you pass negative number here you sort
of deserve
of deserve
it I do type checks when I have like
it I do type checks when I have like
lists and things I usually will only do
lists and things I usually will only do
these types of guards when I have like
these types of guards when I have like
complicated stuff like the snake en it
complicated stuff like the snake en it
can take like a list of different values
can take like a list of different values
right and you want to make sure that
right and you want to make sure that
they're the same length and stuff like
they're the same length and stuff like
that CU that's legitimately easier to
that CU that's legitimately easier to
screw up
wait
what oh that's
funny
sure you have like a fair bit of stuff
sure you have like a fair bit of stuff
in here
in here
um stuff like this is
good
good
reset it's
good oh yeah I forgot about
good oh yeah I forgot about
this uh yeah you can do this this is
this uh yeah you can do this this is
fine
good this is fine this is a bit longer
good this is fine this is a bit longer
than it needs to be like you're being
than it needs to be like you're being
very cautious here about a lot of stuff
very cautious here about a lot of stuff
but
whatever and now
whatever and now
we we do this whole
we we do this whole
thing
so don't use macros
it's fine if you want to use them for
it's fine if you want to use them for
constant like this I don't know I go
constant like this I don't know I go
back and forth on just doing these as
back and forth on just doing these as
consts versus doing these as pound
consts versus doing these as pound
defines um there's really not any reason
defines um there's really not any reason
though to go to do anything like fancy
though to go to do anything like fancy
like
this you're still here right
Zander not seeing any questions or
Zander not seeing any questions or
anything in chat
so I'm hoping it's still
working let's just make sure trash
working let's just make sure trash
collected Yep this is fine I usually
collected Yep this is fine I usually
just call it score for consistency but
just call it score for consistency but
this is totally good it's more
this is totally good it's more
descriptive it's fine yep still here
descriptive it's fine yep still here
good
good
perfect um add
perfect um add
log yeah so this is just copied that's
log yeah so this is just copied that's
fine
fine
uh oh grid cell
um type index index
positions wait index
wait
what hold
on oh
jeez let me figure out what you're doing
jeez let me figure out what you're doing
before I comment here
actually let me just get a good outline
actually let me just get a good outline
of how you're structuring this you've
of how you're structuring this you've
got computer
Ops responding
R yeah that's bizarre though
R yeah that's bizarre though
um let me see
don't have to iterate
don't have to iterate
overall yeah I'm questioning whether you
overall yeah I'm questioning whether you
should have to do that anyways though
should have to do that anyways though
I'm not questioning the efficiency right
I'm not questioning the efficiency right
I'm questioning whether the design is
I'm questioning whether the design is
needed to get that
needed to get that
efficiency let me see how you what
efficiency let me see how you what
you're doing
first okay this is yeah there's going to
first okay this is yeah there's going to
be some edit there's going to be some
be some edit there's going to be some
stuff here some of this is code some of
stuff here some of this is code some of
this is like RL there's H there's a
this is like RL there's H there's a
bunch of stuff
bunch of stuff
here agent
allocate
step okay the code first of all the
step okay the code first of all the
codee's in a very weird order for having
codee's in a very weird order for having
these methods um but that's I'm not
these methods um but that's I'm not
going to that's
going to that's
whatever yeah and
whatever yeah and
then let me figure out what this grid
then let me figure out what this grid
cell thing
cell thing
is if this is silly or not
is if this is silly or not
sell type
index oh I see what you're doing yeah
index oh I see what you're doing yeah
that's
that's
fine
um yep that's fine your grid thing is
um yep that's fine your grid thing is
fine I see you can do this if you want
fine I see you can do this if you want
I'll do two different arrays
I'll do two different arrays
often um because when you do this you
often um because when you do this you
add the overhead of a struct but it
add the overhead of a struct but it
really doesn't matter yeah this is
really doesn't matter yeah this is
totally
totally
fine possibly even better for cache
fine possibly even better for cache
coherency
depending I think the thing is you just
depending I think the thing is you just
can't M set it to the same you can't
can't M set it to the same you can't
reset it easily like you can't just m
reset it easily like you can't just m
set to the the same value as easily as
set to the the same value as easily as
all that's
okay this structure is
okay this structure is
fine long as
fine long as
you need to
you need to
zero to uh
reset this
reset this
isn't start
okay so you
have yeah so the way that I would do
have yeah so the way that I would do
this
typically
instruct
instruct
type right trash
type right trash
agent
crash
position yeah cuz this is a bit much
position yeah cuz this is a bit much
right you have
this yeah this is a bit much the way
this yeah this is a bit much the way
this is
this is
here I think you could do this whole
here I think you could do this whole
thing just
thing just
as and then you also have to do this
as and then you also have to do this
presence thing yeah no it's going to be
presence thing yeah no it's going to be
way easier to just do entity struct cuz
way easier to just do entity struct cuz
this is a whole bunch of logic for just
this is a whole bunch of logic for just
essentially wanting to have an entity
struct wait what
this is okay I'm not a huge fan of this
this is okay I'm not a huge fan of this
style but people do this I
know agent
positions I went
positions I went
ahead uh if you're going to do it this
ahead uh if you're going to do it this
way this is a grid position then
way this is a grid position then
normalizing this way is fine the
normalizing this way is fine the
question is whether they need to have
question is whether they need to have
absolute coordinates in the first place
absolute coordinates in the first place
so yeah I'll leave you a comment here
positions of other
positions of other
agents let
see okay
I think it's Clemens
so what you've done here is you've given
so what you've done here is you've given
everything AB like Norm chords to
everything AB like Norm chords to
different things in the environment
different things in the environment
different like entities items and stuff
different like entities items and stuff
um if instead
um if instead
where's this trash pickup
end I guess I don't have it online yet
end I guess I don't have it online yet
but it looks something like this right
but it looks something like this right
it's just a
it's just a
grid um these guys see a crop of nearby
grid um these guys see a crop of nearby
tiles right so like you draw like a 5x5
tiles right so like you draw like a 5x5
crop or whatever and then that's what
crop or whatever and then that's what
they
they
see or like an end byend crop around
see or like an end byend crop around
them and then you just give them you
them and then you just give them you
know uh if it's going to be like one for
know uh if it's going to be like one for
agent two for bin three for item
agent two for bin three for item
something like that and then you can
something like that and then you can
just one hot that and that's a really
just one hot that and that's a really
really easy and efficient way to encode
really easy and efficient way to encode
observations and it's not dependent on
observations and it's not dependent on
the number of Agents or the number of
the number of Agents or the number of
trash in the environment so then I can
trash in the environment so then I can
take your environment I can load it up
take your environment I can load it up
with 4,000 agents if I want to in one
with 4,000 agents if I want to in one
environment and it'll be totally
fine speaking of which when I said four
fine speaking of which when I said four
000 before it's 4,000 agent
000 before it's 4,000 agent
OBS
actually okay
Place random
items I saw this while I was scrolling a
items I saw this while I was scrolling a
couple places so I don't know if you
couple places so I don't know if you
already know this or not but uh use
already know this or not but uh use
inverted
inverted
additional
additional
pattern there's
thing if not
condition if not condition
continue so this is how you avoid
continue so this is how you avoid
nesting super deep right when you just
nesting super deep right when you just
have something like this where it's just
have something like this where it's just
like all the code is under
like all the code is under
here
right this is
fine this F would be much
fine this F would be much
shorter if
shorter if
use the struct
data
storage just
being add re okay so this is
being add re okay so this is
insane um
just if you have three agents this might
just if you have three agents this might
be I sharing
be I sharing
scales
scales
absolutely
terribly more than you
agents at the very least you want to Lar
personal reward
personal reward
first
te okay so we have move
agent yeah so I would tell you here it
agent yeah so I would tell you here it
would be
agent
equals X
you see how simple it
is this is
is this is
[Music]
fine oh jeez yeah
okay this type of thing is
fine
fine
holy okay let's start from here
holy okay let's start from here
cell type cell State type
yeah cuz these are C silly
okay kind of repetitive but I don't mind
this additional
yeah you just need to look at this logic
yeah you just need to look at this logic
with uh just invert some conditionals
with uh just invert some conditionals
here B Tri pull bin
yeah so the main things that are making
yeah so the main things that are making
this hard to read are that you have not
this hard to read are that you have not
cached any position so you have this
cached any position so you have this
obnoxious macro everywhere and then this
obnoxious macro everywhere and then this
is just super deeply
is just super deeply
nested you've got like really long names
nested you've got like really long names
and then you've got like these functions
and then you've got like these functions
not caching variables and then you've
not caching variables and then you've
got everything nested super
got everything nested super
deep I just need to clean up the flow of
deep I just need to clean up the flow of
this a little bit
yeah so that's biggest pattern for you
yeah so that's biggest pattern for you
to use the only like big pattern for you
to use the only like big pattern for you
to use is um inverted conditional and
to use is um inverted conditional and
then like just cast them variables
right and then also like the other thing
right and then also like the other thing
is let me finish reading this function
this is a balance check which is
this is a balance check which is
repeated from above so it's weird that
repeated from above so it's weird that
you have to repeat
you have to repeat
it probably there's a way to simplify
it probably there's a way to simplify
this even more but I can't tell with the
this even more but I can't tell with the
way it is written
way it is written
currently like
look example of unreadable
because no variable
caching I mean you literally you have
caching I mean you literally you have
compute the same variable right
yeah so the rest of this is a little
yeah so the rest of this is a little
wordy but fine
so this episode
over it's kind of slow but whatever
wait I don't think you can do
this oh maybe you
can well I guess this does work
yeah I didn't realize because you have
yeah I didn't realize because you have
an array of grid cells instead of an
an array of grid cells instead of an
array of pointers to grid cells this is
array of pointers to grid cells this is
fine you actually don't have pointers to
fine you actually don't have pointers to
these so this is
these so this is
fine
fine
um actually I'll just like delete
um actually I'll just like delete
this and
this and
then my earlier comment up here is
then my earlier comment up here is
wrong where is
it this one
okay so
reset set
count
occurrences okay
it's
it's
[Music]
[Music]
fine
what calic already
zero set
pent this is
pent this is
[Music]
fine
set
set
fine uh I didn't see how you're doing
fine uh I didn't see how you're doing
logs but I think this is fine
here then confus so this good
here then confus so this good
good got your
client this will be very
client this will be very
unresponsive human play check how I
unresponsive human play check how I
handle
this it's fine and you got the puffers
this it's fine and you got the puffers
loaded
it's
fine I don't think you free the
fine I don't think you free the
client when you hold
Escape angles will just cause it to
Escape angles will just cause it to
freeze on
freeze on
Escape dra text text form
format draw the
grid it always amuses me when people do
grid it always amuses me when people do
this instead of just like drawing the
lines
um it probably doesn't matter to be fair
this is
okay wait
okay wait
what
display why is this Loop side of the
display why is this Loop side of the
agent
condition think it was
condition think it was
every agent
every agent
every
every
Loop this is the weird thing with this
Loop this is the weird thing with this
other than that
fine
fine
don't
this and then I guess I missed you must
this and then I guess I missed you must
have done this at the start you don't
have done this at the start you don't
need to do you don't need to pre-process
need to do you don't need to pre-process
macro stuff like that
yeah don't need to do
yeah don't need to do
this it's not a library like it's going
this it's not a library like it's going
to get included one time
to get included one time
anyways okay so that's a pretty thorough
anyways okay so that's a pretty thorough
review now I need to give
review now I need to give
you
comments finish
review main things
raising
raising
picture
picture
questions don't
share very
share very
hard side
much
much
cleaner
cleaner
andru First
Once
Once
[Music]
[Music]
comments learn early
variables
yeah I'll link it to
you did I say anything else
here
here
oh I'll just give you three points on
oh I'll just give you three points on
each
[Music]
is
is
nearby we do
nearby we do
in
where unless you are
where unless you are
specifically for pnn
there you
there you
go that is a
go that is a
fullon code
review 39
review 39
comments there you go so I gave you I
comments there you go so I gave you I
think three I gave you top three major
think three I gave you top three major
things on RL side and uh top three major
things on RL side and uh top three major
things on engineering side I think if
things on engineering side I think if
you look through those and uh make some
you look through those and uh make some
tweaks on that you'll have first of all
tweaks on that you'll have first of all
you'll learn a ton on both of those
you'll learn a ton on both of those
things uh and second of all like this
things uh and second of all like this
whole thing will get so much simpler for
whole thing will get so much simpler for
you to deal with because stuff will just
you to deal with because stuff will just
start working way more easily uh
start working way more easily uh
definitely thank you for the
definitely thank you for the
contribution this is great I really want
contribution this is great I really want
to integrate this n
uh this is this is pretty much what
uh this is this is pretty much what
happened by the way with like every new
happened by the way with like every new
contributor as well like Spencer I did
contributor as well like Spencer I did
this with Spencer I've done this with
this with Spencer I've done this with
like with bet and other people um so
like with bet and other people um so
like this is a normal amount of changes
like this is a normal amount of changes
for me to request on a first n PR so
for me to request on a first n PR so
especially if you're coming from more
especially if you're coming from more
like science side background and less
like science side background and less
like hard en background this is very
like hard en background this is very
very much normal and expected so good
very much normal and expected so good
job on the uh good job on the code here
job on the uh good job on the code here
uh and yeah let me know let me know how
uh and yeah let me know let me know how
much time you have for uh integrating
much time you have for uh integrating
stuff here and hopefully we can get the
stuff here and hopefully we can get the
trash pickup en into this update uh if
trash pickup en into this update uh if
you have time to clean stuff up and
you have time to clean stuff up and
train policies by then uh I think that
train policies by then uh I think that
you're going to be able to probably cut
you're going to be able to probably cut
out like a 100 lines of code just in the
out like a 100 lines of code just in the
process of cleaning stuff up as I
process of cleaning stuff up as I
recommended the Net's going to be easier
recommended the Net's going to be easier
stuff is going to train it a million
stuff is going to train it a million
steps per second and it should be pretty
steps per second and it should be pretty
pretty straight forward from there any
pretty straight forward from there any
extra questions for me right now
Xander I've got like uh 10 minutes
Xander I've got like uh 10 minutes
before I got to run to
dinner I should mention that Clemens
dinner I should mention that Clemens
blog is more like a cool out there thing
blog is more like a cool out there thing
not a standard like um entity stuff is
not a standard like um entity stuff is
something that we're going to look at
something that we're going to look at
like in maybe in the distant future very
like in maybe in the distant future very
helpful get started making changes
helpful get started making changes
wrapping up the semester so I should
wrapping up the semester so I should
have time should have more time for the
have time should have more time for the
next few weeks awesome great I'm trying
next few weeks awesome great I'm trying
to get this thing out like I'm trying to
to get this thing out like I'm trying to
get this release out in the next couple
get this release out in the next couple
of weeks trying my hardest um I've got
of weeks trying my hardest um I've got
one Crazy M that I'm working on that has
one Crazy M that I'm working on that has
to be done before then and then there's
to be done before then and then there's
just like a lot of Polish and cleanup so
just like a lot of Polish and cleanup so
yeah let me know how this goes but if
yeah let me know how this goes but if
you are able to get like a relatively
you are able to get like a relatively
clean code for this if it uh runs fast
clean code for this if it uh runs fast
it trains fast and we get like decent
it trains fast and we get like decent
looking policies
looking policies
then I will be more than happy to just
then I will be more than happy to just
add this to the website as part of the
add this to the website as part of the
release you go on the contributors list
release you go on the contributors list
right here and it goes into ocean right
right here and it goes into ocean right
next to rware like this and it'll look
next to rware like this and it'll look
pretty similar I imagine to
rware in fact I have um collaborator who
rware in fact I have um collaborator who
is working on like an arbitrary grid
is working on like an arbitrary grid
engine it was a little heavier I think
engine it was a little heavier I think
but at some point we're going to need to
but at some point we're going to need to
do some like grid based thing
do some like grid based thing
um to make it easier to make grid ends
um to make it easier to make grid ends
in general but I think for now it's good
in general but I think for now it's good
it's just perfectly fine to have them as
it's just perfectly fine to have them as
one-offs like they're not too much code
one-offs like they're not too much code
individually
so anything else Xander before I go or
so anything else Xander before I go or
we good for
we good for
now I see bet
now I see bet
is not free right now so I got nothing
is not free right now so I got nothing
to do with bet at the
to do with bet at the
moment or any questions from anyone else
moment or any questions from anyone else
watching because I am streaming this I
watching because I am streaming this I
see there are a couple people around
for anyone interested in uh contributing
for anyone interested in uh contributing
to puffer I do full code reviews for
to puffer I do full code reviews for
pretty much any and all contributions
pretty much any and all contributions
like this if you make a cool end um I
like this if you make a cool end um I
will go through it like this so really
will go through it like this so really
great great way to get into doing some
great great way to get into doing some
cool open source stuff and getting into
cool open source stuff and getting into
some cool
RL the Discord is discord. g/p puffer
RL the Discord is discord. g/p puffer
for other folks if you're interested in
for other folks if you're interested in
contributing and having code reviewed
contributing and having code reviewed
like this um other than that yeah thanks
like this um other than that yeah thanks
Xander and looking forward to seeing
Xander and looking forward to seeing
this
this
end I'm going head to dinner in a few
end I'm going head to dinner in a few
after I fix up a couple last things on
after I fix up a couple last things on
current experiments didn't really stream
current experiments didn't really stream
a bunch today working on this side
a bunch today working on this side
project that's taking a bunch of my time
project that's taking a bunch of my time
that is needed for 1.0 or not 1.0 for
that is needed for 1.0 or not 1.0 for
the next release of puffer so yeah I'll
the next release of puffer so yeah I'll
be back streaming more

Kind: captions
Language: en
okay we should be live
okay we should be live
here let me make
sure okay perfect
sure okay perfect
so what we're going to do right now um
so what we're going to do right now um
actually I'll tweet this as well we're
actually I'll tweet this as well we're
going to do a quick contributor code
going to do a quick contributor code
review
perfect oops
all right link me the uh I see isander
all right link me the uh I see isander
go ahead and just link me the current
go ahead and just link me the current
version also why does our Discord icon
version also why does our Discord icon
not
show okay that's just a glitch good
show okay that's just a glitch good
thought we'd lost our our URL or some
[ __ ] is this a
[ __ ] is this a
PR
PR
yes so
so is this the right
so is this the right
one to
review in Discord chat
gotcha
okay see read
me
perfect we'll just start a review on
this I'll do most of it just out loud
this I'll do most of it just out loud
but I'll give you should I give you
but I'll give you should I give you
actually I'll leave it up to you would
actually I'll leave it up to you would
you like me to do this formally with
you like me to do this formally with
like typed comments for you to review or
like typed comments for you to review or
do you want me to just do this live fix
do you want me to just do this live fix
it as is and go through the VOD
I can do either
I'll just start here
I'll just start here
so okay this is immediately this is a
so okay this is immediately this is a
lot of environments
um for more review okay so we'll do that
um for more review okay so we'll do that
then
so e
okay so args are probably
okay so args are probably
4096 and then two end copies like two
4096 and then two end copies like two
copies down here is what I would
copies down here is what I would
suggest as a starting point at the least
suggest as a starting point at the least
uh I see you're missing sweep config
uh I see you're missing sweep config
here here you're definitely going to
here here you're definitely going to
want to like
want to like
[Music]
add I want to add
that this is fine I actually I changed
that this is fine I actually I changed
uh stuff a little bit since I talked you
uh stuff a little bit since I talked you
about this but you'll see that when you
about this but you'll see that when you
go to
go to
integrate okay so let's take a look look
integrate okay so let's take a look look
at your neural net
um I
see I think you might have over
see I think you might have over
complicated
here so let's see you have this is a
here so let's see you have this is a
sequential which is l re
sequential which is l re
linear then you have this which is
linear then you have this which is
linear re
linear re
linear other agent
linear other agent
linear yeah so you've got all this stuff
linear yeah so you've got all this stuff
linear re linear
linear re linear
re then you have this combined one okay
re then you have this combined one okay
so yeah this network is what we would
so yeah this network is what we would
call
call
insane
insane
um yeah this net is
um yeah this net is
insane so
I'm going to have to leave a detailed
I'm going to have to leave a detailed
comment
comment
here this architecture is
here this architecture is
nuts one buying all these small linear
Nets uh so you
don't on of
don't on of
tiny kernels
just have
features and then we
features and then we
do
do
don't get in size
don't get in size
eight 16 is
eight 16 is
sketch 32 should be there well lose
sketch 32 should be there well lose
proper ke of high dimation
proper ke of high dimation
go this small and everything will just
go this small and everything will just
feel
CS net does not need to be this deep
CS net does not need to be this deep
either net does not
either net does not
need
de
de
comes the near TM
2D or
2D or
linear
near and starting point de
near and starting point de
Nets do not work
okay so yeah this whole network you're
okay so yeah this whole network you're
going to want to basically redo um just
going to want to basically redo um just
like keep it simple this is all just
like keep it simple this is all just
flat data from what I can see it's not
flat data from what I can see it's not
particularly big flat data just
particularly big flat data just
concatenate everything
concatenate everything
together oh yeah I'll just like leave
together oh yeah I'll just like leave
you what I would suggest as a comment
you what I would suggest as a comment
here um
to
to
suggest C
suggest C
everything and there's no point wise in
everything and there's no point wise in
here right I'm not being
here right I'm not being
stupid more you don't need to use you
stupid more you don't need to use you
won't need them for
won't need them for
this um hold
this um hold
on there's no cooling there's no like
on there's no cooling there's no like
pooling over agents here
right yeah what is this this
like at
everything linear from
everything linear from
that H
that H
reu
reu
lstm that's it
okay um so I don't know what you're
okay um so I don't know what you're
doing
here not sure what is going on
here every agent
here every agent
seeing most
seeing most
cases
cases
want f
see
see
okay some
docks did you write this or did GPT
docks did you write this or did GPT
write this let me read
this did you write this or did GPT write
this did you write this or did GPT write
this
G
G
GPT yeah so
GPT yeah so
that
case GPT bullets to
case GPT bullets to
expand into a page users will post into
expand into a page users will post into
GPT convert back to bullets just post
GPT convert back to bullets just post
the
bullets yeah so don't do that like you
bullets yeah so don't do that like you
had the format that you want is you just
had the format that you want is you just
want the outliner the bullet points like
want the outliner the bullet points like
there's no obligation to write a page of
there's no obligation to write a page of
docs for an M you can just write the
docs for an M you can just write the
bullet points and be
done there's no requirement like
done there's no requirement like
formality doesn't require that you write
formality doesn't require that you write
a
a
page we don't do that around here we
page we don't do that around here we
just you know simple code requires
just you know simple code requires
whatever docs is the minimum required to
whatever docs is the minimum required to
explain it and you're good
explain it and you're good
okay here's your track pick
okay here's your track pick
[Music]
Abend and client logs okay and then we
Abend and client logs okay and then we
have float
array okay actions in
yes this is correct
good okay your binding looks
good okay your binding looks
fine um these are really
fine um these are really
silly you know CU it's almost always the
silly you know CU it's almost always the
same code but we leave it there as a
same code but we leave it there as a
layer for now
ah there's no need to do this as a a
ah there's no need to do this as a a
macro like
macro like
this like what are you saving by doing
this like what are you saving by doing
this right
also it would be inside of trash pickup.
h.c okay
demo
good check other n demos for
good check other n demos for
nice Serv
nice Serv
syntax there's some better Syntax for
syntax there's some better Syntax for
initializing uh strs and C that you can
initializing uh strs and C that you can
look at that's in the other examples you
look at that's in the other examples you
get something that looks like you know a
get something that looks like you know a
Pam equals vow Pam equals vow in like
Pam equals vow Pam equals vow in like
one
one
take allocate make client reset
take allocate make client reset
good
good
um random actions
missing a human control
missing a human control
mode see other
mode see other
M's for how to do
M's for how to do
that want human to be able to hold
Shi perf
test long silly but
whatever okay
it for multi-agent Ms do your test
it for multi-agent Ms do your test
with
with
realistic
realistic
conditions
conditions
agents and
multiply agents because metric would
multiply agents because metric would
really be agent steps
second okay and then we'll do the main
second okay and then we'll do the main
code last only 600 lines is quite good
uh
uh
syon syon should do the type checks here
syon syon should do the type checks here
for
for
you time to
validate if you really want to but if
validate if you really want to but if
you pass negative number here you sort
you pass negative number here you sort
of deserve
of deserve
it I do type checks when I have like
it I do type checks when I have like
lists and things I usually will only do
lists and things I usually will only do
these types of guards when I have like
these types of guards when I have like
complicated stuff like the snake en it
complicated stuff like the snake en it
can take like a list of different values
can take like a list of different values
right and you want to make sure that
right and you want to make sure that
they're the same length and stuff like
they're the same length and stuff like
that CU that's legitimately easier to
that CU that's legitimately easier to
screw up
wait
what oh that's
funny
sure you have like a fair bit of stuff
sure you have like a fair bit of stuff
in here
in here
um stuff like this is
good
good
reset it's
good oh yeah I forgot about
good oh yeah I forgot about
this uh yeah you can do this this is
this uh yeah you can do this this is
fine
good this is fine this is a bit longer
good this is fine this is a bit longer
than it needs to be like you're being
than it needs to be like you're being
very cautious here about a lot of stuff
very cautious here about a lot of stuff
but
whatever and now
whatever and now
we we do this whole
we we do this whole
thing
so don't use macros
it's fine if you want to use them for
it's fine if you want to use them for
constant like this I don't know I go
constant like this I don't know I go
back and forth on just doing these as
back and forth on just doing these as
consts versus doing these as pound
consts versus doing these as pound
defines um there's really not any reason
defines um there's really not any reason
though to go to do anything like fancy
though to go to do anything like fancy
like
this you're still here right
Zander not seeing any questions or
Zander not seeing any questions or
anything in chat
so I'm hoping it's still
working let's just make sure trash
working let's just make sure trash
collected Yep this is fine I usually
collected Yep this is fine I usually
just call it score for consistency but
just call it score for consistency but
this is totally good it's more
this is totally good it's more
descriptive it's fine yep still here
descriptive it's fine yep still here
good
good
perfect um add
perfect um add
log yeah so this is just copied that's
log yeah so this is just copied that's
fine
fine
uh oh grid cell
um type index index
positions wait index
wait
what hold
on oh
jeez let me figure out what you're doing
jeez let me figure out what you're doing
before I comment here
actually let me just get a good outline
actually let me just get a good outline
of how you're structuring this you've
of how you're structuring this you've
got computer
Ops responding
R yeah that's bizarre though
R yeah that's bizarre though
um let me see
don't have to iterate
don't have to iterate
overall yeah I'm questioning whether you
overall yeah I'm questioning whether you
should have to do that anyways though
should have to do that anyways though
I'm not questioning the efficiency right
I'm not questioning the efficiency right
I'm questioning whether the design is
I'm questioning whether the design is
needed to get that
needed to get that
efficiency let me see how you what
efficiency let me see how you what
you're doing
first okay this is yeah there's going to
first okay this is yeah there's going to
be some edit there's going to be some
be some edit there's going to be some
stuff here some of this is code some of
stuff here some of this is code some of
this is like RL there's H there's a
this is like RL there's H there's a
bunch of stuff
bunch of stuff
here agent
allocate
step okay the code first of all the
step okay the code first of all the
codee's in a very weird order for having
codee's in a very weird order for having
these methods um but that's I'm not
these methods um but that's I'm not
going to that's
going to that's
whatever yeah and
whatever yeah and
then let me figure out what this grid
then let me figure out what this grid
cell thing
cell thing
is if this is silly or not
is if this is silly or not
sell type
index oh I see what you're doing yeah
index oh I see what you're doing yeah
that's
that's
fine
um yep that's fine your grid thing is
um yep that's fine your grid thing is
fine I see you can do this if you want
fine I see you can do this if you want
I'll do two different arrays
I'll do two different arrays
often um because when you do this you
often um because when you do this you
add the overhead of a struct but it
add the overhead of a struct but it
really doesn't matter yeah this is
really doesn't matter yeah this is
totally
totally
fine possibly even better for cache
fine possibly even better for cache
coherency
depending I think the thing is you just
depending I think the thing is you just
can't M set it to the same you can't
can't M set it to the same you can't
reset it easily like you can't just m
reset it easily like you can't just m
set to the the same value as easily as
set to the the same value as easily as
all that's
okay this structure is
okay this structure is
fine long as
fine long as
you need to
you need to
zero to uh
reset this
reset this
isn't start
okay so you
have yeah so the way that I would do
have yeah so the way that I would do
this
typically
instruct
instruct
type right trash
type right trash
agent
crash
position yeah cuz this is a bit much
position yeah cuz this is a bit much
right you have
this yeah this is a bit much the way
this yeah this is a bit much the way
this is
this is
here I think you could do this whole
here I think you could do this whole
thing just
thing just
as and then you also have to do this
as and then you also have to do this
presence thing yeah no it's going to be
presence thing yeah no it's going to be
way easier to just do entity struct cuz
way easier to just do entity struct cuz
this is a whole bunch of logic for just
this is a whole bunch of logic for just
essentially wanting to have an entity
struct wait what
this is okay I'm not a huge fan of this
this is okay I'm not a huge fan of this
style but people do this I
know agent
positions I went
positions I went
ahead uh if you're going to do it this
ahead uh if you're going to do it this
way this is a grid position then
way this is a grid position then
normalizing this way is fine the
normalizing this way is fine the
question is whether they need to have
question is whether they need to have
absolute coordinates in the first place
absolute coordinates in the first place
so yeah I'll leave you a comment here
positions of other
positions of other
agents let
see okay
I think it's Clemens
so what you've done here is you've given
so what you've done here is you've given
everything AB like Norm chords to
everything AB like Norm chords to
different things in the environment
different things in the environment
different like entities items and stuff
different like entities items and stuff
um if instead
um if instead
where's this trash pickup
end I guess I don't have it online yet
end I guess I don't have it online yet
but it looks something like this right
but it looks something like this right
it's just a
it's just a
grid um these guys see a crop of nearby
grid um these guys see a crop of nearby
tiles right so like you draw like a 5x5
tiles right so like you draw like a 5x5
crop or whatever and then that's what
crop or whatever and then that's what
they
they
see or like an end byend crop around
see or like an end byend crop around
them and then you just give them you
them and then you just give them you
know uh if it's going to be like one for
know uh if it's going to be like one for
agent two for bin three for item
agent two for bin three for item
something like that and then you can
something like that and then you can
just one hot that and that's a really
just one hot that and that's a really
really easy and efficient way to encode
really easy and efficient way to encode
observations and it's not dependent on
observations and it's not dependent on
the number of Agents or the number of
the number of Agents or the number of
trash in the environment so then I can
trash in the environment so then I can
take your environment I can load it up
take your environment I can load it up
with 4,000 agents if I want to in one
with 4,000 agents if I want to in one
environment and it'll be totally
fine speaking of which when I said four
fine speaking of which when I said four
000 before it's 4,000 agent
000 before it's 4,000 agent
OBS
actually okay
Place random
items I saw this while I was scrolling a
items I saw this while I was scrolling a
couple places so I don't know if you
couple places so I don't know if you
already know this or not but uh use
already know this or not but uh use
inverted
inverted
additional
additional
pattern there's
thing if not
condition if not condition
continue so this is how you avoid
continue so this is how you avoid
nesting super deep right when you just
nesting super deep right when you just
have something like this where it's just
have something like this where it's just
like all the code is under
like all the code is under
here
right this is
fine this F would be much
fine this F would be much
shorter if
shorter if
use the struct
data
storage just
being add re okay so this is
being add re okay so this is
insane um
just if you have three agents this might
just if you have three agents this might
be I sharing
be I sharing
scales
scales
absolutely
terribly more than you
agents at the very least you want to Lar
personal reward
personal reward
first
te okay so we have move
agent yeah so I would tell you here it
agent yeah so I would tell you here it
would be
agent
equals X
you see how simple it
is this is
is this is
[Music]
fine oh jeez yeah
okay this type of thing is
fine
fine
holy okay let's start from here
holy okay let's start from here
cell type cell State type
yeah cuz these are C silly
okay kind of repetitive but I don't mind
this additional
yeah you just need to look at this logic
yeah you just need to look at this logic
with uh just invert some conditionals
with uh just invert some conditionals
here B Tri pull bin
yeah so the main things that are making
yeah so the main things that are making
this hard to read are that you have not
this hard to read are that you have not
cached any position so you have this
cached any position so you have this
obnoxious macro everywhere and then this
obnoxious macro everywhere and then this
is just super deeply
is just super deeply
nested you've got like really long names
nested you've got like really long names
and then you've got like these functions
and then you've got like these functions
not caching variables and then you've
not caching variables and then you've
got everything nested super
got everything nested super
deep I just need to clean up the flow of
deep I just need to clean up the flow of
this a little bit
yeah so that's biggest pattern for you
yeah so that's biggest pattern for you
to use the only like big pattern for you
to use the only like big pattern for you
to use is um inverted conditional and
to use is um inverted conditional and
then like just cast them variables
right and then also like the other thing
right and then also like the other thing
is let me finish reading this function
this is a balance check which is
this is a balance check which is
repeated from above so it's weird that
repeated from above so it's weird that
you have to repeat
you have to repeat
it probably there's a way to simplify
it probably there's a way to simplify
this even more but I can't tell with the
this even more but I can't tell with the
way it is written
way it is written
currently like
look example of unreadable
because no variable
caching I mean you literally you have
caching I mean you literally you have
compute the same variable right
yeah so the rest of this is a little
yeah so the rest of this is a little
wordy but fine
so this episode
over it's kind of slow but whatever
wait I don't think you can do
this oh maybe you
can well I guess this does work
yeah I didn't realize because you have
yeah I didn't realize because you have
an array of grid cells instead of an
an array of grid cells instead of an
array of pointers to grid cells this is
array of pointers to grid cells this is
fine you actually don't have pointers to
fine you actually don't have pointers to
these so this is
these so this is
fine
fine
um actually I'll just like delete
um actually I'll just like delete
this and
this and
then my earlier comment up here is
then my earlier comment up here is
wrong where is
it this one
okay so
reset set
count
occurrences okay
it's
it's
[Music]
[Music]
fine
what calic already
zero set
pent this is
pent this is
[Music]
fine
set
set
fine uh I didn't see how you're doing
fine uh I didn't see how you're doing
logs but I think this is fine
here then confus so this good
here then confus so this good
good got your
client this will be very
client this will be very
unresponsive human play check how I
unresponsive human play check how I
handle
this it's fine and you got the puffers
this it's fine and you got the puffers
loaded
it's
fine I don't think you free the
fine I don't think you free the
client when you hold
Escape angles will just cause it to
Escape angles will just cause it to
freeze on
freeze on
Escape dra text text form
format draw the
grid it always amuses me when people do
grid it always amuses me when people do
this instead of just like drawing the
lines
um it probably doesn't matter to be fair
this is
okay wait
okay wait
what
display why is this Loop side of the
display why is this Loop side of the
agent
condition think it was
condition think it was
every agent
every agent
every
every
Loop this is the weird thing with this
Loop this is the weird thing with this
other than that
fine
fine
don't
this and then I guess I missed you must
this and then I guess I missed you must
have done this at the start you don't
have done this at the start you don't
need to do you don't need to pre-process
need to do you don't need to pre-process
macro stuff like that
yeah don't need to do
yeah don't need to do
this it's not a library like it's going
this it's not a library like it's going
to get included one time
to get included one time
anyways okay so that's a pretty thorough
anyways okay so that's a pretty thorough
review now I need to give
review now I need to give
you
comments finish
review main things
raising
raising
picture
picture
questions don't
share very
share very
hard side
much
much
cleaner
cleaner
andru First
Once
Once
[Music]
[Music]
comments learn early
variables
yeah I'll link it to
you did I say anything else
here
here
oh I'll just give you three points on
oh I'll just give you three points on
each
[Music]
is
is
nearby we do
nearby we do
in
where unless you are
where unless you are
specifically for pnn
there you
there you
go that is a
go that is a
fullon code
review 39
review 39
comments there you go so I gave you I
comments there you go so I gave you I
think three I gave you top three major
think three I gave you top three major
things on RL side and uh top three major
things on RL side and uh top three major
things on engineering side I think if
things on engineering side I think if
you look through those and uh make some
you look through those and uh make some
tweaks on that you'll have first of all
tweaks on that you'll have first of all
you'll learn a ton on both of those
you'll learn a ton on both of those
things uh and second of all like this
things uh and second of all like this
whole thing will get so much simpler for
whole thing will get so much simpler for
you to deal with because stuff will just
you to deal with because stuff will just
start working way more easily uh
start working way more easily uh
definitely thank you for the
definitely thank you for the
contribution this is great I really want
contribution this is great I really want
to integrate this n
uh this is this is pretty much what
uh this is this is pretty much what
happened by the way with like every new
happened by the way with like every new
contributor as well like Spencer I did
contributor as well like Spencer I did
this with Spencer I've done this with
this with Spencer I've done this with
like with bet and other people um so
like with bet and other people um so
like this is a normal amount of changes
like this is a normal amount of changes
for me to request on a first n PR so
for me to request on a first n PR so
especially if you're coming from more
especially if you're coming from more
like science side background and less
like science side background and less
like hard en background this is very
like hard en background this is very
very much normal and expected so good
very much normal and expected so good
job on the uh good job on the code here
job on the uh good job on the code here
uh and yeah let me know let me know how
uh and yeah let me know let me know how
much time you have for uh integrating
much time you have for uh integrating
stuff here and hopefully we can get the
stuff here and hopefully we can get the
trash pickup en into this update uh if
trash pickup en into this update uh if
you have time to clean stuff up and
you have time to clean stuff up and
train policies by then uh I think that
train policies by then uh I think that
you're going to be able to probably cut
you're going to be able to probably cut
out like a 100 lines of code just in the
out like a 100 lines of code just in the
process of cleaning stuff up as I
process of cleaning stuff up as I
recommended the Net's going to be easier
recommended the Net's going to be easier
stuff is going to train it a million
stuff is going to train it a million
steps per second and it should be pretty
steps per second and it should be pretty
pretty straight forward from there any
pretty straight forward from there any
extra questions for me right now
Xander I've got like uh 10 minutes
Xander I've got like uh 10 minutes
before I got to run to
dinner I should mention that Clemens
dinner I should mention that Clemens
blog is more like a cool out there thing
blog is more like a cool out there thing
not a standard like um entity stuff is
not a standard like um entity stuff is
something that we're going to look at
something that we're going to look at
like in maybe in the distant future very
like in maybe in the distant future very
helpful get started making changes
helpful get started making changes
wrapping up the semester so I should
wrapping up the semester so I should
have time should have more time for the
have time should have more time for the
next few weeks awesome great I'm trying
next few weeks awesome great I'm trying
to get this thing out like I'm trying to
to get this thing out like I'm trying to
get this release out in the next couple
get this release out in the next couple
of weeks trying my hardest um I've got
of weeks trying my hardest um I've got
one Crazy M that I'm working on that has
one Crazy M that I'm working on that has
to be done before then and then there's
to be done before then and then there's
just like a lot of Polish and cleanup so
just like a lot of Polish and cleanup so
yeah let me know how this goes but if
yeah let me know how this goes but if
you are able to get like a relatively
you are able to get like a relatively
clean code for this if it uh runs fast
clean code for this if it uh runs fast
it trains fast and we get like decent
it trains fast and we get like decent
looking policies
looking policies
then I will be more than happy to just
then I will be more than happy to just
add this to the website as part of the
add this to the website as part of the
release you go on the contributors list
release you go on the contributors list
right here and it goes into ocean right
right here and it goes into ocean right
next to rware like this and it'll look
next to rware like this and it'll look
pretty similar I imagine to
rware in fact I have um collaborator who
rware in fact I have um collaborator who
is working on like an arbitrary grid
is working on like an arbitrary grid
engine it was a little heavier I think
engine it was a little heavier I think
but at some point we're going to need to
but at some point we're going to need to
do some like grid based thing
do some like grid based thing
um to make it easier to make grid ends
um to make it easier to make grid ends
in general but I think for now it's good
in general but I think for now it's good
it's just perfectly fine to have them as
it's just perfectly fine to have them as
one-offs like they're not too much code
one-offs like they're not too much code
individually
so anything else Xander before I go or
so anything else Xander before I go or
we good for
we good for
now I see bet
now I see bet
is not free right now so I got nothing
is not free right now so I got nothing
to do with bet at the
to do with bet at the
moment or any questions from anyone else
moment or any questions from anyone else
watching because I am streaming this I
watching because I am streaming this I
see there are a couple people around
for anyone interested in uh contributing
for anyone interested in uh contributing
to puffer I do full code reviews for
to puffer I do full code reviews for
pretty much any and all contributions
pretty much any and all contributions
like this if you make a cool end um I
like this if you make a cool end um I
will go through it like this so really
will go through it like this so really
great great way to get into doing some
great great way to get into doing some
cool open source stuff and getting into
cool open source stuff and getting into
some cool
RL the Discord is discord. g/p puffer
RL the Discord is discord. g/p puffer
for other folks if you're interested in
for other folks if you're interested in
contributing and having code reviewed
contributing and having code reviewed
like this um other than that yeah thanks
like this um other than that yeah thanks
Xander and looking forward to seeing
Xander and looking forward to seeing
this
this
end I'm going head to dinner in a few
end I'm going head to dinner in a few
after I fix up a couple last things on
after I fix up a couple last things on
current experiments didn't really stream
current experiments didn't really stream
a bunch today working on this side
a bunch today working on this side
project that's taking a bunch of my time
project that's taking a bunch of my time
that is needed for 1.0 or not 1.0 for
that is needed for 1.0 or not 1.0 for
the next release of puffer so yeah I'll
the next release of puffer so yeah I'll
be back streaming more
