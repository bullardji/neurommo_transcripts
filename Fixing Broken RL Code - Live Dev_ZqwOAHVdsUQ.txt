Kind: captions
Language: en
okay we're
live it's been a few
days time to get back to
days time to get back to
work
work
so there's been a lot of cool stuff
so there's been a lot of cool stuff
happening with puffer over the
happening with puffer over the
weekend I actually had to take a weekend
weekend I actually had to take a weekend
off for once re charge a bit but there's
off for once re charge a bit but there's
been some cool Dev going
on lots of stuff
oh
oh
we let's
see let me see if there are any oh wow
see let me see if there are any oh wow
let's
see one to five just select this card
connect One V one card
connect One V one card
game triple okay
that's really nice two new environments
that's really nice two new environments
over the
over the
weekend from this guy here this is
awesome
awesome
and I miss anything else
nope I think we're
nope I think we're
good okay let's fix you know there's
good okay let's fix you know there's
something that's been bothering me for a
something that's been bothering me for a
while now and I'm still not entirely
while now and I'm still not entirely
sure how to fix it but I think we're
sure how to fix it but I think we're
going to do like just some incrementals
going to do like just some incrementals
on stuff until
on stuff until
um until it gets a little better there's
um until it gets a little better there's
just there's too much binding
just there's too much binding
Shenanigans happening right now there's
Shenanigans happening right now there's
like too much boiler plate that's
like too much boiler plate that's
required for these environments um it
required for these environments um it
technically it works but it's really not
technically it works but it's really not
great great so I think we're going to
great great so I think we're going to
spend a little bit of time thinking
spend a little bit of time thinking
about that today we're also going to fix
about that today we're also going to fix
the uh the RB setup for
the uh the RB setup for
stuff
well I just realized uh I don't have the
well I just realized uh I don't have the
stream overlay that's my bad there we go
stream overlay that's my bad there we go
code
I should show the card game that I was
I should show the card game that I was
looking at um because I didn't realize I
looking at um because I didn't realize I
didn't have stream on so we have this
didn't have stream on so we have this
card game here somebody has
made this is cool
made this is cool
and then I don't know where the connect
and then I don't know where the connect
4M
4M
went oh yeah here it
is couple environments and then B also
is couple environments and then B also
did the uh the ocean environments which
did the uh the ocean environments which
is pretty
is pretty
nice Definitely some
nice Definitely some
progress so the main thing I want to
progress so the main thing I want to
figure out today because I've been told
figure out today because I've been told
that the dev branch is not quite working
that the dev branch is not quite working
out of the box at the moment um
yeah so these extension modules
here I think we can
here I think we can
do to start with right
where's the
extensions
extensions
yeah right here
so if we add right
so if we add right
here like this
here like this
maybe I think we can automate this to
maybe I think we can automate this to
some extent
yeah snake pong grid like this right and
yeah snake pong grid like this right and
then we'll just do
then we'll just do
extensions
equals enion
half
dot
replace with dots like
replace with dots like
this and
then half plus pix yeah and then
then half plus pix yeah and then
includers is going to be all
includers is going to be all
this or path and extension paths like
this or path and extension paths like
so right cuz they're all going to have
so right cuz they're all going to have
the same
thing at least I think they
should so we go to extensions here why
should so we go to extensions here why
wait why did this go back to camera I
wait why did this go back to camera I
clicked
stream my
bad that was weird
all right whatever scuff stream
start okay this is kind of cool
though cuz we can
do we can remove
do we can remove
this all this stuff
this all this stuff
right then we can just do star
right then we can just do star
extensions let's see if this
works well we didn't change anything so
works well we didn't change anything so
it's not going to
it's not going to
recompile um let's just change something
uh literally just have to put a space or
uh literally just have to put a space or
something what happens if I do
this triggers
recompile it looks like it
works this
here mod
does this
does this
run does
run great stuff not entirely sure what
run great stuff not entirely sure what
you're doing but big fan well I mean to
you're doing but big fan well I mean to
be honest I'm not entirely sure what I'm
be honest I'm not entirely sure what I'm
doing at the moment either um I mean the
doing at the moment either um I mean the
key of what I'm doing at the moment is
key of what I'm doing at the moment is
I'm trying to get nice ultra high
I'm trying to get nice ultra high
performance environments for
performance environments for
training um
training um
however what's happening at the moment
however what's happening at the moment
is a bit more obnoxious and Technical
is a bit more obnoxious and Technical
essentially it just it takes too much
essentially it just it takes too much
code
code
to add new environments uh not to puffer
to add new environments uh not to puffer
Li that's easy but it takes too much
Li that's easy but it takes too much
code to like get the C environments to
code to like get the C environments to
work in
work in
Python and I'm trying to fix that I'm
Python and I'm trying to fix that I'm
trying to like cut down on boiler plate
trying to like cut down on boiler plate
so right now I just fix
so right now I just fix
this yeah so I just this extension stuff
this yeah so I just this extension stuff
you literally just have to add one line
you literally just have to add one line
here instead of having to add this
here instead of having to add this
entire block for everything so that's
entire block for everything so that's
easier for the setup uh but now the next
easier for the setup uh but now the next
thing that I actually I don't know how
thing that I actually I don't know how
I'm going to do yet but I think this is
I'm going to do yet but I think this is
a good day to figure it
out so if I go into here right actually
out so if I go into here right actually
good thing you stop by maybe this will
good thing you stop by maybe this will
jog my my thinking so like this is the
jog my my thinking so like this is the
python file it's not that much code we
python file it's not that much code we
could cut out a little bit of it
could cut out a little bit of it
maybe and then if I do
maybe and then if I do
pong. this is also very clean
pong. this is also very clean
code well it could be cleaner but for
code well it could be cleaner but for
the for the most part like the only
the for the most part like the only
stuff that's there is stuff that should
stuff that's there is stuff that should
be there right there's not really much
be there right there's not really much
boiler
boiler
plate but then the thing that bothers
plate but then the thing that bothers
me like there's this extra scyon
file and that's really
obnoxious and I really want to cut down
obnoxious and I really want to cut down
on it somehow
I mean to be fair
I mean to be fair
like most of the Jank that is in
here really most of the Jank that's in
here really most of the Jank that's in
here it's just because I have too much
here it's just because I have too much
customizability isn't it
I mean scon does take
I mean scon does take
defaults so I could technically replace
defaults so I could technically replace
some of these with defaults and
syon I'm not
syon I'm not
sure
sure
H I guess here's the thing that bothers
H I guess here's the thing that bothers
to me at the moment right
to me at the moment right
um well let let me see first if I can
um well let let me see first if I can
get rid of this type def
get rid of this type def
here let me see if I can get rid of this
here let me see if I can get rid of this
type
type
def I'm not happy with this type
def I'm not happy with this type
death what happens if I just do
this does it still
work what happened if I do
this no
this no
config what did I name
it
it
uh we have to also standardize names but
uh we have to also standardize names but
that's like that's no big deal whoops
render
mode okay I guess this thing didn't get
mode okay I guess this thing didn't get
a assigned render
a assigned render
mode what we just do
mode what we just do
this
this
ah here we
go plays the game this is an untrained
go plays the game this is an untrained
policy
policy
obviously so if we don't actually use
obviously so if we don't actually use
any of the information from this
any of the information from this
struct then we only need the type def so
struct then we only need the type def so
that cuts down on a
that cuts down on a
lot and we only need the
lot and we only need the
signatures for this
signatures for this
stuff basically it looks like anything
stuff basically it looks like anything
that you're going to use any function
that you're going to use any function
you're going to use including the struct
you're going to use including the struct
initializer you need a full
definition things that bother me at the
moment I don't mind having to have a
moment I don't mind having to have a
scyon
scyon
wrapper on its own necessarily
wrapper on its own necessarily
right with
height make client
you have to save these variables in
you have to save these variables in
because of the way that we're doing make
because of the way that we're doing make
client here don't
you I kind of want to like diagram this
you I kind of want to like diagram this
or something I'm trying to think how I
or something I'm trying to think how I
want to think about
this in some ways some of the work I'm
this in some ways some of the work I'm
going to be doing right now is going to
going to be doing right now is going to
be a little bit boring but in some ways
be a little bit boring but in some ways
it's very
important like this is a good thing to
important like this is a good thing to
watch cuz like what I'm doing right here
watch cuz like what I'm doing right here
this is what happens when I get really
this is what happens when I get really
stuck on something for a while on how to
stuck on something for a while on how to
like make something
like make something
simpler and it kind of just like when I
simpler and it kind of just like when I
hit something like this it kind of just
hit something like this it kind of just
keeps nagging at me and nagging at me
keeps nagging at me and nagging at me
until I figure out a way to simplify
until I figure out a way to simplify
it you
know
so maybe I'll just like make
so maybe I'll just like make
some
some
text
like
like
problem have to
problem have to
cash extra
properties in Python in it
properties in Python in it
solution would be like somehow
solution would be like somehow
restructure renderer to not in it RB
restructure renderer to not in it RB
until first
call then
call then
we
we
uh and init it in
uh and init it in
the
the
salt setup
that means that you're going to have to
that means that you're going to have to
make a render
make a render
instance in every
environment but that's kind of fine
environment but that's kind of fine
because this is only for the python
because this is only for the python
binding version of
it
right it's probably fine
right it's probably fine
that should never really require a bunch
that should never really require a bunch
of data
right well yeah because it can load
right well yeah because it can load
textures
right it can load
textures okay that's tricky um
huh so I'm trying to think with this
huh so I'm trying to think with this
client here like the
client here like the
issue with this make
issue with this make
function I kind of designed this the way
function I kind of designed this the way
that I would want it to be in C where
that I would want it to be in C where
you just have one
you just have one
function that creates the uh the
client but now that I'm thinking about
client but now that I'm thinking about
it right
like why have a function here at
like why have a function here at
all what's the overall aim I just see
all what's the overall aim I just see
that the overall aim here well it
that the overall aim here well it
depends what you mean the overall aim of
depends what you mean the overall aim of
puffer lib and of my work is to make
puffer lib and of my work is to make
reinforcement learning fast and simple
reinforcement learning fast and simple
and have it on a lot of different
and have it on a lot of different
environments if you want a fun playable
environments if you want a fun playable
demo we have these guys uh these ones
demo we have these guys uh these ones
online right this is like a fancier
online right this is like a fancier
environment this is like a miniature
environment this is like a miniature
version of Dota or League of
version of Dota or League of
Legends right we've also got simpler
Legends right we've also got simpler
stuff we've got snake you can play
stuff we've got snake you can play
against the AIS these AIS are kind of
against the AIS these AIS are kind of
half
half
decent and then we've got you know these
decent and then we've got you know these
ones where we don't have AIS uploaded
ones where we don't have AIS uploaded
yet but soon we will upload uh you know
yet but soon we will upload uh you know
some trained AIS for these
some trained AIS for these
but for now you just play them
but for now you just play them
yourself but yeah all these are very
yourself but yeah all these are very
very high performance games we're not
very high performance games we're not
just going to do games either we're
just going to do games either we're
branching out into other spaces games
branching out into other spaces games
are just a really nice easy initial test
are just a really nice easy initial test
set but um I mean the two tenants like
set but um I mean the two tenants like
the two things I focus on a lot with
the two things I focus on a lot with
puffer I focus on speed and I focus on
puffer I focus on speed and I focus on
Simplicity and we're crushing it on
Simplicity and we're crushing it on
speed but uh Simplicity needs to be
speed but uh Simplicity needs to be
there and it's like it's simpler than
there and it's like it's simpler than
everything else out there by a mile at
everything else out there by a mile at
the moment but it's not it's not there
the moment but it's not it's not there
yet you know like there's still a few
yet you know like there's still a few
places that have a little bit too much
places that have a little bit too much
bloat for my
liking you know I'm really starting to
liking you know I'm really starting to
wonder
wonder
why I have this make function in the
why I have this make function in the
first place you
know so what happen happens if
um what happens if I just don't make
um what happens if I just don't make
these
functions
right cuz you can just just initialize
right cuz you can just just initialize
the struct on its
own hold on is this
own hold on is this
crazy or can I just like be even
crazy or can I just like be even
simpler because like this a nit function
simpler because like this a nit function
here
right well wait you do have to allocate
right well wait you do have to allocate
an assign
right you have to allocate and assign
okay so the struct syntax this is why I
okay so the struct syntax this is why I
did this
um the struct syntax only works if this
um the struct syntax only works if this
is variable is going to be on the stack
is variable is going to be on the stack
right there's no way to do uh like
right there's no way to do uh like
allocate and assign in one step
but this is such a gross function if you
but this is such a gross function if you
think about it
think about it
right like look how terrible this is
right like look how terrible this is
it's like you put a whole bunch of
it's like you put a whole bunch of
variables into a function just to
variables into a function just to
allocate this thing and then assign
allocate this thing and then assign
them and yeah there's like a little bit
them and yeah there's like a little bit
of extra stuff but
what is good about this
like isn't this just always dumb
hang on
this is disgusting we don't want this
this is zigg
I'm pretty sure this just doesn't
exist I'm pretty sure I checked this
exist I'm pretty sure I checked this
before and it doesn't
exist for
um is this reasonable or is this
stupid for
I'm trying to think if this is a
I'm trying to think if this is a
reasonable or
not this is ultimately like an aesthetic
not this is ultimately like an aesthetic
choice but I think it's
important well welcome YouTube
important well welcome YouTube
folks any low-l devs are welcome to
folks any low-l devs are welcome to
weigh in this portion is straight
weigh in this portion is straight
engineering there's very little RL
engineering there's very little RL
involved in uh in a couple of these
involved in uh in a couple of these
decisions I'm essentially I'm just
decisions I'm essentially I'm just
trying to figure
trying to figure
out we have like an initialization
out we have like an initialization
function that's just called a billion
function that's just called a billion
times and it's God
times and it's God
awful um what's happening at the moment
awful um what's happening at the moment
let me sort of outline this problem for
let me sort of outline this problem for
you so we have this initializer function
you so we have this initializer function
right CU you can see the the struct has
right CU you can see the the struct has
to go on the
to go on the
Heap so we initialize here and then we
Heap so we initialize here and then we
set all these variables but you end up
set all these variables but you end up
with this god- awful function
with this god- awful function
signature that's essentially just like
signature that's essentially just like
this initializer and it's made really
this initializer and it's made really
really bad because there are no default
really bad because there are no default
values in C so all the constants can't
values in C so all the constants can't
even be set to reasonable defaults or
even be set to reasonable defaults or
anything okay and then it gets worse
anything okay and then it gets worse
because there has to be a version that
because there has to be a version that
allocates all the memory for these and
allocates all the memory for these and
then calls the function because there's
then calls the function because there's
a version of it where you pass memory
a version of it where you pass memory
buffers from Python and there's a
buffers from Python and there's a
version where you have to allocate the
version where you have to allocate the
buffers yourself in C and then this
buffers yourself in C and then this
duplicates the signature but then it
duplicates the signature but then it
gets even
gets even
worse because you have the exact same
worse because you have the exact same
thing in cython right and you have to
thing in cython right and you have to
copy the header and then you have to
copy the header and then you have to
copy it again here and then you have to
copy it again here and then you have to
copy it again here and then once you're
copy it again here and then once you're
done with all this even you haven't felt
done with all this even you haven't felt
stupid enough by now for having written
stupid enough by now for having written
this God awful
this God awful
code you have to do it again in Python
code you have to do it again in Python
with the initializer here and then you
with the initializer here and then you
have to do it again with the
have to do it again with the
initialization
initialization
here so I want to undb this thing as
here so I want to undb this thing as
much as
possible and it's kind of
possible and it's kind of
tricky because this thing has to be able
tricky because this thing has to be able
to be initialized in two different ways
to be initialized in two different ways
right you have to be able to uh
right you have to be able to uh
initialize this thing in C where the C
initialize this thing in C where the C
does the memory allocation for you or
does the memory allocation for you or
python where python does the memory
python where python does the memory
allocation for certain variables for you
allocation for certain variables for you
and then all these things have to be
and then all these things have to be
accessible from both C and Python
accessible from both C and Python
Meaning that you have to expose all
Meaning that you have to expose all
these things somehow to the functions
but maybe this initializer here could be
but maybe this initializer here could be
saved a little bit right maybe we could
saved a little bit right maybe we could
save a little bit of this
I don't think we can expose the struct
I don't think we can expose the struct
directly to python right yeah we can't
directly to python right yeah we can't
expose or is this a
thing hold on can scyon directly here
thing hold on can scyon directly here
let me just start a
let me just start a
new oops
and scon directly expose a c struck
and scon directly expose a c struck
without going through an
without going through an
intermediate uh scyon
intermediate uh scyon
class don't need to be able to do
class don't need to be able to do
anything other than all scyon w c
anything other than all scyon w c
functions
struct
Okay C
def but can we make
def but can we make
your
Struck from
python I think this is no yeah you
can't turns a pointer to a struct
this is not
this is not
bad okay this is not bad so instead of
bad okay this is not bad so instead of
having to wrap this in a scyon
class like we don't have to wrap the
class like we don't have to wrap the
whole thing in a class right we just
whole thing in a class right we just
need a
pointer we just need a pointer
picky
tricky that doesn't help us though does
tricky that doesn't help us though does
it we need to be able to directly call
it we need to be able to directly call
The Constructor
The Constructor
see what I'm trying to figure out is if
see what I'm trying to figure out is if
there's a way that we can
there's a way that we can
um like if in scon if there were a way
um like if in scon if there were a way
to directly make the
to directly make the
struct then we wouldn't need to have
struct then we wouldn't need to have
this extra
this extra
wrapper I mean I can technically do it
wrapper I mean I can technically do it
with CFI but that's really gross
right let's
right let's
think put this another way way is there
think put this another way way is there
a method scyon or otherwise to
a method scyon or otherwise to
cleanly
cleanly
um initialize
um initialize
structs C strs in Python
yeah this is not
it yeah this is you see the problem with
it yeah this is you see the problem with
this
this
right like you declare the struct and
right like you declare the struct and
then in scyon you have to redeclare the
struct and then here there's like
struct and then here there's like
another declaration
yeah this is
garbage C
types okay hold on what's
this worst case one could write a code
this worst case one could write a code
genescript
genescript
and just this just Embraces the yeah I
and just this just Embraces the yeah I
don't like that I think that's more
don't like that I think that's more
obscurity that's like I'd rather have it
obscurity that's like I'd rather have it
be explicit and like spoiler plate then
be explicit and like spoiler plate then
have to have
have to have
that I'm looking at C types here doesn't
that I'm looking at C types here doesn't
tiny grad do
tiny grad do
this or not tiny grad well yeah t
this or not tiny grad well yeah t
whatever the
whatever the
company this is reasonable
here sacrifices
performance C types is less than less
performance C types is less than less
efficient why is it less efficient is
efficient why is it less efficient is
the underlying struct not in C and I not
the underlying struct not in C and I not
call C methods on this
struck manages
data C
data C
provides pure python that provides
provides pure python that provides
Dynamic
bindings
bindings
okay each time you call a c function
okay each time you call a c function
checks
checks
types syon compiles directly to
types syon compiles directly to
C runtime type
C runtime type
checks syon compiles everything down to
checks syon compiles everything down to
C code with static type
checks how you can do
that I don't like this either as the
that I don't like this either as the
thing
like man the bindings thing is so
like man the bindings thing is so
obnoxious because like
I def okay so the issue with like if you
I def okay so the issue with like if you
do like pbind or the C python API right
do like pbind or the C python API right
then you clutter your nice C code with
then you clutter your nice C code with
garbage python API stuff and if you put
garbage python API stuff and if you put
this stuff in Python then you clutter
this stuff in Python then you clutter
your nice python with like garbage API
your nice python with like garbage API
stuff it really seems like the only
stuff it really seems like the only
thing that is reasonable is to have the
thing that is reasonable is to have the
intermediate layer explicitly be an
intermediate layer explicitly be an
intermediate layer which is what scon
intermediate layer which is what scon
gives
gives
you it's just that it has a little bit
you it's just that it has a little bit
more boiler PL than I would
more boiler PL than I would
like because it's not able to read stuff
like because it's not able to read stuff
directly from header files
right like there's no reason that scon
right like there's no reason that scon
shouldn't be able to read types from
shouldn't be able to read types from
like directly from the source code right
Pon
Pon
requires you
requires you
to
redeclare
redeclare
existing H files it seems like
existing H files it seems like
it oh did this get stuck look it's
it oh did this get stuck look it's
literally stuck that's
funny uh but it's not going to have the
funny uh but it's not going to have the
context hold
on able
on able
to get these from let see there are no
to get these from let see there are no
way to
way to
Auto declare
chat tripity is
chat tripity is
broke CH jity is broke
cdef exter from
Star doesn't automatically parse header
Star doesn't automatically parse header
cffi automatic bindings for C
cffi automatic bindings for C
functions cffi can directly parse C
functions cffi can directly parse C
header files to generate python
header files to generate python
accessible
bindings I
bindings I
welcome we're currently trying to make
welcome we're currently trying to make
puffer lib
puffer lib
simpler at least the uh the bindings
simpler at least the uh the bindings
layer
what on Earth is
this this is
terrible and it drops performance
literally writing code in string this is
awful this it's like whoever this should
awful this it's like whoever this should
did this should feel bad about
did this should feel bad about
themselves for
this C
parser generate the scon compatible pxd
files well that's interesting
so actually this that answer from before
so actually this that answer from before
might be reasonable if there's if there
might be reasonable if there's if there
are existing
are existing
tools let's look at these two first real
tools let's look at these two first real
quick I'm not I don't know if these are
quick I'm not I don't know if these are
going to be a good
idea for
what does this
do the other one is
this see types
this see types
gen this is a way smaller project
okay this is kind of
interesting I still don't know if this
interesting I still don't know if this
is a good idea though because like
the types
h
I mean just I me really just using it as
I mean just I me really just using it as
bindings but the okay there's an alter
bindings but the okay there's an alter
there's another thing I have to think
there's another thing I have to think
about here which is really nice right so
about here which is really nice right so
the other big benefit of scyon is
the other big benefit of scyon is
incremental
porting yeah this is garbage
advice
um I think scyon is the right
um I think scyon is the right
solution and it's mainly because it lets
solution and it's mainly because it lets
you incrementally port stuff which is
you incrementally port stuff which is
really really
really really
valuable makes puffer Li so much easier
valuable makes puffer Li so much easier
for people so let's say that we're going
for people so let's say that we're going
to get guaranteed we're doing we're
to get guaranteed we're doing we're
keeping scon right guaranteed we're
keeping scon right guaranteed we're
keeping
keeping
scon
um can we autogenerate the pxd somehow
okay this is what we're
looking for
didn't handle
anything looks like there isn't anything
anything looks like there isn't anything
for this it really looks like there
for this it really looks like there
isn't
anything all the information that is
anything all the information that is
needed
yeah this is okay so this is directly
yeah this is okay so this is directly
scon
here
here
oh well this is what we want right so it
oh well this is what we want right so it
seems like there are actually scyon
users and this is a
well this is a small Fork of
well this is a small Fork of
something a friendly
Fork what's this
Fork what's this
so created
so created
scripts auto
wrap py pars or to parse definitions for
this is
updated
so let's say that we got this to work
so let's say that we got this to work
right
then this would what would this
then this would what would this
remove this would remove all of uh where
remove this would remove all of uh where
is
is
it no this would remove like this boiler
it no this would remove like this boiler
plate at the
top and also wait there's
top and also wait there's
more it would give you the full header
more it would give you the full header
of
of
structs so instead of having this right
structs so instead of having this right
this could just be a struct
this could just be a struct
initialization and then I would be able
initialization and then I would be able
to remove this
method the only thing I'm not sure about
method the only thing I'm not sure about
is if um
if I initialize a struct from scon like
if I initialize a struct from scon like
this
right does it stay on the Heap what
right does it stay on the Heap what
happens let me let's figure that out
happens let me let's figure that out
real
quick for
oh I think this is nice
right this is
allocated if you declare the struct as a
allocated if you declare the struct as a
local
variable okay so this then this maps to
variable okay so this then this maps to
a
a
heap this is on the Heap as a class
heap this is on the Heap as a class
variable
interesting
um does this have to be a pointer for
um does this have to be a pointer for
any
reason there's no reason this has to be
reason there's no reason this has to be
a pointer right
okay this is amazing this is exactly
okay this is amazing this is exactly
what we want but
thenu is
thenu is
SC from
I don't know if this is true we need to
I don't know if this is true we need to
test
test
this yeah we need to test this to see
this yeah we need to test this to see
for
for
sure this is very important because if I
sure this is very important because if I
can get this syntax to work then I have
can get this syntax to work then I have
a way of doing this that's very very
a way of doing this that's very very
clean but this is the type of stuff we
clean but this is the type of stuff we
have to play around with it's kind of
have to play around with it's kind of
funny you know cuz puffer Li it ends up
funny you know cuz puffer Li it ends up
being very very simple but like this is
being very very simple but like this is
the type of stuff that I fight with like
the type of stuff that I fight with like
I you have to fight to maintain the
I you have to fight to maintain the
simplicity I'm going to go use the
simplicity I'm going to go use the
restro from real quick I'll be back in a
restro from real quick I'll be back in a
minute and then uh we'll keep going on
minute and then uh we'll keep going on
this I think I'll make like a little
this I think I'll make like a little
test and I'll see if I can figure some
test and I'll see if I can figure some
stuff
out
e
e e
all right
I think what we're going to do for
I think what we're going to do for
this going make the little scyon
test there side test
wa we just need
this
Bar
Bar
B
B
okay and then we can just
okay and then we can just
do do we need anything for
do do we need anything for
this we'll see in a second
test.
pyx see Stern from test.
pyx see Stern from test.
H test.
H test.
H type def
H type def
struct
struct
Bo like
this class
there we
go
t.p from
t.p from
DOT
DOT
test uh this needs to be side test I
forgot test
the heck what happened oh
text
text
hi from. site test
hi from. site test
import s
baral 1 F
baral 1 F
two
two
PR
okay basically what I want to figure out
okay basically what I want to figure out
is uh if I want to figure out how the
is uh if I want to figure out how the
scon binding works because it's going to
scon binding works because it's going to
affect how I do
affect how I do
this so and I want to be absolutely sure
this so and I want to be absolutely sure
that this works before I I commit to
that this works before I I commit to
like this is a pretty substantial
like this is a pretty substantial
refactor I mean I'll do it on one
refactor I mean I'll do it on one
environment for first just to be sure
environment for first just to be sure
but like um if this works it will save
but like um if this works it will save
us a lot and then if the auto bindings
us a lot and then if the auto bindings
gen works on top of that then this
gen works on top of that then this
basically becomes trivial to do the
basically becomes trivial to do the
intermediate layer for uh scyon python
intermediate layer for uh scyon python
which would make it really nice for
puffer make stuff easy for people very
puffer make stuff easy for people very
very easy for people
test
test
Flash
test
oops test slash test up high
let's sign
test and test.
test and test.
IX
okay test
okay test
cool and let's figure out what's going
cool and let's figure out what's going
wrong here
can not select attribute of incomplete
can not select attribute of incomplete
type
bo uh this is fine we'll just do
bo uh this is fine we'll just do
death where is
it BL
bar now convert Fu to python object
uh no wait that should work because it's
uh no wait that should work because it's
syon cannot convert
Fu to python object
interesting maybe this should just be
interesting maybe this should just be
like this
far
as okay that's something right
cannot
import
uninspected
okay Bar B
Bar
Bar
B
Bar damn
it okay no I attribute
it okay no I attribute
bar let's figure
out uh right so we just have to do we
out uh right so we just have to do we
have to just make properties
here
bar why is it making Setters that's
bar why is it making Setters that's
disgusting
there we go so let's see what this has
there we go so let's see what this has
done
um the main thing is we got this
um the main thing is we got this
initializer syntax
initializer syntax
here so this is an external struct
right it had to be redeclared like this
but then we were able to use this
but then we were able to use this
initializer
syntax what about
syntax what about
quars can we just do
quars yeah I just do like star args star
quars compile time keyword arguments
quars compile time keyword arguments
must be explicit
it uh
okay I mean that makes
okay I mean that makes
sense anything I can do to get around
sense anything I can do to get around
this
compile time keyword arguments must be
compile time keyword arguments must be
hold
hold
on what if we just don't do keyword ARS
on what if we just don't do keyword ARS
how's
this
keywords huh
let me see if there's a work around for
let me see if there's a work around for
this I understand what it's
saying
nope so you still have to do um
you still have this
Constructor
right well hold
on let me
can I just import the
can I just import the
struct no you can't directly import the
struct no you can't directly import the
struct you can only import like a class
can only import the
class let me go get this autogen tool
class let me go get this autogen tool
just to make sure I'm not
just to make sure I'm not
completely uh on the
wrong train
wrong train
here there pit package for this
thing yeah there is okay so
Auto pxd infile out
file all
file all
right scon pxd from a
header Auto PX
d test. h test. i
d all
d all
right
pxd look at that
let's add something to this like um here
let's add something to this like um here
we'll make
we'll make
this in quux of
this in quux of
five or
five or
two void test and we'll do what was it
two void test and we'll do what was it
int
test
turn
turn
bar this will be what it
bar this will be what it
bass
bass
floats
floats
float
float
times there there a decent little test
right and
right and
test okay so this generates your headers
test okay so this generates your headers
right
my
my
X how do we use
X how do we use
pxd XD
class declaration.
class declaration.
pxd not the pyx
how do we include
this using
cimport
cimport
from I
test I assume these are not supposed to
test I assume these are not supposed to
have the
same the same name right
my file. PX my file. pxd
well what the hell is all
this H files are
okay see import
uh okay so this is including
let's see if we figure this
let's see if we figure this
out okay this is better
let's let's see what happens I think
let's let's see what happens I think
that this is going to be weird but we'll
see
[Music]
[Music]
bar just finished watching your thesis
bar just finished watching your thesis
defense wanted to say thank you for POS
defense wanted to say thank you for POS
posting your thesis was very accessible
posting your thesis was very accessible
for me being a lay person give me a lot
for me being a lay person give me a lot
to think about when I present my
to think about when I present my
eventual defense still in undergrad
eventual defense still in undergrad
thank you if you want to get like a good
thank you if you want to get like a good
overview of RL in general I posted um it
overview of RL in general I posted um it
didn't get as much attention but I think
didn't get as much attention but I think
I did at least as well as my thesis with
I did at least as well as my thesis with
the delivery of it uh there's this like
the delivery of it uh there's this like
RL Iceberg video just on the main
RL Iceberg video just on the main
Channel there and uh it has my thoughts
Channel there and uh it has my thoughts
on like the whole field and where
on like the whole field and where
everything is going and such
I'm really trying to make this field you
I'm really trying to make this field you
know way easier to do work
in it's a mess at the
moment B
yeah I don't know for whatever
yeah I don't know for whatever
reason I mean you can let me know I I
reason I mean you can let me know I I
put a heck of a lot of effort into the
put a heck of a lot of effort into the
new video and it just didn't catch on at
new video and it just didn't catch on at
all so I'm probably not going to be
all so I'm probably not going to be
doing a bunch more videos cuz you know
doing a bunch more videos cuz you know
it takes time away from
it takes time away from
coding but uh that one has a lot of good
coding but uh that one has a lot of good
thoughts in
it and then uh I mean I've been
it and then uh I mean I've been
streaming all of my Dev as well you know
streaming all of my Dev as well you know
half the time it's stuff like this where
half the time it's stuff like this where
this is me fighting with random
this is me fighting with random
low-level
low-level
stuff
stuff
uhoh are we back the internet just cut
uhoh are we back the internet just cut
out for a second
second we'll see about that hopefully it
second we'll see about that hopefully it
stays uh it stays good we'll
see Zero dropped
frames hopefully
good freaking xinity
bar right I have to rerun the auto
gen and this should
be side
be side
test the
X this this is side test yeah there we
go all right uh this did something
cannot import name test from s
cannot import name test from s
test
really we've got this right
really we've got this right
here defining test
right well I guess I don't expose the
uh cannot import name test from s
test really wait this should work
okay so it does have it has like the
cciu
like that's
dot doesn't have dot
Fu okay but it doesn't have this cuz
Fu okay but it doesn't have this cuz
it's not a a public variable right it's
it's not a a public variable right it's
private and it has to be private cuz
private and it has to be private cuz
it's a
it's a
struct me
struct me
thinks let me see if that's
true can we do
this it says we can do this
from s
from s
test
will oh oh that's
will oh oh that's
funny that's real
funny uh can I do like a. Fu bar equals
funny uh can I do like a. Fu bar equals
no you
can't that's kind of Jank isn't
it it lets you do this assignment but
it it lets you do this assignment but
then nothing happens
huh I don't like
huh I don't like
that I mean it is kind of cool that you
that I mean it is kind of cool that you
can uh expose variables like that I
can uh expose variables like that I
don't know if this will work fully for
don't know if this will work fully for
uh like if you have C variables or
uh like if you have C variables or
whatever but it's cool that it kind of
whatever but it's cool that it kind of
does
let me think here
so but you can't import the C
so but you can't import the C
method from an next
turn oh wait cuz it's not public duh
is that
is that
fine I think that's fine
right cuz if you do do F it's going to
right cuz if you do do F it's going to
give you a dict
give you a dict
anyways so you're going to need to bind
anyways so you're going to need to bind
stuff anyways right you're going to need
stuff anyways right you're going to need
to bind stuff
anyways yeah you're going to need to
anyways yeah you're going to need to
bind stuff anyways so this is actually
bind stuff anyways so this is actually
100% fine
right cuz we can do like this right in
right cuz we can do like this right in
fact we don't even need this
fact we don't even need this
anymore we can do like
oops what if I just do this
a non
a non
returned do rapper
look at that look at
that that's pretty
that that's pretty
nice that's pretty nice
and we can come up with like some nice
and we can come up with like some nice
little
little
method for puffer to like you know
method for puffer to like you know
pretty print these or
whatever let me make a separate window
whatever let me make a separate window
for once I usually don't need three but
for once I usually don't need three but
I kind of want to test a couple
I kind of want to test a couple
things uhoh did I miss something from
Stone I didn't miss anything this new
message for
Okay
Okay
so what we want to be able to test
here
x death
x death
test and we
test and we
do
do
test okay like this
maybe I think test takes a foo star I
maybe I think test takes a foo star I
think you have to do like this maybe
and yeah this
[Music]
[Music]
compiles one
compiles one
two okay we get the a wrapper and we do
two okay we get the a wrapper and we do
a.
a.
test
test
three perfect perfect perfect
three perfect perfect perfect
perfect um
is there any reason that I would ever
is there any reason that I would ever
have to have this be a pointer in the
class I don't think
so cuz this is just initializing The
so cuz this is just initializing The
Struck
Struck
directly this is kind of perfect
right and then what we do is we just
right and then what we do is we just
make an AIT
make an AIT
method right we make a nit method to
method right we make a nit method to
fill in the extra variables or
fill in the extra variables or
something or we just directly allocate
them in fact I think that
them in fact I think that
uh yeah and then this just becomes a
uh yeah and then this just becomes a
super thin wrapper I like
super thin wrapper I like
this so what does this delete
this so what does this delete
um this means that we
we probably
delete most of our init method and
delete most of our init method and
allocate methods or a decent chunk of
allocate methods or a decent chunk of
the init and allocate methods we reduce
the init and allocate methods we reduce
the F the signatures a whole
the F the signatures a whole
bunch signature on scon stays about the
bunch signature on scon stays about the
same signature and python stays about
same signature and python stays about
the same that's
unavoidable and uh it's a good thing I
unavoidable and uh it's a good thing I
tested this by the way because chat
tested this by the way because chat
jippy was wrong absolutely
jippy was wrong absolutely
wrong it said it would not this would
wrong it said it would not this would
not work and it
did this is very very
did this is very very
nice syon is
great I haven't really seen this in any
great I haven't really seen this in any
other language like having um like such
other language like having um like such
a nice incremental Port layer between
a nice incremental Port layer between
high and low level
high and low level
really
really
good Maybe I'm Wrong maybe some places
good Maybe I'm Wrong maybe some places
have them but this one's really nice to
have them but this one's really nice to
use okay so here's what we're going to
use okay so here's what we're going to
do with this uh whoops we're going to
do with this uh whoops we're going to
start by trying this on probably like
start by trying this on probably like
breakout or pong right
X like this
yeah we're going to be able to simplify
yeah we're going to be able to simplify
this so
this so
much I'm trying to think where we want
much I'm trying to think where we want
to start with
this I mean I guess it's going to be
this I mean I guess it's going to be
Auto
Auto
p s breakout
pix
pxd
pxd
whoa what's wrong with this
whoa what's wrong with this
oh cuz we're dumb that's
oh cuz we're dumb that's
all this is
breakout. R.H no such
breakout. R.H no such
file
really I think I got to do like
see pre-processor
failed well those aren't
failed well those aren't
docks the heck
options oh Dash
options oh Dash
I let's try this
still
failed oh it should be slash include not
failed oh it should be slash include not
SL lib I'm
dumb okay that's a different
error compile
directive h
sis
exit
length
length
huh does this not
work nothing's in here
here
here
D does this need extra Flags
let's just
let's just
DOD
platform platform
platform platform
desktop
desktop
no I don't think you can do it this way
I wonder if anybody's pry
I wonder if anybody's pry
this looks like they
haven't why does this freaking
work can I just do like
No it should just get it from the
inkid dash dash debug
I mean this just printed all my code
I mean this just printed all my code
right as it just printed the whole
file oh you can see here it's trying to
file oh you can see here it's trying to
get all the RB
get all the RB
stuff yeah
stuff yeah
massive look it's generating bindings
massive look it's generating bindings
for all of
for all of
ra.h that's silly
but then like that should work even
but then like that should work even
though it's
silly free
[Music]
client H mm
compiler
directive just for the hell of it let's
directive just for the hell of it let's
throw it to chat jity there's no way it
throw it to chat jity there's no way it
uh oh wait what what
happened wait Dash
I
oh yeah cuz I forgot this should be
uh there we go
uh there we go
so this is I mean there's no way but
so this is I mean there's no way but
we'll maybe this will give us a good
we'll maybe this will give us a good
Google
thing findings
actives
need I don't see why I would need these
need I don't see why I would need these
as the
thing but maybe I need one of these
thing but maybe I need one of these
flags
yeah so I literally tried this already
what happens I'm just
what happens I'm just
curious what happens if I just like
curious what happens if I just like
comment this
error
function well oh yeah cuz it it doesn't
function well oh yeah cuz it it doesn't
know what a color is right
the old color C
the old color C
object this is I'm trying to figure out
object this is I'm trying to figure out
a way to autogen the scyon bindings or
a way to autogen the scyon bindings or
most of
most of
them and this tool works but it's not
them and this tool works but it's not
working with
RB it would be a good idea if it we're
RB it would be a good idea if it we're
working with RB
I mean we don't have to do this
initially let's let's do this manually
initially let's let's do this manually
to start
to start
with so
cuz I did find some other some other
cuz I did find some other some other
optimizations in uh
anyways U I suppose that means we start
anyways U I suppose that means we start
with the c though not
with the c though not
the syon
the syon
right yeah we start with the
c for
I definitely need to change up the names
I definitely need to change up the names
of these
well I'm trying to figure out because
well I'm trying to figure out because
there that the idea here is that there
there that the idea here is that there
are two different functions right they
are two different functions right they
both technically do some allocations
I could just have one of them be p in
it but it's really not
it but it's really not
um ping it
right I guess it is just an
it really dumb obvious names well
it really dumb obvious names well
they're not dumb if they're obvious
let's try something this isn't it this
let's try something this isn't it this
is
allocate and then what we're going to
do this doesn't need to go
here observations
rewards
rewards
oops
duns uh and all the rest of this can go
duns uh and all the rest of this can go
away
away
right num bricks
oh and this has to
oh and this has to
be
void the breakout star
void the breakout star
n like
this right
then we have to do
assert and
assert and
num
bricks greater than
bricks greater than
zero and then we
do
Rick we didn't need to do all this
Rick we didn't need to do all this
nonsense no did we
nonsense no did we
okay so we get rid of
this that was
balls bricks yep thank you
bricks
Z we also if you think about it we
Z we also if you think about it we
really don't
really don't
need we really don't need to be passing
need we really don't need to be passing
in any of this
in any of this
stuff like this is just straight up I
stuff like this is just straight up I
mean look how stupid this is
this goes
this goes
away this can
stay stuff was required for scon stuff
stay stuff was required for scon stuff
or do you get an error on and
or do you get an error on and
it uh you'll see in a moment it's
it uh you'll see in a moment it's
there's some Shenanigans I will say
we don't need any of
this we'll we'll have to come up with a
this we'll we'll have to come up with a
better name for this it's not really a
better name for this it's not really a
nit versus allocate
RT and actually I think we can save
this we can just do here we can just do
this we can just do here we can just do
init n
right and then we can just
do
do
observations actions rewards and
observations actions rewards and
DS goes like
this how's
this how's
that way simpler
right and then all I have to
right and then all I have to
do compile it'll compile hold
on so all we have to
do let's put this here for a second we
do let's put this here for a second we
are not going to need all
are not going to need all
this but we're just going to do
oops C breakout star
oops C breakout star
n is going to be
n is going to be
C going to be equal to
dot frame skip
dot frame skip
with let's see I it frame skip with
with let's see I it frame skip with
height
it it's being a little silly here let's
it it's being a little silly here let's
just grab the ones we need paddle width
just grab the ones we need paddle width
paddle
paddle
height ball width ball
height uh brick
width where is this brick width brick
kite k
and we do brick rows and brick
and we do brick rows and brick
calls
this and this is
it and then we just
it and then we just
do allocate
do allocate
n and then reset M like this now I
n and then reset M like this now I
missed one thing thing first of all we
missed one thing thing first of all we
get rid of
this and then the other thing I
did ah look at this we literally can
did ah look at this we literally can
just code this
for6
is 62
eight ball width
eight ball width
six
six this was supposed to be do brick
six this was supposed to be do brick
width and brick height not I just typoed
width and brick height not I just typoed
it brick width is going to
it brick width is going to
be and then brick
be and then brick
height brick
height brick
Rose equal to
Rose equal to
six and then a do bir calls is going to
six and then a do bir calls is going to
be equal to 18 like
be equal to 18 like
this
okay I believe I forgot one thing
okay I believe I forgot one thing
here which is just going to be
uh when you init
uh when you init
this instead of this assert it's going
this instead of this assert it's going
to be
to be
n num it's going to be like
this implicit Declaration of
assert
C.H does not return a value
this is supposed to be void not void
star frame skip
star frame skip
equal
designator wait
designator wait
error hold
on what's wrong with this
pointer to stack allocated memory Ah
pointer to stack allocated memory Ah
that's why
this needs to be and
N yeah so this is um slightly silly I do
N yeah so this is um slightly silly I do
like to
like to
use I mean I guess there's no reason for
use I mean I guess there's no reason for
me to be using pointers everywhere I
me to be using pointers everywhere I
guess it means I do it because it
guess it means I do it because it
prevents you from having to use aners
prevents you from having to use aners
sand everywhere
but allocated
this is just honestly this is like kind
this is just honestly this is like kind
of newbie
stuff render
yeah this is why I always use the damn
pointers because you don't have to have
pointers because you don't have to have
the uh you don't have to scatter aners
the uh you don't have to scatter aners
SS
SS
everywhere so we can think about
everywhere so we can think about
that it'll work either
way 5 seven6 over num calls
two uh and what the heck was brick
height
12 Undeclared identifier with e
there's no reason that you
need this literally does not need to
need this literally does not need to
exist
this target
this target
paths uh I guess we are going to
paths uh I guess we are going to
do yeah we're going to add this anyways
do yeah we're going to add this anyways
though is the thing
though is the thing
so we'll leave the client for
so we'll leave the client for
now um
now um
um but we're going to make it at least
um but we're going to make it at least
be like
this that's
better so just takes the
environment and you can just keep it
environment and you can just keep it
like
this init window
Library path
equals what do we you think
equals what do we you think
folks
oops same exact code way
oops same exact code way
easier less binding
garbage we can play our
breakout the ball actually does speed up
breakout the ball actually does speed up
the more you play that's funny it is
the more you play that's funny it is
actually kind of playable though it is
actually kind of playable though it is
hard though it's very hard I think you
hard though it's very hard I think you
just need slightly more precise control
just need slightly more precise control
all right
all right
well there we go um what did we learn
well there we go um what did we learn
today don't write wrapper functions when
today don't write wrapper functions when
you don't need wrapper functions and if
you don't need wrapper functions and if
you think you need wrapper functions but
you think you need wrapper functions but
don't see rule number
one we're going to go fix the scon for
one we're going to go fix the scon for
this
this
we'll clean a couple other things
we'll clean a couple other things
up this will be the test pilot
up this will be the test pilot
environment and if this works we'll do
environment and if this works we'll do
it for all of
it for all of
them and
then I mean that's like most of the Jank
then I mean that's like most of the Jank
honestly with puffer there are only a
honestly with puffer there are only a
couple other small places we already
couple other small places we already
fixed the setup.py today except we still
fixed the setup.py today except we still
have to make it Auto download rayb but
have to make it Auto download rayb but
that's about
that's about
it all right I'm going to be right back
it all right I'm going to be right back
I'm going to use the restroom what time
I'm going to use the restroom what time
is it
is it
3:41 uh give me a few minutes then I'm
3:41 uh give me a few minutes then I'm
going to go make myself a shake and such
going to go make myself a shake and such
and then I'll be right
back
e
e
e
e
e
e
e
e
e
e
e
e
e e
okay here we
go in the meantime please take a moment
go in the meantime please take a moment
to Star puffery lib yes indeed star the
to Star puffery lib yes indeed star the
puffer the puffer like stars
I mean this is so much cleaner it's not
I mean this is so much cleaner it's not
even funny I don't know what the hell I
even funny I don't know what the hell I
was thinking before I guess it's just I
was thinking before I guess it's just I
didn't realize like hey strs already
didn't realize like hey strs already
have a good initializer and it'll work
have a good initializer and it'll work
with scyon it to be fair it took like an
with scyon it to be fair it took like an
hour of test to see that that was even
possible cold
ah what we think we're going to do with
ah what we think we're going to do with
this fix the scyon
this fix the scyon
bindings go from there
bindings go from there
right that should
right that should
work why pong when you can
work why pong when you can
ping let us play pingpong or as the
ping let us play pingpong or as the
Chinese say
pingpong
pingpong
welcome yeah that guy we figured out how
welcome yeah that guy we figured out how
to make the the scon bindings less
terrible I'm going to delete like half
terrible I'm going to delete like half
of
this with
this with
rust no no absolutely
rust no no absolutely
not absolutely
not freaking garbage language
up to Agatha the elite oh that's
up to Agatha the elite oh that's
awesome yo that's great
holy what number is she hold
on third trainer they're five right cuz
on third trainer they're five right cuz
the champion
yeah
yeah
poison it's poison and what's the
starter bad RNG and wild
starter bad RNG and wild
encounters she's
encounters she's
basically well yeah the no wild
basically well yeah the no wild
encounters is like forcing to solo
encounters is like forcing to solo
forcing the solo with the star is kind
forcing the solo with the star is kind
of
of
crazy okay poison versus grass
right am I crazy that's super effective
right am I crazy that's super effective
isn't it or am I
isn't it or am I
dumb we have Lapras but it's way too
dumb we have Lapras but it's way too
weak
yeah poison Beach Grass
yeah poison beats grass
dude just get it to learn to switch
dude just get it to learn to switch
Train The Magikarp and you have
Train The Magikarp and you have
Gyarados just switch Train The Magikarp
Gyarados just switch Train The Magikarp
you
know it can sleep powder so it can
know it can sleep powder so it can
actually set up
if he turns on the wild battles it'll
work
work
probably it has to kind of know the
probably it has to kind of know the
higher level strategy of like having
higher level strategy of like having
multiple
multiple
Pokemon it did it with wild from fuchia
okay so there you go it's got to train
okay so there you go it's got to train
something up
new run with wild battles enabled once
new run with wild battles enabled once
you get to the Elite 4 okay interesting
you get to the Elite 4 okay interesting
it will train up after losing and go
it will train up after losing and go
again until win or level
again until win or level
100 that's
funny I mean to be fair like that's not
funny I mean to be fair like that's not
even that dumb like I literally did that
even that dumb like I literally did that
when I was younger right I just kept
when I was younger right I just kept
freaking trying the Elite 4 with one
freaking trying the Elite 4 with one
Pokemon until uh eventually you know got
Pokemon until uh eventually you know got
enough experience from like the initial
enough experience from like the initial
uh the initial Pokemon in there to like
uh the initial Pokemon in there to like
just one one shot the whole Elite 4 so
just one one shot the whole Elite 4 so
that's not even that
that's not even that
unrealistic check back it'll either win
unrealistic check back it'll either win
or the Strat will need adjustment okay
or the Strat will need adjustment okay
that sounds
that sounds
good well in the meantime we're doing
good well in the meantime we're doing
some
code what are doing some code
one day to teach an agent to beat
one day to teach an agent to beat
Pokemon yeah it's a if once you get the
Pokemon yeah it's a if once you get the
scripting done or like out of there for
scripting done or like out of there for
the most part because we do a good hyper
the most part because we do a good hyper
pram sweep it'll be a top five result in
pram sweep it'll be a top five result in
RL I mean we're not going to have like
RL I mean we're not going to have like
Deep Mind PR behind it or anything but
Deep Mind PR behind it or anything but
it's that's a top five result in
RL it's
RL it's
um here let me
think probably I would say it's
think probably I would say it's
definitely behind open ai5 and Alpha
definitely behind open ai5 and Alpha
star and um go but probably ahead of
star and um go but probably ahead of
about everything
about everything
else I mean there are a couple other
else I mean there are a couple other
ones that are kind of crazy if I thought
ones that are kind of crazy if I thought
about it but
yeah I mean what the heck else is there
yeah I mean what the heck else is there
that's like I mean I guess 01 now but
that's like I mean I guess 01 now but
I'm not really counting that in terms of
I'm not really counting that in terms of
pure RL
pure RL
right and technically Al Alpha zero is
right and technically Al Alpha zero is
like MCTS as well
right yeah o1 doesn't
right yeah o1 doesn't
count so top five result in RL
I agree this is like pure you know
I agree this is like pure you know
online tabularasa RL is what this
is let's see
is let's see
actions reward
actions reward
Wards
Wards
GS with height battle with pattle height
bights this looks good to
me LM trained
me LM trained
on didn't toss it at
Pokemon yeah it won't work
oh cool yeah bet remind me we'll do that
oh cool yeah bet remind me we'll do that
on stream today let me make sure that
on stream today let me make sure that
this works because I'm in the mood for
this works because I'm in the mood for
this just like to finish this and then
this just like to finish this and then
we'll do that
I have a Smith machine to assemble in a
I have a Smith machine to assemble in a
few miles too hey you got yourself one
few miles too hey you got yourself one
very
good well
good well
done the weights are uh useful that's
done the weights are uh useful that's
what I got I got my father using uh
what I got I got my father using uh
using one of those he's got like a nice
using one of those he's got like a nice
one that has forward and back access as
one that has forward and back access as
well uh and you can pretty much do
well uh and you can pretty much do
everything I mean I still prefer my free
everything I mean I still prefer my free
weights but like you can squat bench
weights but like you can squat bench
deadlift and overhead press and row so
deadlift and overhead press and row so
you're totally set
you're totally set
right and be careful doing pull-ups on
right and be careful doing pull-ups on
it just don't Kip
we are up
we are up
to sets of 265 squats and
to sets of 265 squats and
265 yeah 265 Squat
265 yeah 265 Squat
and uh 3 55 or 365 deadlifts I believe
and uh 3 55 or 365 deadlifts I believe
probably 355 sets of
deadlifts so we're getting there
deadlifts so we're getting there
takes a while to put the strength back
takes a while to put the strength back
on why don't I see a side breakout in
on why don't I see a side breakout in
here
forgot it
forgot it
apparently time to get
apparently time to get
yuge bunch of nice ones I got one that
yuge bunch of nice ones I got one that
was cheap but I'm not planning on Max
was cheap but I'm not planning on Max
load just don't hurt yourself and I mean
load just don't hurt yourself and I mean
I assuming you're not doing like
I assuming you're not doing like
anything super heavy um but do be
anything super heavy um but do be
careful with the safeties ideally you
careful with the safeties ideally you
have safeties in it that you can
have safeties in it that you can
set
set
because you can straight up die with a
because you can straight up die with a
Smith machine if you like if you're
Smith machine if you like if you're
benching and you get the bar caught on
benching and you get the bar caught on
your neck you're
your neck you're
dead you're just
dead so do be careful with
dead so do be careful with
that I never use them without
safeties safeties are there good
yeah well I mean you say you're not
yeah well I mean you say you're not
stupid but like here look
stupid but like here look
I I made where is this stupid
I I made where is this stupid
thing I did this last week where the
hell so uh I hard failed a squat a set
hell so uh I hard failed a squat a set
of squats on the first rep I hard failed
of squats on the first rep I hard failed
with yeah
with yeah
265 and then I went on to do my sets
265 and then I went on to do my sets
with this exact weight directly
with this exact weight directly
afterwards can just happen and you
afterwards can just happen and you
see how I have this strap
see how I have this strap
angled right I very intentionally do
angled right I very intentionally do
this because if you angle the strap up
this because if you angle the strap up
like this uh not only does the weight
like this uh not only does the weight
not like Crush you or anything but it
not like Crush you or anything but it
doesn't like fold you onto your knees
doesn't like fold you onto your knees
because it like it gets caught up here
because it like it gets caught up here
and it just rolls off you backwards so
and it just rolls off you backwards so
yeah safety is important
nice weights yes they are very nice
nice weights yes they are very nice
weights
the error messages are really not
great make
client cannot sign typ
step you know this is the the one
step you know this is the the one
annoying thing about having we'll figure
annoying thing about having we'll figure
this out before I do all the other
this out before I do all the other
environments like
what happened
here oh I'm on a weird branch
dude really
seg
seg
P
okay probably some of these are messed
okay probably some of these are messed
up we no longer need this
probably
destruct be
destruct be
fine
fine
render close
client for
you forgot the init here
that's probably
it there we
it there we
go
Works look at
that so we're going to have to clean
that so we're going to have to clean
this Branch up a whole bunch look how
this Branch up a whole bunch look how
much nicer this
much nicer this
is I basically I stripped out the really
is I basically I stripped out the really
gross part of The Binding
gross part of The Binding
stuff and like the major constraint this
stuff and like the major constraint this
stuff in theory you should be able to
stuff in theory you should be able to
autogen this top portion
autogen this top portion
here if I can get that allocator
working and then you literally just have
working and then you literally just have
this that's your whole binding
and even if you can't allocate
and even if you can't allocate
this you literally just need the struck
death like the signatures are no longer
death like the signatures are no longer
God
awful so that's way
nicer hey
nicer hey
linky we just made the bindings way
linky we just made the bindings way
nicer or at least we figured out we did
nicer or at least we figured out we did
it for breakout we figured out how to
it for breakout we figured out how to
make The Binding system way
nicer we cut out in three or four
nicer we cut out in three or four
separate places we cut out the gigantic
signatures I need to fix the dev Branch
signatures I need to fix the dev Branch
I need to fix all this stuff
I was messing around with the grid
I was messing around with the grid
environments too
much this is the important piece right
here
okay time it
okay time it
four okay that's
four okay that's
fine let me take a quick look let me
fine let me take a quick look let me
make make sure I haven't missed anything
make make sure I haven't missed anything
here and then we'll take a look
here and then we'll take a look
at your PR bet so I know you've worked
at your PR bet so I know you've worked
on that for a while we'll take a look at
on that for a while we'll take a look at
this
paralyzing
it's actually 50x
faster got quite questions about Enduro
faster got quite questions about Enduro
cool big win I'm looking forward to
cool big win I'm looking forward to
making you looking H more looking
making you looking H more looking
forward to you making porting to scon a
forward to you making porting to scon a
bit easier it should be way easier now
bit easier it should be way easier now
so the thing that I figured out uh I
so the thing that I figured out uh I
figured out how to make it without
figured out how to make it without
having these gigantic init functions and
having these gigantic init functions and
like having to mix stuff around there I
like having to mix stuff around there I
got a couple last things to do but I
got a couple last things to do but I
think like 90% I'm pretty happy with
think like 90% I'm pretty happy with
this ithon here now uh there's like one
this ithon here now uh there's like one
additional thing I got to figure out but
additional thing I got to figure out but
it's pretty well solved like that's
it's pretty well solved like that's
basically I solved the problem today
basically I solved the problem today
right I came up with the solution I
right I came up with the solution I
tested the solution it works we just
tested the solution it works we just
have to like tweak it and like uh put it
have to like tweak it and like uh put it
everywhere now it's like the hard part
everywhere now it's like the hard part
is done
um so I figured that out today and
then there like we still have to figure
then there like we still have to figure
out API Shenanigans for puffer M we'll
out API Shenanigans for puffer M we'll
have to figure that out still it's not a
have to figure that out still it's not a
huge deal though
all right let's see your
all right let's see your
PR uh
PR uh
puffer I also I'm feeling way better
puffer I also I'm feeling way better
today like holy hell I was just Giga
today like holy hell I was just Giga
fried uh I literally just spent the
fried uh I literally just spent the
weekend like well I ran a half marathon
weekend like well I ran a half marathon
yesterday but other than that just like
yesterday but other than that just like
lazing around playing League of Legends
lazing around playing League of Legends
and like I really needed to do that as
and like I really needed to do that as
it turns out cuz I feel way better like
it turns out cuz I feel way better like
immediately got a bunch of good sleep
immediately got a bunch of good sleep
you
you
know just like Giga fried from the last
know just like Giga fried from the last
however long o 1.1k look at
however long o 1.1k look at
that
1.1 add your Rec yeah I mean it
1.1 add your Rec yeah I mean it
shouldn't I mean
shouldn't I mean
it's I pretty much I can get like tons
it's I pretty much I can get like tons
of work out of myself for good chunks of
of work out of myself for good chunks of
time but I can't do it forever right
time but I can't do it forever right
without taking a reset at some point
I don't know it pisses me off too
I don't know it pisses me off too
because
because
like I basically I grew up with the
like I basically I grew up with the
expectation that I should be able to
expectation that I should be able to
work at 100% capacity 24/7 and like I'd
work at 100% capacity 24/7 and like I'd
very much like to but sometimes brain
very much like to but sometimes brain
says
says
no only problem with me is knee pain and
no only problem with me is knee pain and
left quad skin is
left quad skin is
numb
numb
H knee pain is rough knee pain is
H knee pain is rough knee pain is
definitely rough
if you're already running on dirt you're
if you're already running on dirt you're
kind of doing what you
kind of doing what you
can I to be fair I had like a lot I had
can I to be fair I had like a lot I had
a fair bit of pain um when I started
a fair bit of pain um when I started
running just cuz like I'm running 40
running just cuz like I'm running 40
lounds heavier than I used to
be oh linky you have a PR as
be oh linky you have a PR as
well I got to fix that all right
well I got to fix that all right
let's see what these are
let's see what these are
quad I'm watching and waiting gets worse
quad I'm watching and waiting gets worse
doesn't I'll be making up Point
yeah
okay I might have you uh I might have
okay I might have you uh I might have
you make some revisions on this
bet let me see
did you like separately tune all of
did you like separately tune all of
these or what happened
here special configs did you see that
here special configs did you see that
Atari you can like I did atar you can
Atari you can like I did atar you can
put a default file
AR optimized could make it with
AR optimized could make it with
default well there the default the thing
default well there the default the thing
is that like then you can just put the
is that like then you can just put the
parameters that are different
right so let me get a sense of how
right so let me get a sense of how
you're doing this so you
you're doing this so you
have C def
struct allocate memory
there definitely some weird things in
there definitely some weird things in
here one or
here one or
two the others don't I don't need com
two the others don't I don't need com
ments hold on let me just look at
this this is probably your ID but don't
this this is probably your ID but don't
do
this two classes
now I can
see I liked it
see I liked it
silly you didn't even line it
silly you didn't even line it
up
um yeah so I I can't fault you for this
um yeah so I I can't fault you for this
cuz you copied my dumb for this so
cuz you copied my dumb for this so
I can't fault you for this rapper this
I can't fault you for this rapper this
is fine fine
weird errors so I abandoned it yeah syon
weird errors so I abandoned it yeah syon
has shitty errors I can get
that okay well this is going to have to
that okay well this is going to have to
go into like a DOT sanity or something
these are actually kind of nice because
these are actually kind of nice because
I just had somebody today asking me on
I just had somebody today asking me on
like really simple examples of like
like really simple examples of like
sioning
environments it should be brain
dead though you do you're definitely
dead though you do you're definitely
doing some weird things what's this m.
view float
view okay I see
to render
yeah oh
man try to do rap you said you tried to
man try to do rap you said you tried to
do raer l
too many variables yeah no I get it I
too many variables yeah no I get it I
see what you're
doing let me check
something 62
a lot of
code I can see this would take a while
code I can see this would take a while
to do all this
I'm definitely going to integrate this
I'm definitely going to integrate this
in some form like I'm definitely going
in some form like I'm definitely going
to integrate all this but this is a this
to integrate all this but this is a this
is going to be a substantial thing for
is going to be a substantial thing for
me to have to review bet like I'm
me to have to review bet like I'm
probably going to want
probably going to want
to yeah I'm probably going to want to
like trying to think
revisions how it fits into puffer Li
revisions how it fits into puffer Li
yeah no it'll
yeah no it'll
fit
so you're at this like kind of the thing
so you're at this like kind of the thing
is oh man let me see if I can figure out
is oh man let me see if I can figure out
how to how to like go through this in a
how to how to like go through this in a
way that's going to be instructive so
way that's going to be instructive so
you're kind of like at this awkward
you're kind of like at this awkward
midpoint right
midpoint right
between scyon and
between scyon and
C where you're kind of stubbing your
C where you're kind of stubbing your
toes right getting like the bad parts of
toes right getting like the bad parts of
Python and the bad parts of C in some
Python and the bad parts of C in some
ways um like you've got this struct
ways um like you've got this struct
right but it's in
right but it's in
scon and then you're doing like an init
scon and then you're doing like an init
function on this struct which to be fair
function on this struct which to be fair
this is how I had it until just right
this is how I had it until just right
recently so that's fine but then you're
recently so that's fine but then you're
like postbinding
like postbinding
I can't even blame you for any of this
I can't even blame you for any of this
cuz this is exactly what I told you to
cuz this is exactly what I told you to
do like 3 months
do like 3 months
ago it's just I've got I found slightly
ago it's just I've got I found slightly
better ways of doing stuff since
then so I mean this is perfectly fine to
then so I mean this is perfectly fine to
be
honest this is simple and very easy to
honest this is simple and very easy to
understand
yeah the thing is you don't have scon
yeah the thing is you don't have scon
numpy dude like numpy will call back to
see I mean to python numpy will call
see I mean to python numpy will call
back to uh to python every
back to uh to python every
time it's only memory views that
don't like memory views don't call back
don't like memory views don't call back
so like here you're using these if
so like here you're using these if
you're in scon anyways you may as well
you're in scon anyways you may as well
use memory views right instead of having
use memory views right instead of having
to do your like arithmetic on this like
to do your like arithmetic on this like
if you're going to do this you may as
if you're going to do this you may as
well just do this in
well just do this in
C I wanted to not do that at all so I
C I wanted to not do that at all so I
initially I tried
initially I tried
yeah well it's just it's funny because
yeah well it's just it's funny because
like the code the way that you've
like the code the way that you've
written this like this is basically
written this like this is basically
C like this is like it almost doesn't
C like this is like it almost doesn't
make sense for this to be in
make sense for this to be in
scyon the way that this is cuz this is
scyon the way that this is cuz this is
pretty much just
pretty much just
C you see what I
C you see what I
mean supposed to be ready to convert to
mean supposed to be ready to convert to
see I see okay well I can show you how
see I see okay well I can show you how
to do that
to do that
stuff and then we can do the rendering
stuff and then we can do the rendering
online too right so we can put together
online too right so we can put together
like a
like a
little I mean I could lit I can
little I mean I could lit I can
literally have this be one file and then
literally have this be one file and then
just have a render demo right we could
just have a render demo right we could
have a render demo that has all of the
have a render demo that has all of the
environments in one little
environments in one little
demo for instance
but it's going to take some work not
but it's going to take some work not
because it's hard but because there's a
because it's hard but because there's a
substantial amount of code
substantial amount of code
here you know what I think we should do
here you know what I think we should do
you should let me finish cleaning up
you should let me finish cleaning up
like the API bindings and all that stuff
like the API bindings and all that stuff
because there's so many different little
because there's so many different little
environments here that if I clean that
environments here that if I clean that
up a little bit it's going to make this
up a little bit it's going to make this
a lot easier to
a lot easier to
integrate but you've done a good job
integrate but you've done a good job
with this I mean you basically like
with this I mean you basically like
you've brought yourself up to speed
you've brought yourself up to speed
enough on how to do higher per
enough on how to do higher per
programming you brought yourself up to
programming you brought yourself up to
speed on
speed on
cython yeah it's pretty well
cython yeah it's pretty well
set thank you for no you've done a good
set thank you for no you've done a good
job with this you've done a good job
job with this you've done a good job
with this all I have to do is I got to
with this all I have to do is I got to
steer you in a couple I have to steer
steer you in a couple I have to steer
you in a couple little ways but it's
you in a couple little ways but it's
pretty nice and honestly I've been so
pretty nice and honestly I've been so
happy with uh getting contributors to
happy with uh getting contributors to
write code like this
write code like this
because like it's very easy for me to
because like it's very easy for me to
just edit this and make little to stuff
just edit this and make little to stuff
right because it's like there's almost
right because it's like there's almost
no way that you can go horribly
no way that you can go horribly
wrong
wrong
versus if you were to do like some
versus if you were to do like some
heavily objectoriented thing and come up
heavily objectoriented thing and come up
with some weird hierarchy of things I'd
with some weird hierarchy of things I'd
basically have to throw away all the
basically have to throw away all the
code and rewrite it right so like the
code and rewrite it right so like the
fact that the code is like this makes it
fact that the code is like this makes it
very easy for me to just like quickly go
very easy for me to just like quickly go
through and edit stuff
we're also going to need more sanity M's
we're also going to need more sanity M's
for sure but that's going to take some
for sure but that's going to take some
actual really some really good
actual really some really good
thought it's highly modular on
thought it's highly modular on
purpose I don't think modular is the
purpose I don't think modular is the
word you're looking for
but yeah this is basically this is
but yeah this is basically this is
C you do a few things that are kind of
C you do a few things that are kind of
silly
silly
here like this is
here like this is
silly cuz this is a python
silly cuz this is a python
Loop actually maybe it can convert list
Loop actually maybe it can convert list
compressions I don't
compressions I don't
know I have an idea on say I'll do a
know I have an idea on say I'll do a
game theory one
game theory one
well careful link key
well careful link key
like there's a very specific intent
like there's a very specific intent
behind the sanity M's it's not like the
behind the sanity M's it's not like the
goal is not to have a ton of them the
goal is not to have a ton of them the
goal is to have we actually really what
goal is to have we actually really what
we want is we want the minimum number of
we want is we want the minimum number of
Sanity M's that are going to test for
Sanity M's that are going to test for
specific algorithmic
specific algorithmic
deficiencies game theory is not
deficiencies game theory is not
necessarily one of them like if you do
necessarily one of them like if you do
prisoners dilemma that really doesn't
prisoners dilemma that really doesn't
tell you anything people fail prisoners
tell you anything people fail prisoners
dilemma
goal is to test specific algorithmic
goal is to test specific algorithmic
deficiencies yep that's
it I want this guy to contribute some
it I want this guy to contribute some
M's where is this this guy this is
M's where is this this guy this is
awesome I want
awesome I want
these I don't know what this does but
these I don't know what this does but
this is
cool it's done hey
cool it's done hey
Spencer
Spencer
awesome tit
awesome tit
GitHub
GitHub
really where did I miss the pr
didn't make
one and this needs some instruction on
one and this needs some instruction on
like what the heck this game is I like I
like what the heck this game is I like I
get that it's a card game I don't know
get that it's a card game I don't know
which number means what
here I haven't played the Final Fantasy
here I haven't played the Final Fantasy
game
needs one thing sure I'll help you right
needs one thing sure I'll help you right
now what do you
now what do you
need oh I also uh I don't know how long
need oh I also uh I don't know how long
you've been watching this but I just
you've been watching this but I just
found a way to make the uh the scon
found a way to make the uh the scon
bindings way less
bindings way less
painful so I'll help you with that in a
painful so I'll help you with that in a
bit but
uh you link to me Connect
uh you link to me Connect
4 let's look at code
I just let autogen rip through and
I just let autogen rip through and
delete
delete
Victory wait
what I'm
confused did you figure out your
thing wait I let autogen rip through and
thing wait I let autogen rip through and
delete victory for scyon
delete victory for scyon
stop uh
stop uh
I'll show you in a second let me see
I'll show you in a second let me see
what this is 270 generate
what this is 270 generate
board
yep piece
yep piece
with wait call times
M oh okay yeah this is just Ros and
M oh okay yeah this is just Ros and
calls sure n conect c Connect
calls sure n conect c Connect
4 yeah you basically just copied my
4 yeah you basically just copied my
structure exactly
structure exactly
allocate connect yep you copied ex okay
allocate connect yep you copied ex okay
cool and
then 4. C didn't get pushed D to get
then 4. C didn't get pushed D to get
okay running no
okay running no
worries oh you didn't you lost it
shoot like the C
shoot like the C
test good thing those are short
gotcha check wi
con
okay yeah I see you pretty much did one
okay yeah I see you pretty much did one
to
one man I really need to it's kind of
one man I really need to it's kind of
funny cuz like the way I'm giving people
funny cuz like the way I'm giving people
to write code it's like a template and
to write code it's like a template and
you can see how easy it is to build M's
you can see how easy it is to build M's
this way right like you can see how easy
this way right like you can see how easy
it is to follow this sort of format and
it is to follow this sort of format and
have these high perf M but I keep making
have these high perf M but I keep making
improvements so let me show you the one
improvements so let me show you the one
that I found today with breakout that
that I found today with breakout that
makes things just a little bit
nicer so what I did it's a very simple
nicer so what I did it's a very simple
change you can see that these init
change you can see that these init
methods are way simpler now right the
methods are way simpler now right the
signature is just init with the n and
signature is just init with the n and
allocate with the en and like they don't
allocate with the en and like they don't
have these gigantic type signatures
have these gigantic type signatures
right and the init has a couple
right and the init has a couple
allocations the allocate has a few
allocations the allocate has a few
more we're going to figure out how to
more we're going to figure out how to
name these
name these
better but this is it and then if I go
better but this is it and then if I go
to breakout.
to breakout.
C look at this I just allocate the
C look at this I just allocate the
struck directly and then I call allocate
struck directly and then I call allocate
to inject the additional fields that I
to inject the additional fields that I
need like that and that's
need like that and that's
it and then if I go to
scon right if I go to python yeah we
scon right if I go to python yeah we
still have this big signature here from
still have this big signature here from
python but um look at that the signature
python but um look at that the signature
is gone from here because there's no
is gone from here because there's no
Giant in it
Giant in it
signature right the self. EnV cython
signature right the self. EnV cython
lets you use basically the same
lets you use basically the same
initializer Syntax for C structs so we
initializer Syntax for C structs so we
do that like this it's like very simple
do that like this it's like very simple
you eliminate an additional call you
you eliminate an additional call you
call a knit on it instead of allocate
call a knit on it instead of allocate
and you're done that's the entire code
and you're done that's the entire code
so see how much simpler that is now for
so see how much simpler that is now for
uh the the allocate that's like a major
uh the the allocate that's like a major
pain point of scon just gone
well no more big signature yeah so I
well no more big signature yeah so I
mean this is the type of stuff I do that
mean this is the type of stuff I do that
I don't expect you know new contributors
I don't expect you know new contributors
to be able to like to do but like one of
to be able to like to do but like one of
the big things that I do right is I care
the big things that I do right is I care
a lot about keeping things simple so I
a lot about keeping things simple so I
invest a lot of time like when something
invest a lot of time like when something
is not as simple if there's like what
is not as simple if there's like what
seems like redundant complexity to me it
seems like redundant complexity to me it
bothers me a lot and I'll like keep
bothers me a lot and I'll like keep
thinking about it for and maybe it'll
thinking about it for and maybe it'll
take a few weeks right but eventually I
take a few weeks right but eventually I
figure out a way to make it simpler so
figure out a way to make it simpler so
this is what that happened I needed to
this is what that happened I needed to
take a weekend in order to like chill
take a weekend in order to like chill
out and reset but then when I came back
out and reset but then when I came back
today it was actually pretty
today it was actually pretty
straightforward to figure this
out so this is basically I think that
out so this is basically I think that
this fixes the this fixes the Jank with
bindings so I'll let you finish that I'm
bindings so I'll let you finish that I'm
going to try just I'm going to start
going to try just I'm going to start
making some commits here and uh then
making some commits here and uh then
I'll start on like the other
I'll start on like the other
environments like going through and
environments like going through and
doing this and yeah we'll go from there
he you up when it's fixed yeah sure
he you up when it's fixed yeah sure
thing good job on these environments
thing good job on these environments
like just coding up two environments
like just coding up two environments
over the weekend is very nice
very
very
good after you finish your commit I take
good after you finish your commit I take
my P okay let me to see your
my P okay let me to see your
PR what did you
do
and ah very nice
lines brought to you by B and linky well
lines brought to you by B and linky well
thank you
thank you
both try is
instance wait what
what is
this oh I see why you did
this oh I see why you did
this okay I'm going to take this for now
this okay I'm going to take this for now
for the um
it's better so we put in the pr
it's better so we put in the pr
structured OBS are
index nah I'm just sneezing we're
good okay let me let me try to actually
good okay let me let me try to actually
get something set up real quick um
well we'll just get this Branch working
well we'll just get this Branch working
then if I'm going to have to fix this
then if I'm going to have to fix this
this is
fine
e e
okay this is all
okay this is all
fine and
and we just do in
it look at
that
reallocated this
now we grab this uh this signature from
now we grab this uh this signature from
here and this should be a relatively
here and this should be a relatively
easy
Port Dot
score no
score no
with
with
with
40 paddle width paddle height ball width
40 paddle width paddle height ball width
ball height pedal
speed X
Y this is fine
then we just have to do allocate and
then we just have to do allocate and
n look at
n look at
that get rid of this get rid of all
that get rid of this get rid of all
those extra
those extra
constants get rid of
this and uh we have to edit the the
this and uh we have to edit the the
client
pong C pong this should just be C pong I
pong C pong this should just be C pong I
don't know why we have my
pong
okay this is going to be C pong
here
oops Wall
height okay this is good
What's happen in
What's happen in
here and it should not
here and it should not
return for
going to add this in
there we go
boom except it's not doing
anything it is recording stuff
actions okay let's see what's going on
actions okay let's see what's going on
here reset
allocate probably something's not
allocate probably something's not
getting set
allocate I'm calling allocate
allocate I'm calling allocate
here what's going
on for
okay for
question are those memory
question are those memory
leaks these ones aren't if you have ones
leaks these ones aren't if you have ones
that are not these than they are so
that are not these than they are so
there are like there are a few hundred
there are like there are a few hundred
bytes of system leaks uh that are in I
bytes of system leaks uh that are in I
think either openg or some other
think either openg or some other
dependencies of
dependencies of
rib uh these are the ones that you will
rib uh these are the ones that you will
always see if you see more than three of
always see if you see more than three of
them and they don't look like this then
them and they don't look like this then
they're wrong
God
jeez e
I'm just posting my streaming group
I'm just posting my streaming group
chats that's funny
what the heck is wrong with this
what the heck is wrong with this
thing why is it not
resetting I mean probably something got
resetting I mean probably something got
set differently
set differently
right let me go check the uh the
original go
all the variables get set there
all the variables get set there
ah frame
skip this is probably
it
it
aha noop
noop can you beat
it hard
oh I got a
point hey I got two
points I think I've gotten better at uh
points I think I've gotten better at uh
pong by playing League all weekend I
pong by playing League all weekend I
don't think I've ever gotten two points
don't think I've ever gotten two points
on
it I say as I miss it five times
H I got a three points on it it turns
H I got a three points on it it turns
out you just need to be
out you just need to be
cracked to like play the thing it is
cracked to like play the thing it is
playable it's very
hard there we
go you have to time it very well
but we can get points on it it is
possible yeah there you
go is possible
all right well do we have to change
all right well do we have to change
anything with uh I don't even think we
anything with uh I don't even think we
have to change anything with the binding
have to change anything with the binding
do
we uh what
we uh what
happened oh we have to change a couple
happened oh we have to change a couple
small things with the signatures
yeah we just have to
yeah we just have to
do
pong the
song wa
it so much easier isn't it
what
this you no longer need any of this
garbage look at all that so easy
garbage look at all that so easy
so
easy so we have to do
easy so we have to do
observations equal to
float towards
float towards
terminals score
terminals score
LR height is height paddle
LR height is height paddle
width so we do add you know we add this
width so we do add you know we add this
Anno
Anno
stuff frame skip is frame
skip which is four for
now what's
now what's
wrong compiler crash
what's wrong here
see my pong not an identifier type oh
see my pong not an identifier type oh
yep that's
[Music]
fine still
no doesn't like this signature
oh because you need to put the type dep
oh because you need to put the type dep
in
in
right
there need the type
signature
oops type signature goes
here yeah easy enough right
[Music]
almost
almost
there this is and
there this is and
per what's wrong here render yeah we
per what's wrong here render yeah we
need to add couple Anders Sands here
calling free on
calling free on
pointer nonzero
pointer nonzero
offset we'll figure out what's wrong
offset we'll figure out what's wrong
with that
it
render that's
weird probability
tensor Nan
what would that be that's very
weird oh you forgot to call a NP you
weird oh you forgot to call a NP you
should probably add some guard for
this for got to call it reset up come
on here you go
this is the untrain
this is the untrain
policy you can see it does hit it back
policy you can see it does hit it back
occasionally I wonder how long it will
occasionally I wonder how long it will
take it to get like a point
take it to get like a point
randomly probably will take it quite a
randomly probably will take it quite a
while to get a
point but then again that's true of the
point but then again that's true of the
original pong game as well
I think you can do it in two hits maybe
I think you can do it in two hits maybe
maybe you can do it in
one can you do it in one let me see
you can do it in three I
think yeah you can do it in three hits I
think yeah you can do it in three hits I
don't know if you can do it you can
don't know if you can do it you can
probably do it in two I don't know if
probably do it in two I don't know if
you can do it in one
you can do it in one
made the pr for Connect
made the pr for Connect
4 very
good take a
look 1.1k on puffer by the way is very
nice question with
Enduro is it
Enduro is it
complicated hold on let me check this
complicated hold on let me check this
for bet real quick
this is the
this is the
game how's it
work is this just a racing game like you
work is this just a racing game like you
just do this
oh I
see you have to pass a bunch of
cars this game is
hard ah go off the road if you you can
hard ah go off the road if you you can
go off the road you can't off the
road does the weather do anything or
road does the weather do anything or
does it just change the
colors I don't know if I don't know if
colors I don't know if I don't know if
I've actually ever seen anybody play
this should be more is it actually more
this should be more is it actually more
slippery though
good
good
question F and
stuff I mean I didn't say it's trivial
stuff I mean I didn't say it's trivial
to implement
there's so much stuff on the road what
there's so much stuff on the road what
is all
this oh there is
fog I mean the fog is very easy they
fog I mean the fog is very easy they
just blank out half the screen
you're not obligated to go full
speed damn it
look at that
okay so these are the cars to pass your
okay so these are the cars to pass your
goal is to pass 200 Cars is that
goal is to pass 200 Cars is that
it
yeah oh
yeah oh
jeez oh okay so I passed did it reset it
jeez oh okay so I passed did it reset it
should be 100 more per day I don't know
now
Enduro fun game good
luck that would take me a few days for
luck that would take me a few days for
sure it would take me a few
days so I'm going to need the ROM no I
days so I'm going to need the ROM no I
didn't say you're going to need the ROM
didn't say you're going to need the ROM
it's just going to take it
B I doubt the ROM runs fast
enough I don't know how hard's the
enough I don't know how hard's the
Enduro
Enduro
logic maybe it's kind of hard
logic maybe it's kind of hard
it might be kind of hard I don't
know the tough thing about these games
know the tough thing about these games
is that there's
is that there's
uh there's no like spec for how they are
uh there's no like spec for how they are
done as far as I
know let me go look at Spencer's stuff
you can find the code on
you can find the code on
GitHub is it like assembly though like
GitHub is it like assembly though like
what
what
code look it's benser
code look it's benser
stuff wait their
GitHub huh there's no code here dude
GitHub huh there's no code here dude
these load ROMs what what what are you
these load ROMs what what what are you
talking about
connect for
connect for
any that doesn't have the code
any that doesn't have the code
bet that's just that loads a
ROM the rapper should just be logic I
ROM the rapper should just be logic I
mean uh the logic should just be rappers
mean uh the logic should just be rappers
in there
we check the
H Connect Four
H Connect Four
Pi you shouldn't need Raab in the pi
Pi you shouldn't need Raab in the pi
since you did Raab in
um yeah you got like a redundant import
um yeah you got like a redundant import
but other than that this is it it
but other than that this is it it
doesn't matter this is a nice small
doesn't matter this is a nice small
binding
you committed the binary here by
mistake breakout make connect with this
mistake breakout make connect with this
is
is
fine it's
fine it's
fine we figured out how to do this
fine we figured out how to do this
easier but this is fine
uh I can just take this and I'll remove
uh I can just take this and I'll remove
the
breakout hold
breakout hold
on let me figure out my own Branch
on let me figure out my own Branch
shenanigan so I can go fix this up for
you
e e
let me get your stuff working here
let me get your stuff working here
Spence spener one
second e
you can see here that I made the
you can see here that I made the
extensions thing way
extensions thing way
easier
easier
so you see this this replaces the
so you see this this replaces the
extension stuff from
extension stuff from
before so literally all this garbage
before so literally all this garbage
here is
here is
gone I like simple
things
for
e e
this for you
can I put this on the
can I put this on the
website I still have to I I have
website I still have to I I have
messages from this guy on how to add
messages from this guy on how to add
cred credits to the top of the page so
cred credits to the top of the page so
those are coming but can I put this on
those are coming but can I put this on
the
website to be honest I think we're going
website to be honest I think we're going
to replace M scripton with
bun okay
Docker
Docker
docks go for
docks go for
it two to three memory
it two to three memory
leaks how
leaks how
big 2 to three I told you is just ra
big 2 to three I told you is just ra
libian like if it's leaking like 408 and
libian like if it's leaking like 408 and
then like 50 or something and 50
then like 50 or something and 50
something that's
fine should matter either way
for
e e
in
in
excess 822
excess 822
bytes I mean it really shouldn't be that
bytes I mean it really shouldn't be that
hard you just
hard you just
check you only have that so many
check you only have that so many
allocations right none of them are
allocations right none of them are
Dynamic I'll check for you in a second
Dynamic I'll check for you in a second
let me get the initial thing
done okay here's your Connect 4 game so
done okay here's your Connect 4 game so
uh we'll do like
this this
and I
and I
win let's just take
win let's just take
a screenshot of this
I
win very
nice we got to make some tokens
nice we got to make some tokens
that have like red puffer it should be
that have like red puffer it should be
like red puffer and blue puffer or
something that'll be
funny for
for the Triple you can have each game
for the Triple you can have each game
with a different ocean creature
with a different ocean creature
strongest has got to be the puffer fish
strongest has got to be the puffer fish
I like the way you
I like the way you
think I like the way you
think it's good
think it's good
advertising you
know
eh it doesn't have instructions on it or
eh it doesn't have instructions on it or
anything
it blocks
it blocks
me I just
smash this cool
watch how fast your thing is
online it's just got to take as long as
online it's just got to take as long as
it's going to be up for GitHub to push
it's going to be up for GitHub to push
or to
rebuild I'm thinking that instead of
rebuild I'm thinking that instead of
having these like build web
having these like build web
files what we're going to do is we're
files what we're going to do is we're
going to have um I think bun in their
going to have um I think bun in their
latest release they added support to
latest release they added support to
just like compile C
just like compile C
natively so I was thinking we just have
natively so I was thinking we just have
like a bun compiler whatever that just
like a bun compiler whatever that just
builds directly from puffer Li
Source it's
online for
where's your what's your name on this
where's your what's your name on this
triple Triad yeah of course what's your
triple Triad yeah of course what's your
handle on
here I can't tell from
here I can't tell from
uh I see it I can't see it on
here for
what's this thing train at you said
200k 200k for now soon to be a million
oh oh I forgot my bad I got the
oh oh I forgot my bad I got the
screenshot wrong it's supposed to be
screenshot wrong it's supposed to be
yeah the marketing the way to Market
yeah the marketing the way to Market
this as I
this as I
do I do it from here so you can see the
URL there we
go oh but wait you can't see it now wait
go oh but wait you can't see it now wait
yeah you can it doesn't cut it off
right yeah no it shows full like this
right yeah no it shows full like this
this is fine
there we
there we
go very
nice and I'm saying 1 mil plus cuz I
nice and I'm saying 1 mil plus cuz I
know that that's
easy what the is all this stuff
all right let's see this other
all right let's see this other
environment of
yours if you want by the way you can uh
yours if you want by the way you can uh
you can clean like I just committed the
you can clean like I just committed the
pong and the breakout stuff so you can
pong and the breakout stuff so you can
clean up the MS a little bit uh if you
clean up the MS a little bit uh if you
make the bindings like that it just it's
make the bindings like that it just it's
really quick it took me like five
really quick it took me like five
minutes you saw for
minutes you saw for
uh for pong once I figured it
uh for pong once I figured it
out let's see your other environment
though how's this
work let me make a PR
work let me make a PR
okay well can you add like a little like
okay well can you add like a little like
line of text like what what are these
line of text like what what are these
numbers how does this game
work 3x3
okay
huh I see
cool
that's
funny why not watch a video cuz that
funny why not watch a video cuz that
didn't take very long and I figured it
out for
but is so
but is so
garbage the 4 U tab needs to be
garbage the 4 U tab needs to be
fixed this algorithm is like too much
fixed this algorithm is like too much
slop following tab is
slop following tab is
better the density of posts is a little
better the density of posts is a little
bit
bit
ridiculous I don't need every single
ridiculous I don't need every single
post from
Elon PR made awesome let's see I like
Huffer
lib triple TR triple
Triad
Triad
um you did some weird stuff here look
um you did some weird stuff here look
you deleted these
you deleted these
files why is Connect 4 gone
on okay so this is
pull down
pull down
yeah that'd be
good I want see this file so
650 in star star board States
holy
holy
so I will take this code AS
so I will take this code AS
is if I may give you
is if I may give you
um some recommendation for environment
um some recommendation for environment
structure
structure
though in case you want to tweak stuff I
though in case you want to tweak stuff I
mean I'll take it as is cuz like if it
mean I'll take it as is cuz like if it
works we can put it online and we can
works we can put it online and we can
fix stuff
fix stuff
after um don't do multiple pointers for
after um don't do multiple pointers for
stuff like this
I would suggest you do 1D indexing and
I would suggest you do 1D indexing and
if you look at like the Moa I just make
if you look at like the Moa I just make
like a little inline method to do 1D
offsets it can be substantially slower
offsets it can be substantially slower
like doing these double pointers like
like doing these double pointers like
this is substantially slower than just
this is substantially slower than just
doing the
arithmetic thrashes your cach and
arithmetic thrashes your cach and
whatnot also multiple IND directions
it's also just annoying to have to pass
it's also just annoying to have to pass
around and keep track of multiple levels
around and keep track of multiple levels
of pointers
right yeah you had it here look you did
right yeah you had it here look you did
right here you did it right
right here you did it right
here MOBA for inline it's very easy it's
here MOBA for inline it's very easy it's
just like you make instead of having to
just like you make instead of having to
do this every time right for like 3D or
do this every time right for like 3D or
4D whatever you just like make a
4D whatever you just like make a
oneliner that does the math for you
this is
fine if you really want to go fast I've
fine if you really want to go fast I've
done stuff where I've cashed RNG before
done stuff where I've cashed RNG before
you don't need to do that
probably I understand why you do it
probably I understand why you do it
though like you like to have this sytax
though like you like to have this sytax
here and I really like the syntax as
here and I really like the syntax as
well uh it's not worth it though what
well uh it's not worth it though what
you you do is you just do like int Adder
you you do is you just do like int Adder
equals offset and then you do cards in
equals offset and then you do cards in
Hand of
Hand of
offset there's one extra
line for
States yeah so this init function will
States yeah so this init function will
get a little simpler these pointers will
get a little simpler these pointers will
get
simpler this will get simpler because
simpler this will get simpler because
you won't have to do this type of
you won't have to do this type of
initialization you won't have to do
this
this
200k never able to get 1
200k never able to get 1
million we'll do some perf optimization
million we'll do some perf optimization
if you
if you
want it's starting to get a little bit
want it's starting to get a little bit
late
late
tonight and uh I still got to go do my
tonight and uh I still got to go do my
weights for the
day I can give you some tips on stuff
day I can give you some tips on stuff
actually I'll tell you what I can do
actually I'll tell you what I can do
let's let's uh fix this PR we'll PR this
let's let's uh fix this PR we'll PR this
and then I can I mean my gym is
and then I can I mean my gym is
literally just in the garage so if you
literally just in the garage so if you
don't mind I'll just talk you through on
don't mind I'll just talk you through on
uh on Discord I'll talk you through the
uh on Discord I'll talk you through the
optimizations if you want to do them
optimizations if you want to do them
does that sound
good just using copy paste hypers that's
good just using copy paste hypers that's
fine I'll talk you through optim and
fine I'll talk you through optim and
I'll talk you through the steps I mean
I'll talk you through the steps I mean
you know part of the deal here is if
you know part of the deal here is if
you're contributing stuff to puffer lib
you're contributing stuff to puffer lib
I share uh some of the stuff I know
I share uh some of the stuff I know
right that's kind of part of the deal is
right that's kind of part of the deal is
that you get to learn some cool
stuff and try to be good to the
stuff and try to be good to the
contributors here as best I
can yeah this type of stuff here is and
can yeah this type of stuff here is and
this isn't slow but this will annoy you
this isn't slow but this will annoy you
big brain stuff I
big brain stuff I
mean I've been doing RL for a long
mean I've been doing RL for a long
time to be fair the simulator stuff the
time to be fair the simulator stuff the
high perf simulator stuff is relatively
high perf simulator stuff is relatively
new but like the simulator stuff in
new but like the simulator stuff in
general is not I've been building Sims
general is not I've been building Sims
for a long
for a long
time really one giant Sim with neural
time really one giant Sim with neural
MMO but you get the idea
yeah all these Loops actually will get
yeah all these Loops actually will get
easier
these are actually going to be way
these are actually going to be way
slower than they would be with
1D Yep this is the trick that I
1D Yep this is the trick that I
use in
use in
hand soon as you have the new PR you let
hand soon as you have the new PR you let
me
me
know just looking through this
still this is good that you were able to
still this is good that you were able to
hack through this so quickly
[Music]
print
F you left
F you left
uh oh
this uh there's a text format thing in
this uh there's a text format thing in
RB so you don't have to use S printf
RB so you don't have to use S printf
RB has a really nice text format so you
RB has a really nice text format so you
don't have to do
this don't worry about it now just make
this don't worry about it now just make
the pr so I can put this
sorry no
worries this is cool
you know I've kind of wanted to do one
you know I've kind of wanted to do one
of these types of
of these types of
things it wouldn't be that
hard but
hard but
um I don't know about the rendering how
um I don't know about the rendering how
fast we can get software render
Twitter ridiculous
did they change
this yeah this is a fine change
yeah that's
yeah that's
fine good change
locks
you still easy that is random opponent
I think those are the only easy to Port
I think those are the only easy to Port
environments for now we'll change the m
environments for now we'll change the m
in it in a
bit see there are a few Discord things
bit see there are a few Discord things
with this
right oops that's
right oops that's
DMS let me just answer an email on the
DMS let me just answer an email on the
side while you finish that real quick
figur this out real quick where
uh he is my freaking old gmail as why
we got potentially a new project with
this
e
e e
meetings meetings and more
meetings meetings and more
meetings too much stuff to
schedule we're free
Wednesday Thursday
cool
there we
go off for Li
yeah you let me know as soon as this is
yeah you let me know as soon as this is
fixed and we'll merge this and then
fixed and we'll merge this and then
we'll do uh we'll go from there actually
we'll do uh we'll go from there actually
here while you're finishing that I'm
here while you're finishing that I'm
just going to go use the restroom real
just going to go use the restroom real
quick I'm going to get ready uh that way
quick I'm going to get ready uh that way
we'll merge this I'll go to the gym I'll
we'll merge this I'll go to the gym I'll
help you fix I'll help you fix all the
help you fix I'll help you fix all the
other stuff and that'll be the day once
other stuff and that'll be the day once
but hey we'll have two new environments
but hey we'll have two new environments
online today plus a bunch of fixes plus
online today plus a bunch of fixes plus
like the one very fundamental thing so
like the one very fundamental thing so
that's pretty good progress we be right
back
e
e e
okay why do I have my freaking email on
okay why do I have my freaking email on
screen not like it
screen not like it
matters but whatever for
why damn I have to not have my stupid
why damn I have to not have my stupid
emails open on here because I keep
emails open on here because I keep
clicking the tabs just out of like just
clicking the tabs just out of like just
reflexively doesn't really matter
reflexively doesn't really matter
but it's not my business
one oh I know I can in the meantime I
one oh I know I can in the meantime I
can try to find the uh the memory
can try to find the uh the memory
leak in your
environment one two three four five six
environment one two three four five six
seven eight
CX plus the client is
CX plus the client is
nine okay that's one
free
then 2 three
then 2 three
four 5 six
four 5 six
78 that looks good to
78 that looks good to
me board X board y long as connect did
y actions off St rewards
y actions off St rewards
yeah free connected and that looks like
yeah free connected and that looks like
there shouldn't be any memory Lakes are
there shouldn't be any memory Lakes are
we sure that there are
we sure that there are
any you loading a
texture you're not on you're not loading
texture you're not on you're not loading
a
texture oh I see it right here
texture oh I see it right here
right this is what we
have
168 oh it tells you where this
168 oh it tells you where this
is right
here I bet you're not calling the right
here I bet you're not calling the right
method
you called the wrong method you called
you called the wrong method you called
free Connect 4 instead of free
free Connect 4 instead of free
allocated you see you called the
allocated you see you called the
allocate version and then you call this
free I'll fix that
[Music]
yeah yeah yeah yeah yeah
boom three leaks
fixed level 25 Magikarp
there you go that's fixed
yeah the reason I build with those flags
yeah the reason I build with those flags
the build local Flags is it actually
the build local Flags is it actually
will tell you exactly where the leaks
will tell you exactly where the leaks
are they're your leaks you can see right
are they're your leaks you can see right
here that I saw it just like this so
here that I saw it just like this so
then I went and like I looked and I said
then I went and like I looked and I said
oh I bet you're not calling this free
method that's
fixed
for
e e
h
that's
cool e
is this quite
good you just write C
we'll have to do something like this for
we'll have to do something like this for
it is the one obnoxious
it is the one obnoxious
thing not that
bad wait how does it have a level 25
bad wait how does it have a level 25
Magikarp that doesn't it evolve
wait I just realized it evolves at level
wait I just realized it evolves at level
huh I was just looking at that and I was
huh I was just looking at that and I was
like wait a second Magikarp evolves
like wait a second Magikarp evolves
early
can you link stuff
how did it get a level 20 how did it get
how did it get a level 20 how did it get
a level 25 magikarps what I want to know
I mean you should be able to pull
I mean you should be able to pull
logs by now you should be able to pull
logs by now you should be able to pull
videos or something
videos or something
should like accept the
should like accept the
state definitely some stuff that could
state definitely some stuff that could
be done there
and I grab freaking
Zoom screw it we not use zoom because
Zoom screw it we not use zoom because
it's stupid
log the agent parties to w
log the agent parties to w
b huh
I mean it's like hitting the back button
I mean it's like hitting the back button
is all that it can be
right where's this
PR I want to see they want to play the
PR I want to see they want to play the
fancy new
fancy new
environment they want to play with the
environment they want to play with the
new environment
here how's this PR going Spencer I can I
here how's this PR going Spencer I can I
can do this tomorrow if you want I can
can do this tomorrow if you want I can
just talk you through optimizations now
just talk you through optimizations now
depends what you you want to
do switch Train by accident or there's a
do switch Train by accident or there's a
bug the wild battle disable
code how would that change anything it
code how would that change anything it
doesn't know any
doesn't know any
attacks it would have to be switch
attacks it would have to be switch
trained
right struggle win no way
no way it would die
first it would die before it runs out of
first it would die before it runs out of
pp right because it would have to go
pp right because it would have to go
through all the splash
through all the splash
PP I don't even think is there even like
PP I don't even think is there even like
a m that doesn't know any
a m that doesn't know any
attacks in gen one and I thought doesn't
attacks in gen one and I thought doesn't
strugle also take yeah Metapod okay but
strugle also take yeah Metapod okay but
doesn't struggle also take 25% of your
doesn't struggle also take 25% of your
HP um per attack in gen
one
one
yeah you see I did actually do my
yeah you see I did actually do my
research on Pokemon when I started this
research on Pokemon when I started this
stuff uh combo of it could be but
stuff uh combo of it could be but
like I would very very highly doubt it I
like I would very very highly doubt it I
think it randomly switching Pokemon is
think it randomly switching Pokemon is
way more
likely I would think that's way more
likely well while I'm waiting for
likely well while I'm waiting for
Spencer here I'm going to
Spencer here I'm going to
uh it'll be so awesome probably not
uh it'll be so awesome probably not
repeatable
that'd be pretty funny it's okay we'll
that'd be pretty funny it's okay we'll
run
carbs what's Triple Triad Spencer's been
carbs what's Triple Triad Spencer's been
making this cool environment that uh I
making this cool environment that uh I
want to play he's working on the pr
want to play he's working on the pr
right now it's like this card game from
right now it's like this card game from
Final
Fantasy welcome Ramy
Fantasy welcome Ramy
so he built this over the weekend which
so he built this over the weekend which
which is pretty
cool he also built Connect
cool he also built Connect
4 so we've got a fifth environment on
4 so we've got a fifth environment on
here now we can do like
this nearing the Finish Line okay
you don't do any web stuff right right
you don't do any web stuff right right
Romy I've been trying to figure out
Romy I've been trying to figure out
oops I've been trying to figure out if
oops I've been trying to figure out if
this is worth playing
with I mean I can probably just try
with I mean I can probably just try
something real quick
something real quick
right you
right you
do what do you think of this stuff
do what do you think of this stuff
do uh cuz right now I'm just building
do uh cuz right now I'm just building
stuff with M script in and then I'm just
stuff with M script in and then I'm just
copying the like wasum files into a repo
copying the like wasum files into a repo
which is really gross and it's going to
which is really gross and it's going to
blo my repo very quickly I was thinking
blo my repo very quickly I was thinking
I could do this and I could just build
I could do this and I could just build
right from puffer
Leb time box it for a
Leb time box it for a
day time
day time
box time box what's the time box
oh time box that's
funny I just try this right now
funny I just try this right now
I'm waiting for H Spencer
should be resolved bashing head against
should be resolved bashing head against
get I'm going to be honest with you if
get I'm going to be honest with you if
you ask me how to revise a a p and get I
you ask me how to revise a a p and get I
would not be able to tell
you I'd not be able to tell
you I'd not be able to tell
you symbols
I don't think we need this
right I just do like
right I just do like
main
void for
still not
still not
good what's not
good for
how do I include stuff with
bun why not use
wasum I do use
wasum I'm just trying to see if this
wasum I'm just trying to see if this
would be cleaner cuz right now I've got
would be cleaner cuz right now I've got
a bunch of bash scripts right that are
a bunch of bash scripts right that are
committing web assembly builds and I
committing web assembly builds and I
have to commit the Wason builds to the
have to commit the Wason builds to the
repo as
well I guess you're right that it
well I guess you're right that it
probably well I don't know when it
probably well I don't know when it
builds them I don't know if you have to
builds them I don't know if you have to
I think it would does it build them live
I think it would does it build them live
I don't know
I'm just playing with this I already
I'm just playing with this I already
have it working in wassom like what do
have it working in wassom like what do
you think
you think
here this is all web
assembly
wome e
this is a
this is a
absolutely disgusting
absolutely disgusting
language R.H not
found uh
hey big fan of your work
welcome I'm currently waiting for a PR
welcome I'm currently waiting for a PR
and messing around seeing if I can make
and messing around seeing if I can make
this a little
this a little
cleaner I got all these M's
cleaner I got all these M's
online and I'm just trying to clean them
online and I'm just trying to clean them
up buffer GG is fire thank
up buffer GG is fire thank
you to be fair I only Built the top two
you to be fair I only Built the top two
of these the other three are by
of these the other three are by
contributors I guess I touched up the uh
contributors I guess I touched up the uh
the code for these two
the code for these two
but it's been going well this Banner is
but it's been going well this Banner is
outdated as well we're at
1.1 I'm very happy with that I gota I'm
1.1 I'm very happy with that I gota I'm
like completely uninspired with the
like completely uninspired with the
Twitter lately I got to come up with a
Twitter lately I got to come up with a
few good things to tweet so we hit
few good things to tweet so we hit
5K Smith machine's fairly safely
5K Smith machine's fairly safely
downstairs
downstairs
star the puffer yes indeed Star Puffer
star the puffer yes indeed Star Puffer
lib it helps out a ton this is all open
lib it helps out a ton this is all open
source after
all how do you link
libraries open source is indeed the way
libraries open source is indeed the way
thank you for your service of
thank you for your service of
course we're going to fix this mess that
course we're going to fix this mess that
RL is in we're going to absolutely fix
RL is in we're going to absolutely fix
this
mess we're not fixing the mess that
mess we're not fixing the mess that
JavaScript is in some things you don't
JavaScript is in some things you don't
need a doctor you need a
need a doctor you need a
priest I was just messing around with
priest I was just messing around with
with this cuz bun added this C
with this cuz bun added this C
compiler and I was wondering if it would
compiler and I was wondering if it would
be easier than using M
scripton bet has the uh the rank of
scripton bet has the uh the rank of
proelite of the puffer order always ask
proelite of the puffer order always ask
he's always reminding people to star the
he's always reminding people to star the
repo and indeed it helps out a
repo and indeed it helps out a
lot cannot exercise layers of in I don't
lot cannot exercise layers of in I don't
know what the heck this is like can
know what the heck this is like can
somebody please explain to me how the
somebody please explain to me how the
heck this is a real language export
heck this is a real language export
const Open
const Open
Bracket
Bracket
symbols Open Bracket my random close
symbols Open Bracket my random close
bracket on this const
bracket on this const
equals CC of Open Bracket giant like
equals CC of Open Bracket giant like
nested data structure thing and somehow
nested data structure thing and somehow
this is supposed to be a comp a
this is supposed to be a comp a
compilation it's not a real language I
compilation it's not a real language I
refuse to believe that JavaScript is
refuse to believe that JavaScript is
real
branched off Connect 4 when I originally
branched off Connect 4 when I originally
made it but deleted some of it in the
made it but deleted some of it in the
effort branching get fight Branch git
effort branching get fight Branch git
issues fighting each
issues fighting each
other dude the easiest way is you just
other dude the easiest way is you just
make sure you don't lose your code and
make sure you don't lose your code and
you copy paste it into a new commit and
you copy paste it into a new commit and
you'd be done it's easy you just do
that hit a DSL inside of a Json object
NBD CH
NBD CH
JS it's still not a real language yo
JS it's still not a real language yo
that guy do you know how to link stuff
that guy do you know how to link stuff
with this I can't figure out how to link
with this I can't figure out how to link
uh
RB I see the docks are right
RB I see the docks are right
here right they've got docks and they
here right they've got docks and they
have libraries but
have libraries but
like how do I just link a
directory let the man work try directory
directory let the man work try directory
instead of a library
name they should be the same it's like
name they should be the same it's like
slrb right
that's the lib a version I assume that
that's the lib a version I assume that
you want the lib a
you want the lib a
right or maybe you don't maybe you want
right or maybe you don't maybe you want
like do I want this
like do I want this
version I thought I would want lib ray.
version I thought I would want lib ray.
a or whatever
a or whatever
right L
rib well when I do build
rib well when I do build
web I do I use the ray. a right lib ray.
a I mean there are all these flags and
a I mean there are all these flags and
stuff I don't know how bun does this
maybe oh I have a better
idea this is how we solve our
problems wait what this is not
the wait this is not the repo this is
the wait this is not the repo this is
not the it's got to be bigger than this
not the it's got to be bigger than this
this account
right where's the
right where's the
bun where's the bun JS thing
somebody has the handle bun
JS uh bun
JS uh bun
JavaScript somebody made like a a
JavaScript somebody made like a a
one-off
one-off
account I knew
account I knew
it so this is what we're going to
do
for e
so this is how in the modern era you get
so this is how in the modern era you get
help on things you DM them on Twitter
help on things you DM them on Twitter
and instead of spending my time I just
and instead of spending my time I just
see if they go do
it you want to modify Flags according to
it you want to modify Flags according to
the I can't see how to do
it I don't see where you link this where
it I don't see where you link this where
you add the flags
here oh
this oh here I
see fls
all right maybe there was
stuff is this an rtfm moment not
necessarily standard
necessarily standard
Joseph I don't know is
Javascript shouldn't have to be a
manual
M well
M well
do I have to separate these bloody
do I have to separate these bloody
things with
quotes do I have to like separate all
quotes do I have to like separate all
these all the good docks have been
red dude this is so dumb
I e
my hands hurt from typing this garbage
my hands hurt from typing this garbage
I'm
I'm
on
on
stupid separating command is
dumb
dumb
huh uh this thing
S assertions I guess this one doesn't
exist I don't think I need this one
what about the shell
what about the shell
file I thought you need the shell
file doesn't compile
I don't know man I I don't want to be
I don't know man I I don't want to be
wasting my time on freaking
wasting my time on freaking
JavaScript
uh Spencer still fighting the uh the pr
here I mean I can flip the order of
here I mean I can flip the order of
stuff I can go do my exercise tell you
stuff I can go do my exercise tell you
how to do the optimizations and I can
how to do the optimizations and I can
look at it after or whatever if that's
easier let's do that for now okay sounds
easier let's do that for now okay sounds
good so here's what we'll do folks uh
good so here's what we'll do folks uh
I'm going to go to the going to get some
I'm going to go to the going to get some
exercise going to help Spencer with this
exercise going to help Spencer with this
thing I'll drop in the puffer lip voice
thing I'll drop in the puffer lip voice
uh I'm going to be doing that but if
uh I'm going to be doing that but if
people want to tune in that's fine
people want to tune in that's fine
um yeah this has been pretty good I mean
um yeah this has been pretty good I mean
I had three hours of meetings today so I
I had three hours of meetings today so I
didn't have a ton of Dev time but um we
didn't have a ton of Dev time but um we
figured out how to get way cleaner scon
figured out how to get way cleaner scon
wrappers we fixed the scyon wrappers for
wrappers we fixed the scyon wrappers for
breakout and pong we got Spen thing
breakout and pong we got Spen thing
integrated we checked uh we reviewed and
integrated we checked uh we reviewed and
merged some PRS it pretty decent overall
merged some PRS it pretty decent overall
I'd say so uh where's my I'm going to go
I'd say so uh where's my I'm going to go
grab my headset and then I'll hop onto
grab my headset and then I'll hop onto
this
this
thing let me
see puffer Discord is
see puffer Discord is
public discord.gg puffer in the event
public discord.gg puffer in the event
thanks everyone start puffer lib and I'm
thanks everyone start puffer lib and I'm
going to drop on here now see yeah

Kind: captions
Language: en
okay we're
live it's been a few
days time to get back to
days time to get back to
work
work
so there's been a lot of cool stuff
so there's been a lot of cool stuff
happening with puffer over the
happening with puffer over the
weekend I actually had to take a weekend
weekend I actually had to take a weekend
off for once re charge a bit but there's
off for once re charge a bit but there's
been some cool Dev going
on lots of stuff
oh
oh
we let's
see let me see if there are any oh wow
see let me see if there are any oh wow
let's
see one to five just select this card
connect One V one card
connect One V one card
game triple okay
that's really nice two new environments
that's really nice two new environments
over the
over the
weekend from this guy here this is
awesome
awesome
and I miss anything else
nope I think we're
nope I think we're
good okay let's fix you know there's
good okay let's fix you know there's
something that's been bothering me for a
something that's been bothering me for a
while now and I'm still not entirely
while now and I'm still not entirely
sure how to fix it but I think we're
sure how to fix it but I think we're
going to do like just some incrementals
going to do like just some incrementals
on stuff until
on stuff until
um until it gets a little better there's
um until it gets a little better there's
just there's too much binding
just there's too much binding
Shenanigans happening right now there's
Shenanigans happening right now there's
like too much boiler plate that's
like too much boiler plate that's
required for these environments um it
required for these environments um it
technically it works but it's really not
technically it works but it's really not
great great so I think we're going to
great great so I think we're going to
spend a little bit of time thinking
spend a little bit of time thinking
about that today we're also going to fix
about that today we're also going to fix
the uh the RB setup for
the uh the RB setup for
stuff
well I just realized uh I don't have the
well I just realized uh I don't have the
stream overlay that's my bad there we go
stream overlay that's my bad there we go
code
I should show the card game that I was
I should show the card game that I was
looking at um because I didn't realize I
looking at um because I didn't realize I
didn't have stream on so we have this
didn't have stream on so we have this
card game here somebody has
made this is cool
made this is cool
and then I don't know where the connect
and then I don't know where the connect
4M
4M
went oh yeah here it
is couple environments and then B also
is couple environments and then B also
did the uh the ocean environments which
did the uh the ocean environments which
is pretty
is pretty
nice Definitely some
nice Definitely some
progress so the main thing I want to
progress so the main thing I want to
figure out today because I've been told
figure out today because I've been told
that the dev branch is not quite working
that the dev branch is not quite working
out of the box at the moment um
yeah so these extension modules
here I think we can
here I think we can
do to start with right
where's the
extensions
extensions
yeah right here
so if we add right
so if we add right
here like this
here like this
maybe I think we can automate this to
maybe I think we can automate this to
some extent
yeah snake pong grid like this right and
yeah snake pong grid like this right and
then we'll just do
then we'll just do
extensions
equals enion
half
dot
replace with dots like
replace with dots like
this and
then half plus pix yeah and then
then half plus pix yeah and then
includers is going to be all
includers is going to be all
this or path and extension paths like
this or path and extension paths like
so right cuz they're all going to have
so right cuz they're all going to have
the same
thing at least I think they
should so we go to extensions here why
should so we go to extensions here why
wait why did this go back to camera I
wait why did this go back to camera I
clicked
stream my
bad that was weird
all right whatever scuff stream
start okay this is kind of cool
though cuz we can
do we can remove
do we can remove
this all this stuff
this all this stuff
right then we can just do star
right then we can just do star
extensions let's see if this
works well we didn't change anything so
works well we didn't change anything so
it's not going to
it's not going to
recompile um let's just change something
uh literally just have to put a space or
uh literally just have to put a space or
something what happens if I do
this triggers
recompile it looks like it
works this
here mod
does this
does this
run does
run great stuff not entirely sure what
run great stuff not entirely sure what
you're doing but big fan well I mean to
you're doing but big fan well I mean to
be honest I'm not entirely sure what I'm
be honest I'm not entirely sure what I'm
doing at the moment either um I mean the
doing at the moment either um I mean the
key of what I'm doing at the moment is
key of what I'm doing at the moment is
I'm trying to get nice ultra high
I'm trying to get nice ultra high
performance environments for
performance environments for
training um
training um
however what's happening at the moment
however what's happening at the moment
is a bit more obnoxious and Technical
is a bit more obnoxious and Technical
essentially it just it takes too much
essentially it just it takes too much
code
code
to add new environments uh not to puffer
to add new environments uh not to puffer
Li that's easy but it takes too much
Li that's easy but it takes too much
code to like get the C environments to
code to like get the C environments to
work in
work in
Python and I'm trying to fix that I'm
Python and I'm trying to fix that I'm
trying to like cut down on boiler plate
trying to like cut down on boiler plate
so right now I just fix
so right now I just fix
this yeah so I just this extension stuff
this yeah so I just this extension stuff
you literally just have to add one line
you literally just have to add one line
here instead of having to add this
here instead of having to add this
entire block for everything so that's
entire block for everything so that's
easier for the setup uh but now the next
easier for the setup uh but now the next
thing that I actually I don't know how
thing that I actually I don't know how
I'm going to do yet but I think this is
I'm going to do yet but I think this is
a good day to figure it
out so if I go into here right actually
out so if I go into here right actually
good thing you stop by maybe this will
good thing you stop by maybe this will
jog my my thinking so like this is the
jog my my thinking so like this is the
python file it's not that much code we
python file it's not that much code we
could cut out a little bit of it
could cut out a little bit of it
maybe and then if I do
maybe and then if I do
pong. this is also very clean
pong. this is also very clean
code well it could be cleaner but for
code well it could be cleaner but for
the for the most part like the only
the for the most part like the only
stuff that's there is stuff that should
stuff that's there is stuff that should
be there right there's not really much
be there right there's not really much
boiler
boiler
plate but then the thing that bothers
plate but then the thing that bothers
me like there's this extra scyon
file and that's really
obnoxious and I really want to cut down
obnoxious and I really want to cut down
on it somehow
I mean to be fair
I mean to be fair
like most of the Jank that is in
here really most of the Jank that's in
here really most of the Jank that's in
here it's just because I have too much
here it's just because I have too much
customizability isn't it
I mean scon does take
I mean scon does take
defaults so I could technically replace
defaults so I could technically replace
some of these with defaults and
syon I'm not
syon I'm not
sure
sure
H I guess here's the thing that bothers
H I guess here's the thing that bothers
to me at the moment right
to me at the moment right
um well let let me see first if I can
um well let let me see first if I can
get rid of this type def
get rid of this type def
here let me see if I can get rid of this
here let me see if I can get rid of this
type
type
def I'm not happy with this type
def I'm not happy with this type
death what happens if I just do
this does it still
work what happened if I do
this no
this no
config what did I name
it
it
uh we have to also standardize names but
uh we have to also standardize names but
that's like that's no big deal whoops
render
mode okay I guess this thing didn't get
mode okay I guess this thing didn't get
a assigned render
a assigned render
mode what we just do
mode what we just do
this
this
ah here we
go plays the game this is an untrained
go plays the game this is an untrained
policy
policy
obviously so if we don't actually use
obviously so if we don't actually use
any of the information from this
any of the information from this
struct then we only need the type def so
struct then we only need the type def so
that cuts down on a
that cuts down on a
lot and we only need the
lot and we only need the
signatures for this
signatures for this
stuff basically it looks like anything
stuff basically it looks like anything
that you're going to use any function
that you're going to use any function
you're going to use including the struct
you're going to use including the struct
initializer you need a full
definition things that bother me at the
moment I don't mind having to have a
moment I don't mind having to have a
scyon
scyon
wrapper on its own necessarily
wrapper on its own necessarily
right with
height make client
you have to save these variables in
you have to save these variables in
because of the way that we're doing make
because of the way that we're doing make
client here don't
you I kind of want to like diagram this
you I kind of want to like diagram this
or something I'm trying to think how I
or something I'm trying to think how I
want to think about
this in some ways some of the work I'm
this in some ways some of the work I'm
going to be doing right now is going to
going to be doing right now is going to
be a little bit boring but in some ways
be a little bit boring but in some ways
it's very
important like this is a good thing to
important like this is a good thing to
watch cuz like what I'm doing right here
watch cuz like what I'm doing right here
this is what happens when I get really
this is what happens when I get really
stuck on something for a while on how to
stuck on something for a while on how to
like make something
like make something
simpler and it kind of just like when I
simpler and it kind of just like when I
hit something like this it kind of just
hit something like this it kind of just
keeps nagging at me and nagging at me
keeps nagging at me and nagging at me
until I figure out a way to simplify
until I figure out a way to simplify
it you
know
so maybe I'll just like make
so maybe I'll just like make
some
some
text
like
like
problem have to
problem have to
cash extra
properties in Python in it
properties in Python in it
solution would be like somehow
solution would be like somehow
restructure renderer to not in it RB
restructure renderer to not in it RB
until first
call then
call then
we
we
uh and init it in
uh and init it in
the
the
salt setup
that means that you're going to have to
that means that you're going to have to
make a render
make a render
instance in every
environment but that's kind of fine
environment but that's kind of fine
because this is only for the python
because this is only for the python
binding version of
it
right it's probably fine
right it's probably fine
that should never really require a bunch
that should never really require a bunch
of data
right well yeah because it can load
right well yeah because it can load
textures
right it can load
textures okay that's tricky um
huh so I'm trying to think with this
huh so I'm trying to think with this
client here like the
client here like the
issue with this make
issue with this make
function I kind of designed this the way
function I kind of designed this the way
that I would want it to be in C where
that I would want it to be in C where
you just have one
you just have one
function that creates the uh the
client but now that I'm thinking about
client but now that I'm thinking about
it right
like why have a function here at
like why have a function here at
all what's the overall aim I just see
all what's the overall aim I just see
that the overall aim here well it
that the overall aim here well it
depends what you mean the overall aim of
depends what you mean the overall aim of
puffer lib and of my work is to make
puffer lib and of my work is to make
reinforcement learning fast and simple
reinforcement learning fast and simple
and have it on a lot of different
and have it on a lot of different
environments if you want a fun playable
environments if you want a fun playable
demo we have these guys uh these ones
demo we have these guys uh these ones
online right this is like a fancier
online right this is like a fancier
environment this is like a miniature
environment this is like a miniature
version of Dota or League of
version of Dota or League of
Legends right we've also got simpler
Legends right we've also got simpler
stuff we've got snake you can play
stuff we've got snake you can play
against the AIS these AIS are kind of
against the AIS these AIS are kind of
half
half
decent and then we've got you know these
decent and then we've got you know these
ones where we don't have AIS uploaded
ones where we don't have AIS uploaded
yet but soon we will upload uh you know
yet but soon we will upload uh you know
some trained AIS for these
some trained AIS for these
but for now you just play them
but for now you just play them
yourself but yeah all these are very
yourself but yeah all these are very
very high performance games we're not
very high performance games we're not
just going to do games either we're
just going to do games either we're
branching out into other spaces games
branching out into other spaces games
are just a really nice easy initial test
are just a really nice easy initial test
set but um I mean the two tenants like
set but um I mean the two tenants like
the two things I focus on a lot with
the two things I focus on a lot with
puffer I focus on speed and I focus on
puffer I focus on speed and I focus on
Simplicity and we're crushing it on
Simplicity and we're crushing it on
speed but uh Simplicity needs to be
speed but uh Simplicity needs to be
there and it's like it's simpler than
there and it's like it's simpler than
everything else out there by a mile at
everything else out there by a mile at
the moment but it's not it's not there
the moment but it's not it's not there
yet you know like there's still a few
yet you know like there's still a few
places that have a little bit too much
places that have a little bit too much
bloat for my
liking you know I'm really starting to
liking you know I'm really starting to
wonder
wonder
why I have this make function in the
why I have this make function in the
first place you
know so what happen happens if
um what happens if I just don't make
um what happens if I just don't make
these
functions
right cuz you can just just initialize
right cuz you can just just initialize
the struct on its
own hold on is this
own hold on is this
crazy or can I just like be even
crazy or can I just like be even
simpler because like this a nit function
simpler because like this a nit function
here
right well wait you do have to allocate
right well wait you do have to allocate
an assign
right you have to allocate and assign
okay so the struct syntax this is why I
okay so the struct syntax this is why I
did this
um the struct syntax only works if this
um the struct syntax only works if this
is variable is going to be on the stack
is variable is going to be on the stack
right there's no way to do uh like
right there's no way to do uh like
allocate and assign in one step
but this is such a gross function if you
but this is such a gross function if you
think about it
think about it
right like look how terrible this is
right like look how terrible this is
it's like you put a whole bunch of
it's like you put a whole bunch of
variables into a function just to
variables into a function just to
allocate this thing and then assign
allocate this thing and then assign
them and yeah there's like a little bit
them and yeah there's like a little bit
of extra stuff but
what is good about this
like isn't this just always dumb
hang on
this is disgusting we don't want this
this is zigg
I'm pretty sure this just doesn't
exist I'm pretty sure I checked this
exist I'm pretty sure I checked this
before and it doesn't
exist for
um is this reasonable or is this
stupid for
I'm trying to think if this is a
I'm trying to think if this is a
reasonable or
not this is ultimately like an aesthetic
not this is ultimately like an aesthetic
choice but I think it's
important well welcome YouTube
important well welcome YouTube
folks any low-l devs are welcome to
folks any low-l devs are welcome to
weigh in this portion is straight
weigh in this portion is straight
engineering there's very little RL
engineering there's very little RL
involved in uh in a couple of these
involved in uh in a couple of these
decisions I'm essentially I'm just
decisions I'm essentially I'm just
trying to figure
trying to figure
out we have like an initialization
out we have like an initialization
function that's just called a billion
function that's just called a billion
times and it's God
times and it's God
awful um what's happening at the moment
awful um what's happening at the moment
let me sort of outline this problem for
let me sort of outline this problem for
you so we have this initializer function
you so we have this initializer function
right CU you can see the the struct has
right CU you can see the the struct has
to go on the
to go on the
Heap so we initialize here and then we
Heap so we initialize here and then we
set all these variables but you end up
set all these variables but you end up
with this god- awful function
with this god- awful function
signature that's essentially just like
signature that's essentially just like
this initializer and it's made really
this initializer and it's made really
really bad because there are no default
really bad because there are no default
values in C so all the constants can't
values in C so all the constants can't
even be set to reasonable defaults or
even be set to reasonable defaults or
anything okay and then it gets worse
anything okay and then it gets worse
because there has to be a version that
because there has to be a version that
allocates all the memory for these and
allocates all the memory for these and
then calls the function because there's
then calls the function because there's
a version of it where you pass memory
a version of it where you pass memory
buffers from Python and there's a
buffers from Python and there's a
version where you have to allocate the
version where you have to allocate the
buffers yourself in C and then this
buffers yourself in C and then this
duplicates the signature but then it
duplicates the signature but then it
gets even
gets even
worse because you have the exact same
worse because you have the exact same
thing in cython right and you have to
thing in cython right and you have to
copy the header and then you have to
copy the header and then you have to
copy it again here and then you have to
copy it again here and then you have to
copy it again here and then once you're
copy it again here and then once you're
done with all this even you haven't felt
done with all this even you haven't felt
stupid enough by now for having written
stupid enough by now for having written
this God awful
this God awful
code you have to do it again in Python
code you have to do it again in Python
with the initializer here and then you
with the initializer here and then you
have to do it again with the
have to do it again with the
initialization
initialization
here so I want to undb this thing as
here so I want to undb this thing as
much as
possible and it's kind of
possible and it's kind of
tricky because this thing has to be able
tricky because this thing has to be able
to be initialized in two different ways
to be initialized in two different ways
right you have to be able to uh
right you have to be able to uh
initialize this thing in C where the C
initialize this thing in C where the C
does the memory allocation for you or
does the memory allocation for you or
python where python does the memory
python where python does the memory
allocation for certain variables for you
allocation for certain variables for you
and then all these things have to be
and then all these things have to be
accessible from both C and Python
accessible from both C and Python
Meaning that you have to expose all
Meaning that you have to expose all
these things somehow to the functions
but maybe this initializer here could be
but maybe this initializer here could be
saved a little bit right maybe we could
saved a little bit right maybe we could
save a little bit of this
I don't think we can expose the struct
I don't think we can expose the struct
directly to python right yeah we can't
directly to python right yeah we can't
expose or is this a
thing hold on can scyon directly here
thing hold on can scyon directly here
let me just start a
let me just start a
new oops
and scon directly expose a c struck
and scon directly expose a c struck
without going through an
without going through an
intermediate uh scyon
intermediate uh scyon
class don't need to be able to do
class don't need to be able to do
anything other than all scyon w c
anything other than all scyon w c
functions
struct
Okay C
def but can we make
def but can we make
your
Struck from
python I think this is no yeah you
can't turns a pointer to a struct
this is not
this is not
bad okay this is not bad so instead of
bad okay this is not bad so instead of
having to wrap this in a scyon
class like we don't have to wrap the
class like we don't have to wrap the
whole thing in a class right we just
whole thing in a class right we just
need a
pointer we just need a pointer
picky
tricky that doesn't help us though does
tricky that doesn't help us though does
it we need to be able to directly call
it we need to be able to directly call
The Constructor
The Constructor
see what I'm trying to figure out is if
see what I'm trying to figure out is if
there's a way that we can
there's a way that we can
um like if in scon if there were a way
um like if in scon if there were a way
to directly make the
to directly make the
struct then we wouldn't need to have
struct then we wouldn't need to have
this extra
this extra
wrapper I mean I can technically do it
wrapper I mean I can technically do it
with CFI but that's really gross
right let's
right let's
think put this another way way is there
think put this another way way is there
a method scyon or otherwise to
a method scyon or otherwise to
cleanly
cleanly
um initialize
um initialize
structs C strs in Python
yeah this is not
it yeah this is you see the problem with
it yeah this is you see the problem with
this
this
right like you declare the struct and
right like you declare the struct and
then in scyon you have to redeclare the
struct and then here there's like
struct and then here there's like
another declaration
yeah this is
garbage C
types okay hold on what's
this worst case one could write a code
this worst case one could write a code
genescript
genescript
and just this just Embraces the yeah I
and just this just Embraces the yeah I
don't like that I think that's more
don't like that I think that's more
obscurity that's like I'd rather have it
obscurity that's like I'd rather have it
be explicit and like spoiler plate then
be explicit and like spoiler plate then
have to have
have to have
that I'm looking at C types here doesn't
that I'm looking at C types here doesn't
tiny grad do
tiny grad do
this or not tiny grad well yeah t
this or not tiny grad well yeah t
whatever the
whatever the
company this is reasonable
here sacrifices
performance C types is less than less
performance C types is less than less
efficient why is it less efficient is
efficient why is it less efficient is
the underlying struct not in C and I not
the underlying struct not in C and I not
call C methods on this
struck manages
data C
data C
provides pure python that provides
provides pure python that provides
Dynamic
bindings
bindings
okay each time you call a c function
okay each time you call a c function
checks
checks
types syon compiles directly to
types syon compiles directly to
C runtime type
C runtime type
checks syon compiles everything down to
checks syon compiles everything down to
C code with static type
checks how you can do
that I don't like this either as the
that I don't like this either as the
thing
like man the bindings thing is so
like man the bindings thing is so
obnoxious because like
I def okay so the issue with like if you
I def okay so the issue with like if you
do like pbind or the C python API right
do like pbind or the C python API right
then you clutter your nice C code with
then you clutter your nice C code with
garbage python API stuff and if you put
garbage python API stuff and if you put
this stuff in Python then you clutter
this stuff in Python then you clutter
your nice python with like garbage API
your nice python with like garbage API
stuff it really seems like the only
stuff it really seems like the only
thing that is reasonable is to have the
thing that is reasonable is to have the
intermediate layer explicitly be an
intermediate layer explicitly be an
intermediate layer which is what scon
intermediate layer which is what scon
gives
gives
you it's just that it has a little bit
you it's just that it has a little bit
more boiler PL than I would
more boiler PL than I would
like because it's not able to read stuff
like because it's not able to read stuff
directly from header files
right like there's no reason that scon
right like there's no reason that scon
shouldn't be able to read types from
shouldn't be able to read types from
like directly from the source code right
Pon
Pon
requires you
requires you
to
redeclare
redeclare
existing H files it seems like
existing H files it seems like
it oh did this get stuck look it's
it oh did this get stuck look it's
literally stuck that's
funny uh but it's not going to have the
funny uh but it's not going to have the
context hold
on able
on able
to get these from let see there are no
to get these from let see there are no
way to
way to
Auto declare
chat tripity is
chat tripity is
broke CH jity is broke
cdef exter from
Star doesn't automatically parse header
Star doesn't automatically parse header
cffi automatic bindings for C
cffi automatic bindings for C
functions cffi can directly parse C
functions cffi can directly parse C
header files to generate python
header files to generate python
accessible
bindings I
bindings I
welcome we're currently trying to make
welcome we're currently trying to make
puffer lib
puffer lib
simpler at least the uh the bindings
simpler at least the uh the bindings
layer
what on Earth is
this this is
terrible and it drops performance
literally writing code in string this is
awful this it's like whoever this should
awful this it's like whoever this should
did this should feel bad about
did this should feel bad about
themselves for
this C
parser generate the scon compatible pxd
files well that's interesting
so actually this that answer from before
so actually this that answer from before
might be reasonable if there's if there
might be reasonable if there's if there
are existing
are existing
tools let's look at these two first real
tools let's look at these two first real
quick I'm not I don't know if these are
quick I'm not I don't know if these are
going to be a good
idea for
what does this
do the other one is
this see types
this see types
gen this is a way smaller project
okay this is kind of
interesting I still don't know if this
interesting I still don't know if this
is a good idea though because like
the types
h
I mean just I me really just using it as
I mean just I me really just using it as
bindings but the okay there's an alter
bindings but the okay there's an alter
there's another thing I have to think
there's another thing I have to think
about here which is really nice right so
about here which is really nice right so
the other big benefit of scyon is
the other big benefit of scyon is
incremental
porting yeah this is garbage
advice
um I think scyon is the right
um I think scyon is the right
solution and it's mainly because it lets
solution and it's mainly because it lets
you incrementally port stuff which is
you incrementally port stuff which is
really really
really really
valuable makes puffer Li so much easier
valuable makes puffer Li so much easier
for people so let's say that we're going
for people so let's say that we're going
to get guaranteed we're doing we're
to get guaranteed we're doing we're
keeping scon right guaranteed we're
keeping scon right guaranteed we're
keeping
keeping
scon
um can we autogenerate the pxd somehow
okay this is what we're
looking for
didn't handle
anything looks like there isn't anything
anything looks like there isn't anything
for this it really looks like there
for this it really looks like there
isn't
anything all the information that is
anything all the information that is
needed
yeah this is okay so this is directly
yeah this is okay so this is directly
scon
here
here
oh well this is what we want right so it
oh well this is what we want right so it
seems like there are actually scyon
users and this is a
well this is a small Fork of
well this is a small Fork of
something a friendly
Fork what's this
Fork what's this
so created
so created
scripts auto
wrap py pars or to parse definitions for
this is
updated
so let's say that we got this to work
so let's say that we got this to work
right
then this would what would this
then this would what would this
remove this would remove all of uh where
remove this would remove all of uh where
is
is
it no this would remove like this boiler
it no this would remove like this boiler
plate at the
top and also wait there's
top and also wait there's
more it would give you the full header
more it would give you the full header
of
of
structs so instead of having this right
structs so instead of having this right
this could just be a struct
this could just be a struct
initialization and then I would be able
initialization and then I would be able
to remove this
method the only thing I'm not sure about
method the only thing I'm not sure about
is if um
if I initialize a struct from scon like
if I initialize a struct from scon like
this
right does it stay on the Heap what
right does it stay on the Heap what
happens let me let's figure that out
happens let me let's figure that out
real
quick for
oh I think this is nice
right this is
allocated if you declare the struct as a
allocated if you declare the struct as a
local
variable okay so this then this maps to
variable okay so this then this maps to
a
a
heap this is on the Heap as a class
heap this is on the Heap as a class
variable
interesting
um does this have to be a pointer for
um does this have to be a pointer for
any
reason there's no reason this has to be
reason there's no reason this has to be
a pointer right
okay this is amazing this is exactly
okay this is amazing this is exactly
what we want but
thenu is
thenu is
SC from
I don't know if this is true we need to
I don't know if this is true we need to
test
test
this yeah we need to test this to see
this yeah we need to test this to see
for
for
sure this is very important because if I
sure this is very important because if I
can get this syntax to work then I have
can get this syntax to work then I have
a way of doing this that's very very
a way of doing this that's very very
clean but this is the type of stuff we
clean but this is the type of stuff we
have to play around with it's kind of
have to play around with it's kind of
funny you know cuz puffer Li it ends up
funny you know cuz puffer Li it ends up
being very very simple but like this is
being very very simple but like this is
the type of stuff that I fight with like
the type of stuff that I fight with like
I you have to fight to maintain the
I you have to fight to maintain the
simplicity I'm going to go use the
simplicity I'm going to go use the
restro from real quick I'll be back in a
restro from real quick I'll be back in a
minute and then uh we'll keep going on
minute and then uh we'll keep going on
this I think I'll make like a little
this I think I'll make like a little
test and I'll see if I can figure some
test and I'll see if I can figure some
stuff
out
e
e e
all right
I think what we're going to do for
I think what we're going to do for
this going make the little scyon
test there side test
wa we just need
this
Bar
Bar
B
B
okay and then we can just
okay and then we can just
do do we need anything for
do do we need anything for
this we'll see in a second
test.
pyx see Stern from test.
pyx see Stern from test.
H test.
H test.
H type def
H type def
struct
struct
Bo like
this class
there we
go
t.p from
t.p from
DOT
DOT
test uh this needs to be side test I
forgot test
the heck what happened oh
text
text
hi from. site test
hi from. site test
import s
baral 1 F
baral 1 F
two
two
PR
okay basically what I want to figure out
okay basically what I want to figure out
is uh if I want to figure out how the
is uh if I want to figure out how the
scon binding works because it's going to
scon binding works because it's going to
affect how I do
affect how I do
this so and I want to be absolutely sure
this so and I want to be absolutely sure
that this works before I I commit to
that this works before I I commit to
like this is a pretty substantial
like this is a pretty substantial
refactor I mean I'll do it on one
refactor I mean I'll do it on one
environment for first just to be sure
environment for first just to be sure
but like um if this works it will save
but like um if this works it will save
us a lot and then if the auto bindings
us a lot and then if the auto bindings
gen works on top of that then this
gen works on top of that then this
basically becomes trivial to do the
basically becomes trivial to do the
intermediate layer for uh scyon python
intermediate layer for uh scyon python
which would make it really nice for
puffer make stuff easy for people very
puffer make stuff easy for people very
very easy for people
test
test
Flash
test
oops test slash test up high
let's sign
test and test.
test and test.
IX
okay test
okay test
cool and let's figure out what's going
cool and let's figure out what's going
wrong here
can not select attribute of incomplete
can not select attribute of incomplete
type
bo uh this is fine we'll just do
bo uh this is fine we'll just do
death where is
it BL
bar now convert Fu to python object
uh no wait that should work because it's
uh no wait that should work because it's
syon cannot convert
Fu to python object
interesting maybe this should just be
interesting maybe this should just be
like this
far
as okay that's something right
cannot
import
uninspected
okay Bar B
Bar
Bar
B
Bar damn
it okay no I attribute
it okay no I attribute
bar let's figure
out uh right so we just have to do we
out uh right so we just have to do we
have to just make properties
here
bar why is it making Setters that's
bar why is it making Setters that's
disgusting
there we go so let's see what this has
there we go so let's see what this has
done
um the main thing is we got this
um the main thing is we got this
initializer syntax
initializer syntax
here so this is an external struct
right it had to be redeclared like this
but then we were able to use this
but then we were able to use this
initializer
syntax what about
syntax what about
quars can we just do
quars yeah I just do like star args star
quars compile time keyword arguments
quars compile time keyword arguments
must be explicit
it uh
okay I mean that makes
okay I mean that makes
sense anything I can do to get around
sense anything I can do to get around
this
compile time keyword arguments must be
compile time keyword arguments must be
hold
hold
on what if we just don't do keyword ARS
on what if we just don't do keyword ARS
how's
this
keywords huh
let me see if there's a work around for
let me see if there's a work around for
this I understand what it's
saying
nope so you still have to do um
you still have this
Constructor
right well hold
on let me
can I just import the
can I just import the
struct no you can't directly import the
struct no you can't directly import the
struct you can only import like a class
can only import the
class let me go get this autogen tool
class let me go get this autogen tool
just to make sure I'm not
just to make sure I'm not
completely uh on the
wrong train
wrong train
here there pit package for this
thing yeah there is okay so
Auto pxd infile out
file all
file all
right scon pxd from a
header Auto PX
d test. h test. i
d all
d all
right
pxd look at that
let's add something to this like um here
let's add something to this like um here
we'll make
we'll make
this in quux of
this in quux of
five or
five or
two void test and we'll do what was it
two void test and we'll do what was it
int
test
turn
turn
bar this will be what it
bar this will be what it
bass
bass
floats
floats
float
float
times there there a decent little test
right and
right and
test okay so this generates your headers
test okay so this generates your headers
right
my
my
X how do we use
X how do we use
pxd XD
class declaration.
class declaration.
pxd not the pyx
how do we include
this using
cimport
cimport
from I
test I assume these are not supposed to
test I assume these are not supposed to
have the
same the same name right
my file. PX my file. pxd
well what the hell is all
this H files are
okay see import
uh okay so this is including
let's see if we figure this
let's see if we figure this
out okay this is better
let's let's see what happens I think
let's let's see what happens I think
that this is going to be weird but we'll
see
[Music]
[Music]
bar just finished watching your thesis
bar just finished watching your thesis
defense wanted to say thank you for POS
defense wanted to say thank you for POS
posting your thesis was very accessible
posting your thesis was very accessible
for me being a lay person give me a lot
for me being a lay person give me a lot
to think about when I present my
to think about when I present my
eventual defense still in undergrad
eventual defense still in undergrad
thank you if you want to get like a good
thank you if you want to get like a good
overview of RL in general I posted um it
overview of RL in general I posted um it
didn't get as much attention but I think
didn't get as much attention but I think
I did at least as well as my thesis with
I did at least as well as my thesis with
the delivery of it uh there's this like
the delivery of it uh there's this like
RL Iceberg video just on the main
RL Iceberg video just on the main
Channel there and uh it has my thoughts
Channel there and uh it has my thoughts
on like the whole field and where
on like the whole field and where
everything is going and such
I'm really trying to make this field you
I'm really trying to make this field you
know way easier to do work
in it's a mess at the
moment B
yeah I don't know for whatever
yeah I don't know for whatever
reason I mean you can let me know I I
reason I mean you can let me know I I
put a heck of a lot of effort into the
put a heck of a lot of effort into the
new video and it just didn't catch on at
new video and it just didn't catch on at
all so I'm probably not going to be
all so I'm probably not going to be
doing a bunch more videos cuz you know
doing a bunch more videos cuz you know
it takes time away from
it takes time away from
coding but uh that one has a lot of good
coding but uh that one has a lot of good
thoughts in
it and then uh I mean I've been
it and then uh I mean I've been
streaming all of my Dev as well you know
streaming all of my Dev as well you know
half the time it's stuff like this where
half the time it's stuff like this where
this is me fighting with random
this is me fighting with random
low-level
low-level
stuff
stuff
uhoh are we back the internet just cut
uhoh are we back the internet just cut
out for a second
second we'll see about that hopefully it
second we'll see about that hopefully it
stays uh it stays good we'll
see Zero dropped
frames hopefully
good freaking xinity
bar right I have to rerun the auto
gen and this should
be side
be side
test the
X this this is side test yeah there we
go all right uh this did something
cannot import name test from s
cannot import name test from s
test
really we've got this right
really we've got this right
here defining test
right well I guess I don't expose the
uh cannot import name test from s
test really wait this should work
okay so it does have it has like the
cciu
like that's
dot doesn't have dot
Fu okay but it doesn't have this cuz
Fu okay but it doesn't have this cuz
it's not a a public variable right it's
it's not a a public variable right it's
private and it has to be private cuz
private and it has to be private cuz
it's a
it's a
struct me
struct me
thinks let me see if that's
true can we do
this it says we can do this
from s
from s
test
will oh oh that's
will oh oh that's
funny that's real
funny uh can I do like a. Fu bar equals
funny uh can I do like a. Fu bar equals
no you
can't that's kind of Jank isn't
it it lets you do this assignment but
it it lets you do this assignment but
then nothing happens
huh I don't like
huh I don't like
that I mean it is kind of cool that you
that I mean it is kind of cool that you
can uh expose variables like that I
can uh expose variables like that I
don't know if this will work fully for
don't know if this will work fully for
uh like if you have C variables or
uh like if you have C variables or
whatever but it's cool that it kind of
whatever but it's cool that it kind of
does
let me think here
so but you can't import the C
so but you can't import the C
method from an next
turn oh wait cuz it's not public duh
is that
is that
fine I think that's fine
right cuz if you do do F it's going to
right cuz if you do do F it's going to
give you a dict
give you a dict
anyways so you're going to need to bind
anyways so you're going to need to bind
stuff anyways right you're going to need
stuff anyways right you're going to need
to bind stuff
anyways yeah you're going to need to
anyways yeah you're going to need to
bind stuff anyways so this is actually
bind stuff anyways so this is actually
100% fine
right cuz we can do like this right in
right cuz we can do like this right in
fact we don't even need this
fact we don't even need this
anymore we can do like
oops what if I just do this
a non
a non
returned do rapper
look at that look at
that that's pretty
that that's pretty
nice that's pretty nice
and we can come up with like some nice
and we can come up with like some nice
little
little
method for puffer to like you know
method for puffer to like you know
pretty print these or
whatever let me make a separate window
whatever let me make a separate window
for once I usually don't need three but
for once I usually don't need three but
I kind of want to test a couple
I kind of want to test a couple
things uhoh did I miss something from
Stone I didn't miss anything this new
message for
Okay
Okay
so what we want to be able to test
here
x death
x death
test and we
test and we
do
do
test okay like this
maybe I think test takes a foo star I
maybe I think test takes a foo star I
think you have to do like this maybe
and yeah this
[Music]
[Music]
compiles one
compiles one
two okay we get the a wrapper and we do
two okay we get the a wrapper and we do
a.
a.
test
test
three perfect perfect perfect
three perfect perfect perfect
perfect um
is there any reason that I would ever
is there any reason that I would ever
have to have this be a pointer in the
class I don't think
so cuz this is just initializing The
so cuz this is just initializing The
Struck
Struck
directly this is kind of perfect
right and then what we do is we just
right and then what we do is we just
make an AIT
make an AIT
method right we make a nit method to
method right we make a nit method to
fill in the extra variables or
fill in the extra variables or
something or we just directly allocate
them in fact I think that
them in fact I think that
uh yeah and then this just becomes a
uh yeah and then this just becomes a
super thin wrapper I like
super thin wrapper I like
this so what does this delete
this so what does this delete
um this means that we
we probably
delete most of our init method and
delete most of our init method and
allocate methods or a decent chunk of
allocate methods or a decent chunk of
the init and allocate methods we reduce
the init and allocate methods we reduce
the F the signatures a whole
the F the signatures a whole
bunch signature on scon stays about the
bunch signature on scon stays about the
same signature and python stays about
same signature and python stays about
the same that's
unavoidable and uh it's a good thing I
unavoidable and uh it's a good thing I
tested this by the way because chat
tested this by the way because chat
jippy was wrong absolutely
jippy was wrong absolutely
wrong it said it would not this would
wrong it said it would not this would
not work and it
did this is very very
did this is very very
nice syon is
great I haven't really seen this in any
great I haven't really seen this in any
other language like having um like such
other language like having um like such
a nice incremental Port layer between
a nice incremental Port layer between
high and low level
high and low level
really
really
good Maybe I'm Wrong maybe some places
good Maybe I'm Wrong maybe some places
have them but this one's really nice to
have them but this one's really nice to
use okay so here's what we're going to
use okay so here's what we're going to
do with this uh whoops we're going to
do with this uh whoops we're going to
start by trying this on probably like
start by trying this on probably like
breakout or pong right
X like this
yeah we're going to be able to simplify
yeah we're going to be able to simplify
this so
this so
much I'm trying to think where we want
much I'm trying to think where we want
to start with
this I mean I guess it's going to be
this I mean I guess it's going to be
Auto
Auto
p s breakout
pix
pxd
pxd
whoa what's wrong with this
whoa what's wrong with this
oh cuz we're dumb that's
oh cuz we're dumb that's
all this is
breakout. R.H no such
breakout. R.H no such
file
really I think I got to do like
see pre-processor
failed well those aren't
failed well those aren't
docks the heck
options oh Dash
options oh Dash
I let's try this
still
failed oh it should be slash include not
failed oh it should be slash include not
SL lib I'm
dumb okay that's a different
error compile
directive h
sis
exit
length
length
huh does this not
work nothing's in here
here
here
D does this need extra Flags
let's just
let's just
DOD
platform platform
platform platform
desktop
desktop
no I don't think you can do it this way
I wonder if anybody's pry
I wonder if anybody's pry
this looks like they
haven't why does this freaking
work can I just do like
No it should just get it from the
inkid dash dash debug
I mean this just printed all my code
I mean this just printed all my code
right as it just printed the whole
file oh you can see here it's trying to
file oh you can see here it's trying to
get all the RB
get all the RB
stuff yeah
stuff yeah
massive look it's generating bindings
massive look it's generating bindings
for all of
for all of
ra.h that's silly
but then like that should work even
but then like that should work even
though it's
silly free
[Music]
client H mm
compiler
directive just for the hell of it let's
directive just for the hell of it let's
throw it to chat jity there's no way it
throw it to chat jity there's no way it
uh oh wait what what
happened wait Dash
I
oh yeah cuz I forgot this should be
uh there we go
uh there we go
so this is I mean there's no way but
so this is I mean there's no way but
we'll maybe this will give us a good
we'll maybe this will give us a good
Google
thing findings
actives
need I don't see why I would need these
need I don't see why I would need these
as the
thing but maybe I need one of these
thing but maybe I need one of these
flags
yeah so I literally tried this already
what happens I'm just
what happens I'm just
curious what happens if I just like
curious what happens if I just like
comment this
error
function well oh yeah cuz it it doesn't
function well oh yeah cuz it it doesn't
know what a color is right
the old color C
the old color C
object this is I'm trying to figure out
object this is I'm trying to figure out
a way to autogen the scyon bindings or
a way to autogen the scyon bindings or
most of
most of
them and this tool works but it's not
them and this tool works but it's not
working with
RB it would be a good idea if it we're
RB it would be a good idea if it we're
working with RB
I mean we don't have to do this
initially let's let's do this manually
initially let's let's do this manually
to start
to start
with so
cuz I did find some other some other
cuz I did find some other some other
optimizations in uh
anyways U I suppose that means we start
anyways U I suppose that means we start
with the c though not
with the c though not
the syon
the syon
right yeah we start with the
c for
I definitely need to change up the names
I definitely need to change up the names
of these
well I'm trying to figure out because
well I'm trying to figure out because
there that the idea here is that there
there that the idea here is that there
are two different functions right they
are two different functions right they
both technically do some allocations
I could just have one of them be p in
it but it's really not
it but it's really not
um ping it
right I guess it is just an
it really dumb obvious names well
it really dumb obvious names well
they're not dumb if they're obvious
let's try something this isn't it this
let's try something this isn't it this
is
allocate and then what we're going to
do this doesn't need to go
here observations
rewards
rewards
oops
duns uh and all the rest of this can go
duns uh and all the rest of this can go
away
away
right num bricks
oh and this has to
oh and this has to
be
void the breakout star
void the breakout star
n like
this right
then we have to do
assert and
assert and
num
bricks greater than
bricks greater than
zero and then we
do
Rick we didn't need to do all this
Rick we didn't need to do all this
nonsense no did we
nonsense no did we
okay so we get rid of
this that was
balls bricks yep thank you
bricks
Z we also if you think about it we
Z we also if you think about it we
really don't
really don't
need we really don't need to be passing
need we really don't need to be passing
in any of this
in any of this
stuff like this is just straight up I
stuff like this is just straight up I
mean look how stupid this is
this goes
this goes
away this can
stay stuff was required for scon stuff
stay stuff was required for scon stuff
or do you get an error on and
or do you get an error on and
it uh you'll see in a moment it's
it uh you'll see in a moment it's
there's some Shenanigans I will say
we don't need any of
this we'll we'll have to come up with a
this we'll we'll have to come up with a
better name for this it's not really a
better name for this it's not really a
nit versus allocate
RT and actually I think we can save
this we can just do here we can just do
this we can just do here we can just do
init n
right and then we can just
do
do
observations actions rewards and
observations actions rewards and
DS goes like
this how's
this how's
that way simpler
right and then all I have to
right and then all I have to
do compile it'll compile hold
on so all we have to
do let's put this here for a second we
do let's put this here for a second we
are not going to need all
are not going to need all
this but we're just going to do
oops C breakout star
oops C breakout star
n is going to be
n is going to be
C going to be equal to
dot frame skip
dot frame skip
with let's see I it frame skip with
with let's see I it frame skip with
height
it it's being a little silly here let's
it it's being a little silly here let's
just grab the ones we need paddle width
just grab the ones we need paddle width
paddle
paddle
height ball width ball
height uh brick
width where is this brick width brick
kite k
and we do brick rows and brick
and we do brick rows and brick
calls
this and this is
it and then we just
it and then we just
do allocate
do allocate
n and then reset M like this now I
n and then reset M like this now I
missed one thing thing first of all we
missed one thing thing first of all we
get rid of
this and then the other thing I
did ah look at this we literally can
did ah look at this we literally can
just code this
for6
is 62
eight ball width
eight ball width
six
six this was supposed to be do brick
six this was supposed to be do brick
width and brick height not I just typoed
width and brick height not I just typoed
it brick width is going to
it brick width is going to
be and then brick
be and then brick
height brick
height brick
Rose equal to
Rose equal to
six and then a do bir calls is going to
six and then a do bir calls is going to
be equal to 18 like
be equal to 18 like
this
okay I believe I forgot one thing
okay I believe I forgot one thing
here which is just going to be
uh when you init
uh when you init
this instead of this assert it's going
this instead of this assert it's going
to be
to be
n num it's going to be like
this implicit Declaration of
assert
C.H does not return a value
this is supposed to be void not void
star frame skip
star frame skip
equal
designator wait
designator wait
error hold
on what's wrong with this
pointer to stack allocated memory Ah
pointer to stack allocated memory Ah
that's why
this needs to be and
N yeah so this is um slightly silly I do
N yeah so this is um slightly silly I do
like to
like to
use I mean I guess there's no reason for
use I mean I guess there's no reason for
me to be using pointers everywhere I
me to be using pointers everywhere I
guess it means I do it because it
guess it means I do it because it
prevents you from having to use aners
prevents you from having to use aners
sand everywhere
but allocated
this is just honestly this is like kind
this is just honestly this is like kind
of newbie
stuff render
yeah this is why I always use the damn
pointers because you don't have to have
pointers because you don't have to have
the uh you don't have to scatter aners
the uh you don't have to scatter aners
SS
SS
everywhere so we can think about
everywhere so we can think about
that it'll work either
way 5 seven6 over num calls
two uh and what the heck was brick
height
12 Undeclared identifier with e
there's no reason that you
need this literally does not need to
need this literally does not need to
exist
this target
this target
paths uh I guess we are going to
paths uh I guess we are going to
do yeah we're going to add this anyways
do yeah we're going to add this anyways
though is the thing
though is the thing
so we'll leave the client for
so we'll leave the client for
now um
now um
um but we're going to make it at least
um but we're going to make it at least
be like
this that's
better so just takes the
environment and you can just keep it
environment and you can just keep it
like
this init window
Library path
equals what do we you think
equals what do we you think
folks
oops same exact code way
oops same exact code way
easier less binding
garbage we can play our
breakout the ball actually does speed up
breakout the ball actually does speed up
the more you play that's funny it is
the more you play that's funny it is
actually kind of playable though it is
actually kind of playable though it is
hard though it's very hard I think you
hard though it's very hard I think you
just need slightly more precise control
just need slightly more precise control
all right
all right
well there we go um what did we learn
well there we go um what did we learn
today don't write wrapper functions when
today don't write wrapper functions when
you don't need wrapper functions and if
you don't need wrapper functions and if
you think you need wrapper functions but
you think you need wrapper functions but
don't see rule number
one we're going to go fix the scon for
one we're going to go fix the scon for
this
this
we'll clean a couple other things
we'll clean a couple other things
up this will be the test pilot
up this will be the test pilot
environment and if this works we'll do
environment and if this works we'll do
it for all of
it for all of
them and
then I mean that's like most of the Jank
then I mean that's like most of the Jank
honestly with puffer there are only a
honestly with puffer there are only a
couple other small places we already
couple other small places we already
fixed the setup.py today except we still
fixed the setup.py today except we still
have to make it Auto download rayb but
have to make it Auto download rayb but
that's about
that's about
it all right I'm going to be right back
it all right I'm going to be right back
I'm going to use the restroom what time
I'm going to use the restroom what time
is it
is it
3:41 uh give me a few minutes then I'm
3:41 uh give me a few minutes then I'm
going to go make myself a shake and such
going to go make myself a shake and such
and then I'll be right
back
e
e
e
e
e
e
e
e
e
e
e
e
e e
okay here we
go in the meantime please take a moment
go in the meantime please take a moment
to Star puffery lib yes indeed star the
to Star puffery lib yes indeed star the
puffer the puffer like stars
I mean this is so much cleaner it's not
I mean this is so much cleaner it's not
even funny I don't know what the hell I
even funny I don't know what the hell I
was thinking before I guess it's just I
was thinking before I guess it's just I
didn't realize like hey strs already
didn't realize like hey strs already
have a good initializer and it'll work
have a good initializer and it'll work
with scyon it to be fair it took like an
with scyon it to be fair it took like an
hour of test to see that that was even
possible cold
ah what we think we're going to do with
ah what we think we're going to do with
this fix the scyon
this fix the scyon
bindings go from there
bindings go from there
right that should
right that should
work why pong when you can
work why pong when you can
ping let us play pingpong or as the
ping let us play pingpong or as the
Chinese say
pingpong
pingpong
welcome yeah that guy we figured out how
welcome yeah that guy we figured out how
to make the the scon bindings less
terrible I'm going to delete like half
terrible I'm going to delete like half
of
this with
this with
rust no no absolutely
rust no no absolutely
not absolutely
not freaking garbage language
up to Agatha the elite oh that's
up to Agatha the elite oh that's
awesome yo that's great
holy what number is she hold
on third trainer they're five right cuz
on third trainer they're five right cuz
the champion
yeah
yeah
poison it's poison and what's the
starter bad RNG and wild
starter bad RNG and wild
encounters she's
encounters she's
basically well yeah the no wild
basically well yeah the no wild
encounters is like forcing to solo
encounters is like forcing to solo
forcing the solo with the star is kind
forcing the solo with the star is kind
of
of
crazy okay poison versus grass
right am I crazy that's super effective
right am I crazy that's super effective
isn't it or am I
isn't it or am I
dumb we have Lapras but it's way too
dumb we have Lapras but it's way too
weak
yeah poison Beach Grass
yeah poison beats grass
dude just get it to learn to switch
dude just get it to learn to switch
Train The Magikarp and you have
Train The Magikarp and you have
Gyarados just switch Train The Magikarp
Gyarados just switch Train The Magikarp
you
know it can sleep powder so it can
know it can sleep powder so it can
actually set up
if he turns on the wild battles it'll
work
work
probably it has to kind of know the
probably it has to kind of know the
higher level strategy of like having
higher level strategy of like having
multiple
multiple
Pokemon it did it with wild from fuchia
okay so there you go it's got to train
okay so there you go it's got to train
something up
new run with wild battles enabled once
new run with wild battles enabled once
you get to the Elite 4 okay interesting
you get to the Elite 4 okay interesting
it will train up after losing and go
it will train up after losing and go
again until win or level
again until win or level
100 that's
funny I mean to be fair like that's not
funny I mean to be fair like that's not
even that dumb like I literally did that
even that dumb like I literally did that
when I was younger right I just kept
when I was younger right I just kept
freaking trying the Elite 4 with one
freaking trying the Elite 4 with one
Pokemon until uh eventually you know got
Pokemon until uh eventually you know got
enough experience from like the initial
enough experience from like the initial
uh the initial Pokemon in there to like
uh the initial Pokemon in there to like
just one one shot the whole Elite 4 so
just one one shot the whole Elite 4 so
that's not even that
that's not even that
unrealistic check back it'll either win
unrealistic check back it'll either win
or the Strat will need adjustment okay
or the Strat will need adjustment okay
that sounds
that sounds
good well in the meantime we're doing
good well in the meantime we're doing
some
code what are doing some code
one day to teach an agent to beat
one day to teach an agent to beat
Pokemon yeah it's a if once you get the
Pokemon yeah it's a if once you get the
scripting done or like out of there for
scripting done or like out of there for
the most part because we do a good hyper
the most part because we do a good hyper
pram sweep it'll be a top five result in
pram sweep it'll be a top five result in
RL I mean we're not going to have like
RL I mean we're not going to have like
Deep Mind PR behind it or anything but
Deep Mind PR behind it or anything but
it's that's a top five result in
RL it's
RL it's
um here let me
think probably I would say it's
think probably I would say it's
definitely behind open ai5 and Alpha
definitely behind open ai5 and Alpha
star and um go but probably ahead of
star and um go but probably ahead of
about everything
about everything
else I mean there are a couple other
else I mean there are a couple other
ones that are kind of crazy if I thought
ones that are kind of crazy if I thought
about it but
yeah I mean what the heck else is there
yeah I mean what the heck else is there
that's like I mean I guess 01 now but
that's like I mean I guess 01 now but
I'm not really counting that in terms of
I'm not really counting that in terms of
pure RL
pure RL
right and technically Al Alpha zero is
right and technically Al Alpha zero is
like MCTS as well
right yeah o1 doesn't
right yeah o1 doesn't
count so top five result in RL
I agree this is like pure you know
I agree this is like pure you know
online tabularasa RL is what this
is let's see
is let's see
actions reward
actions reward
Wards
Wards
GS with height battle with pattle height
bights this looks good to
me LM trained
me LM trained
on didn't toss it at
Pokemon yeah it won't work
oh cool yeah bet remind me we'll do that
oh cool yeah bet remind me we'll do that
on stream today let me make sure that
on stream today let me make sure that
this works because I'm in the mood for
this works because I'm in the mood for
this just like to finish this and then
this just like to finish this and then
we'll do that
I have a Smith machine to assemble in a
I have a Smith machine to assemble in a
few miles too hey you got yourself one
few miles too hey you got yourself one
very
good well
good well
done the weights are uh useful that's
done the weights are uh useful that's
what I got I got my father using uh
what I got I got my father using uh
using one of those he's got like a nice
using one of those he's got like a nice
one that has forward and back access as
one that has forward and back access as
well uh and you can pretty much do
well uh and you can pretty much do
everything I mean I still prefer my free
everything I mean I still prefer my free
weights but like you can squat bench
weights but like you can squat bench
deadlift and overhead press and row so
deadlift and overhead press and row so
you're totally set
you're totally set
right and be careful doing pull-ups on
right and be careful doing pull-ups on
it just don't Kip
we are up
we are up
to sets of 265 squats and
to sets of 265 squats and
265 yeah 265 Squat
265 yeah 265 Squat
and uh 3 55 or 365 deadlifts I believe
and uh 3 55 or 365 deadlifts I believe
probably 355 sets of
deadlifts so we're getting there
deadlifts so we're getting there
takes a while to put the strength back
takes a while to put the strength back
on why don't I see a side breakout in
on why don't I see a side breakout in
here
forgot it
forgot it
apparently time to get
apparently time to get
yuge bunch of nice ones I got one that
yuge bunch of nice ones I got one that
was cheap but I'm not planning on Max
was cheap but I'm not planning on Max
load just don't hurt yourself and I mean
load just don't hurt yourself and I mean
I assuming you're not doing like
I assuming you're not doing like
anything super heavy um but do be
anything super heavy um but do be
careful with the safeties ideally you
careful with the safeties ideally you
have safeties in it that you can
have safeties in it that you can
set
set
because you can straight up die with a
because you can straight up die with a
Smith machine if you like if you're
Smith machine if you like if you're
benching and you get the bar caught on
benching and you get the bar caught on
your neck you're
your neck you're
dead you're just
dead so do be careful with
dead so do be careful with
that I never use them without
safeties safeties are there good
yeah well I mean you say you're not
yeah well I mean you say you're not
stupid but like here look
stupid but like here look
I I made where is this stupid
I I made where is this stupid
thing I did this last week where the
hell so uh I hard failed a squat a set
hell so uh I hard failed a squat a set
of squats on the first rep I hard failed
of squats on the first rep I hard failed
with yeah
with yeah
265 and then I went on to do my sets
265 and then I went on to do my sets
with this exact weight directly
with this exact weight directly
afterwards can just happen and you
afterwards can just happen and you
see how I have this strap
see how I have this strap
angled right I very intentionally do
angled right I very intentionally do
this because if you angle the strap up
this because if you angle the strap up
like this uh not only does the weight
like this uh not only does the weight
not like Crush you or anything but it
not like Crush you or anything but it
doesn't like fold you onto your knees
doesn't like fold you onto your knees
because it like it gets caught up here
because it like it gets caught up here
and it just rolls off you backwards so
and it just rolls off you backwards so
yeah safety is important
nice weights yes they are very nice
nice weights yes they are very nice
weights
the error messages are really not
great make
client cannot sign typ
step you know this is the the one
step you know this is the the one
annoying thing about having we'll figure
annoying thing about having we'll figure
this out before I do all the other
this out before I do all the other
environments like
what happened
here oh I'm on a weird branch
dude really
seg
seg
P
okay probably some of these are messed
okay probably some of these are messed
up we no longer need this
probably
destruct be
destruct be
fine
fine
render close
client for
you forgot the init here
that's probably
it there we
it there we
go
Works look at
that so we're going to have to clean
that so we're going to have to clean
this Branch up a whole bunch look how
this Branch up a whole bunch look how
much nicer this
much nicer this
is I basically I stripped out the really
is I basically I stripped out the really
gross part of The Binding
gross part of The Binding
stuff and like the major constraint this
stuff and like the major constraint this
stuff in theory you should be able to
stuff in theory you should be able to
autogen this top portion
autogen this top portion
here if I can get that allocator
working and then you literally just have
working and then you literally just have
this that's your whole binding
and even if you can't allocate
and even if you can't allocate
this you literally just need the struck
death like the signatures are no longer
death like the signatures are no longer
God
awful so that's way
nicer hey
nicer hey
linky we just made the bindings way
linky we just made the bindings way
nicer or at least we figured out we did
nicer or at least we figured out we did
it for breakout we figured out how to
it for breakout we figured out how to
make The Binding system way
nicer we cut out in three or four
nicer we cut out in three or four
separate places we cut out the gigantic
signatures I need to fix the dev Branch
signatures I need to fix the dev Branch
I need to fix all this stuff
I was messing around with the grid
I was messing around with the grid
environments too
much this is the important piece right
here
okay time it
okay time it
four okay that's
four okay that's
fine let me take a quick look let me
fine let me take a quick look let me
make make sure I haven't missed anything
make make sure I haven't missed anything
here and then we'll take a look
here and then we'll take a look
at your PR bet so I know you've worked
at your PR bet so I know you've worked
on that for a while we'll take a look at
on that for a while we'll take a look at
this
paralyzing
it's actually 50x
faster got quite questions about Enduro
faster got quite questions about Enduro
cool big win I'm looking forward to
cool big win I'm looking forward to
making you looking H more looking
making you looking H more looking
forward to you making porting to scon a
forward to you making porting to scon a
bit easier it should be way easier now
bit easier it should be way easier now
so the thing that I figured out uh I
so the thing that I figured out uh I
figured out how to make it without
figured out how to make it without
having these gigantic init functions and
having these gigantic init functions and
like having to mix stuff around there I
like having to mix stuff around there I
got a couple last things to do but I
got a couple last things to do but I
think like 90% I'm pretty happy with
think like 90% I'm pretty happy with
this ithon here now uh there's like one
this ithon here now uh there's like one
additional thing I got to figure out but
additional thing I got to figure out but
it's pretty well solved like that's
it's pretty well solved like that's
basically I solved the problem today
basically I solved the problem today
right I came up with the solution I
right I came up with the solution I
tested the solution it works we just
tested the solution it works we just
have to like tweak it and like uh put it
have to like tweak it and like uh put it
everywhere now it's like the hard part
everywhere now it's like the hard part
is done
um so I figured that out today and
then there like we still have to figure
then there like we still have to figure
out API Shenanigans for puffer M we'll
out API Shenanigans for puffer M we'll
have to figure that out still it's not a
have to figure that out still it's not a
huge deal though
all right let's see your
all right let's see your
PR uh
PR uh
puffer I also I'm feeling way better
puffer I also I'm feeling way better
today like holy hell I was just Giga
today like holy hell I was just Giga
fried uh I literally just spent the
fried uh I literally just spent the
weekend like well I ran a half marathon
weekend like well I ran a half marathon
yesterday but other than that just like
yesterday but other than that just like
lazing around playing League of Legends
lazing around playing League of Legends
and like I really needed to do that as
and like I really needed to do that as
it turns out cuz I feel way better like
it turns out cuz I feel way better like
immediately got a bunch of good sleep
immediately got a bunch of good sleep
you
you
know just like Giga fried from the last
know just like Giga fried from the last
however long o 1.1k look at
however long o 1.1k look at
that
1.1 add your Rec yeah I mean it
1.1 add your Rec yeah I mean it
shouldn't I mean
shouldn't I mean
it's I pretty much I can get like tons
it's I pretty much I can get like tons
of work out of myself for good chunks of
of work out of myself for good chunks of
time but I can't do it forever right
time but I can't do it forever right
without taking a reset at some point
I don't know it pisses me off too
I don't know it pisses me off too
because
because
like I basically I grew up with the
like I basically I grew up with the
expectation that I should be able to
expectation that I should be able to
work at 100% capacity 24/7 and like I'd
work at 100% capacity 24/7 and like I'd
very much like to but sometimes brain
very much like to but sometimes brain
says
says
no only problem with me is knee pain and
no only problem with me is knee pain and
left quad skin is
left quad skin is
numb
numb
H knee pain is rough knee pain is
H knee pain is rough knee pain is
definitely rough
if you're already running on dirt you're
if you're already running on dirt you're
kind of doing what you
kind of doing what you
can I to be fair I had like a lot I had
can I to be fair I had like a lot I had
a fair bit of pain um when I started
a fair bit of pain um when I started
running just cuz like I'm running 40
running just cuz like I'm running 40
lounds heavier than I used to
be oh linky you have a PR as
be oh linky you have a PR as
well I got to fix that all right
well I got to fix that all right
let's see what these are
let's see what these are
quad I'm watching and waiting gets worse
quad I'm watching and waiting gets worse
doesn't I'll be making up Point
yeah
okay I might have you uh I might have
okay I might have you uh I might have
you make some revisions on this
bet let me see
did you like separately tune all of
did you like separately tune all of
these or what happened
here special configs did you see that
here special configs did you see that
Atari you can like I did atar you can
Atari you can like I did atar you can
put a default file
AR optimized could make it with
AR optimized could make it with
default well there the default the thing
default well there the default the thing
is that like then you can just put the
is that like then you can just put the
parameters that are different
right so let me get a sense of how
right so let me get a sense of how
you're doing this so you
you're doing this so you
have C def
struct allocate memory
there definitely some weird things in
there definitely some weird things in
here one or
here one or
two the others don't I don't need com
two the others don't I don't need com
ments hold on let me just look at
this this is probably your ID but don't
this this is probably your ID but don't
do
this two classes
now I can
see I liked it
see I liked it
silly you didn't even line it
silly you didn't even line it
up
um yeah so I I can't fault you for this
um yeah so I I can't fault you for this
cuz you copied my dumb for this so
cuz you copied my dumb for this so
I can't fault you for this rapper this
I can't fault you for this rapper this
is fine fine
weird errors so I abandoned it yeah syon
weird errors so I abandoned it yeah syon
has shitty errors I can get
that okay well this is going to have to
that okay well this is going to have to
go into like a DOT sanity or something
these are actually kind of nice because
these are actually kind of nice because
I just had somebody today asking me on
I just had somebody today asking me on
like really simple examples of like
like really simple examples of like
sioning
environments it should be brain
dead though you do you're definitely
dead though you do you're definitely
doing some weird things what's this m.
view float
view okay I see
to render
yeah oh
man try to do rap you said you tried to
man try to do rap you said you tried to
do raer l
too many variables yeah no I get it I
too many variables yeah no I get it I
see what you're
doing let me check
something 62
a lot of
code I can see this would take a while
code I can see this would take a while
to do all this
I'm definitely going to integrate this
I'm definitely going to integrate this
in some form like I'm definitely going
in some form like I'm definitely going
to integrate all this but this is a this
to integrate all this but this is a this
is going to be a substantial thing for
is going to be a substantial thing for
me to have to review bet like I'm
me to have to review bet like I'm
probably going to want
probably going to want
to yeah I'm probably going to want to
like trying to think
revisions how it fits into puffer Li
revisions how it fits into puffer Li
yeah no it'll
yeah no it'll
fit
so you're at this like kind of the thing
so you're at this like kind of the thing
is oh man let me see if I can figure out
is oh man let me see if I can figure out
how to how to like go through this in a
how to how to like go through this in a
way that's going to be instructive so
way that's going to be instructive so
you're kind of like at this awkward
you're kind of like at this awkward
midpoint right
midpoint right
between scyon and
between scyon and
C where you're kind of stubbing your
C where you're kind of stubbing your
toes right getting like the bad parts of
toes right getting like the bad parts of
Python and the bad parts of C in some
Python and the bad parts of C in some
ways um like you've got this struct
ways um like you've got this struct
right but it's in
right but it's in
scon and then you're doing like an init
scon and then you're doing like an init
function on this struct which to be fair
function on this struct which to be fair
this is how I had it until just right
this is how I had it until just right
recently so that's fine but then you're
recently so that's fine but then you're
like postbinding
like postbinding
I can't even blame you for any of this
I can't even blame you for any of this
cuz this is exactly what I told you to
cuz this is exactly what I told you to
do like 3 months
do like 3 months
ago it's just I've got I found slightly
ago it's just I've got I found slightly
better ways of doing stuff since
then so I mean this is perfectly fine to
then so I mean this is perfectly fine to
be
honest this is simple and very easy to
honest this is simple and very easy to
understand
yeah the thing is you don't have scon
yeah the thing is you don't have scon
numpy dude like numpy will call back to
see I mean to python numpy will call
see I mean to python numpy will call
back to uh to python every
back to uh to python every
time it's only memory views that
don't like memory views don't call back
don't like memory views don't call back
so like here you're using these if
so like here you're using these if
you're in scon anyways you may as well
you're in scon anyways you may as well
use memory views right instead of having
use memory views right instead of having
to do your like arithmetic on this like
to do your like arithmetic on this like
if you're going to do this you may as
if you're going to do this you may as
well just do this in
well just do this in
C I wanted to not do that at all so I
C I wanted to not do that at all so I
initially I tried
initially I tried
yeah well it's just it's funny because
yeah well it's just it's funny because
like the code the way that you've
like the code the way that you've
written this like this is basically
written this like this is basically
C like this is like it almost doesn't
C like this is like it almost doesn't
make sense for this to be in
make sense for this to be in
scyon the way that this is cuz this is
scyon the way that this is cuz this is
pretty much just
pretty much just
C you see what I
C you see what I
mean supposed to be ready to convert to
mean supposed to be ready to convert to
see I see okay well I can show you how
see I see okay well I can show you how
to do that
to do that
stuff and then we can do the rendering
stuff and then we can do the rendering
online too right so we can put together
online too right so we can put together
like a
like a
little I mean I could lit I can
little I mean I could lit I can
literally have this be one file and then
literally have this be one file and then
just have a render demo right we could
just have a render demo right we could
have a render demo that has all of the
have a render demo that has all of the
environments in one little
environments in one little
demo for instance
but it's going to take some work not
but it's going to take some work not
because it's hard but because there's a
because it's hard but because there's a
substantial amount of code
substantial amount of code
here you know what I think we should do
here you know what I think we should do
you should let me finish cleaning up
you should let me finish cleaning up
like the API bindings and all that stuff
like the API bindings and all that stuff
because there's so many different little
because there's so many different little
environments here that if I clean that
environments here that if I clean that
up a little bit it's going to make this
up a little bit it's going to make this
a lot easier to
a lot easier to
integrate but you've done a good job
integrate but you've done a good job
with this I mean you basically like
with this I mean you basically like
you've brought yourself up to speed
you've brought yourself up to speed
enough on how to do higher per
enough on how to do higher per
programming you brought yourself up to
programming you brought yourself up to
speed on
speed on
cython yeah it's pretty well
cython yeah it's pretty well
set thank you for no you've done a good
set thank you for no you've done a good
job with this you've done a good job
job with this you've done a good job
with this all I have to do is I got to
with this all I have to do is I got to
steer you in a couple I have to steer
steer you in a couple I have to steer
you in a couple little ways but it's
you in a couple little ways but it's
pretty nice and honestly I've been so
pretty nice and honestly I've been so
happy with uh getting contributors to
happy with uh getting contributors to
write code like this
write code like this
because like it's very easy for me to
because like it's very easy for me to
just edit this and make little to stuff
just edit this and make little to stuff
right because it's like there's almost
right because it's like there's almost
no way that you can go horribly
no way that you can go horribly
wrong
wrong
versus if you were to do like some
versus if you were to do like some
heavily objectoriented thing and come up
heavily objectoriented thing and come up
with some weird hierarchy of things I'd
with some weird hierarchy of things I'd
basically have to throw away all the
basically have to throw away all the
code and rewrite it right so like the
code and rewrite it right so like the
fact that the code is like this makes it
fact that the code is like this makes it
very easy for me to just like quickly go
very easy for me to just like quickly go
through and edit stuff
we're also going to need more sanity M's
we're also going to need more sanity M's
for sure but that's going to take some
for sure but that's going to take some
actual really some really good
actual really some really good
thought it's highly modular on
thought it's highly modular on
purpose I don't think modular is the
purpose I don't think modular is the
word you're looking for
but yeah this is basically this is
but yeah this is basically this is
C you do a few things that are kind of
C you do a few things that are kind of
silly
silly
here like this is
here like this is
silly cuz this is a python
silly cuz this is a python
Loop actually maybe it can convert list
Loop actually maybe it can convert list
compressions I don't
compressions I don't
know I have an idea on say I'll do a
know I have an idea on say I'll do a
game theory one
game theory one
well careful link key
well careful link key
like there's a very specific intent
like there's a very specific intent
behind the sanity M's it's not like the
behind the sanity M's it's not like the
goal is not to have a ton of them the
goal is not to have a ton of them the
goal is to have we actually really what
goal is to have we actually really what
we want is we want the minimum number of
we want is we want the minimum number of
Sanity M's that are going to test for
Sanity M's that are going to test for
specific algorithmic
specific algorithmic
deficiencies game theory is not
deficiencies game theory is not
necessarily one of them like if you do
necessarily one of them like if you do
prisoners dilemma that really doesn't
prisoners dilemma that really doesn't
tell you anything people fail prisoners
tell you anything people fail prisoners
dilemma
goal is to test specific algorithmic
goal is to test specific algorithmic
deficiencies yep that's
it I want this guy to contribute some
it I want this guy to contribute some
M's where is this this guy this is
M's where is this this guy this is
awesome I want
awesome I want
these I don't know what this does but
these I don't know what this does but
this is
cool it's done hey
cool it's done hey
Spencer
Spencer
awesome tit
awesome tit
GitHub
GitHub
really where did I miss the pr
didn't make
one and this needs some instruction on
one and this needs some instruction on
like what the heck this game is I like I
like what the heck this game is I like I
get that it's a card game I don't know
get that it's a card game I don't know
which number means what
here I haven't played the Final Fantasy
here I haven't played the Final Fantasy
game
needs one thing sure I'll help you right
needs one thing sure I'll help you right
now what do you
now what do you
need oh I also uh I don't know how long
need oh I also uh I don't know how long
you've been watching this but I just
you've been watching this but I just
found a way to make the uh the scon
found a way to make the uh the scon
bindings way less
bindings way less
painful so I'll help you with that in a
painful so I'll help you with that in a
bit but
uh you link to me Connect
uh you link to me Connect
4 let's look at code
I just let autogen rip through and
I just let autogen rip through and
delete
delete
Victory wait
what I'm
confused did you figure out your
thing wait I let autogen rip through and
thing wait I let autogen rip through and
delete victory for scyon
delete victory for scyon
stop uh
stop uh
I'll show you in a second let me see
I'll show you in a second let me see
what this is 270 generate
what this is 270 generate
board
yep piece
yep piece
with wait call times
M oh okay yeah this is just Ros and
M oh okay yeah this is just Ros and
calls sure n conect c Connect
calls sure n conect c Connect
4 yeah you basically just copied my
4 yeah you basically just copied my
structure exactly
structure exactly
allocate connect yep you copied ex okay
allocate connect yep you copied ex okay
cool and
then 4. C didn't get pushed D to get
then 4. C didn't get pushed D to get
okay running no
okay running no
worries oh you didn't you lost it
shoot like the C
shoot like the C
test good thing those are short
gotcha check wi
con
okay yeah I see you pretty much did one
okay yeah I see you pretty much did one
to
one man I really need to it's kind of
one man I really need to it's kind of
funny cuz like the way I'm giving people
funny cuz like the way I'm giving people
to write code it's like a template and
to write code it's like a template and
you can see how easy it is to build M's
you can see how easy it is to build M's
this way right like you can see how easy
this way right like you can see how easy
it is to follow this sort of format and
it is to follow this sort of format and
have these high perf M but I keep making
have these high perf M but I keep making
improvements so let me show you the one
improvements so let me show you the one
that I found today with breakout that
that I found today with breakout that
makes things just a little bit
nicer so what I did it's a very simple
nicer so what I did it's a very simple
change you can see that these init
change you can see that these init
methods are way simpler now right the
methods are way simpler now right the
signature is just init with the n and
signature is just init with the n and
allocate with the en and like they don't
allocate with the en and like they don't
have these gigantic type signatures
have these gigantic type signatures
right and the init has a couple
right and the init has a couple
allocations the allocate has a few
allocations the allocate has a few
more we're going to figure out how to
more we're going to figure out how to
name these
name these
better but this is it and then if I go
better but this is it and then if I go
to breakout.
to breakout.
C look at this I just allocate the
C look at this I just allocate the
struck directly and then I call allocate
struck directly and then I call allocate
to inject the additional fields that I
to inject the additional fields that I
need like that and that's
need like that and that's
it and then if I go to
scon right if I go to python yeah we
scon right if I go to python yeah we
still have this big signature here from
still have this big signature here from
python but um look at that the signature
python but um look at that the signature
is gone from here because there's no
is gone from here because there's no
Giant in it
Giant in it
signature right the self. EnV cython
signature right the self. EnV cython
lets you use basically the same
lets you use basically the same
initializer Syntax for C structs so we
initializer Syntax for C structs so we
do that like this it's like very simple
do that like this it's like very simple
you eliminate an additional call you
you eliminate an additional call you
call a knit on it instead of allocate
call a knit on it instead of allocate
and you're done that's the entire code
and you're done that's the entire code
so see how much simpler that is now for
so see how much simpler that is now for
uh the the allocate that's like a major
uh the the allocate that's like a major
pain point of scon just gone
well no more big signature yeah so I
well no more big signature yeah so I
mean this is the type of stuff I do that
mean this is the type of stuff I do that
I don't expect you know new contributors
I don't expect you know new contributors
to be able to like to do but like one of
to be able to like to do but like one of
the big things that I do right is I care
the big things that I do right is I care
a lot about keeping things simple so I
a lot about keeping things simple so I
invest a lot of time like when something
invest a lot of time like when something
is not as simple if there's like what
is not as simple if there's like what
seems like redundant complexity to me it
seems like redundant complexity to me it
bothers me a lot and I'll like keep
bothers me a lot and I'll like keep
thinking about it for and maybe it'll
thinking about it for and maybe it'll
take a few weeks right but eventually I
take a few weeks right but eventually I
figure out a way to make it simpler so
figure out a way to make it simpler so
this is what that happened I needed to
this is what that happened I needed to
take a weekend in order to like chill
take a weekend in order to like chill
out and reset but then when I came back
out and reset but then when I came back
today it was actually pretty
today it was actually pretty
straightforward to figure this
out so this is basically I think that
out so this is basically I think that
this fixes the this fixes the Jank with
bindings so I'll let you finish that I'm
bindings so I'll let you finish that I'm
going to try just I'm going to start
going to try just I'm going to start
making some commits here and uh then
making some commits here and uh then
I'll start on like the other
I'll start on like the other
environments like going through and
environments like going through and
doing this and yeah we'll go from there
he you up when it's fixed yeah sure
he you up when it's fixed yeah sure
thing good job on these environments
thing good job on these environments
like just coding up two environments
like just coding up two environments
over the weekend is very nice
very
very
good after you finish your commit I take
good after you finish your commit I take
my P okay let me to see your
my P okay let me to see your
PR what did you
do
and ah very nice
lines brought to you by B and linky well
lines brought to you by B and linky well
thank you
thank you
both try is
instance wait what
what is
this oh I see why you did
this oh I see why you did
this okay I'm going to take this for now
this okay I'm going to take this for now
for the um
it's better so we put in the pr
it's better so we put in the pr
structured OBS are
index nah I'm just sneezing we're
good okay let me let me try to actually
good okay let me let me try to actually
get something set up real quick um
well we'll just get this Branch working
well we'll just get this Branch working
then if I'm going to have to fix this
then if I'm going to have to fix this
this is
fine
e e
okay this is all
okay this is all
fine and
and we just do in
it look at
that
reallocated this
now we grab this uh this signature from
now we grab this uh this signature from
here and this should be a relatively
here and this should be a relatively
easy
Port Dot
score no
score no
with
with
with
40 paddle width paddle height ball width
40 paddle width paddle height ball width
ball height pedal
speed X
Y this is fine
then we just have to do allocate and
then we just have to do allocate and
n look at
n look at
that get rid of this get rid of all
that get rid of this get rid of all
those extra
those extra
constants get rid of
this and uh we have to edit the the
this and uh we have to edit the the
client
pong C pong this should just be C pong I
pong C pong this should just be C pong I
don't know why we have my
pong
okay this is going to be C pong
here
oops Wall
height okay this is good
What's happen in
What's happen in
here and it should not
here and it should not
return for
going to add this in
there we go
boom except it's not doing
anything it is recording stuff
actions okay let's see what's going on
actions okay let's see what's going on
here reset
allocate probably something's not
allocate probably something's not
getting set
allocate I'm calling allocate
allocate I'm calling allocate
here what's going
on for
okay for
question are those memory
question are those memory
leaks these ones aren't if you have ones
leaks these ones aren't if you have ones
that are not these than they are so
that are not these than they are so
there are like there are a few hundred
there are like there are a few hundred
bytes of system leaks uh that are in I
bytes of system leaks uh that are in I
think either openg or some other
think either openg or some other
dependencies of
dependencies of
rib uh these are the ones that you will
rib uh these are the ones that you will
always see if you see more than three of
always see if you see more than three of
them and they don't look like this then
them and they don't look like this then
they're wrong
God
jeez e
I'm just posting my streaming group
I'm just posting my streaming group
chats that's funny
what the heck is wrong with this
what the heck is wrong with this
thing why is it not
resetting I mean probably something got
resetting I mean probably something got
set differently
set differently
right let me go check the uh the
original go
all the variables get set there
all the variables get set there
ah frame
skip this is probably
it
it
aha noop
noop can you beat
it hard
oh I got a
point hey I got two
points I think I've gotten better at uh
points I think I've gotten better at uh
pong by playing League all weekend I
pong by playing League all weekend I
don't think I've ever gotten two points
don't think I've ever gotten two points
on
it I say as I miss it five times
H I got a three points on it it turns
H I got a three points on it it turns
out you just need to be
out you just need to be
cracked to like play the thing it is
cracked to like play the thing it is
playable it's very
hard there we
go you have to time it very well
but we can get points on it it is
possible yeah there you
go is possible
all right well do we have to change
all right well do we have to change
anything with uh I don't even think we
anything with uh I don't even think we
have to change anything with the binding
have to change anything with the binding
do
we uh what
we uh what
happened oh we have to change a couple
happened oh we have to change a couple
small things with the signatures
yeah we just have to
yeah we just have to
do
pong the
song wa
it so much easier isn't it
what
this you no longer need any of this
garbage look at all that so easy
garbage look at all that so easy
so
easy so we have to do
easy so we have to do
observations equal to
float towards
float towards
terminals score
terminals score
LR height is height paddle
LR height is height paddle
width so we do add you know we add this
width so we do add you know we add this
Anno
Anno
stuff frame skip is frame
skip which is four for
now what's
now what's
wrong compiler crash
what's wrong here
see my pong not an identifier type oh
see my pong not an identifier type oh
yep that's
[Music]
fine still
no doesn't like this signature
oh because you need to put the type dep
oh because you need to put the type dep
in
in
right
there need the type
signature
oops type signature goes
here yeah easy enough right
[Music]
almost
almost
there this is and
there this is and
per what's wrong here render yeah we
per what's wrong here render yeah we
need to add couple Anders Sands here
calling free on
calling free on
pointer nonzero
pointer nonzero
offset we'll figure out what's wrong
offset we'll figure out what's wrong
with that
it
render that's
weird probability
tensor Nan
what would that be that's very
weird oh you forgot to call a NP you
weird oh you forgot to call a NP you
should probably add some guard for
this for got to call it reset up come
on here you go
this is the untrain
this is the untrain
policy you can see it does hit it back
policy you can see it does hit it back
occasionally I wonder how long it will
occasionally I wonder how long it will
take it to get like a point
take it to get like a point
randomly probably will take it quite a
randomly probably will take it quite a
while to get a
point but then again that's true of the
point but then again that's true of the
original pong game as well
I think you can do it in two hits maybe
I think you can do it in two hits maybe
maybe you can do it in
one can you do it in one let me see
you can do it in three I
think yeah you can do it in three hits I
think yeah you can do it in three hits I
don't know if you can do it you can
don't know if you can do it you can
probably do it in two I don't know if
probably do it in two I don't know if
you can do it in one
you can do it in one
made the pr for Connect
made the pr for Connect
4 very
good take a
look 1.1k on puffer by the way is very
nice question with
Enduro is it
Enduro is it
complicated hold on let me check this
complicated hold on let me check this
for bet real quick
this is the
this is the
game how's it
work is this just a racing game like you
work is this just a racing game like you
just do this
oh I
see you have to pass a bunch of
cars this game is
hard ah go off the road if you you can
hard ah go off the road if you you can
go off the road you can't off the
road does the weather do anything or
road does the weather do anything or
does it just change the
colors I don't know if I don't know if
colors I don't know if I don't know if
I've actually ever seen anybody play
this should be more is it actually more
this should be more is it actually more
slippery though
good
good
question F and
stuff I mean I didn't say it's trivial
stuff I mean I didn't say it's trivial
to implement
there's so much stuff on the road what
there's so much stuff on the road what
is all
this oh there is
fog I mean the fog is very easy they
fog I mean the fog is very easy they
just blank out half the screen
you're not obligated to go full
speed damn it
look at that
okay so these are the cars to pass your
okay so these are the cars to pass your
goal is to pass 200 Cars is that
goal is to pass 200 Cars is that
it
yeah oh
yeah oh
jeez oh okay so I passed did it reset it
jeez oh okay so I passed did it reset it
should be 100 more per day I don't know
now
Enduro fun game good
luck that would take me a few days for
luck that would take me a few days for
sure it would take me a few
days so I'm going to need the ROM no I
days so I'm going to need the ROM no I
didn't say you're going to need the ROM
didn't say you're going to need the ROM
it's just going to take it
B I doubt the ROM runs fast
enough I don't know how hard's the
enough I don't know how hard's the
Enduro
Enduro
logic maybe it's kind of hard
logic maybe it's kind of hard
it might be kind of hard I don't
know the tough thing about these games
know the tough thing about these games
is that there's
is that there's
uh there's no like spec for how they are
uh there's no like spec for how they are
done as far as I
know let me go look at Spencer's stuff
you can find the code on
you can find the code on
GitHub is it like assembly though like
GitHub is it like assembly though like
what
what
code look it's benser
code look it's benser
stuff wait their
GitHub huh there's no code here dude
GitHub huh there's no code here dude
these load ROMs what what what are you
these load ROMs what what what are you
talking about
connect for
connect for
any that doesn't have the code
any that doesn't have the code
bet that's just that loads a
ROM the rapper should just be logic I
ROM the rapper should just be logic I
mean uh the logic should just be rappers
mean uh the logic should just be rappers
in there
we check the
H Connect Four
H Connect Four
Pi you shouldn't need Raab in the pi
Pi you shouldn't need Raab in the pi
since you did Raab in
um yeah you got like a redundant import
um yeah you got like a redundant import
but other than that this is it it
but other than that this is it it
doesn't matter this is a nice small
doesn't matter this is a nice small
binding
you committed the binary here by
mistake breakout make connect with this
mistake breakout make connect with this
is
is
fine it's
fine it's
fine we figured out how to do this
fine we figured out how to do this
easier but this is fine
uh I can just take this and I'll remove
uh I can just take this and I'll remove
the
breakout hold
breakout hold
on let me figure out my own Branch
on let me figure out my own Branch
shenanigan so I can go fix this up for
you
e e
let me get your stuff working here
let me get your stuff working here
Spence spener one
second e
you can see here that I made the
you can see here that I made the
extensions thing way
extensions thing way
easier
easier
so you see this this replaces the
so you see this this replaces the
extension stuff from
extension stuff from
before so literally all this garbage
before so literally all this garbage
here is
here is
gone I like simple
things
for
e e
this for you
can I put this on the
can I put this on the
website I still have to I I have
website I still have to I I have
messages from this guy on how to add
messages from this guy on how to add
cred credits to the top of the page so
cred credits to the top of the page so
those are coming but can I put this on
those are coming but can I put this on
the
website to be honest I think we're going
website to be honest I think we're going
to replace M scripton with
bun okay
Docker
Docker
docks go for
docks go for
it two to three memory
it two to three memory
leaks how
leaks how
big 2 to three I told you is just ra
big 2 to three I told you is just ra
libian like if it's leaking like 408 and
libian like if it's leaking like 408 and
then like 50 or something and 50
then like 50 or something and 50
something that's
fine should matter either way
for
e e
in
in
excess 822
excess 822
bytes I mean it really shouldn't be that
bytes I mean it really shouldn't be that
hard you just
hard you just
check you only have that so many
check you only have that so many
allocations right none of them are
allocations right none of them are
Dynamic I'll check for you in a second
Dynamic I'll check for you in a second
let me get the initial thing
done okay here's your Connect 4 game so
done okay here's your Connect 4 game so
uh we'll do like
this this
and I
and I
win let's just take
win let's just take
a screenshot of this
I
win very
nice we got to make some tokens
nice we got to make some tokens
that have like red puffer it should be
that have like red puffer it should be
like red puffer and blue puffer or
something that'll be
funny for
for the Triple you can have each game
for the Triple you can have each game
with a different ocean creature
with a different ocean creature
strongest has got to be the puffer fish
strongest has got to be the puffer fish
I like the way you
I like the way you
think I like the way you
think it's good
think it's good
advertising you
know
eh it doesn't have instructions on it or
eh it doesn't have instructions on it or
anything
it blocks
it blocks
me I just
smash this cool
watch how fast your thing is
online it's just got to take as long as
online it's just got to take as long as
it's going to be up for GitHub to push
it's going to be up for GitHub to push
or to
rebuild I'm thinking that instead of
rebuild I'm thinking that instead of
having these like build web
having these like build web
files what we're going to do is we're
files what we're going to do is we're
going to have um I think bun in their
going to have um I think bun in their
latest release they added support to
latest release they added support to
just like compile C
just like compile C
natively so I was thinking we just have
natively so I was thinking we just have
like a bun compiler whatever that just
like a bun compiler whatever that just
builds directly from puffer Li
Source it's
online for
where's your what's your name on this
where's your what's your name on this
triple Triad yeah of course what's your
triple Triad yeah of course what's your
handle on
here I can't tell from
here I can't tell from
uh I see it I can't see it on
here for
what's this thing train at you said
200k 200k for now soon to be a million
oh oh I forgot my bad I got the
oh oh I forgot my bad I got the
screenshot wrong it's supposed to be
screenshot wrong it's supposed to be
yeah the marketing the way to Market
yeah the marketing the way to Market
this as I
this as I
do I do it from here so you can see the
URL there we
go oh but wait you can't see it now wait
go oh but wait you can't see it now wait
yeah you can it doesn't cut it off
right yeah no it shows full like this
right yeah no it shows full like this
this is fine
there we
there we
go very
nice and I'm saying 1 mil plus cuz I
nice and I'm saying 1 mil plus cuz I
know that that's
easy what the is all this stuff
all right let's see this other
all right let's see this other
environment of
yours if you want by the way you can uh
yours if you want by the way you can uh
you can clean like I just committed the
you can clean like I just committed the
pong and the breakout stuff so you can
pong and the breakout stuff so you can
clean up the MS a little bit uh if you
clean up the MS a little bit uh if you
make the bindings like that it just it's
make the bindings like that it just it's
really quick it took me like five
really quick it took me like five
minutes you saw for
minutes you saw for
uh for pong once I figured it
uh for pong once I figured it
out let's see your other environment
though how's this
work let me make a PR
work let me make a PR
okay well can you add like a little like
okay well can you add like a little like
line of text like what what are these
line of text like what what are these
numbers how does this game
work 3x3
okay
huh I see
cool
that's
funny why not watch a video cuz that
funny why not watch a video cuz that
didn't take very long and I figured it
out for
but is so
but is so
garbage the 4 U tab needs to be
garbage the 4 U tab needs to be
fixed this algorithm is like too much
fixed this algorithm is like too much
slop following tab is
slop following tab is
better the density of posts is a little
better the density of posts is a little
bit
bit
ridiculous I don't need every single
ridiculous I don't need every single
post from
Elon PR made awesome let's see I like
Huffer
lib triple TR triple
Triad
Triad
um you did some weird stuff here look
um you did some weird stuff here look
you deleted these
you deleted these
files why is Connect 4 gone
on okay so this is
pull down
pull down
yeah that'd be
good I want see this file so
650 in star star board States
holy
holy
so I will take this code AS
so I will take this code AS
is if I may give you
is if I may give you
um some recommendation for environment
um some recommendation for environment
structure
structure
though in case you want to tweak stuff I
though in case you want to tweak stuff I
mean I'll take it as is cuz like if it
mean I'll take it as is cuz like if it
works we can put it online and we can
works we can put it online and we can
fix stuff
fix stuff
after um don't do multiple pointers for
after um don't do multiple pointers for
stuff like this
I would suggest you do 1D indexing and
I would suggest you do 1D indexing and
if you look at like the Moa I just make
if you look at like the Moa I just make
like a little inline method to do 1D
offsets it can be substantially slower
offsets it can be substantially slower
like doing these double pointers like
like doing these double pointers like
this is substantially slower than just
this is substantially slower than just
doing the
arithmetic thrashes your cach and
arithmetic thrashes your cach and
whatnot also multiple IND directions
it's also just annoying to have to pass
it's also just annoying to have to pass
around and keep track of multiple levels
around and keep track of multiple levels
of pointers
right yeah you had it here look you did
right yeah you had it here look you did
right here you did it right
right here you did it right
here MOBA for inline it's very easy it's
here MOBA for inline it's very easy it's
just like you make instead of having to
just like you make instead of having to
do this every time right for like 3D or
do this every time right for like 3D or
4D whatever you just like make a
4D whatever you just like make a
oneliner that does the math for you
this is
fine if you really want to go fast I've
fine if you really want to go fast I've
done stuff where I've cashed RNG before
done stuff where I've cashed RNG before
you don't need to do that
probably I understand why you do it
probably I understand why you do it
though like you like to have this sytax
though like you like to have this sytax
here and I really like the syntax as
here and I really like the syntax as
well uh it's not worth it though what
well uh it's not worth it though what
you you do is you just do like int Adder
you you do is you just do like int Adder
equals offset and then you do cards in
equals offset and then you do cards in
Hand of
Hand of
offset there's one extra
line for
States yeah so this init function will
States yeah so this init function will
get a little simpler these pointers will
get a little simpler these pointers will
get
simpler this will get simpler because
simpler this will get simpler because
you won't have to do this type of
you won't have to do this type of
initialization you won't have to do
this
this
200k never able to get 1
200k never able to get 1
million we'll do some perf optimization
million we'll do some perf optimization
if you
if you
want it's starting to get a little bit
want it's starting to get a little bit
late
late
tonight and uh I still got to go do my
tonight and uh I still got to go do my
weights for the
day I can give you some tips on stuff
day I can give you some tips on stuff
actually I'll tell you what I can do
actually I'll tell you what I can do
let's let's uh fix this PR we'll PR this
let's let's uh fix this PR we'll PR this
and then I can I mean my gym is
and then I can I mean my gym is
literally just in the garage so if you
literally just in the garage so if you
don't mind I'll just talk you through on
don't mind I'll just talk you through on
uh on Discord I'll talk you through the
uh on Discord I'll talk you through the
optimizations if you want to do them
optimizations if you want to do them
does that sound
good just using copy paste hypers that's
good just using copy paste hypers that's
fine I'll talk you through optim and
fine I'll talk you through optim and
I'll talk you through the steps I mean
I'll talk you through the steps I mean
you know part of the deal here is if
you know part of the deal here is if
you're contributing stuff to puffer lib
you're contributing stuff to puffer lib
I share uh some of the stuff I know
I share uh some of the stuff I know
right that's kind of part of the deal is
right that's kind of part of the deal is
that you get to learn some cool
stuff and try to be good to the
stuff and try to be good to the
contributors here as best I
can yeah this type of stuff here is and
can yeah this type of stuff here is and
this isn't slow but this will annoy you
this isn't slow but this will annoy you
big brain stuff I
big brain stuff I
mean I've been doing RL for a long
mean I've been doing RL for a long
time to be fair the simulator stuff the
time to be fair the simulator stuff the
high perf simulator stuff is relatively
high perf simulator stuff is relatively
new but like the simulator stuff in
new but like the simulator stuff in
general is not I've been building Sims
general is not I've been building Sims
for a long
for a long
time really one giant Sim with neural
time really one giant Sim with neural
MMO but you get the idea
yeah all these Loops actually will get
yeah all these Loops actually will get
easier
these are actually going to be way
these are actually going to be way
slower than they would be with
1D Yep this is the trick that I
1D Yep this is the trick that I
use in
use in
hand soon as you have the new PR you let
hand soon as you have the new PR you let
me
me
know just looking through this
still this is good that you were able to
still this is good that you were able to
hack through this so quickly
[Music]
print
F you left
F you left
uh oh
this uh there's a text format thing in
this uh there's a text format thing in
RB so you don't have to use S printf
RB so you don't have to use S printf
RB has a really nice text format so you
RB has a really nice text format so you
don't have to do
this don't worry about it now just make
this don't worry about it now just make
the pr so I can put this
sorry no
worries this is cool
you know I've kind of wanted to do one
you know I've kind of wanted to do one
of these types of
of these types of
things it wouldn't be that
hard but
hard but
um I don't know about the rendering how
um I don't know about the rendering how
fast we can get software render
Twitter ridiculous
did they change
this yeah this is a fine change
yeah that's
yeah that's
fine good change
locks
you still easy that is random opponent
I think those are the only easy to Port
I think those are the only easy to Port
environments for now we'll change the m
environments for now we'll change the m
in it in a
bit see there are a few Discord things
bit see there are a few Discord things
with this
right oops that's
right oops that's
DMS let me just answer an email on the
DMS let me just answer an email on the
side while you finish that real quick
figur this out real quick where
uh he is my freaking old gmail as why
we got potentially a new project with
this
e
e e
meetings meetings and more
meetings meetings and more
meetings too much stuff to
schedule we're free
Wednesday Thursday
cool
there we
go off for Li
yeah you let me know as soon as this is
yeah you let me know as soon as this is
fixed and we'll merge this and then
fixed and we'll merge this and then
we'll do uh we'll go from there actually
we'll do uh we'll go from there actually
here while you're finishing that I'm
here while you're finishing that I'm
just going to go use the restroom real
just going to go use the restroom real
quick I'm going to get ready uh that way
quick I'm going to get ready uh that way
we'll merge this I'll go to the gym I'll
we'll merge this I'll go to the gym I'll
help you fix I'll help you fix all the
help you fix I'll help you fix all the
other stuff and that'll be the day once
other stuff and that'll be the day once
but hey we'll have two new environments
but hey we'll have two new environments
online today plus a bunch of fixes plus
online today plus a bunch of fixes plus
like the one very fundamental thing so
like the one very fundamental thing so
that's pretty good progress we be right
back
e
e e
okay why do I have my freaking email on
okay why do I have my freaking email on
screen not like it
screen not like it
matters but whatever for
why damn I have to not have my stupid
why damn I have to not have my stupid
emails open on here because I keep
emails open on here because I keep
clicking the tabs just out of like just
clicking the tabs just out of like just
reflexively doesn't really matter
reflexively doesn't really matter
but it's not my business
one oh I know I can in the meantime I
one oh I know I can in the meantime I
can try to find the uh the memory
can try to find the uh the memory
leak in your
environment one two three four five six
environment one two three four five six
seven eight
CX plus the client is
CX plus the client is
nine okay that's one
free
then 2 three
then 2 three
four 5 six
four 5 six
78 that looks good to
78 that looks good to
me board X board y long as connect did
y actions off St rewards
y actions off St rewards
yeah free connected and that looks like
yeah free connected and that looks like
there shouldn't be any memory Lakes are
there shouldn't be any memory Lakes are
we sure that there are
we sure that there are
any you loading a
texture you're not on you're not loading
texture you're not on you're not loading
a
texture oh I see it right here
texture oh I see it right here
right this is what we
have
168 oh it tells you where this
168 oh it tells you where this
is right
here I bet you're not calling the right
here I bet you're not calling the right
method
you called the wrong method you called
you called the wrong method you called
free Connect 4 instead of free
free Connect 4 instead of free
allocated you see you called the
allocated you see you called the
allocate version and then you call this
free I'll fix that
[Music]
yeah yeah yeah yeah yeah
boom three leaks
fixed level 25 Magikarp
there you go that's fixed
yeah the reason I build with those flags
yeah the reason I build with those flags
the build local Flags is it actually
the build local Flags is it actually
will tell you exactly where the leaks
will tell you exactly where the leaks
are they're your leaks you can see right
are they're your leaks you can see right
here that I saw it just like this so
here that I saw it just like this so
then I went and like I looked and I said
then I went and like I looked and I said
oh I bet you're not calling this free
method that's
fixed
for
e e
h
that's
cool e
is this quite
good you just write C
we'll have to do something like this for
we'll have to do something like this for
it is the one obnoxious
it is the one obnoxious
thing not that
bad wait how does it have a level 25
bad wait how does it have a level 25
Magikarp that doesn't it evolve
wait I just realized it evolves at level
wait I just realized it evolves at level
huh I was just looking at that and I was
huh I was just looking at that and I was
like wait a second Magikarp evolves
like wait a second Magikarp evolves
early
can you link stuff
how did it get a level 20 how did it get
how did it get a level 20 how did it get
a level 25 magikarps what I want to know
I mean you should be able to pull
I mean you should be able to pull
logs by now you should be able to pull
logs by now you should be able to pull
videos or something
videos or something
should like accept the
should like accept the
state definitely some stuff that could
state definitely some stuff that could
be done there
and I grab freaking
Zoom screw it we not use zoom because
Zoom screw it we not use zoom because
it's stupid
log the agent parties to w
log the agent parties to w
b huh
I mean it's like hitting the back button
I mean it's like hitting the back button
is all that it can be
right where's this
PR I want to see they want to play the
PR I want to see they want to play the
fancy new
fancy new
environment they want to play with the
environment they want to play with the
new environment
here how's this PR going Spencer I can I
here how's this PR going Spencer I can I
can do this tomorrow if you want I can
can do this tomorrow if you want I can
just talk you through optimizations now
just talk you through optimizations now
depends what you you want to
do switch Train by accident or there's a
do switch Train by accident or there's a
bug the wild battle disable
code how would that change anything it
code how would that change anything it
doesn't know any
doesn't know any
attacks it would have to be switch
attacks it would have to be switch
trained
right struggle win no way
no way it would die
first it would die before it runs out of
first it would die before it runs out of
pp right because it would have to go
pp right because it would have to go
through all the splash
through all the splash
PP I don't even think is there even like
PP I don't even think is there even like
a m that doesn't know any
a m that doesn't know any
attacks in gen one and I thought doesn't
attacks in gen one and I thought doesn't
strugle also take yeah Metapod okay but
strugle also take yeah Metapod okay but
doesn't struggle also take 25% of your
doesn't struggle also take 25% of your
HP um per attack in gen
one
one
yeah you see I did actually do my
yeah you see I did actually do my
research on Pokemon when I started this
research on Pokemon when I started this
stuff uh combo of it could be but
stuff uh combo of it could be but
like I would very very highly doubt it I
like I would very very highly doubt it I
think it randomly switching Pokemon is
think it randomly switching Pokemon is
way more
likely I would think that's way more
likely well while I'm waiting for
likely well while I'm waiting for
Spencer here I'm going to
Spencer here I'm going to
uh it'll be so awesome probably not
uh it'll be so awesome probably not
repeatable
that'd be pretty funny it's okay we'll
that'd be pretty funny it's okay we'll
run
carbs what's Triple Triad Spencer's been
carbs what's Triple Triad Spencer's been
making this cool environment that uh I
making this cool environment that uh I
want to play he's working on the pr
want to play he's working on the pr
right now it's like this card game from
right now it's like this card game from
Final
Fantasy welcome Ramy
Fantasy welcome Ramy
so he built this over the weekend which
so he built this over the weekend which
which is pretty
cool he also built Connect
cool he also built Connect
4 so we've got a fifth environment on
4 so we've got a fifth environment on
here now we can do like
this nearing the Finish Line okay
you don't do any web stuff right right
you don't do any web stuff right right
Romy I've been trying to figure out
Romy I've been trying to figure out
oops I've been trying to figure out if
oops I've been trying to figure out if
this is worth playing
with I mean I can probably just try
with I mean I can probably just try
something real quick
something real quick
right you
right you
do what do you think of this stuff
do what do you think of this stuff
do uh cuz right now I'm just building
do uh cuz right now I'm just building
stuff with M script in and then I'm just
stuff with M script in and then I'm just
copying the like wasum files into a repo
copying the like wasum files into a repo
which is really gross and it's going to
which is really gross and it's going to
blo my repo very quickly I was thinking
blo my repo very quickly I was thinking
I could do this and I could just build
I could do this and I could just build
right from puffer
Leb time box it for a
Leb time box it for a
day time
day time
box time box what's the time box
oh time box that's
funny I just try this right now
funny I just try this right now
I'm waiting for H Spencer
should be resolved bashing head against
should be resolved bashing head against
get I'm going to be honest with you if
get I'm going to be honest with you if
you ask me how to revise a a p and get I
you ask me how to revise a a p and get I
would not be able to tell
you I'd not be able to tell
you I'd not be able to tell
you symbols
I don't think we need this
right I just do like
right I just do like
main
void for
still not
still not
good what's not
good for
how do I include stuff with
bun why not use
wasum I do use
wasum I'm just trying to see if this
wasum I'm just trying to see if this
would be cleaner cuz right now I've got
would be cleaner cuz right now I've got
a bunch of bash scripts right that are
a bunch of bash scripts right that are
committing web assembly builds and I
committing web assembly builds and I
have to commit the Wason builds to the
have to commit the Wason builds to the
repo as
well I guess you're right that it
well I guess you're right that it
probably well I don't know when it
probably well I don't know when it
builds them I don't know if you have to
builds them I don't know if you have to
I think it would does it build them live
I think it would does it build them live
I don't know
I'm just playing with this I already
I'm just playing with this I already
have it working in wassom like what do
have it working in wassom like what do
you think
you think
here this is all web
assembly
wome e
this is a
this is a
absolutely disgusting
absolutely disgusting
language R.H not
found uh
hey big fan of your work
welcome I'm currently waiting for a PR
welcome I'm currently waiting for a PR
and messing around seeing if I can make
and messing around seeing if I can make
this a little
this a little
cleaner I got all these M's
cleaner I got all these M's
online and I'm just trying to clean them
online and I'm just trying to clean them
up buffer GG is fire thank
up buffer GG is fire thank
you to be fair I only Built the top two
you to be fair I only Built the top two
of these the other three are by
of these the other three are by
contributors I guess I touched up the uh
contributors I guess I touched up the uh
the code for these two
the code for these two
but it's been going well this Banner is
but it's been going well this Banner is
outdated as well we're at
1.1 I'm very happy with that I gota I'm
1.1 I'm very happy with that I gota I'm
like completely uninspired with the
like completely uninspired with the
Twitter lately I got to come up with a
Twitter lately I got to come up with a
few good things to tweet so we hit
few good things to tweet so we hit
5K Smith machine's fairly safely
5K Smith machine's fairly safely
downstairs
downstairs
star the puffer yes indeed Star Puffer
star the puffer yes indeed Star Puffer
lib it helps out a ton this is all open
lib it helps out a ton this is all open
source after
all how do you link
libraries open source is indeed the way
libraries open source is indeed the way
thank you for your service of
thank you for your service of
course we're going to fix this mess that
course we're going to fix this mess that
RL is in we're going to absolutely fix
RL is in we're going to absolutely fix
this
mess we're not fixing the mess that
mess we're not fixing the mess that
JavaScript is in some things you don't
JavaScript is in some things you don't
need a doctor you need a
need a doctor you need a
priest I was just messing around with
priest I was just messing around with
with this cuz bun added this C
with this cuz bun added this C
compiler and I was wondering if it would
compiler and I was wondering if it would
be easier than using M
scripton bet has the uh the rank of
scripton bet has the uh the rank of
proelite of the puffer order always ask
proelite of the puffer order always ask
he's always reminding people to star the
he's always reminding people to star the
repo and indeed it helps out a
repo and indeed it helps out a
lot cannot exercise layers of in I don't
lot cannot exercise layers of in I don't
know what the heck this is like can
know what the heck this is like can
somebody please explain to me how the
somebody please explain to me how the
heck this is a real language export
heck this is a real language export
const Open
const Open
Bracket
Bracket
symbols Open Bracket my random close
symbols Open Bracket my random close
bracket on this const
bracket on this const
equals CC of Open Bracket giant like
equals CC of Open Bracket giant like
nested data structure thing and somehow
nested data structure thing and somehow
this is supposed to be a comp a
this is supposed to be a comp a
compilation it's not a real language I
compilation it's not a real language I
refuse to believe that JavaScript is
refuse to believe that JavaScript is
real
branched off Connect 4 when I originally
branched off Connect 4 when I originally
made it but deleted some of it in the
made it but deleted some of it in the
effort branching get fight Branch git
effort branching get fight Branch git
issues fighting each
issues fighting each
other dude the easiest way is you just
other dude the easiest way is you just
make sure you don't lose your code and
make sure you don't lose your code and
you copy paste it into a new commit and
you copy paste it into a new commit and
you'd be done it's easy you just do
that hit a DSL inside of a Json object
NBD CH
NBD CH
JS it's still not a real language yo
JS it's still not a real language yo
that guy do you know how to link stuff
that guy do you know how to link stuff
with this I can't figure out how to link
with this I can't figure out how to link
uh
RB I see the docks are right
RB I see the docks are right
here right they've got docks and they
here right they've got docks and they
have libraries but
have libraries but
like how do I just link a
directory let the man work try directory
directory let the man work try directory
instead of a library
name they should be the same it's like
name they should be the same it's like
slrb right
that's the lib a version I assume that
that's the lib a version I assume that
you want the lib a
you want the lib a
right or maybe you don't maybe you want
right or maybe you don't maybe you want
like do I want this
like do I want this
version I thought I would want lib ray.
version I thought I would want lib ray.
a or whatever
a or whatever
right L
rib well when I do build
rib well when I do build
web I do I use the ray. a right lib ray.
a I mean there are all these flags and
a I mean there are all these flags and
stuff I don't know how bun does this
maybe oh I have a better
idea this is how we solve our
problems wait what this is not
the wait this is not the repo this is
the wait this is not the repo this is
not the it's got to be bigger than this
not the it's got to be bigger than this
this account
right where's the
right where's the
bun where's the bun JS thing
somebody has the handle bun
JS uh bun
JS uh bun
JavaScript somebody made like a a
JavaScript somebody made like a a
one-off
one-off
account I knew
account I knew
it so this is what we're going to
do
for e
so this is how in the modern era you get
so this is how in the modern era you get
help on things you DM them on Twitter
help on things you DM them on Twitter
and instead of spending my time I just
and instead of spending my time I just
see if they go do
it you want to modify Flags according to
it you want to modify Flags according to
the I can't see how to do
it I don't see where you link this where
it I don't see where you link this where
you add the flags
here oh
this oh here I
see fls
all right maybe there was
stuff is this an rtfm moment not
necessarily standard
necessarily standard
Joseph I don't know is
Javascript shouldn't have to be a
manual
M well
M well
do I have to separate these bloody
do I have to separate these bloody
things with
quotes do I have to like separate all
quotes do I have to like separate all
these all the good docks have been
red dude this is so dumb
I e
my hands hurt from typing this garbage
my hands hurt from typing this garbage
I'm
I'm
on
on
stupid separating command is
dumb
dumb
huh uh this thing
S assertions I guess this one doesn't
exist I don't think I need this one
what about the shell
what about the shell
file I thought you need the shell
file doesn't compile
I don't know man I I don't want to be
I don't know man I I don't want to be
wasting my time on freaking
wasting my time on freaking
JavaScript
uh Spencer still fighting the uh the pr
here I mean I can flip the order of
here I mean I can flip the order of
stuff I can go do my exercise tell you
stuff I can go do my exercise tell you
how to do the optimizations and I can
how to do the optimizations and I can
look at it after or whatever if that's
easier let's do that for now okay sounds
easier let's do that for now okay sounds
good so here's what we'll do folks uh
good so here's what we'll do folks uh
I'm going to go to the going to get some
I'm going to go to the going to get some
exercise going to help Spencer with this
exercise going to help Spencer with this
thing I'll drop in the puffer lip voice
thing I'll drop in the puffer lip voice
uh I'm going to be doing that but if
uh I'm going to be doing that but if
people want to tune in that's fine
people want to tune in that's fine
um yeah this has been pretty good I mean
um yeah this has been pretty good I mean
I had three hours of meetings today so I
I had three hours of meetings today so I
didn't have a ton of Dev time but um we
didn't have a ton of Dev time but um we
figured out how to get way cleaner scon
figured out how to get way cleaner scon
wrappers we fixed the scyon wrappers for
wrappers we fixed the scyon wrappers for
breakout and pong we got Spen thing
breakout and pong we got Spen thing
integrated we checked uh we reviewed and
integrated we checked uh we reviewed and
merged some PRS it pretty decent overall
merged some PRS it pretty decent overall
I'd say so uh where's my I'm going to go
I'd say so uh where's my I'm going to go
grab my headset and then I'll hop onto
grab my headset and then I'll hop onto
this
this
thing let me
see puffer Discord is
see puffer Discord is
public discord.gg puffer in the event
public discord.gg puffer in the event
thanks everyone start puffer lib and I'm
thanks everyone start puffer lib and I'm
going to drop on here now see yeah
