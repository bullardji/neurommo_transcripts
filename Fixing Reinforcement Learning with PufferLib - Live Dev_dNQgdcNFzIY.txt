Kind: captions
Language: en
okay we're
okay we're
live
hi and take a quick look at the puffer
hi and take a quick look at the puffer
Discord see if there's anything to fix
Discord see if there's anything to fix
major here and uh if not continue on
major here and uh if not continue on
some of the infrastructure work that I'm
some of the infrastructure work that I'm
doing
uh that is a seg fault my
friend friend
friend friend
[Music]
RS build
uh that already got it see look how
uh that already got it see look how
helpful the community is gets it before
helpful the community is gets it before
I do
[Music]
[Music]
uh yeah so he's just he needs to figure
uh yeah so he's just he needs to figure
this thing out how
this thing out how
do test stuff
do test stuff
locally oo look at
this not bad doesn't have the ghost
this not bad doesn't have the ghost
which is the main
which is the main
main thing
very nice Pac-Man
very nice Pac-Man
end uh the ghost or the hard part is the
end uh the ghost or the hard part is the
thing though
it's say
oh this is from AI That's
oh this is from AI That's
funny
funny
uh no I don't think this is true
import a module
yeah tortur is decent um does sometimes
yeah tortur is decent um does sometimes
break some stuff
uh I think this is
okay so uh we're all caught up on this
okay so uh we're all caught up on this
we can start on some Dev here going to
we can start on some Dev here going to
just do a
just do a
quick hour and a half session is uh
quick hour and a half session is uh
right now before I head to brunch it is
right now before I head to brunch it is
Sunday I normally don't do stuff on on
Sunday I normally don't do stuff on on
Sunday but I've been lazing all week and
Sunday but I've been lazing all week and
there's work to
there's work to
do so I figured I'd Dev and I figured I
do so I figured I'd Dev and I figured I
may as well stream
it welcome YouTube folks
I think I had something basic working
right yeah
okay this still
okay this still
works now test
multiprocessing this still works as
well uh okay good so now I just have to
well uh okay good so now I just have to
make the
make the
native puffer environments work with
native puffer environments work with
this which shouldn't be very hard
this which shouldn't be very hard
because of the way that I've
because of the way that I've
restructured
everything so what I was doing
everything so what I was doing
before is I just made the puffer uh
before is I just made the puffer uh
ocean environments they just match the
ocean environments they just match the
vector
vector
API so you just make it and that's it um
API so you just make it and that's it um
but if you want to do multiple of those
but if you want to do multiple of those
on one
on one
subprocess there's one other API thing
subprocess there's one other API thing
that has to match
okay so we can get rid of this
right and then in
multiprocessing so native with 1 M
multiprocessing so native with 1 M
should still work
should still work
right
snake back did it still
work yes so this still works and still
work yes so this still works and still
trains but now the thing that we're
trains but now the thing that we're
going to
going to
do that will be a little
different uh
this is going to be a little awkward um
this is going to be a little awkward um
so it's going to be
so it's going to be
back
multiprocessing still works and is
multiprocessing still works and is
somehow
somehow
faster oh no we know that that's faster
faster oh no we know that that's faster
that's
that's
fine um and then we have to
fine um and then we have to
do num
so what this is
so what this is
saying yeah okay so we now we have to
saying yeah okay so we now we have to
check on this but what this is saying is
check on this but what this is saying is
that we want to we want to have U
that we want to we want to have U
multiple puffer M's per process because
multiple puffer M's per process because
there are only two workers two
there are only two workers two
processes and they're going to be four
processes and they're going to be four
environments uh so this is an unrelated
environments uh so this is an unrelated
issue I believe believe so let's just
issue I believe believe so let's just
do can I do this m
do can I do this m
do M uh two can I do
do M uh two can I do
this no I didn't actually configure
this no I didn't actually configure
that I might as well add that
though
make oh there is no one num M for okay
uh so what we'll do for
uh so what we'll do for
now just for hey welcome that you
spener yeah there twitch twitch has
spener yeah there twitch twitch has
faster chat and doesn't drop your
faster chat and doesn't drop your
messages so good Fair choice
all right let's see if this
all right let's see if this
works we're just doing some infr patches
works we're just doing some infr patches
um this is going to be very convenient
um this is going to be very convenient
for new people for puffer because what
for new people for puffer because what
this is essentially going to let you do
this is essentially going to let you do
is let's say you want to use the new
is let's say you want to use the new
puffer M API but you want to just Dev in
puffer M API but you want to just Dev in
Python uh this will let you just Dev
Python uh this will let you just Dev
really simple in Python still get some
really simple in Python still get some
of the speed UPS uh but then it's like a
of the speed UPS uh but then it's like a
cleaner path right like to optimize cuz
cleaner path right like to optimize cuz
if you just write gymnasium M you're
if you just write gymnasium M you're
screwed like there's no way to make it
screwed like there's no way to make it
fast regardless of what you do but uh if
fast regardless of what you do but uh if
you write it in our API then you have a
you write it in our API then you have a
very clean onboarding ramp to go like
very clean onboarding ramp to go like
from python to scon to C it's built for
that num workers is two
that size must be divisible
by let's see what this
is we've also got this is not th calorie
mug this is um 500 calorie mug
Edition uh it's the same thing Spencer
Edition uh it's the same thing Spencer
it's just annoying because you have to
it's just annoying because you have to
write the loop in Python like the
write the loop in Python like the
loopover environments in Python and the
loopover environments in Python and the
environment in Python at the moment so
environment in Python at the moment so
that's going to go away but it's the
that's going to go away but it's the
same thing you just write the logic in
same thing you just write the logic in
Python instead of in
C there's no point though it's literally
C there's no point though it's literally
once you get comfortable it's just as
once you get comfortable it's just as
easy to do it in see and all your speed
easy to do it in see and all your speed
problems go away the only thing that's a
problems go away the only thing that's a
little annoying at the moment is like
little annoying at the moment is like
The scyon Binding
The scyon Binding
intermediary I really like scyon though
intermediary I really like scyon though
because it gives you the option to Dev
because it gives you the option to Dev
stuff that's fast but looks like python
stuff that's fast but looks like python
I don't know maybe eventually we'll
I don't know maybe eventually we'll
replace it with something else but it's
replace it with something else but it's
been good for
now I will say that uh like a lot lot of
now I will say that uh like a lot lot of
Engineers will probably like it cuz they
Engineers will probably like it cuz they
like they want something that looks more
like they want something that looks more
familiar but still
familiar but still
fast sion's pretty
nice bat size is
one that bad size one
um num workers
I just put this there what
happens now same
thing I'm basically what I'm trying to
thing I'm basically what I'm trying to
do is figure out how to make it so that
do is figure out how to make it so that
you can simulate multiple ocean
you can simulate multiple ocean
environments per core so that you don't
environments per core so that you don't
have to do the loop yourself in Python
have to do the loop yourself in Python
if you don't want to um which it is
if you don't want to um which it is
always going to be faster to handle your
always going to be faster to handle your
own Loops but we should be able to make
own Loops but we should be able to make
it
decent and it's uh being
decent and it's uh being
weird welcome YouTube
weird welcome YouTube
folks happy
Sunday why is bat size
Sunday why is bat size
one what I want want to know like we've
one what I want want to know like we've
got num m is
four oh wait wait wa wait I think
four oh wait wait wa wait I think
there's isn't there like M bat size or
there's isn't there like M bat size or
something yeah I'm
something yeah I'm
done this has got to be two
so it runs but it's not giving us any
so it runs but it's not giving us any
stats
back okay it's better than
nothing why doesn't it give us stats
back I me see so it's going to
back I me see so it's going to
wrap and just so you can see if I leave
wrap and just so you can see if I leave
the default settings this uses a
the default settings this uses a
different code
different code
pathway and now we get
Stacks
interesting how should I about
this it's got to be in serial
this it's got to be in serial
right I'm saying
right I'm saying
so I think I have the same API
though wait infos do append
uh I think the format of the data is
uh I think the format of the data is
different right
let me just see if this fixes it
yeah there you go so literally just
yeah there you go so literally just
minor data format
mismatch so that's
cool 1.4 million steps per second
cool 1.4 million steps per second
training as
well GPU is only on
well GPU is only on
56% so technically if anybody really
56% so technically if anybody really
wants to help us optimize our our
wants to help us optimize our our
training pipeline we could hit 2 million
training pipeline we could hit 2 million
step per second
step per second
training with puffer lip
well look G well I don't know how
well look G well I don't know how
accurate this GPU utilization thing is
accurate this GPU utilization thing is
from Nvidia I don't know if this is just
from Nvidia I don't know if this is just
like but yeah if this is remotely
like but yeah if this is remotely
accurate at 1.4 mil we should be able to
accurate at 1.4 mil we should be able to
hit 2 mil
hit 2 mil
right I mean we're not bot neck by
right I mean we're not bot neck by
CPU we shouldn't be Bob neck by
CPU we shouldn't be Bob neck by
GPU we're
GPU we're
losing we got 16% misscellaneous and
losing we got 16% misscellaneous and
then 13%
then 13%
miscellaneous maybe I just have to clean
miscellaneous maybe I just have to clean
up our miscellaneous code
up our miscellaneous code
I think that includes Cuda device
I think that includes Cuda device
transfer so that might be like
transfer so that might be like
async like async data queuing or
async like async data queuing or
something that we got to
something that we got to
do but I'm pretty happy with
do but I'm pretty happy with
that this will be a very nice feature um
that this will be a very nice feature um
I'm trying to think what the easiest way
I'm trying to think what the easiest way
to test all this is
though so this definitely still works on
though so this definitely still works on
snake right
I mean I could just YOLO merge this to
I mean I could just YOLO merge this to
be
fair okay let's do let's try some
fair okay let's do let's try some
different
Ms hi I'm using python for scientific
Ms hi I'm using python for scientific
computations often time my code
computations often time my code
generates a bunch of data and then I
generates a bunch of data and then I
plot it
plot it
are there any Version Control Systems
are there any Version Control Systems
for data too yes compare different
for data too yes compare different
graphs yeah uh w
graphs yeah uh w
b you just use WB for
b you just use WB for
that if you're not doing RL stuff
that if you're not doing RL stuff
specifically then puffer is not going to
specifically then puffer is not going to
be particularly useful for you but like
be particularly useful for you but like
all of our experiments are on puffer so
all of our experiments are on puffer so
like here we have all these experiments
like here we have all these experiments
look I can compare these are like
look I can compare these are like
different experiments I was running on
different experiments I was running on
mo3 uh here you can see our crazy
mo3 uh here you can see our crazy
Baseline where we ran this for like
Baseline where we ran this for like
literally 2025 years model
literally 2025 years model
2025 so tons and tons of
2025 so tons and tons of
data I would suggest to use that
see normal
breakout thanks yeah that's like the
breakout thanks yeah that's like the
standard thing that people use it has a
standard thing that people use it has a
few issues with it but I think it's
few issues with it but I think it's
generally the best thing out there
uh I have to change num workers to 16
uh I have to change num workers to 16
here so that this will let me run
it B size must
it B size must
be 16 *
3 uh
3 uh
28 so the reason I have to change this
28 so the reason I have to change this
and puffer is just not working is
and puffer is just not working is
because this machine uh is different
because this machine uh is different
core count
core count
okay now this is a legitimate error
okay now this is a legitimate error
um changing the D type to a subarray
um changing the D type to a subarray
type is only
type is only
supported
interesting do I get this without
multiprocessing I do get it without
multiprocessing I do get it without
multiprocessing okay
observations. view OB
type
OBS total that's bazaro
environment okay so it tells you you
environment okay so it tells you you
have a 11 10580 observation
have a 11 10580 observation
space and then it gives you
back well where's this observation come
back well where's this observation come
from self observation
so in rware I just had big arrays for
so in rware I just had big arrays for
map designs at the top of myh file in my
map designs at the top of myh file in my
new M I want to start with a bunch of
new M I want to start with a bunch of
levels any thoughts uh static levels or
levels any thoughts uh static levels or
procedural
procedural
levels right
leave them as do I mean you can just
leave them as do I mean you can just
leave them as as AR raise in near do AG
leave them as as AR raise in near do AG
literally like think about it what are
literally like think about it what are
you going to gain it's basically the
you going to gain it's basically the
same format as like Json and stuff
same format as like Json and stuff
anyways and you don't have to write a
parser like if just like actually this
parser like if just like actually this
is kind of an important concept like
is kind of an important concept like
think about it what do you gain by
think about it what do you gain by
trying to write
trying to write
something uh write something than this
something uh write something than this
versus just pasting in a h if you really
versus just pasting in a h if you really
hate having it at the top of the file
hate having it at the top of the file
you can just make a data. h or a maps. h
you can just make a data. h or a maps. h
and just include that
right but there's literally nothing that
right but there's literally nothing that
you gain by doing that if you're not
you gain by doing that if you're not
going to have like a map editor or like
going to have like a map editor or like
if you're not explicitly doing something
if you're not explicitly doing something
that requires a different structure
that requires a different structure
leave it as a simple thing
no over
no over
complicate let me figure out why these
complicate let me figure out why these
data shapes don't match up um some of
data shapes don't match up um some of
this Dev you know the dev on the stream
this Dev you know the dev on the stream
is not always going to be the most
is not always going to be the most
interesting thing I'm doing like
interesting thing I'm doing like
lowlevel weird infrastructure stuff for
lowlevel weird infrastructure stuff for
puffer right now and uh this
puffer right now and uh this
is so this is like a 460 line file that
is so this is like a 460 line file that
was the original core that made puffer
was the original core that made puffer
lib exist um it does some fiddly
lib exist um it does some fiddly
operations that make basically make it
operations that make basically make it
so that you can do RL on very
so that you can do RL on very
complicated environments without having
complicated environments without having
to deal with all sorts of fancy like
to deal with all sorts of fancy like
data types and shapes
data types and shapes
yourself um but there's a little bit of
yourself um but there's a little bit of
trickiness to it
trickiness to it
basically it's like a big flatten it
basically it's like a big flatten it
flattens all your data and then UNF
flattens all your data and then UNF
flattens it right when you need it but
flattens it right when you need it but
doing that correctly is kind of
non-trivial especially doing it
fast observation space okay so why right
fast observation space okay so why right
here I can see that the for some reason
here I can see that the for some reason
the observation space doesn't match the
the observation space doesn't match the
data coming from the environment and it
data coming from the environment and it
worked before so I must have broken
worked before so I must have broken
something
something
small
small
um what could I have broken
um what could I have broken
though except
buffers
buffers
oh yeah this is
it
it
um because I have this numb agents in
um because I have this numb agents in
the buffer
here yeah it's because I have numb
here yeah it's because I have numb
agents in the buffer and it's a single
agents in the buffer and it's a single
agent environment okay that's
agent environment okay that's
fine that's an easy
fine that's an easy
fix I think
use GPT for obscure
use GPT for obscure
docks cuz I don't know how this thing
docks cuz I don't know how this thing
works
works
I my expectation is that we should be
I my expectation is that we should be
able to get
um well hold on do we
have OBS
DET yeah we should it should be fine
DET yeah we should it should be fine
um for
reinterpret the data as having a subad
reinterpret the data as having a subad
type is total item
type is total item
size no longer matches the original
buffer why does this change the
buffer why does this change the
size idea is
size idea is
that each
that each
LM has some
LM has some
shape total array
shape total array
is is like bat size
is is like bat size
shape
shape
memory and layout copies
changes the item size from one
bite to eight
Alters per element item
Alters per element item
size okay so there's just some weird
size okay so there's just some weird
casting Shenanigans going on then
um U won
how about
this does this
this does this
work no okay so it's still it's not
hm maybe you just can't do that
why does it work when I
why does it work when I
do Works in other cases
right oh I think it works in other cases
right oh I think it works in other cases
though because
no this should work because
no this should work because
self-observations
self-observations
is self
is self
observation
observation
type yeah this is just bytes I should be
type yeah this is just bytes I should be
able to view bytes however I want
right so like if I run the same thing
right so like if I run the same thing
with
with
um like puffer
um like puffer
spaces and this is kind of a cool thing
spaces and this is kind of a cool thing
in numpy you can
do okay so you see I have like this
do okay so you see I have like this
really weird structure D type here
right and I just have bites these
observations these are just
observations these are just
bites and then if I hit n
bites and then if I hit n
here
obstruct
obstruct
oops uh I continued one too many
times look at that you get a view into
times look at that you get a view into
the into those raw bites
the into those raw bites
um but it's structure so now like you
um but it's structure so now like you
can access this you can access this as
can access this you can access this as
if it were a structured array and the
if it were a structured array and the
structure has this like a flat portion
structure has this like a flat portion
and an image
and an image
portion so it's basically a structured
portion so it's basically a structured
way to view contiguous
memory so why doesn't this work on the
memory so why doesn't this work on the
other the other case
I see I have like d type
I see I have like d type
of flat image align is
true and
true and
then
Ty do you need a line equal
true hold
on where's OBS G type get made
emulate observation
space emulated dtype
space emulated dtype
is G type from space
if it's a
if it's a
tuple you
tuple you
recurse
else okay so this is weird it should
else okay so this is weird it should
have aligned this right
is
is
align false okay well that makes no
align false okay well that makes no
sense because I manually aligned it
sense because I manually aligned it
right unless uh it doesn't get here
maybe yeah okay so here's our space
right dtype is space dtype space. shape
right dtype is space dtype space. shape
B
B
type b. dtype D type
align is a line
okay e
it's funny that actually it only works
it's funny that actually it only works
for complex SS as it is
now e
maybe numai just doesn't have this so
maybe numai just doesn't have this so
that you don't do it because it's like a
that you don't do it because it's like a
flat
flat
case
case
and I'm just doing something weird where
and I'm just doing something weird where
like the way I have this structured this
like the way I have this structured this
has to be special case whereas normally
has to be special case whereas normally
it would be the default
case so let's try something
here for
is e
thises
work okay work
cereal there's obviously a print
cereal there's obviously a print
somewhere
22k
22k
solid spins your CPU like nuts okay well
solid spins your CPU like nuts okay well
this is good progress um I'm going to
this is good progress um I'm going to
have to apply this to multi-agent Ms and
have to apply this to multi-agent Ms and
then I'm going to have to clean some
then I'm going to have to clean some
stuff up uh I'm going to take a few
stuff up uh I'm going to take a few
minutes and then I will be back be back
minutes and then I will be back be back
in a
few
e
e
e
e
e
e
e
e
e
e
e
e
e
e
e e
okay um I'm going pretty soon but I want
okay um I'm going pretty soon but I want
to make sure we get this brunches early
to make sure we get this brunches early
apparently here the holidays there's
apparently here the holidays there's
some family around I may or may not do
some family around I may or may not do
an afternoon stream today we will
an afternoon stream today we will
see but this is going pretty
nicely I really don't like how much
nicely I really don't like how much
stuff has to get repeated across
stuff has to get repeated across
gymnasium and pettings and that's just
gymnasium and pettings and that's just
why
why
they're the two apis are a total
they're the two apis are a total
pain
pain
um this code probably has to
um this code probably has to
go I can just YOLO this onto the uh
go I can just YOLO this onto the uh
yeah to right here
maybe I mean I know I've thought about
maybe I mean I know I've thought about
this code like so many times and like if
this code like so many times and like if
there's a way to simplify it there just
there's a way to simplify it there just
really isn't get rid of these at
least I kind of don't really bother too
least I kind of don't really bother too
much with him because eventually we're
much with him because eventually we're
just going to replace both of these apis
just going to replace both of these apis
entirely like we're building so many new
entirely like we're building so many new
environments in puffer lib um and like
environments in puffer lib um and like
we're directly collaborating with people
we're directly collaborating with people
building other M's that eventually I
building other M's that eventually I
think we'll just have everything on
think we'll just have everything on
either on the puffer one or something
either on the puffer one or something
that's like a very close wrapper away
that's like a very close wrapper away
from puffer and then we just won't have
from puffer and then we just won't have
to
care which would be nice uh do I even
care which would be nice uh do I even
have like a
good
good
multi-agent test for this the thing they
multi-agent test for this the thing they
really aren't
really aren't
like they just aren't good environments
like they just aren't good environments
to test stuff with fish let's try this
to test stuff with fish let's try this
big
fish
fish
16 oh it is 96 though right this work
broken
pipe oh I know what this
is yeah now I have to modify all the
is yeah now I have to modify all the
environment this is the the price that I
environment this is the the price that I
have to pay for this
we have to add buff
here there you
here there you
go it's actually a bit FAS F than before
go it's actually a bit FAS F than before
7.5 the environment's super fast here
7.5 the environment's super fast here
it's just their default models really
it's just their default models really
slow
oops hold on I might be going
now never mind I got 45 minutes
now never mind I got 45 minutes
apparently yeah even
better how's Discord miss
anything more like jamanji
upgrade to 2.2
I push something for like 30 minutes and
I push something for like 30 minutes and
already people uh get the wrong version
already people uh get the wrong version
it's like damn
it finish
this I actually highly recommend this if
this I actually highly recommend this if
you're not trying to be insane and have
you're not trying to be insane and have
like a th000 calorie protein shake you
like a th000 calorie protein shake you
can make the exact same thing with just
can make the exact same thing with just
whole milk instead of heavy cream and
whole milk instead of heavy cream and
it's a 500 calorie
shake so this is all paid off with the
shake so this is all paid off with the
morning
run so yeah I have to change all all the
run so yeah I have to change all all the
bloody environments is the annoying
bloody environments is the annoying
thing
now I guess I'll just do that
I don't even think we have be
sweet I'm really not as concerned
sweet I'm really not as concerned
anymore with all these like third party
anymore with all these like third party
mends because very few people use most
mends because very few people use most
of these and
of these and
um like very few people actually use
um like very few people actually use
these and they're slow anyways like we
these and they're slow anyways like we
have all sorts of new environments for
have all sorts of new environments for
people to use now so like I think we
people to use now so like I think we
it's always very risky to just like say
it's always very risky to just like say
now we're going to do our own thing and
now we're going to do our own thing and
like move everything mostly onto that
like move everything mostly onto that
but I think it's actually good enough to
but I think it's actually good enough to
now uh where that makes that actually
now uh where that makes that actually
makes real
sense like do you even really need I
sense like do you even really need I
guess like oh it's a classic task or
guess like oh it's a classic task or
whatever but like do you really care
whatever but like do you really care
care about like evaluating on Mountain
care about like evaluating on Mountain
car when you just have better
car when you just have better
environments I mean we could make our
environments I mean we could make our
own version of this if people really
own version of this if people really
wanted
wanted
it like it wouldn't be
hard maybe we should have our own cart
hard maybe we should have our own cart
pull just to show people how stupidly
pull just to show people how stupidly
fast it can
be
e e
does this not have buff in it
I think that we changed I owe them work
I think that we changed I owe them work
on this so we'll do this one
later but at least I want to make sure
later but at least I want to make sure
that we don't have
you know I think honestly the most
you know I think honestly the most
viable thing for
viable thing for
us
um is going to be to just like get
um is going to be to just like get
everyone using puffer with all the new
everyone using puffer with all the new
environments and then just like anything
environments and then just like anything
that people
that people
need uh is going to end up being on
need uh is going to end up being on
puffer So eventually we're going to make
puffer So eventually we're going to make
like the third party stuff
like the third party stuff
obsolete um but we're not going to just
obsolete um but we're not going to just
like OB like stop supporting it it's
like OB like stop supporting it it's
more that I think we'll just be able to
more that I think we'll just be able to
make all the environments that people
make all the environments that people
will want to use because they will be
will want to use because they will be
fast maybe with the exception of um like
fast maybe with the exception of um like
robotic stuff but then we'll just work
robotic stuff but then we'll just work
with those people to make sure stuff's
with those people to make sure stuff's
compatible
like these environments don't even work
like these environments don't even work
because and it's no fault of puffer Li
because and it's no fault of puffer Li
that they don't they're just they're
that they don't they're just they're
made for like such old versions of
made for like such old versions of
python and stuff they just haven't been
python and stuff they just haven't been
maintained in like seven years
I would like to test net hack though net
I would like to test net hack though net
hack's
cool so we'll do
cool so we'll do
that oops right
here hat
two te
workers there we go
m is actually decent here it's just yeah
m is actually decent here it's just yeah
we can definitely make this this a lot
we can definitely make this this a lot
faster if people want
it environments
think I have to
add add this to it
okay so you
okay so you
actually this is uh Kim's
actually this is uh Kim's
work go follow on X if you are
work go follow on X if you are
interested
interested
in continuous
control and this seems like this works
Joo NE hack we actually do care about as
Joo NE hack we actually do care about as
well
I really like net hack if anybody wants
I really like net hack if anybody wants
to uh really try to make net hack work I
to uh really try to make net hack work I
would be very
would be very
supportive and puffer Li do offline RL
supportive and puffer Li do offline RL
if someone has a lot of training data
if someone has a lot of training data
sitting
sitting
around uh no we don't have offline stuff
around uh no we don't have offline stuff
at the moment but the thing is
at the moment but the thing is
like if online learning is this hard
like if online learning is this hard
offline learning is like you got to dig
offline learning is like you got to dig
for it it's just super vised learning I
for it it's just super vised learning I
mean you can literally just write you
mean you can literally just write you
can write up like offline learning and I
can write up like offline learning and I
don't know 150 lines of code and there's
don't know 150 lines of code and there's
like there's nothing clever to do there
like there's nothing clever to do there
either it's literally just supervised
either it's literally just supervised
learning you don't have any of the
learning you don't have any of the
issues of um of like getting data from
issues of um of like getting data from
simulators or
anything it's like really pretty
trivial I don't work on offline just
trivial I don't work on offline just
simply because there's like there's
simply because there's like there's
really nothing to do there
I mean it's like one of those things
I mean it's like one of those things
where like look if if some company
where like look if if some company
really wanted just like to use our RL
really wanted just like to use our RL
expertise and like let's say they wanted
expertise and like let's say they wanted
like carb stuff like our carbs
like carb stuff like our carbs
Integrations for offline or like they
Integrations for offline or like they
wanted you know us to look at stuff in
wanted you know us to look at stuff in
that way then yeah we could do it it's
that way then yeah we could do it it's
just it's a pretty big deviation from
just it's a pretty big deviation from
what I'm trying to do with puffer know
what I'm trying to do with puffer know
so there'd be a premium on it um but
so there'd be a premium on it um but
alternatively it's like it's not that
alternatively it's like it's not that
hard so if you want offline support in
hard so if you want offline support in
puffer for free just like PR it and then
puffer for free just like PR it and then
we'll test it against all our
we'll test it against all our
environments right can be it's a pretty
environments right can be it's a pretty
easy way to do
easy way to do
stuff like it's we're not going to
stuff like it's we're not going to
reject PRS that just like you know a
reject PRS that just like you know a
simple offline script compatible with
demo. it's just not what I'm focused
on that's kind of how we do
on that's kind of how we do
stuff and the way I see it is
stuff and the way I see it is
like I have an agenda in my head for how
like I have an agenda in my head for how
I see RL being fixed in the next 12
I see RL being fixed in the next 12
months and anything that is going to
months and anything that is going to
anything that's going to like
anything that's going to like
deviate a little from that is like
deviate a little from that is like
premium stuff and anything that's going
premium stuff and anything that's going
to deviate a lot from that is extra
to deviate a lot from that is extra
premium stuff
n hack works it's even faster than
n hack works it's even faster than
before that's probably just this machine
before that's probably just this machine
being
better I did actually make a couple
better I did actually make a couple
fixes that could have improved that come
fixes that could have improved that come
to think of it
I would like to make sure neural MMO at
I would like to make sure neural MMO at
least
Works oo
bug that's nice we actually get a bug
bug that's nice we actually get a bug
fix out of this
D that is so
D that is so
sad look at
this Nur Mo 3 literally
this Nur Mo 3 literally
trains with the same size model
trains with the same size model
over a 100 times faster
not
four e
raer
class we do care about Pokémon Pokemon
class we do care about Pokémon Pokemon
is a active supported project under
puffer it's very cool project in
puffer it's very cool project in
fact there's their own uh we have our
fact there's their own uh we have our
own Discord for that as
own Discord for that as
well most of the work there's being done
well most of the work there's being done
by that guy though there've been several
by that guy though there've been several
other contributors
prior does this
prior does this
work for
and
SP David
SP David
hen I chatted with him at ner so when
hen I chatted with him at ner so when
his honor I will make sure his
his honor I will make sure his
environment Works provided it is not
environment Works provided it is not
cursed
oh yeah it's like an old version of of
oh yeah it's like an old version of of
python I think right yeah it's annoying
python I think right yeah it's annoying
well this will I The Binding is going to
well this will I The Binding is going to
be just as good as it was before
annoying we also don't really do
annoying we also don't really do
smack it's like just slow and nobody
smack it's like just slow and nobody
uses
uses
it no
it no
point and like stable retro it's like
point and like stable retro it's like
really cool project in theory but you
really cool project in theory but you
can only run one of these per process
can only run one of these per process
and it's slow it's
and it's slow it's
like I guess we it like we could try
like I guess we it like we could try
really hard if we wanted to but like
really hard if we wanted to but like
there's no point
just burning
money do we use these for anything
I don't know if we even use
this yeah they don't sub
class think we'll leave that for
class think we'll leave that for
now do you have a 3D Puff for us we do
now do you have a 3D Puff for us we do
indeed do you uh do you have an
indeed do you uh do you have an
environment in
environment in
mind are you going to make it the ball
mind are you going to make it the ball
in uh the code game the code ball
game in fact the 3D the animation that
game in fact the 3D the animation that
we have where it puffs up and stuff we
we have where it puffs up and stuff we
have that in 3D as
have that in 3D as
well might make it the hero of the story
well might make it the hero of the story
story that sounds
story that sounds
fun
boing yeah so we do have 3D models I I
boing yeah so we do have 3D models I I
got to figure out how to separate like
got to figure out how to separate like
the animations out but yeah I can get
the animations out but yeah I can get
you those
files a very Pro puffer around here
what are you
what are you
doing currently fixing up some
doing currently fixing up some
environments for the new infrastructure
environments for the new infrastructure
and Puffer that makes parallel
and Puffer that makes parallel
simulation a little easier we'll come
simulation a little easier we'll come
back to puffer very
good almost
done it's called Doom
and all we have to do is change this
to the
hardware oh yeah I remember that I'm
hardware oh yeah I remember that I'm
sure it works it's
sure it works it's
fine Doom specifically is a little
quirky okay but this should be a decent
quirky okay but this should be a decent
um decent pack
I guess I'll go get like the squared
I guess I'll go get like the squared
python
python
code for a test environment I've got
code for a test environment I've got
like 20 minutes before I got to go I
like 20 minutes before I got to go I
might be able to finish that
up e
let me go find the old squared
code do you think setting up little 3D
code do you think setting up little 3D
running animations is hard in Raab I
running animations is hard in Raab I
haven't tried I mean the uh code ball
haven't tried I mean the uh code ball
stuff uh in the Discord somebody's been
stuff uh in the Discord somebody's been
doing
it and you can try it and let me
it and you can try it and let me
know if it's hard or not
know if it's hard or not
it' be nice to know because
it' be nice to know because
like there are a lot of games we could
like there are a lot of games we could
make 3D front ends for you
know like uh impulse Wars could very
know like uh impulse Wars could very
easily have a 3D front end 2D Sim 3D
easily have a 3D front end 2D Sim 3D
front end it's a pretty fun
combination it's used in a lot of modern
games for
okay so here's
qued e
we go I have to look at uh couple things
here
for
e e
of where's this
get
up now this is going to be
down
one basically I'm just porting the uh
one basically I'm just porting the uh
this environment to Pure python as a
this environment to Pure python as a
little demo for people
yeah
e e
is True Rewards
is True Rewards
is
1.0 then you
1.0 then you
do s. reset
turn
Okay isn't it crazy how this code is
Okay isn't it crazy how this code is
literally the same length in Python I
literally the same length in Python I
guess you don't have the memory
guess you don't have the memory
allocations and stuff
allocations and stuff
but it's like not any easier
so
um e
there no log on
this oh yeah cuz it's just a reward
um self.
um self.
rewards ah I see how I did
rewards ah I see how I did
this
fine for
this POS do
one
empty and then we need to do
where's
render oops looks like I got to go in a
render oops looks like I got to go in a
second hold
on got like 5 minutes going to brunch
on got like 5 minutes going to brunch
with
with
family if I get this word
working if I skip the render I think I
will
e e
so we're going to do
M no config
buffer Pi
squ no module named PFF ocean Pi
squ
squ uh num m is going to be one for
I think I have to add num Ms for
I think I have to add num Ms for
now kind of
silly Le we get real errors
silly Le we get real errors
um out of bounds for size one
one and 121 okay so this is
one and 121 okay so this is
actually you got to do like a zero
one
indexed e
all right I got a run I'll fix this
all right I got a run I'll fix this
later it's almost there it's like almost
later it's almost there it's like almost
almost there
almost there
um
um
run no still no okay we'll fix this
run no still no okay we'll fix this
later uh thanks for tuning in folks join
later uh thanks for tuning in folks join
discord.
discord.
GPU if you want to follow the project
GPU if you want to follow the project
I'm on xjar 5341 as well I post a bunch
I'm on xjar 5341 as well I post a bunch
of far out and I'll be streaming this a
of far out and I'll be streaming this a
lot if you want to help out the project
lot if you want to help out the project
for free Star Puffer lip

Kind: captions
Language: en
okay we're
okay we're
live
hi and take a quick look at the puffer
hi and take a quick look at the puffer
Discord see if there's anything to fix
Discord see if there's anything to fix
major here and uh if not continue on
major here and uh if not continue on
some of the infrastructure work that I'm
some of the infrastructure work that I'm
doing
uh that is a seg fault my
friend friend
friend friend
[Music]
RS build
uh that already got it see look how
uh that already got it see look how
helpful the community is gets it before
helpful the community is gets it before
I do
[Music]
[Music]
uh yeah so he's just he needs to figure
uh yeah so he's just he needs to figure
this thing out how
this thing out how
do test stuff
do test stuff
locally oo look at
this not bad doesn't have the ghost
this not bad doesn't have the ghost
which is the main
which is the main
main thing
very nice Pac-Man
very nice Pac-Man
end uh the ghost or the hard part is the
end uh the ghost or the hard part is the
thing though
it's say
oh this is from AI That's
oh this is from AI That's
funny
funny
uh no I don't think this is true
import a module
yeah tortur is decent um does sometimes
yeah tortur is decent um does sometimes
break some stuff
uh I think this is
okay so uh we're all caught up on this
okay so uh we're all caught up on this
we can start on some Dev here going to
we can start on some Dev here going to
just do a
just do a
quick hour and a half session is uh
quick hour and a half session is uh
right now before I head to brunch it is
right now before I head to brunch it is
Sunday I normally don't do stuff on on
Sunday I normally don't do stuff on on
Sunday but I've been lazing all week and
Sunday but I've been lazing all week and
there's work to
there's work to
do so I figured I'd Dev and I figured I
do so I figured I'd Dev and I figured I
may as well stream
it welcome YouTube folks
I think I had something basic working
right yeah
okay this still
okay this still
works now test
multiprocessing this still works as
well uh okay good so now I just have to
well uh okay good so now I just have to
make the
make the
native puffer environments work with
native puffer environments work with
this which shouldn't be very hard
this which shouldn't be very hard
because of the way that I've
because of the way that I've
restructured
everything so what I was doing
everything so what I was doing
before is I just made the puffer uh
before is I just made the puffer uh
ocean environments they just match the
ocean environments they just match the
vector
vector
API so you just make it and that's it um
API so you just make it and that's it um
but if you want to do multiple of those
but if you want to do multiple of those
on one
on one
subprocess there's one other API thing
subprocess there's one other API thing
that has to match
okay so we can get rid of this
right and then in
multiprocessing so native with 1 M
multiprocessing so native with 1 M
should still work
should still work
right
snake back did it still
work yes so this still works and still
work yes so this still works and still
trains but now the thing that we're
trains but now the thing that we're
going to
going to
do that will be a little
different uh
this is going to be a little awkward um
this is going to be a little awkward um
so it's going to be
so it's going to be
back
multiprocessing still works and is
multiprocessing still works and is
somehow
somehow
faster oh no we know that that's faster
faster oh no we know that that's faster
that's
that's
fine um and then we have to
fine um and then we have to
do num
so what this is
so what this is
saying yeah okay so we now we have to
saying yeah okay so we now we have to
check on this but what this is saying is
check on this but what this is saying is
that we want to we want to have U
that we want to we want to have U
multiple puffer M's per process because
multiple puffer M's per process because
there are only two workers two
there are only two workers two
processes and they're going to be four
processes and they're going to be four
environments uh so this is an unrelated
environments uh so this is an unrelated
issue I believe believe so let's just
issue I believe believe so let's just
do can I do this m
do can I do this m
do M uh two can I do
do M uh two can I do
this no I didn't actually configure
this no I didn't actually configure
that I might as well add that
though
make oh there is no one num M for okay
uh so what we'll do for
uh so what we'll do for
now just for hey welcome that you
spener yeah there twitch twitch has
spener yeah there twitch twitch has
faster chat and doesn't drop your
faster chat and doesn't drop your
messages so good Fair choice
all right let's see if this
all right let's see if this
works we're just doing some infr patches
works we're just doing some infr patches
um this is going to be very convenient
um this is going to be very convenient
for new people for puffer because what
for new people for puffer because what
this is essentially going to let you do
this is essentially going to let you do
is let's say you want to use the new
is let's say you want to use the new
puffer M API but you want to just Dev in
puffer M API but you want to just Dev in
Python uh this will let you just Dev
Python uh this will let you just Dev
really simple in Python still get some
really simple in Python still get some
of the speed UPS uh but then it's like a
of the speed UPS uh but then it's like a
cleaner path right like to optimize cuz
cleaner path right like to optimize cuz
if you just write gymnasium M you're
if you just write gymnasium M you're
screwed like there's no way to make it
screwed like there's no way to make it
fast regardless of what you do but uh if
fast regardless of what you do but uh if
you write it in our API then you have a
you write it in our API then you have a
very clean onboarding ramp to go like
very clean onboarding ramp to go like
from python to scon to C it's built for
that num workers is two
that size must be divisible
by let's see what this
is we've also got this is not th calorie
mug this is um 500 calorie mug
Edition uh it's the same thing Spencer
Edition uh it's the same thing Spencer
it's just annoying because you have to
it's just annoying because you have to
write the loop in Python like the
write the loop in Python like the
loopover environments in Python and the
loopover environments in Python and the
environment in Python at the moment so
environment in Python at the moment so
that's going to go away but it's the
that's going to go away but it's the
same thing you just write the logic in
same thing you just write the logic in
Python instead of in
C there's no point though it's literally
C there's no point though it's literally
once you get comfortable it's just as
once you get comfortable it's just as
easy to do it in see and all your speed
easy to do it in see and all your speed
problems go away the only thing that's a
problems go away the only thing that's a
little annoying at the moment is like
little annoying at the moment is like
The scyon Binding
The scyon Binding
intermediary I really like scyon though
intermediary I really like scyon though
because it gives you the option to Dev
because it gives you the option to Dev
stuff that's fast but looks like python
stuff that's fast but looks like python
I don't know maybe eventually we'll
I don't know maybe eventually we'll
replace it with something else but it's
replace it with something else but it's
been good for
now I will say that uh like a lot lot of
now I will say that uh like a lot lot of
Engineers will probably like it cuz they
Engineers will probably like it cuz they
like they want something that looks more
like they want something that looks more
familiar but still
familiar but still
fast sion's pretty
nice bat size is
one that bad size one
um num workers
I just put this there what
happens now same
thing I'm basically what I'm trying to
thing I'm basically what I'm trying to
do is figure out how to make it so that
do is figure out how to make it so that
you can simulate multiple ocean
you can simulate multiple ocean
environments per core so that you don't
environments per core so that you don't
have to do the loop yourself in Python
have to do the loop yourself in Python
if you don't want to um which it is
if you don't want to um which it is
always going to be faster to handle your
always going to be faster to handle your
own Loops but we should be able to make
own Loops but we should be able to make
it
decent and it's uh being
decent and it's uh being
weird welcome YouTube
weird welcome YouTube
folks happy
Sunday why is bat size
Sunday why is bat size
one what I want want to know like we've
one what I want want to know like we've
got num m is
four oh wait wait wa wait I think
four oh wait wait wa wait I think
there's isn't there like M bat size or
there's isn't there like M bat size or
something yeah I'm
something yeah I'm
done this has got to be two
so it runs but it's not giving us any
so it runs but it's not giving us any
stats
back okay it's better than
nothing why doesn't it give us stats
back I me see so it's going to
back I me see so it's going to
wrap and just so you can see if I leave
wrap and just so you can see if I leave
the default settings this uses a
the default settings this uses a
different code
different code
pathway and now we get
Stacks
interesting how should I about
this it's got to be in serial
this it's got to be in serial
right I'm saying
right I'm saying
so I think I have the same API
though wait infos do append
uh I think the format of the data is
uh I think the format of the data is
different right
let me just see if this fixes it
yeah there you go so literally just
yeah there you go so literally just
minor data format
mismatch so that's
cool 1.4 million steps per second
cool 1.4 million steps per second
training as
well GPU is only on
well GPU is only on
56% so technically if anybody really
56% so technically if anybody really
wants to help us optimize our our
wants to help us optimize our our
training pipeline we could hit 2 million
training pipeline we could hit 2 million
step per second
step per second
training with puffer lip
well look G well I don't know how
well look G well I don't know how
accurate this GPU utilization thing is
accurate this GPU utilization thing is
from Nvidia I don't know if this is just
from Nvidia I don't know if this is just
like but yeah if this is remotely
like but yeah if this is remotely
accurate at 1.4 mil we should be able to
accurate at 1.4 mil we should be able to
hit 2 mil
hit 2 mil
right I mean we're not bot neck by
right I mean we're not bot neck by
CPU we shouldn't be Bob neck by
CPU we shouldn't be Bob neck by
GPU we're
GPU we're
losing we got 16% misscellaneous and
losing we got 16% misscellaneous and
then 13%
then 13%
miscellaneous maybe I just have to clean
miscellaneous maybe I just have to clean
up our miscellaneous code
up our miscellaneous code
I think that includes Cuda device
I think that includes Cuda device
transfer so that might be like
transfer so that might be like
async like async data queuing or
async like async data queuing or
something that we got to
something that we got to
do but I'm pretty happy with
do but I'm pretty happy with
that this will be a very nice feature um
that this will be a very nice feature um
I'm trying to think what the easiest way
I'm trying to think what the easiest way
to test all this is
though so this definitely still works on
though so this definitely still works on
snake right
I mean I could just YOLO merge this to
I mean I could just YOLO merge this to
be
fair okay let's do let's try some
fair okay let's do let's try some
different
Ms hi I'm using python for scientific
Ms hi I'm using python for scientific
computations often time my code
computations often time my code
generates a bunch of data and then I
generates a bunch of data and then I
plot it
plot it
are there any Version Control Systems
are there any Version Control Systems
for data too yes compare different
for data too yes compare different
graphs yeah uh w
graphs yeah uh w
b you just use WB for
b you just use WB for
that if you're not doing RL stuff
that if you're not doing RL stuff
specifically then puffer is not going to
specifically then puffer is not going to
be particularly useful for you but like
be particularly useful for you but like
all of our experiments are on puffer so
all of our experiments are on puffer so
like here we have all these experiments
like here we have all these experiments
look I can compare these are like
look I can compare these are like
different experiments I was running on
different experiments I was running on
mo3 uh here you can see our crazy
mo3 uh here you can see our crazy
Baseline where we ran this for like
Baseline where we ran this for like
literally 2025 years model
literally 2025 years model
2025 so tons and tons of
2025 so tons and tons of
data I would suggest to use that
see normal
breakout thanks yeah that's like the
breakout thanks yeah that's like the
standard thing that people use it has a
standard thing that people use it has a
few issues with it but I think it's
few issues with it but I think it's
generally the best thing out there
uh I have to change num workers to 16
uh I have to change num workers to 16
here so that this will let me run
it B size must
it B size must
be 16 *
3 uh
3 uh
28 so the reason I have to change this
28 so the reason I have to change this
and puffer is just not working is
and puffer is just not working is
because this machine uh is different
because this machine uh is different
core count
core count
okay now this is a legitimate error
okay now this is a legitimate error
um changing the D type to a subarray
um changing the D type to a subarray
type is only
type is only
supported
interesting do I get this without
multiprocessing I do get it without
multiprocessing I do get it without
multiprocessing okay
observations. view OB
type
OBS total that's bazaro
environment okay so it tells you you
environment okay so it tells you you
have a 11 10580 observation
have a 11 10580 observation
space and then it gives you
back well where's this observation come
back well where's this observation come
from self observation
so in rware I just had big arrays for
so in rware I just had big arrays for
map designs at the top of myh file in my
map designs at the top of myh file in my
new M I want to start with a bunch of
new M I want to start with a bunch of
levels any thoughts uh static levels or
levels any thoughts uh static levels or
procedural
procedural
levels right
leave them as do I mean you can just
leave them as do I mean you can just
leave them as as AR raise in near do AG
leave them as as AR raise in near do AG
literally like think about it what are
literally like think about it what are
you going to gain it's basically the
you going to gain it's basically the
same format as like Json and stuff
same format as like Json and stuff
anyways and you don't have to write a
parser like if just like actually this
parser like if just like actually this
is kind of an important concept like
is kind of an important concept like
think about it what do you gain by
think about it what do you gain by
trying to write
trying to write
something uh write something than this
something uh write something than this
versus just pasting in a h if you really
versus just pasting in a h if you really
hate having it at the top of the file
hate having it at the top of the file
you can just make a data. h or a maps. h
you can just make a data. h or a maps. h
and just include that
right but there's literally nothing that
right but there's literally nothing that
you gain by doing that if you're not
you gain by doing that if you're not
going to have like a map editor or like
going to have like a map editor or like
if you're not explicitly doing something
if you're not explicitly doing something
that requires a different structure
that requires a different structure
leave it as a simple thing
no over
no over
complicate let me figure out why these
complicate let me figure out why these
data shapes don't match up um some of
data shapes don't match up um some of
this Dev you know the dev on the stream
this Dev you know the dev on the stream
is not always going to be the most
is not always going to be the most
interesting thing I'm doing like
interesting thing I'm doing like
lowlevel weird infrastructure stuff for
lowlevel weird infrastructure stuff for
puffer right now and uh this
puffer right now and uh this
is so this is like a 460 line file that
is so this is like a 460 line file that
was the original core that made puffer
was the original core that made puffer
lib exist um it does some fiddly
lib exist um it does some fiddly
operations that make basically make it
operations that make basically make it
so that you can do RL on very
so that you can do RL on very
complicated environments without having
complicated environments without having
to deal with all sorts of fancy like
to deal with all sorts of fancy like
data types and shapes
data types and shapes
yourself um but there's a little bit of
yourself um but there's a little bit of
trickiness to it
trickiness to it
basically it's like a big flatten it
basically it's like a big flatten it
flattens all your data and then UNF
flattens all your data and then UNF
flattens it right when you need it but
flattens it right when you need it but
doing that correctly is kind of
non-trivial especially doing it
fast observation space okay so why right
fast observation space okay so why right
here I can see that the for some reason
here I can see that the for some reason
the observation space doesn't match the
the observation space doesn't match the
data coming from the environment and it
data coming from the environment and it
worked before so I must have broken
worked before so I must have broken
something
something
small
small
um what could I have broken
um what could I have broken
though except
buffers
buffers
oh yeah this is
it
it
um because I have this numb agents in
um because I have this numb agents in
the buffer
here yeah it's because I have numb
here yeah it's because I have numb
agents in the buffer and it's a single
agents in the buffer and it's a single
agent environment okay that's
agent environment okay that's
fine that's an easy
fine that's an easy
fix I think
use GPT for obscure
use GPT for obscure
docks cuz I don't know how this thing
docks cuz I don't know how this thing
works
works
I my expectation is that we should be
I my expectation is that we should be
able to get
um well hold on do we
have OBS
DET yeah we should it should be fine
DET yeah we should it should be fine
um for
reinterpret the data as having a subad
reinterpret the data as having a subad
type is total item
type is total item
size no longer matches the original
buffer why does this change the
buffer why does this change the
size idea is
size idea is
that each
that each
LM has some
LM has some
shape total array
shape total array
is is like bat size
is is like bat size
shape
shape
memory and layout copies
changes the item size from one
bite to eight
Alters per element item
Alters per element item
size okay so there's just some weird
size okay so there's just some weird
casting Shenanigans going on then
um U won
how about
this does this
this does this
work no okay so it's still it's not
hm maybe you just can't do that
why does it work when I
why does it work when I
do Works in other cases
right oh I think it works in other cases
right oh I think it works in other cases
though because
no this should work because
no this should work because
self-observations
self-observations
is self
is self
observation
observation
type yeah this is just bytes I should be
type yeah this is just bytes I should be
able to view bytes however I want
right so like if I run the same thing
right so like if I run the same thing
with
with
um like puffer
um like puffer
spaces and this is kind of a cool thing
spaces and this is kind of a cool thing
in numpy you can
do okay so you see I have like this
do okay so you see I have like this
really weird structure D type here
right and I just have bites these
observations these are just
observations these are just
bites and then if I hit n
bites and then if I hit n
here
obstruct
obstruct
oops uh I continued one too many
times look at that you get a view into
times look at that you get a view into
the into those raw bites
the into those raw bites
um but it's structure so now like you
um but it's structure so now like you
can access this you can access this as
can access this you can access this as
if it were a structured array and the
if it were a structured array and the
structure has this like a flat portion
structure has this like a flat portion
and an image
and an image
portion so it's basically a structured
portion so it's basically a structured
way to view contiguous
memory so why doesn't this work on the
memory so why doesn't this work on the
other the other case
I see I have like d type
I see I have like d type
of flat image align is
true and
true and
then
Ty do you need a line equal
true hold
on where's OBS G type get made
emulate observation
space emulated dtype
space emulated dtype
is G type from space
if it's a
if it's a
tuple you
tuple you
recurse
else okay so this is weird it should
else okay so this is weird it should
have aligned this right
is
is
align false okay well that makes no
align false okay well that makes no
sense because I manually aligned it
sense because I manually aligned it
right unless uh it doesn't get here
maybe yeah okay so here's our space
right dtype is space dtype space. shape
right dtype is space dtype space. shape
B
B
type b. dtype D type
align is a line
okay e
it's funny that actually it only works
it's funny that actually it only works
for complex SS as it is
now e
maybe numai just doesn't have this so
maybe numai just doesn't have this so
that you don't do it because it's like a
that you don't do it because it's like a
flat
flat
case
case
and I'm just doing something weird where
and I'm just doing something weird where
like the way I have this structured this
like the way I have this structured this
has to be special case whereas normally
has to be special case whereas normally
it would be the default
case so let's try something
here for
is e
thises
work okay work
cereal there's obviously a print
cereal there's obviously a print
somewhere
22k
22k
solid spins your CPU like nuts okay well
solid spins your CPU like nuts okay well
this is good progress um I'm going to
this is good progress um I'm going to
have to apply this to multi-agent Ms and
have to apply this to multi-agent Ms and
then I'm going to have to clean some
then I'm going to have to clean some
stuff up uh I'm going to take a few
stuff up uh I'm going to take a few
minutes and then I will be back be back
minutes and then I will be back be back
in a
few
e
e
e
e
e
e
e
e
e
e
e
e
e
e
e e
okay um I'm going pretty soon but I want
okay um I'm going pretty soon but I want
to make sure we get this brunches early
to make sure we get this brunches early
apparently here the holidays there's
apparently here the holidays there's
some family around I may or may not do
some family around I may or may not do
an afternoon stream today we will
an afternoon stream today we will
see but this is going pretty
nicely I really don't like how much
nicely I really don't like how much
stuff has to get repeated across
stuff has to get repeated across
gymnasium and pettings and that's just
gymnasium and pettings and that's just
why
why
they're the two apis are a total
they're the two apis are a total
pain
pain
um this code probably has to
um this code probably has to
go I can just YOLO this onto the uh
go I can just YOLO this onto the uh
yeah to right here
maybe I mean I know I've thought about
maybe I mean I know I've thought about
this code like so many times and like if
this code like so many times and like if
there's a way to simplify it there just
there's a way to simplify it there just
really isn't get rid of these at
least I kind of don't really bother too
least I kind of don't really bother too
much with him because eventually we're
much with him because eventually we're
just going to replace both of these apis
just going to replace both of these apis
entirely like we're building so many new
entirely like we're building so many new
environments in puffer lib um and like
environments in puffer lib um and like
we're directly collaborating with people
we're directly collaborating with people
building other M's that eventually I
building other M's that eventually I
think we'll just have everything on
think we'll just have everything on
either on the puffer one or something
either on the puffer one or something
that's like a very close wrapper away
that's like a very close wrapper away
from puffer and then we just won't have
from puffer and then we just won't have
to
care which would be nice uh do I even
care which would be nice uh do I even
have like a
good
good
multi-agent test for this the thing they
multi-agent test for this the thing they
really aren't
really aren't
like they just aren't good environments
like they just aren't good environments
to test stuff with fish let's try this
to test stuff with fish let's try this
big
fish
fish
16 oh it is 96 though right this work
broken
pipe oh I know what this
is yeah now I have to modify all the
is yeah now I have to modify all the
environment this is the the price that I
environment this is the the price that I
have to pay for this
we have to add buff
here there you
here there you
go it's actually a bit FAS F than before
go it's actually a bit FAS F than before
7.5 the environment's super fast here
7.5 the environment's super fast here
it's just their default models really
it's just their default models really
slow
oops hold on I might be going
now never mind I got 45 minutes
now never mind I got 45 minutes
apparently yeah even
better how's Discord miss
anything more like jamanji
upgrade to 2.2
I push something for like 30 minutes and
I push something for like 30 minutes and
already people uh get the wrong version
already people uh get the wrong version
it's like damn
it finish
this I actually highly recommend this if
this I actually highly recommend this if
you're not trying to be insane and have
you're not trying to be insane and have
like a th000 calorie protein shake you
like a th000 calorie protein shake you
can make the exact same thing with just
can make the exact same thing with just
whole milk instead of heavy cream and
whole milk instead of heavy cream and
it's a 500 calorie
shake so this is all paid off with the
shake so this is all paid off with the
morning
run so yeah I have to change all all the
run so yeah I have to change all all the
bloody environments is the annoying
bloody environments is the annoying
thing
now I guess I'll just do that
I don't even think we have be
sweet I'm really not as concerned
sweet I'm really not as concerned
anymore with all these like third party
anymore with all these like third party
mends because very few people use most
mends because very few people use most
of these and
of these and
um like very few people actually use
um like very few people actually use
these and they're slow anyways like we
these and they're slow anyways like we
have all sorts of new environments for
have all sorts of new environments for
people to use now so like I think we
people to use now so like I think we
it's always very risky to just like say
it's always very risky to just like say
now we're going to do our own thing and
now we're going to do our own thing and
like move everything mostly onto that
like move everything mostly onto that
but I think it's actually good enough to
but I think it's actually good enough to
now uh where that makes that actually
now uh where that makes that actually
makes real
sense like do you even really need I
sense like do you even really need I
guess like oh it's a classic task or
guess like oh it's a classic task or
whatever but like do you really care
whatever but like do you really care
care about like evaluating on Mountain
care about like evaluating on Mountain
car when you just have better
car when you just have better
environments I mean we could make our
environments I mean we could make our
own version of this if people really
own version of this if people really
wanted
wanted
it like it wouldn't be
hard maybe we should have our own cart
hard maybe we should have our own cart
pull just to show people how stupidly
pull just to show people how stupidly
fast it can
be
e e
does this not have buff in it
I think that we changed I owe them work
I think that we changed I owe them work
on this so we'll do this one
later but at least I want to make sure
later but at least I want to make sure
that we don't have
you know I think honestly the most
you know I think honestly the most
viable thing for
viable thing for
us
um is going to be to just like get
um is going to be to just like get
everyone using puffer with all the new
everyone using puffer with all the new
environments and then just like anything
environments and then just like anything
that people
that people
need uh is going to end up being on
need uh is going to end up being on
puffer So eventually we're going to make
puffer So eventually we're going to make
like the third party stuff
like the third party stuff
obsolete um but we're not going to just
obsolete um but we're not going to just
like OB like stop supporting it it's
like OB like stop supporting it it's
more that I think we'll just be able to
more that I think we'll just be able to
make all the environments that people
make all the environments that people
will want to use because they will be
will want to use because they will be
fast maybe with the exception of um like
fast maybe with the exception of um like
robotic stuff but then we'll just work
robotic stuff but then we'll just work
with those people to make sure stuff's
with those people to make sure stuff's
compatible
like these environments don't even work
like these environments don't even work
because and it's no fault of puffer Li
because and it's no fault of puffer Li
that they don't they're just they're
that they don't they're just they're
made for like such old versions of
made for like such old versions of
python and stuff they just haven't been
python and stuff they just haven't been
maintained in like seven years
I would like to test net hack though net
I would like to test net hack though net
hack's
cool so we'll do
cool so we'll do
that oops right
here hat
two te
workers there we go
m is actually decent here it's just yeah
m is actually decent here it's just yeah
we can definitely make this this a lot
we can definitely make this this a lot
faster if people want
it environments
think I have to
add add this to it
okay so you
okay so you
actually this is uh Kim's
actually this is uh Kim's
work go follow on X if you are
work go follow on X if you are
interested
interested
in continuous
control and this seems like this works
Joo NE hack we actually do care about as
Joo NE hack we actually do care about as
well
I really like net hack if anybody wants
I really like net hack if anybody wants
to uh really try to make net hack work I
to uh really try to make net hack work I
would be very
would be very
supportive and puffer Li do offline RL
supportive and puffer Li do offline RL
if someone has a lot of training data
if someone has a lot of training data
sitting
sitting
around uh no we don't have offline stuff
around uh no we don't have offline stuff
at the moment but the thing is
at the moment but the thing is
like if online learning is this hard
like if online learning is this hard
offline learning is like you got to dig
offline learning is like you got to dig
for it it's just super vised learning I
for it it's just super vised learning I
mean you can literally just write you
mean you can literally just write you
can write up like offline learning and I
can write up like offline learning and I
don't know 150 lines of code and there's
don't know 150 lines of code and there's
like there's nothing clever to do there
like there's nothing clever to do there
either it's literally just supervised
either it's literally just supervised
learning you don't have any of the
learning you don't have any of the
issues of um of like getting data from
issues of um of like getting data from
simulators or
anything it's like really pretty
trivial I don't work on offline just
trivial I don't work on offline just
simply because there's like there's
simply because there's like there's
really nothing to do there
I mean it's like one of those things
I mean it's like one of those things
where like look if if some company
where like look if if some company
really wanted just like to use our RL
really wanted just like to use our RL
expertise and like let's say they wanted
expertise and like let's say they wanted
like carb stuff like our carbs
like carb stuff like our carbs
Integrations for offline or like they
Integrations for offline or like they
wanted you know us to look at stuff in
wanted you know us to look at stuff in
that way then yeah we could do it it's
that way then yeah we could do it it's
just it's a pretty big deviation from
just it's a pretty big deviation from
what I'm trying to do with puffer know
what I'm trying to do with puffer know
so there'd be a premium on it um but
so there'd be a premium on it um but
alternatively it's like it's not that
alternatively it's like it's not that
hard so if you want offline support in
hard so if you want offline support in
puffer for free just like PR it and then
puffer for free just like PR it and then
we'll test it against all our
we'll test it against all our
environments right can be it's a pretty
environments right can be it's a pretty
easy way to do
easy way to do
stuff like it's we're not going to
stuff like it's we're not going to
reject PRS that just like you know a
reject PRS that just like you know a
simple offline script compatible with
demo. it's just not what I'm focused
on that's kind of how we do
on that's kind of how we do
stuff and the way I see it is
stuff and the way I see it is
like I have an agenda in my head for how
like I have an agenda in my head for how
I see RL being fixed in the next 12
I see RL being fixed in the next 12
months and anything that is going to
months and anything that is going to
anything that's going to like
anything that's going to like
deviate a little from that is like
deviate a little from that is like
premium stuff and anything that's going
premium stuff and anything that's going
to deviate a lot from that is extra
to deviate a lot from that is extra
premium stuff
n hack works it's even faster than
n hack works it's even faster than
before that's probably just this machine
before that's probably just this machine
being
better I did actually make a couple
better I did actually make a couple
fixes that could have improved that come
fixes that could have improved that come
to think of it
I would like to make sure neural MMO at
I would like to make sure neural MMO at
least
Works oo
bug that's nice we actually get a bug
bug that's nice we actually get a bug
fix out of this
D that is so
D that is so
sad look at
this Nur Mo 3 literally
this Nur Mo 3 literally
trains with the same size model
trains with the same size model
over a 100 times faster
not
four e
raer
class we do care about Pokémon Pokemon
class we do care about Pokémon Pokemon
is a active supported project under
puffer it's very cool project in
puffer it's very cool project in
fact there's their own uh we have our
fact there's their own uh we have our
own Discord for that as
own Discord for that as
well most of the work there's being done
well most of the work there's being done
by that guy though there've been several
by that guy though there've been several
other contributors
prior does this
prior does this
work for
and
SP David
SP David
hen I chatted with him at ner so when
hen I chatted with him at ner so when
his honor I will make sure his
his honor I will make sure his
environment Works provided it is not
environment Works provided it is not
cursed
oh yeah it's like an old version of of
oh yeah it's like an old version of of
python I think right yeah it's annoying
python I think right yeah it's annoying
well this will I The Binding is going to
well this will I The Binding is going to
be just as good as it was before
annoying we also don't really do
annoying we also don't really do
smack it's like just slow and nobody
smack it's like just slow and nobody
uses
uses
it no
it no
point and like stable retro it's like
point and like stable retro it's like
really cool project in theory but you
really cool project in theory but you
can only run one of these per process
can only run one of these per process
and it's slow it's
and it's slow it's
like I guess we it like we could try
like I guess we it like we could try
really hard if we wanted to but like
really hard if we wanted to but like
there's no point
just burning
money do we use these for anything
I don't know if we even use
this yeah they don't sub
class think we'll leave that for
class think we'll leave that for
now do you have a 3D Puff for us we do
now do you have a 3D Puff for us we do
indeed do you uh do you have an
indeed do you uh do you have an
environment in
environment in
mind are you going to make it the ball
mind are you going to make it the ball
in uh the code game the code ball
game in fact the 3D the animation that
game in fact the 3D the animation that
we have where it puffs up and stuff we
we have where it puffs up and stuff we
have that in 3D as
have that in 3D as
well might make it the hero of the story
well might make it the hero of the story
story that sounds
story that sounds
fun
boing yeah so we do have 3D models I I
boing yeah so we do have 3D models I I
got to figure out how to separate like
got to figure out how to separate like
the animations out but yeah I can get
the animations out but yeah I can get
you those
files a very Pro puffer around here
what are you
what are you
doing currently fixing up some
doing currently fixing up some
environments for the new infrastructure
environments for the new infrastructure
and Puffer that makes parallel
and Puffer that makes parallel
simulation a little easier we'll come
simulation a little easier we'll come
back to puffer very
good almost
done it's called Doom
and all we have to do is change this
to the
hardware oh yeah I remember that I'm
hardware oh yeah I remember that I'm
sure it works it's
sure it works it's
fine Doom specifically is a little
quirky okay but this should be a decent
quirky okay but this should be a decent
um decent pack
I guess I'll go get like the squared
I guess I'll go get like the squared
python
python
code for a test environment I've got
code for a test environment I've got
like 20 minutes before I got to go I
like 20 minutes before I got to go I
might be able to finish that
up e
let me go find the old squared
code do you think setting up little 3D
code do you think setting up little 3D
running animations is hard in Raab I
running animations is hard in Raab I
haven't tried I mean the uh code ball
haven't tried I mean the uh code ball
stuff uh in the Discord somebody's been
stuff uh in the Discord somebody's been
doing
it and you can try it and let me
it and you can try it and let me
know if it's hard or not
know if it's hard or not
it' be nice to know because
it' be nice to know because
like there are a lot of games we could
like there are a lot of games we could
make 3D front ends for you
know like uh impulse Wars could very
know like uh impulse Wars could very
easily have a 3D front end 2D Sim 3D
easily have a 3D front end 2D Sim 3D
front end it's a pretty fun
combination it's used in a lot of modern
games for
okay so here's
qued e
we go I have to look at uh couple things
here
for
e e
of where's this
get
up now this is going to be
down
one basically I'm just porting the uh
one basically I'm just porting the uh
this environment to Pure python as a
this environment to Pure python as a
little demo for people
yeah
e e
is True Rewards
is True Rewards
is
1.0 then you
1.0 then you
do s. reset
turn
Okay isn't it crazy how this code is
Okay isn't it crazy how this code is
literally the same length in Python I
literally the same length in Python I
guess you don't have the memory
guess you don't have the memory
allocations and stuff
allocations and stuff
but it's like not any easier
so
um e
there no log on
this oh yeah cuz it's just a reward
um self.
um self.
rewards ah I see how I did
rewards ah I see how I did
this
fine for
this POS do
one
empty and then we need to do
where's
render oops looks like I got to go in a
render oops looks like I got to go in a
second hold
on got like 5 minutes going to brunch
on got like 5 minutes going to brunch
with
with
family if I get this word
working if I skip the render I think I
will
e e
so we're going to do
M no config
buffer Pi
squ no module named PFF ocean Pi
squ
squ uh num m is going to be one for
I think I have to add num Ms for
I think I have to add num Ms for
now kind of
silly Le we get real errors
silly Le we get real errors
um out of bounds for size one
one and 121 okay so this is
one and 121 okay so this is
actually you got to do like a zero
one
indexed e
all right I got a run I'll fix this
all right I got a run I'll fix this
later it's almost there it's like almost
later it's almost there it's like almost
almost there
almost there
um
um
run no still no okay we'll fix this
run no still no okay we'll fix this
later uh thanks for tuning in folks join
later uh thanks for tuning in folks join
discord.
discord.
GPU if you want to follow the project
GPU if you want to follow the project
I'm on xjar 5341 as well I post a bunch
I'm on xjar 5341 as well I post a bunch
of far out and I'll be streaming this a
of far out and I'll be streaming this a
lot if you want to help out the project
lot if you want to help out the project
for free Star Puffer lip
